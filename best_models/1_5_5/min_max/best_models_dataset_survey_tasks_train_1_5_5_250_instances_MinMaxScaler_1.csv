Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8906;0.894;0.8906;0.8901;0.8696;0.8811;0.8696;0.8684;0.9667;0.9697;0.9667;0.967;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
RandomForestClassifier;0.8888;0.895;0.8888;0.8891;0.8986;0.901;0.8986;0.8995;0.9667;0.9697;0.9667;0.967;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
RandomForestClassifier;0.8872;0.892;0.8872;0.8871;0.9275;0.9285;0.9275;0.9268;0.9667;0.9697;0.9667;0.967;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
RandomForestClassifier;0.8793;0.8818;0.8793;0.8786;0.942;0.9426;0.942;0.942;0.9667;0.9697;0.9667;0.967;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
RandomForestClassifier;0.9018;0.9058;0.9018;0.9019;0.942;0.9448;0.942;0.9426;0.9667;0.9675;0.9667;0.9667;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 383};RandomForestClassifier(n_estimators=10, random_state=383)
KNeighborsClassifier;0.8004;0.8148;0.8004;0.8004;0.8261;0.8501;0.8261;0.8279;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8889;0.8913;0.8889;0.8887;0.8696;0.8714;0.8696;0.8694;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
RandomForestClassifier;0.9067;0.9109;0.9067;0.9069;0.9565;0.9577;0.9565;0.9568;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
RandomForestClassifier;0.8971;0.9018;0.8971;0.8974;0.8696;0.8716;0.8696;0.8671;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
RandomForestClassifier;0.8953;0.8983;0.8953;0.8946;0.8696;0.874;0.8696;0.8707;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
RandomForestClassifier;0.8968;0.9023;0.8968;0.8966;0.8841;0.8822;0.8841;0.882;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
RandomForestClassifier;0.8921;0.8966;0.8921;0.8919;0.8551;0.8552;0.8551;0.8543;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 692};RandomForestClassifier(n_estimators=10, random_state=692)
RandomForestClassifier;0.8938;0.8978;0.8938;0.8936;0.8551;0.8624;0.8551;0.8558;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
RandomForestClassifier;0.876;0.8824;0.876;0.876;0.942;0.947;0.942;0.9418;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 692};RandomForestClassifier(n_estimators=10, random_state=692)
DecisionTreeClassifier;0.8712;0.8737;0.8712;0.871;0.8116;0.8269;0.8116;0.8154;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
KNeighborsClassifier;0.8101;0.8245;0.8101;0.8089;0.8696;0.8719;0.8696;0.8682;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7906;0.8089;0.7906;0.7904;0.9275;0.9336;0.9275;0.9286;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8197;0.8313;0.8197;0.8199;0.8261;0.8318;0.8261;0.8265;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8518;0.8571;0.8518;0.8521;0.8406;0.8452;0.8406;0.8411;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
KNeighborsClassifier;0.789;0.8085;0.789;0.79;0.8551;0.8731;0.8551;0.8536;0.95;0.9565;0.95;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8873;0.8916;0.8873;0.8874;0.8986;0.9009;0.8986;0.8972;0.95;0.9516;0.95;0.9504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
RandomForestClassifier;0.9002;0.9024;0.9002;0.9;0.913;0.9244;0.913;0.9123;0.95;0.9516;0.95;0.9504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
KNeighborsClassifier;0.8327;0.8414;0.8327;0.8321;0.7971;0.8;0.7971;0.7967;0.9333;0.9444;0.9333;0.9346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8679;0.8707;0.8679;0.8676;0.8551;0.8578;0.8551;0.8544;0.9333;0.9444;0.9333;0.9346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
RandomForestClassifier;0.9033;0.9064;0.9033;0.9032;0.8841;0.8858;0.8841;0.8847;0.9333;0.9444;0.9333;0.9346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
KNeighborsClassifier;0.8084;0.8253;0.8084;0.8079;0.8986;0.9009;0.8986;0.8972;0.9333;0.9444;0.9333;0.9346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8583;0.8623;0.8583;0.8583;0.8986;0.8997;0.8986;0.8988;0.9333;0.9444;0.9333;0.9346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
KNeighborsClassifier;0.8034;0.8237;0.8034;0.8035;0.7681;0.7709;0.7681;0.7656;0.9333;0.9444;0.9333;0.9346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8164;0.829;0.8164;0.8165;0.8406;0.8471;0.8406;0.8406;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9082;0.9117;0.9082;0.9074;0.7971;0.7996;0.7971;0.7975;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
KNeighborsClassifier;0.8115;0.8269;0.8115;0.8108;0.8551;0.8741;0.8551;0.8562;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8244;0.8415;0.8244;0.8245;0.8696;0.873;0.8696;0.8704;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8937;0.8994;0.8937;0.8927;0.8986;0.8994;0.8986;0.8981;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 634};RandomForestClassifier(n_estimators=10, random_state=634)
KNeighborsClassifier;0.7858;0.8036;0.7858;0.7849;0.8406;0.8468;0.8406;0.839;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7875;0.7995;0.7875;0.7853;0.913;0.9184;0.913;0.9138;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8857;0.8887;0.8857;0.8856;0.8841;0.8932;0.8841;0.8846;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
KNeighborsClassifier;0.7827;0.8027;0.7827;0.7821;0.8986;0.8984;0.8986;0.8982;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7857;0.8093;0.7857;0.786;0.8841;0.8974;0.8841;0.882;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8907;0.895;0.8907;0.891;0.8986;0.8984;0.8986;0.8982;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
KNeighborsClassifier;0.8068;0.8227;0.8068;0.8065;0.8696;0.8794;0.8696;0.8697;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7988;0.8196;0.7988;0.7972;0.8986;0.9018;0.8986;0.899;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7859;0.8037;0.7859;0.785;0.8406;0.8512;0.8406;0.8402;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7971;0.818;0.7971;0.7967;0.8696;0.8862;0.8696;0.8712;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9018;0.9062;0.9018;0.9014;0.8986;0.8988;0.8986;0.8978;0.9333;0.937;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
KNeighborsClassifier;0.8117;0.8253;0.8117;0.812;0.8261;0.8519;0.8261;0.8262;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8905;0.8967;0.8905;0.8907;0.8986;0.9012;0.8986;0.8991;0.9333;0.9444;0.9333;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
DecisionTreeClassifier;0.868;0.872;0.868;0.8681;0.7826;0.813;0.7826;0.784;0.9333;0.9379;0.9333;0.934;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
DecisionTreeClassifier;0.8535;0.8605;0.8535;0.8534;0.8841;0.8852;0.8841;0.8843;0.9333;0.9379;0.9333;0.934;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
RandomForestClassifier;0.9016;0.9038;0.9016;0.9015;0.942;0.9426;0.942;0.942;0.9333;0.9379;0.9333;0.934;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
RandomForestClassifier;0.9003;0.9036;0.9003;0.8999;0.8261;0.8333;0.8261;0.8265;0.9333;0.9349;0.9333;0.9337;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
DecisionTreeClassifier;0.8535;0.8563;0.8535;0.8531;0.7826;0.7817;0.7826;0.7814;0.9333;0.9349;0.9333;0.9337;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
DecisionTreeClassifier;0.8567;0.8634;0.8567;0.8556;0.8116;0.8098;0.8116;0.8075;0.9333;0.939;0.9333;0.9336;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
RandomForestClassifier;0.905;0.9078;0.905;0.9047;0.8551;0.8683;0.8551;0.857;0.9333;0.934;0.9333;0.9333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
DecisionTreeClassifier;0.8438;0.8496;0.8438;0.8444;0.8986;0.9031;0.8986;0.8982;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
KNeighborsClassifier;0.8148;0.833;0.8148;0.8143;0.8841;0.8993;0.8841;0.8843;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8003;0.8177;0.8003;0.8002;0.8841;0.8993;0.8841;0.8843;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8567;0.8647;0.8567;0.8557;0.8406;0.8442;0.8406;0.8417;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
SVC;0.752;0.7823;0.752;0.7538;0.913;0.9142;0.913;0.9133;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
SVC;0.757;0.783;0.757;0.7587;0.8696;0.8871;0.8696;0.8692;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
SVC;0.7552;0.7761;0.7552;0.756;0.8551;0.8716;0.8551;0.8544;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
SVC;0.7585;0.7887;0.7585;0.7593;0.7826;0.8096;0.7826;0.7861;0.9167;0.9245;0.9167;0.9181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
KNeighborsClassifier;0.8198;0.8369;0.8198;0.8191;0.8261;0.8361;0.8261;0.8258;0.9167;0.9235;0.9167;0.9176;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8035;0.8194;0.8035;0.8037;0.8696;0.8694;0.8696;0.8692;0.9167;0.9235;0.9167;0.9176;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7858;0.8033;0.7858;0.7858;0.913;0.9189;0.913;0.9138;0.9167;0.9235;0.9167;0.9176;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7955;0.8206;0.7955;0.7951;0.8551;0.8611;0.8551;0.8522;0.9167;0.9235;0.9167;0.9176;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.7504;0.786;0.7504;0.7525;0.8841;0.8861;0.8841;0.8843;0.9167;0.9235;0.9167;0.9176;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
KNeighborsClassifier;0.7987;0.8163;0.7987;0.7977;0.8551;0.8688;0.8551;0.8565;0.9167;0.9254;0.9167;0.9175;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7971;0.8111;0.7971;0.7965;0.8841;0.8848;0.8841;0.8833;0.9167;0.9254;0.9167;0.9175;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9034;0.9067;0.9034;0.9027;0.8261;0.8284;0.8261;0.8254;0.9167;0.919;0.9167;0.9175;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
RandomForestClassifier;0.897;0.9026;0.897;0.8974;0.8696;0.8736;0.8696;0.8691;0.9167;0.919;0.9167;0.9175;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
DecisionTreeClassifier;0.8712;0.8751;0.8712;0.8703;0.7971;0.7994;0.7971;0.798;0.9167;0.9212;0.9167;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
DecisionTreeClassifier;0.8519;0.8565;0.8519;0.8513;0.8841;0.8845;0.8841;0.884;0.9167;0.9206;0.9167;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
DecisionTreeClassifier;0.8485;0.8527;0.8485;0.848;0.8696;0.8778;0.8696;0.8715;0.9167;0.9206;0.9167;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
KNeighborsClassifier;0.81;0.8308;0.81;0.8107;0.8406;0.8413;0.8406;0.8401;0.9167;0.9333;0.9167;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8647;0.8687;0.8647;0.8651;0.8261;0.8525;0.8261;0.8264;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
DecisionTreeClassifier;0.8502;0.8544;0.8502;0.8502;0.7971;0.7999;0.7971;0.7975;0.9167;0.9182;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
RandomForestClassifier;0.8905;0.8944;0.8905;0.8907;0.8841;0.8932;0.8841;0.8846;0.9167;0.9182;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 634};RandomForestClassifier(n_estimators=20, random_state=634)
DecisionTreeClassifier;0.8647;0.8703;0.8647;0.8644;0.8551;0.8591;0.8551;0.8534;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
DecisionTreeClassifier;0.8695;0.8726;0.8695;0.8692;0.7681;0.7656;0.7681;0.7639;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
RandomForestClassifier;0.9066;0.9083;0.9066;0.9063;0.8551;0.8569;0.8551;0.8549;0.9167;0.9228;0.9167;0.9168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 383};RandomForestClassifier(n_estimators=20, random_state=383)
RandomForestClassifier;0.8888;0.8937;0.8888;0.8891;0.8696;0.8709;0.8696;0.8694;0.9167;0.9278;0.9167;0.916;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 634};RandomForestClassifier(n_estimators=10, random_state=634)
SVC;0.7553;0.7897;0.7553;0.757;0.9565;0.9588;0.9565;0.9565;0.9;0.912;0.9;0.9019;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.7601;0.7829;0.7601;0.7618;0.8551;0.8639;0.8551;0.8574;0.9;0.912;0.9;0.9019;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
SVC;0.7424;0.7815;0.7424;0.7466;0.8261;0.8395;0.8261;0.8268;0.9;0.912;0.9;0.9019;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.7552;0.7858;0.7552;0.7572;0.8116;0.829;0.8116;0.8149;0.9;0.912;0.9;0.9019;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.7778;0.7978;0.7778;0.78;0.7971;0.8083;0.7971;0.8003;0.9;0.912;0.9;0.9019;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
DecisionTreeClassifier;0.8647;0.8723;0.8647;0.8642;0.8261;0.8363;0.8261;0.8279;0.9;0.9048;0.9;0.9012;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
DecisionTreeClassifier;0.8584;0.8619;0.8584;0.8579;0.8551;0.8603;0.8551;0.8559;0.9;0.9069;0.9;0.901;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
SVC;0.7714;0.8007;0.7714;0.7736;0.8116;0.8294;0.8116;0.816;0.9;0.9069;0.9;0.901;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.7391;0.766;0.7391;0.7415;0.8406;0.8477;0.8406;0.8355;0.9;0.9109;0.9;0.901;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
DecisionTreeClassifier;0.8744;0.8799;0.8744;0.8736;0.7681;0.7691;0.7681;0.7684;0.9;0.9045;0.9;0.9007;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
KNeighborsClassifier;0.8084;0.8186;0.8084;0.8086;0.8841;0.8849;0.8841;0.8836;0.9;0.9042;0.9;0.9006;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8663;0.871;0.8663;0.8659;0.7971;0.8098;0.7971;0.7924;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
DecisionTreeClassifier;0.8679;0.8728;0.8679;0.8683;0.7681;0.767;0.7681;0.7666;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
SVC;0.7632;0.794;0.7632;0.7645;0.7681;0.8031;0.7681;0.77;0.8833;0.9004;0.8833;0.8856;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
SVC;0.7746;0.7985;0.7746;0.7771;0.7681;0.782;0.7681;0.7672;0.8833;0.9004;0.8833;0.8856;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
SVC;0.7617;0.7919;0.7617;0.7649;0.7971;0.8087;0.7971;0.7984;0.8833;0.9004;0.8833;0.8856;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
DecisionTreeClassifier;0.8518;0.8541;0.8518;0.8512;0.8696;0.8696;0.8696;0.8696;0.8833;0.8894;0.8833;0.8848;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
SVC;0.7456;0.7758;0.7456;0.7481;0.8986;0.9067;0.8986;0.8988;0.8833;0.8935;0.8833;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
SVC;0.744;0.7697;0.744;0.7457;0.7681;0.793;0.7681;0.7711;0.8833;0.8935;0.8833;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
SVC;0.7633;0.7894;0.7633;0.7626;0.8116;0.8286;0.8116;0.8111;0.8833;0.8935;0.8833;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
SVC;0.7584;0.7862;0.7584;0.7602;0.7391;0.7546;0.7391;0.7413;0.8833;0.8935;0.8833;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.768;0.7921;0.768;0.7689;0.7971;0.7952;0.7971;0.7915;0.8833;0.8935;0.8833;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.7584;0.7878;0.7584;0.7601;0.8551;0.8613;0.8551;0.8557;0.8833;0.8992;0.8833;0.884;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
MLPClassifier;0.7647;0.7806;0.7647;0.766;0.8696;0.8717;0.8696;0.865;0.8833;0.8992;0.8833;0.884;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
DecisionTreeClassifier;0.8519;0.8563;0.8519;0.8513;0.8116;0.8269;0.8116;0.8154;0.8667;0.8796;0.8667;0.8692;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
SVC;0.7488;0.7757;0.7488;0.7511;0.9855;0.9861;0.9855;0.9855;0.8667;0.8894;0.8667;0.8689;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.7568;0.7844;0.7568;0.7578;0.8696;0.8824;0.8696;0.8714;0.8667;0.8894;0.8667;0.8689;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
MLPClassifier;0.7843;0.7951;0.7843;0.7847;0.7246;0.7404;0.7246;0.7273;0.8667;0.8894;0.8667;0.8689;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
SVC;0.7569;0.7894;0.7569;0.7587;0.8406;0.85;0.8406;0.8408;0.8667;0.8894;0.8667;0.8689;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
SVC;0.7424;0.7793;0.7424;0.7454;0.8986;0.9017;0.8986;0.898;0.8667;0.8894;0.8667;0.8689;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
SVC;0.7505;0.7707;0.7505;0.752;0.8116;0.8323;0.8116;0.815;0.8667;0.8894;0.8667;0.8689;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
SVC;0.7502;0.7801;0.7502;0.7525;0.7971;0.7989;0.7971;0.7952;0.8667;0.8894;0.8667;0.8689;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 657};SVC(C=10, random_state=657)
DecisionTreeClassifier;0.8582;0.8631;0.8582;0.8575;0.8261;0.8264;0.8261;0.826;0.8667;0.8749;0.8667;0.8684;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
DecisionTreeClassifier;0.8567;0.861;0.8567;0.8567;0.7681;0.7671;0.7681;0.7674;0.8667;0.8727;0.8667;0.8682;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
SVC;0.7522;0.7818;0.7522;0.7545;0.8696;0.8849;0.8696;0.8683;0.8667;0.8808;0.8667;0.8675;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
SVC;0.7617;0.7906;0.7617;0.7633;0.7971;0.819;0.7971;0.7984;0.8667;0.8808;0.8667;0.8675;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 145};SVC(C=10, random_state=145)
DecisionTreeClassifier;0.8438;0.8472;0.8438;0.8428;0.8551;0.8581;0.8551;0.8555;0.8667;0.8692;0.8667;0.8669;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 645};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=645)
MLPClassifier;0.7713;0.7815;0.7713;0.7713;0.8261;0.8271;0.8261;0.8263;0.8667;0.888;0.8667;0.8668;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
MLPClassifier;0.7745;0.7918;0.7745;0.7747;0.8406;0.8423;0.8406;0.8412;0.8667;0.888;0.8667;0.8668;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
MLPClassifier;0.7569;0.7742;0.7569;0.7583;0.8261;0.8324;0.8261;0.8256;0.8667;0.888;0.8667;0.8668;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7745;0.7885;0.7745;0.7755;0.8116;0.822;0.8116;0.8104;0.8667;0.888;0.8667;0.8668;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
DecisionTreeClassifier;0.8615;0.8643;0.8615;0.8605;0.7681;0.7798;0.7681;0.7709;0.8667;0.875;0.8667;0.8668;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
MLPClassifier;0.7747;0.7927;0.7747;0.7758;0.7536;0.7845;0.7536;0.7563;0.85;0.879;0.85;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7697;0.7859;0.7697;0.7704;0.7971;0.8103;0.7971;0.7995;0.85;0.879;0.85;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
SVC;0.7649;0.8004;0.7649;0.7663;0.8116;0.8367;0.8116;0.8119;0.85;0.879;0.85;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 693};SVC(C=10, random_state=693)
MLPClassifier;0.7632;0.7766;0.7632;0.7646;0.8116;0.8268;0.8116;0.8129;0.85;0.879;0.85;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7537;0.7707;0.7537;0.7542;0.8406;0.8524;0.8406;0.8418;0.85;0.879;0.85;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7761;0.7906;0.7761;0.7772;0.8406;0.8462;0.8406;0.8423;0.85;0.879;0.85;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7681;0.7837;0.7681;0.769;0.8116;0.8179;0.8116;0.813;0.85;0.8599;0.85;0.8507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7616;0.7834;0.7616;0.763;0.7391;0.7394;0.7391;0.739;0.85;0.865;0.85;0.8507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
MLPClassifier;0.7553;0.7751;0.7553;0.7567;0.8551;0.8713;0.8551;0.8541;0.85;0.8686;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7745;0.7881;0.7745;0.7732;0.7826;0.8052;0.7826;0.7887;0.85;0.8686;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7713;0.7853;0.7713;0.7709;0.7971;0.8006;0.7971;0.7981;0.85;0.8678;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7648;0.7798;0.7648;0.7668;0.7826;0.7883;0.7826;0.7838;0.85;0.8678;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
MLPClassifier;0.7682;0.7817;0.7682;0.7691;0.7681;0.7694;0.7681;0.767;0.85;0.8678;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7713;0.79;0.7713;0.7721;0.7826;0.7908;0.7826;0.7831;0.85;0.8698;0.85;0.8469;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
DecisionTreeClassifier;0.8566;0.8631;0.8566;0.8564;0.8551;0.8649;0.8551;0.8556;0.8333;0.8409;0.8333;0.8356;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 54};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=54)
MLPClassifier;0.7858;0.7971;0.7858;0.7857;0.7391;0.7407;0.7391;0.7383;0.8333;0.8486;0.8333;0.8354;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7779;0.7906;0.7779;0.7779;0.7101;0.7237;0.7101;0.7067;0.8333;0.8577;0.8333;0.8352;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7633;0.7813;0.7633;0.7641;0.8261;0.8318;0.8261;0.8258;0.8333;0.869;0.8333;0.8346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7729;0.7843;0.7729;0.7734;0.7536;0.75;0.7536;0.7502;0.8333;0.8475;0.8333;0.8336;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7681;0.7877;0.7681;0.7691;0.7681;0.7841;0.7681;0.7719;0.8333;0.8488;0.8333;0.8332;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.7696;0.7834;0.7696;0.7695;0.7826;0.7964;0.7826;0.7801;0.8333;0.8599;0.8333;0.8321;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
MLPClassifier;0.768;0.7803;0.768;0.7674;0.7681;0.774;0.7681;0.7662;0.8333;0.8483;0.8333;0.8307;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
MLPClassifier;0.7583;0.7689;0.7583;0.7578;0.8116;0.8139;0.8116;0.812;0.8333;0.8529;0.8333;0.8267;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
MLPClassifier;0.7729;0.784;0.7729;0.7742;0.7536;0.7923;0.7536;0.7571;0.8167;0.8475;0.8167;0.8179;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 37, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=37)
MLPClassifier;0.7665;0.7792;0.7665;0.7673;0.7826;0.7839;0.7826;0.781;0.8167;0.8335;0.8167;0.8141;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.7698;0.7869;0.7698;0.7699;0.7246;0.7261;0.7246;0.7252;0.8;0.8087;0.8;0.7973;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 929, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=929)
DecisionTreeClassifier;0.8437;0.8492;0.8437;0.8437;0.6667;0.6662;0.6667;0.6662;0.8;0.7953;0.8;0.7963;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=522)
LogisticRegression;0.7423;0.7696;0.7423;0.7439;0.6087;0.6458;0.6087;0.6106;0.75;0.7864;0.75;0.7568;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.7182;0.7442;0.7182;0.719;0.6087;0.6213;0.6087;0.6125;0.75;0.7754;0.75;0.752;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7198;0.7529;0.7198;0.7205;0.6522;0.6645;0.6522;0.6528;0.75;0.7639;0.75;0.75;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.7231;0.7498;0.7231;0.7245;0.7246;0.7808;0.7246;0.7302;0.7333;0.7666;0.7333;0.7405;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.7327;0.7627;0.7327;0.7346;0.6232;0.6919;0.6232;0.6219;0.7333;0.7702;0.7333;0.7383;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.72;0.7432;0.72;0.7218;0.7246;0.787;0.7246;0.7311;0.7167;0.7518;0.7167;0.7223;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7247;0.7524;0.7247;0.726;0.7246;0.731;0.7246;0.7182;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.723;0.7466;0.723;0.7204;0.7391;0.7654;0.7391;0.742;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7118;0.7349;0.7118;0.7107;0.7681;0.7857;0.7681;0.7682;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.715;0.7485;0.715;0.7163;0.7391;0.7654;0.7391;0.742;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.723;0.7529;0.723;0.7241;0.6812;0.7104;0.6812;0.6815;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.7247;0.7514;0.7247;0.7259;0.6812;0.6897;0.6812;0.6817;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.7149;0.7479;0.7149;0.7155;0.6957;0.7108;0.6957;0.6859;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7246;0.7636;0.7246;0.7263;0.6812;0.6956;0.6812;0.6847;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6991;0.7204;0.6991;0.698;0.8261;0.8497;0.8261;0.8285;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7248;0.7523;0.7248;0.7243;0.6667;0.6919;0.6667;0.6652;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6974;0.727;0.6974;0.6981;0.8551;0.866;0.8551;0.8576;0.7;0.7343;0.7;0.7062;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.7135;0.7378;0.7135;0.7136;0.7681;0.7927;0.7681;0.7724;0.6833;0.7174;0.6833;0.69;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7085;0.731;0.7085;0.7078;0.8261;0.8537;0.8261;0.8231;0.6833;0.7174;0.6833;0.69;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.7119;0.7378;0.7119;0.711;0.6667;0.7252;0.6667;0.6661;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7199;0.7548;0.7199;0.7197;0.7101;0.7365;0.7101;0.7135;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7183;0.7479;0.7183;0.717;0.7391;0.7454;0.7391;0.7407;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7213;0.7574;0.7213;0.7229;0.7101;0.7098;0.7101;0.7097;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.7182;0.7442;0.7182;0.7191;0.7246;0.7435;0.7246;0.721;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.718;0.743;0.718;0.7177;0.6812;0.7073;0.6812;0.6809;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.7133;0.7411;0.7133;0.7138;0.7536;0.8068;0.7536;0.7602;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 569, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=569)"
LogisticRegression;0.7069;0.735;0.7069;0.7083;0.7391;0.7929;0.7391;0.7422;0.6833;0.7253;0.6833;0.6892;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.7198;0.7515;0.7198;0.7209;0.6522;0.6614;0.6522;0.6498;0.6833;0.7341;0.6833;0.6875;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.7085;0.734;0.7085;0.7099;0.7971;0.8328;0.7971;0.7988;0.6667;0.7083;0.6667;0.6731;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.7279;0.7585;0.7279;0.7275;0.7391;0.7465;0.7391;0.7399;0.6667;0.7083;0.6667;0.6731;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
