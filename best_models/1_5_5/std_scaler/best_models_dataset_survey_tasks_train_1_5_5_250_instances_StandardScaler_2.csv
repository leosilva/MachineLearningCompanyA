Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8292;0.8359;0.8292;0.8271;0.8696;0.8731;0.8696;0.8696;0.8167;0.8406;0.8167;0.8162;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8535;0.8565;0.8535;0.8525;0.8841;0.8839;0.8841;0.8837;0.8167;0.8358;0.8167;0.8135;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 211};RandomForestClassifier(n_estimators=20, random_state=211)
MLPClassifier;0.8245;0.8382;0.8245;0.8215;0.7971;0.8025;0.7971;0.797;0.8;0.8221;0.8;0.8032;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
KNeighborsClassifier;0.8214;0.8317;0.8214;0.8202;0.8261;0.8397;0.8261;0.8244;0.8;0.827;0.8;0.8019;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8342;0.8464;0.8342;0.8321;0.8986;0.9065;0.8986;0.8994;0.8;0.8373;0.8;0.8016;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 512};RandomForestClassifier(n_estimators=20, random_state=512)
RandomForestClassifier;0.836;0.8411;0.836;0.8355;0.8261;0.828;0.8261;0.8259;0.8;0.8157;0.8;0.8009;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 519};RandomForestClassifier(n_estimators=10, random_state=519)
RandomForestClassifier;0.8212;0.8283;0.8212;0.8211;0.9275;0.9304;0.9275;0.9263;0.8;0.8311;0.8;0.8004;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 519};RandomForestClassifier(n_estimators=10, random_state=519)
RandomForestClassifier;0.8535;0.8586;0.8535;0.853;0.7971;0.8068;0.7971;0.7984;0.8;0.8311;0.8;0.8004;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 519};RandomForestClassifier(n_estimators=20, random_state=519)
KNeighborsClassifier;0.8164;0.8271;0.8164;0.8133;0.8551;0.8643;0.8551;0.8549;0.8;0.8269;0.8;0.7999;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8115;0.8219;0.8115;0.8092;0.8406;0.858;0.8406;0.8429;0.8;0.8269;0.8;0.7999;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8535;0.86;0.8535;0.8527;0.7971;0.7968;0.7971;0.7967;0.8;0.8235;0.8;0.7993;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 519};RandomForestClassifier(n_estimators=10, random_state=519)
MLPClassifier;0.8131;0.8276;0.8131;0.8094;0.8841;0.885;0.8841;0.8825;0.8;0.8179;0.8;0.7984;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
RandomForestClassifier;0.8632;0.8691;0.8632;0.8625;0.8406;0.8569;0.8406;0.8434;0.8;0.8211;0.8;0.7957;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 512};RandomForestClassifier(n_estimators=5, random_state=512)
RandomForestClassifier;0.8519;0.8579;0.8519;0.8519;0.8406;0.8429;0.8406;0.8415;0.7833;0.8187;0.7833;0.7862;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 512};RandomForestClassifier(n_estimators=10, random_state=512)
RandomForestClassifier;0.855;0.8576;0.855;0.8547;0.8551;0.8567;0.8551;0.8549;0.7833;0.8119;0.7833;0.7861;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 211};RandomForestClassifier(n_estimators=20, random_state=211)
KNeighborsClassifier;0.8182;0.8226;0.8182;0.8166;0.8406;0.8406;0.8406;0.8386;0.7833;0.8116;0.7833;0.7861;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8309;0.841;0.8309;0.8292;0.8551;0.864;0.8551;0.8538;0.7833;0.8141;0.7833;0.7854;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 512};RandomForestClassifier(n_estimators=10, random_state=512)
RandomForestClassifier;0.8375;0.8437;0.8375;0.8369;0.8841;0.893;0.8841;0.8814;0.7833;0.8188;0.7833;0.784;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 519};RandomForestClassifier(n_estimators=10, random_state=519)
RandomForestClassifier;0.8455;0.8508;0.8455;0.8455;0.7971;0.8013;0.7971;0.7976;0.7833;0.805;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 211};RandomForestClassifier(n_estimators=10, random_state=211)
RandomForestClassifier;0.8567;0.8619;0.8567;0.8557;0.6522;0.6708;0.6522;0.6508;0.7833;0.8181;0.7833;0.7837;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 519};RandomForestClassifier(n_estimators=5, random_state=519)
KNeighborsClassifier;0.8357;0.8401;0.8357;0.8345;0.8406;0.8422;0.8406;0.8395;0.7833;0.7992;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8551;0.8595;0.8551;0.8541;0.7971;0.8132;0.7971;0.7956;0.7833;0.8011;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 519};RandomForestClassifier(n_estimators=20, random_state=519)
KNeighborsClassifier;0.8228;0.8303;0.8228;0.8193;0.8986;0.9141;0.8986;0.8991;0.7833;0.7992;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8261;0.8447;0.8261;0.8231;0.8116;0.8148;0.8116;0.8103;0.7833;0.8095;0.7833;0.7824;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.8133;0.8279;0.8133;0.8102;0.8406;0.8534;0.8406;0.8373;0.7833;0.8095;0.7833;0.7824;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.8439;0.8571;0.8439;0.8416;0.7536;0.7778;0.7536;0.7497;0.7833;0.802;0.7833;0.7815;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
RandomForestClassifier;0.8421;0.8474;0.8421;0.8425;0.8551;0.8623;0.8551;0.853;0.7833;0.8222;0.7833;0.781;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 211};RandomForestClassifier(n_estimators=10, random_state=211)
KNeighborsClassifier;0.8116;0.8199;0.8116;0.8098;0.7971;0.8006;0.7971;0.7972;0.7833;0.801;0.7833;0.7803;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8181;0.8245;0.8181;0.8175;0.8696;0.8736;0.8696;0.8691;0.7833;0.801;0.7833;0.7803;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8325;0.8437;0.8325;0.8294;0.8696;0.8812;0.8696;0.8663;0.7833;0.8006;0.7833;0.7778;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 512};RandomForestClassifier(n_estimators=5, random_state=512)
MLPClassifier;0.8245;0.8361;0.8245;0.8222;0.8116;0.8158;0.8116;0.8126;0.7667;0.7969;0.7667;0.7714;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
SVC;0.8084;0.8343;0.8084;0.807;0.7971;0.8196;0.7971;0.7843;0.7667;0.7969;0.7667;0.7712;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
RandomForestClassifier;0.8198;0.8285;0.8198;0.8199;0.942;0.943;0.942;0.9413;0.7667;0.7981;0.7667;0.7703;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 519};RandomForestClassifier(n_estimators=10, random_state=519)
SVC;0.781;0.8124;0.781;0.7801;0.8406;0.8417;0.8406;0.8409;0.7667;0.7822;0.7667;0.7698;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.789;0.8177;0.789;0.7866;0.8551;0.8837;0.8551;0.8538;0.7667;0.7897;0.7667;0.7698;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
MLPClassifier;0.8164;0.8279;0.8164;0.8145;0.8986;0.9025;0.8986;0.8986;0.7667;0.7822;0.7667;0.7698;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
MLPClassifier;0.8197;0.8333;0.8197;0.8162;0.8116;0.8128;0.8116;0.8086;0.7667;0.7819;0.7667;0.7687;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
RandomForestClassifier;0.8552;0.862;0.8552;0.8544;0.8406;0.8422;0.8406;0.8404;0.7667;0.8153;0.7667;0.7686;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 519};RandomForestClassifier(n_estimators=5, random_state=519)
RandomForestClassifier;0.86;0.8662;0.86;0.8598;0.8696;0.875;0.8696;0.8702;0.7667;0.8153;0.7667;0.7686;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 519};RandomForestClassifier(n_estimators=5, random_state=519)
RandomForestClassifier;0.8615;0.866;0.8615;0.8613;0.8261;0.8379;0.8261;0.8263;0.7667;0.8153;0.7667;0.7686;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 512};RandomForestClassifier(n_estimators=20, random_state=512)
RandomForestClassifier;0.8374;0.8426;0.8374;0.8371;0.8986;0.903;0.8986;0.8976;0.7667;0.8153;0.7667;0.7686;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 211};RandomForestClassifier(n_estimators=10, random_state=211)
RandomForestClassifier;0.8374;0.8462;0.8374;0.8349;0.8696;0.8736;0.8696;0.8691;0.7667;0.8153;0.7667;0.7686;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 512};RandomForestClassifier(n_estimators=20, random_state=512)
MLPClassifier;0.8245;0.8416;0.8245;0.8206;0.8696;0.8861;0.8696;0.8708;0.7667;0.7754;0.7667;0.7685;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
RandomForestClassifier;0.8422;0.8468;0.8422;0.8409;0.8406;0.8593;0.8406;0.8411;0.7667;0.7878;0.7667;0.7685;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 512};RandomForestClassifier(n_estimators=20, random_state=512)
KNeighborsClassifier;0.8051;0.8119;0.8051;0.8047;0.8406;0.853;0.8406;0.8383;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8164;0.8221;0.8164;0.8133;0.8841;0.8873;0.8841;0.8846;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8117;0.8192;0.8117;0.8103;0.8986;0.9144;0.8986;0.8995;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.818;0.8229;0.818;0.8164;0.8696;0.8714;0.8696;0.8694;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8374;0.8426;0.8374;0.8363;0.8551;0.8707;0.8551;0.8548;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8132;0.8168;0.8132;0.812;0.8551;0.8595;0.8551;0.8525;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8115;0.8161;0.8115;0.8091;0.8986;0.9036;0.8986;0.8975;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8004;0.8083;0.8004;0.7989;0.8696;0.8758;0.8696;0.8701;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8276;0.8354;0.8276;0.8262;0.7681;0.7761;0.7681;0.7682;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7986;0.8088;0.7986;0.7967;0.8696;0.87;0.8696;0.8695;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8196;0.8278;0.8196;0.8178;0.8406;0.8424;0.8406;0.8407;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8116;0.8192;0.8116;0.8098;0.7826;0.7854;0.7826;0.7824;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8212;0.8265;0.8212;0.8195;0.7971;0.8084;0.7971;0.7909;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.826;0.8336;0.826;0.8236;0.8551;0.8653;0.8551;0.8517;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8293;0.8385;0.8293;0.8266;0.7681;0.8183;0.7681;0.7694;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8147;0.8224;0.8147;0.813;0.8986;0.9071;0.8986;0.8988;0.7667;0.7893;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8293;0.8372;0.8293;0.8278;0.8406;0.845;0.8406;0.8408;0.7667;0.781;0.7667;0.7665;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
RandomForestClassifier;0.86;0.863;0.86;0.8578;0.7971;0.807;0.7971;0.7946;0.7667;0.8003;0.7667;0.7659;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 512};RandomForestClassifier(n_estimators=20, random_state=512)
DecisionTreeClassifier;0.8164;0.826;0.8164;0.8125;0.8551;0.8628;0.8551;0.8551;0.7667;0.7663;0.7667;0.7656;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
MLPClassifier;0.8261;0.8408;0.8261;0.8226;0.8406;0.8428;0.8406;0.8399;0.7667;0.7922;0.7667;0.7648;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
MLPClassifier;0.8245;0.8349;0.8245;0.8214;0.7971;0.8006;0.7971;0.7965;0.7667;0.7922;0.7667;0.7648;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8069;0.8254;0.8069;0.8035;0.8841;0.8842;0.8841;0.8833;0.7667;0.7922;0.7667;0.7648;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8229;0.8379;0.8229;0.8196;0.8696;0.8707;0.8696;0.8698;0.7667;0.7922;0.7667;0.7648;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
KNeighborsClassifier;0.8164;0.8201;0.8164;0.814;0.8406;0.8466;0.8406;0.8406;0.7667;0.8095;0.7667;0.7639;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.826;0.8332;0.826;0.8246;0.8116;0.8106;0.8116;0.8092;0.7667;0.773;0.7667;0.7618;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=94)
DecisionTreeClassifier;0.8181;0.8254;0.8181;0.8172;0.913;0.92;0.913;0.9127;0.7667;0.773;0.7667;0.7618;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=903)
DecisionTreeClassifier;0.839;0.845;0.839;0.8383;0.8116;0.8121;0.8116;0.8111;0.7667;0.7644;0.7667;0.7614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
DecisionTreeClassifier;0.8292;0.8344;0.8292;0.8285;0.7971;0.7975;0.7971;0.797;0.7667;0.7644;0.7667;0.7614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
DecisionTreeClassifier;0.8229;0.8282;0.8229;0.8207;0.8551;0.8617;0.8551;0.8545;0.7667;0.7644;0.7667;0.7614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=903)
DecisionTreeClassifier;0.8308;0.8405;0.8308;0.8294;0.913;0.9135;0.913;0.913;0.7667;0.7644;0.7667;0.7614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
RandomForestClassifier;0.8471;0.8524;0.8471;0.8462;0.8841;0.8891;0.8841;0.8829;0.75;0.7848;0.75;0.7554;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 211};RandomForestClassifier(n_estimators=10, random_state=211)
SVC;0.8003;0.8286;0.8003;0.7974;0.8261;0.8327;0.8261;0.8239;0.75;0.7769;0.75;0.7553;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8003;0.8264;0.8003;0.7978;0.8551;0.8657;0.8551;0.8543;0.75;0.7714;0.75;0.7541;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.802;0.83;0.802;0.7998;0.8406;0.8491;0.8406;0.8413;0.75;0.7714;0.75;0.7541;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.8004;0.8291;0.8004;0.7977;0.8551;0.8642;0.8551;0.8534;0.75;0.7714;0.75;0.7541;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
MLPClassifier;0.8245;0.8422;0.8245;0.8202;0.8406;0.8507;0.8406;0.8399;0.75;0.7666;0.75;0.7535;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
SVC;0.8037;0.8297;0.8037;0.8021;0.7826;0.8154;0.7826;0.7848;0.75;0.7773;0.75;0.7531;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8036;0.8344;0.8036;0.8018;0.8261;0.8361;0.8261;0.8258;0.75;0.7773;0.75;0.7531;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8036;0.8333;0.8036;0.8021;0.7971;0.8007;0.7971;0.7956;0.75;0.7773;0.75;0.7531;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
RandomForestClassifier;0.8389;0.8483;0.8389;0.8384;0.8406;0.8444;0.8406;0.8405;0.75;0.7747;0.75;0.7524;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 211};RandomForestClassifier(n_estimators=10, random_state=211)
SVC;0.802;0.829;0.802;0.8012;0.7826;0.8342;0.7826;0.7729;0.75;0.7888;0.75;0.7523;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
KNeighborsClassifier;0.8293;0.8358;0.8293;0.8275;0.8551;0.8603;0.8551;0.8559;0.75;0.7768;0.75;0.7521;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8518;0.8585;0.8518;0.8498;0.7971;0.7971;0.7971;0.7971;0.75;0.7711;0.75;0.7519;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 211};RandomForestClassifier(n_estimators=20, random_state=211)
RandomForestClassifier;0.8486;0.8561;0.8486;0.8479;0.7536;0.7615;0.7536;0.7542;0.75;0.7993;0.75;0.7502;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 211};RandomForestClassifier(n_estimators=5, random_state=211)
MLPClassifier;0.8165;0.8308;0.8165;0.8135;0.7826;0.7839;0.7826;0.7815;0.75;0.7993;0.75;0.7502;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
DecisionTreeClassifier;0.8324;0.8412;0.8324;0.8317;0.7391;0.746;0.7391;0.7385;0.75;0.7542;0.75;0.7492;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=903)
DecisionTreeClassifier;0.8261;0.8319;0.8261;0.825;0.8116;0.8189;0.8116;0.8098;0.75;0.7488;0.75;0.7491;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
DecisionTreeClassifier;0.8275;0.8336;0.8275;0.8261;0.8841;0.8883;0.8841;0.8841;0.75;0.7488;0.75;0.7491;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
DecisionTreeClassifier;0.8228;0.8296;0.8228;0.8219;0.7681;0.7932;0.7681;0.7612;0.75;0.7488;0.75;0.7491;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=903)
DecisionTreeClassifier;0.8406;0.8487;0.8406;0.8389;0.8261;0.8324;0.8261;0.8256;0.75;0.7488;0.75;0.7491;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
DecisionTreeClassifier;0.8421;0.8444;0.8421;0.8411;0.8116;0.8144;0.8116;0.8111;0.75;0.7488;0.75;0.7491;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
RandomForestClassifier;0.8471;0.8527;0.8471;0.8469;0.8551;0.868;0.8551;0.8569;0.75;0.7562;0.75;0.7491;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 512};RandomForestClassifier(n_estimators=20, random_state=512)
DecisionTreeClassifier;0.8229;0.8266;0.8229;0.8213;0.8261;0.8277;0.8261;0.8251;0.75;0.7526;0.75;0.7472;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=903)
DecisionTreeClassifier;0.8115;0.8173;0.8115;0.8093;0.8696;0.871;0.8696;0.8694;0.75;0.7553;0.75;0.747;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
DecisionTreeClassifier;0.8213;0.829;0.8213;0.8207;0.8261;0.8349;0.8261;0.8247;0.75;0.7603;0.75;0.7445;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
DecisionTreeClassifier;0.8259;0.8307;0.8259;0.8255;0.8116;0.8132;0.8116;0.8071;0.75;0.7603;0.75;0.7445;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=669)
DecisionTreeClassifier;0.8101;0.8206;0.8101;0.8073;0.8116;0.8133;0.8116;0.8114;0.75;0.749;0.75;0.7438;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=903)
DecisionTreeClassifier;0.8003;0.8051;0.8003;0.7996;0.8986;0.9012;0.8986;0.8991;0.75;0.7489;0.75;0.743;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=903)
MLPClassifier;0.8132;0.8312;0.8132;0.8098;0.8116;0.8323;0.8116;0.815;0.7333;0.7689;0.7333;0.7392;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.8261;0.8441;0.8261;0.824;0.8116;0.8407;0.8116;0.8103;0.7333;0.7542;0.7333;0.7384;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.8244;0.8345;0.8244;0.8202;0.8696;0.8787;0.8696;0.8656;0.7333;0.7542;0.7333;0.7384;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
MLPClassifier;0.8149;0.8292;0.8149;0.8115;0.913;0.9135;0.913;0.913;0.7333;0.7521;0.7333;0.738;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8164;0.8275;0.8164;0.8129;0.8551;0.8653;0.8551;0.8517;0.7333;0.7521;0.7333;0.738;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8277;0.8376;0.8277;0.825;0.8261;0.8501;0.8261;0.8251;0.7333;0.7619;0.7333;0.7379;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
SVC;0.7924;0.8229;0.7924;0.7908;0.8116;0.8206;0.8116;0.8053;0.7333;0.7584;0.7333;0.7377;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.8034;0.8286;0.8034;0.8016;0.7971;0.8069;0.7971;0.7942;0.7333;0.7584;0.7333;0.7377;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.7922;0.8211;0.7922;0.7908;0.8261;0.8529;0.8261;0.823;0.7333;0.7684;0.7333;0.737;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.7954;0.8214;0.7954;0.7947;0.8116;0.8455;0.8116;0.8028;0.7333;0.7684;0.7333;0.737;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
MLPClassifier;0.8196;0.8324;0.8196;0.8175;0.8116;0.8303;0.8116;0.8058;0.7333;0.7578;0.7333;0.737;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
SVC;0.81;0.8347;0.81;0.809;0.7826;0.8263;0.7826;0.7723;0.7333;0.7684;0.7333;0.737;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
MLPClassifier;0.8164;0.8322;0.8164;0.8136;0.913;0.9156;0.913;0.9122;0.7333;0.7458;0.7333;0.735;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
DecisionTreeClassifier;0.8245;0.8321;0.8245;0.8212;0.7536;0.7559;0.7536;0.7531;0.7333;0.7392;0.7333;0.7339;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
RandomForestClassifier;0.8438;0.8488;0.8438;0.8438;0.8261;0.8239;0.8261;0.8231;0.7333;0.7419;0.7333;0.7322;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 211};RandomForestClassifier(n_estimators=10, random_state=211)
DecisionTreeClassifier;0.8566;0.8595;0.8566;0.8553;0.7826;0.7823;0.7826;0.7775;0.7333;0.7328;0.7333;0.7321;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
DecisionTreeClassifier;0.8341;0.8413;0.8341;0.8311;0.7971;0.7962;0.7971;0.7964;0.7333;0.7332;0.7333;0.732;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
DecisionTreeClassifier;0.8373;0.8419;0.8373;0.837;0.7681;0.7678;0.7681;0.7657;0.7333;0.7347;0.7333;0.7317;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
DecisionTreeClassifier;0.8277;0.8349;0.8277;0.8262;0.8551;0.8596;0.8551;0.8514;0.7333;0.7403;0.7333;0.7316;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=903)
DecisionTreeClassifier;0.826;0.8345;0.826;0.8252;0.7681;0.7682;0.7681;0.7672;0.7333;0.7327;0.7333;0.731;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 94};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=94)
MLPClassifier;0.826;0.8406;0.826;0.8235;0.8551;0.8688;0.8551;0.846;0.7167;0.7455;0.7167;0.7232;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
KNeighborsClassifier;0.8373;0.8427;0.8373;0.8351;0.7246;0.7616;0.7246;0.7143;0.7167;0.7593;0.7167;0.7227;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
KNeighborsClassifier;0.8164;0.8204;0.8164;0.8134;0.8261;0.8471;0.8261;0.8263;0.7167;0.7593;0.7167;0.7227;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
SVC;0.7957;0.8237;0.7957;0.7914;0.8116;0.8217;0.8116;0.807;0.7167;0.7376;0.7167;0.7225;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
MLPClassifier;0.8196;0.8369;0.8196;0.8172;0.8551;0.8632;0.8551;0.8537;0.7167;0.7376;0.7167;0.7225;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
SVC;0.8053;0.8311;0.8053;0.8031;0.7826;0.81;0.7826;0.7753;0.7167;0.7376;0.7167;0.7225;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
MLPClassifier;0.8196;0.8326;0.8196;0.8163;0.8696;0.8718;0.8696;0.8672;0.7167;0.7367;0.7167;0.7222;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
MLPClassifier;0.8261;0.8383;0.8261;0.8236;0.8696;0.8932;0.8696;0.8672;0.7167;0.7367;0.7167;0.7222;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.8197;0.8318;0.8197;0.8172;0.8551;0.873;0.8551;0.8546;0.7167;0.7367;0.7167;0.7222;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 672, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=672)
SVC;0.7987;0.8247;0.7987;0.7956;0.8406;0.8618;0.8406;0.8392;0.7167;0.7494;0.7167;0.7217;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.7938;0.8218;0.7938;0.792;0.8261;0.8554;0.8261;0.82;0.7167;0.7453;0.7167;0.7209;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
SVC;0.7956;0.824;0.7956;0.7946;0.8261;0.8362;0.8261;0.8245;0.7167;0.7453;0.7167;0.7209;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.7907;0.819;0.7907;0.7898;0.8551;0.865;0.8551;0.8517;0.7167;0.7453;0.7167;0.7209;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
KNeighborsClassifier;0.8342;0.8419;0.8342;0.8315;0.7681;0.7779;0.7681;0.7695;0.7167;0.7639;0.7167;0.7197;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
LogisticRegression;0.686;0.6951;0.686;0.6827;0.7536;0.7871;0.7536;0.7529;0.7167;0.7556;0.7167;0.7162;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
DecisionTreeClassifier;0.8277;0.8363;0.8277;0.8271;0.7971;0.796;0.7971;0.7956;0.7167;0.715;0.7167;0.7131;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=903)
MLPClassifier;0.8295;0.8399;0.8295;0.827;0.8406;0.8449;0.8406;0.8393;0.7;0.7391;0.7;0.7086;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
SVC;0.8053;0.8328;0.8053;0.8029;0.8116;0.8187;0.8116;0.8065;0.7;0.7272;0.7;0.7074;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
MLPClassifier;0.8197;0.83;0.8197;0.8161;0.8551;0.8752;0.8551;0.8528;0.7;0.7278;0.7;0.7064;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
SVC;0.8004;0.8267;0.8004;0.7986;0.8406;0.853;0.8406;0.8383;0.7;0.7369;0.7;0.7051;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.7907;0.8184;0.7907;0.7881;0.8696;0.8738;0.8696;0.8699;0.7;0.7321;0.7;0.7037;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
LogisticRegression;0.6764;0.6846;0.6764;0.6733;0.7246;0.7482;0.7246;0.7266;0.7;0.7589;0.7;0.7014;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.6941;0.7133;0.6941;0.6925;0.8116;0.8329;0.8116;0.8108;0.7;0.7459;0.7;0.6992;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.6892;0.6941;0.6892;0.6861;0.6957;0.6966;0.6957;0.6905;0.7;0.7459;0.7;0.6992;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.7101;0.7217;0.7101;0.7074;0.6377;0.6474;0.6377;0.6371;0.7;0.7459;0.7;0.6992;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.6988;0.7102;0.6988;0.6958;0.6667;0.6712;0.6667;0.6675;0.7;0.7459;0.7;0.6992;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.7036;0.7091;0.7036;0.7017;0.7246;0.7706;0.7246;0.7261;0.7;0.7459;0.7;0.6992;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.6924;0.7065;0.6924;0.6893;0.6812;0.6947;0.6812;0.6808;0.7;0.7459;0.7;0.6992;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
DecisionTreeClassifier;0.8343;0.8396;0.8343;0.8322;0.7826;0.7855;0.7826;0.7833;0.7;0.7005;0.7;0.6976;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
LogisticRegression;0.7038;0.714;0.7038;0.7015;0.6377;0.6421;0.6377;0.6362;0.7;0.7357;0.7;0.6975;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
LogisticRegression;0.6973;0.707;0.6973;0.6943;0.6667;0.685;0.6667;0.6574;0.7;0.7357;0.7;0.6975;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.7118;0.7334;0.7118;0.7082;0.5942;0.5892;0.5942;0.5861;0.7;0.7357;0.7;0.6975;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
DecisionTreeClassifier;0.8374;0.8439;0.8374;0.8368;0.6957;0.7006;0.6957;0.6965;0.7;0.6976;0.7;0.6968;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 903};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=903)
DecisionTreeClassifier;0.8276;0.8345;0.8276;0.8264;0.8406;0.8413;0.8406;0.8401;0.7;0.6995;0.7;0.696;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 669};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=669)
SVC;0.7956;0.8259;0.7956;0.7949;0.8406;0.8533;0.8406;0.8355;0.6833;0.7142;0.6833;0.6912;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.7956;0.8248;0.7956;0.7942;0.7971;0.8039;0.7971;0.7986;0.6833;0.7097;0.6833;0.6903;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
SVC;0.7986;0.8257;0.7986;0.7969;0.8116;0.8571;0.8116;0.8124;0.6833;0.7287;0.6833;0.6888;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 670};SVC(C=10, random_state=670)
LogisticRegression;0.6859;0.697;0.6859;0.6848;0.6957;0.7358;0.6957;0.6926;0.6833;0.7496;0.6833;0.6839;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.6734;0.6852;0.6734;0.6705;0.7971;0.8413;0.7971;0.801;0.6833;0.7496;0.6833;0.6839;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.6844;0.6927;0.6844;0.6824;0.7391;0.77;0.7391;0.7418;0.6833;0.7351;0.6833;0.6817;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.6924;0.7072;0.6924;0.6893;0.7101;0.7151;0.7101;0.7083;0.6833;0.7351;0.6833;0.6817;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.694;0.7066;0.694;0.6895;0.7391;0.7526;0.7391;0.7411;0.6833;0.7351;0.6833;0.6817;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.6908;0.7044;0.6908;0.6892;0.7246;0.7328;0.7246;0.7205;0.6833;0.7351;0.6833;0.6817;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.6811;0.6904;0.6811;0.6784;0.8261;0.8556;0.8261;0.8236;0.6833;0.7351;0.6833;0.6817;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
LogisticRegression;0.6909;0.7042;0.6909;0.689;0.6377;0.6513;0.6377;0.6323;0.6833;0.7237;0.6833;0.6801;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.6842;0.6993;0.6842;0.6815;0.7971;0.8262;0.7971;0.7969;0.6833;0.7237;0.6833;0.6801;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
LogisticRegression;0.6907;0.7;0.6907;0.6887;0.7536;0.7652;0.7536;0.7522;0.6833;0.7237;0.6833;0.6801;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.6923;0.6995;0.6923;0.6893;0.6957;0.698;0.6957;0.6869;0.6833;0.7237;0.6833;0.6801;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
LogisticRegression;0.6958;0.7061;0.6958;0.6919;0.6667;0.6758;0.6667;0.666;0.6833;0.7221;0.6833;0.6796;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
LogisticRegression;0.702;0.7149;0.702;0.7009;0.5942;0.5951;0.5942;0.5846;0.6833;0.7208;0.6833;0.6781;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.6779;0.6916;0.6779;0.6761;0.6957;0.7085;0.6957;0.6939;0.6833;0.7208;0.6833;0.6781;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
SVC;0.802;0.8291;0.802;0.8002;0.8261;0.8519;0.8261;0.8232;0.6667;0.7011;0.6667;0.6747;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
SVC;0.7988;0.8263;0.7988;0.7966;0.8406;0.8516;0.8406;0.8415;0.6667;0.701;0.6667;0.6746;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 862};SVC(C=10, random_state=862)
LogisticRegression;0.686;0.6947;0.686;0.6837;0.7101;0.7122;0.7101;0.7095;0.6667;0.7239;0.6667;0.6637;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
LogisticRegression;0.7118;0.7247;0.7118;0.7108;0.6522;0.6975;0.6522;0.655;0.6667;0.7113;0.6667;0.6621;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.7022;0.7129;0.7022;0.7009;0.6522;0.6636;0.6522;0.6483;0.6667;0.7113;0.6667;0.6621;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
LogisticRegression;0.6956;0.7125;0.6956;0.6934;0.6957;0.6984;0.6957;0.6891;0.6667;0.7106;0.6667;0.6614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
LogisticRegression;0.665;0.6786;0.665;0.6625;0.7971;0.8172;0.7971;0.8004;0.6667;0.7106;0.6667;0.6614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 327, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=327)"
