Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7633;0.7796;0.7633;0.7643;0.7971;0.8133;0.7971;0.7993;0.8667;0.869;0.8667;0.8664;0.9073;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7617;0.7748;0.7617;0.7629;0.7826;0.7955;0.7826;0.7867;0.85;0.8554;0.85;0.8504;0.8984;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7439;0.7603;0.7439;0.7453;0.8841;0.8942;0.8841;0.8861;0.85;0.8554;0.85;0.8504;0.906;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.76;0.7737;0.76;0.7625;0.8116;0.8253;0.8116;0.8118;0.85;0.8554;0.85;0.8504;0.9005;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7536;0.767;0.7536;0.7553;0.8116;0.8238;0.8116;0.8132;0.85;0.8554;0.85;0.8504;0.9078;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7632;0.7777;0.7632;0.7651;0.8116;0.8325;0.8116;0.8134;0.85;0.8524;0.85;0.8497;0.9024;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8003;0.8119;0.8003;0.8011;0.7101;0.7559;0.7101;0.7184;0.8333;0.8426;0.8333;0.8341;0.9144;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7456;0.7538;0.7456;0.7455;0.7391;0.8016;0.7391;0.7347;0.8333;0.8426;0.8333;0.8341;0.8968;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7632;0.7809;0.7632;0.765;0.8841;0.8941;0.8841;0.8857;0.8333;0.8426;0.8333;0.8341;0.8997;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7633;0.7812;0.7633;0.7651;0.7681;0.7667;0.7681;0.7667;0.8333;0.8426;0.8333;0.8341;0.9031;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7811;0.7966;0.7811;0.7811;0.7971;0.8228;0.7971;0.8007;0.8333;0.8424;0.8333;0.8336;0.9073;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7649;0.7789;0.7649;0.7654;0.7391;0.7761;0.7391;0.7422;0.8333;0.8424;0.8333;0.8336;0.9109;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7648;0.7792;0.7648;0.7664;0.8406;0.8499;0.8406;0.842;0.8333;0.8379;0.8333;0.8333;0.9059;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7552;0.777;0.7552;0.7578;0.7826;0.8344;0.7826;0.7887;0.8333;0.8383;0.8333;0.8327;0.9062;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7923;0.8037;0.7923;0.7938;0.6522;0.6668;0.6522;0.657;0.8333;0.8333;0.8333;0.8323;0.9184;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7666;0.7799;0.7666;0.7674;0.7681;0.7727;0.7681;0.7642;0.8333;0.8417;0.8333;0.832;0.9087;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7634;0.7795;0.7634;0.7652;0.7536;0.7799;0.7536;0.7578;0.8167;0.8304;0.8167;0.8176;0.9031;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7424;0.7568;0.7424;0.7428;0.7971;0.7989;0.7971;0.7952;0.8167;0.8299;0.8167;0.8165;0.9008;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7601;0.7763;0.7601;0.7607;0.8116;0.8162;0.8116;0.8096;0.8167;0.8193;0.8167;0.8157;0.9049;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7826;0.794;0.7826;0.7839;0.7826;0.7955;0.7826;0.7867;0.8167;0.825;0.8167;0.8153;0.908;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8051;0.814;0.8051;0.8043;0.8406;0.8649;0.8406;0.8441;0.8167;0.829;0.8167;0.8147;0.9385;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
KNeighborsClassifier;0.7729;0.7891;0.7729;0.7705;0.7681;0.7846;0.7681;0.7708;0.8;0.8102;0.8;0.8014;0.9033;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7714;0.7861;0.7714;0.7711;0.7681;0.7987;0.7681;0.773;0.8;0.8187;0.8;0.8008;0.905;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7665;0.7805;0.7665;0.7676;0.8116;0.8219;0.8116;0.8139;0.8;0.8187;0.8;0.8008;0.9038;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8243;0.8341;0.8243;0.8255;0.7826;0.8194;0.7826;0.7842;0.8;0.8171;0.8;0.8007;0.9418;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 81};RandomForestClassifier(n_estimators=10, random_state=81)
RandomForestClassifier;0.8101;0.8216;0.8101;0.811;0.8406;0.8626;0.8406;0.8434;0.8;0.8171;0.8;0.8007;0.9422;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
DecisionTreeClassifier;0.8004;0.8172;0.8004;0.8018;0.7391;0.7604;0.7391;0.7417;0.8;0.8049;0.8;0.8002;0.9131;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=227)
KNeighborsClassifier;0.7649;0.7808;0.7649;0.7658;0.7971;0.7999;0.7971;0.7969;0.8;0.8111;0.8;0.8002;0.9055;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7489;0.7592;0.7489;0.7505;0.8406;0.8428;0.8406;0.8399;0.8;0.8111;0.8;0.8002;0.8943;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8083;0.8167;0.8083;0.8078;0.7826;0.7842;0.7826;0.7792;0.8;0.8144;0.8;0.7997;0.9392;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
RandomForestClassifier;0.8214;0.8301;0.8214;0.8221;0.7536;0.7497;0.7536;0.7509;0.8;0.8144;0.8;0.7997;0.9447;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
RandomForestClassifier;0.8148;0.8191;0.8148;0.8152;0.8696;0.8796;0.8696;0.872;0.8;0.8144;0.8;0.7997;0.9309;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 370};RandomForestClassifier(n_estimators=10, random_state=370)
RandomForestClassifier;0.8116;0.8212;0.8116;0.811;0.8261;0.8247;0.8261;0.8251;0.8;0.805;0.8;0.7993;0.9352;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 247};RandomForestClassifier(n_estimators=10, random_state=247)
RandomForestClassifier;0.8133;0.8204;0.8133;0.8138;0.7826;0.7981;0.7826;0.7821;0.8;0.8068;0.8;0.7989;0.9378;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
DecisionTreeClassifier;0.7889;0.8053;0.7889;0.7892;0.7971;0.8103;0.7971;0.7997;0.8;0.8083;0.8;0.7987;0.9008;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
RandomForestClassifier;0.826;0.8346;0.826;0.8269;0.7971;0.8177;0.7971;0.8;0.8;0.8083;0.8;0.7987;0.9413;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
DecisionTreeClassifier;0.8116;0.8235;0.8116;0.8124;0.7826;0.8;0.7826;0.7871;0.8;0.8052;0.8;0.7985;0.9171;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=980)
RandomForestClassifier;0.8213;0.834;0.8213;0.823;0.7536;0.7616;0.7536;0.7556;0.8;0.8194;0.8;0.798;0.9375;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 247};RandomForestClassifier(n_estimators=10, random_state=247)
DecisionTreeClassifier;0.8116;0.8201;0.8116;0.8123;0.7971;0.7963;0.7971;0.7964;0.8;0.802;0.8;0.798;0.914;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
RandomForestClassifier;0.8245;0.8345;0.8245;0.8255;0.7971;0.7994;0.7971;0.798;0.8;0.813;0.8;0.7978;0.9386;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
SVC;0.7248;0.7603;0.7248;0.7249;0.7391;0.7734;0.7391;0.7449;0.7833;0.8187;0.7833;0.7862;0.8645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7133;0.7524;0.7133;0.7146;0.8406;0.8452;0.8406;0.842;0.7833;0.7986;0.7833;0.7854;0.8635;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.731;0.769;0.731;0.7306;0.7971;0.7994;0.7971;0.7964;0.7833;0.7986;0.7833;0.7854;0.8681;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.7278;0.7611;0.7278;0.7264;0.7536;0.7739;0.7536;0.7534;0.7833;0.8092;0.7833;0.7853;0.8708;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
KNeighborsClassifier;0.752;0.7707;0.752;0.7541;0.7826;0.7848;0.7826;0.7807;0.7833;0.7986;0.7833;0.7853;0.9113;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.7182;0.7616;0.7182;0.718;0.7826;0.7958;0.7826;0.7857;0.7833;0.8111;0.7833;0.7851;0.8706;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7247;0.7592;0.7247;0.7256;0.7971;0.8173;0.7971;0.7956;0.7833;0.8111;0.7833;0.7851;0.8642;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
KNeighborsClassifier;0.7615;0.7735;0.7615;0.7632;0.7971;0.798;0.7971;0.7973;0.7833;0.7927;0.7833;0.785;0.9055;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.813;0.8217;0.813;0.8139;0.7826;0.8135;0.7826;0.7853;0.7833;0.8006;0.7833;0.7846;0.9407;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 81};RandomForestClassifier(n_estimators=20, random_state=81)
RandomForestClassifier;0.7955;0.8011;0.7955;0.7958;0.8551;0.8569;0.8551;0.8536;0.7833;0.8006;0.7833;0.7846;0.9375;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
MLPClassifier;0.7907;0.8031;0.7907;0.7907;0.8116;0.8318;0.8116;0.8155;0.7833;0.7869;0.7833;0.7838;0.9186;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
RandomForestClassifier;0.8181;0.828;0.8181;0.8182;0.7826;0.7937;0.7826;0.7828;0.7833;0.7934;0.7833;0.7837;0.9405;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
KNeighborsClassifier;0.7471;0.7556;0.7471;0.7468;0.8406;0.8459;0.8406;0.8415;0.7833;0.8074;0.7833;0.7836;0.9006;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8004;0.8087;0.8004;0.7994;0.8406;0.8613;0.8406;0.844;0.7833;0.7944;0.7833;0.7835;0.9365;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
RandomForestClassifier;0.8131;0.8224;0.8131;0.813;0.8261;0.8258;0.8261;0.8236;0.7833;0.7992;0.7833;0.7833;0.9355;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
RandomForestClassifier;0.81;0.8154;0.81;0.8103;0.8116;0.8117;0.8116;0.8098;0.7833;0.7992;0.7833;0.7833;0.941;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 247};RandomForestClassifier(n_estimators=10, random_state=247)
RandomForestClassifier;0.826;0.8328;0.826;0.826;0.7971;0.8184;0.7971;0.8017;0.7833;0.806;0.7833;0.7832;0.9352;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
DecisionTreeClassifier;0.8099;0.8277;0.8099;0.8115;0.7391;0.7534;0.7391;0.7418;0.7833;0.806;0.7833;0.7832;0.9135;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=980)
DecisionTreeClassifier;0.8181;0.8278;0.8181;0.8187;0.8406;0.8467;0.8406;0.8416;0.7833;0.7838;0.7833;0.7832;0.9104;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=227)
DecisionTreeClassifier;0.81;0.8184;0.81;0.8095;0.8406;0.8403;0.8406;0.8352;0.7833;0.7863;0.7833;0.7827;0.9072;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=980)
RandomForestClassifier;0.8163;0.8263;0.8163;0.8177;0.8406;0.8476;0.8406;0.8394;0.7833;0.7906;0.7833;0.7822;0.94;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 81};RandomForestClassifier(n_estimators=10, random_state=81)
MLPClassifier;0.7986;0.8124;0.7986;0.7988;0.7681;0.7703;0.7681;0.769;0.7833;0.7915;0.7833;0.7809;0.9174;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
RandomForestClassifier;0.8147;0.8229;0.8147;0.8143;0.7681;0.7692;0.7681;0.7684;0.7833;0.7922;0.7833;0.7807;0.9431;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 81};RandomForestClassifier(n_estimators=10, random_state=81)
RandomForestClassifier;0.8132;0.822;0.8132;0.8135;0.8551;0.8571;0.8551;0.8553;0.7833;0.7909;0.7833;0.7794;0.9366;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 81};RandomForestClassifier(n_estimators=10, random_state=81)
SVC;0.7311;0.765;0.7311;0.7309;0.8261;0.8473;0.8261;0.83;0.7667;0.7848;0.7667;0.7689;0.8651;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
SVC;0.7279;0.7646;0.7279;0.73;0.8261;0.8274;0.8261;0.8259;0.7667;0.7866;0.7667;0.7689;0.8645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7215;0.7614;0.7215;0.7226;0.8406;0.8556;0.8406;0.8435;0.7667;0.7848;0.7667;0.7689;0.8631;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7262;0.7662;0.7262;0.7272;0.8551;0.8657;0.8551;0.8543;0.7667;0.7878;0.7667;0.7685;0.8671;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7376;0.7746;0.7376;0.7367;0.7246;0.7365;0.7246;0.7285;0.7667;0.8016;0.7667;0.7681;0.8691;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.7182;0.7644;0.7182;0.7196;0.7826;0.8075;0.7826;0.7856;0.7667;0.78;0.7667;0.7677;0.8652;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.7246;0.7706;0.7246;0.7238;0.8116;0.8159;0.8116;0.8091;0.7667;0.78;0.7667;0.7677;0.8678;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
RandomForestClassifier;0.8003;0.8083;0.8003;0.8007;0.8551;0.8542;0.8551;0.8544;0.7667;0.7765;0.7667;0.7672;0.9332;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 81};RandomForestClassifier(n_estimators=20, random_state=81)
SVC;0.7246;0.7633;0.7246;0.7233;0.7536;0.7735;0.7536;0.7538;0.7667;0.7758;0.7667;0.7672;0.8671;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
RandomForestClassifier;0.8131;0.8233;0.8131;0.8129;0.7971;0.8044;0.7971;0.7991;0.7667;0.7893;0.7667;0.7672;0.942;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 81};RandomForestClassifier(n_estimators=20, random_state=81)
RandomForestClassifier;0.8115;0.8182;0.8115;0.8125;0.8841;0.889;0.8841;0.8847;0.7667;0.7765;0.7667;0.7672;0.9313;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
DecisionTreeClassifier;0.8147;0.8353;0.8147;0.8168;0.7391;0.7529;0.7391;0.7401;0.7667;0.7702;0.7667;0.7671;0.9178;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
DecisionTreeClassifier;0.81;0.8245;0.81;0.8118;0.7391;0.7398;0.7391;0.7355;0.7667;0.7731;0.7667;0.767;0.9194;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=980)
SVC;0.7279;0.7632;0.7279;0.7286;0.8116;0.8209;0.8116;0.8132;0.7667;0.7884;0.7667;0.7668;0.8685;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
KNeighborsClassifier;0.7537;0.7707;0.7537;0.7558;0.7971;0.8304;0.7971;0.8015;0.7667;0.7884;0.7667;0.7668;0.9001;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.7985;0.8158;0.7985;0.801;0.7681;0.7678;0.7681;0.7657;0.7667;0.7731;0.7667;0.7663;0.8994;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
DecisionTreeClassifier;0.802;0.8161;0.802;0.8035;0.8116;0.827;0.8116;0.815;0.7667;0.7731;0.7667;0.7663;0.9104;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=227)
DecisionTreeClassifier;0.7955;0.8103;0.7955;0.7976;0.7536;0.7764;0.7536;0.7561;0.7667;0.7738;0.7667;0.7662;0.9101;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=980)
RandomForestClassifier;0.8163;0.823;0.8163;0.8172;0.7971;0.7988;0.7971;0.7977;0.7667;0.7702;0.7667;0.766;0.9353;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 81};RandomForestClassifier(n_estimators=20, random_state=81)
RandomForestClassifier;0.8148;0.8211;0.8148;0.8148;0.7536;0.7925;0.7536;0.7603;0.7667;0.779;0.7667;0.7659;0.9373;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 81};RandomForestClassifier(n_estimators=10, random_state=81)
MLPClassifier;0.789;0.8039;0.789;0.7853;0.7391;0.7472;0.7391;0.7414;0.7667;0.779;0.7667;0.7654;0.9227;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.8003;0.8084;0.8003;0.7997;0.7826;0.7963;0.7826;0.7839;0.7667;0.7736;0.7667;0.765;0.9243;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
DecisionTreeClassifier;0.7891;0.8025;0.7891;0.7908;0.8116;0.8219;0.8116;0.8139;0.7667;0.7736;0.7667;0.765;0.901;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
MLPClassifier;0.7745;0.7875;0.7745;0.7754;0.8696;0.8841;0.8696;0.8721;0.7667;0.7736;0.7667;0.765;0.9146;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.7858;0.7976;0.7858;0.7856;0.8551;0.861;0.8551;0.8563;0.7667;0.7736;0.7667;0.765;0.9141;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.7939;0.809;0.7939;0.7927;0.8696;0.877;0.8696;0.8666;0.7667;0.7736;0.7667;0.765;0.9153;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
RandomForestClassifier;0.7938;0.8058;0.7938;0.7935;0.913;0.9163;0.913;0.9135;0.7667;0.777;0.7667;0.7648;0.9351;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 81};RandomForestClassifier(n_estimators=10, random_state=81)
MLPClassifier;0.7923;0.8063;0.7923;0.792;0.8696;0.8833;0.8696;0.8718;0.7667;0.7708;0.7667;0.7646;0.9181;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.7988;0.8104;0.7988;0.8007;0.7971;0.8103;0.7971;0.7995;0.7667;0.7712;0.7667;0.7645;0.9152;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.7811;0.7894;0.7811;0.7771;0.8406;0.8524;0.8406;0.8418;0.7667;0.7712;0.7667;0.7645;0.9146;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.8035;0.8134;0.8035;0.8039;0.7391;0.7382;0.7391;0.738;0.7667;0.7712;0.7667;0.7645;0.9207;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
RandomForestClassifier;0.815;0.8213;0.815;0.8148;0.8261;0.8264;0.8261;0.8252;0.7667;0.7781;0.7667;0.7623;0.9352;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
SVC;0.7247;0.7655;0.7247;0.7237;0.7971;0.806;0.7971;0.7988;0.75;0.7802;0.75;0.7534;0.8628;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7247;0.7628;0.7247;0.7262;0.8261;0.8481;0.8261;0.8246;0.75;0.7802;0.75;0.7534;0.8705;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
SVC;0.7246;0.7641;0.7246;0.7244;0.8261;0.8462;0.8261;0.8276;0.75;0.7802;0.75;0.7534;0.8644;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
SVC;0.7294;0.7642;0.7294;0.7299;0.8261;0.8471;0.8261;0.8273;0.75;0.7802;0.75;0.7534;0.8666;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.7295;0.7686;0.7295;0.7291;0.7536;0.7624;0.7536;0.753;0.75;0.7761;0.75;0.7526;0.8721;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.7215;0.7577;0.7215;0.7208;0.8551;0.8603;0.8551;0.8559;0.75;0.7747;0.75;0.7524;0.8614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.731;0.7653;0.731;0.7303;0.7246;0.7493;0.7246;0.7244;0.75;0.7747;0.75;0.7524;0.8709;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.7198;0.7657;0.7198;0.7197;0.8116;0.8508;0.8116;0.8094;0.75;0.7747;0.75;0.7524;0.8672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.723;0.7582;0.723;0.7196;0.7971;0.8091;0.7971;0.7996;0.75;0.7747;0.75;0.7524;0.8643;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7262;0.7628;0.7262;0.7269;0.8406;0.8563;0.8406;0.8439;0.75;0.7689;0.75;0.7513;0.8617;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
SVC;0.7407;0.7781;0.7407;0.7413;0.6812;0.7109;0.6812;0.6843;0.75;0.7775;0.75;0.7513;0.8766;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
RandomForestClassifier;0.8132;0.8193;0.8132;0.8132;0.7826;0.7856;0.7826;0.7822;0.75;0.7689;0.75;0.7513;0.9377;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
RandomForestClassifier;0.8213;0.8302;0.8213;0.8219;0.8696;0.8722;0.8696;0.8689;0.75;0.7616;0.75;0.7512;0.9357;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 370};RandomForestClassifier(n_estimators=20, random_state=370)
SVC;0.7328;0.7681;0.7328;0.7323;0.7971;0.802;0.7971;0.7979;0.75;0.7803;0.75;0.7509;0.8686;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 722};SVC(C=10, probability=True, random_state=722)
SVC;0.736;0.7726;0.736;0.7367;0.7536;0.7687;0.7536;0.7532;0.75;0.7639;0.75;0.7504;0.8749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7183;0.7522;0.7183;0.7189;0.8406;0.8441;0.8406;0.84;0.75;0.7639;0.75;0.7504;0.8664;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 385};SVC(C=10, probability=True, random_state=385)
DecisionTreeClassifier;0.818;0.8262;0.818;0.819;0.8406;0.8431;0.8406;0.8381;0.75;0.7597;0.75;0.7498;0.9159;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=227)
MLPClassifier;0.8018;0.8144;0.8018;0.8034;0.7826;0.7824;0.7826;0.7809;0.75;0.7597;0.75;0.7498;0.9233;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
DecisionTreeClassifier;0.8293;0.8407;0.8293;0.8302;0.7536;0.773;0.7536;0.7592;0.75;0.7604;0.75;0.7497;0.9224;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
MLPClassifier;0.7827;0.7945;0.7827;0.7816;0.7971;0.8262;0.7971;0.7969;0.75;0.7632;0.75;0.7496;0.9164;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.7956;0.8127;0.7956;0.7959;0.7826;0.7826;0.7826;0.7826;0.75;0.7607;0.75;0.749;0.9207;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.7956;0.8071;0.7956;0.7966;0.7826;0.7855;0.7826;0.7838;0.75;0.7567;0.75;0.749;0.9204;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
DecisionTreeClassifier;0.8051;0.8209;0.8051;0.8072;0.8261;0.8462;0.8261;0.8276;0.75;0.7607;0.75;0.749;0.9019;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=980)
MLPClassifier;0.7939;0.811;0.7939;0.7936;0.8261;0.8246;0.8261;0.8251;0.75;0.7607;0.75;0.749;0.9144;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.805;0.8182;0.805;0.8043;0.7536;0.7979;0.7536;0.7617;0.75;0.7557;0.75;0.7487;0.9196;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.786;0.7968;0.786;0.7869;0.8986;0.9065;0.8986;0.899;0.75;0.7557;0.75;0.7487;0.9133;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.7954;0.8092;0.7954;0.7968;0.7391;0.7391;0.7391;0.7391;0.75;0.7557;0.75;0.7487;0.9203;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
DecisionTreeClassifier;0.8116;0.8255;0.8116;0.8134;0.7536;0.7619;0.7536;0.7552;0.75;0.7763;0.75;0.7484;0.9154;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
MLPClassifier;0.7907;0.805;0.7907;0.7907;0.8261;0.8397;0.8261;0.8284;0.75;0.7569;0.75;0.7483;0.9169;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.805;0.8178;0.805;0.8068;0.7391;0.7514;0.7391;0.7415;0.75;0.7569;0.75;0.7483;0.9184;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
DecisionTreeClassifier;0.81;0.8221;0.81;0.8113;0.8841;0.8858;0.8841;0.8847;0.75;0.7553;0.75;0.7482;0.9109;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=227)
DecisionTreeClassifier;0.8067;0.8172;0.8067;0.8085;0.7971;0.8;0.7971;0.7983;0.75;0.7553;0.75;0.7482;0.9111;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=980)
DecisionTreeClassifier;0.8132;0.827;0.8132;0.8153;0.7681;0.78;0.7681;0.7721;0.75;0.7506;0.75;0.748;0.9147;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
DecisionTreeClassifier;0.8019;0.8136;0.8019;0.8032;0.8116;0.8095;0.8116;0.8098;0.75;0.7506;0.75;0.748;0.8955;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=227)
MLPClassifier;0.7939;0.804;0.7939;0.7943;0.8551;0.8857;0.8551;0.8589;0.75;0.7555;0.75;0.7461;0.9196;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
SVC;0.7279;0.767;0.7279;0.7287;0.7681;0.7849;0.7681;0.7673;0.7333;0.7564;0.7333;0.7346;0.8694;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
DecisionTreeClassifier;0.7969;0.8103;0.7969;0.7992;0.8406;0.868;0.8406;0.8426;0.7333;0.7431;0.7333;0.7332;0.907;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
MLPClassifier;0.7794;0.7914;0.7794;0.7787;0.8841;0.8822;0.8841;0.882;0.7333;0.7431;0.7333;0.7332;0.913;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
DecisionTreeClassifier;0.8083;0.8261;0.8083;0.8094;0.7536;0.7588;0.7536;0.7556;0.7333;0.7431;0.7333;0.7332;0.9186;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=227)
DecisionTreeClassifier;0.8068;0.8168;0.8068;0.8068;0.8551;0.8808;0.8551;0.8564;0.7333;0.7431;0.7333;0.7332;0.9107;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=227)
DecisionTreeClassifier;0.8179;0.8336;0.8179;0.8197;0.8406;0.8392;0.8406;0.8396;0.7333;0.7474;0.7333;0.7329;0.9151;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 605};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=605)
MLPClassifier;0.8084;0.8245;0.8084;0.8098;0.7681;0.7731;0.7681;0.7655;0.7333;0.7405;0.7333;0.7328;0.9177;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.789;0.8034;0.789;0.7883;0.8696;0.884;0.8696;0.8713;0.7333;0.7408;0.7333;0.7327;0.9172;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.7906;0.8048;0.7906;0.7897;0.8116;0.8323;0.8116;0.8166;0.7333;0.7408;0.7333;0.7327;0.9178;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
DecisionTreeClassifier;0.7922;0.8095;0.7922;0.796;0.7971;0.821;0.7971;0.7937;0.7333;0.748;0.7333;0.7327;0.8961;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=227)
DecisionTreeClassifier;0.8229;0.8378;0.8229;0.8237;0.7826;0.804;0.7826;0.7821;0.7333;0.748;0.7333;0.7327;0.9218;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=980)
MLPClassifier;0.7956;0.8073;0.7956;0.7965;0.7826;0.7885;0.7826;0.784;0.7333;0.7408;0.7333;0.7327;0.9191;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.789;0.8023;0.789;0.7893;0.7826;0.8114;0.7826;0.7861;0.7167;0.7333;0.7167;0.7177;0.9195;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.773;0.7861;0.773;0.7711;0.7826;0.7891;0.7826;0.7808;0.7167;0.7298;0.7167;0.7171;0.9181;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
DecisionTreeClassifier;0.8196;0.8308;0.8196;0.8215;0.7826;0.8035;0.7826;0.7819;0.7167;0.7248;0.7167;0.7169;0.917;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=980)
DecisionTreeClassifier;0.8084;0.8212;0.8084;0.8085;0.6377;0.6246;0.6377;0.6276;0.7167;0.7223;0.7167;0.7168;0.9067;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 227};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=227)
MLPClassifier;0.7857;0.7979;0.7857;0.7859;0.8841;0.8898;0.8841;0.8835;0.7167;0.73;0.7167;0.7156;0.911;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
LogisticRegression;0.7005;0.7258;0.7005;0.7;0.6377;0.646;0.6377;0.6385;0.7;0.7142;0.7;0.7021;0.8427;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.6955;0.7171;0.6955;0.6951;0.6957;0.6998;0.6957;0.6957;0.7;0.7083;0.7;0.701;0.8409;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.7036;0.7294;0.7036;0.7019;0.6812;0.6858;0.6812;0.6805;0.7;0.7083;0.7;0.701;0.8407;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.6972;0.72;0.6972;0.6966;0.7101;0.7575;0.7101;0.7142;0.7;0.7083;0.7;0.701;0.84;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.6989;0.7218;0.6989;0.6981;0.6522;0.6651;0.6522;0.6537;0.7;0.7083;0.7;0.701;0.8473;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
DecisionTreeClassifier;0.8085;0.8265;0.8085;0.8099;0.7826;0.7804;0.7826;0.7813;0.7;0.7051;0.7;0.7004;0.915;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 980};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=980)
KNeighborsClassifier;0.7763;0.7931;0.7763;0.778;0.6232;0.6286;0.6232;0.6252;0.7;0.6984;0.7;0.6931;0.915;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
LogisticRegression;0.6876;0.7074;0.6876;0.6849;0.7536;0.7917;0.7536;0.7567;0.6833;0.695;0.6833;0.6857;0.8315;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.7038;0.7351;0.7038;0.7029;0.6522;0.6543;0.6522;0.6524;0.6833;0.6913;0.6833;0.6837;0.8378;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.6907;0.7166;0.6907;0.6883;0.7681;0.7883;0.7681;0.77;0.6833;0.686;0.6833;0.6821;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.7037;0.737;0.7037;0.7035;0.6377;0.6519;0.6377;0.6373;0.6833;0.686;0.6833;0.6821;0.8462;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.7021;0.7283;0.7021;0.7003;0.6667;0.6861;0.6667;0.6635;0.6667;0.672;0.6667;0.6684;0.833;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7037;0.7262;0.7037;0.7026;0.6812;0.7279;0.6812;0.6806;0.6667;0.6745;0.6667;0.668;0.8398;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.6844;0.709;0.6844;0.6838;0.8116;0.8194;0.8116;0.81;0.65;0.6582;0.65;0.652;0.8355;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.6973;0.7228;0.6973;0.6984;0.6957;0.7173;0.6957;0.6919;0.65;0.6582;0.65;0.652;0.8416;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.6957;0.7204;0.6957;0.6957;0.6957;0.7206;0.6957;0.6939;0.65;0.6582;0.65;0.652;0.8402;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7005;0.725;0.7005;0.7022;0.7246;0.7502;0.7246;0.7191;0.65;0.6562;0.65;0.652;0.838;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.6909;0.7156;0.6909;0.6895;0.7536;0.7986;0.7536;0.751;0.65;0.6582;0.65;0.652;0.8414;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.7051;0.7319;0.7051;0.703;0.6522;0.6819;0.6522;0.6503;0.65;0.652;0.65;0.6507;0.8447;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.7086;0.7349;0.7086;0.7077;0.6522;0.7015;0.6522;0.654;0.65;0.652;0.65;0.6507;0.8354;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.6971;0.7264;0.6971;0.6964;0.6812;0.7;0.6812;0.6799;0.65;0.652;0.65;0.6507;0.8419;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.7054;0.7284;0.7054;0.7041;0.7101;0.7349;0.7101;0.7047;0.65;0.6508;0.65;0.6496;0.8356;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7022;0.7262;0.7022;0.702;0.6957;0.7154;0.6957;0.6965;0.6333;0.6423;0.6333;0.6357;0.8381;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.6956;0.7182;0.6956;0.695;0.6812;0.7098;0.6812;0.6747;0.6333;0.6423;0.6333;0.6357;0.8377;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.6876;0.7096;0.6876;0.6863;0.7826;0.7885;0.7826;0.7815;0.6333;0.6423;0.6333;0.6357;0.8347;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.6973;0.7189;0.6973;0.6963;0.7101;0.743;0.7101;0.7156;0.6333;0.6377;0.6333;0.6344;0.8373;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.7022;0.7192;0.7022;0.6986;0.6377;0.6631;0.6377;0.6401;0.6333;0.6377;0.6333;0.6344;0.8456;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
LogisticRegression;0.6956;0.718;0.6956;0.6956;0.6957;0.7337;0.6957;0.6962;0.6333;0.6377;0.6333;0.6344;0.8359;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.6972;0.7206;0.6972;0.6971;0.7101;0.7326;0.7101;0.7107;0.6333;0.6361;0.6333;0.6344;0.8354;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.6987;0.7225;0.6987;0.6967;0.6522;0.673;0.6522;0.6547;0.6167;0.6217;0.6167;0.6183;0.8375;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 28, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=28)"
LogisticRegression;0.6941;0.714;0.6941;0.6929;0.7391;0.7529;0.7391;0.7381;0.6167;0.6177;0.6167;0.6169;0.8376;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.6972;0.7211;0.6972;0.6969;0.7246;0.7357;0.7246;0.7228;0.6167;0.6167;0.6167;0.6167;0.8328;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 348, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=348)"
