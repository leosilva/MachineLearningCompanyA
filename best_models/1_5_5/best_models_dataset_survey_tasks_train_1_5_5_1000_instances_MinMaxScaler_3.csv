Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
SVC;0.8691;0.875;0.8691;0.8691;0.8763;0.8771;0.8763;0.8764;0.8167;0.8217;0.8167;0.816;0.943;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8653;0.8701;0.8653;0.8653;0.8931;0.8938;0.8931;0.8924;0.8167;0.8217;0.8167;0.816;0.9429;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8656;0.8733;0.8656;0.8655;0.8694;0.8695;0.8694;0.8687;0.8167;0.8175;0.8167;0.816;0.9409;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8622;0.8683;0.8622;0.8622;0.9103;0.911;0.9103;0.91;0.8;0.8013;0.8;0.8003;0.9411;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.8657;0.8723;0.8657;0.8655;0.8897;0.8907;0.8897;0.8899;0.8;0.8057;0.8;0.8003;0.94;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.8634;0.8698;0.8634;0.8634;0.8931;0.894;0.8931;0.8931;0.8;0.802;0.8;0.7997;0.9397;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.863;0.8696;0.863;0.8632;0.9103;0.9126;0.9103;0.9103;0.8;0.8079;0.8;0.7992;0.9391;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8626;0.8688;0.8626;0.8625;0.9003;0.902;0.9003;0.9003;0.7833;0.7934;0.7833;0.7843;0.9389;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8645;0.8711;0.8645;0.8646;0.8866;0.8892;0.8866;0.8867;0.7833;0.7934;0.7833;0.7843;0.9397;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.8672;0.8729;0.8672;0.8673;0.8862;0.8913;0.8862;0.8866;0.7833;0.7934;0.7833;0.7843;0.9406;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8629;0.8691;0.8629;0.8629;0.9003;0.9007;0.9003;0.9003;0.7833;0.7934;0.7833;0.7843;0.9398;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8588;0.8655;0.8588;0.8588;0.9207;0.9209;0.9207;0.9207;0.7833;0.7934;0.7833;0.7843;0.9392;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8618;0.8682;0.8618;0.862;0.9069;0.9095;0.9069;0.9068;0.7833;0.7934;0.7833;0.7843;0.938;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8607;0.8674;0.8607;0.8607;0.9103;0.9104;0.9103;0.9103;0.7833;0.7934;0.7833;0.7843;0.9376;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8683;0.8736;0.8683;0.8682;0.8694;0.8797;0.8694;0.8699;0.7833;0.7934;0.7833;0.7843;0.9429;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.8626;0.8684;0.8626;0.8626;0.8828;0.8841;0.8828;0.8827;0.7833;0.7934;0.7833;0.7843;0.9394;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
DecisionTreeClassifier;0.9085;0.9094;0.9085;0.9085;0.9034;0.909;0.9034;0.9038;0.7833;0.7934;0.7833;0.7843;0.9689;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
SVC;0.8668;0.8719;0.8668;0.8667;0.8966;0.8993;0.8966;0.8969;0.7833;0.7934;0.7833;0.7843;0.9407;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.863;0.8685;0.863;0.8629;0.9138;0.9161;0.9138;0.9139;0.7833;0.7838;0.7833;0.7832;0.9404;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8595;0.866;0.8595;0.8594;0.9175;0.9191;0.9175;0.9173;0.7833;0.7838;0.7833;0.7832;0.9368;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8599;0.867;0.8599;0.8598;0.9138;0.9171;0.9138;0.9135;0.7833;0.7873;0.7833;0.7831;0.9351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.8591;0.8649;0.8591;0.8591;0.9138;0.9164;0.9138;0.9131;0.7833;0.7873;0.7833;0.7831;0.9366;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8569;0.8634;0.8569;0.8566;0.8966;0.8973;0.8966;0.8965;0.7833;0.7873;0.7833;0.7831;0.9378;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
SVC;0.863;0.8692;0.863;0.863;0.8621;0.8625;0.8621;0.8621;0.7833;0.7873;0.7833;0.7831;0.942;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
MLPClassifier;0.8664;0.8702;0.8664;0.8664;0.8448;0.8535;0.8448;0.8466;0.7833;0.792;0.7833;0.783;0.9651;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
DecisionTreeClassifier;0.9127;0.9131;0.9127;0.9125;0.9003;0.9012;0.9003;0.9005;0.7833;0.7839;0.7833;0.7827;0.9712;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
KNeighborsClassifier;0.8936;0.895;0.8936;0.8933;0.931;0.9325;0.931;0.9312;0.7833;0.7839;0.7833;0.7827;0.9548;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9074;0.9087;0.9074;0.9075;0.9175;0.9201;0.9175;0.9176;0.7833;0.7839;0.7833;0.7827;0.9696;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9085;0.9095;0.9085;0.9085;0.8862;0.8887;0.8862;0.8864;0.7833;0.7839;0.7833;0.7827;0.9708;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.9093;0.9102;0.9093;0.9093;0.9276;0.9288;0.9276;0.9276;0.7833;0.7839;0.7833;0.7827;0.9667;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.9101;0.9108;0.9101;0.9101;0.9;0.9015;0.9;0.9001;0.7833;0.7839;0.7833;0.7827;0.9682;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.9055;0.9065;0.9055;0.9055;0.9414;0.9416;0.9414;0.9413;0.7833;0.7839;0.7833;0.7827;0.9687;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.9035;0.9047;0.9035;0.9035;0.9244;0.9257;0.9244;0.9243;0.7833;0.7839;0.7833;0.7827;0.969;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
SVC;0.8638;0.8697;0.8638;0.8638;0.8862;0.8912;0.8862;0.8864;0.7833;0.7839;0.7833;0.7827;0.9421;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.866;0.872;0.866;0.8661;0.9003;0.9027;0.9003;0.9002;0.7833;0.7839;0.7833;0.7827;0.9363;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
KNeighborsClassifier;0.8958;0.8987;0.8958;0.8959;0.8969;0.8982;0.8969;0.8969;0.7833;0.7876;0.7833;0.7825;0.9605;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.8707;0.8755;0.8707;0.8707;0.9207;0.9218;0.9207;0.9208;0.7833;0.8035;0.7833;0.7817;0.9648;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.8714;0.875;0.8714;0.8714;0.8931;0.895;0.8931;0.8932;0.7833;0.8035;0.7833;0.7817;0.9645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.866;0.8694;0.866;0.866;0.9172;0.9225;0.9172;0.9174;0.7833;0.8035;0.7833;0.7817;0.9642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.871;0.8763;0.871;0.8712;0.9034;0.9047;0.9034;0.9034;0.7833;0.8035;0.7833;0.7817;0.9664;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.871;0.8751;0.871;0.8712;0.8935;0.897;0.8935;0.8934;0.7833;0.8035;0.7833;0.7817;0.9659;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.8626;0.8677;0.8626;0.8628;0.9276;0.9295;0.9276;0.9276;0.7833;0.8019;0.7833;0.7816;0.9645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.8657;0.8702;0.8657;0.8658;0.9172;0.9201;0.9172;0.9176;0.7833;0.8019;0.7833;0.7816;0.9624;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8744;0.8785;0.8744;0.8744;0.8832;0.8931;0.8832;0.8832;0.7833;0.8019;0.7833;0.7816;0.9662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.8656;0.8696;0.8656;0.8656;0.9003;0.902;0.9003;0.9007;0.7833;0.8019;0.7833;0.7816;0.9647;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.8684;0.8723;0.8684;0.8684;0.9172;0.9191;0.9172;0.9173;0.7833;0.8019;0.7833;0.7816;0.9631;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.8622;0.8677;0.8622;0.8624;0.8969;0.8982;0.8969;0.8968;0.7833;0.8019;0.7833;0.7816;0.9646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.8699;0.8734;0.8699;0.8699;0.9172;0.9195;0.9172;0.9171;0.7833;0.8019;0.7833;0.7816;0.9645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8664;0.8712;0.8664;0.8667;0.9138;0.9174;0.9138;0.9139;0.7833;0.8019;0.7833;0.7816;0.9637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.8665;0.8708;0.8665;0.8664;0.9034;0.9056;0.9034;0.9034;0.7833;0.8019;0.7833;0.7816;0.9645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
KNeighborsClassifier;0.8974;0.8986;0.8974;0.8971;0.9172;0.9196;0.9172;0.9173;0.7833;0.7877;0.7833;0.7814;0.9591;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8993;0.9016;0.8993;0.8992;0.9244;0.926;0.9244;0.9248;0.7833;0.7877;0.7833;0.7814;0.9557;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9039;0.9055;0.9039;0.9038;0.8931;0.8978;0.8931;0.8935;0.7833;0.7877;0.7833;0.7814;0.9625;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9085;0.9091;0.9085;0.9085;0.9103;0.9139;0.9103;0.9102;0.7667;0.776;0.7667;0.7683;0.9668;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.9078;0.9089;0.9078;0.9077;0.8931;0.896;0.8931;0.8935;0.7667;0.776;0.7667;0.7683;0.9705;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
SVC;0.8618;0.8679;0.8618;0.8617;0.8931;0.8946;0.8931;0.8929;0.7667;0.7728;0.7667;0.7676;0.9389;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8569;0.8634;0.8569;0.8569;0.9241;0.9246;0.9241;0.924;0.7667;0.7687;0.7667;0.7668;0.936;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 212};SVC(C=10, probability=True, random_state=212)
SVC;0.8695;0.8758;0.8695;0.8696;0.8552;0.861;0.8552;0.8546;0.7667;0.7687;0.7667;0.7668;0.9389;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.866;0.8717;0.866;0.8658;0.89;0.8918;0.89;0.8902;0.7667;0.7687;0.7667;0.7668;0.9422;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
DecisionTreeClassifier;0.907;0.9082;0.907;0.907;0.9034;0.9047;0.9034;0.903;0.7667;0.7671;0.7667;0.7666;0.9693;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
SVC;0.8676;0.8745;0.8676;0.8677;0.8931;0.895;0.8931;0.8931;0.7667;0.7671;0.7667;0.7666;0.9398;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 374};SVC(C=10, probability=True, random_state=374)
DecisionTreeClassifier;0.9035;0.9057;0.9035;0.9034;0.9141;0.9167;0.9141;0.9138;0.7667;0.7671;0.7667;0.7666;0.971;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
KNeighborsClassifier;0.9043;0.9053;0.9043;0.9041;0.9003;0.9057;0.9003;0.9009;0.7667;0.7672;0.7667;0.7659;0.9616;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.8657;0.8689;0.8657;0.8656;0.9;0.9012;0.9;0.9002;0.7667;0.7903;0.7667;0.7658;0.9637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.8645;0.8691;0.8645;0.8647;0.9347;0.9351;0.9347;0.9345;0.7667;0.7903;0.7667;0.7658;0.9626;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
KNeighborsClassifier;0.8978;0.9;0.8978;0.8974;0.8935;0.8953;0.8935;0.8939;0.7667;0.7688;0.7667;0.7656;0.9617;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9016;0.9036;0.9016;0.9015;0.9138;0.9138;0.9138;0.9137;0.7667;0.7688;0.7667;0.7656;0.9606;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8691;0.8734;0.8691;0.8692;0.8316;0.8341;0.8316;0.8323;0.7667;0.779;0.7667;0.7654;0.9636;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.8684;0.8719;0.8684;0.8683;0.8862;0.8908;0.8862;0.8864;0.7667;0.7777;0.7667;0.7652;0.9636;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.8706;0.8754;0.8706;0.8705;0.8862;0.8948;0.8862;0.8867;0.7667;0.7777;0.7667;0.7652;0.9657;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
MLPClassifier;0.8622;0.8684;0.8622;0.8625;0.8655;0.8674;0.8655;0.8661;0.7667;0.7777;0.7667;0.7652;0.965;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 980, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=980)
KNeighborsClassifier;0.8928;0.8946;0.8928;0.8927;0.8931;0.8931;0.8931;0.893;0.7667;0.7708;0.7667;0.7646;0.9602;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8706;0.8759;0.8706;0.8709;0.9038;0.9038;0.9038;0.9036;0.7667;0.7789;0.7667;0.7643;0.9651;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8637;0.8694;0.8637;0.864;0.9103;0.9105;0.9103;0.9104;0.7667;0.777;0.7667;0.7642;0.9639;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8687;0.8728;0.8687;0.8687;0.8797;0.8824;0.8797;0.8802;0.7667;0.777;0.7667;0.7642;0.9654;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8668;0.8713;0.8668;0.8668;0.9207;0.9226;0.9207;0.9204;0.7667;0.777;0.7667;0.7642;0.9634;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.868;0.8733;0.868;0.8683;0.9069;0.9082;0.9069;0.9072;0.7667;0.777;0.7667;0.7642;0.9648;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8683;0.874;0.8683;0.8683;0.9072;0.9091;0.9072;0.9075;0.7667;0.777;0.7667;0.7642;0.965;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8722;0.8756;0.8722;0.8723;0.9069;0.9072;0.9069;0.9069;0.7667;0.777;0.7667;0.7642;0.9678;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8642;0.8686;0.8642;0.8644;0.9138;0.9162;0.9138;0.9142;0.7667;0.777;0.7667;0.7642;0.9635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
KNeighborsClassifier;0.9039;0.9059;0.9039;0.9041;0.8759;0.8809;0.8759;0.8768;0.7667;0.7657;0.7667;0.764;0.961;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9139;0.9144;0.9139;0.9138;0.931;0.9326;0.931;0.931;0.7667;0.7726;0.7667;0.7626;0.9709;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
RandomForestClassifier;0.9074;0.9082;0.9074;0.9072;0.9175;0.9176;0.9175;0.9175;0.7667;0.7827;0.7667;0.7595;0.9749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9024;0.9035;0.9024;0.9023;0.9175;0.9176;0.9175;0.9175;0.7667;0.7827;0.7667;0.7595;0.9757;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9131;0.9136;0.9131;0.913;0.9;0.9002;0.9;0.8999;0.7667;0.779;0.7667;0.7589;0.9785;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 186};RandomForestClassifier(n_estimators=10, random_state=186)
RandomForestClassifier;0.9116;0.9124;0.9116;0.9115;0.9;0.9002;0.9;0.8999;0.7667;0.779;0.7667;0.7589;0.9775;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 186};RandomForestClassifier(n_estimators=10, random_state=186)
RandomForestClassifier;0.9119;0.9129;0.9119;0.9119;0.9175;0.9175;0.9175;0.9175;0.7667;0.7784;0.7667;0.7585;0.9748;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 715};RandomForestClassifier(n_estimators=5, random_state=715)
DecisionTreeClassifier;0.9066;0.9076;0.9066;0.9066;0.9552;0.9563;0.9552;0.9551;0.75;0.7639;0.75;0.7517;0.967;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=209)
KNeighborsClassifier;0.902;0.9045;0.902;0.902;0.8621;0.8628;0.8621;0.8623;0.75;0.7578;0.75;0.7502;0.9657;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.897;0.8983;0.897;0.8968;0.9141;0.9189;0.9141;0.9143;0.75;0.7513;0.75;0.7497;0.9606;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.902;0.9044;0.902;0.9019;0.8966;0.8993;0.8966;0.8966;0.75;0.7513;0.75;0.7497;0.9624;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.9078;0.9083;0.9078;0.9078;0.9138;0.9136;0.9138;0.9136;0.75;0.7607;0.75;0.749;0.9681;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
KNeighborsClassifier;0.8971;0.8992;0.8971;0.8969;0.8931;0.897;0.8931;0.8933;0.75;0.7513;0.75;0.7485;0.9601;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.9097;0.9107;0.9097;0.9097;0.9;0.9035;0.9;0.8996;0.75;0.7503;0.75;0.748;0.9695;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9142;0.9144;0.9142;0.9142;0.8935;0.8956;0.8935;0.8934;0.75;0.7503;0.75;0.748;0.9707;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.9059;0.907;0.9059;0.9058;0.9138;0.9142;0.9138;0.9138;0.75;0.7503;0.75;0.748;0.9693;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.9108;0.9115;0.9108;0.9108;0.9;0.901;0.9;0.8997;0.75;0.7503;0.75;0.748;0.971;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
MLPClassifier;0.8703;0.8749;0.8703;0.8702;0.9172;0.9179;0.9172;0.917;0.75;0.7653;0.75;0.7478;0.9639;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
RandomForestClassifier;0.9089;0.9105;0.9089;0.9089;0.9069;0.908;0.9069;0.9067;0.75;0.7567;0.75;0.7452;0.9777;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 186};RandomForestClassifier(n_estimators=5, random_state=186)
RandomForestClassifier;0.9078;0.9089;0.9078;0.9077;0.9069;0.908;0.9069;0.9067;0.75;0.7567;0.75;0.7452;0.9768;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 186};RandomForestClassifier(n_estimators=5, random_state=186)
KNeighborsClassifier;0.9035;0.9052;0.9035;0.9036;0.9141;0.9153;0.9141;0.9142;0.75;0.749;0.75;0.7452;0.9609;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8944;0.8961;0.8944;0.8943;0.9207;0.9205;0.9207;0.9204;0.75;0.7648;0.75;0.7445;0.9587;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9128;0.9131;0.9128;0.9127;0.9241;0.9242;0.9241;0.9241;0.75;0.7663;0.75;0.7439;0.9753;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9147;0.9152;0.9147;0.9146;0.9241;0.9242;0.9241;0.9241;0.75;0.7663;0.75;0.7439;0.9756;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9139;0.9143;0.9139;0.9138;0.9207;0.9209;0.9207;0.9207;0.75;0.7663;0.75;0.7439;0.9748;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 715};RandomForestClassifier(n_estimators=10, random_state=715)
RandomForestClassifier;0.9104;0.9114;0.9104;0.9104;0.9103;0.9104;0.9103;0.9102;0.75;0.7663;0.75;0.7439;0.977;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 715};RandomForestClassifier(n_estimators=10, random_state=715)
RandomForestClassifier;0.91;0.9112;0.91;0.9101;0.8866;0.8885;0.8866;0.886;0.75;0.7645;0.75;0.7434;0.9774;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 186};RandomForestClassifier(n_estimators=5, random_state=186)
RandomForestClassifier;0.9089;0.9099;0.9089;0.9089;0.8866;0.8885;0.8866;0.886;0.75;0.7645;0.75;0.7434;0.9772;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 186};RandomForestClassifier(n_estimators=5, random_state=186)
KNeighborsClassifier;0.9032;0.9051;0.9032;0.9033;0.9034;0.9041;0.9034;0.9033;0.75;0.7547;0.75;0.7428;0.9609;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9001;0.9018;0.9001;0.9;0.9;0.9002;0.9;0.8998;0.7333;0.7473;0.7333;0.7342;0.9589;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8978;0.9003;0.8978;0.8976;0.9034;0.9042;0.9034;0.903;0.7333;0.7399;0.7333;0.7342;0.9643;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9016;0.9043;0.9016;0.9015;0.9;0.9024;0.9;0.8999;0.7333;0.7354;0.7333;0.7341;0.9595;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.9074;0.9076;0.9074;0.9074;0.8966;0.9029;0.8966;0.8972;0.7333;0.7337;0.7333;0.7332;0.9687;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.9108;0.9115;0.9108;0.9108;0.9072;0.9105;0.9072;0.9072;0.7333;0.7337;0.7333;0.7332;0.9697;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.9104;0.9106;0.9104;0.9104;0.8763;0.8766;0.8763;0.8764;0.7333;0.7337;0.7333;0.7326;0.9678;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=209)
DecisionTreeClassifier;0.9085;0.9098;0.9085;0.9085;0.9313;0.9314;0.9313;0.9313;0.7333;0.7478;0.7333;0.7314;0.9695;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
KNeighborsClassifier;0.9047;0.9062;0.9047;0.9044;0.8759;0.8761;0.8759;0.8759;0.7333;0.7429;0.7333;0.7312;0.9623;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
DecisionTreeClassifier;0.9093;0.9099;0.9093;0.9093;0.9207;0.9263;0.9207;0.9196;0.7333;0.7433;0.7333;0.7304;0.9702;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9097;0.9108;0.9097;0.9097;0.931;0.9315;0.931;0.9306;0.7333;0.7433;0.7333;0.7304;0.968;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
KNeighborsClassifier;0.8997;0.9014;0.8997;0.8996;0.9107;0.9117;0.9107;0.9109;0.7333;0.754;0.7333;0.7288;0.9605;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.902;0.9048;0.902;0.9021;0.9069;0.9073;0.9069;0.9062;0.7333;0.754;0.7333;0.7288;0.9624;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9059;0.9066;0.9059;0.9058;0.9414;0.9415;0.9414;0.9414;0.7333;0.7595;0.7333;0.7286;0.976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9074;0.9082;0.9074;0.9074;0.9414;0.9415;0.9414;0.9414;0.7333;0.7595;0.7333;0.7286;0.9753;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9135;0.9141;0.9135;0.9134;0.9072;0.908;0.9072;0.9074;0.7333;0.7507;0.7333;0.7282;0.977;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 715};RandomForestClassifier(n_estimators=20, random_state=715)
RandomForestClassifier;0.9097;0.9103;0.9097;0.9096;0.9103;0.9108;0.9103;0.9096;0.7333;0.7507;0.7333;0.7282;0.9749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9104;0.911;0.9104;0.9104;0.9103;0.9108;0.9103;0.9096;0.7333;0.7507;0.7333;0.7282;0.974;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9151;0.9157;0.9151;0.9149;0.8897;0.8899;0.8897;0.8897;0.7333;0.7507;0.7333;0.7282;0.9761;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9074;0.9084;0.9074;0.9074;0.9448;0.9452;0.9448;0.9447;0.7333;0.7507;0.7333;0.7282;0.9757;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 715};RandomForestClassifier(n_estimators=10, random_state=715)
RandomForestClassifier;0.9147;0.9154;0.9147;0.9145;0.8897;0.8899;0.8897;0.8897;0.7333;0.7507;0.7333;0.7282;0.9761;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9124;0.9129;0.9124;0.9123;0.9069;0.9066;0.9069;0.9064;0.7333;0.7417;0.7333;0.728;0.9764;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9147;0.9155;0.9147;0.9146;0.9069;0.9066;0.9069;0.9064;0.7333;0.7417;0.7333;0.728;0.9762;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
KNeighborsClassifier;0.9024;0.9036;0.9024;0.9023;0.8862;0.8857;0.8862;0.8858;0.7333;0.7392;0.7333;0.7265;0.9645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
LogisticRegression;0.7631;0.7824;0.7631;0.765;0.7655;0.7744;0.7655;0.7679;0.7167;0.7169;0.7167;0.7159;0.8992;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7574;0.7781;0.7574;0.7586;0.7655;0.7829;0.7655;0.7689;0.7167;0.7169;0.7167;0.7159;0.8989;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7577;0.778;0.7577;0.7597;0.7698;0.7831;0.7698;0.7735;0.7167;0.7169;0.7167;0.7159;0.8991;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
DecisionTreeClassifier;0.9062;0.9075;0.9062;0.9062;0.9448;0.9451;0.9448;0.9448;0.7167;0.73;0.7167;0.7156;0.9673;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
RandomForestClassifier;0.9181;0.9187;0.9181;0.9181;0.8793;0.8788;0.8793;0.8787;0.7167;0.7419;0.7167;0.7134;0.9756;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 715};RandomForestClassifier(n_estimators=20, random_state=715)
KNeighborsClassifier;0.9043;0.9062;0.9043;0.9043;0.8931;0.895;0.8931;0.8934;0.7167;0.7292;0.7167;0.7129;0.9626;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.9105;0.9116;0.9105;0.9105;0.8966;0.8963;0.8966;0.8962;0.7167;0.7299;0.7167;0.7121;0.9698;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
RandomForestClassifier;0.9074;0.908;0.9074;0.9074;0.9241;0.9242;0.9241;0.9241;0.7167;0.7405;0.7167;0.7101;0.9749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 715};RandomForestClassifier(n_estimators=10, random_state=715)
KNeighborsClassifier;0.9028;0.9051;0.9028;0.9027;0.9069;0.9067;0.9069;0.9067;0.7167;0.7478;0.7167;0.7096;0.9614;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9001;0.9023;0.9001;0.9;0.9107;0.9108;0.9107;0.9107;0.7167;0.7416;0.7167;0.7096;0.9575;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9139;0.9144;0.9139;0.9137;0.9107;0.9106;0.9107;0.9106;0.7167;0.7273;0.7167;0.7089;0.9777;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
RandomForestClassifier;0.9124;0.9133;0.9124;0.9122;0.9241;0.925;0.9241;0.9237;0.7167;0.7375;0.7167;0.7089;0.9766;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 715};RandomForestClassifier(n_estimators=20, random_state=715)
RandomForestClassifier;0.9104;0.911;0.9104;0.9103;0.9107;0.9106;0.9107;0.9106;0.7167;0.7273;0.7167;0.7089;0.9766;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 186};RandomForestClassifier(n_estimators=20, random_state=186)
LogisticRegression;0.7554;0.7742;0.7554;0.757;0.7897;0.804;0.7897;0.793;0.7;0.7014;0.7;0.6986;0.8992;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7534;0.7725;0.7534;0.7548;0.7663;0.7867;0.7663;0.7705;0.7;0.7014;0.7;0.6986;0.8991;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7555;0.7761;0.7555;0.7569;0.7862;0.7976;0.7862;0.7874;0.7;0.7014;0.7;0.6986;0.8996;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7554;0.7747;0.7554;0.7573;0.8103;0.8192;0.8103;0.8121;0.7;0.7014;0.7;0.6986;0.8986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7565;0.776;0.7565;0.7574;0.7663;0.7886;0.7663;0.7703;0.7;0.7014;0.7;0.6986;0.897;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7566;0.7756;0.7566;0.7584;0.8;0.8131;0.8;0.8022;0.7;0.7014;0.7;0.6986;0.9007;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.752;0.7715;0.752;0.7533;0.8034;0.8174;0.8034;0.8067;0.7;0.7014;0.7;0.6986;0.8962;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7597;0.7799;0.7597;0.7608;0.7793;0.787;0.7793;0.7802;0.7;0.7014;0.7;0.6986;0.8988;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7578;0.778;0.7578;0.759;0.7724;0.7965;0.7724;0.7752;0.7;0.7014;0.7;0.6986;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7527;0.7734;0.7527;0.7543;0.7938;0.8105;0.7938;0.7967;0.7;0.7014;0.7;0.6986;0.8997;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7542;0.7743;0.7542;0.7554;0.7938;0.8149;0.7938;0.7947;0.7;0.7014;0.7;0.6986;0.9001;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.7577;0.7771;0.7577;0.7595;0.8179;0.8325;0.8179;0.8194;0.7;0.7014;0.7;0.6986;0.8984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7478;0.767;0.7478;0.7495;0.7759;0.7889;0.7759;0.7781;0.7;0.7014;0.7;0.6986;0.899;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7658;0.7863;0.7658;0.7678;0.7759;0.7859;0.7759;0.7759;0.7;0.7014;0.7;0.6986;0.9008;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7555;0.773;0.7555;0.7569;0.7966;0.8184;0.7966;0.8004;0.7;0.7014;0.7;0.6986;0.8978;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7563;0.7763;0.7563;0.758;0.7759;0.7888;0.7759;0.7778;0.7;0.7014;0.7;0.6986;0.9021;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7619;0.7799;0.7619;0.7636;0.7828;0.7976;0.7828;0.7856;0.7;0.7014;0.7;0.6986;0.8994;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7616;0.7819;0.7616;0.7632;0.7655;0.7767;0.7655;0.7665;0.7;0.7014;0.7;0.6986;0.9005;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.765;0.7832;0.765;0.7664;0.7483;0.7722;0.7483;0.7525;0.7;0.7014;0.7;0.6986;0.9027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7509;0.7715;0.7509;0.7526;0.8138;0.8257;0.8138;0.8157;0.7;0.7014;0.7;0.6986;0.8972;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7593;0.779;0.7593;0.7615;0.8;0.8032;0.8;0.801;0.7;0.7014;0.7;0.6986;0.8985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7569;0.7754;0.7569;0.7582;0.7869;0.8018;0.7869;0.7902;0.7;0.7014;0.7;0.6986;0.8985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7561;0.7756;0.7561;0.7576;0.8076;0.82;0.8076;0.8104;0.7;0.7014;0.7;0.6986;0.899;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.755;0.7739;0.755;0.7567;0.7828;0.8029;0.7828;0.7862;0.7;0.7014;0.7;0.6986;0.8992;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7471;0.7682;0.7471;0.7491;0.8483;0.8523;0.8483;0.8497;0.7;0.7014;0.7;0.6986;0.8964;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7589;0.777;0.7589;0.7607;0.8;0.8098;0.8;0.8028;0.7;0.7014;0.7;0.6986;0.8988;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 324, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=324)"
LogisticRegression;0.7554;0.7737;0.7554;0.7572;0.8076;0.8183;0.8076;0.8105;0.7;0.7014;0.7;0.6986;0.8968;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
DecisionTreeClassifier;0.9104;0.9107;0.9104;0.9101;0.9141;0.9166;0.9141;0.9139;0.7;0.7078;0.7;0.6966;0.9679;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.912;0.9123;0.912;0.912;0.9138;0.915;0.9138;0.914;0.7;0.7078;0.7;0.6966;0.9696;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=831)
DecisionTreeClassifier;0.8998;0.9006;0.8998;0.8997;0.9414;0.9415;0.9414;0.9413;0.7;0.7078;0.7;0.6966;0.9681;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
RandomForestClassifier;0.9104;0.911;0.9104;0.9104;0.921;0.921;0.921;0.9207;0.7;0.7363;0.7;0.696;0.9761;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 715};RandomForestClassifier(n_estimators=10, random_state=715)
RandomForestClassifier;0.915;0.9159;0.915;0.915;0.8828;0.8865;0.8828;0.8825;0.7;0.7028;0.7;0.6947;0.9766;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 715};RandomForestClassifier(n_estimators=20, random_state=715)
KNeighborsClassifier;0.9051;0.9068;0.9051;0.9049;0.9003;0.9005;0.9003;0.9004;0.7;0.7219;0.7;0.6945;0.9641;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8993;0.9013;0.8993;0.8994;0.9276;0.9281;0.9276;0.9272;0.6833;0.7134;0.6833;0.6792;0.9619;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9047;0.9053;0.9047;0.9046;0.8966;0.8965;0.8966;0.8964;0.6833;0.7134;0.6833;0.6792;0.9645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
