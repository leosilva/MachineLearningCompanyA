Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8381;0.8427;0.8381;0.8374;0.8969;0.9002;0.8969;0.8976;0.85;0.8579;0.85;0.8507;0.9299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8396;0.8452;0.8396;0.8396;0.8621;0.8649;0.8621;0.8628;0.8333;0.8489;0.8333;0.8352;0.9276;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
RandomForestClassifier;0.8702;0.8768;0.8702;0.8707;0.8379;0.8387;0.8379;0.8372;0.8333;0.8348;0.8333;0.8337;0.9543;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
KNeighborsClassifier;0.8419;0.8469;0.8419;0.8411;0.8759;0.8812;0.8759;0.8772;0.8167;0.8373;0.8167;0.8184;0.9313;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
KNeighborsClassifier;0.8458;0.849;0.8458;0.846;0.8379;0.8433;0.8379;0.8376;0.8167;0.8253;0.8167;0.8183;0.93;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8385;0.8444;0.8385;0.8385;0.8828;0.8838;0.8828;0.8828;0.8167;0.8315;0.8167;0.8181;0.9365;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8691;0.8721;0.8691;0.8693;0.8345;0.841;0.8345;0.8353;0.8167;0.8224;0.8167;0.8181;0.9545;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 953};RandomForestClassifier(n_estimators=10, random_state=953)
KNeighborsClassifier;0.8346;0.8397;0.8346;0.8347;0.8625;0.863;0.8625;0.8624;0.8167;0.8315;0.8167;0.8181;0.9302;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8374;0.8412;0.8374;0.8351;0.8138;0.8261;0.8138;0.8156;0.8167;0.8315;0.8167;0.8181;0.9363;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8633;0.8666;0.8633;0.8633;0.8832;0.8854;0.8832;0.8836;0.8167;0.8224;0.8167;0.8173;0.9514;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
MLPClassifier;0.8496;0.8568;0.8496;0.8502;0.8517;0.8544;0.8517;0.8517;0.8167;0.8224;0.8167;0.8173;0.9502;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
KNeighborsClassifier;0.8392;0.8435;0.8392;0.8385;0.8763;0.8772;0.8763;0.8765;0.8167;0.8293;0.8167;0.8172;0.9326;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
RandomForestClassifier;0.8634;0.8678;0.8634;0.8639;0.9034;0.9058;0.9034;0.9037;0.8167;0.819;0.8167;0.8168;0.9529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 953};RandomForestClassifier(n_estimators=20, random_state=953)
MLPClassifier;0.8462;0.8513;0.8462;0.8467;0.8379;0.8433;0.8379;0.8385;0.8167;0.819;0.8167;0.8168;0.9514;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
RandomForestClassifier;0.8691;0.873;0.8691;0.8694;0.8517;0.8558;0.8517;0.8528;0.8167;0.819;0.8167;0.8168;0.9546;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 953};RandomForestClassifier(n_estimators=20, random_state=953)
MLPClassifier;0.8503;0.8568;0.8503;0.8507;0.8385;0.8392;0.8385;0.8379;0.8167;0.819;0.8167;0.8168;0.949;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
MLPClassifier;0.8484;0.8553;0.8484;0.849;0.8379;0.8452;0.8379;0.8394;0.8167;0.819;0.8167;0.8168;0.949;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
KNeighborsClassifier;0.8453;0.8515;0.8453;0.8451;0.8007;0.8059;0.8007;0.8;0.8;0.816;0.8;0.8023;0.9363;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8446;0.8518;0.8446;0.8446;0.8448;0.8483;0.8448;0.8459;0.8;0.813;0.8;0.8023;0.9363;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8354;0.8404;0.8354;0.8353;0.8759;0.8786;0.8759;0.8765;0.8;0.813;0.8;0.8023;0.9335;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8671;0.8713;0.8671;0.8674;0.8763;0.8786;0.8763;0.8765;0.8;0.819;0.8;0.8014;0.9541;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 953};RandomForestClassifier(n_estimators=20, random_state=953)
RandomForestClassifier;0.8698;0.8737;0.8698;0.8701;0.8522;0.8599;0.8522;0.8524;0.8;0.8109;0.8;0.8014;0.9545;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 421};RandomForestClassifier(n_estimators=10, random_state=421)
MLPClassifier;0.8431;0.8511;0.8431;0.8439;0.8759;0.8781;0.8759;0.8752;0.8;0.8038;0.8;0.801;0.9459;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
MLPClassifier;0.8443;0.8527;0.8443;0.8452;0.8586;0.86;0.8586;0.859;0.8;0.8038;0.8;0.801;0.9468;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
MLPClassifier;0.8411;0.8489;0.8411;0.8419;0.9038;0.9098;0.9038;0.9041;0.8;0.8038;0.8;0.801;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
MLPClassifier;0.8469;0.8545;0.8469;0.8474;0.8379;0.8469;0.8379;0.8398;0.8;0.8022;0.8;0.8008;0.9486;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
MLPClassifier;0.8435;0.8509;0.8435;0.8441;0.8759;0.8789;0.8759;0.8758;0.8;0.8022;0.8;0.8008;0.9474;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
MLPClassifier;0.8469;0.8549;0.8469;0.8475;0.8483;0.8498;0.8483;0.8471;0.8;0.8022;0.8;0.8008;0.9499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
MLPClassifier;0.8481;0.8551;0.8481;0.8486;0.8276;0.8307;0.8276;0.828;0.8;0.8022;0.8;0.8008;0.9494;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
MLPClassifier;0.845;0.8531;0.845;0.8456;0.8832;0.8857;0.8832;0.8837;0.8;0.8022;0.8;0.8008;0.949;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
KNeighborsClassifier;0.8385;0.8454;0.8385;0.8381;0.8625;0.8701;0.8625;0.8638;0.8;0.813;0.8;0.8006;0.9312;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8419;0.848;0.8419;0.8427;0.8866;0.8901;0.8866;0.8872;0.8;0.8039;0.8;0.7998;0.9457;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
KNeighborsClassifier;0.8534;0.857;0.8534;0.8533;0.8621;0.8626;0.8621;0.8623;0.8;0.8108;0.8;0.7996;0.9341;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8523;0.8557;0.8523;0.8526;0.8414;0.8427;0.8414;0.8418;0.8;0.8091;0.8;0.798;0.9359;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8546;0.8573;0.8546;0.8547;0.8069;0.8145;0.8069;0.8058;0.8;0.8029;0.8;0.797;0.9306;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.8676;0.8728;0.8676;0.8681;0.8552;0.8584;0.8552;0.8563;0.7833;0.7984;0.7833;0.786;0.9507;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
DecisionTreeClassifier;0.8614;0.8674;0.8614;0.862;0.8724;0.8733;0.8724;0.8727;0.7833;0.7986;0.7833;0.7853;0.9473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=19)
RandomForestClassifier;0.8722;0.8761;0.8722;0.8725;0.8414;0.8438;0.8414;0.8422;0.7833;0.7986;0.7833;0.7853;0.9541;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 953};RandomForestClassifier(n_estimators=10, random_state=953)
RandomForestClassifier;0.8645;0.8684;0.8645;0.8647;0.8724;0.8745;0.8724;0.8731;0.7833;0.7986;0.7833;0.7853;0.9521;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 953};RandomForestClassifier(n_estimators=20, random_state=953)
MLPClassifier;0.8442;0.8516;0.8442;0.8449;0.8897;0.8895;0.8897;0.8895;0.7833;0.7863;0.7833;0.7845;0.9468;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
MLPClassifier;0.8423;0.8506;0.8423;0.8434;0.9207;0.9204;0.9207;0.9203;0.7833;0.7863;0.7833;0.7845;0.9453;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
MLPClassifier;0.8488;0.8567;0.8488;0.8497;0.831;0.8548;0.831;0.8327;0.7833;0.7863;0.7833;0.7845;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
DecisionTreeClassifier;0.8603;0.8646;0.8603;0.8608;0.8414;0.848;0.8414;0.841;0.7833;0.7934;0.7833;0.7843;0.9484;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=19)
MLPClassifier;0.8465;0.8536;0.8465;0.8471;0.8316;0.8331;0.8316;0.8321;0.7833;0.7894;0.7833;0.7843;0.9484;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
KNeighborsClassifier;0.8404;0.8446;0.8404;0.8397;0.8414;0.859;0.8414;0.8423;0.7833;0.8068;0.7833;0.7843;0.929;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8491;0.8566;0.8491;0.8497;0.8625;0.862;0.8625;0.8622;0.7833;0.7863;0.7833;0.7839;0.9488;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
KNeighborsClassifier;0.8461;0.8528;0.8461;0.846;0.8625;0.8624;0.8625;0.8624;0.7833;0.7883;0.7833;0.7836;0.9321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8726;0.8761;0.8726;0.873;0.8448;0.8544;0.8448;0.8452;0.7833;0.7994;0.7833;0.7834;0.9558;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
KNeighborsClassifier;0.8339;0.8419;0.8339;0.8331;0.8621;0.865;0.8621;0.862;0.7833;0.7994;0.7833;0.7834;0.9312;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8488;0.857;0.8488;0.8494;0.8172;0.8184;0.8172;0.8176;0.7833;0.7957;0.7833;0.7832;0.9505;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
MLPClassifier;0.8423;0.8472;0.8423;0.843;0.8448;0.8518;0.8448;0.8463;0.7833;0.7957;0.7833;0.7832;0.9495;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
RandomForestClassifier;0.8676;0.8719;0.8676;0.8678;0.8483;0.8482;0.8483;0.8481;0.7833;0.792;0.7833;0.783;0.9556;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
RandomForestClassifier;0.8703;0.8737;0.8703;0.8705;0.8517;0.8591;0.8517;0.8529;0.7833;0.792;0.7833;0.783;0.9524;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
MLPClassifier;0.8458;0.8526;0.8458;0.8462;0.8586;0.8666;0.8586;0.8602;0.7833;0.7893;0.7833;0.7824;0.9459;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
MLPClassifier;0.8461;0.8525;0.8461;0.8467;0.8557;0.8598;0.8557;0.8562;0.7833;0.7893;0.7833;0.7824;0.9485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
KNeighborsClassifier;0.8496;0.8549;0.8496;0.8497;0.8172;0.8245;0.8172;0.8176;0.7833;0.8037;0.7833;0.7821;0.9349;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
RandomForestClassifier;0.8652;0.869;0.8652;0.8657;0.8866;0.8874;0.8866;0.8867;0.7667;0.7816;0.7667;0.77;0.951;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
DecisionTreeClassifier;0.8549;0.8591;0.8549;0.8551;0.8522;0.8525;0.8522;0.8524;0.7667;0.7795;0.7667;0.7691;0.9453;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8565;0.8614;0.8565;0.8568;0.8862;0.8874;0.8862;0.8865;0.7667;0.7866;0.7667;0.7689;0.9468;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8564;0.8608;0.8564;0.8567;0.8832;0.8883;0.8832;0.8838;0.7667;0.7866;0.7667;0.7689;0.9471;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=19)
KNeighborsClassifier;0.8519;0.8567;0.8519;0.852;0.8724;0.8787;0.8724;0.8731;0.7667;0.7866;0.7667;0.7689;0.9309;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8599;0.8645;0.8599;0.8606;0.8557;0.8613;0.8557;0.8553;0.7667;0.7866;0.7667;0.7689;0.9445;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.858;0.8631;0.858;0.8584;0.8759;0.881;0.8759;0.8768;0.7667;0.7866;0.7667;0.7689;0.9461;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8584;0.8637;0.8584;0.8587;0.9069;0.9091;0.9069;0.9074;0.7667;0.7866;0.7667;0.7689;0.9433;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8588;0.865;0.8588;0.8593;0.8655;0.8713;0.8655;0.8656;0.7667;0.7866;0.7667;0.7689;0.9437;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8569;0.8621;0.8569;0.8571;0.8759;0.8759;0.8759;0.8758;0.7667;0.7866;0.7667;0.7689;0.9425;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.858;0.863;0.858;0.8585;0.866;0.8753;0.866;0.8666;0.7667;0.7866;0.7667;0.7689;0.942;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8538;0.8586;0.8538;0.8541;0.8832;0.8929;0.8832;0.8845;0.7667;0.7866;0.7667;0.7689;0.945;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8619;0.8673;0.8619;0.8623;0.8483;0.8537;0.8483;0.8483;0.7667;0.7866;0.7667;0.7689;0.9454;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8592;0.8637;0.8592;0.8597;0.8828;0.8951;0.8828;0.8836;0.7667;0.7866;0.7667;0.7689;0.949;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8569;0.8622;0.8569;0.8571;0.8759;0.8794;0.8759;0.8765;0.7667;0.7866;0.7667;0.7689;0.9475;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=19)
DecisionTreeClassifier;0.8542;0.8593;0.8542;0.8545;0.8897;0.8915;0.8897;0.8897;0.7667;0.7866;0.7667;0.7689;0.9439;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=19)
DecisionTreeClassifier;0.8569;0.8626;0.8569;0.8572;0.8759;0.8875;0.8759;0.8778;0.7667;0.7866;0.7667;0.7689;0.944;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=19)
KNeighborsClassifier;0.8481;0.8543;0.8481;0.8482;0.831;0.8352;0.831;0.832;0.7667;0.7866;0.7667;0.7689;0.936;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8396;0.8455;0.8396;0.8394;0.8483;0.8548;0.8483;0.8488;0.7667;0.7866;0.7667;0.7689;0.9322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.832;0.8396;0.832;0.833;0.8345;0.839;0.8345;0.8349;0.7667;0.8063;0.7667;0.7685;0.9057;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
RandomForestClassifier;0.8722;0.8763;0.8722;0.8726;0.8483;0.8524;0.8483;0.8497;0.7667;0.776;0.7667;0.7683;0.9557;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
KNeighborsClassifier;0.8439;0.8499;0.8439;0.8437;0.8621;0.866;0.8621;0.8626;0.7667;0.7914;0.7667;0.768;0.9304;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8465;0.8545;0.8465;0.8475;0.8931;0.8978;0.8931;0.8935;0.7667;0.7697;0.7667;0.7678;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
RandomForestClassifier;0.8618;0.8663;0.8618;0.862;0.9;0.9051;0.9;0.9008;0.7667;0.78;0.7667;0.7677;0.9506;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
DecisionTreeClassifier;0.8561;0.8613;0.8561;0.8563;0.8724;0.8783;0.8724;0.8733;0.7667;0.78;0.7667;0.7677;0.9462;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
MLPClassifier;0.8423;0.8487;0.8423;0.843;0.8897;0.9006;0.8897;0.8903;0.7667;0.7754;0.7667;0.7673;0.947;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
RandomForestClassifier;0.8622;0.8665;0.8622;0.8626;0.8969;0.899;0.8969;0.8972;0.7667;0.7778;0.7667;0.7668;0.9508;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 953};RandomForestClassifier(n_estimators=10, random_state=953)
MLPClassifier;0.8465;0.8533;0.8465;0.8472;0.8488;0.8561;0.8488;0.8501;0.7667;0.7829;0.7667;0.7655;0.9486;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 470, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=470)
MLPClassifier;0.8446;0.8517;0.8446;0.8453;0.8379;0.8454;0.8379;0.8396;0.7667;0.7829;0.7667;0.7655;0.9448;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
MLPClassifier;0.8416;0.8477;0.8416;0.8422;0.8586;0.8641;0.8586;0.8598;0.7667;0.7749;0.7667;0.7647;0.9486;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
MLPClassifier;0.843;0.8499;0.843;0.8436;0.9107;0.9145;0.9107;0.9113;0.7667;0.7749;0.7667;0.7647;0.9456;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
KNeighborsClassifier;0.8446;0.8474;0.8446;0.8445;0.831;0.8335;0.831;0.8315;0.7667;0.7852;0.7667;0.7646;0.9311;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8373;0.8448;0.8373;0.837;0.866;0.8716;0.866;0.8667;0.7667;0.7771;0.7667;0.7638;0.9343;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8518;0.8565;0.8518;0.8517;0.8522;0.8565;0.8522;0.8535;0.7667;0.7824;0.7667;0.7616;0.9311;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
RandomForestClassifier;0.8668;0.8705;0.8668;0.8673;0.8797;0.8824;0.8797;0.8801;0.75;0.7632;0.75;0.754;0.9529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 953};RandomForestClassifier(n_estimators=20, random_state=953)
RandomForestClassifier;0.8699;0.8734;0.8699;0.8701;0.8655;0.8698;0.8655;0.8658;0.75;0.7744;0.75;0.7537;0.9512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 953};RandomForestClassifier(n_estimators=20, random_state=953)
KNeighborsClassifier;0.8423;0.8482;0.8423;0.8423;0.8552;0.8573;0.8552;0.8559;0.75;0.7678;0.75;0.7534;0.9356;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8311;0.8367;0.8311;0.8321;0.8488;0.8543;0.8488;0.8497;0.75;0.7828;0.75;0.753;0.9054;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8297;0.8348;0.8297;0.8307;0.8586;0.8738;0.8586;0.8596;0.75;0.7828;0.75;0.753;0.9002;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
DecisionTreeClassifier;0.8576;0.8637;0.8576;0.8582;0.8931;0.8955;0.8931;0.8933;0.75;0.7667;0.75;0.7529;0.9426;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=19)
DecisionTreeClassifier;0.8565;0.8627;0.8565;0.8565;0.8586;0.8584;0.8586;0.8582;0.75;0.7667;0.75;0.7529;0.9462;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=780)
DecisionTreeClassifier;0.858;0.8637;0.858;0.8581;0.8862;0.8916;0.8862;0.8866;0.75;0.7667;0.75;0.7529;0.9444;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=780)
DecisionTreeClassifier;0.858;0.8633;0.858;0.8584;0.8759;0.875;0.8759;0.875;0.75;0.7667;0.75;0.7529;0.9463;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8584;0.8627;0.8584;0.8587;0.8345;0.8355;0.8345;0.8348;0.75;0.7667;0.75;0.7529;0.9467;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=19)
DecisionTreeClassifier;0.8622;0.8672;0.8622;0.8626;0.8557;0.8627;0.8557;0.8571;0.75;0.7667;0.75;0.7529;0.9466;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
RandomForestClassifier;0.8645;0.8699;0.8645;0.8649;0.8862;0.8873;0.8862;0.8866;0.75;0.7703;0.75;0.7528;0.9507;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
RandomForestClassifier;0.8625;0.867;0.8625;0.8627;0.8866;0.8907;0.8866;0.8872;0.75;0.7748;0.75;0.7521;0.9517;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
SVC;0.8319;0.8374;0.8319;0.8328;0.8522;0.8589;0.8522;0.8529;0.75;0.7861;0.75;0.7512;0.9022;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8315;0.8382;0.8315;0.8327;0.8488;0.8522;0.8488;0.8495;0.75;0.7861;0.75;0.7512;0.9039;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.8347;0.8398;0.8347;0.8355;0.831;0.8397;0.831;0.8319;0.75;0.7861;0.75;0.7512;0.9035;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
SVC;0.8304;0.8372;0.8304;0.8313;0.8862;0.8899;0.8862;0.8869;0.75;0.7861;0.75;0.7512;0.9021;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.8301;0.8361;0.8301;0.8312;0.869;0.875;0.869;0.8698;0.75;0.7861;0.75;0.7512;0.9033;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8278;0.8329;0.8278;0.8287;0.8759;0.8835;0.8759;0.8771;0.75;0.7861;0.75;0.7512;0.9021;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.8277;0.8336;0.8277;0.8287;0.866;0.8706;0.866;0.8667;0.75;0.7861;0.75;0.7512;0.9034;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.8334;0.8396;0.8334;0.8343;0.8282;0.8411;0.8282;0.8296;0.75;0.7861;0.75;0.7512;0.9043;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
RandomForestClassifier;0.8649;0.8687;0.8649;0.8651;0.8828;0.8854;0.8828;0.8833;0.75;0.7616;0.75;0.7512;0.9512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
SVC;0.8305;0.8358;0.8305;0.8314;0.869;0.874;0.869;0.8701;0.75;0.7861;0.75;0.7512;0.9029;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
SVC;0.8324;0.8384;0.8324;0.8332;0.8517;0.8662;0.8517;0.8527;0.75;0.7861;0.75;0.7512;0.9022;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8293;0.8352;0.8293;0.8303;0.8621;0.8652;0.8621;0.8626;0.75;0.7861;0.75;0.7512;0.9001;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8232;0.8276;0.8232;0.8239;0.8621;0.8793;0.8621;0.8633;0.75;0.7861;0.75;0.7512;0.9013;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
RandomForestClassifier;0.8683;0.8729;0.8683;0.8687;0.869;0.8694;0.869;0.8692;0.75;0.767;0.75;0.7509;0.953;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
MLPClassifier;0.8454;0.8519;0.8454;0.846;0.8621;0.8676;0.8621;0.8632;0.75;0.767;0.75;0.7509;0.9492;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
DecisionTreeClassifier;0.8599;0.8653;0.8599;0.8601;0.8832;0.8843;0.8832;0.8835;0.75;0.77;0.75;0.7504;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8626;0.8666;0.8626;0.8627;0.8517;0.8543;0.8517;0.8523;0.75;0.77;0.75;0.7504;0.9487;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
KNeighborsClassifier;0.8553;0.8607;0.8553;0.8549;0.8276;0.8275;0.8276;0.8273;0.75;0.7616;0.75;0.7499;0.9366;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.8488;0.8541;0.8488;0.8495;0.8207;0.83;0.8207;0.8222;0.75;0.7558;0.75;0.7492;0.9501;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 839, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=839)
KNeighborsClassifier;0.8461;0.85;0.8461;0.8458;0.866;0.8689;0.866;0.8668;0.75;0.7689;0.75;0.7426;0.9369;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
RandomForestClassifier;0.8603;0.8643;0.8603;0.8606;0.8793;0.8847;0.8793;0.8792;0.7333;0.7481;0.7333;0.7369;0.9518;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 421};RandomForestClassifier(n_estimators=10, random_state=421)
RandomForestClassifier;0.8672;0.8712;0.8672;0.8673;0.8724;0.8802;0.8724;0.8733;0.7333;0.7556;0.7333;0.7367;0.9536;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 953};RandomForestClassifier(n_estimators=20, random_state=953)
SVC;0.8316;0.8374;0.8316;0.8326;0.8621;0.8703;0.8621;0.8628;0.7333;0.7649;0.7333;0.7361;0.9019;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
SVC;0.8282;0.8349;0.8282;0.8292;0.8483;0.855;0.8483;0.8492;0.7333;0.7649;0.7333;0.7361;0.9032;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
SVC;0.8278;0.8331;0.8278;0.8288;0.8621;0.8712;0.8621;0.8629;0.7333;0.7649;0.7333;0.7361;0.9016;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8262;0.8311;0.8262;0.827;0.8763;0.8848;0.8763;0.8772;0.7333;0.7649;0.7333;0.7361;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
SVC;0.8319;0.8385;0.8319;0.8329;0.866;0.8673;0.866;0.8659;0.7333;0.7649;0.7333;0.7361;0.9027;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
SVC;0.8328;0.8378;0.8328;0.8335;0.8276;0.8373;0.8276;0.8294;0.7333;0.7649;0.7333;0.7361;0.9065;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.8293;0.8341;0.8293;0.83;0.8483;0.861;0.8483;0.8492;0.7333;0.7649;0.7333;0.7361;0.9023;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.827;0.8329;0.827;0.8281;0.8897;0.895;0.8897;0.8901;0.7333;0.7649;0.7333;0.7361;0.9005;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.8289;0.8353;0.8289;0.8298;0.8414;0.8525;0.8414;0.8424;0.7333;0.7649;0.7333;0.7361;0.9044;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8285;0.8343;0.8285;0.8294;0.8483;0.8658;0.8483;0.8504;0.7333;0.7649;0.7333;0.7361;0.9058;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
SVC;0.8296;0.836;0.8296;0.8305;0.8935;0.897;0.8935;0.8941;0.7333;0.7649;0.7333;0.7361;0.9025;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
DecisionTreeClassifier;0.8649;0.8693;0.8649;0.8652;0.8419;0.8448;0.8419;0.8424;0.7333;0.7473;0.7333;0.7342;0.9439;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=19)
DecisionTreeClassifier;0.8622;0.8664;0.8622;0.8626;0.831;0.834;0.831;0.8312;0.7333;0.7473;0.7333;0.7342;0.9466;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.8595;0.8652;0.8595;0.86;0.8797;0.8817;0.8797;0.8799;0.7333;0.7473;0.7333;0.7342;0.9474;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=19)
SVC;0.8316;0.8388;0.8316;0.8328;0.8483;0.8511;0.8483;0.8482;0.7333;0.7629;0.7333;0.7309;0.9028;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 650};SVC(C=10, probability=True, random_state=650)
KNeighborsClassifier;0.8366;0.8424;0.8366;0.8364;0.8414;0.8434;0.8414;0.8383;0.7333;0.7431;0.7333;0.7294;0.929;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8649;0.8678;0.8649;0.865;0.8862;0.8943;0.8862;0.8874;0.7167;0.7494;0.7167;0.7217;0.9521;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
DecisionTreeClassifier;0.8573;0.8633;0.8573;0.8578;0.8517;0.8533;0.8517;0.8523;0.7167;0.7417;0.7167;0.7216;0.941;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
SVC;0.8308;0.8359;0.8308;0.8317;0.8655;0.8745;0.8655;0.8666;0.7167;0.7453;0.7167;0.7209;0.9041;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
RandomForestClassifier;0.8656;0.8697;0.8656;0.8658;0.8832;0.8899;0.8832;0.8842;0.7167;0.7373;0.7167;0.7208;0.9534;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
SVC;0.8262;0.8325;0.8262;0.8273;0.8621;0.8689;0.8621;0.8623;0.7167;0.7409;0.7167;0.7159;0.9013;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.827;0.8325;0.827;0.8278;0.8729;0.8793;0.8729;0.8737;0.7167;0.7409;0.7167;0.7159;0.9017;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, probability=True, random_state=499)
LogisticRegression;0.7968;0.8025;0.7968;0.7978;0.8103;0.8141;0.8103;0.8115;0.7;0.6984;0.7;0.6983;0.9123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.7968;0.802;0.7968;0.7977;0.7966;0.8002;0.7966;0.7976;0.7;0.6984;0.7;0.6983;0.909;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.8022;0.8075;0.8022;0.803;0.7931;0.7996;0.7931;0.7952;0.7;0.6984;0.7;0.6983;0.9118;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.8033;0.8085;0.8033;0.8043;0.7655;0.776;0.7655;0.7677;0.7;0.6984;0.7;0.6983;0.9129;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.796;0.8017;0.796;0.7973;0.8379;0.8407;0.8379;0.8389;0.7;0.6984;0.7;0.6983;0.9105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.7968;0.8032;0.7968;0.7977;0.8069;0.8076;0.8069;0.8069;0.7;0.6984;0.7;0.6983;0.9112;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.7986;0.8035;0.7986;0.7994;0.8179;0.8234;0.8179;0.8197;0.7;0.6984;0.7;0.6983;0.9112;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.7982;0.8043;0.7982;0.799;0.8247;0.8311;0.8247;0.8265;0.7;0.6984;0.7;0.6983;0.9116;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.7998;0.8052;0.7998;0.8008;0.7732;0.7819;0.7732;0.7756;0.7;0.6984;0.7;0.6983;0.9112;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.7991;0.8049;0.7991;0.8002;0.8034;0.8054;0.8034;0.8037;0.7;0.6984;0.7;0.6983;0.9117;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.7999;0.8047;0.7999;0.8007;0.7862;0.794;0.7862;0.7873;0.7;0.6984;0.7;0.6983;0.9107;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.7975;0.8024;0.7975;0.7984;0.7862;0.7985;0.7862;0.7886;0.7;0.6984;0.7;0.6983;0.9118;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.7999;0.8054;0.7999;0.8008;0.7897;0.7933;0.7897;0.7907;0.7;0.6984;0.7;0.6983;0.9115;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7999;0.8042;0.7999;0.8008;0.7897;0.7956;0.7897;0.7911;0.7;0.6984;0.7;0.6983;0.912;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7972;0.8025;0.7972;0.7982;0.8276;0.8322;0.8276;0.8289;0.7;0.6984;0.7;0.6983;0.9091;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7982;0.8029;0.7982;0.7992;0.7938;0.8015;0.7938;0.796;0.7;0.6984;0.7;0.6983;0.9119;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.799;0.8049;0.799;0.7998;0.811;0.8161;0.811;0.8126;0.7;0.6984;0.7;0.6983;0.9109;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7975;0.8026;0.7975;0.7982;0.811;0.816;0.811;0.8121;0.7;0.6984;0.7;0.6983;0.9098;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7983;0.8038;0.7983;0.7995;0.7897;0.7995;0.7897;0.7912;0.7;0.6984;0.7;0.6983;0.9114;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7964;0.8019;0.7964;0.7975;0.8138;0.8177;0.8138;0.8141;0.7;0.6984;0.7;0.6983;0.9077;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.793;0.7994;0.793;0.7939;0.8448;0.845;0.8448;0.8445;0.7;0.6984;0.7;0.6983;0.9084;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.8006;0.806;0.8006;0.8015;0.7931;0.795;0.7931;0.7937;0.7;0.6984;0.7;0.6983;0.9125;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.8044;0.8095;0.8044;0.8054;0.7759;0.7803;0.7759;0.7771;0.7;0.6984;0.7;0.6983;0.9139;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7967;0.802;0.7967;0.7976;0.8041;0.8123;0.8041;0.8054;0.7;0.6984;0.7;0.6983;0.9101;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.799;0.8049;0.799;0.8;0.7904;0.793;0.7904;0.7911;0.7;0.6984;0.7;0.6983;0.9105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.8002;0.8062;0.8002;0.8011;0.7835;0.7897;0.7835;0.7856;0.7;0.6984;0.7;0.6983;0.9125;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
RandomForestClassifier;0.8626;0.8665;0.8626;0.863;0.8379;0.843;0.8379;0.8383;0.6833;0.7144;0.6833;0.6907;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 17};RandomForestClassifier(n_estimators=5, random_state=17)
RandomForestClassifier;0.8703;0.8751;0.8703;0.8706;0.8448;0.8477;0.8448;0.8451;0.6833;0.7022;0.6833;0.6866;0.9563;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 17};RandomForestClassifier(n_estimators=20, random_state=17)
LogisticRegression;0.7983;0.8038;0.7983;0.7993;0.7966;0.7975;0.7966;0.797;0.6833;0.6804;0.6833;0.6816;0.9116;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 559, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=559)"
LogisticRegression;0.7991;0.8045;0.7991;0.8003;0.7931;0.7955;0.7931;0.7929;0.6833;0.6804;0.6833;0.6816;0.9095;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
LogisticRegression;0.7972;0.8017;0.7972;0.7979;0.8034;0.8068;0.8034;0.8047;0.6833;0.6804;0.6833;0.6816;0.9104;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 479, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=479)"
LogisticRegression;0.8022;0.8076;0.8022;0.8031;0.769;0.7757;0.769;0.7713;0.6833;0.6804;0.6833;0.6816;0.911;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 977, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=977)"
RandomForestClassifier;0.8595;0.8629;0.8595;0.8598;0.8694;0.8728;0.8694;0.8697;0.6667;0.6856;0.6667;0.672;0.9551;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 421};RandomForestClassifier(n_estimators=20, random_state=421)
