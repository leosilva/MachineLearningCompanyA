Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9307;0.931;0.9307;0.9306;0.9141;0.9147;0.9141;0.9139;0.9167;0.9245;0.9167;0.9181;0.9768;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
RandomForestClassifier;0.9277;0.9282;0.9277;0.9276;0.9072;0.9071;0.9072;0.9069;0.9167;0.9245;0.9167;0.9181;0.9758;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
RandomForestClassifier;0.9277;0.9285;0.9277;0.9277;0.9069;0.9076;0.9069;0.9067;0.9167;0.9245;0.9167;0.9181;0.9768;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
RandomForestClassifier;0.9223;0.9228;0.9223;0.9223;0.9345;0.9346;0.9345;0.9344;0.9167;0.9245;0.9167;0.9181;0.9753;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
RandomForestClassifier;0.9208;0.921;0.9208;0.9208;0.9241;0.9246;0.9241;0.9234;0.9167;0.9245;0.9167;0.9181;0.9757;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.9253;0.9259;0.9253;0.9253;0.9175;0.9181;0.9175;0.9176;0.9167;0.9245;0.9167;0.9181;0.9748;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.9258;0.9261;0.9258;0.9257;0.9345;0.9361;0.9345;0.9349;0.9167;0.9245;0.9167;0.9181;0.9753;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
RandomForestClassifier;0.9196;0.9205;0.9196;0.9197;0.9278;0.928;0.9278;0.9277;0.9;0.912;0.9;0.9019;0.9754;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
KNeighborsClassifier;0.881;0.8832;0.881;0.8809;0.9034;0.9033;0.9034;0.9034;0.9;0.913;0.9;0.9019;0.9585;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9238;0.9246;0.9238;0.9238;0.9276;0.9278;0.9276;0.9274;0.9;0.912;0.9;0.9019;0.9763;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
KNeighborsClassifier;0.8867;0.8888;0.8867;0.8867;0.9038;0.9035;0.9038;0.9032;0.9;0.913;0.9;0.9019;0.9571;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9242;0.9249;0.9242;0.9242;0.9138;0.9137;0.9138;0.9136;0.9;0.912;0.9;0.9019;0.9772;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.9295;0.93;0.9295;0.9296;0.9107;0.9104;0.9107;0.9103;0.9;0.912;0.9;0.9019;0.9768;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.9231;0.9234;0.9231;0.923;0.9241;0.9255;0.9241;0.9245;0.9;0.912;0.9;0.9019;0.9769;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
RandomForestClassifier;0.9246;0.9258;0.9246;0.9246;0.9278;0.9278;0.9278;0.9278;0.9;0.912;0.9;0.9019;0.9759;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
RandomForestClassifier;0.9235;0.9236;0.9235;0.9235;0.9379;0.9382;0.9379;0.9379;0.9;0.9061;0.9;0.9015;0.9749;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.9231;0.9235;0.9231;0.9231;0.9276;0.9276;0.9276;0.9273;0.9;0.9061;0.9;0.9015;0.9759;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.92;0.9206;0.92;0.92;0.9483;0.9487;0.9483;0.9484;0.9;0.9043;0.9;0.9011;0.9745;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.9246;0.9253;0.9246;0.9246;0.9034;0.9039;0.9034;0.9029;0.9;0.9043;0.9;0.9011;0.9749;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.9242;0.9247;0.9242;0.9242;0.9276;0.9283;0.9276;0.9278;0.9;0.9043;0.9;0.9011;0.9753;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.93;0.9305;0.93;0.93;0.9172;0.9189;0.9172;0.9169;0.9;0.9043;0.9;0.9011;0.9764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
KNeighborsClassifier;0.8814;0.8835;0.8814;0.8813;0.8897;0.8903;0.8897;0.8898;0.9;0.9043;0.9;0.9011;0.9568;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.928;0.9283;0.928;0.9281;0.9416;0.9422;0.9416;0.9413;0.8833;0.9004;0.8833;0.8856;0.976;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
RandomForestClassifier;0.9238;0.9243;0.9238;0.9238;0.9379;0.938;0.9379;0.9378;0.8833;0.8915;0.8833;0.885;0.9748;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
KNeighborsClassifier;0.8813;0.8833;0.8813;0.881;0.9244;0.9256;0.9244;0.9244;0.8833;0.8915;0.8833;0.885;0.956;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9292;0.9294;0.9292;0.9292;0.9172;0.9188;0.9172;0.9169;0.8833;0.8915;0.8833;0.885;0.9746;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
KNeighborsClassifier;0.8852;0.8868;0.8852;0.8852;0.931;0.9322;0.931;0.9303;0.8833;0.8915;0.8833;0.885;0.9578;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8791;0.8815;0.8791;0.879;0.9621;0.9625;0.9621;0.9621;0.8833;0.8915;0.8833;0.885;0.955;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9269;0.9275;0.9269;0.9268;0.9244;0.9244;0.9244;0.9244;0.8833;0.8915;0.8833;0.885;0.9762;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
KNeighborsClassifier;0.8825;0.8848;0.8825;0.8825;0.9034;0.9037;0.9034;0.9035;0.8833;0.8915;0.8833;0.885;0.9611;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8863;0.8884;0.8863;0.8864;0.9138;0.9158;0.9138;0.9135;0.8833;0.8915;0.8833;0.885;0.9571;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8863;0.8884;0.8863;0.8864;0.8969;0.8969;0.8969;0.8961;0.8833;0.8915;0.8833;0.885;0.9597;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8875;0.8896;0.8875;0.8873;0.9207;0.9206;0.9207;0.9206;0.8833;0.8915;0.8833;0.885;0.9566;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8848;0.8866;0.8848;0.8847;0.9345;0.9345;0.9345;0.9344;0.8833;0.8915;0.8833;0.885;0.9572;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8917;0.8939;0.8917;0.8915;0.9;0.9;0.9;0.8998;0.8833;0.8915;0.8833;0.885;0.9553;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8848;0.8864;0.8848;0.8846;0.9103;0.9108;0.9103;0.9101;0.8833;0.8915;0.8833;0.885;0.9599;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8791;0.8812;0.8791;0.8793;0.9379;0.9386;0.9379;0.9376;0.8833;0.8915;0.8833;0.885;0.9568;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8772;0.8793;0.8772;0.8772;0.9103;0.9112;0.9103;0.91;0.8833;0.8915;0.8833;0.885;0.9559;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8848;0.8874;0.8848;0.8846;0.9107;0.9106;0.9107;0.9105;0.8833;0.8915;0.8833;0.885;0.9586;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8764;0.8784;0.8764;0.8763;0.9416;0.9425;0.9416;0.9414;0.8833;0.8915;0.8833;0.885;0.9556;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9277;0.928;0.9277;0.9277;0.9138;0.9137;0.9138;0.9134;0.8833;0.8856;0.8833;0.8841;0.9758;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
RandomForestClassifier;0.9215;0.9222;0.9215;0.9215;0.9517;0.9522;0.9517;0.9516;0.8833;0.8856;0.8833;0.8841;0.9758;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
RandomForestClassifier;0.9258;0.9261;0.9258;0.9257;0.931;0.933;0.931;0.9305;0.8833;0.8856;0.8833;0.8841;0.9738;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
RandomForestClassifier;0.9269;0.9276;0.9269;0.9268;0.9175;0.9178;0.9175;0.9176;0.8833;0.8856;0.8833;0.8841;0.9779;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
DecisionTreeClassifier;0.8802;0.8811;0.8802;0.8804;0.8;0.7982;0.8;0.7982;0.8833;0.8868;0.8833;0.884;0.9102;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=802)
DecisionTreeClassifier;0.881;0.8823;0.881;0.8813;0.8724;0.8713;0.8724;0.8711;0.8833;0.8868;0.8833;0.884;0.9111;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
MLPClassifier;0.8113;0.8146;0.8113;0.8122;0.8379;0.8417;0.8379;0.8362;0.8833;0.8833;0.8833;0.8833;0.9331;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
KNeighborsClassifier;0.8863;0.888;0.8863;0.8862;0.931;0.9312;0.931;0.9308;0.8667;0.8796;0.8667;0.8692;0.9567;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9204;0.9206;0.9204;0.9204;0.9448;0.9447;0.9448;0.9447;0.8667;0.8795;0.8667;0.8687;0.9745;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 1};RandomForestClassifier(n_estimators=20, random_state=1)
KNeighborsClassifier;0.8909;0.8932;0.8909;0.8909;0.8966;0.8962;0.8966;0.8961;0.8667;0.8795;0.8667;0.8687;0.9598;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9265;0.9269;0.9265;0.9265;0.9276;0.9284;0.9276;0.9274;0.8667;0.8795;0.8667;0.8687;0.9763;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
KNeighborsClassifier;0.8875;0.8898;0.8875;0.8872;0.9141;0.9143;0.9141;0.9138;0.8667;0.8724;0.8667;0.8681;0.9544;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8852;0.8879;0.8852;0.885;0.9276;0.9283;0.9276;0.9278;0.8667;0.8724;0.8667;0.8681;0.9594;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8848;0.8868;0.8848;0.8848;0.8966;0.8967;0.8966;0.8956;0.8667;0.8724;0.8667;0.8681;0.9579;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8848;0.8865;0.8848;0.8846;0.9241;0.9264;0.9241;0.9241;0.8667;0.8724;0.8667;0.8681;0.9554;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8844;0.8863;0.8844;0.8845;0.921;0.922;0.921;0.9201;0.8667;0.8724;0.8667;0.8681;0.9532;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8856;0.8879;0.8856;0.8853;0.9207;0.9231;0.9207;0.9204;0.8667;0.8739;0.8667;0.8679;0.9573;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8913;0.8919;0.8913;0.8915;0.8591;0.8629;0.8591;0.8584;0.8667;0.8681;0.8667;0.867;0.9191;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
MLPClassifier;0.8075;0.8098;0.8075;0.8085;0.8655;0.8649;0.8655;0.8648;0.8667;0.8681;0.8667;0.867;0.9335;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
DecisionTreeClassifier;0.8894;0.8899;0.8894;0.8896;0.866;0.871;0.866;0.8623;0.8667;0.8667;0.8667;0.8667;0.9174;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
DecisionTreeClassifier;0.8886;0.8896;0.8886;0.8886;0.8316;0.8303;0.8316;0.8306;0.8667;0.8667;0.8667;0.8667;0.9164;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
MLPClassifier;0.8155;0.8167;0.8155;0.816;0.8655;0.8648;0.8655;0.8651;0.8667;0.8673;0.8667;0.8666;0.9331;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
MLPClassifier;0.8082;0.8118;0.8082;0.8096;0.8557;0.8593;0.8557;0.8564;0.8667;0.8673;0.8667;0.8666;0.9339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
MLPClassifier;0.7979;0.8021;0.7979;0.7992;0.8557;0.8556;0.8557;0.8549;0.8667;0.8664;0.8667;0.8662;0.9308;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.8029;0.8085;0.8029;0.8041;0.8759;0.8774;0.8759;0.8748;0.8667;0.8664;0.8667;0.8662;0.9304;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.7941;0.7996;0.7941;0.796;0.8552;0.8564;0.8552;0.8511;0.8667;0.8664;0.8667;0.8662;0.9313;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.8121;0.8153;0.8121;0.8134;0.8034;0.8016;0.8034;0.8021;0.8667;0.8664;0.8667;0.8662;0.9365;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
DecisionTreeClassifier;0.8986;0.8992;0.8986;0.8988;0.8621;0.8641;0.8621;0.8607;0.8667;0.8664;0.8667;0.8662;0.9243;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
MLPClassifier;0.8124;0.8154;0.8124;0.8131;0.8351;0.8511;0.8351;0.8353;0.8667;0.8677;0.8667;0.8661;0.934;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
KNeighborsClassifier;0.8833;0.8864;0.8833;0.8832;0.9172;0.918;0.9172;0.9172;0.85;0.8685;0.85;0.8532;0.9572;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8817;0.8831;0.8817;0.8817;0.8935;0.8933;0.8935;0.8932;0.85;0.8594;0.85;0.8524;0.9589;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8878;0.8886;0.8878;0.8878;0.8419;0.8427;0.8419;0.8406;0.85;0.8557;0.85;0.8514;0.9159;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
KNeighborsClassifier;0.8882;0.8909;0.8882;0.888;0.9313;0.9316;0.9313;0.9312;0.85;0.8541;0.85;0.851;0.959;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8879;0.8903;0.8879;0.8877;0.9241;0.9242;0.9241;0.9238;0.85;0.8522;0.85;0.8508;0.9569;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8155;0.8178;0.8155;0.8159;0.8483;0.8468;0.8483;0.847;0.85;0.8539;0.85;0.8505;0.9331;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
MLPClassifier;0.8071;0.8113;0.8071;0.808;0.8793;0.8802;0.8793;0.8769;0.85;0.8514;0.85;0.8504;0.9331;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.8113;0.8153;0.8113;0.8129;0.8345;0.835;0.8345;0.8336;0.85;0.8514;0.85;0.8504;0.9343;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
MLPClassifier;0.8097;0.8123;0.8097;0.8108;0.8625;0.8662;0.8625;0.8606;0.85;0.8554;0.85;0.8504;0.9334;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
MLPClassifier;0.8021;0.8077;0.8021;0.8033;0.8483;0.849;0.8483;0.8438;0.85;0.85;0.85;0.85;0.9307;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
DecisionTreeClassifier;0.8902;0.8906;0.8902;0.8902;0.8724;0.8774;0.8724;0.871;0.85;0.8506;0.85;0.8499;0.9179;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
DecisionTreeClassifier;0.8813;0.8821;0.8813;0.8814;0.8591;0.8597;0.8591;0.8593;0.85;0.8506;0.85;0.8499;0.9113;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
DecisionTreeClassifier;0.8928;0.8938;0.8928;0.8927;0.8034;0.8048;0.8034;0.8038;0.85;0.8506;0.85;0.8499;0.9197;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8875;0.8888;0.8875;0.8876;0.8621;0.8631;0.8621;0.8615;0.85;0.8506;0.85;0.8499;0.9159;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8791;0.8797;0.8791;0.8792;0.8759;0.8769;0.8759;0.8749;0.85;0.8497;0.85;0.8495;0.9099;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
MLPClassifier;0.8017;0.8061;0.8017;0.8022;0.8729;0.8732;0.8729;0.8721;0.85;0.8497;0.85;0.8495;0.9326;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
MLPClassifier;0.8071;0.8101;0.8071;0.8082;0.8448;0.8461;0.8448;0.8428;0.85;0.8497;0.85;0.8495;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
SVC;0.7776;0.7919;0.7776;0.7802;0.8557;0.8601;0.8557;0.8529;0.85;0.8505;0.85;0.8489;0.9108;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.783;0.7981;0.783;0.7852;0.8241;0.8223;0.8241;0.8217;0.85;0.8505;0.85;0.8489;0.9143;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7791;0.7942;0.7791;0.7818;0.866;0.8705;0.866;0.8631;0.85;0.8505;0.85;0.8489;0.9113;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7803;0.7949;0.7803;0.7823;0.8552;0.8557;0.8552;0.8531;0.85;0.8505;0.85;0.8489;0.9113;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7837;0.7981;0.7837;0.7862;0.8316;0.8336;0.8316;0.8283;0.85;0.8505;0.85;0.8489;0.9111;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7788;0.7945;0.7788;0.7818;0.8207;0.8198;0.8207;0.8165;0.85;0.8505;0.85;0.8489;0.9131;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7826;0.7968;0.7826;0.785;0.831;0.832;0.831;0.83;0.85;0.8505;0.85;0.8489;0.9143;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.7758;0.7903;0.7758;0.7777;0.8345;0.8336;0.8345;0.8324;0.85;0.8505;0.85;0.8489;0.9112;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.7784;0.7939;0.7784;0.7812;0.831;0.828;0.831;0.8283;0.85;0.8505;0.85;0.8489;0.9109;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7735;0.7892;0.7735;0.7756;0.8517;0.8508;0.8517;0.8511;0.85;0.8505;0.85;0.8489;0.9093;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.7788;0.7952;0.7788;0.7813;0.8483;0.8511;0.8483;0.8457;0.85;0.8505;0.85;0.8489;0.9114;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.7788;0.7936;0.7788;0.7812;0.831;0.8465;0.831;0.8255;0.85;0.8505;0.85;0.8489;0.9115;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.7861;0.8017;0.7861;0.7888;0.8276;0.8324;0.8276;0.8229;0.85;0.8505;0.85;0.8489;0.911;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7826;0.7972;0.7826;0.785;0.8552;0.8562;0.8552;0.8526;0.85;0.8505;0.85;0.8489;0.9115;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7799;0.794;0.7799;0.7811;0.8448;0.8454;0.8448;0.8428;0.85;0.8505;0.85;0.8489;0.911;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7792;0.7937;0.7792;0.7817;0.8483;0.8468;0.8483;0.8466;0.85;0.8505;0.85;0.8489;0.9129;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.778;0.7943;0.778;0.7806;0.8552;0.855;0.8552;0.8521;0.85;0.8505;0.85;0.8489;0.9116;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7818;0.7955;0.7818;0.7847;0.8586;0.8589;0.8586;0.8571;0.85;0.8505;0.85;0.8489;0.9122;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7746;0.7913;0.7746;0.7773;0.869;0.8682;0.869;0.8675;0.85;0.8505;0.85;0.8489;0.9089;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7834;0.7977;0.7834;0.786;0.8621;0.8642;0.8621;0.8596;0.85;0.8505;0.85;0.8489;0.9096;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
MLPClassifier;0.8066;0.8102;0.8066;0.8077;0.8454;0.845;0.8454;0.8433;0.85;0.8505;0.85;0.8489;0.934;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
MLPClassifier;0.8094;0.8132;0.8094;0.8102;0.8103;0.8104;0.8103;0.8087;0.85;0.8505;0.85;0.8489;0.9328;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
SVC;0.7749;0.79;0.7749;0.7778;0.8694;0.8687;0.8694;0.8682;0.85;0.8505;0.85;0.8489;0.9091;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.776;0.7921;0.776;0.7784;0.8385;0.843;0.8385;0.8347;0.85;0.8505;0.85;0.8489;0.9097;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
MLPClassifier;0.8105;0.8132;0.8105;0.8112;0.8552;0.8543;0.8552;0.8542;0.85;0.8505;0.85;0.8489;0.9308;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.8155;0.8203;0.8155;0.8169;0.8103;0.8112;0.8103;0.8089;0.85;0.8505;0.85;0.8489;0.9346;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.799;0.804;0.799;0.7994;0.8282;0.8275;0.8282;0.8268;0.85;0.8505;0.85;0.8489;0.9301;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
SVC;0.7795;0.7934;0.7795;0.7819;0.8385;0.8364;0.8385;0.8355;0.85;0.8505;0.85;0.8489;0.9118;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7742;0.7883;0.7742;0.7771;0.8552;0.8565;0.8552;0.8534;0.85;0.8505;0.85;0.8489;0.91;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.7768;0.7915;0.7768;0.7793;0.8557;0.859;0.8557;0.8549;0.85;0.8505;0.85;0.8489;0.911;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
SVC;0.7788;0.7929;0.7788;0.7814;0.8517;0.8513;0.8517;0.8514;0.85;0.8505;0.85;0.8489;0.9106;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.7857;0.8002;0.7857;0.7879;0.8552;0.855;0.8552;0.8525;0.85;0.8505;0.85;0.8489;0.9132;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
MLPClassifier;0.8098;0.8142;0.8098;0.8114;0.8448;0.8485;0.8448;0.8422;0.85;0.8492;0.85;0.8485;0.9322;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
DecisionTreeClassifier;0.8832;0.8841;0.8832;0.8832;0.866;0.8646;0.866;0.865;0.85;0.8499;0.85;0.8468;0.9125;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
RandomForestClassifier;0.9242;0.9251;0.9242;0.9243;0.9172;0.9179;0.9172;0.9174;0.8333;0.8486;0.8333;0.8354;0.976;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
DecisionTreeClassifier;0.8852;0.8869;0.8852;0.8854;0.8517;0.8539;0.8517;0.8521;0.8333;0.8419;0.8333;0.8353;0.914;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
DecisionTreeClassifier;0.8909;0.8921;0.8909;0.891;0.8414;0.8413;0.8414;0.8407;0.8333;0.8507;0.8333;0.835;0.9183;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
KNeighborsClassifier;0.8806;0.883;0.8806;0.8805;0.9;0.8996;0.9;0.8996;0.8333;0.8409;0.8333;0.8349;0.9584;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8906;0.8913;0.8906;0.8907;0.8483;0.8497;0.8483;0.8482;0.8333;0.8355;0.8333;0.8341;0.918;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=16)
MLPClassifier;0.8098;0.8128;0.8098;0.8112;0.8517;0.8511;0.8517;0.851;0.8333;0.8333;0.8333;0.8333;0.9329;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
MLPClassifier;0.814;0.8173;0.814;0.8151;0.8241;0.8226;0.8241;0.8222;0.8333;0.8333;0.8333;0.8333;0.9349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 219, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=219)
MLPClassifier;0.8087;0.8125;0.8087;0.8098;0.8345;0.8324;0.8345;0.8328;0.8333;0.8333;0.8333;0.8333;0.9334;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
DecisionTreeClassifier;0.8783;0.8793;0.8783;0.8784;0.8552;0.8597;0.8552;0.8538;0.8333;0.8341;0.8333;0.8327;0.9088;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
DecisionTreeClassifier;0.8978;0.899;0.8978;0.8981;0.8379;0.8403;0.8379;0.8378;0.8333;0.8341;0.8333;0.8327;0.9238;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
DecisionTreeClassifier;0.8787;0.8802;0.8787;0.8789;0.8276;0.8276;0.8276;0.8276;0.8333;0.8341;0.8333;0.8327;0.909;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
DecisionTreeClassifier;0.8902;0.8914;0.8902;0.8902;0.8276;0.8328;0.8276;0.8253;0.8333;0.8383;0.8333;0.8327;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
DecisionTreeClassifier;0.8917;0.8919;0.8917;0.8915;0.8828;0.8821;0.8828;0.8817;0.8333;0.8322;0.8333;0.8324;0.9189;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
SVC;0.778;0.7935;0.778;0.7801;0.8586;0.862;0.8586;0.857;0.8333;0.8333;0.8333;0.8323;0.908;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
MLPClassifier;0.8197;0.822;0.8197;0.8206;0.8172;0.8167;0.8172;0.8129;0.8333;0.8333;0.8333;0.8323;0.9329;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
SVC;0.7795;0.7936;0.7795;0.7824;0.8316;0.8295;0.8316;0.8294;0.8333;0.8333;0.8333;0.8323;0.9103;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 174};SVC(C=10, probability=True, random_state=174)
SVC;0.7787;0.7929;0.7787;0.7807;0.8316;0.839;0.8316;0.8313;0.8333;0.8333;0.8333;0.8323;0.909;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 441};SVC(C=10, probability=True, random_state=441)
MLPClassifier;0.8178;0.8191;0.8178;0.8185;0.8247;0.8278;0.8247;0.8204;0.8333;0.8333;0.8333;0.8323;0.9349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
DecisionTreeClassifier;0.8825;0.8838;0.8825;0.8827;0.8379;0.8435;0.8379;0.8351;0.8167;0.8187;0.8167;0.8163;0.9121;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
MLPClassifier;0.8075;0.8109;0.8075;0.8081;0.831;0.8314;0.831;0.8277;0.8167;0.8163;0.8167;0.8162;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 218, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=218)
DecisionTreeClassifier;0.8802;0.8825;0.8802;0.8803;0.866;0.8693;0.866;0.8643;0.8167;0.8228;0.8167;0.8156;0.9101;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=584)
DecisionTreeClassifier;0.8917;0.8928;0.8917;0.8917;0.8276;0.8275;0.8276;0.8275;0.8167;0.8178;0.8167;0.8148;0.9188;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
LogisticRegression;0.6946;0.7041;0.6946;0.6964;0.6828;0.714;0.6828;0.6853;0.8;0.8148;0.8;0.8038;0.8771;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.6942;0.7059;0.6942;0.6965;0.6966;0.729;0.6966;0.7019;0.8;0.8089;0.8;0.8023;0.877;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.701;0.7092;0.701;0.7033;0.7148;0.7372;0.7148;0.7204;0.8;0.8069;0.8;0.8021;0.8734;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.6965;0.7069;0.6965;0.699;0.7172;0.7447;0.7172;0.7206;0.8;0.8069;0.8;0.8021;0.8745;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.7004;0.7093;0.7004;0.703;0.7345;0.7635;0.7345;0.7374;0.8;0.8069;0.8;0.8021;0.8749;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.6934;0.7018;0.6934;0.6955;0.7069;0.7246;0.7069;0.7105;0.8;0.8069;0.8;0.8021;0.8751;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.7053;0.7155;0.7053;0.7081;0.6793;0.7251;0.6793;0.6817;0.8;0.8069;0.8;0.8021;0.8779;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.703;0.7118;0.703;0.7056;0.7172;0.7451;0.7172;0.7198;0.8;0.8069;0.8;0.8021;0.8745;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.7014;0.7111;0.7014;0.7039;0.7457;0.7663;0.7457;0.7472;0.8;0.8069;0.8;0.8021;0.8749;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
DecisionTreeClassifier;0.8813;0.8824;0.8813;0.8813;0.8625;0.8646;0.8625;0.8626;0.8;0.8079;0.8;0.8018;0.911;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
MLPClassifier;0.8109;0.8143;0.8109;0.8117;0.8586;0.8588;0.8586;0.8581;0.8;0.8035;0.8;0.8005;0.9317;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
DecisionTreeClassifier;0.8848;0.8862;0.8848;0.885;0.8213;0.822;0.8213;0.82;0.8;0.8093;0.8;0.8;0.9136;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=16)
MLPClassifier;0.8032;0.8058;0.8032;0.8038;0.8557;0.8548;0.8557;0.8549;0.8;0.8005;0.8;0.7999;0.9329;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
DecisionTreeClassifier;0.8875;0.8888;0.8875;0.8878;0.8483;0.848;0.8483;0.8465;0.8;0.8068;0.8;0.7989;0.9159;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=584)
DecisionTreeClassifier;0.8898;0.8907;0.8898;0.8899;0.8517;0.851;0.8517;0.8512;0.8;0.8031;0.8;0.7976;0.9176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 16};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=16)
LogisticRegression;0.6953;0.7034;0.6953;0.6977;0.7;0.6993;0.7;0.6995;0.8;0.7966;0.8;0.794;0.8746;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
LogisticRegression;0.693;0.705;0.693;0.6958;0.7079;0.7145;0.7079;0.7096;0.8;0.7966;0.8;0.794;0.8755;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.7034;0.714;0.7034;0.7062;0.6966;0.6954;0.6966;0.6954;0.8;0.7966;0.8;0.794;0.8769;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
LogisticRegression;0.7011;0.7092;0.7011;0.7034;0.7103;0.7399;0.7103;0.7142;0.7833;0.7944;0.7833;0.7868;0.875;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
LogisticRegression;0.6954;0.7054;0.6954;0.6981;0.7034;0.738;0.7034;0.7067;0.7833;0.7944;0.7833;0.7868;0.8744;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
LogisticRegression;0.6922;0.7021;0.6922;0.6948;0.7526;0.7789;0.7526;0.7544;0.7833;0.7944;0.7833;0.7868;0.8733;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.7003;0.7093;0.7003;0.7026;0.7138;0.7308;0.7138;0.7182;0.7833;0.7944;0.7833;0.7868;0.8752;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.695;0.7048;0.695;0.6977;0.7;0.733;0.7;0.7021;0.7833;0.7944;0.7833;0.7868;0.8755;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.696;0.7056;0.696;0.698;0.7113;0.7394;0.7113;0.7145;0.7833;0.797;0.7833;0.7862;0.8741;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
LogisticRegression;0.6946;0.7034;0.6946;0.6968;0.7241;0.7503;0.7241;0.7275;0.7833;0.7887;0.7833;0.7851;0.8742;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
DecisionTreeClassifier;0.8829;0.8838;0.8829;0.8828;0.8379;0.8415;0.8379;0.8379;0.7833;0.7865;0.7833;0.7837;0.9122;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
LogisticRegression;0.6962;0.7086;0.6962;0.6988;0.7241;0.7321;0.7241;0.7256;0.7833;0.7786;0.7833;0.7787;0.8772;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.6992;0.7074;0.6992;0.7012;0.7034;0.7024;0.7034;0.7022;0.7833;0.7786;0.7833;0.7787;0.8745;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
LogisticRegression;0.6987;0.7062;0.6987;0.7009;0.6907;0.7228;0.6907;0.696;0.7667;0.7759;0.7667;0.7692;0.8764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
LogisticRegression;0.7006;0.71;0.7006;0.7032;0.6907;0.7209;0.6907;0.6968;0.7667;0.7717;0.7667;0.7679;0.8764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.6927;0.6998;0.6927;0.6939;0.7379;0.7589;0.7379;0.7438;0.7667;0.7717;0.7667;0.7679;0.872;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.6937;0.7025;0.6937;0.696;0.756;0.7795;0.756;0.7588;0.7667;0.7717;0.7667;0.7679;0.8711;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.6939;0.7033;0.6939;0.6963;0.7103;0.7304;0.7103;0.7141;0.7667;0.7731;0.7667;0.767;0.8744;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
LogisticRegression;0.6976;0.7044;0.6976;0.6994;0.7216;0.7424;0.7216;0.7249;0.7667;0.7731;0.7667;0.767;0.8764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 135, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=135)"
DecisionTreeClassifier;0.8871;0.8877;0.8871;0.8872;0.8483;0.8518;0.8483;0.8452;0.7667;0.767;0.7667;0.7666;0.9153;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 802};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=802)
LogisticRegression;0.6996;0.7081;0.6996;0.7012;0.731;0.7314;0.731;0.7307;0.7667;0.7595;0.7667;0.7593;0.8724;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.7053;0.715;0.7053;0.7079;0.6931;0.7276;0.6931;0.6979;0.75;0.7558;0.75;0.7505;0.8765;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 312, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=312)"
LogisticRegression;0.7003;0.7095;0.7003;0.7028;0.6966;0.7239;0.6966;0.7005;0.7333;0.7419;0.7333;0.7348;0.875;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 283, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=283)"
