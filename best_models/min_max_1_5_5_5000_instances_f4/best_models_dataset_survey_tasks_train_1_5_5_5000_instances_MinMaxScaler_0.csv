Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9336;0.9351;0.9336;0.9336;0.9329;0.9327;0.9329;0.9325;0.85;0.8579;0.85;0.8507;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.931;0.931;0.931;0.9308;0.9289;0.9289;0.9289;0.9284;0.8333;0.8372;0.8333;0.8339;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.931;0.9316;0.931;0.9309;0.9443;0.9443;0.9443;0.944;0.8333;0.8372;0.8333;0.8339;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9344;0.9358;0.9344;0.9344;0.949;0.9491;0.949;0.9487;0.8333;0.8372;0.8333;0.8339;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9317;0.9322;0.9317;0.9317;0.9343;0.9344;0.9343;0.9337;0.8333;0.8458;0.8333;0.8338;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9404;0.9418;0.9404;0.9404;0.9242;0.9263;0.9242;0.9242;0.8333;0.836;0.8333;0.8335;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 66};RandomForestClassifier(n_estimators=5, random_state=66)
RandomForestClassifier;0.9376;0.9389;0.9376;0.9376;0.9349;0.9368;0.9349;0.9349;0.8333;0.8339;0.8333;0.8333;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 995};RandomForestClassifier(n_estimators=10, random_state=995)
RandomForestClassifier;0.9393;0.9407;0.9393;0.9393;0.9356;0.9367;0.9356;0.9356;0.8333;0.8339;0.8333;0.8333;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 233};RandomForestClassifier(n_estimators=5, random_state=233)
KNeighborsClassifier;0.9344;0.9361;0.9344;0.9344;0.9289;0.9287;0.9289;0.9287;0.8333;0.8432;0.8333;0.8333;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9395;0.9411;0.9395;0.9394;0.9322;0.9344;0.9322;0.9324;0.8333;0.8339;0.8333;0.8333;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 233};RandomForestClassifier(n_estimators=20, random_state=233)
RandomForestClassifier;0.938;0.9391;0.938;0.938;0.9336;0.9347;0.9336;0.9336;0.8333;0.8448;0.8333;0.8329;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 66};RandomForestClassifier(n_estimators=5, random_state=66)
KNeighborsClassifier;0.9356;0.9372;0.9356;0.9357;0.9349;0.9349;0.9349;0.9344;0.8167;0.8234;0.8167;0.8178;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9324;0.9337;0.9324;0.9325;0.9309;0.931;0.9309;0.9308;0.8167;0.8234;0.8167;0.8178;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.93;0.9313;0.93;0.93;0.9423;0.9422;0.9423;0.9421;0.8167;0.8277;0.8167;0.8175;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9342;0.9349;0.9342;0.9341;0.9336;0.9334;0.9336;0.9333;0.8167;0.8238;0.8167;0.8172;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9321;0.9332;0.9321;0.9321;0.9295;0.9296;0.9295;0.9296;0.8167;0.8238;0.8167;0.8172;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9292;0.9305;0.9292;0.9292;0.9403;0.9402;0.9403;0.94;0.8167;0.8238;0.8167;0.8172;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9297;0.9313;0.9297;0.9298;0.9329;0.9329;0.9329;0.9328;0.8167;0.818;0.8167;0.817;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9377;0.9395;0.9377;0.9377;0.943;0.9441;0.943;0.9429;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 995};RandomForestClassifier(n_estimators=10, random_state=995)
RandomForestClassifier;0.9388;0.9401;0.9388;0.9387;0.9336;0.9348;0.9336;0.9335;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 995};RandomForestClassifier(n_estimators=20, random_state=995)
RandomForestClassifier;0.9378;0.9393;0.9378;0.9378;0.9383;0.9405;0.9383;0.9382;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 66};RandomForestClassifier(n_estimators=20, random_state=66)
RandomForestClassifier;0.9377;0.9391;0.9377;0.9377;0.9403;0.9414;0.9403;0.9402;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 995};RandomForestClassifier(n_estimators=20, random_state=995)
RandomForestClassifier;0.9389;0.9408;0.9389;0.9389;0.9423;0.9437;0.9423;0.9424;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 995};RandomForestClassifier(n_estimators=20, random_state=995)
RandomForestClassifier;0.9396;0.9413;0.9396;0.9396;0.9343;0.9372;0.9343;0.9342;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 995};RandomForestClassifier(n_estimators=10, random_state=995)
RandomForestClassifier;0.9389;0.9405;0.9389;0.9389;0.9369;0.9385;0.9369;0.9369;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 66};RandomForestClassifier(n_estimators=20, random_state=66)
RandomForestClassifier;0.9375;0.9391;0.9375;0.9375;0.9396;0.9411;0.9396;0.9396;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 233};RandomForestClassifier(n_estimators=10, random_state=233)
KNeighborsClassifier;0.9297;0.9312;0.9297;0.9298;0.9322;0.9322;0.9322;0.9319;0.8167;0.819;0.8167;0.8168;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.9376;0.9391;0.9376;0.9375;0.9376;0.9384;0.9376;0.9375;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 233};RandomForestClassifier(n_estimators=5, random_state=233)
KNeighborsClassifier;0.9292;0.9308;0.9292;0.9292;0.9403;0.9403;0.9403;0.9401;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9325;0.9334;0.9325;0.9325;0.9255;0.9252;0.9255;0.9252;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9383;0.9398;0.9383;0.9383;0.9315;0.9339;0.9315;0.9316;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 233};RandomForestClassifier(n_estimators=5, random_state=233)
KNeighborsClassifier;0.928;0.929;0.928;0.9282;0.9343;0.9339;0.9343;0.934;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9372;0.9383;0.9372;0.9372;0.9409;0.9429;0.9409;0.941;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 995};RandomForestClassifier(n_estimators=20, random_state=995)
KNeighborsClassifier;0.9317;0.9332;0.9317;0.9317;0.9215;0.9213;0.9215;0.9211;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9295;0.9312;0.9295;0.9295;0.9336;0.9335;0.9336;0.9332;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9314;0.9328;0.9314;0.9313;0.9242;0.9241;0.9242;0.9236;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.926;0.9277;0.926;0.926;0.9342;0.934;0.9342;0.934;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9355;0.9371;0.9355;0.9355;0.9483;0.9494;0.9483;0.9483;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 233};RandomForestClassifier(n_estimators=10, random_state=233)
RandomForestClassifier;0.9394;0.9408;0.9394;0.9394;0.9309;0.9326;0.9309;0.9307;0.8167;0.8187;0.8167;0.8163;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 233};RandomForestClassifier(n_estimators=10, random_state=233)
RandomForestClassifier;0.9374;0.9389;0.9374;0.9373;0.9477;0.9486;0.9477;0.9476;0.8167;0.8175;0.8167;0.816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 66};RandomForestClassifier(n_estimators=5, random_state=66)
KNeighborsClassifier;0.9312;0.9333;0.9312;0.9313;0.945;0.9457;0.945;0.9449;0.8167;0.8217;0.8167;0.816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9383;0.9396;0.9383;0.9382;0.9403;0.9408;0.9403;0.9402;0.8167;0.8175;0.8167;0.816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 233};RandomForestClassifier(n_estimators=10, random_state=233)
SVC;0.9011;0.9046;0.9011;0.9011;0.9416;0.9437;0.9416;0.9416;0.8167;0.8217;0.8167;0.816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
KNeighborsClassifier;0.9333;0.934;0.9333;0.9333;0.9228;0.9231;0.9228;0.9227;0.8167;0.8296;0.8167;0.8156;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.9012;0.9047;0.9012;0.9013;0.9356;0.9391;0.9356;0.9354;0.8167;0.8172;0.8167;0.8155;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
RandomForestClassifier;0.9362;0.9382;0.9362;0.9362;0.947;0.9471;0.947;0.9469;0.8;0.8072;0.8;0.8005;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 995};RandomForestClassifier(n_estimators=20, random_state=995)
DecisionTreeClassifier;0.938;0.9394;0.938;0.938;0.9349;0.9355;0.9349;0.935;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9391;0.9406;0.9391;0.9391;0.9409;0.9415;0.9409;0.9409;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.9381;0.9401;0.9381;0.9381;0.9477;0.9481;0.9477;0.9477;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.9384;0.9401;0.9384;0.9383;0.9356;0.9382;0.9356;0.9358;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9382;0.94;0.9382;0.9382;0.9443;0.9446;0.9443;0.9443;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9392;0.9409;0.9392;0.9391;0.9336;0.9344;0.9336;0.9335;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.938;0.9399;0.938;0.938;0.9363;0.9375;0.9363;0.9364;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9387;0.9405;0.9387;0.9387;0.9362;0.937;0.9362;0.9362;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.9392;0.9404;0.9392;0.9391;0.9356;0.9361;0.9356;0.9356;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.9398;0.9415;0.9398;0.9398;0.9249;0.927;0.9249;0.9251;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
RandomForestClassifier;0.9368;0.9387;0.9368;0.9368;0.9484;0.95;0.9484;0.9484;0.8;0.8013;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 233};RandomForestClassifier(n_estimators=20, random_state=233)
DecisionTreeClassifier;0.9365;0.9384;0.9365;0.9365;0.9409;0.9429;0.9409;0.9411;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
KNeighborsClassifier;0.9311;0.9318;0.9311;0.931;0.9323;0.9323;0.9323;0.932;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9313;0.932;0.9313;0.9313;0.9302;0.9299;0.9302;0.9298;0.8;0.8057;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9394;0.9408;0.9394;0.9393;0.9349;0.9364;0.9349;0.935;0.8;0.8049;0.8;0.8002;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 995};RandomForestClassifier(n_estimators=20, random_state=995)
KNeighborsClassifier;0.9283;0.9301;0.9283;0.9282;0.9356;0.9365;0.9356;0.9355;0.8;0.8049;0.8;0.8002;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9284;0.9297;0.9284;0.9284;0.947;0.9477;0.947;0.9471;0.8;0.8049;0.8;0.8002;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.9329;0.9352;0.9329;0.933;0.9343;0.9356;0.9343;0.9345;0.8;0.8119;0.8;0.8001;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
RandomForestClassifier;0.9381;0.9398;0.9381;0.9381;0.9323;0.9338;0.9323;0.9324;0.8;0.8014;0.8;0.7998;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 233};RandomForestClassifier(n_estimators=5, random_state=233)
RandomForestClassifier;0.9386;0.9403;0.9386;0.9385;0.9315;0.9334;0.9315;0.9316;0.8;0.8014;0.8;0.7998;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 995};RandomForestClassifier(n_estimators=20, random_state=995)
DecisionTreeClassifier;0.9377;0.9393;0.9377;0.9377;0.9436;0.9457;0.9436;0.9437;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
SVC;0.901;0.9044;0.901;0.901;0.9356;0.94;0.9356;0.9356;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
DecisionTreeClassifier;0.9393;0.9412;0.9393;0.9393;0.9356;0.9384;0.9356;0.9357;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.938;0.9396;0.938;0.9379;0.9396;0.9412;0.9396;0.9396;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
SVC;0.9019;0.9054;0.9019;0.9019;0.9282;0.9313;0.9282;0.9281;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
RandomForestClassifier;0.938;0.9395;0.938;0.9379;0.9376;0.9385;0.9376;0.9375;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 66};RandomForestClassifier(n_estimators=10, random_state=66)
SVC;0.902;0.9057;0.902;0.902;0.9282;0.9328;0.9282;0.928;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
RandomForestClassifier;0.9369;0.9387;0.9369;0.9369;0.945;0.9473;0.945;0.945;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 66};RandomForestClassifier(n_estimators=10, random_state=66)
SVC;0.8999;0.9038;0.8999;0.9;0.9389;0.9409;0.9389;0.9389;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
SVC;0.9021;0.9056;0.9021;0.9022;0.9403;0.9445;0.9403;0.9403;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
SVC;0.9009;0.9046;0.9009;0.9009;0.9356;0.9392;0.9356;0.9356;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
DecisionTreeClassifier;0.9368;0.9382;0.9368;0.9367;0.9343;0.938;0.9343;0.9346;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.9377;0.9395;0.9377;0.9377;0.9423;0.9435;0.9423;0.9423;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
KNeighborsClassifier;0.9244;0.9262;0.9244;0.9246;0.9289;0.9292;0.9289;0.9285;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.9011;0.9046;0.9011;0.9011;0.9268;0.9309;0.9268;0.9268;0.8;0.802;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
RandomForestClassifier;0.9386;0.9401;0.9386;0.9386;0.9396;0.9399;0.9396;0.9395;0.8;0.7997;0.8;0.7995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 66};RandomForestClassifier(n_estimators=5, random_state=66)
RandomForestClassifier;0.9387;0.9406;0.9387;0.9387;0.9342;0.9353;0.9342;0.9343;0.8;0.8073;0.8;0.7994;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 66};RandomForestClassifier(n_estimators=5, random_state=66)
MLPClassifier;0.9342;0.9364;0.9342;0.9342;0.9315;0.9325;0.9315;0.9316;0.7833;0.8111;0.7833;0.7851;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
DecisionTreeClassifier;0.9368;0.9387;0.9368;0.9369;0.943;0.9432;0.943;0.943;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.9378;0.9399;0.9378;0.9378;0.9356;0.9365;0.9356;0.9354;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.9366;0.9383;0.9366;0.9366;0.9315;0.9317;0.9315;0.9313;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.9395;0.9411;0.9395;0.9395;0.9296;0.9297;0.9296;0.9293;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.9375;0.9391;0.9375;0.9375;0.9503;0.9512;0.9503;0.9503;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.9366;0.9382;0.9366;0.9366;0.9356;0.9363;0.9356;0.9354;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9363;0.938;0.9363;0.9363;0.9517;0.9521;0.9517;0.9516;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.9389;0.9405;0.9389;0.939;0.9295;0.9323;0.9295;0.9294;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9392;0.9405;0.9392;0.9391;0.9295;0.9334;0.9295;0.9294;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9376;0.9393;0.9376;0.9376;0.9403;0.9406;0.9403;0.9401;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
DecisionTreeClassifier;0.9391;0.9405;0.9391;0.9391;0.9268;0.927;0.9268;0.9265;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.9391;0.9407;0.9391;0.9391;0.9275;0.9304;0.9275;0.9274;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 752};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=752)
DecisionTreeClassifier;0.937;0.9388;0.937;0.937;0.9456;0.9473;0.9456;0.9456;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 106};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=106)
DecisionTreeClassifier;0.9367;0.9385;0.9367;0.9367;0.9436;0.9444;0.9436;0.9435;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 819};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=819)
SVC;0.9014;0.905;0.9014;0.9014;0.9289;0.9311;0.9289;0.9289;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
SVC;0.9012;0.9046;0.9012;0.9012;0.9342;0.9371;0.9342;0.934;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
SVC;0.9002;0.904;0.9002;0.9003;0.9443;0.9472;0.9443;0.9442;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
SVC;0.8998;0.9035;0.8998;0.8998;0.9356;0.9399;0.9356;0.9355;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
SVC;0.902;0.9055;0.902;0.902;0.9215;0.9268;0.9215;0.9213;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
SVC;0.9017;0.9053;0.9017;0.9018;0.9275;0.9315;0.9275;0.9272;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
SVC;0.9021;0.9056;0.9021;0.9022;0.9342;0.9381;0.9342;0.9342;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
SVC;0.9011;0.9047;0.9011;0.9012;0.9302;0.9341;0.9302;0.9304;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
SVC;0.9004;0.904;0.9004;0.9004;0.9349;0.9385;0.9349;0.9348;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
SVC;0.9022;0.9057;0.9022;0.9023;0.9309;0.9366;0.9309;0.9308;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
SVC;0.9014;0.905;0.9014;0.9014;0.9296;0.9328;0.9296;0.9295;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
SVC;0.8993;0.903;0.8993;0.8993;0.9376;0.9424;0.9376;0.9376;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
SVC;0.9014;0.905;0.9014;0.9015;0.9363;0.9411;0.9363;0.9359;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
SVC;0.9006;0.9043;0.9006;0.9007;0.9296;0.9321;0.9296;0.9295;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
SVC;0.902;0.9053;0.902;0.902;0.9315;0.9341;0.9315;0.9314;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
SVC;0.8994;0.903;0.8994;0.8995;0.9423;0.9445;0.9423;0.9424;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
SVC;0.9011;0.9046;0.9011;0.9011;0.9329;0.9354;0.9329;0.9327;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
SVC;0.8996;0.9031;0.8996;0.8996;0.9436;0.9459;0.9436;0.9437;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
MLPClassifier;0.9328;0.9354;0.9328;0.9328;0.9443;0.9461;0.9443;0.9444;0.7833;0.792;0.7833;0.783;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
KNeighborsClassifier;0.93;0.9308;0.93;0.93;0.9221;0.9221;0.9221;0.9221;0.7833;0.7854;0.7833;0.783;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9378;0.9392;0.9378;0.9378;0.9376;0.9387;0.9376;0.9375;0.7833;0.7839;0.7833;0.7827;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 66};RandomForestClassifier(n_estimators=5, random_state=66)
SVC;0.9018;0.9053;0.9018;0.9019;0.9268;0.9306;0.9268;0.9267;0.7833;0.7861;0.7833;0.7823;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 940};SVC(C=10, random_state=940)
SVC;0.9024;0.906;0.9024;0.9025;0.9289;0.9341;0.9289;0.9288;0.7833;0.7861;0.7833;0.7823;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 39};SVC(C=10, random_state=39)
SVC;0.9008;0.9042;0.9008;0.9008;0.943;0.9455;0.943;0.9429;0.7833;0.7928;0.7833;0.781;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 858};SVC(C=10, random_state=858)
MLPClassifier;0.9329;0.9357;0.9329;0.9329;0.9289;0.9307;0.9289;0.9288;0.7833;0.8007;0.7833;0.781;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.9348;0.9368;0.9348;0.9348;0.9282;0.9343;0.9282;0.9283;0.7833;0.7929;0.7833;0.7805;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
KNeighborsClassifier;0.9283;0.93;0.9283;0.9285;0.9322;0.9322;0.9322;0.9321;0.7667;0.7688;0.7667;0.7674;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.9353;0.9378;0.9353;0.9353;0.9349;0.9374;0.9349;0.935;0.7667;0.7773;0.7667;0.7652;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9347;0.9365;0.9347;0.9347;0.9302;0.9319;0.9302;0.9301;0.7667;0.7896;0.7667;0.7638;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9345;0.9364;0.9345;0.9346;0.9322;0.9368;0.9322;0.9325;0.7667;0.7797;0.7667;0.7621;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9361;0.9384;0.9361;0.9361;0.9282;0.9306;0.9282;0.9284;0.75;0.7831;0.75;0.7505;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9336;0.9357;0.9336;0.9337;0.9376;0.9379;0.9376;0.9375;0.75;0.7831;0.75;0.7505;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9351;0.9376;0.9351;0.9352;0.9235;0.9244;0.9235;0.9233;0.75;0.7768;0.75;0.75;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.9331;0.9354;0.9331;0.9332;0.9383;0.9395;0.9383;0.938;0.75;0.7768;0.75;0.75;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9334;0.9363;0.9334;0.9335;0.9376;0.9382;0.9376;0.9375;0.75;0.7704;0.75;0.7486;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.9342;0.9363;0.9342;0.9342;0.943;0.9451;0.943;0.943;0.75;0.7711;0.75;0.747;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9326;0.9351;0.9326;0.9327;0.9315;0.9365;0.9315;0.932;0.7333;0.7522;0.7333;0.7347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9351;0.9377;0.9351;0.9352;0.9242;0.9269;0.9242;0.9242;0.7333;0.7713;0.7333;0.734;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9335;0.936;0.9335;0.9336;0.939;0.941;0.939;0.9388;0.7333;0.7525;0.7333;0.7333;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9335;0.9361;0.9335;0.9336;0.9262;0.9279;0.9262;0.9262;0.7333;0.748;0.7333;0.7327;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.935;0.9372;0.935;0.935;0.9242;0.9278;0.9242;0.9242;0.7333;0.7581;0.7333;0.7319;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9319;0.9349;0.9319;0.932;0.9423;0.9438;0.9423;0.9423;0.7333;0.7536;0.7333;0.7299;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.9347;0.9368;0.9347;0.9347;0.9302;0.9352;0.9302;0.9304;0.7333;0.7536;0.7333;0.7299;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.9346;0.9369;0.9346;0.9347;0.9282;0.9322;0.9282;0.9283;0.7333;0.7536;0.7333;0.7299;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.932;0.9347;0.932;0.9321;0.9416;0.9432;0.9416;0.9415;0.7333;0.7536;0.7333;0.7299;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9323;0.9349;0.9323;0.9324;0.9436;0.9455;0.9436;0.9438;0.7333;0.7677;0.7333;0.7294;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 511, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=511)
MLPClassifier;0.9359;0.9382;0.9359;0.9359;0.9329;0.9356;0.9329;0.933;0.7167;0.7626;0.7167;0.7167;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9335;0.9359;0.9335;0.9335;0.9356;0.938;0.9356;0.9356;0.7167;0.7626;0.7167;0.7167;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
LogisticRegression;0.8172;0.832;0.8172;0.8197;0.8221;0.8342;0.8221;0.8247;0.7167;0.7227;0.7167;0.716;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8173;0.8319;0.8173;0.8198;0.8168;0.8311;0.8168;0.8198;0.7167;0.7227;0.7167;0.716;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8172;0.8322;0.8172;0.8197;0.8275;0.8386;0.8275;0.8298;0.7167;0.7227;0.7167;0.716;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8166;0.8314;0.8166;0.8191;0.8181;0.8338;0.8181;0.8206;0.7167;0.7227;0.7167;0.716;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
MLPClassifier;0.933;0.9351;0.933;0.933;0.9416;0.9431;0.9416;0.9416;0.7167;0.7412;0.7167;0.7157;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 723, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=723)
MLPClassifier;0.9336;0.9361;0.9336;0.9337;0.9329;0.9354;0.9329;0.9328;0.7167;0.7475;0.7167;0.7144;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9336;0.9361;0.9336;0.9336;0.9356;0.9383;0.9356;0.9354;0.7167;0.7475;0.7167;0.7144;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.9323;0.9352;0.9323;0.9324;0.939;0.9411;0.939;0.9391;0.7;0.736;0.7;0.7008;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
LogisticRegression;0.8186;0.8333;0.8186;0.8211;0.8035;0.8217;0.8035;0.8064;0.7;0.7133;0.7;0.6989;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8163;0.8312;0.8163;0.8188;0.806;0.8229;0.806;0.8082;0.7;0.7133;0.7;0.6989;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8175;0.8322;0.8175;0.82;0.8121;0.8269;0.8121;0.8145;0.7;0.7133;0.7;0.6989;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8156;0.8309;0.8156;0.8182;0.8302;0.8434;0.8302;0.8322;0.7;0.7133;0.7;0.6989;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8159;0.8306;0.8159;0.8184;0.8283;0.8416;0.8283;0.8307;0.7;0.7133;0.7;0.6989;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8164;0.8313;0.8164;0.8189;0.8235;0.8337;0.8235;0.8257;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8184;0.8331;0.8184;0.8209;0.8169;0.8318;0.8169;0.8198;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8166;0.8315;0.8166;0.8191;0.8255;0.84;0.8255;0.8282;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8169;0.8315;0.8169;0.8194;0.8141;0.8264;0.8141;0.817;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8193;0.834;0.8193;0.8218;0.8107;0.8247;0.8107;0.8132;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8176;0.8328;0.8176;0.8201;0.8248;0.8359;0.8248;0.827;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8165;0.8313;0.8165;0.8191;0.8235;0.8395;0.8235;0.8257;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.819;0.8335;0.819;0.8214;0.8094;0.8309;0.8094;0.8125;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8158;0.8308;0.8158;0.8183;0.8369;0.8497;0.8369;0.8391;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8195;0.8337;0.8195;0.8219;0.8115;0.8299;0.8115;0.8148;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8181;0.8329;0.8181;0.8205;0.8095;0.8218;0.8095;0.8124;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 352, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=352)"
LogisticRegression;0.8185;0.8329;0.8185;0.821;0.8114;0.8313;0.8114;0.8143;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8196;0.8338;0.8196;0.8221;0.8042;0.8225;0.8042;0.8073;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8173;0.832;0.8173;0.8199;0.8242;0.8426;0.8242;0.8269;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8158;0.8311;0.8158;0.8183;0.8208;0.8329;0.8208;0.8231;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8188;0.8334;0.8188;0.8213;0.8148;0.8294;0.8148;0.8177;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8141;0.8291;0.8141;0.8166;0.8256;0.841;0.8256;0.8285;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8196;0.8343;0.8196;0.8221;0.8149;0.8304;0.8149;0.8173;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 380, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=380)"
LogisticRegression;0.8164;0.8312;0.8164;0.819;0.8275;0.8426;0.8275;0.8302;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.8182;0.8331;0.8182;0.8207;0.8235;0.8403;0.8235;0.8263;0.7;0.7089;0.7;0.6986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.817;0.8317;0.817;0.8195;0.8182;0.8349;0.8182;0.8206;0.6833;0.6952;0.6833;0.6807;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
