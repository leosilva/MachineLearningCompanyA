Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9521;0.9525;0.9521;0.952;0.9747;0.9748;0.9747;0.9747;0.9167;0.9259;0.9167;0.9171;0.9856;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9521;0.9525;0.9521;0.9521;0.9635;0.9636;0.9635;0.9635;0.9167;0.9259;0.9167;0.9171;0.9871;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9663;0.9664;0.9663;0.9663;0.9674;0.9674;0.9674;0.9674;0.9167;0.9269;0.9167;0.917;0.9918;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 781};RandomForestClassifier(n_estimators=20, random_state=781)
RandomForestClassifier;0.9688;0.9689;0.9688;0.9688;0.9657;0.9659;0.9657;0.9657;0.9;0.9137;0.9;0.9004;0.9919;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 692};RandomForestClassifier(n_estimators=20, random_state=692)
RandomForestClassifier;0.9666;0.9668;0.9666;0.9666;0.9674;0.9675;0.9674;0.9674;0.8833;0.9;0.8833;0.882;0.991;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
MLPClassifier;0.9327;0.9332;0.9327;0.9328;0.9613;0.9612;0.9613;0.9612;0.8667;0.8808;0.8667;0.8675;0.9872;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 343, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=343)
KNeighborsClassifier;0.9509;0.9512;0.9509;0.9507;0.9669;0.9669;0.9669;0.9669;0.8667;0.8759;0.8667;0.8668;0.9864;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.9371;0.9373;0.9371;0.9371;0.9568;0.9567;0.9568;0.9567;0.8667;0.8833;0.8667;0.8642;0.9869;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 798, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=798)
MLPClassifier;0.9344;0.9348;0.9344;0.9345;0.9528;0.9532;0.9528;0.9527;0.85;0.8722;0.85;0.8463;0.9867;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 56, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=56)
SVC;0.8683;0.869;0.8683;0.8679;0.9163;0.9164;0.9163;0.9163;0.8167;0.8223;0.8167;0.8089;0.947;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.8759;0.8766;0.8759;0.8763;0.9034;0.9031;0.9034;0.9032;0.8167;0.8223;0.8167;0.8089;0.9505;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 659};SVC(C=10, probability=True, random_state=659)
SVC;0.8719;0.8734;0.8719;0.8716;0.904;0.9038;0.904;0.9038;0.8;0.8003;0.8;0.7934;0.9491;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, probability=True, random_state=393)
DecisionTreeClassifier;0.9437;0.9439;0.9437;0.9438;0.8956;0.8959;0.8956;0.8954;0.7667;0.7698;0.7667;0.7615;0.9578;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 793};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=793)
LogisticRegression;0.729;0.7312;0.729;0.7297;0.7221;0.727;0.7221;0.7236;0.75;0.7566;0.75;0.752;0.9002;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 871, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=871)"
LogisticRegression;0.7296;0.7315;0.7296;0.7295;0.7372;0.7383;0.7372;0.7367;0.7167;0.7274;0.7167;0.7193;0.8987;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 81, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=81)"
LogisticRegression;0.7306;0.7327;0.7306;0.7311;0.7322;0.735;0.7322;0.7327;0.7167;0.7274;0.7167;0.7193;0.8996;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 46, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=46)"
DecisionTreeClassifier;0.9486;0.9488;0.9486;0.9486;0.895;0.8945;0.895;0.8947;0.7167;0.7332;0.7167;0.7128;0.9614;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 602};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=602)
DecisionTreeClassifier;0.9465;0.9467;0.9465;0.9466;0.895;0.8951;0.895;0.8947;0.7167;0.7192;0.7167;0.7102;0.9599;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
