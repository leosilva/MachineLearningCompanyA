Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8331;0.8355;0.8331;0.8325;0.8497;0.8514;0.8497;0.8502;0.8667;0.8705;0.8667;0.8672;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8243;0.8277;0.8243;0.8233;0.8557;0.8567;0.8557;0.8561;0.8667;0.8705;0.8667;0.8672;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8294;0.8297;0.8294;0.8277;0.8591;0.8581;0.8591;0.8584;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8343;0.8365;0.8343;0.8342;0.8491;0.8484;0.8491;0.8487;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.839;0.8407;0.839;0.8389;0.845;0.8454;0.845;0.845;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.835;0.8354;0.835;0.8344;0.8732;0.8736;0.8732;0.8733;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8099;0.8116;0.8099;0.809;0.8612;0.8627;0.8612;0.8617;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.827;0.8277;0.827;0.8263;0.8577;0.8573;0.8577;0.8575;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8238;0.8257;0.8238;0.823;0.8383;0.837;0.8383;0.8366;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8387;0.8406;0.8387;0.8386;0.845;0.8465;0.845;0.8454;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8331;0.8357;0.8331;0.8326;0.8598;0.8606;0.8598;0.8601;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8353;0.8381;0.8353;0.836;0.8443;0.8426;0.8443;0.8427;0.8667;0.8659;0.8667;0.8638;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8367;0.8385;0.8367;0.8369;0.8551;0.8568;0.8551;0.8555;0.85;0.8519;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8469;0.8486;0.8469;0.8472;0.849;0.8509;0.849;0.8496;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.834;0.8361;0.834;0.8332;0.8705;0.871;0.8705;0.8707;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8325;0.8331;0.8325;0.8322;0.8578;0.8586;0.8578;0.8579;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8336;0.8365;0.8336;0.8337;0.845;0.8476;0.845;0.8456;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.841;0.8445;0.841;0.8411;0.8322;0.8343;0.8322;0.8329;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8258;0.8315;0.8258;0.826;0.8557;0.8554;0.8557;0.8555;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8372;0.8399;0.8372;0.8379;0.8551;0.8549;0.8551;0.855;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8321;0.8342;0.8321;0.8318;0.8531;0.8531;0.8531;0.8529;0.8333;0.8387;0.8333;0.8347;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8284;0.8292;0.8284;0.8275;0.8464;0.8461;0.8464;0.846;0.8333;0.836;0.8333;0.8335;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.835;0.8372;0.835;0.8347;0.853;0.8523;0.853;0.8525;0.8333;0.8342;0.8333;0.8323;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8385;0.8415;0.8385;0.8381;0.8215;0.8229;0.8215;0.8221;0.8333;0.834;0.8333;0.8303;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8356;0.8367;0.8356;0.8353;0.8597;0.8631;0.8597;0.8606;0.8167;0.8367;0.8167;0.8208;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8371;0.8383;0.8371;0.837;0.8523;0.8556;0.8523;0.8531;0.8167;0.8264;0.8167;0.8194;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8408;0.8439;0.8408;0.8416;0.8443;0.8438;0.8443;0.8439;0.8167;0.8188;0.8167;0.8174;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8292;0.8299;0.8292;0.8279;0.8638;0.8646;0.8638;0.8641;0.8167;0.8201;0.8167;0.8173;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8247;0.8263;0.8247;0.8242;0.8591;0.859;0.8591;0.859;0.8;0.8069;0.8;0.8021;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8306;0.8326;0.8306;0.8296;0.8558;0.8572;0.8558;0.8553;0.7833;0.7863;0.7833;0.7845;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
