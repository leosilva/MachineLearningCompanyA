Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8592;0.8628;0.8592;0.8594;0.8793;0.8809;0.8793;0.8786;0.8667;0.8722;0.8667;0.8667;0.9457;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.8672;0.8695;0.8672;0.8672;0.8351;0.8364;0.8351;0.8351;0.8667;0.8675;0.8667;0.8656;0.9503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.8496;0.8523;0.8496;0.8498;0.8621;0.8671;0.8621;0.8625;0.85;0.8524;0.85;0.8497;0.9436;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8481;0.8502;0.8481;0.8485;0.8621;0.8628;0.8621;0.8614;0.85;0.8524;0.85;0.8497;0.9437;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8518;0.8554;0.8518;0.8519;0.8522;0.8543;0.8522;0.8522;0.85;0.8577;0.85;0.8488;0.943;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8469;0.85;0.8469;0.8469;0.8724;0.878;0.8724;0.873;0.85;0.8526;0.85;0.8487;0.9428;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8538;0.8581;0.8538;0.8542;0.8793;0.8795;0.8793;0.8793;0.8333;0.8339;0.8333;0.8333;0.9429;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8565;0.8599;0.8565;0.8567;0.8586;0.8585;0.8586;0.8585;0.8333;0.8341;0.8333;0.8327;0.9451;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8584;0.861;0.8584;0.8586;0.8586;0.8581;0.8586;0.8581;0.8333;0.8367;0.8333;0.8324;0.9473;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8515;0.8548;0.8515;0.8516;0.8832;0.884;0.8832;0.8828;0.8333;0.8367;0.8333;0.8324;0.944;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8492;0.8527;0.8492;0.8493;0.8724;0.873;0.8724;0.8723;0.8333;0.8367;0.8333;0.8324;0.9394;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8435;0.8467;0.8435;0.8437;0.8655;0.8697;0.8655;0.866;0.8333;0.8367;0.8333;0.8324;0.942;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8568;0.8587;0.8568;0.8571;0.8797;0.8821;0.8797;0.88;0.8333;0.8367;0.8333;0.8324;0.9433;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8477;0.8507;0.8477;0.8481;0.8207;0.8246;0.8207;0.821;0.8333;0.8367;0.8333;0.8324;0.9411;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8515;0.8542;0.8515;0.8517;0.8522;0.856;0.8522;0.8523;0.8333;0.8367;0.8333;0.8324;0.94;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8469;0.8501;0.8469;0.847;0.8759;0.876;0.8759;0.8757;0.8333;0.8367;0.8333;0.8324;0.9416;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8473;0.8506;0.8473;0.8475;0.869;0.8775;0.869;0.8696;0.8333;0.8367;0.8333;0.8324;0.9428;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8454;0.8489;0.8454;0.8455;0.8759;0.8761;0.8759;0.8759;0.8333;0.8367;0.8333;0.8324;0.9418;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.845;0.8481;0.845;0.8453;0.8862;0.8864;0.8862;0.8862;0.8333;0.8367;0.8333;0.8324;0.9404;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.853;0.856;0.853;0.8534;0.8862;0.8869;0.8862;0.8863;0.8333;0.8367;0.8333;0.8324;0.942;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8653;0.8668;0.8653;0.8654;0.8897;0.8907;0.8897;0.8898;0.8333;0.8338;0.8333;0.8312;0.9544;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 56};RandomForestClassifier(n_estimators=10, random_state=56)
RandomForestClassifier;0.8649;0.8655;0.8649;0.8648;0.8586;0.8587;0.8586;0.858;0.8333;0.8366;0.8333;0.8307;0.9548;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
DecisionTreeClassifier;0.8426;0.8436;0.8426;0.8428;0.8179;0.82;0.8179;0.8174;0.8167;0.8234;0.8167;0.8178;0.8819;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
DecisionTreeClassifier;0.8454;0.8462;0.8454;0.8456;0.8724;0.8732;0.8724;0.872;0.8167;0.8189;0.8167;0.8174;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
DecisionTreeClassifier;0.8316;0.8323;0.8316;0.832;0.8621;0.8629;0.8621;0.8623;0.8167;0.818;0.8167;0.817;0.8735;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
RandomForestClassifier;0.8729;0.8737;0.8729;0.873;0.8625;0.8627;0.8625;0.8626;0.8167;0.819;0.8167;0.8168;0.9544;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
KNeighborsClassifier;0.8519;0.8545;0.8519;0.8518;0.9034;0.9057;0.9034;0.9024;0.8167;0.819;0.8167;0.8168;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8649;0.8663;0.8649;0.8651;0.8655;0.8656;0.8655;0.8655;0.8167;0.8172;0.8167;0.8166;0.9578;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
DecisionTreeClassifier;0.8397;0.8412;0.8397;0.8396;0.8655;0.8674;0.8655;0.8655;0.8167;0.8172;0.8167;0.8166;0.88;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
RandomForestClassifier;0.8699;0.8712;0.8699;0.8701;0.8414;0.845;0.8414;0.8409;0.8167;0.8203;0.8167;0.8162;0.9596;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
MLPClassifier;0.8362;0.839;0.8362;0.8367;0.8625;0.8626;0.8625;0.8622;0.8167;0.8203;0.8167;0.8162;0.9446;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.8393;0.842;0.8393;0.8398;0.8828;0.8849;0.8828;0.8834;0.8167;0.8203;0.8167;0.8162;0.9443;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
KNeighborsClassifier;0.8568;0.8593;0.8568;0.8569;0.8488;0.8507;0.8488;0.8491;0.8167;0.8217;0.8167;0.816;0.9441;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8446;0.8486;0.8446;0.8448;0.8935;0.8966;0.8935;0.8928;0.8167;0.8217;0.8167;0.816;0.9424;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8365;0.8395;0.8365;0.8368;0.8419;0.8472;0.8419;0.843;0.8167;0.8193;0.8167;0.8157;0.9463;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
KNeighborsClassifier;0.8553;0.8581;0.8553;0.8554;0.8517;0.8519;0.8517;0.851;0.8167;0.825;0.8167;0.8153;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8388;0.842;0.8388;0.8396;0.8763;0.8764;0.8763;0.8763;0.8167;0.8252;0.8167;0.8149;0.9446;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
RandomForestClassifier;0.8699;0.8705;0.8699;0.87;0.8621;0.8637;0.8621;0.8611;0.8167;0.8157;0.8167;0.8147;0.956;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
RandomForestClassifier;0.8703;0.8715;0.8703;0.8703;0.8759;0.877;0.8759;0.8759;0.8167;0.8138;0.8167;0.8139;0.9551;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
RandomForestClassifier;0.8684;0.8694;0.8684;0.8684;0.8897;0.8899;0.8897;0.8897;0.8167;0.8222;0.8167;0.8138;0.953;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
RandomForestClassifier;0.8695;0.8706;0.8695;0.8694;0.8862;0.8863;0.8862;0.886;0.8167;0.8165;0.8167;0.8135;0.9564;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
DecisionTreeClassifier;0.8408;0.8415;0.8408;0.841;0.8483;0.8529;0.8483;0.8488;0.8;0.8142;0.8;0.8023;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
DecisionTreeClassifier;0.8404;0.842;0.8404;0.8408;0.8069;0.8073;0.8069;0.807;0.8;0.8094;0.8;0.802;0.8799;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
DecisionTreeClassifier;0.835;0.8362;0.835;0.8353;0.8591;0.8618;0.8591;0.8595;0.8;0.8079;0.8;0.8018;0.8768;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=84)
DecisionTreeClassifier;0.8308;0.8317;0.8308;0.8308;0.8316;0.834;0.8316;0.8321;0.8;0.8038;0.8;0.801;0.873;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
DecisionTreeClassifier;0.8446;0.8452;0.8446;0.8447;0.8172;0.8184;0.8172;0.8165;0.8;0.8042;0.8;0.801;0.8836;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
DecisionTreeClassifier;0.84;0.8414;0.84;0.8403;0.8483;0.8487;0.8483;0.8484;0.8;0.8042;0.8;0.801;0.8807;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
RandomForestClassifier;0.8645;0.8662;0.8645;0.8644;0.8966;0.8984;0.8966;0.8964;0.8;0.8058;0.8;0.8007;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
DecisionTreeClassifier;0.8301;0.8312;0.8301;0.8303;0.8655;0.8673;0.8655;0.8657;0.8;0.8013;0.8;0.8003;0.8729;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
DecisionTreeClassifier;0.8411;0.8425;0.8411;0.8417;0.8385;0.8397;0.8385;0.8379;0.8;0.8;0.8;0.8;0.8807;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8423;0.8427;0.8423;0.8424;0.8207;0.8232;0.8207;0.8209;0.8;0.8005;0.8;0.7999;0.8821;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8328;0.8341;0.8328;0.833;0.8621;0.8627;0.8621;0.8622;0.8;0.8005;0.8;0.7999;0.8753;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
RandomForestClassifier;0.8687;0.87;0.8687;0.8687;0.8351;0.8368;0.8351;0.8353;0.8;0.8049;0.8;0.7999;0.953;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
MLPClassifier;0.8427;0.8457;0.8427;0.8433;0.8793;0.8808;0.8793;0.8793;0.8;0.8014;0.8;0.7998;0.9457;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
RandomForestClassifier;0.8657;0.8667;0.8657;0.8656;0.8862;0.8867;0.8862;0.8862;0.8;0.802;0.8;0.7997;0.9563;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
KNeighborsClassifier;0.8446;0.8475;0.8446;0.845;0.8414;0.8434;0.8414;0.8417;0.8;0.802;0.8;0.7997;0.9409;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8671;0.8681;0.8671;0.867;0.8935;0.8936;0.8935;0.8935;0.8;0.7997;0.8;0.7995;0.9581;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
RandomForestClassifier;0.8622;0.8633;0.8622;0.8622;0.8621;0.8641;0.8621;0.8615;0.8;0.8124;0.8;0.7994;0.9552;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 56};RandomForestClassifier(n_estimators=10, random_state=56)
MLPClassifier;0.8378;0.8404;0.8378;0.8385;0.8517;0.8541;0.8517;0.8521;0.8;0.8073;0.8;0.7994;0.9468;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.8454;0.849;0.8454;0.8462;0.8448;0.8478;0.8448;0.8452;0.8;0.805;0.8;0.7993;0.9482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.8366;0.8393;0.8366;0.8371;0.8621;0.8624;0.8621;0.862;0.8;0.805;0.8;0.7993;0.946;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.8427;0.8452;0.8427;0.8433;0.8379;0.8399;0.8379;0.8377;0.8;0.805;0.8;0.7993;0.9465;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.8366;0.8389;0.8366;0.8373;0.8483;0.8513;0.8483;0.8477;0.8;0.805;0.8;0.7993;0.9431;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.84;0.8436;0.84;0.8405;0.869;0.8684;0.869;0.8685;0.8;0.805;0.8;0.7993;0.9462;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
MLPClassifier;0.8534;0.8559;0.8534;0.854;0.8;0.8049;0.8;0.8004;0.8;0.805;0.8;0.7993;0.9486;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
MLPClassifier;0.8416;0.8439;0.8416;0.8421;0.8897;0.8947;0.8897;0.8905;0.8;0.805;0.8;0.7993;0.9432;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
MLPClassifier;0.84;0.8434;0.84;0.841;0.8586;0.8599;0.8586;0.8583;0.8;0.805;0.8;0.7993;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
MLPClassifier;0.8423;0.8456;0.8423;0.8427;0.8316;0.8361;0.8316;0.8326;0.8;0.805;0.8;0.7993;0.9474;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
RandomForestClassifier;0.8657;0.8674;0.8657;0.8657;0.8655;0.8654;0.8655;0.8654;0.8;0.8042;0.8;0.7992;0.9574;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
DecisionTreeClassifier;0.8423;0.8431;0.8423;0.8426;0.8069;0.8067;0.8069;0.8063;0.8;0.7988;0.8;0.7991;0.8816;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
KNeighborsClassifier;0.8442;0.8466;0.8442;0.8443;0.8552;0.8575;0.8552;0.8545;0.8;0.8068;0.8;0.7989;0.9422;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8496;0.8516;0.8496;0.8496;0.866;0.8692;0.866;0.8661;0.8;0.8083;0.8;0.7987;0.9407;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8507;0.8537;0.8507;0.8509;0.8832;0.883;0.8832;0.883;0.8;0.8018;0.8;0.7986;0.9442;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8661;0.8671;0.8661;0.8661;0.8517;0.8559;0.8517;0.8498;0.8;0.8082;0.8;0.7972;0.9577;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
RandomForestClassifier;0.8634;0.864;0.8634;0.8636;0.8966;0.8985;0.8966;0.8957;0.8;0.8056;0.8;0.7969;0.9558;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
DecisionTreeClassifier;0.8434;0.8454;0.8434;0.8438;0.8247;0.8248;0.8247;0.8244;0.7833;0.7912;0.7833;0.7848;0.883;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
DecisionTreeClassifier;0.8392;0.8406;0.8392;0.8395;0.8488;0.8493;0.8488;0.8483;0.7833;0.7904;0.7833;0.7847;0.8793;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=210)
DecisionTreeClassifier;0.8347;0.8356;0.8347;0.835;0.8586;0.858;0.8586;0.8582;0.7833;0.7905;0.7833;0.7838;0.8763;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
RandomForestClassifier;0.8629;0.8639;0.8629;0.863;0.8763;0.8776;0.8763;0.8763;0.7833;0.7847;0.7833;0.7837;0.9563;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
DecisionTreeClassifier;0.84;0.8413;0.84;0.8403;0.8483;0.8505;0.8483;0.8483;0.7833;0.7857;0.7833;0.7835;0.88;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8397;0.8411;0.8397;0.8399;0.8517;0.8527;0.8517;0.8518;0.7833;0.7857;0.7833;0.7835;0.8796;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
RandomForestClassifier;0.8756;0.877;0.8756;0.8756;0.8625;0.8652;0.8625;0.8626;0.7833;0.7833;0.7833;0.7833;0.9544;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
DecisionTreeClassifier;0.8377;0.8384;0.8377;0.8377;0.8797;0.8825;0.8797;0.8804;0.7833;0.7833;0.7833;0.7833;0.8783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
RandomForestClassifier;0.8687;0.8697;0.8687;0.8688;0.8729;0.8728;0.8729;0.8726;0.7833;0.7833;0.7833;0.7833;0.9562;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
DecisionTreeClassifier;0.8297;0.8302;0.8297;0.8299;0.8793;0.8792;0.8793;0.8785;0.7833;0.7854;0.7833;0.783;0.8731;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=405)
MLPClassifier;0.8415;0.8445;0.8415;0.8421;0.8557;0.8593;0.8557;0.8559;0.7833;0.7854;0.7833;0.783;0.9464;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.8327;0.8356;0.8327;0.8333;0.8832;0.884;0.8832;0.8833;0.7833;0.7854;0.7833;0.783;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8377;0.8403;0.8377;0.8385;0.8448;0.8471;0.8448;0.8442;0.7833;0.7854;0.7833;0.783;0.9454;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
MLPClassifier;0.8347;0.8396;0.8347;0.8355;0.8862;0.8858;0.8862;0.8858;0.7833;0.7854;0.7833;0.783;0.9437;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
SVC;0.7386;0.7705;0.7386;0.7378;0.8172;0.8192;0.8172;0.8177;0.7833;0.7839;0.7833;0.7827;0.8815;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.7339;0.7669;0.7339;0.7329;0.8247;0.8304;0.8247;0.8256;0.7833;0.7839;0.7833;0.7827;0.8825;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7358;0.7698;0.7358;0.7356;0.7973;0.8081;0.7973;0.7989;0.7833;0.7839;0.7833;0.7827;0.8852;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7413;0.774;0.7413;0.7405;0.8345;0.84;0.8345;0.8354;0.7833;0.7839;0.7833;0.7827;0.882;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7398;0.7706;0.7398;0.739;0.8138;0.8242;0.8138;0.8145;0.7833;0.7839;0.7833;0.7827;0.8862;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7379;0.7697;0.7379;0.7366;0.8069;0.8088;0.8069;0.8075;0.7833;0.7839;0.7833;0.7827;0.8861;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7337;0.7664;0.7337;0.7336;0.8621;0.8637;0.8621;0.8623;0.7833;0.7839;0.7833;0.7827;0.8821;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.7283;0.764;0.7283;0.7276;0.8517;0.852;0.8517;0.8515;0.7833;0.7839;0.7833;0.7827;0.8829;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.7386;0.7696;0.7386;0.7371;0.7931;0.7968;0.7931;0.7941;0.7833;0.7839;0.7833;0.7827;0.8819;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7401;0.772;0.7401;0.7389;0.8069;0.8244;0.8069;0.8067;0.7833;0.7839;0.7833;0.7827;0.8867;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.7406;0.7721;0.7406;0.7403;0.8241;0.8297;0.8241;0.8255;0.7833;0.7839;0.7833;0.7827;0.883;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
RandomForestClassifier;0.8634;0.8656;0.8634;0.8635;0.8862;0.8885;0.8862;0.8864;0.7833;0.7876;0.7833;0.7825;0.9572;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
RandomForestClassifier;0.8614;0.8623;0.8614;0.8615;0.9003;0.9014;0.9003;0.8997;0.7833;0.7876;0.7833;0.7825;0.9538;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
MLPClassifier;0.8396;0.8425;0.8396;0.8401;0.8793;0.8838;0.8793;0.8802;0.7833;0.7861;0.7833;0.7823;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 507, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=507)
MLPClassifier;0.8366;0.8392;0.8366;0.8374;0.8793;0.8799;0.8793;0.8794;0.7833;0.7906;0.7833;0.7822;0.9461;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
RandomForestClassifier;0.8657;0.8668;0.8657;0.8657;0.8655;0.8659;0.8655;0.8655;0.7833;0.7835;0.7833;0.7821;0.9529;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
MLPClassifier;0.8369;0.8402;0.8369;0.8377;0.8522;0.8522;0.8522;0.8522;0.7833;0.7917;0.7833;0.782;0.9448;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8423;0.8451;0.8423;0.8428;0.8586;0.8591;0.8586;0.8588;0.7833;0.7917;0.7833;0.782;0.9469;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8393;0.842;0.8393;0.8399;0.8379;0.8378;0.8379;0.8376;0.7833;0.7917;0.7833;0.782;0.9461;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8477;0.8504;0.8477;0.8483;0.8276;0.8279;0.8276;0.8273;0.7833;0.7917;0.7833;0.782;0.9476;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8404;0.8446;0.8404;0.8408;0.9;0.9021;0.9;0.9;0.7833;0.7917;0.7833;0.782;0.9441;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8324;0.8351;0.8324;0.8332;0.869;0.8717;0.869;0.8694;0.7833;0.7877;0.7833;0.7814;0.9459;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
RandomForestClassifier;0.8622;0.8638;0.8622;0.8623;0.8655;0.8657;0.8655;0.8654;0.7833;0.782;0.7833;0.7813;0.9565;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 56};RandomForestClassifier(n_estimators=10, random_state=56)
KNeighborsClassifier;0.855;0.8581;0.855;0.8552;0.8448;0.8474;0.8448;0.845;0.7833;0.7956;0.7833;0.7794;0.9467;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8251;0.8266;0.8251;0.8251;0.8655;0.868;0.8655;0.8659;0.7667;0.7711;0.7667;0.768;0.8688;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 405};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=405)
DecisionTreeClassifier;0.8293;0.8306;0.8293;0.8293;0.8454;0.8472;0.8454;0.8458;0.7667;0.7711;0.7667;0.768;0.8723;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=210)
DecisionTreeClassifier;0.8408;0.842;0.8408;0.8412;0.8724;0.873;0.8724;0.8707;0.7667;0.7765;0.7667;0.7672;0.8807;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
SVC;0.7371;0.7698;0.7371;0.7367;0.8172;0.8272;0.8172;0.8186;0.7667;0.7671;0.7667;0.7666;0.8839;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7271;0.7632;0.7271;0.727;0.8448;0.8494;0.8448;0.8446;0.7667;0.7671;0.7667;0.7666;0.8822;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7329;0.7671;0.7329;0.7321;0.8103;0.8128;0.8103;0.8102;0.7667;0.7671;0.7667;0.7666;0.8873;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7327;0.7666;0.7327;0.7314;0.8213;0.8242;0.8213;0.8222;0.7667;0.7671;0.7667;0.7666;0.8838;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7408;0.7723;0.7408;0.7395;0.8213;0.823;0.8213;0.8218;0.7667;0.7671;0.7667;0.7666;0.8847;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
DecisionTreeClassifier;0.8412;0.842;0.8412;0.8413;0.8414;0.8468;0.8414;0.8409;0.7667;0.7878;0.7667;0.7665;0.8808;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
RandomForestClassifier;0.876;0.8768;0.876;0.8761;0.8276;0.8277;0.8276;0.8272;0.7667;0.7738;0.7667;0.7662;0.9567;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 430};RandomForestClassifier(n_estimators=20, random_state=430)
MLPClassifier;0.8415;0.8448;0.8415;0.842;0.8522;0.8519;0.8522;0.8517;0.7667;0.7702;0.7667;0.766;0.9463;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 514, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=514)
DecisionTreeClassifier;0.8324;0.834;0.8324;0.8326;0.8517;0.8513;0.8517;0.8511;0.7667;0.7688;0.7667;0.7656;0.8744;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
RandomForestClassifier;0.8657;0.8664;0.8657;0.8658;0.8862;0.8887;0.8862;0.8867;0.7667;0.7663;0.7667;0.7656;0.9564;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 432};RandomForestClassifier(n_estimators=20, random_state=432)
MLPClassifier;0.8411;0.8443;0.8411;0.8416;0.8625;0.8666;0.8625;0.8636;0.7667;0.777;0.7667;0.7642;0.9471;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
RandomForestClassifier;0.8684;0.8695;0.8684;0.8684;0.8621;0.8634;0.8621;0.8615;0.7667;0.7727;0.7667;0.7641;0.956;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 432};RandomForestClassifier(n_estimators=10, random_state=432)
KNeighborsClassifier;0.8488;0.8516;0.8488;0.849;0.8621;0.862;0.8621;0.862;0.7667;0.774;0.7667;0.7638;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.6716;0.6755;0.6716;0.6713;0.6655;0.6672;0.6655;0.6654;0.7667;0.7924;0.7667;0.7635;0.8553;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6621;0.6657;0.6621;0.6615;0.7345;0.7356;0.7345;0.7344;0.7667;0.7924;0.7667;0.7635;0.8501;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
SVC;0.7481;0.7799;0.7481;0.7471;0.7793;0.7871;0.7793;0.7809;0.75;0.7513;0.75;0.7503;0.8908;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7344;0.7666;0.7344;0.7339;0.831;0.8402;0.831;0.8323;0.75;0.7513;0.75;0.7503;0.8832;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7394;0.7725;0.7394;0.7383;0.8207;0.8233;0.8207;0.8205;0.75;0.7513;0.75;0.7503;0.8867;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7352;0.7685;0.7352;0.7346;0.8552;0.8606;0.8552;0.8554;0.75;0.7513;0.75;0.7503;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7339;0.7671;0.7339;0.7334;0.8385;0.8432;0.8385;0.838;0.75;0.7513;0.75;0.7503;0.8858;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.739;0.7715;0.739;0.7385;0.8;0.8042;0.8;0.8;0.75;0.7513;0.75;0.7503;0.8866;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.7398;0.7724;0.7398;0.738;0.7931;0.8038;0.7931;0.7937;0.75;0.7513;0.75;0.7503;0.8865;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.7298;0.764;0.7298;0.7295;0.8379;0.8484;0.8379;0.8385;0.75;0.7513;0.75;0.7503;0.8833;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 737};SVC(C=10, probability=True, random_state=737)
SVC;0.7385;0.7711;0.7385;0.7378;0.8144;0.8198;0.8144;0.8154;0.75;0.7513;0.75;0.7503;0.8812;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.7382;0.77;0.7382;0.7377;0.7931;0.8028;0.7931;0.7905;0.75;0.7513;0.75;0.7503;0.8855;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7374;0.7695;0.7374;0.736;0.7973;0.8128;0.7973;0.7999;0.75;0.7513;0.75;0.7503;0.8864;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
SVC;0.742;0.7738;0.742;0.7406;0.7732;0.7794;0.7732;0.773;0.75;0.7513;0.75;0.7503;0.8853;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7408;0.7727;0.7408;0.7392;0.8247;0.8319;0.8247;0.8262;0.75;0.7513;0.75;0.7503;0.885;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
DecisionTreeClassifier;0.8397;0.8409;0.8397;0.8397;0.8241;0.8253;0.8241;0.8243;0.75;0.755;0.75;0.7501;0.8796;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
LogisticRegression;0.6716;0.6761;0.6716;0.6711;0.6586;0.6612;0.6586;0.6587;0.75;0.7768;0.75;0.7482;0.855;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6724;0.6785;0.6724;0.6714;0.6655;0.6691;0.6655;0.6645;0.75;0.7768;0.75;0.7482;0.8559;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6736;0.6768;0.6736;0.6729;0.6552;0.66;0.6552;0.6554;0.75;0.7768;0.75;0.7482;0.8566;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6643;0.6677;0.6643;0.6634;0.7113;0.7138;0.7113;0.7107;0.75;0.7768;0.75;0.7482;0.8516;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6732;0.6779;0.6732;0.6726;0.6552;0.6572;0.6552;0.6553;0.75;0.7768;0.75;0.7482;0.854;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6697;0.6747;0.6697;0.6693;0.6897;0.6933;0.6897;0.6894;0.75;0.7768;0.75;0.7482;0.8537;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6727;0.6756;0.6727;0.6723;0.6632;0.6808;0.6632;0.6619;0.75;0.7768;0.75;0.7482;0.855;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6663;0.6709;0.6663;0.6659;0.6897;0.6924;0.6897;0.6884;0.75;0.7768;0.75;0.7482;0.8539;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6751;0.6801;0.6751;0.6747;0.6483;0.6534;0.6483;0.6482;0.75;0.7768;0.75;0.7482;0.8549;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6736;0.6773;0.6736;0.6732;0.6448;0.649;0.6448;0.6456;0.75;0.7768;0.75;0.7482;0.8561;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6735;0.6801;0.6735;0.6735;0.6483;0.6641;0.6483;0.6499;0.75;0.7768;0.75;0.7482;0.8545;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6682;0.6724;0.6682;0.668;0.7172;0.7251;0.7172;0.7175;0.75;0.7768;0.75;0.7482;0.851;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.675;0.6782;0.675;0.6735;0.6323;0.6455;0.6323;0.6322;0.75;0.7768;0.75;0.7482;0.8601;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.677;0.6813;0.677;0.6767;0.6586;0.6584;0.6586;0.6564;0.75;0.7768;0.75;0.7482;0.8549;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
MLPClassifier;0.8416;0.8447;0.8416;0.8419;0.8276;0.8284;0.8276;0.8267;0.75;0.7553;0.75;0.7482;0.9465;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
LogisticRegression;0.6663;0.6699;0.6663;0.6653;0.6897;0.6925;0.6897;0.6897;0.75;0.7768;0.75;0.7482;0.8509;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6747;0.6792;0.6747;0.674;0.6552;0.66;0.6552;0.6532;0.75;0.7768;0.75;0.7482;0.8566;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6738;0.6784;0.6738;0.6736;0.6495;0.656;0.6495;0.6454;0.75;0.7768;0.75;0.7482;0.8557;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6774;0.682;0.6774;0.6766;0.6586;0.6602;0.6586;0.6571;0.75;0.7768;0.75;0.7482;0.8567;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6674;0.6698;0.6674;0.6664;0.6966;0.7002;0.6966;0.6964;0.75;0.7799;0.75;0.7477;0.8518;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6765;0.6827;0.6765;0.6764;0.646;0.6519;0.646;0.6449;0.75;0.7799;0.75;0.7477;0.8571;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6751;0.6789;0.6751;0.6745;0.6586;0.6688;0.6586;0.6568;0.75;0.7799;0.75;0.7477;0.8546;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6665;0.6718;0.6665;0.666;0.7113;0.7153;0.7113;0.7109;0.75;0.7799;0.75;0.7477;0.8528;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6757;0.6796;0.6757;0.6748;0.6529;0.6549;0.6529;0.6533;0.75;0.7799;0.75;0.7477;0.8567;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6781;0.683;0.6781;0.6778;0.6828;0.6884;0.6828;0.6751;0.75;0.7799;0.75;0.7477;0.8548;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6735;0.6779;0.6735;0.6729;0.669;0.6702;0.669;0.6691;0.75;0.7799;0.75;0.7477;0.8549;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6754;0.6793;0.6754;0.6749;0.5979;0.6022;0.5979;0.5981;0.75;0.7663;0.75;0.7473;0.857;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
LogisticRegression;0.6684;0.6715;0.6684;0.6674;0.6495;0.6503;0.6495;0.6498;0.75;0.7663;0.75;0.7473;0.8555;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
RandomForestClassifier;0.8672;0.8696;0.8672;0.8673;0.8966;0.8997;0.8966;0.8972;0.75;0.7505;0.75;0.7463;0.9542;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
RandomForestClassifier;0.8645;0.8654;0.8645;0.8646;0.8454;0.8465;0.8454;0.8455;0.75;0.7503;0.75;0.746;0.9566;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
SVC;0.7375;0.7708;0.7375;0.7368;0.7966;0.8096;0.7966;0.798;0.7333;0.736;0.7333;0.7338;0.8853;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, probability=True, random_state=303)
DecisionTreeClassifier;0.8328;0.8345;0.8328;0.8328;0.8586;0.8666;0.8586;0.8593;0.7333;0.7397;0.7333;0.7336;0.8747;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
LogisticRegression;0.6674;0.6722;0.6674;0.6671;0.7034;0.7069;0.7034;0.7032;0.7333;0.7537;0.7333;0.7317;0.8508;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
RandomForestClassifier;0.8721;0.873;0.8721;0.8721;0.8797;0.8825;0.8797;0.8801;0.7333;0.7359;0.7333;0.7304;0.9576;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 432};RandomForestClassifier(n_estimators=10, random_state=432)
DecisionTreeClassifier;0.8373;0.8382;0.8373;0.8376;0.8591;0.8604;0.8591;0.8591;0.7167;0.7201;0.7167;0.7156;0.8786;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
