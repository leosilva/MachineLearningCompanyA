Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8332;0.8391;0.8332;0.8339;0.831;0.8337;0.831;0.8316;0.8333;0.8486;0.8333;0.8354;0.9401;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 937};RandomForestClassifier(n_estimators=5, random_state=937)
KNeighborsClassifier;0.8129;0.8169;0.8129;0.8127;0.8414;0.8456;0.8414;0.8426;0.8333;0.8409;0.8333;0.8349;0.9207;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8037;0.8103;0.8037;0.8038;0.7966;0.7953;0.7966;0.7953;0.8333;0.8408;0.8333;0.8326;0.9182;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8155;0.8195;0.8155;0.8162;0.7862;0.7873;0.7862;0.7859;0.8333;0.8418;0.8333;0.8325;0.919;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.811;0.814;0.811;0.8108;0.8069;0.806;0.8069;0.8019;0.8333;0.8446;0.8333;0.8304;0.9158;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8312;0.8368;0.8312;0.8325;0.8034;0.8031;0.8034;0.8032;0.8167;0.8484;0.8167;0.8214;0.935;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=947)
RandomForestClassifier;0.8392;0.8441;0.8392;0.84;0.7973;0.8002;0.7973;0.7982;0.8167;0.8289;0.8167;0.8197;0.9457;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 937};RandomForestClassifier(n_estimators=5, random_state=937)
KNeighborsClassifier;0.8055;0.8092;0.8055;0.8053;0.7457;0.7534;0.7457;0.7475;0.8167;0.8301;0.8167;0.8185;0.9188;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8112;0.8155;0.8112;0.8115;0.8007;0.8076;0.8007;0.8018;0.8167;0.8285;0.8167;0.8184;0.9168;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8338;0.837;0.8338;0.8345;0.8316;0.8374;0.8316;0.8324;0.8167;0.8221;0.8167;0.818;0.9431;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 98};RandomForestClassifier(n_estimators=20, random_state=98)
RandomForestClassifier;0.8319;0.836;0.8319;0.8326;0.8522;0.8551;0.8522;0.8524;0.8167;0.8221;0.8167;0.818;0.9415;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 98};RandomForestClassifier(n_estimators=10, random_state=98)
RandomForestClassifier;0.8289;0.8323;0.8289;0.8296;0.8414;0.8423;0.8414;0.8417;0.8167;0.8221;0.8167;0.818;0.9406;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
RandomForestClassifier;0.8358;0.8406;0.8358;0.8366;0.869;0.8755;0.869;0.87;0.8167;0.8221;0.8167;0.818;0.9402;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 889};RandomForestClassifier(n_estimators=20, random_state=889)
RandomForestClassifier;0.8327;0.8378;0.8327;0.8333;0.8345;0.8385;0.8345;0.8349;0.8167;0.8221;0.8167;0.818;0.9407;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
RandomForestClassifier;0.8304;0.8346;0.8304;0.8315;0.8557;0.8608;0.8557;0.8569;0.8167;0.8221;0.8167;0.818;0.9389;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
RandomForestClassifier;0.8419;0.8478;0.8419;0.843;0.8;0.8066;0.8;0.8007;0.8167;0.8221;0.8167;0.818;0.9442;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 889};RandomForestClassifier(n_estimators=20, random_state=889)
KNeighborsClassifier;0.8025;0.8069;0.8025;0.8027;0.8207;0.8205;0.8207;0.8154;0.8167;0.8282;0.8167;0.8132;0.9165;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8231;0.8293;0.8231;0.824;0.8316;0.8372;0.8316;0.833;0.8;0.8258;0.8;0.8049;0.9327;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=197)
KNeighborsClassifier;0.7998;0.8038;0.7998;0.8004;0.8276;0.8306;0.8276;0.8283;0.8;0.8181;0.8;0.8035;0.9125;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7918;0.797;0.7918;0.7916;0.8621;0.8641;0.8621;0.8627;0.8;0.8181;0.8;0.8035;0.9096;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7964;0.7975;0.7964;0.7962;0.8207;0.8237;0.8207;0.8216;0.8;0.8181;0.8;0.8035;0.9178;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8351;0.8397;0.8351;0.836;0.8414;0.8443;0.8414;0.8423;0.8;0.8171;0.8;0.8028;0.9423;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 889};RandomForestClassifier(n_estimators=10, random_state=889)
DecisionTreeClassifier;0.8293;0.8345;0.8293;0.8305;0.8586;0.8604;0.8586;0.8587;0.8;0.8171;0.8;0.8028;0.9331;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=620)
DecisionTreeClassifier;0.8338;0.8397;0.8338;0.835;0.8144;0.8184;0.8144;0.8155;0.8;0.8171;0.8;0.8028;0.9344;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=197)
SVC;0.7401;0.7674;0.7401;0.7397;0.8552;0.8607;0.8552;0.8552;0.8;0.8296;0.8;0.8027;0.878;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
DecisionTreeClassifier;0.8286;0.8355;0.8286;0.83;0.8414;0.8419;0.8414;0.8406;0.8;0.8296;0.8;0.8027;0.9331;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=620)
SVC;0.7398;0.7646;0.7398;0.7391;0.8414;0.8504;0.8414;0.8399;0.8;0.8296;0.8;0.8027;0.8835;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
DecisionTreeClassifier;0.8304;0.8354;0.8304;0.8316;0.8483;0.8474;0.8483;0.8471;0.8;0.8089;0.8;0.8023;0.9361;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=197)
DecisionTreeClassifier;0.8323;0.8388;0.8323;0.8335;0.8247;0.8264;0.8247;0.8241;0.8;0.8089;0.8;0.8023;0.9372;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=620)
KNeighborsClassifier;0.8025;0.8063;0.8025;0.8023;0.8034;0.8086;0.8034;0.805;0.8;0.819;0.8;0.8018;0.9189;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8328;0.837;0.8328;0.8335;0.8276;0.8318;0.8276;0.8285;0.8;0.8093;0.8;0.8017;0.9432;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 98};RandomForestClassifier(n_estimators=20, random_state=98)
RandomForestClassifier;0.8305;0.8358;0.8305;0.8317;0.8379;0.8404;0.8379;0.8386;0.8;0.8093;0.8;0.8017;0.9445;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 98};RandomForestClassifier(n_estimators=20, random_state=98)
RandomForestClassifier;0.837;0.8408;0.837;0.8377;0.831;0.8322;0.831;0.8314;0.8;0.8093;0.8;0.8017;0.9395;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 98};RandomForestClassifier(n_estimators=10, random_state=98)
KNeighborsClassifier;0.801;0.8038;0.801;0.8009;0.7966;0.8129;0.7966;0.7993;0.8;0.8093;0.8;0.8017;0.9182;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8094;0.8128;0.8094;0.8098;0.8488;0.859;0.8488;0.8508;0.8;0.8093;0.8;0.8017;0.9139;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.837;0.8419;0.837;0.8381;0.8241;0.832;0.8241;0.8249;0.8;0.8093;0.8;0.8017;0.9435;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
KNeighborsClassifier;0.7948;0.8007;0.7948;0.7944;0.8488;0.8481;0.8488;0.8468;0.8;0.8125;0.8;0.8016;0.9151;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7955;0.7968;0.7955;0.7945;0.8247;0.8359;0.8247;0.8266;0.8;0.8125;0.8;0.8016;0.913;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8274;0.8315;0.8274;0.8283;0.8448;0.8452;0.8448;0.8444;0.8;0.8125;0.8;0.8016;0.9398;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 98};RandomForestClassifier(n_estimators=20, random_state=98)
KNeighborsClassifier;0.7845;0.7918;0.7845;0.7849;0.8103;0.816;0.8103;0.8109;0.8;0.8125;0.8;0.8016;0.9135;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8056;0.8081;0.8056;0.805;0.8379;0.8389;0.8379;0.8383;0.8;0.8125;0.8;0.8016;0.9138;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8273;0.8321;0.8273;0.8282;0.8522;0.8559;0.8522;0.8533;0.8;0.8042;0.8;0.801;0.9399;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 98};RandomForestClassifier(n_estimators=20, random_state=98)
RandomForestClassifier;0.8328;0.8387;0.8328;0.8335;0.8448;0.8455;0.8448;0.8451;0.8;0.8042;0.8;0.801;0.9415;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
RandomForestClassifier;0.8335;0.8372;0.8335;0.8341;0.831;0.8434;0.831;0.8335;0.8;0.8042;0.8;0.801;0.9405;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 889};RandomForestClassifier(n_estimators=5, random_state=889)
KNeighborsClassifier;0.8148;0.8213;0.8148;0.8155;0.8103;0.8129;0.8103;0.8113;0.8;0.8049;0.8;0.7999;0.9227;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.806;0.8093;0.806;0.8063;0.7966;0.7975;0.7966;0.7944;0.8;0.805;0.8;0.7993;0.9127;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8063;0.8093;0.8063;0.8063;0.8316;0.8309;0.8316;0.8308;0.8;0.8097;0.8;0.799;0.9191;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.798;0.8044;0.798;0.7973;0.7828;0.7849;0.7828;0.7834;0.8;0.8097;0.8;0.799;0.9195;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8263;0.8328;0.8263;0.8276;0.8483;0.8518;0.8483;0.8491;0.7833;0.8305;0.7833;0.7893;0.9326;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=620)
KNeighborsClassifier;0.8093;0.813;0.8093;0.8096;0.8351;0.8401;0.8351;0.8352;0.7833;0.8078;0.7833;0.787;0.9149;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7975;0.8019;0.7975;0.7974;0.8316;0.8332;0.8316;0.8316;0.7833;0.8195;0.7833;0.7869;0.9145;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
DecisionTreeClassifier;0.8232;0.8289;0.8232;0.8246;0.831;0.8362;0.831;0.8314;0.7833;0.8195;0.7833;0.7869;0.9334;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=620)
DecisionTreeClassifier;0.8285;0.8352;0.8285;0.8298;0.7862;0.7916;0.7862;0.7878;0.7833;0.8195;0.7833;0.7869;0.9345;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=197)
DecisionTreeClassifier;0.8296;0.8345;0.8296;0.8306;0.8625;0.8629;0.8625;0.8616;0.7833;0.8195;0.7833;0.7869;0.9308;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=197)
KNeighborsClassifier;0.7972;0.8035;0.7972;0.7975;0.8379;0.8419;0.8379;0.838;0.7833;0.7997;0.7833;0.7868;0.9179;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.7485;0.7745;0.7485;0.7471;0.7966;0.8007;0.7966;0.7974;0.7833;0.8059;0.7833;0.7863;0.8849;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
SVC;0.7375;0.7642;0.7375;0.7364;0.8655;0.8742;0.8655;0.8669;0.7833;0.8059;0.7833;0.7863;0.8799;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
SVC;0.7497;0.7773;0.7497;0.7493;0.7931;0.7976;0.7931;0.7938;0.7833;0.8059;0.7833;0.7863;0.8829;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
SVC;0.7432;0.7714;0.7432;0.7421;0.8379;0.8498;0.8379;0.8397;0.7833;0.8059;0.7833;0.7863;0.8796;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
SVC;0.7427;0.77;0.7427;0.7419;0.8213;0.8276;0.8213;0.8224;0.7833;0.8059;0.7833;0.7863;0.88;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
SVC;0.7455;0.7711;0.7455;0.7445;0.8069;0.8125;0.8069;0.8074;0.7833;0.8059;0.7833;0.7863;0.8838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
SVC;0.7469;0.7767;0.7469;0.7463;0.8247;0.8292;0.8247;0.8255;0.7833;0.8059;0.7833;0.7863;0.882;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
SVC;0.7408;0.7697;0.7408;0.7397;0.8625;0.8671;0.8625;0.8622;0.7833;0.8059;0.7833;0.7863;0.8827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
SVC;0.7443;0.7724;0.7443;0.7437;0.8351;0.841;0.8351;0.8354;0.7833;0.8059;0.7833;0.7863;0.8822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
SVC;0.747;0.7726;0.747;0.746;0.8207;0.8319;0.8207;0.8221;0.7833;0.8059;0.7833;0.7863;0.8841;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
SVC;0.7459;0.7745;0.7459;0.7455;0.8138;0.8163;0.8138;0.8136;0.7833;0.8059;0.7833;0.7863;0.8835;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
DecisionTreeClassifier;0.8251;0.8324;0.8251;0.8263;0.8621;0.8617;0.8621;0.8617;0.7833;0.8059;0.7833;0.7863;0.9321;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=947)
SVC;0.7454;0.7716;0.7454;0.7443;0.8351;0.8476;0.8351;0.8366;0.7833;0.8059;0.7833;0.7863;0.8832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
SVC;0.7413;0.7675;0.7413;0.7407;0.8379;0.8453;0.8379;0.8388;0.7833;0.8059;0.7833;0.7863;0.8813;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
DecisionTreeClassifier;0.8308;0.8365;0.8308;0.8321;0.8419;0.8476;0.8419;0.8432;0.7833;0.8059;0.7833;0.7863;0.9361;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=947)
SVC;0.7394;0.7677;0.7394;0.7386;0.8552;0.8599;0.8552;0.8557;0.7833;0.8059;0.7833;0.7863;0.8803;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
DecisionTreeClassifier;0.8267;0.8338;0.8267;0.8281;0.8586;0.8598;0.8586;0.8576;0.7833;0.8059;0.7833;0.7863;0.9309;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=947)
DecisionTreeClassifier;0.8328;0.8377;0.8328;0.8337;0.831;0.8367;0.831;0.8321;0.7833;0.8059;0.7833;0.7863;0.9372;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=197)
DecisionTreeClassifier;0.8274;0.8341;0.8274;0.8286;0.8414;0.8467;0.8414;0.8428;0.7833;0.8059;0.7833;0.7863;0.9369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=197)
DecisionTreeClassifier;0.8285;0.8354;0.8285;0.8299;0.8138;0.8154;0.8138;0.8144;0.7833;0.8059;0.7833;0.7863;0.9394;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=197)
DecisionTreeClassifier;0.822;0.8276;0.822;0.8233;0.8591;0.8627;0.8591;0.86;0.7833;0.8059;0.7833;0.7863;0.9281;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=620)
DecisionTreeClassifier;0.8224;0.8295;0.8224;0.8233;0.8448;0.847;0.8448;0.8455;0.7833;0.8059;0.7833;0.7863;0.9325;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=620)
SVC;0.7463;0.7742;0.7463;0.7457;0.8172;0.8217;0.8172;0.8174;0.7833;0.8059;0.7833;0.7863;0.882;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
SVC;0.7424;0.7693;0.7424;0.7414;0.8454;0.8511;0.8454;0.8465;0.7833;0.8059;0.7833;0.7863;0.8796;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
SVC;0.7466;0.7737;0.7466;0.7461;0.7931;0.8036;0.7931;0.7941;0.7833;0.8059;0.7833;0.7863;0.8872;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.75;0.78;0.75;0.7496;0.8041;0.8153;0.8041;0.8057;0.7833;0.8059;0.7833;0.7863;0.8835;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.7439;0.7719;0.7439;0.7434;0.8213;0.8295;0.8213;0.8226;0.7833;0.8059;0.7833;0.7863;0.8827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.7424;0.7696;0.7424;0.7419;0.8448;0.863;0.8448;0.846;0.7833;0.8059;0.7833;0.7863;0.8797;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.7421;0.7695;0.7421;0.7406;0.8517;0.8546;0.8517;0.8523;0.7833;0.8059;0.7833;0.7863;0.8817;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.7455;0.7744;0.7455;0.7445;0.8276;0.8295;0.8276;0.8272;0.7833;0.8059;0.7833;0.7863;0.8828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.7505;0.7729;0.7505;0.7494;0.8241;0.8343;0.8241;0.8228;0.7833;0.8059;0.7833;0.7863;0.8829;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.7424;0.7697;0.7424;0.7417;0.8172;0.8206;0.8172;0.818;0.7833;0.8059;0.7833;0.7863;0.8813;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.7378;0.7676;0.7378;0.7367;0.8586;0.8665;0.8586;0.8599;0.7833;0.8059;0.7833;0.7863;0.8804;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
DecisionTreeClassifier;0.8186;0.8243;0.8186;0.8198;0.8759;0.8797;0.8759;0.8768;0.7833;0.797;0.7833;0.7862;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=947)
DecisionTreeClassifier;0.8323;0.8375;0.8323;0.8334;0.8351;0.844;0.8351;0.8357;0.7833;0.797;0.7833;0.7862;0.9351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=947)
DecisionTreeClassifier;0.8296;0.8351;0.8296;0.8307;0.8488;0.8507;0.8488;0.8491;0.7833;0.797;0.7833;0.7862;0.9335;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=947)
DecisionTreeClassifier;0.8293;0.8357;0.8293;0.8305;0.8034;0.8096;0.8034;0.8051;0.7833;0.797;0.7833;0.7862;0.9353;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=947)
DecisionTreeClassifier;0.8274;0.8315;0.8274;0.8286;0.8517;0.8543;0.8517;0.8523;0.7833;0.797;0.7833;0.7862;0.9397;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=620)
DecisionTreeClassifier;0.8308;0.834;0.8308;0.8315;0.8276;0.8361;0.8276;0.8294;0.7833;0.797;0.7833;0.7862;0.9338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=197)
DecisionTreeClassifier;0.8335;0.8393;0.8335;0.835;0.811;0.8151;0.811;0.8116;0.7833;0.797;0.7833;0.7862;0.9392;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=620)
RandomForestClassifier;0.8273;0.832;0.8273;0.8283;0.866;0.8674;0.866;0.8664;0.7833;0.7972;0.7833;0.785;0.9389;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 889};RandomForestClassifier(n_estimators=20, random_state=889)
RandomForestClassifier;0.8446;0.8477;0.8446;0.8452;0.7835;0.7826;0.7835;0.7815;0.7833;0.7972;0.7833;0.785;0.9431;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 889};RandomForestClassifier(n_estimators=10, random_state=889)
RandomForestClassifier;0.8343;0.8387;0.8343;0.835;0.831;0.8408;0.831;0.833;0.7833;0.7912;0.7833;0.7848;0.9424;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
RandomForestClassifier;0.8389;0.842;0.8389;0.8396;0.8;0.8101;0.8;0.802;0.7833;0.7912;0.7833;0.7848;0.9401;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 98};RandomForestClassifier(n_estimators=10, random_state=98)
RandomForestClassifier;0.8351;0.8389;0.8351;0.8359;0.8414;0.8432;0.8414;0.8419;0.7833;0.7912;0.7833;0.7848;0.941;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
RandomForestClassifier;0.8366;0.8421;0.8366;0.8376;0.831;0.8389;0.831;0.832;0.7833;0.7912;0.7833;0.7848;0.9415;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 889};RandomForestClassifier(n_estimators=10, random_state=889)
RandomForestClassifier;0.8316;0.8353;0.8316;0.8326;0.8655;0.8734;0.8655;0.8667;0.7833;0.7898;0.7833;0.784;0.9403;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 889};RandomForestClassifier(n_estimators=20, random_state=889)
RandomForestClassifier;0.835;0.8409;0.835;0.8358;0.8034;0.8057;0.8034;0.8041;0.7833;0.7872;0.7833;0.7839;0.9399;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 889};RandomForestClassifier(n_estimators=20, random_state=889)
KNeighborsClassifier;0.8002;0.808;0.8002;0.8004;0.8076;0.8079;0.8076;0.8073;0.7833;0.7968;0.7833;0.7827;0.9126;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7983;0.8025;0.7983;0.7992;0.8207;0.8212;0.8207;0.8209;0.7833;0.7883;0.7833;0.7827;0.916;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7937;0.7978;0.7937;0.7927;0.8241;0.8283;0.8241;0.8253;0.7833;0.7909;0.7833;0.7794;0.9114;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8297;0.8353;0.8297;0.8308;0.8207;0.8307;0.8207;0.8224;0.7667;0.8097;0.7667;0.7708;0.9378;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=947)
DecisionTreeClassifier;0.8347;0.8395;0.8347;0.8355;0.8069;0.8152;0.8069;0.8088;0.7667;0.8097;0.7667;0.7708;0.9382;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 947};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=947)
DecisionTreeClassifier;0.8347;0.8398;0.8347;0.8358;0.8379;0.8453;0.8379;0.8395;0.7667;0.8097;0.7667;0.7708;0.9338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 620};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=620)
DecisionTreeClassifier;0.8293;0.835;0.8293;0.8306;0.8517;0.8573;0.8517;0.852;0.7667;0.8097;0.7667;0.7708;0.9352;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 197};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=197)
MLPClassifier;0.8105;0.8157;0.8105;0.8112;0.7869;0.7861;0.7869;0.7861;0.7667;0.7957;0.7667;0.7707;0.9218;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
SVC;0.7416;0.7661;0.7416;0.7407;0.866;0.8716;0.866;0.8661;0.7667;0.7957;0.7667;0.7707;0.8824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
MLPClassifier;0.8086;0.8156;0.8086;0.8096;0.811;0.8107;0.811;0.8108;0.7667;0.7852;0.7667;0.7705;0.9214;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
RandomForestClassifier;0.835;0.8396;0.835;0.836;0.8414;0.8452;0.8414;0.8424;0.7667;0.7951;0.7667;0.7695;0.9397;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 98};RandomForestClassifier(n_estimators=10, random_state=98)
SVC;0.7436;0.7723;0.7436;0.7421;0.7966;0.8058;0.7966;0.798;0.7667;0.7866;0.7667;0.7689;0.8827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, probability=True, random_state=489)
SVC;0.7413;0.7675;0.7413;0.7398;0.8379;0.8425;0.8379;0.8386;0.7667;0.7866;0.7667;0.7689;0.8837;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 678};SVC(C=10, probability=True, random_state=678)
KNeighborsClassifier;0.793;0.8024;0.793;0.7923;0.8414;0.8424;0.8414;0.8416;0.7667;0.7789;0.7667;0.7682;0.9189;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8277;0.8316;0.8277;0.8284;0.8591;0.8586;0.8591;0.8584;0.7667;0.7789;0.7667;0.7682;0.9409;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 889};RandomForestClassifier(n_estimators=20, random_state=889)
RandomForestClassifier;0.8339;0.8389;0.8339;0.8351;0.8448;0.8526;0.8448;0.8463;0.7667;0.7789;0.7667;0.7682;0.9404;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 98};RandomForestClassifier(n_estimators=20, random_state=98)
RandomForestClassifier;0.8365;0.8414;0.8365;0.8376;0.8316;0.8327;0.8316;0.8321;0.7667;0.7739;0.7667;0.7678;0.9408;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 937};RandomForestClassifier(n_estimators=20, random_state=937)
MLPClassifier;0.8121;0.8174;0.8121;0.8127;0.8138;0.8157;0.8138;0.8145;0.75;0.7746;0.75;0.7543;0.9226;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8098;0.8161;0.8098;0.8108;0.7931;0.7954;0.7931;0.7926;0.75;0.7746;0.75;0.7543;0.9235;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8067;0.8123;0.8067;0.8078;0.8276;0.8314;0.8276;0.8286;0.75;0.7746;0.75;0.7543;0.9212;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.8044;0.8113;0.8044;0.8054;0.8103;0.8138;0.8103;0.8101;0.75;0.7746;0.75;0.7543;0.9223;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8052;0.8107;0.8052;0.8056;0.8655;0.866;0.8655;0.8653;0.75;0.7746;0.75;0.7543;0.9201;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8116;0.816;0.8116;0.8123;0.7973;0.7977;0.7973;0.7972;0.75;0.7746;0.75;0.7543;0.9233;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.8045;0.8104;0.8045;0.8049;0.8207;0.8205;0.8207;0.8205;0.75;0.7746;0.75;0.7543;0.9206;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.811;0.8175;0.811;0.8117;0.8034;0.8277;0.8034;0.8064;0.75;0.7746;0.75;0.7543;0.9211;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8067;0.8135;0.8067;0.8078;0.8138;0.813;0.8138;0.8128;0.75;0.7746;0.75;0.7543;0.9218;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8117;0.8169;0.8117;0.8125;0.8316;0.8344;0.8316;0.832;0.75;0.7746;0.75;0.7543;0.921;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.8125;0.8183;0.8125;0.8132;0.8172;0.8262;0.8172;0.8183;0.75;0.7746;0.75;0.7543;0.9243;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8079;0.8149;0.8079;0.809;0.8138;0.8142;0.8138;0.814;0.75;0.7746;0.75;0.7543;0.9212;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8093;0.8163;0.8093;0.8104;0.8316;0.8342;0.8316;0.832;0.75;0.7746;0.75;0.7543;0.921;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8113;0.8184;0.8113;0.8125;0.8034;0.8041;0.8034;0.8037;0.75;0.7746;0.75;0.7543;0.924;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.7994;0.8067;0.7994;0.8007;0.8483;0.8507;0.8483;0.8487;0.75;0.7746;0.75;0.7543;0.9201;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8067;0.8116;0.8067;0.8076;0.8448;0.8443;0.8448;0.8445;0.75;0.7746;0.75;0.7543;0.9221;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.7995;0.8052;0.7995;0.7999;0.8621;0.8632;0.8621;0.8624;0.75;0.7746;0.75;0.7543;0.917;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8028;0.8092;0.8028;0.8037;0.8282;0.8286;0.8282;0.828;0.75;0.7897;0.75;0.7542;0.9194;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8113;0.8173;0.8113;0.8122;0.8103;0.8152;0.8103;0.8115;0.75;0.7897;0.75;0.7542;0.9221;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.8106;0.8155;0.8106;0.811;0.8069;0.8122;0.8069;0.8081;0.75;0.7897;0.75;0.7542;0.9208;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.806;0.8108;0.806;0.8064;0.8069;0.8072;0.8069;0.8069;0.75;0.7897;0.75;0.7542;0.9207;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8025;0.8082;0.8025;0.8034;0.8483;0.8501;0.8483;0.8489;0.75;0.7897;0.75;0.7542;0.9199;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.8094;0.8162;0.8094;0.8104;0.8379;0.8407;0.8379;0.8387;0.75;0.7897;0.75;0.7542;0.9202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.8116;0.8157;0.8116;0.812;0.8007;0.8119;0.8007;0.8029;0.75;0.7682;0.75;0.7527;0.9206;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8059;0.8128;0.8059;0.8069;0.8625;0.8622;0.8625;0.8622;0.75;0.7682;0.75;0.7527;0.9205;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
MLPClassifier;0.8055;0.8117;0.8055;0.8063;0.8591;0.8594;0.8591;0.8581;0.75;0.7682;0.75;0.7527;0.9178;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 837, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=837)
MLPClassifier;0.8175;0.8221;0.8175;0.8183;0.7655;0.7702;0.7655;0.7664;0.75;0.7682;0.75;0.7527;0.924;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 552, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=552)
KNeighborsClassifier;0.8041;0.8055;0.8041;0.8042;0.8;0.8053;0.8;0.8002;0.75;0.7696;0.75;0.7525;0.9133;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
MLPClassifier;0.8098;0.8141;0.8098;0.8104;0.8241;0.8249;0.8241;0.8241;0.75;0.763;0.75;0.752;0.9229;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
KNeighborsClassifier;0.8106;0.8126;0.8106;0.8104;0.7862;0.7854;0.7862;0.7854;0.7167;0.7311;0.7167;0.7196;0.9194;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
LogisticRegression;0.69;0.7092;0.69;0.689;0.7276;0.7452;0.7276;0.7285;0.7167;0.7342;0.7167;0.7186;0.8239;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6918;0.7112;0.6918;0.6912;0.677;0.6893;0.677;0.6756;0.7167;0.7342;0.7167;0.7186;0.8236;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6934;0.7106;0.6934;0.6925;0.7172;0.7308;0.7172;0.7191;0.7167;0.7342;0.7167;0.7186;0.8236;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6923;0.7108;0.6923;0.691;0.6828;0.6984;0.6828;0.685;0.7167;0.7342;0.7167;0.7186;0.8266;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6923;0.7101;0.6923;0.6916;0.7034;0.7212;0.7034;0.7037;0.7167;0.7342;0.7167;0.7186;0.8255;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.6995;0.7164;0.6995;0.6984;0.6495;0.6651;0.6495;0.65;0.7167;0.7329;0.7167;0.7179;0.8262;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.7026;0.7207;0.7026;0.7017;0.6448;0.6603;0.6448;0.6458;0.7167;0.7329;0.7167;0.7179;0.8272;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6938;0.7125;0.6938;0.693;0.7414;0.7535;0.7414;0.7417;0.7167;0.7329;0.7167;0.7179;0.8215;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.7011;0.7177;0.7011;0.7;0.6759;0.6988;0.6759;0.6751;0.7;0.7214;0.7;0.7036;0.8246;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.6938;0.7131;0.6938;0.6933;0.7103;0.7201;0.7103;0.7082;0.7;0.7214;0.7;0.7036;0.8253;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.6957;0.7141;0.6957;0.694;0.6793;0.7062;0.6793;0.6803;0.7;0.7214;0.7;0.7036;0.8216;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.6927;0.7111;0.6927;0.6923;0.7172;0.7371;0.7172;0.7153;0.7;0.7214;0.7;0.7036;0.8219;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6953;0.7122;0.6953;0.6945;0.7148;0.7414;0.7148;0.7152;0.7;0.7214;0.7;0.7036;0.823;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.6999;0.7175;0.6999;0.6994;0.6838;0.7031;0.6838;0.6838;0.7;0.7214;0.7;0.7036;0.8238;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6971;0.7131;0.6971;0.6961;0.6942;0.7357;0.6942;0.6902;0.7;0.7214;0.7;0.7036;0.8227;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6979;0.7174;0.6979;0.6979;0.6598;0.6745;0.6598;0.6586;0.7;0.7214;0.7;0.7036;0.8274;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6866;0.7056;0.6866;0.6858;0.7241;0.7442;0.7241;0.7258;0.7;0.7214;0.7;0.7036;0.8215;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6992;0.7173;0.6992;0.6984;0.6793;0.7013;0.6793;0.6814;0.7;0.7214;0.7;0.7036;0.8263;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6918;0.7101;0.6918;0.6911;0.7388;0.7518;0.7388;0.7361;0.7;0.7214;0.7;0.7036;0.8211;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6949;0.7122;0.6949;0.6942;0.7148;0.7376;0.7148;0.7119;0.7;0.7191;0.7;0.7028;0.8224;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6976;0.718;0.6976;0.6972;0.6793;0.6851;0.6793;0.6772;0.7;0.7191;0.7;0.7028;0.8287;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.7007;0.7195;0.7007;0.7002;0.6862;0.7026;0.6862;0.686;0.7;0.7191;0.7;0.7028;0.8247;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6957;0.7127;0.6957;0.6955;0.6897;0.7083;0.6897;0.6888;0.7;0.7191;0.7;0.7028;0.8213;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
LogisticRegression;0.6942;0.7132;0.6942;0.6938;0.7414;0.7606;0.7414;0.7393;0.7;0.7191;0.7;0.7028;0.8213;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6939;0.7136;0.6939;0.6929;0.7207;0.7312;0.7207;0.7168;0.7;0.7191;0.7;0.7028;0.8211;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.703;0.7203;0.703;0.7025;0.6552;0.6936;0.6552;0.6473;0.7;0.7191;0.7;0.7028;0.8271;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.695;0.7125;0.695;0.6947;0.7172;0.735;0.7172;0.7125;0.7;0.7191;0.7;0.7028;0.8254;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.6954;0.7141;0.6954;0.6958;0.7;0.7354;0.7;0.6966;0.7;0.7191;0.7;0.7028;0.8256;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.6983;0.7167;0.6983;0.6976;0.6667;0.6816;0.6667;0.668;0.7;0.7191;0.7;0.7028;0.8276;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
LogisticRegression;0.6984;0.7161;0.6984;0.6972;0.6897;0.7117;0.6897;0.6932;0.7;0.7191;0.7;0.7028;0.8223;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 472, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=472)"
