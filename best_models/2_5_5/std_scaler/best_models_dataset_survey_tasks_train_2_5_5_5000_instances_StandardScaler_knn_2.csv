Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8405;0.8439;0.8405;0.841;0.8436;0.8428;0.8436;0.8428;0.8;0.8013;0.8;0.8003;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.834;0.8353;0.834;0.8329;0.8711;0.872;0.8711;0.8715;0.7833;0.7913;0.7833;0.7852;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8405;0.8431;0.8405;0.8407;0.8577;0.8566;0.8577;0.857;0.7833;0.7855;0.7833;0.7841;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.834;0.8395;0.834;0.8347;0.8517;0.8521;0.8517;0.8518;0.7833;0.7857;0.7833;0.7835;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.829;0.8308;0.829;0.8278;0.851;0.8566;0.851;0.8521;0.7667;0.7774;0.7667;0.7682;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8326;0.838;0.8326;0.8326;0.8577;0.8586;0.8577;0.858;0.7667;0.7774;0.7667;0.7682;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8399;0.8412;0.8399;0.84;0.8463;0.846;0.8463;0.846;0.7667;0.7774;0.7667;0.7682;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8384;0.8421;0.8384;0.8386;0.8678;0.867;0.8678;0.8672;0.7667;0.7711;0.7667;0.768;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8276;0.8346;0.8276;0.8286;0.8524;0.8539;0.8524;0.853;0.7667;0.7711;0.7667;0.768;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8347;0.8361;0.8347;0.8342;0.8551;0.8582;0.8551;0.8557;0.7667;0.78;0.7667;0.7677;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8413;0.8447;0.8413;0.842;0.8504;0.8585;0.8504;0.8522;0.7667;0.7702;0.7667;0.7671;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8369;0.8425;0.8369;0.8377;0.853;0.8551;0.853;0.8538;0.75;0.7574;0.75;0.7517;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8315;0.8365;0.8315;0.8317;0.8651;0.8649;0.8651;0.865;0.75;0.7574;0.75;0.7517;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8365;0.8398;0.8365;0.837;0.8671;0.8671;0.8671;0.8671;0.75;0.7574;0.75;0.7517;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8297;0.8375;0.8297;0.8309;0.8464;0.8477;0.8464;0.8469;0.75;0.7551;0.75;0.7513;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8298;0.836;0.8298;0.8299;0.8537;0.8552;0.8537;0.8543;0.75;0.7649;0.75;0.7513;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8279;0.8357;0.8279;0.8286;0.8678;0.8702;0.8678;0.8684;0.75;0.7593;0.75;0.7512;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8365;0.8393;0.8365;0.8367;0.851;0.8576;0.851;0.8527;0.7333;0.7454;0.7333;0.736;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8261;0.8306;0.8261;0.8265;0.8409;0.8433;0.8409;0.8418;0.7333;0.7482;0.7333;0.7354;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8339;0.8363;0.8339;0.8339;0.849;0.8476;0.849;0.8475;0.7333;0.7384;0.7333;0.735;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8378;0.839;0.8378;0.838;0.8591;0.8588;0.8591;0.857;0.7333;0.7384;0.7333;0.735;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8255;0.8278;0.8255;0.824;0.8517;0.8542;0.8517;0.8525;0.7333;0.7439;0.7333;0.735;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8337;0.8365;0.8337;0.8341;0.847;0.852;0.847;0.8485;0.7333;0.7419;0.7333;0.7348;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8261;0.8275;0.8261;0.8254;0.851;0.8498;0.851;0.85;0.7333;0.7363;0.7333;0.7345;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8377;0.842;0.8377;0.8387;0.8483;0.8496;0.8483;0.8483;0.7333;0.746;0.7333;0.7344;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8328;0.8357;0.8328;0.8329;0.8692;0.8722;0.8692;0.8698;0.7333;0.7388;0.7333;0.7341;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8357;0.8368;0.8357;0.8346;0.8531;0.8562;0.8531;0.8541;0.7167;0.7375;0.7167;0.7192;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8326;0.8394;0.8326;0.8325;0.8471;0.846;0.8471;0.8464;0.7167;0.7307;0.7167;0.7179;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.846;0.8505;0.846;0.847;0.8612;0.8609;0.8612;0.861;0.7;0.7104;0.7;0.7018;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8258;0.8281;0.8258;0.825;0.8343;0.8557;0.8343;0.8364;0.6833;0.7181;0.6833;0.6829;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
