Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8421;0.8482;0.8421;0.8424;0.8261;0.8291;0.8261;0.8265;0.9;0.9006;0.9;0.8999;0.9498;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 42};RandomForestClassifier(n_estimators=10, random_state=42)
KNeighborsClassifier;0.8165;0.8248;0.8165;0.8173;0.7971;0.8149;0.7971;0.796;0.8833;0.8848;0.8833;0.8837;0.9275;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8149;0.8228;0.8149;0.8155;0.8261;0.8305;0.8261;0.825;0.8833;0.8862;0.8833;0.8836;0.9448;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
RandomForestClassifier;0.8292;0.8407;0.8292;0.8302;0.8986;0.9042;0.8986;0.8995;0.8667;0.8742;0.8667;0.869;0.9476;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 916};RandomForestClassifier(n_estimators=10, random_state=916)
SVC;0.818;0.8312;0.818;0.8189;0.8406;0.8442;0.8406;0.8387;0.8667;0.8727;0.8667;0.8682;0.9066;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 600};SVC(C=10, probability=True, random_state=600)
KNeighborsClassifier;0.8018;0.8128;0.8018;0.8022;0.8261;0.8511;0.8261;0.8306;0.8667;0.8692;0.8667;0.8669;0.9263;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.818;0.8308;0.818;0.8193;0.7971;0.8201;0.7971;0.7996;0.8667;0.8692;0.8667;0.8669;0.9425;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
KNeighborsClassifier;0.8181;0.8256;0.8181;0.8173;0.7826;0.7992;0.7826;0.7867;0.8667;0.8722;0.8667;0.8667;0.9222;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8214;0.8315;0.8214;0.823;0.7826;0.7991;0.7826;0.787;0.8667;0.8667;0.8667;0.8667;0.9429;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
KNeighborsClassifier;0.8164;0.8279;0.8164;0.8171;0.7681;0.7744;0.7681;0.7695;0.8667;0.8722;0.8667;0.8667;0.9344;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8132;0.8219;0.8132;0.8138;0.913;0.9244;0.913;0.9123;0.8667;0.8672;0.8667;0.8666;0.9408;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
KNeighborsClassifier;0.8069;0.8194;0.8069;0.808;0.8551;0.853;0.8551;0.853;0.8667;0.8673;0.8667;0.8666;0.9201;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8101;0.8214;0.8101;0.8107;0.8696;0.879;0.8696;0.8709;0.8667;0.8675;0.8667;0.8656;0.9424;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.818;0.8277;0.818;0.8187;0.8696;0.8769;0.8696;0.8714;0.8667;0.8675;0.8667;0.8656;0.9428;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
SVC;0.8196;0.8318;0.8196;0.8211;0.7536;0.7806;0.7536;0.7524;0.8667;0.8783;0.8667;0.8655;0.9161;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 738};SVC(C=10, probability=True, random_state=738)
MLPClassifier;0.8212;0.8326;0.8212;0.8228;0.7536;0.7889;0.7536;0.7557;0.85;0.871;0.85;0.8519;0.9439;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
RandomForestClassifier;0.8453;0.8538;0.8453;0.8453;0.8261;0.8284;0.8261;0.827;0.85;0.871;0.85;0.8519;0.9557;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 42};RandomForestClassifier(n_estimators=5, random_state=42)
RandomForestClassifier;0.8437;0.8577;0.8437;0.844;0.8261;0.8317;0.8261;0.8278;0.85;0.864;0.85;0.8518;0.9481;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 331};RandomForestClassifier(n_estimators=20, random_state=331)
RandomForestClassifier;0.8374;0.8478;0.8374;0.839;0.913;0.9156;0.913;0.9122;0.85;0.864;0.85;0.8518;0.9502;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 42};RandomForestClassifier(n_estimators=20, random_state=42)
RandomForestClassifier;0.8439;0.8531;0.8439;0.8445;0.8986;0.9047;0.8986;0.8991;0.85;0.8674;0.85;0.8513;0.9473;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 42};RandomForestClassifier(n_estimators=10, random_state=42)
SVC;0.8229;0.8327;0.8229;0.824;0.8116;0.8088;0.8116;0.81;0.85;0.8674;0.85;0.8513;0.9071;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 905};SVC(C=1, probability=True, random_state=905)
SVC;0.8212;0.8309;0.8212;0.8226;0.8116;0.84;0.8116;0.8112;0.85;0.8674;0.85;0.8513;0.9078;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 600};SVC(C=1, probability=True, random_state=600)
MLPClassifier;0.8117;0.8205;0.8117;0.8122;0.8696;0.896;0.8696;0.8712;0.85;0.8599;0.85;0.8507;0.9421;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
SVC;0.8132;0.8273;0.8132;0.8137;0.8406;0.8534;0.8406;0.841;0.85;0.8686;0.85;0.8504;0.9105;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 905};SVC(C=10, probability=True, random_state=905)
MLPClassifier;0.8196;0.8307;0.8196;0.82;0.8696;0.8687;0.8696;0.8689;0.85;0.85;0.85;0.85;0.9412;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
KNeighborsClassifier;0.7794;0.7869;0.7794;0.781;0.8551;0.8667;0.8551;0.8571;0.85;0.8505;0.85;0.8499;0.9269;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8148;0.8273;0.8148;0.8149;0.8116;0.8275;0.8116;0.8145;0.85;0.8505;0.85;0.8499;0.9299;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8035;0.8108;0.8035;0.8039;0.8406;0.8417;0.8406;0.8409;0.85;0.8505;0.85;0.8499;0.9216;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7955;0.8035;0.7955;0.7955;0.7971;0.8072;0.7971;0.8002;0.85;0.8544;0.85;0.8499;0.9178;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7986;0.8114;0.7986;0.7991;0.8116;0.8299;0.8116;0.8156;0.85;0.8505;0.85;0.8499;0.924;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8035;0.8122;0.8035;0.8037;0.8551;0.8683;0.8551;0.857;0.85;0.8505;0.85;0.8499;0.9236;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8052;0.8131;0.8052;0.8053;0.8116;0.8494;0.8116;0.8167;0.85;0.8544;0.85;0.8499;0.9271;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8502;0.8563;0.8502;0.8505;0.8551;0.8595;0.8551;0.8562;0.85;0.8583;0.85;0.8497;0.9497;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 916};RandomForestClassifier(n_estimators=10, random_state=916)
RandomForestClassifier;0.8374;0.8484;0.8374;0.8369;0.8551;0.858;0.8551;0.8532;0.85;0.8583;0.85;0.8497;0.9496;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 42};RandomForestClassifier(n_estimators=20, random_state=42)
KNeighborsClassifier;0.8133;0.8236;0.8133;0.8149;0.8551;0.8589;0.8551;0.855;0.85;0.8508;0.85;0.849;0.9278;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.8357;0.8402;0.8357;0.8358;0.8551;0.8643;0.8551;0.8511;0.85;0.8629;0.85;0.8474;0.9513;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 331};RandomForestClassifier(n_estimators=10, random_state=331)
SVC;0.8147;0.8241;0.8147;0.8144;0.8696;0.8936;0.8696;0.8725;0.8333;0.8429;0.8333;0.8358;0.9103;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 905};SVC(C=10, probability=True, random_state=905)
SVC;0.818;0.8315;0.818;0.8189;0.8116;0.8155;0.8116;0.8127;0.8333;0.85;0.8333;0.8357;0.9036;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 600};SVC(C=0.1, kernel='linear', probability=True, random_state=600)
SVC;0.8228;0.8326;0.8228;0.824;0.7971;0.8051;0.7971;0.7994;0.8333;0.85;0.8333;0.8357;0.91;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 600};SVC(C=10, kernel='linear', probability=True, random_state=600)
SVC;0.81;0.8258;0.81;0.8106;0.8696;0.8783;0.8696;0.8709;0.8333;0.85;0.8333;0.8357;0.9025;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 905};SVC(C=10, kernel='linear', probability=True, random_state=905)
SVC;0.8245;0.8353;0.8245;0.8255;0.7536;0.7822;0.7536;0.7594;0.8333;0.85;0.8333;0.8357;0.9166;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 905};SVC(C=0.1, kernel='linear', probability=True, random_state=905)
SVC;0.8118;0.8242;0.8118;0.8127;0.8551;0.8552;0.8551;0.8543;0.8333;0.85;0.8333;0.8357;0.9066;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 905};SVC(C=0.1, kernel='linear', probability=True, random_state=905)
SVC;0.8244;0.8347;0.8244;0.8257;0.7536;0.7659;0.7536;0.756;0.8333;0.85;0.8333;0.8357;0.9121;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 905};SVC(C=0.1, kernel='linear', probability=True, random_state=905)
SVC;0.8178;0.8272;0.8178;0.8189;0.8116;0.8487;0.8116;0.814;0.8333;0.85;0.8333;0.8357;0.9099;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 600};SVC(C=1, kernel='linear', probability=True, random_state=600)
SVC;0.818;0.8316;0.818;0.8176;0.7681;0.7741;0.7681;0.7695;0.8333;0.85;0.8333;0.8357;0.9074;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 905};SVC(C=1, kernel='linear', probability=True, random_state=905)
SVC;0.8277;0.8375;0.8277;0.8283;0.7681;0.7995;0.7681;0.7719;0.8333;0.85;0.8333;0.8357;0.9119;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 738};SVC(C=1, kernel='linear', probability=True, random_state=738)
SVC;0.8132;0.8262;0.8132;0.8143;0.8261;0.8256;0.8261;0.824;0.8333;0.85;0.8333;0.8357;0.9065;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 905};SVC(C=1, kernel='linear', probability=True, random_state=905)
SVC;0.818;0.8276;0.818;0.8189;0.8116;0.8503;0.8116;0.8171;0.8333;0.85;0.8333;0.8357;0.9113;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 905};SVC(C=10, kernel='linear', probability=True, random_state=905)
SVC;0.8163;0.8283;0.8163;0.8174;0.8261;0.8474;0.8261;0.8282;0.8333;0.85;0.8333;0.8357;0.9101;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 738};SVC(C=1, kernel='linear', probability=True, random_state=738)
SVC;0.8148;0.8284;0.8148;0.8154;0.8406;0.8489;0.8406;0.8396;0.8333;0.85;0.8333;0.8357;0.9082;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 738};SVC(C=0.1, kernel='linear', probability=True, random_state=738)
SVC;0.802;0.8176;0.802;0.8035;0.8841;0.885;0.8841;0.8825;0.8333;0.85;0.8333;0.8357;0.9047;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 738};SVC(C=1, kernel='linear', probability=True, random_state=738)
SVC;0.8083;0.8181;0.8083;0.8094;0.8841;0.8899;0.8841;0.8858;0.8333;0.85;0.8333;0.8357;0.9026;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 738};SVC(C=0.1, kernel='linear', probability=True, random_state=738)
SVC;0.8245;0.8371;0.8245;0.8251;0.7391;0.7496;0.7391;0.7418;0.8333;0.85;0.8333;0.8357;0.9165;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 738};SVC(C=1, kernel='linear', probability=True, random_state=738)
SVC;0.8179;0.8275;0.8179;0.8194;0.8116;0.8115;0.8116;0.8108;0.8333;0.85;0.8333;0.8357;0.9105;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 600};SVC(C=1, kernel='linear', probability=True, random_state=600)
SVC;0.8182;0.8299;0.8182;0.8182;0.8261;0.828;0.8261;0.8259;0.8333;0.85;0.8333;0.8357;0.909;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 600};SVC(C=1, kernel='linear', probability=True, random_state=600)
RandomForestClassifier;0.8391;0.8455;0.8391;0.8396;0.8696;0.875;0.8696;0.8702;0.8333;0.8434;0.8333;0.8352;0.9493;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 916};RandomForestClassifier(n_estimators=20, random_state=916)
DecisionTreeClassifier;0.8422;0.8512;0.8422;0.8424;0.7971;0.8024;0.7971;0.7922;0.8333;0.8596;0.8333;0.8351;0.9277;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 239};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=239)
KNeighborsClassifier;0.7842;0.7957;0.7842;0.7864;0.8841;0.8878;0.8841;0.8838;0.8333;0.8409;0.8333;0.8349;0.9134;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8308;0.8384;0.8308;0.8315;0.7681;0.7692;0.7681;0.7684;0.8333;0.8386;0.8333;0.8348;0.9456;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
RandomForestClassifier;0.8405;0.8508;0.8405;0.8407;0.7681;0.7849;0.7681;0.7723;0.8333;0.8411;0.8333;0.8346;0.9558;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 42};RandomForestClassifier(n_estimators=10, random_state=42)
KNeighborsClassifier;0.7858;0.7993;0.7858;0.7858;0.913;0.9164;0.913;0.9139;0.8333;0.8444;0.8333;0.8345;0.9156;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8212;0.8271;0.8212;0.822;0.8116;0.8135;0.8116;0.8117;0.8333;0.8444;0.8333;0.8345;0.9445;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
RandomForestClassifier;0.8374;0.844;0.8374;0.8382;0.913;0.9142;0.913;0.9133;0.8333;0.8413;0.8333;0.834;0.9484;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 916};RandomForestClassifier(n_estimators=20, random_state=916)
RandomForestClassifier;0.8438;0.8473;0.8438;0.8437;0.8261;0.8397;0.8261;0.8284;0.8333;0.8413;0.8333;0.834;0.9533;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 331};RandomForestClassifier(n_estimators=20, random_state=331)
RandomForestClassifier;0.8406;0.8513;0.8406;0.8422;0.8406;0.8416;0.8406;0.8376;0.8333;0.8413;0.8333;0.834;0.9533;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 331};RandomForestClassifier(n_estimators=20, random_state=331)
MLPClassifier;0.818;0.8263;0.818;0.8181;0.8116;0.8251;0.8116;0.8134;0.8333;0.8365;0.8333;0.8339;0.9444;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
MLPClassifier;0.8115;0.8199;0.8115;0.812;0.8841;0.892;0.8841;0.8818;0.8333;0.8372;0.8333;0.8339;0.9415;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
RandomForestClassifier;0.8647;0.8683;0.8647;0.8653;0.8116;0.8121;0.8116;0.8111;0.8333;0.8428;0.8333;0.8333;0.9586;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 916};RandomForestClassifier(n_estimators=20, random_state=916)
MLPClassifier;0.8228;0.8312;0.8228;0.8228;0.7826;0.7967;0.7826;0.7854;0.8333;0.8339;0.8333;0.8333;0.9455;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.8262;0.8369;0.8262;0.8267;0.7971;0.804;0.7971;0.7983;0.8333;0.8339;0.8333;0.8333;0.9449;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.8277;0.8378;0.8277;0.8282;0.7536;0.7643;0.7536;0.7547;0.8333;0.8339;0.8333;0.8333;0.95;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
KNeighborsClassifier;0.8051;0.8128;0.8051;0.8059;0.7971;0.8007;0.7971;0.7986;0.8333;0.8333;0.8333;0.8333;0.9206;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8115;0.8227;0.8115;0.8127;0.7536;0.746;0.7536;0.7453;0.8333;0.8333;0.8333;0.8333;0.931;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7955;0.812;0.7955;0.7972;0.8696;0.8726;0.8696;0.8708;0.8333;0.8333;0.8333;0.8333;0.9228;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8179;0.8287;0.8179;0.818;0.8116;0.8183;0.8116;0.8121;0.8333;0.8333;0.8333;0.8333;0.9283;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8341;0.8404;0.8341;0.8344;0.7681;0.7698;0.7681;0.7682;0.8333;0.8331;0.8333;0.8329;0.9495;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.8229;0.8349;0.8229;0.8236;0.7826;0.8017;0.7826;0.7862;0.8333;0.8331;0.8333;0.8329;0.9466;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
KNeighborsClassifier;0.8051;0.8146;0.8051;0.8059;0.8406;0.8388;0.8406;0.8389;0.8333;0.8331;0.8333;0.8329;0.926;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8147;0.8256;0.8147;0.8135;0.8261;0.8313;0.8261;0.8279;0.8333;0.8374;0.8333;0.8328;0.9455;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
KNeighborsClassifier;0.8084;0.8181;0.8084;0.8098;0.8116;0.823;0.8116;0.8129;0.8333;0.836;0.8333;0.832;0.9284;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8212;0.8312;0.8212;0.8219;0.8696;0.8889;0.8696;0.8699;0.8333;0.8323;0.8333;0.8314;0.9435;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
DecisionTreeClassifier;0.8519;0.8644;0.8519;0.8534;0.8116;0.8072;0.8116;0.8076;0.8167;0.8433;0.8167;0.8209;0.9292;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 239};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=239)
RandomForestClassifier;0.8389;0.8474;0.8389;0.8386;0.8261;0.8317;0.8261;0.8269;0.8167;0.8337;0.8167;0.82;0.9521;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 42};RandomForestClassifier(n_estimators=20, random_state=42)
DecisionTreeClassifier;0.8293;0.8454;0.8293;0.8309;0.8261;0.8284;0.8261;0.827;0.8167;0.8393;0.8167;0.8197;0.938;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 1};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=1)
SVC;0.8245;0.8351;0.8245;0.8249;0.7826;0.7989;0.7826;0.7852;0.8167;0.8512;0.8167;0.8194;0.9121;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 738};SVC(C=10, probability=True, random_state=738)
DecisionTreeClassifier;0.8534;0.8648;0.8534;0.8552;0.7246;0.7645;0.7246;0.7323;0.8167;0.8373;0.8167;0.8191;0.9348;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 239};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=239)
RandomForestClassifier;0.8535;0.8651;0.8535;0.8551;0.8116;0.8095;0.8116;0.8103;0.8167;0.8268;0.8167;0.8185;0.9484;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 916};RandomForestClassifier(n_estimators=20, random_state=916)
RandomForestClassifier;0.8422;0.8484;0.8422;0.8421;0.7826;0.8004;0.7826;0.7853;0.8167;0.8253;0.8167;0.8183;0.9541;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 916};RandomForestClassifier(n_estimators=20, random_state=916)
RandomForestClassifier;0.8357;0.843;0.8357;0.8355;0.8696;0.8696;0.8696;0.8696;0.8167;0.8253;0.8167;0.8183;0.9495;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 331};RandomForestClassifier(n_estimators=10, random_state=331)
RandomForestClassifier;0.847;0.8525;0.847;0.8476;0.8116;0.8251;0.8116;0.8134;0.8167;0.8253;0.8167;0.8183;0.949;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 331};RandomForestClassifier(n_estimators=20, random_state=331)
RandomForestClassifier;0.8453;0.8574;0.8453;0.846;0.8116;0.821;0.8116;0.8146;0.8167;0.8253;0.8167;0.8183;0.9524;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 331};RandomForestClassifier(n_estimators=20, random_state=331)
RandomForestClassifier;0.8502;0.8583;0.8502;0.8506;0.8116;0.8135;0.8116;0.808;0.8167;0.8287;0.8167;0.8178;0.9548;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 916};RandomForestClassifier(n_estimators=20, random_state=916)
RandomForestClassifier;0.8519;0.862;0.8519;0.852;0.8551;0.8624;0.8551;0.8558;0.8167;0.8234;0.8167;0.8178;0.9542;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 42};RandomForestClassifier(n_estimators=20, random_state=42)
KNeighborsClassifier;0.8116;0.8214;0.8116;0.8112;0.7391;0.7568;0.7391;0.7395;0.8167;0.8234;0.8167;0.8178;0.9306;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
LogisticRegression;0.8278;0.8344;0.8278;0.8285;0.6957;0.7331;0.6957;0.6999;0.8167;0.8234;0.8167;0.8178;0.9345;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
MLPClassifier;0.8212;0.829;0.8212;0.8207;0.8261;0.8591;0.8261;0.831;0.8167;0.818;0.8167;0.817;0.9477;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
RandomForestClassifier;0.8148;0.8246;0.8148;0.8151;0.913;0.9127;0.913;0.912;0.8167;0.8273;0.8167;0.817;0.9451;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 916};RandomForestClassifier(n_estimators=20, random_state=916)
MLPClassifier;0.8245;0.8384;0.8245;0.8256;0.7681;0.7829;0.7681;0.7636;0.8167;0.819;0.8167;0.8168;0.9447;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
LogisticRegression;0.8213;0.8283;0.8213;0.8222;0.7246;0.728;0.7246;0.7249;0.8167;0.819;0.8167;0.8168;0.9345;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
MLPClassifier;0.8214;0.8298;0.8214;0.8219;0.8261;0.8313;0.8261;0.8264;0.8167;0.819;0.8167;0.8168;0.9414;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8164;0.8247;0.8164;0.8161;0.8406;0.8591;0.8406;0.8404;0.8167;0.8167;0.8167;0.8167;0.943;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
MLPClassifier;0.8277;0.8383;0.8277;0.8285;0.8116;0.8107;0.8116;0.8101;0.8167;0.8172;0.8167;0.8166;0.9438;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
KNeighborsClassifier;0.802;0.8129;0.802;0.8035;0.8841;0.8879;0.8841;0.8852;0.8167;0.8289;0.8167;0.8152;0.9243;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
SVC;0.8165;0.8277;0.8165;0.8174;0.8551;0.8675;0.8551;0.8566;0.8;0.8232;0.8;0.8046;0.9071;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 738};SVC(C=10, probability=True, random_state=738)
RandomForestClassifier;0.8454;0.8534;0.8454;0.8456;0.8261;0.8389;0.8261;0.828;0.8;0.8267;0.8;0.8042;0.9499;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 331};RandomForestClassifier(n_estimators=5, random_state=331)
SVC;0.8227;0.8327;0.8227;0.8236;0.7681;0.8038;0.7681;0.7684;0.8;0.8301;0.8;0.8039;0.9135;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 600};SVC(C=10, probability=True, random_state=600)
SVC;0.8083;0.8224;0.8083;0.8094;0.8696;0.8774;0.8696;0.871;0.8;0.8301;0.8;0.8039;0.9013;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 600};SVC(C=10, probability=True, random_state=600)
RandomForestClassifier;0.8439;0.8467;0.8439;0.8433;0.8406;0.8646;0.8406;0.8424;0.8;0.8228;0.8;0.8036;0.954;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 916};RandomForestClassifier(n_estimators=10, random_state=916)
DecisionTreeClassifier;0.8389;0.8502;0.8389;0.8399;0.8116;0.827;0.8116;0.815;0.8;0.8228;0.8;0.8036;0.9251;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 239};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=239)
DecisionTreeClassifier;0.8373;0.8503;0.8373;0.8385;0.8116;0.8089;0.8116;0.8085;0.8;0.8221;0.8;0.8032;0.9306;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 1};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=1)
DecisionTreeClassifier;0.8487;0.8594;0.8487;0.8498;0.7971;0.8363;0.7971;0.8019;0.8;0.8215;0.8;0.8029;0.9359;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=433)
RandomForestClassifier;0.855;0.86;0.855;0.8558;0.8696;0.8841;0.8696;0.8721;0.8;0.8101;0.8;0.8024;0.9535;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 331};RandomForestClassifier(n_estimators=20, random_state=331)
MLPClassifier;0.8276;0.8455;0.8276;0.8287;0.7536;0.7972;0.7536;0.7591;0.8;0.8153;0.8;0.802;0.9504;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 648, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=648)
DecisionTreeClassifier;0.8197;0.8333;0.8197;0.8214;0.8986;0.9003;0.8986;0.8991;0.8;0.8102;0.8;0.8014;0.9276;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
LogisticRegression;0.8164;0.8266;0.8164;0.8167;0.8261;0.8376;0.8261;0.8287;0.8;0.8054;0.8;0.8013;0.9237;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
LogisticRegression;0.8068;0.8146;0.8068;0.8074;0.8116;0.8339;0.8116;0.8133;0.8;0.8054;0.8;0.8013;0.9262;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
LogisticRegression;0.8051;0.8146;0.8051;0.8057;0.8406;0.8571;0.8406;0.8442;0.8;0.8054;0.8;0.8013;0.9271;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
RandomForestClassifier;0.8406;0.8481;0.8406;0.8409;0.8551;0.8904;0.8551;0.8553;0.8;0.8054;0.8;0.8013;0.9545;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 42};RandomForestClassifier(n_estimators=20, random_state=42)
KNeighborsClassifier;0.7875;0.7943;0.7875;0.7869;0.8261;0.8309;0.8261;0.8278;0.8;0.8038;0.8;0.801;0.9251;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8116;0.8217;0.8116;0.8125;0.7681;0.7853;0.7681;0.7718;0.8;0.8038;0.8;0.801;0.9298;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8615;0.8724;0.8615;0.8626;0.7681;0.7728;0.7681;0.7628;0.8;0.8035;0.8;0.8005;0.9354;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=433)
LogisticRegression;0.8214;0.8323;0.8214;0.8216;0.7536;0.754;0.7536;0.7531;0.8;0.8013;0.8;0.8003;0.9303;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
MLPClassifier;0.8261;0.8342;0.8261;0.8248;0.7971;0.7996;0.7971;0.7975;0.8;0.8013;0.8;0.8003;0.9437;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
LogisticRegression;0.815;0.8207;0.815;0.8159;0.7826;0.7877;0.7826;0.7843;0.8;0.8013;0.8;0.8003;0.9263;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
MLPClassifier;0.8182;0.8297;0.8182;0.8184;0.8406;0.853;0.8406;0.8434;0.8;0.8013;0.8;0.8003;0.9445;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
LogisticRegression;0.8149;0.8254;0.8149;0.8155;0.7536;0.7555;0.7536;0.7509;0.8;0.8013;0.8;0.8003;0.9277;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
MLPClassifier;0.818;0.8304;0.818;0.8193;0.8261;0.8363;0.8261;0.8279;0.8;0.8013;0.8;0.8003;0.9445;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
SVC;0.8101;0.8235;0.8101;0.8107;0.8551;0.8651;0.8551;0.8535;0.8;0.8013;0.8;0.8003;0.9101;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 738};SVC(C=1, kernel='linear', probability=True, random_state=738)
MLPClassifier;0.8228;0.8299;0.8228;0.8226;0.8116;0.8113;0.8116;0.8112;0.8;0.8013;0.8;0.8003;0.9422;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 21, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=21)
LogisticRegression;0.8148;0.8239;0.8148;0.8155;0.7391;0.7421;0.7391;0.7398;0.8;0.8013;0.8;0.8003;0.931;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
LogisticRegression;0.8099;0.8158;0.8099;0.8091;0.8406;0.8434;0.8406;0.841;0.8;0.8013;0.8;0.8003;0.9237;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8164;0.8239;0.8164;0.8172;0.7681;0.7756;0.7681;0.7699;0.8;0.8013;0.8;0.8003;0.9268;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
LogisticRegression;0.8019;0.8116;0.8019;0.8026;0.8551;0.8595;0.8551;0.8562;0.8;0.8013;0.8;0.8003;0.9269;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
SVC;0.8179;0.8282;0.8179;0.8184;0.7826;0.7845;0.7826;0.7799;0.8;0.8013;0.8;0.8003;0.9118;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 600};SVC(C=10, kernel='linear', probability=True, random_state=600)
LogisticRegression;0.8084;0.815;0.8084;0.8095;0.8261;0.8251;0.8261;0.8223;0.8;0.7997;0.8;0.7995;0.9279;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
LogisticRegression;0.8052;0.815;0.8052;0.8063;0.8696;0.8727;0.8696;0.8704;0.8;0.7987;0.8;0.798;0.9234;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8068;0.8128;0.8068;0.8068;0.8551;0.8562;0.8551;0.8553;0.8;0.7987;0.8;0.798;0.9248;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
LogisticRegression;0.8116;0.8179;0.8116;0.8125;0.8116;0.8072;0.8116;0.8076;0.8;0.7987;0.8;0.798;0.9241;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
KNeighborsClassifier;0.8116;0.8216;0.8116;0.8121;0.7971;0.8088;0.7971;0.7998;0.8;0.8051;0.8;0.7977;0.927;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8051;0.8172;0.8051;0.8064;0.7971;0.8031;0.7971;0.7967;0.8;0.8036;0.8;0.7975;0.9189;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8292;0.8436;0.8292;0.8306;0.8986;0.9028;0.8986;0.8997;0.7833;0.8014;0.7833;0.7869;0.9288;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
DecisionTreeClassifier;0.847;0.8604;0.847;0.8491;0.7681;0.799;0.7681;0.7702;0.7833;0.7984;0.7833;0.786;0.9348;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 1};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=1)
DecisionTreeClassifier;0.8438;0.8585;0.8438;0.8452;0.7681;0.7877;0.7681;0.771;0.7833;0.8141;0.7833;0.7854;0.9337;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 433};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=433)
DecisionTreeClassifier;0.8391;0.8508;0.8391;0.8403;0.8261;0.8335;0.8261;0.8262;0.7833;0.7986;0.7833;0.7853;0.9306;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 1};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=1)
RandomForestClassifier;0.8501;0.8557;0.8501;0.8503;0.8261;0.8328;0.8261;0.8284;0.7833;0.7884;0.7833;0.7848;0.9499;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 331};RandomForestClassifier(n_estimators=10, random_state=331)
KNeighborsClassifier;0.789;0.7952;0.789;0.7877;0.7681;0.799;0.7681;0.7708;0.7833;0.7912;0.7833;0.7848;0.9177;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
DecisionTreeClassifier;0.8406;0.8521;0.8406;0.8422;0.8116;0.8108;0.8116;0.809;0.7833;0.7904;0.7833;0.7847;0.9375;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
KNeighborsClassifier;0.8035;0.8125;0.8035;0.8021;0.7246;0.7346;0.7246;0.7196;0.7833;0.7898;0.7833;0.784;0.9275;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
RandomForestClassifier;0.8583;0.8684;0.8583;0.8593;0.7681;0.7841;0.7681;0.7731;0.7833;0.7898;0.7833;0.784;0.9525;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 42};RandomForestClassifier(n_estimators=10, random_state=42)
KNeighborsClassifier;0.7825;0.7949;0.7825;0.7822;0.8261;0.8471;0.8261;0.8273;0.7833;0.7898;0.7833;0.784;0.9143;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
LogisticRegression;0.8052;0.8134;0.8052;0.8055;0.8261;0.8385;0.8261;0.8269;0.7833;0.7863;0.7833;0.7839;0.9251;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
LogisticRegression;0.8101;0.8182;0.8101;0.8106;0.7971;0.8075;0.7971;0.7976;0.7833;0.7863;0.7833;0.7839;0.9278;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8115;0.8293;0.8115;0.8116;0.8406;0.8442;0.8406;0.8421;0.7833;0.7863;0.7833;0.7839;0.9298;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
LogisticRegression;0.7987;0.8066;0.7987;0.7992;0.8841;0.914;0.8841;0.8804;0.7833;0.7863;0.7833;0.7839;0.9255;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
LogisticRegression;0.8149;0.8232;0.8149;0.8155;0.7971;0.804;0.7971;0.7951;0.7833;0.7833;0.7833;0.7833;0.9301;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
LogisticRegression;0.8164;0.8246;0.8164;0.8173;0.7681;0.7813;0.7681;0.7716;0.7833;0.7833;0.7833;0.7833;0.9271;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
LogisticRegression;0.8102;0.8172;0.8102;0.8115;0.8406;0.8429;0.8406;0.8415;0.7833;0.7833;0.7833;0.7833;0.9257;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8084;0.8186;0.8084;0.809;0.7826;0.7837;0.7826;0.7824;0.7833;0.7833;0.7833;0.7833;0.9306;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8067;0.815;0.8067;0.8071;0.8406;0.8398;0.8406;0.8399;0.7833;0.7833;0.7833;0.7833;0.9235;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8164;0.8223;0.8164;0.817;0.7826;0.7906;0.7826;0.7847;0.7833;0.7833;0.7833;0.7833;0.9275;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 179, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=179)"
LogisticRegression;0.8052;0.8134;0.8052;0.8062;0.8841;0.8834;0.8841;0.8826;0.7833;0.7833;0.7833;0.7833;0.921;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8084;0.8167;0.8084;0.8097;0.8696;0.869;0.8696;0.8685;0.7833;0.7833;0.7833;0.7833;0.9221;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 255, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=255)"
LogisticRegression;0.8068;0.8134;0.8068;0.8078;0.8406;0.8416;0.8406;0.8376;0.7833;0.7833;0.7833;0.7833;0.9264;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
LogisticRegression;0.8069;0.8128;0.8069;0.8067;0.8696;0.8763;0.8696;0.8687;0.7833;0.7833;0.7833;0.7833;0.9226;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 953, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=953)"
DecisionTreeClassifier;0.8534;0.8648;0.8534;0.8542;0.7536;0.7558;0.7536;0.7519;0.7667;0.7866;0.7667;0.7689;0.9311;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 1};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=1)
DecisionTreeClassifier;0.8471;0.8564;0.8471;0.8478;0.6812;0.6985;0.6812;0.683;0.7667;0.7976;0.7667;0.7685;0.9291;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 10, 'random_state': 433};DecisionTreeClassifier(max_depth=5, min_samples_leaf=10, random_state=433)
DecisionTreeClassifier;0.8324;0.8484;0.8324;0.8338;0.8406;0.8426;0.8406;0.836;0.7667;0.7702;0.7667;0.7671;0.929;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 239};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=239)
DecisionTreeClassifier;0.818;0.8308;0.818;0.8202;0.8696;0.8728;0.8696;0.8701;0.7667;0.7687;0.7667;0.7668;0.9195;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 1};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=1)
DecisionTreeClassifier;0.818;0.8298;0.818;0.8188;0.8116;0.8148;0.8116;0.8056;0.7667;0.7889;0.7667;0.7661;0.922;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 1};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=1)
DecisionTreeClassifier;0.8229;0.8337;0.8229;0.8242;0.7971;0.8025;0.7971;0.797;0.7667;0.7889;0.7667;0.7661;0.9223;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 239};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=239)
DecisionTreeClassifier;0.839;0.8491;0.839;0.8403;0.8261;0.8574;0.8261;0.8307;0.75;0.754;0.75;0.751;0.9256;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 1};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=1)
DecisionTreeClassifier;0.8438;0.8561;0.8438;0.8453;0.7971;0.8123;0.7971;0.7984;0.75;0.754;0.75;0.751;0.9288;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=433)
DecisionTreeClassifier;0.8262;0.8378;0.8262;0.8277;0.8841;0.8839;0.8841;0.8837;0.75;0.754;0.75;0.751;0.9218;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 239};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=239)
DecisionTreeClassifier;0.839;0.8532;0.839;0.8399;0.8116;0.8196;0.8116;0.8116;0.75;0.7536;0.75;0.7509;0.9314;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=433)
DecisionTreeClassifier;0.8147;0.823;0.8147;0.8158;0.7826;0.7883;0.7826;0.7838;0.75;0.7666;0.75;0.7503;0.9172;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 239};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=239)
DecisionTreeClassifier;0.8261;0.8389;0.8261;0.8277;0.7826;0.7782;0.7826;0.7796;0.75;0.7666;0.75;0.7503;0.9189;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 10, 'random_state': 1};DecisionTreeClassifier(max_depth=5, min_samples_leaf=10, random_state=1)
DecisionTreeClassifier;0.847;0.853;0.847;0.8473;0.8116;0.8326;0.8116;0.8143;0.7333;0.746;0.7333;0.7344;0.939;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 239};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=239)
DecisionTreeClassifier;0.8276;0.8372;0.8276;0.829;0.7971;0.795;0.7971;0.7958;0.7333;0.746;0.7333;0.7344;0.9203;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 1};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=1)
DecisionTreeClassifier;0.8211;0.8324;0.8211;0.8233;0.7971;0.7923;0.7971;0.7937;0.7333;0.746;0.7333;0.7344;0.9278;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=433)
DecisionTreeClassifier;0.8356;0.8451;0.8356;0.8375;0.8406;0.8497;0.8406;0.8366;0.7333;0.7473;0.7333;0.7342;0.9276;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 239};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=239)
