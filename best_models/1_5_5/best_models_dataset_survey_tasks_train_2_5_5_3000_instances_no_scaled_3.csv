Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8961;0.8987;0.8961;0.8963;0.8809;0.8858;0.8809;0.8815;0.8833;0.8868;0.8833;0.884;0.9792;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 782};RandomForestClassifier(n_estimators=10, random_state=782)
RandomForestClassifier;0.8951;0.8984;0.8951;0.8954;0.896;0.9001;0.896;0.8963;0.85;0.862;0.85;0.8516;0.9781;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 436};RandomForestClassifier(n_estimators=20, random_state=436)
KNeighborsClassifier;0.8792;0.8806;0.8792;0.8789;0.8881;0.8958;0.8881;0.8888;0.85;0.8523;0.85;0.8508;0.9606;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8935;0.8963;0.8935;0.8935;0.8898;0.891;0.8898;0.8902;0.85;0.8554;0.85;0.8504;0.9785;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 772};RandomForestClassifier(n_estimators=10, random_state=772)
DecisionTreeClassifier;0.8946;0.8969;0.8946;0.895;0.8904;0.8967;0.8904;0.8913;0.85;0.8554;0.85;0.8504;0.9781;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 245};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=245)
DecisionTreeClassifier;0.8921;0.8957;0.8921;0.893;0.9004;0.9036;0.9004;0.9009;0.85;0.8554;0.85;0.8504;0.9779;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
KNeighborsClassifier;0.8719;0.8782;0.8719;0.8719;0.8859;0.8859;0.8859;0.8858;0.85;0.8544;0.85;0.8499;0.9604;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8803;0.8832;0.8803;0.8806;0.8876;0.8924;0.8876;0.8877;0.8333;0.8364;0.8333;0.8345;0.9587;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8661;0.8682;0.8661;0.865;0.8579;0.8609;0.8579;0.8569;0.8333;0.8365;0.8333;0.8339;0.9697;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 372, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=372)
DecisionTreeClassifier;0.8974;0.8986;0.8974;0.8979;0.8898;0.8907;0.8898;0.8902;0.8333;0.8424;0.8333;0.8336;0.9786;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 522};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=522)
MLPClassifier;0.8712;0.8747;0.8712;0.871;0.8702;0.8851;0.8702;0.8711;0.8333;0.8695;0.8333;0.8284;0.9708;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
SVC;0.7982;0.8089;0.7982;0.8007;0.8479;0.8559;0.8479;0.8497;0.8167;0.8401;0.8167;0.8181;0.9012;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 803};SVC(C=10, probability=True, random_state=803)
MLPClassifier;0.8721;0.8758;0.8721;0.8723;0.8585;0.8735;0.8585;0.8608;0.8167;0.8316;0.8167;0.8153;0.9703;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 884, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=884)
SVC;0.7991;0.8087;0.7991;0.8014;0.8389;0.847;0.8389;0.8403;0.8;0.83;0.8;0.8008;0.9004;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 919};SVC(C=10, probability=True, random_state=919)
SVC;0.8019;0.8108;0.8019;0.8034;0.8456;0.8486;0.8456;0.8468;0.8;0.83;0.8;0.8008;0.8984;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, probability=True, random_state=418)
LogisticRegression;0.8261;0.832;0.8261;0.8279;0.8428;0.8465;0.8428;0.8441;0.75;0.756;0.75;0.7521;0.9389;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 429, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=429)"
LogisticRegression;0.8276;0.8329;0.8276;0.8294;0.8333;0.8399;0.8333;0.8351;0.7333;0.7419;0.7333;0.7357;0.9402;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 261, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=261)"
LogisticRegression;0.8317;0.8373;0.8317;0.8327;0.8261;0.8314;0.8261;0.8276;0.7333;0.7419;0.7333;0.7357;0.9417;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 900, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=900)"
