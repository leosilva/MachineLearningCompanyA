Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7488;0.7642;0.7488;0.7504;0.9275;0.9336;0.9275;0.9286;0.8167;0.8448;0.8167;0.8201;0.8915;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8326;0.8377;0.8326;0.8326;0.8406;0.8397;0.8406;0.8391;0.8167;0.8205;0.8167;0.8172;0.8743;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
MLPClassifier;0.7246;0.7354;0.7246;0.7258;0.8261;0.8244;0.8261;0.8234;0.8167;0.8203;0.8167;0.8162;0.9065;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
KNeighborsClassifier;0.7601;0.7774;0.7601;0.7614;0.7971;0.8021;0.7971;0.7958;0.8;0.8199;0.8;0.8031;0.9068;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8214;0.8256;0.8214;0.8209;0.8551;0.8549;0.8551;0.8547;0.8;0.8142;0.8;0.8023;0.9557;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 407};RandomForestClassifier(n_estimators=20, random_state=407)
SVC;0.694;0.7241;0.694;0.6945;0.6667;0.744;0.6667;0.6648;0.8;0.8089;0.8;0.8023;0.8716;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
RandomForestClassifier;0.8503;0.8587;0.8503;0.8507;0.7971;0.8083;0.7971;0.7916;0.8;0.8042;0.8;0.801;0.9528;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
KNeighborsClassifier;0.7472;0.7583;0.7472;0.7481;0.8986;0.9069;0.8986;0.9001;0.8;0.8226;0.8;0.801;0.8989;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7184;0.732;0.7184;0.7198;0.8841;0.8833;0.8841;0.8834;0.8;0.8171;0.8;0.8007;0.8925;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.6891;0.7338;0.6891;0.6876;0.8406;0.8429;0.8406;0.8415;0.8;0.8021;0.8;0.8007;0.8611;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
DecisionTreeClassifier;0.8308;0.8341;0.8308;0.8309;0.7971;0.8116;0.7971;0.8012;0.8;0.8057;0.8;0.8003;0.8732;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
DecisionTreeClassifier;0.8115;0.8148;0.8115;0.8108;0.8841;0.8864;0.8841;0.8827;0.8;0.7989;0.8;0.7991;0.8586;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
MLPClassifier;0.7229;0.7365;0.7229;0.7222;0.7681;0.7811;0.7681;0.7717;0.8;0.799;0.8;0.7985;0.9107;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
RandomForestClassifier;0.8422;0.8484;0.8422;0.8425;0.8116;0.8227;0.8116;0.813;0.7833;0.7963;0.7833;0.7863;0.9595;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 154};RandomForestClassifier(n_estimators=5, random_state=154)
SVC;0.6907;0.7258;0.6907;0.6893;0.6957;0.7265;0.6957;0.702;0.7833;0.797;0.7833;0.7862;0.8751;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
SVC;0.6877;0.7125;0.6877;0.686;0.7101;0.7274;0.7101;0.7123;0.7833;0.797;0.7833;0.7862;0.8667;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
DecisionTreeClassifier;0.8036;0.8087;0.8036;0.8023;0.7826;0.7804;0.7826;0.7813;0.7833;0.7905;0.7833;0.7844;0.8527;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
RandomForestClassifier;0.8422;0.8483;0.8422;0.8428;0.7681;0.7783;0.7681;0.7693;0.7833;0.8012;0.7833;0.7844;0.9597;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 792};RandomForestClassifier(n_estimators=20, random_state=792)
DecisionTreeClassifier;0.8229;0.8277;0.8229;0.8221;0.7971;0.8011;0.7971;0.7981;0.7833;0.7863;0.7833;0.7839;0.8667;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
KNeighborsClassifier;0.7681;0.7823;0.7681;0.7696;0.7826;0.8024;0.7826;0.7862;0.7833;0.7934;0.7833;0.7837;0.9051;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7792;0.8012;0.7792;0.7801;0.7536;0.7537;0.7536;0.7527;0.7833;0.7934;0.7833;0.7837;0.9093;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7651;0.7836;0.7651;0.7667;0.7826;0.8054;0.7826;0.783;0.7833;0.8181;0.7833;0.7837;0.9062;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7601;0.7716;0.7601;0.7612;0.8116;0.8256;0.8116;0.813;0.7833;0.7857;0.7833;0.7835;0.9026;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7649;0.7811;0.7649;0.7675;0.7681;0.7813;0.7681;0.7721;0.7833;0.7944;0.7833;0.7835;0.8974;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7391;0.747;0.7391;0.7403;0.7246;0.7906;0.7246;0.732;0.7833;0.7839;0.7833;0.7833;0.9089;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
KNeighborsClassifier;0.7618;0.7702;0.7618;0.7626;0.8116;0.8224;0.8116;0.8139;0.7833;0.807;0.7833;0.7824;0.9005;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.823;0.8267;0.823;0.8223;0.7681;0.7703;0.7681;0.769;0.7833;0.8032;0.7833;0.7823;0.8673;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
MLPClassifier;0.7263;0.7357;0.7263;0.7258;0.8261;0.8328;0.8261;0.8284;0.7833;0.7838;0.7833;0.7822;0.9056;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
RandomForestClassifier;0.8325;0.844;0.8325;0.833;0.8551;0.8558;0.8551;0.8546;0.7833;0.8019;0.7833;0.7816;0.9488;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
DecisionTreeClassifier;0.8085;0.8181;0.8085;0.8061;0.8261;0.8394;0.8261;0.8245;0.7833;0.7843;0.7833;0.7815;0.856;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
KNeighborsClassifier;0.7649;0.7827;0.7649;0.7665;0.7681;0.7711;0.7681;0.7679;0.7833;0.7935;0.7833;0.7814;0.906;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.6893;0.7192;0.6893;0.6887;0.7971;0.8196;0.7971;0.8001;0.7833;0.7816;0.7833;0.7812;0.8637;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
RandomForestClassifier;0.8405;0.8498;0.8405;0.8412;0.8116;0.8135;0.8116;0.8117;0.7833;0.7922;0.7833;0.7807;0.9567;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 792};RandomForestClassifier(n_estimators=10, random_state=792)
MLPClassifier;0.7183;0.7239;0.7183;0.7191;0.8261;0.8259;0.8261;0.8257;0.7833;0.7801;0.7833;0.7805;0.9047;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7262;0.7355;0.7262;0.7269;0.6667;0.6804;0.6667;0.6711;0.7833;0.7801;0.7833;0.7805;0.9096;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
SVC;0.6731;0.718;0.6731;0.6742;0.7826;0.8004;0.7826;0.7853;0.7667;0.7852;0.7667;0.7705;0.8602;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
RandomForestClassifier;0.8422;0.8493;0.8422;0.8433;0.8696;0.8944;0.8696;0.8729;0.7667;0.7911;0.7667;0.7704;0.9543;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
SVC;0.673;0.704;0.673;0.6715;0.8261;0.8377;0.8261;0.8291;0.7667;0.7782;0.7667;0.7695;0.8571;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
SVC;0.6764;0.7123;0.6764;0.6735;0.8406;0.8412;0.8406;0.8391;0.7667;0.7782;0.7667;0.7695;0.8544;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
RandomForestClassifier;0.8423;0.8514;0.8423;0.843;0.7971;0.8407;0.7971;0.7986;0.7667;0.7873;0.7667;0.7693;0.958;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 407};RandomForestClassifier(n_estimators=10, random_state=407)
KNeighborsClassifier;0.752;0.7648;0.752;0.7534;0.8406;0.8554;0.8406;0.839;0.7667;0.7759;0.7667;0.7692;0.8995;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.6891;0.7291;0.6891;0.6893;0.8116;0.8359;0.8116;0.8158;0.7667;0.7759;0.7667;0.7692;0.8686;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
RandomForestClassifier;0.8423;0.8526;0.8423;0.8427;0.8696;0.8727;0.8696;0.8704;0.7667;0.7854;0.7667;0.7687;0.9508;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 407};RandomForestClassifier(n_estimators=20, random_state=407)
KNeighborsClassifier;0.7439;0.7596;0.7439;0.7442;0.8551;0.8671;0.8551;0.8567;0.7667;0.7806;0.7667;0.7684;0.8917;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7456;0.7624;0.7456;0.7451;0.7391;0.7414;0.7391;0.7343;0.7667;0.7789;0.7667;0.7682;0.8918;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7536;0.767;0.7536;0.7545;0.8841;0.8841;0.8841;0.8841;0.7667;0.7789;0.7667;0.7682;0.897;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7568;0.7683;0.7568;0.7581;0.7681;0.817;0.7681;0.7677;0.7667;0.7752;0.7667;0.7681;0.8995;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.752;0.7653;0.752;0.7528;0.8406;0.8448;0.8406;0.8416;0.7667;0.7941;0.7667;0.7679;0.9009;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.7018;0.744;0.7018;0.7024;0.6812;0.6974;0.6812;0.6822;0.7667;0.7739;0.7667;0.7678;0.8728;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
RandomForestClassifier;0.8374;0.8451;0.8374;0.8374;0.8551;0.853;0.8551;0.853;0.7667;0.7765;0.7667;0.7672;0.9562;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 154};RandomForestClassifier(n_estimators=10, random_state=154)
DecisionTreeClassifier;0.8181;0.8272;0.8181;0.8173;0.8261;0.8391;0.8261;0.8294;0.7667;0.7679;0.7667;0.767;0.8638;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
RandomForestClassifier;0.8374;0.8446;0.8374;0.8378;0.8261;0.8471;0.8261;0.8273;0.7667;0.7902;0.7667;0.7669;0.9514;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 792};RandomForestClassifier(n_estimators=20, random_state=792)
RandomForestClassifier;0.8293;0.8368;0.8293;0.8302;0.8986;0.9028;0.8986;0.8997;0.7667;0.7902;0.7667;0.7669;0.9504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 792};RandomForestClassifier(n_estimators=20, random_state=792)
RandomForestClassifier;0.8519;0.8581;0.8519;0.8518;0.7536;0.7821;0.7536;0.7595;0.7667;0.7902;0.7667;0.7669;0.9571;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 407};RandomForestClassifier(n_estimators=20, random_state=407)
KNeighborsClassifier;0.7423;0.7612;0.7423;0.7436;0.8551;0.8747;0.8551;0.8584;0.7667;0.781;0.7667;0.7665;0.8984;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.76;0.7805;0.76;0.7628;0.7536;0.7666;0.7536;0.7548;0.7667;0.781;0.7667;0.7665;0.9058;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8244;0.8275;0.8244;0.8236;0.8551;0.8586;0.8551;0.8545;0.7667;0.7709;0.7667;0.7664;0.8687;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
DecisionTreeClassifier;0.8069;0.8125;0.8069;0.8044;0.7681;0.7788;0.7681;0.7712;0.7667;0.7663;0.7667;0.7662;0.8549;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.8182;0.8216;0.8182;0.8179;0.7536;0.7653;0.7536;0.7549;0.7667;0.7782;0.7667;0.7661;0.8637;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=872)
KNeighborsClassifier;0.7423;0.7589;0.7423;0.7437;0.8986;0.8988;0.8986;0.8978;0.7667;0.7822;0.7667;0.7661;0.8895;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8067;0.8129;0.8067;0.8071;0.8116;0.8209;0.8116;0.8132;0.7667;0.7709;0.7667;0.7658;0.8553;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
SVC;0.6843;0.716;0.6843;0.684;0.7101;0.7287;0.7101;0.7141;0.7667;0.7663;0.7667;0.7656;0.8682;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
RandomForestClassifier;0.8294;0.8335;0.8294;0.8304;0.8841;0.8956;0.8841;0.8864;0.7667;0.7783;0.7667;0.7655;0.9517;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 792};RandomForestClassifier(n_estimators=10, random_state=792)
KNeighborsClassifier;0.7406;0.7538;0.7406;0.7407;0.8841;0.8846;0.8841;0.884;0.7667;0.7783;0.7667;0.7655;0.9005;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7376;0.7448;0.7376;0.7371;0.7536;0.7628;0.7536;0.7567;0.7667;0.7638;0.7667;0.7649;0.915;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7148;0.7279;0.7148;0.7132;0.8551;0.8624;0.8551;0.8558;0.7667;0.7667;0.7667;0.7644;0.9061;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
RandomForestClassifier;0.8292;0.8389;0.8292;0.83;0.8406;0.8489;0.8406;0.8409;0.7667;0.7966;0.7667;0.7644;0.9462;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 792};RandomForestClassifier(n_estimators=20, random_state=792)
MLPClassifier;0.7407;0.7515;0.7407;0.7407;0.8261;0.8261;0.8261;0.8261;0.7667;0.764;0.7667;0.7643;0.9073;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
RandomForestClassifier;0.8455;0.8561;0.8455;0.8462;0.8551;0.8639;0.8551;0.8574;0.7667;0.7919;0.7667;0.7641;0.9535;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.8422;0.8516;0.8422;0.8437;0.8696;0.8681;0.8696;0.8686;0.7667;0.7919;0.7667;0.7641;0.9553;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 407};RandomForestClassifier(n_estimators=20, random_state=407)
MLPClassifier;0.7343;0.7428;0.7343;0.7353;0.7391;0.7536;0.7391;0.7427;0.7667;0.7648;0.7667;0.7636;0.9123;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
MLPClassifier;0.7391;0.7507;0.7391;0.741;0.7826;0.7789;0.7826;0.7778;0.7667;0.762;0.7667;0.7621;0.9124;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
MLPClassifier;0.7149;0.7207;0.7149;0.7134;0.8116;0.8113;0.8116;0.8091;0.7667;0.762;0.7667;0.7621;0.9026;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7424;0.7507;0.7424;0.7421;0.8116;0.8155;0.8116;0.8127;0.7667;0.762;0.7667;0.7621;0.9079;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
MLPClassifier;0.7215;0.73;0.7215;0.7217;0.8261;0.8277;0.8261;0.8251;0.7667;0.762;0.7667;0.7621;0.9042;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
MLPClassifier;0.7117;0.7196;0.7117;0.7111;0.7971;0.8016;0.7971;0.7985;0.7667;0.7648;0.7667;0.7615;0.9046;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
SVC;0.6908;0.7211;0.6908;0.6879;0.7536;0.7716;0.7536;0.7567;0.75;0.7738;0.75;0.7544;0.8713;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
RandomForestClassifier;0.839;0.8448;0.839;0.8391;0.8406;0.8442;0.8406;0.8417;0.75;0.7734;0.75;0.7541;0.9539;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 792};RandomForestClassifier(n_estimators=20, random_state=792)
SVC;0.6875;0.7216;0.6875;0.6875;0.7101;0.73;0.7101;0.7126;0.75;0.7656;0.75;0.754;0.8682;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
SVC;0.7035;0.7343;0.7035;0.7017;0.6812;0.6957;0.6812;0.6811;0.75;0.7667;0.75;0.7532;0.8703;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
RandomForestClassifier;0.8406;0.8516;0.8406;0.8407;0.8841;0.8885;0.8841;0.8852;0.75;0.7703;0.75;0.7528;0.95;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 407};RandomForestClassifier(n_estimators=20, random_state=407)
SVC;0.7005;0.7357;0.7005;0.6998;0.6957;0.713;0.6957;0.6972;0.75;0.7602;0.75;0.7527;0.8675;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
KNeighborsClassifier;0.7859;0.8004;0.7859;0.787;0.8116;0.8185;0.8116;0.8128;0.75;0.7689;0.75;0.7513;0.9154;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8294;0.8356;0.8294;0.8292;0.8841;0.8889;0.8841;0.8844;0.75;0.7616;0.75;0.7512;0.872;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
KNeighborsClassifier;0.7584;0.7662;0.7584;0.759;0.7246;0.744;0.7246;0.7239;0.75;0.7565;0.75;0.7509;0.8994;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
SVC;0.7038;0.7472;0.7038;0.7025;0.7681;0.7779;0.7681;0.7673;0.75;0.7572;0.75;0.7505;0.8721;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
KNeighborsClassifier;0.7633;0.7815;0.7633;0.7649;0.8261;0.8344;0.8261;0.8283;0.75;0.7558;0.75;0.7505;0.8995;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.6747;0.709;0.6747;0.6745;0.8406;0.843;0.8406;0.8388;0.75;0.7603;0.75;0.7505;0.8652;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
RandomForestClassifier;0.8374;0.8483;0.8374;0.8368;0.8551;0.8581;0.8551;0.8555;0.75;0.7535;0.75;0.7505;0.9527;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 407};RandomForestClassifier(n_estimators=20, random_state=407)
RandomForestClassifier;0.8422;0.85;0.8422;0.8421;0.8406;0.8521;0.8406;0.8413;0.75;0.7611;0.75;0.7502;0.9552;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 792};RandomForestClassifier(n_estimators=20, random_state=792)
KNeighborsClassifier;0.7506;0.7659;0.7506;0.7526;0.8261;0.8283;0.8261;0.8253;0.75;0.7651;0.75;0.7502;0.9001;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8115;0.8173;0.8115;0.8111;0.913;0.9135;0.913;0.913;0.75;0.7651;0.75;0.7502;0.8589;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
KNeighborsClassifier;0.7698;0.7875;0.7698;0.7715;0.6957;0.7309;0.6957;0.7023;0.75;0.7651;0.75;0.7502;0.9042;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7521;0.7758;0.7521;0.7534;0.8406;0.8681;0.8406;0.843;0.75;0.7651;0.75;0.7502;0.9063;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6975;0.7298;0.6975;0.6943;0.7971;0.8091;0.7971;0.7996;0.75;0.752;0.75;0.7497;0.8641;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
DecisionTreeClassifier;0.8389;0.8432;0.8389;0.838;0.8696;0.8776;0.8696;0.8718;0.75;0.7562;0.75;0.7491;0.8791;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
SVC;0.6892;0.7262;0.6892;0.6858;0.7826;0.8116;0.7826;0.7881;0.75;0.7546;0.75;0.7488;0.8607;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
MLPClassifier;0.7215;0.7301;0.7215;0.721;0.8841;0.8899;0.8841;0.8858;0.75;0.7449;0.75;0.7462;0.906;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7343;0.7428;0.7343;0.7343;0.8116;0.8155;0.8116;0.8127;0.75;0.7449;0.75;0.7462;0.9067;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7506;0.7561;0.7506;0.75;0.7971;0.806;0.7971;0.7988;0.75;0.7449;0.75;0.7462;0.9132;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7294;0.7465;0.7294;0.7302;0.7101;0.7047;0.7101;0.7066;0.75;0.7462;0.75;0.746;0.9095;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
MLPClassifier;0.7166;0.7302;0.7166;0.7168;0.8406;0.8406;0.8406;0.8398;0.75;0.7443;0.75;0.7434;0.9047;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7278;0.7409;0.7278;0.7259;0.6957;0.7015;0.6957;0.6977;0.75;0.7443;0.75;0.7434;0.9107;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7423;0.7483;0.7423;0.7418;0.7536;0.7481;0.7536;0.748;0.75;0.7443;0.75;0.7434;0.9083;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.731;0.7455;0.731;0.7322;0.7826;0.7796;0.7826;0.779;0.75;0.7443;0.75;0.7434;0.9067;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
MLPClassifier;0.7216;0.729;0.7216;0.721;0.8406;0.8425;0.8406;0.8404;0.75;0.7443;0.75;0.7434;0.9056;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
MLPClassifier;0.7456;0.7578;0.7456;0.7457;0.8696;0.8701;0.8696;0.8687;0.75;0.7443;0.75;0.7434;0.9084;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
MLPClassifier;0.7487;0.7588;0.7487;0.7503;0.7826;0.7929;0.7826;0.7842;0.75;0.7443;0.75;0.7434;0.9082;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
MLPClassifier;0.7246;0.736;0.7246;0.7256;0.7971;0.8;0.7971;0.7983;0.75;0.7477;0.75;0.7426;0.906;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 753, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=753)
MLPClassifier;0.7183;0.7307;0.7183;0.7172;0.8406;0.8467;0.8406;0.8367;0.75;0.7477;0.75;0.7426;0.9038;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
SVC;0.6956;0.7375;0.6956;0.6951;0.6812;0.6994;0.6812;0.6849;0.7333;0.7481;0.7333;0.7369;0.8727;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
KNeighborsClassifier;0.7552;0.7737;0.7552;0.7568;0.7681;0.774;0.7681;0.7679;0.7333;0.7438;0.7333;0.7366;0.8962;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8359;0.8439;0.8359;0.8368;0.8406;0.8468;0.8406;0.842;0.7333;0.7485;0.7333;0.7365;0.9566;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
SVC;0.694;0.7349;0.694;0.6933;0.7971;0.8029;0.7971;0.7984;0.7333;0.7485;0.7333;0.7365;0.8655;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
SVC;0.6763;0.7172;0.6763;0.6745;0.8406;0.8649;0.8406;0.8441;0.7333;0.7429;0.7333;0.7362;0.8613;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
RandomForestClassifier;0.8405;0.8494;0.8405;0.8417;0.8551;0.8651;0.8551;0.8568;0.7333;0.7588;0.7333;0.7355;0.9496;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.8503;0.8521;0.8503;0.8493;0.8406;0.8478;0.8406;0.8422;0.7333;0.7458;0.7333;0.735;0.9586;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 792};RandomForestClassifier(n_estimators=20, random_state=792)
SVC;0.6892;0.7262;0.6892;0.6875;0.7536;0.7654;0.7536;0.757;0.7333;0.7381;0.7333;0.7347;0.8647;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
KNeighborsClassifier;0.7537;0.7683;0.7537;0.7556;0.8261;0.8265;0.8261;0.826;0.7333;0.7522;0.7333;0.7347;0.9007;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7455;0.7606;0.7455;0.7475;0.8696;0.8802;0.8696;0.87;0.7333;0.7522;0.7333;0.7347;0.8936;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
SVC;0.6956;0.738;0.6956;0.6948;0.7536;0.7509;0.7536;0.7514;0.7333;0.7381;0.7333;0.7347;0.8644;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
SVC;0.7005;0.7489;0.7005;0.6999;0.7681;0.7643;0.7681;0.7653;0.7333;0.7381;0.7333;0.7347;0.8683;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
DecisionTreeClassifier;0.8325;0.8418;0.8325;0.8344;0.7971;0.8051;0.7971;0.7994;0.7333;0.7399;0.7333;0.7342;0.8747;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.81;0.816;0.81;0.8102;0.8551;0.8769;0.8551;0.857;0.7333;0.7423;0.7333;0.734;0.8576;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
RandomForestClassifier;0.8325;0.8463;0.8325;0.8341;0.8551;0.8593;0.8551;0.8561;0.7333;0.7492;0.7333;0.7339;0.9505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 407};RandomForestClassifier(n_estimators=20, random_state=407)
DecisionTreeClassifier;0.8341;0.8399;0.8341;0.8343;0.7101;0.7061;0.7101;0.7074;0.7333;0.7492;0.7333;0.7339;0.8753;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
SVC;0.6763;0.6995;0.6763;0.6764;0.7681;0.7757;0.7681;0.7703;0.7333;0.7387;0.7333;0.7339;0.8673;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
DecisionTreeClassifier;0.8068;0.8109;0.8068;0.8058;0.8406;0.8677;0.8406;0.8413;0.7333;0.7504;0.7333;0.7337;0.8552;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.8261;0.8333;0.8261;0.8255;0.913;0.9253;0.913;0.9134;0.7333;0.7397;0.7333;0.7336;0.8693;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.831;0.8376;0.831;0.8305;0.7971;0.8001;0.7971;0.7975;0.7333;0.7368;0.7333;0.733;0.8733;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
RandomForestClassifier;0.8454;0.8552;0.8454;0.8462;0.8551;0.8746;0.8551;0.858;0.7333;0.7472;0.7333;0.7328;0.9554;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 407};RandomForestClassifier(n_estimators=10, random_state=407)
DecisionTreeClassifier;0.8359;0.8388;0.8359;0.8349;0.8696;0.884;0.8696;0.8713;0.7333;0.7408;0.7333;0.7327;0.8766;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.8324;0.8344;0.8324;0.8323;0.7391;0.7489;0.7391;0.7367;0.7333;0.732;0.7333;0.7324;0.8745;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
DecisionTreeClassifier;0.8243;0.8284;0.8243;0.8242;0.7971;0.7971;0.7971;0.7971;0.7333;0.7368;0.7333;0.7323;0.8681;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.8164;0.8202;0.8164;0.8158;0.8261;0.8545;0.8261;0.829;0.7333;0.7394;0.7333;0.7319;0.862;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
SVC;0.6907;0.7322;0.6907;0.6887;0.7391;0.7401;0.7391;0.7389;0.7333;0.7325;0.7333;0.7293;0.8649;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 939};SVC(C=10, probability=True, random_state=939)
MLPClassifier;0.715;0.7253;0.715;0.7152;0.8116;0.8111;0.8116;0.8096;0.7333;0.728;0.7333;0.7286;0.8992;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 733, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=733)
MLPClassifier;0.7422;0.7538;0.7422;0.7429;0.7826;0.7873;0.7826;0.7828;0.7333;0.7266;0.7333;0.7273;0.913;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 683, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=683)
SVC;0.6974;0.7357;0.6974;0.6975;0.8116;0.8202;0.8116;0.8097;0.7167;0.7321;0.7167;0.7208;0.8683;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, probability=True, random_state=887)
RandomForestClassifier;0.8294;0.8419;0.8294;0.8307;0.8261;0.828;0.8261;0.8259;0.7167;0.7274;0.7167;0.7193;0.9569;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 154};RandomForestClassifier(n_estimators=10, random_state=154)
DecisionTreeClassifier;0.8374;0.8396;0.8374;0.8366;0.6957;0.7234;0.6957;0.7025;0.7167;0.7213;0.7167;0.717;0.8782;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
RandomForestClassifier;0.8343;0.8427;0.8343;0.8339;0.8696;0.8762;0.8696;0.8711;0.7167;0.7178;0.7167;0.717;0.9537;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 407};RandomForestClassifier(n_estimators=10, random_state=407)
DecisionTreeClassifier;0.8213;0.8264;0.8213;0.8217;0.7391;0.7506;0.7391;0.7422;0.7167;0.735;0.7167;0.7159;0.866;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
SVC;0.6811;0.7105;0.6811;0.6801;0.7681;0.7756;0.7681;0.7699;0.7167;0.7278;0.7167;0.7148;0.8628;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
RandomForestClassifier;0.8502;0.8605;0.8502;0.8505;0.8696;0.8787;0.8696;0.8656;0.7167;0.7267;0.7167;0.7138;0.952;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 792};RandomForestClassifier(n_estimators=10, random_state=792)
DecisionTreeClassifier;0.8278;0.833;0.8278;0.8278;0.8261;0.8277;0.8261;0.8267;0.7167;0.7223;0.7167;0.7134;0.8708;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
LogisticRegression;0.6087;0.6149;0.6087;0.6051;0.6957;0.7079;0.6957;0.6979;0.7;0.7258;0.7;0.7053;0.8194;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.6134;0.6222;0.6134;0.6137;0.5797;0.5907;0.5797;0.5791;0.7;0.7258;0.7;0.7053;0.8273;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.62;0.6296;0.62;0.6211;0.5217;0.5551;0.5217;0.5274;0.7;0.7258;0.7;0.7053;0.8352;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
DecisionTreeClassifier;0.8228;0.8236;0.8228;0.8207;0.8841;0.8941;0.8841;0.8857;0.7;0.7047;0.7;0.7004;0.867;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 872};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=872)
SVC;0.686;0.7316;0.686;0.6865;0.7246;0.7549;0.7246;0.7286;0.7;0.7155;0.7;0.7003;0.8628;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 365};SVC(C=10, probability=True, random_state=365)
RandomForestClassifier;0.8358;0.8442;0.8358;0.8361;0.8406;0.8425;0.8406;0.8404;0.7;0.712;0.7;0.6996;0.9488;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 154};RandomForestClassifier(n_estimators=10, random_state=154)
LogisticRegression;0.6087;0.6172;0.6087;0.6074;0.6087;0.6183;0.6087;0.6077;0.6833;0.711;0.6833;0.6901;0.8299;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6134;0.62;0.6134;0.6101;0.5797;0.6115;0.5797;0.5748;0.6833;0.711;0.6833;0.6901;0.8331;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6071;0.6137;0.6071;0.6064;0.6667;0.6871;0.6667;0.6619;0.6833;0.711;0.6833;0.6901;0.8256;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6021;0.6082;0.6021;0.6007;0.6377;0.646;0.6377;0.6365;0.6833;0.711;0.6833;0.6901;0.8204;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.6087;0.6155;0.6087;0.6078;0.6667;0.7263;0.6667;0.672;0.6833;0.711;0.6833;0.6901;0.8254;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6103;0.6194;0.6103;0.6113;0.6522;0.6605;0.6522;0.6494;0.6833;0.711;0.6833;0.6901;0.8239;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6023;0.6152;0.6023;0.6029;0.7101;0.7114;0.7101;0.7098;0.6833;0.711;0.6833;0.6901;0.8228;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6152;0.6207;0.6152;0.6117;0.5217;0.5326;0.5217;0.5255;0.6833;0.711;0.6833;0.6901;0.8318;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.6006;0.6057;0.6006;0.5995;0.7391;0.7432;0.7391;0.7381;0.6833;0.711;0.6833;0.6901;0.8207;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6071;0.6108;0.6071;0.604;0.7246;0.7571;0.7246;0.7263;0.6833;0.711;0.6833;0.6901;0.8216;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.6039;0.6122;0.6039;0.6014;0.5797;0.5913;0.5797;0.5795;0.6833;0.711;0.6833;0.6901;0.8383;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.6183;0.6261;0.6183;0.6174;0.5942;0.59;0.5942;0.5899;0.6833;0.711;0.6833;0.6901;0.8345;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.607;0.6149;0.607;0.6058;0.6667;0.6919;0.6667;0.6631;0.6833;0.711;0.6833;0.6901;0.8299;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.6006;0.6073;0.6006;0.5997;0.6377;0.6465;0.6377;0.6351;0.6833;0.711;0.6833;0.6901;0.8246;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.615;0.6268;0.615;0.6146;0.5507;0.5505;0.5507;0.5455;0.6833;0.711;0.6833;0.6901;0.8352;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.6231;0.6297;0.6231;0.6207;0.5797;0.5827;0.5797;0.5749;0.6833;0.711;0.6833;0.6901;0.8289;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.6103;0.615;0.6103;0.6092;0.6232;0.6776;0.6232;0.6279;0.6833;0.711;0.6833;0.6901;0.8242;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.6071;0.614;0.6071;0.6057;0.5507;0.5694;0.5507;0.5485;0.6833;0.711;0.6833;0.6901;0.8317;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.5959;0.6037;0.5959;0.5951;0.6522;0.6566;0.6522;0.6519;0.6833;0.7111;0.6833;0.6889;0.8238;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.607;0.616;0.607;0.6056;0.6812;0.6853;0.6812;0.6812;0.6833;0.7111;0.6833;0.6889;0.831;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
DecisionTreeClassifier;0.8276;0.8392;0.8276;0.828;0.7681;0.8065;0.7681;0.7716;0.6833;0.6898;0.6833;0.6834;0.8706;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
LogisticRegression;0.6136;0.6206;0.6136;0.6146;0.5942;0.6157;0.5942;0.5943;0.6667;0.6965;0.6667;0.6746;0.8308;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.6169;0.6238;0.6169;0.6169;0.4928;0.4959;0.4928;0.4942;0.6667;0.6965;0.6667;0.6746;0.8371;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
LogisticRegression;0.6054;0.6136;0.6054;0.6053;0.6232;0.6267;0.6232;0.6236;0.6667;0.6965;0.6667;0.6746;0.8282;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.604;0.6081;0.604;0.6002;0.7536;0.7552;0.7536;0.7537;0.65;0.6863;0.65;0.658;0.8239;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.6264;0.6369;0.6264;0.625;0.5652;0.5725;0.5652;0.5645;0.6333;0.6486;0.6333;0.6362;0.831;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.6054;0.6126;0.6054;0.6034;0.5942;0.5887;0.5942;0.5865;0.6;0.6082;0.6;0.5995;0.8304;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 34, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=34)"
LogisticRegression;0.612;0.6208;0.612;0.6101;0.6377;0.6387;0.6377;0.6365;0.5833;0.5843;0.5833;0.5796;0.8306;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 400, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=400)"
