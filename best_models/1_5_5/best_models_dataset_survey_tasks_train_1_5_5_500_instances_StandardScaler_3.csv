Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9128;0.916;0.9128;0.9127;0.8958;0.8963;0.8958;0.8953;0.85;0.8523;0.85;0.8508;0.9701;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9059;0.9126;0.9059;0.9059;0.8819;0.8932;0.8819;0.8796;0.85;0.8497;0.85;0.8495;0.9761;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9105;0.914;0.9105;0.9104;0.9167;0.9183;0.9167;0.9158;0.85;0.8497;0.85;0.8495;0.9703;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8989;0.9024;0.8989;0.8988;0.9514;0.9524;0.9514;0.9517;0.85;0.8497;0.85;0.8495;0.9711;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9066;0.9102;0.9066;0.9066;0.9097;0.9173;0.9097;0.9108;0.8333;0.8365;0.8333;0.8339;0.9738;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.912;0.9154;0.912;0.912;0.8958;0.9002;0.8958;0.8937;0.8333;0.8365;0.8333;0.8339;0.9734;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9043;0.9089;0.9043;0.9045;0.9306;0.9308;0.9306;0.9306;0.8333;0.8365;0.8333;0.8339;0.9712;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9128;0.9156;0.9128;0.9125;0.9444;0.9444;0.9444;0.9441;0.8333;0.8365;0.8333;0.8339;0.9716;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9051;0.9101;0.9051;0.9051;0.9444;0.9524;0.9444;0.9453;0.8333;0.8365;0.8333;0.8339;0.9726;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9105;0.9139;0.9105;0.9101;0.9028;0.9071;0.9028;0.9023;0.8333;0.8365;0.8333;0.8339;0.9731;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9075;0.9128;0.9075;0.9075;0.9167;0.9225;0.9167;0.9168;0.8333;0.8365;0.8333;0.8339;0.9706;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9106;0.914;0.9106;0.9104;0.9236;0.9286;0.9236;0.9234;0.8333;0.8365;0.8333;0.8339;0.9717;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9182;0.9229;0.9182;0.9184;0.9097;0.9156;0.9097;0.909;0.8333;0.8365;0.8333;0.8339;0.9742;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9059;0.912;0.9059;0.9058;0.8889;0.9012;0.8889;0.8893;0.8333;0.8365;0.8333;0.8339;0.9726;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9028;0.9063;0.9028;0.9024;0.9236;0.9255;0.9236;0.9235;0.8333;0.8365;0.8333;0.8339;0.9726;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.902;0.9061;0.902;0.902;0.9167;0.9209;0.9167;0.9161;0.8333;0.8354;0.8333;0.833;0.9827;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
KNeighborsClassifier;0.9159;0.9193;0.9159;0.9155;0.9167;0.9262;0.9167;0.9177;0.8333;0.833;0.8333;0.8328;0.9711;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.909;0.9123;0.909;0.9088;0.8958;0.9049;0.8958;0.8974;0.8333;0.833;0.8333;0.8328;0.9691;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9159;0.9194;0.9159;0.9154;0.9236;0.9238;0.9236;0.9234;0.8333;0.8314;0.8333;0.832;0.9699;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9113;0.9151;0.9113;0.9109;0.9028;0.903;0.9028;0.9027;0.8333;0.8317;0.8333;0.8315;0.9696;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9036;0.9065;0.9036;0.9031;0.9167;0.9173;0.9167;0.9164;0.8333;0.8323;0.8333;0.8314;0.9692;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9128;0.9159;0.9128;0.9125;0.8819;0.8867;0.8819;0.8833;0.8333;0.8323;0.8333;0.8314;0.9725;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9013;0.9047;0.9013;0.9012;0.9097;0.9102;0.9097;0.9098;0.8167;0.8326;0.8167;0.8203;0.9739;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9143;0.918;0.9143;0.9141;0.8819;0.8885;0.8819;0.8809;0.8167;0.8333;0.8167;0.8201;0.9702;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9074;0.9119;0.9074;0.9072;0.9028;0.9081;0.9028;0.9032;0.8167;0.8167;0.8167;0.8167;0.9748;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9097;0.9133;0.9097;0.9093;0.8889;0.8902;0.8889;0.8891;0.8167;0.8167;0.8167;0.8167;0.9697;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.8781;0.8893;0.8781;0.879;0.9097;0.9154;0.9097;0.9093;0.8167;0.8163;0.8167;0.8162;0.9572;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8843;0.8928;0.8843;0.8849;0.9236;0.9252;0.9236;0.9235;0.8167;0.8163;0.8167;0.8162;0.9581;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
MLPClassifier;0.9059;0.9086;0.9059;0.9057;0.9444;0.9465;0.9444;0.9444;0.8167;0.8208;0.8167;0.8161;0.98;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
DecisionTreeClassifier;0.9236;0.9259;0.9236;0.9237;0.9583;0.96;0.9583;0.9582;0.8167;0.8175;0.8167;0.816;0.9699;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
DecisionTreeClassifier;0.9252;0.9275;0.9252;0.9253;0.9514;0.9523;0.9514;0.9514;0.8167;0.8175;0.8167;0.816;0.9702;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
RandomForestClassifier;0.9267;0.9276;0.9267;0.9264;0.9375;0.9371;0.9375;0.9371;0.8167;0.8175;0.8167;0.816;0.985;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
DecisionTreeClassifier;0.9128;0.9152;0.9128;0.9129;0.9583;0.9583;0.9583;0.9583;0.8167;0.8175;0.8167;0.816;0.9682;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
DecisionTreeClassifier;0.939;0.94;0.939;0.939;0.875;0.8761;0.875;0.8747;0.8167;0.8175;0.8167;0.816;0.9779;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
DecisionTreeClassifier;0.9236;0.9247;0.9236;0.9236;0.9306;0.9304;0.9306;0.9304;0.8167;0.8175;0.8167;0.816;0.9701;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
DecisionTreeClassifier;0.9344;0.9357;0.9344;0.9343;0.9306;0.9342;0.9306;0.931;0.8167;0.8175;0.8167;0.816;0.9762;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9244;0.9271;0.9244;0.9244;0.9236;0.9244;0.9236;0.9237;0.8167;0.8175;0.8167;0.816;0.9692;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
MLPClassifier;0.9097;0.9129;0.9097;0.9099;0.9167;0.925;0.9167;0.9178;0.8167;0.8175;0.8167;0.816;0.9818;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.9159;0.9212;0.9159;0.9159;0.9167;0.9197;0.9167;0.9171;0.8167;0.8175;0.8167;0.816;0.9828;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.9012;0.9051;0.9012;0.9013;0.9583;0.9594;0.9583;0.9584;0.8167;0.8175;0.8167;0.816;0.9811;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.909;0.9127;0.909;0.9091;0.9583;0.9583;0.9583;0.9583;0.8167;0.8175;0.8167;0.816;0.9834;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.8989;0.9029;0.8989;0.899;0.9583;0.9583;0.9583;0.9581;0.8167;0.8175;0.8167;0.816;0.9825;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
KNeighborsClassifier;0.9151;0.9177;0.9151;0.9149;0.9097;0.9108;0.9097;0.9095;0.8167;0.8155;0.8167;0.8158;0.9714;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9166;0.9212;0.9166;0.9165;0.8958;0.8953;0.8958;0.8954;0.8167;0.8155;0.8167;0.8158;0.9734;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.9089;0.9135;0.9089;0.909;0.9097;0.9093;0.9097;0.9093;0.8167;0.8172;0.8167;0.8155;0.983;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.9128;0.9163;0.9128;0.9128;0.9444;0.946;0.9444;0.9446;0.8167;0.8172;0.8167;0.8155;0.9832;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
RandomForestClassifier;0.9282;0.9289;0.9282;0.928;0.9444;0.9454;0.9444;0.9447;0.8167;0.8191;0.8167;0.8136;0.9856;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
KNeighborsClassifier;0.8997;0.903;0.8997;0.8996;0.9375;0.9404;0.9375;0.9377;0.8;0.803;0.8;0.8012;0.97;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.8812;0.8895;0.8812;0.8815;0.9444;0.9466;0.9444;0.944;0.8;0.8022;0.8;0.8008;0.9597;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
SVC;0.8843;0.892;0.8843;0.8849;0.9097;0.9147;0.9097;0.9099;0.8;0.8;0.8;0.8;0.9566;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.8811;0.8899;0.8811;0.8819;0.9444;0.9462;0.9444;0.944;0.8;0.8;0.8;0.8;0.9565;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8796;0.8881;0.8796;0.8799;0.9375;0.9416;0.9375;0.9378;0.8;0.8005;0.8;0.7999;0.9582;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8851;0.8934;0.8851;0.8855;0.8681;0.8747;0.8681;0.8678;0.8;0.8005;0.8;0.7999;0.9661;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
DecisionTreeClassifier;0.9182;0.9201;0.9182;0.9182;0.9444;0.9446;0.9444;0.9441;0.8;0.8005;0.8;0.7999;0.9684;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9259;0.9284;0.9259;0.9258;0.9097;0.9147;0.9097;0.9099;0.8;0.8005;0.8;0.7999;0.9741;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
SVC;0.8835;0.8906;0.8835;0.8842;0.9097;0.9198;0.9097;0.9088;0.8;0.8005;0.8;0.7999;0.9586;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.8734;0.8817;0.8734;0.8736;0.9583;0.963;0.9583;0.9588;0.8;0.8005;0.8;0.7999;0.9583;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
MLPClassifier;0.899;0.9036;0.899;0.899;0.9028;0.9064;0.9028;0.902;0.8;0.8005;0.8;0.7999;0.9814;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
SVC;0.8804;0.888;0.8804;0.8807;0.9236;0.9318;0.9236;0.9238;0.8;0.8005;0.8;0.7999;0.9579;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
SVC;0.8812;0.889;0.8812;0.8814;0.9236;0.9266;0.9236;0.9234;0.8;0.8005;0.8;0.7999;0.9591;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8896;0.8972;0.8896;0.8899;0.9028;0.9073;0.9028;0.9015;0.8;0.8005;0.8;0.7999;0.9594;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
SVC;0.8881;0.8959;0.8881;0.8884;0.9306;0.936;0.9306;0.9305;0.8;0.8005;0.8;0.7999;0.9624;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8819;0.8898;0.8819;0.8823;0.9097;0.9159;0.9097;0.9083;0.8;0.8014;0.8;0.7998;0.9613;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.8858;0.8923;0.8858;0.886;0.8889;0.889;0.8889;0.8889;0.8;0.8014;0.8;0.7998;0.9602;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.8873;0.894;0.8873;0.8876;0.9028;0.9141;0.9028;0.9019;0.8;0.7997;0.8;0.7995;0.9581;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8851;0.893;0.8851;0.8854;0.9028;0.9086;0.9028;0.903;0.8;0.7997;0.8;0.7995;0.9602;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.8797;0.8879;0.8797;0.8805;0.9375;0.9386;0.9375;0.9371;0.8;0.7997;0.8;0.7995;0.9566;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
SVC;0.8819;0.8899;0.8819;0.8821;0.9306;0.9324;0.9306;0.9301;0.8;0.7997;0.8;0.7995;0.9569;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
SVC;0.8819;0.8899;0.8819;0.8824;0.9236;0.9319;0.9236;0.9223;0.8;0.7997;0.8;0.7995;0.9587;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.8782;0.8873;0.8782;0.8782;0.9097;0.916;0.9097;0.9101;0.8;0.7997;0.8;0.7995;0.962;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8812;0.8908;0.8812;0.8815;0.9306;0.9369;0.9306;0.9306;0.8;0.7997;0.8;0.7995;0.9575;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
SVC;0.8843;0.8932;0.8843;0.8847;0.9306;0.9372;0.9306;0.9301;0.8;0.7997;0.8;0.7995;0.9598;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.8828;0.8908;0.8828;0.8832;0.9306;0.9335;0.9306;0.9304;0.8;0.7997;0.8;0.7995;0.9583;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
SVC;0.875;0.8863;0.875;0.8758;0.9514;0.9559;0.9514;0.9516;0.8;0.7997;0.8;0.7995;0.9564;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
SVC;0.8827;0.8903;0.8827;0.8831;0.9167;0.9196;0.9167;0.9165;0.8;0.7997;0.8;0.7995;0.9583;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
SVC;0.8859;0.8935;0.8859;0.8862;0.9028;0.9101;0.9028;0.902;0.8;0.7997;0.8;0.7995;0.9589;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
MLPClassifier;0.9066;0.9104;0.9066;0.9067;0.9236;0.926;0.9236;0.9234;0.8;0.805;0.8;0.7993;0.9834;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.9067;0.9116;0.9067;0.9068;0.9236;0.9238;0.9236;0.9235;0.8;0.805;0.8;0.7993;0.9841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8997;0.9036;0.8997;0.8999;0.9583;0.9586;0.9583;0.9582;0.8;0.805;0.8;0.7993;0.9817;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.9036;0.9059;0.9036;0.9034;0.9236;0.9282;0.9236;0.9232;0.8;0.805;0.8;0.7993;0.9815;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.899;0.9049;0.899;0.8993;0.9306;0.932;0.9306;0.9311;0.8;0.805;0.8;0.7993;0.9836;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.9059;0.9105;0.9059;0.9061;0.9306;0.9379;0.9306;0.9303;0.8;0.805;0.8;0.7993;0.9827;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
DecisionTreeClassifier;0.9205;0.9218;0.9205;0.9206;0.9306;0.932;0.9306;0.9308;0.8;0.7989;0.8;0.7991;0.9706;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
MLPClassifier;0.9036;0.9085;0.9036;0.9037;0.9514;0.9514;0.9514;0.9514;0.8;0.8005;0.8;0.7989;0.9817;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.909;0.9122;0.909;0.9089;0.9167;0.9208;0.9167;0.9168;0.8;0.8005;0.8;0.7989;0.9808;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.9012;0.9055;0.9012;0.9011;0.9444;0.9467;0.9444;0.9447;0.8;0.8005;0.8;0.7989;0.9807;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.9097;0.9131;0.9097;0.9099;0.9306;0.9356;0.9306;0.9297;0.8;0.8005;0.8;0.7989;0.9832;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.9051;0.9095;0.9051;0.905;0.9236;0.9245;0.9236;0.9236;0.8;0.8026;0.8;0.7989;0.9828;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.9112;0.9142;0.9112;0.9113;0.9236;0.9257;0.9236;0.9234;0.8;0.8026;0.8;0.7989;0.9826;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
DecisionTreeClassifier;0.9259;0.9277;0.9259;0.9259;0.9306;0.9312;0.9306;0.9304;0.8;0.8026;0.8;0.7989;0.9727;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
MLPClassifier;0.9005;0.903;0.9005;0.9003;0.9514;0.9521;0.9514;0.9515;0.8;0.8005;0.8;0.7989;0.9816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.9043;0.9073;0.9043;0.9043;0.9236;0.9301;0.9236;0.9233;0.8;0.8005;0.8;0.7989;0.9826;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.9097;0.9154;0.9097;0.9097;0.9097;0.9117;0.9097;0.9096;0.8;0.8005;0.8;0.7989;0.9826;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.9028;0.9066;0.9028;0.9028;0.9583;0.9603;0.9583;0.9584;0.8;0.8005;0.8;0.7989;0.981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
DecisionTreeClassifier;0.9314;0.9331;0.9314;0.9314;0.9028;0.9039;0.9028;0.9021;0.8;0.8026;0.8;0.7989;0.9728;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
MLPClassifier;0.9166;0.9202;0.9166;0.9168;0.9167;0.9186;0.9167;0.9172;0.8;0.8026;0.8;0.7989;0.9831;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
SVC;0.8719;0.8811;0.8719;0.8724;0.9375;0.9435;0.9375;0.9368;0.8;0.8002;0.8;0.7988;0.9582;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 326};SVC(C=10, probability=True, random_state=326)
MLPClassifier;0.9013;0.9056;0.9013;0.901;0.9306;0.9342;0.9306;0.9312;0.8;0.8018;0.8;0.7986;0.9815;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
DecisionTreeClassifier;0.9182;0.92;0.9182;0.9183;0.9583;0.9604;0.9583;0.9583;0.8;0.8018;0.8;0.7986;0.9668;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
RandomForestClassifier;0.9236;0.9258;0.9236;0.9233;0.9236;0.9258;0.9236;0.9232;0.8;0.8012;0.8;0.7981;0.9855;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 497};RandomForestClassifier(n_estimators=10, random_state=497)
RandomForestClassifier;0.9321;0.9338;0.9321;0.9319;0.8958;0.8982;0.8958;0.8951;0.8;0.8012;0.8;0.7981;0.9885;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 599};RandomForestClassifier(n_estimators=10, random_state=599)
RandomForestClassifier;0.9213;0.9231;0.9213;0.9211;0.9583;0.9587;0.9583;0.9583;0.8;0.8012;0.8;0.7981;0.9864;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9336;0.9356;0.9336;0.9334;0.9097;0.9099;0.9097;0.9092;0.8;0.8012;0.8;0.7981;0.9855;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 497};RandomForestClassifier(n_estimators=10, random_state=497)
RandomForestClassifier;0.9321;0.9336;0.9321;0.932;0.9167;0.9174;0.9167;0.9168;0.8;0.8012;0.8;0.7981;0.9864;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
RandomForestClassifier;0.9282;0.9289;0.9282;0.9281;0.9236;0.9249;0.9236;0.9238;0.8;0.8012;0.8;0.7981;0.9861;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9267;0.9273;0.9267;0.9266;0.9375;0.9374;0.9375;0.937;0.8;0.8012;0.8;0.7981;0.9852;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 599};RandomForestClassifier(n_estimators=10, random_state=599)
RandomForestClassifier;0.929;0.9311;0.929;0.9291;0.9306;0.9329;0.9306;0.9309;0.8;0.8012;0.8;0.7981;0.9863;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
RandomForestClassifier;0.9298;0.9311;0.9298;0.9298;0.9306;0.9314;0.9306;0.9299;0.8;0.8012;0.8;0.7981;0.9877;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 497};RandomForestClassifier(n_estimators=10, random_state=497)
RandomForestClassifier;0.9229;0.9258;0.9229;0.9229;0.9444;0.9446;0.9444;0.9444;0.8;0.8012;0.8;0.7981;0.9876;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9251;0.9268;0.9251;0.9251;0.9653;0.9655;0.9653;0.9651;0.8;0.802;0.8;0.798;0.9852;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 599};RandomForestClassifier(n_estimators=10, random_state=599)
RandomForestClassifier;0.9244;0.9262;0.9244;0.9243;0.9375;0.9383;0.9375;0.9377;0.8;0.802;0.8;0.798;0.9877;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
KNeighborsClassifier;0.9113;0.9135;0.9113;0.9112;0.8889;0.9106;0.8889;0.8905;0.7833;0.8098;0.7833;0.7865;0.9719;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.909;0.9137;0.909;0.9091;0.9028;0.9204;0.9028;0.9036;0.7833;0.8098;0.7833;0.7865;0.9741;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
RandomForestClassifier;0.9282;0.9302;0.9282;0.9281;0.9306;0.9307;0.9306;0.9305;0.7833;0.7905;0.7833;0.7844;0.9864;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 497};RandomForestClassifier(n_estimators=5, random_state=497)
MLPClassifier;0.9036;0.9066;0.9036;0.9036;0.9236;0.9304;0.9236;0.9237;0.7833;0.7854;0.7833;0.783;0.9817;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
RandomForestClassifier;0.9274;0.9298;0.9274;0.9274;0.9306;0.931;0.9306;0.9307;0.7833;0.785;0.7833;0.7829;0.9867;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 497};RandomForestClassifier(n_estimators=10, random_state=497)
MLPClassifier;0.9128;0.9174;0.9128;0.9128;0.9167;0.9172;0.9167;0.9162;0.7833;0.783;0.7833;0.7828;0.9823;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
RandomForestClassifier;0.9321;0.9342;0.9321;0.9319;0.9167;0.9222;0.9167;0.917;0.7833;0.7839;0.7833;0.7827;0.9872;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 133};RandomForestClassifier(n_estimators=5, random_state=133)
RandomForestClassifier;0.9221;0.9237;0.9221;0.922;0.9375;0.9392;0.9375;0.9371;0.7833;0.7868;0.7833;0.7826;0.9871;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 599};RandomForestClassifier(n_estimators=10, random_state=599)
RandomForestClassifier;0.929;0.9308;0.929;0.929;0.9306;0.9308;0.9306;0.9304;0.7833;0.7868;0.7833;0.7826;0.9854;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 599};RandomForestClassifier(n_estimators=20, random_state=599)
RandomForestClassifier;0.9337;0.935;0.9337;0.9336;0.8958;0.8978;0.8958;0.896;0.7833;0.7868;0.7833;0.7826;0.9874;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 599};RandomForestClassifier(n_estimators=20, random_state=599)
RandomForestClassifier;0.9236;0.9253;0.9236;0.9235;0.9444;0.9498;0.9444;0.9447;0.7833;0.7861;0.7833;0.7823;0.9854;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 599};RandomForestClassifier(n_estimators=5, random_state=599)
SVC;0.885;0.8941;0.885;0.8854;0.9028;0.9046;0.9028;0.9027;0.7833;0.7861;0.7833;0.7823;0.9611;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 118};SVC(C=10, probability=True, random_state=118)
RandomForestClassifier;0.9229;0.9251;0.9229;0.9227;0.9444;0.9474;0.9444;0.9447;0.7833;0.7861;0.7833;0.7823;0.9837;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 599};RandomForestClassifier(n_estimators=10, random_state=599)
DecisionTreeClassifier;0.9236;0.9258;0.9236;0.9237;0.9097;0.9163;0.9097;0.9093;0.7833;0.7831;0.7833;0.7822;0.9734;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
DecisionTreeClassifier;0.9259;0.9279;0.9259;0.926;0.9236;0.9233;0.9236;0.9234;0.7833;0.7831;0.7833;0.7822;0.9728;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9182;0.9201;0.9182;0.9182;0.9514;0.9549;0.9514;0.9519;0.7833;0.7831;0.7833;0.7822;0.9661;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
DecisionTreeClassifier;0.9259;0.9284;0.9259;0.9259;0.9028;0.9124;0.9028;0.9018;0.7833;0.7831;0.7833;0.7822;0.9757;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9275;0.9291;0.9275;0.9274;0.9236;0.9235;0.9236;0.9233;0.7833;0.7831;0.7833;0.7822;0.9726;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9213;0.9236;0.9213;0.9214;0.9375;0.9382;0.9375;0.9372;0.7833;0.7831;0.7833;0.7822;0.9713;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9244;0.9264;0.9244;0.9244;0.9375;0.9383;0.9375;0.9376;0.7833;0.7831;0.7833;0.7822;0.9679;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
RandomForestClassifier;0.9337;0.9357;0.9337;0.9338;0.9028;0.9022;0.9028;0.9024;0.7833;0.7831;0.7833;0.7822;0.9854;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
DecisionTreeClassifier;0.9205;0.9222;0.9205;0.9204;0.9514;0.9515;0.9514;0.9512;0.7833;0.7831;0.7833;0.7822;0.9701;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
DecisionTreeClassifier;0.9198;0.9225;0.9198;0.9201;0.9583;0.9591;0.9583;0.9582;0.7833;0.7831;0.7833;0.7822;0.972;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
DecisionTreeClassifier;0.9368;0.9383;0.9368;0.9367;0.9167;0.9177;0.9167;0.9169;0.7833;0.7831;0.7833;0.7822;0.9742;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
DecisionTreeClassifier;0.9174;0.9208;0.9174;0.9173;0.9167;0.9169;0.9167;0.9162;0.7833;0.7831;0.7833;0.7822;0.9684;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
DecisionTreeClassifier;0.9252;0.927;0.9252;0.9252;0.9306;0.9344;0.9306;0.9304;0.7833;0.7831;0.7833;0.7822;0.9706;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
SVC;0.8812;0.8889;0.8812;0.8814;0.9375;0.9375;0.9375;0.9374;0.7833;0.7831;0.7833;0.7822;0.9589;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 759};SVC(C=10, probability=True, random_state=759)
RandomForestClassifier;0.9244;0.9256;0.9244;0.9243;0.9097;0.91;0.9097;0.9098;0.7833;0.7835;0.7833;0.7821;0.9868;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 599};RandomForestClassifier(n_estimators=20, random_state=599)
RandomForestClassifier;0.9244;0.9268;0.9244;0.9246;0.9167;0.9179;0.9167;0.9171;0.7833;0.7835;0.7833;0.7821;0.9839;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 497};RandomForestClassifier(n_estimators=10, random_state=497)
RandomForestClassifier;0.9197;0.9227;0.9197;0.9195;0.9236;0.9255;0.9236;0.924;0.7833;0.7877;0.7833;0.7814;0.9889;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 133};RandomForestClassifier(n_estimators=5, random_state=133)
DecisionTreeClassifier;0.9198;0.9221;0.9198;0.92;0.9444;0.9476;0.9444;0.9443;0.7833;0.7854;0.7833;0.7813;0.972;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
RandomForestClassifier;0.9275;0.9288;0.9275;0.9275;0.9514;0.9519;0.9514;0.9514;0.7833;0.786;0.7833;0.7804;0.9862;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9236;0.9254;0.9236;0.9235;0.9236;0.9304;0.9236;0.923;0.7667;0.7874;0.7667;0.7688;0.9858;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
DecisionTreeClassifier;0.9205;0.9221;0.9205;0.9206;0.9236;0.9258;0.9236;0.9234;0.7667;0.7655;0.7667;0.7657;0.9731;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
RandomForestClassifier;0.9352;0.9362;0.9352;0.9353;0.8889;0.8897;0.8889;0.8884;0.7667;0.7668;0.7667;0.7655;0.9838;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
DecisionTreeClassifier;0.919;0.921;0.919;0.919;0.9514;0.9514;0.9514;0.9513;0.7667;0.7668;0.7667;0.7655;0.9701;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)
DecisionTreeClassifier;0.9236;0.9259;0.9236;0.9236;0.9236;0.9251;0.9236;0.9238;0.7667;0.7672;0.7667;0.7646;0.9717;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
RandomForestClassifier;0.9236;0.9242;0.9236;0.9234;0.9583;0.9591;0.9583;0.9579;0.7667;0.7708;0.7667;0.7646;0.9861;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 599};RandomForestClassifier(n_estimators=10, random_state=599)
DecisionTreeClassifier;0.9105;0.915;0.9105;0.9104;0.9236;0.9328;0.9236;0.9232;0.75;0.7487;0.75;0.7484;0.9692;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 521};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=521)
LogisticRegression;0.7832;0.8066;0.7832;0.7854;0.8056;0.8299;0.8056;0.8075;0.7167;0.721;0.7167;0.7166;0.9184;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7993;0.8193;0.7993;0.8008;0.7986;0.8127;0.7986;0.8012;0.7;0.7029;0.7;0.7003;0.9222;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.784;0.8067;0.784;0.7873;0.8403;0.851;0.8403;0.8413;0.7;0.7029;0.7;0.7003;0.9196;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7886;0.8103;0.7886;0.7912;0.7917;0.8128;0.7917;0.7949;0.7;0.7029;0.7;0.7003;0.9223;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7762;0.802;0.7762;0.7783;0.8333;0.8506;0.8333;0.8347;0.6833;0.6858;0.6833;0.6838;0.9196;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7901;0.8121;0.7901;0.7924;0.7708;0.7982;0.7708;0.7766;0.6833;0.6898;0.6833;0.6834;0.9176;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7901;0.8114;0.7901;0.7915;0.7986;0.8094;0.7986;0.7973;0.6833;0.6836;0.6833;0.6832;0.9206;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7856;0.804;0.7856;0.7878;0.7917;0.803;0.7917;0.7915;0.6833;0.6828;0.6833;0.6828;0.9203;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7894;0.8127;0.7894;0.7904;0.7917;0.8002;0.7917;0.792;0.6833;0.6855;0.6833;0.6823;0.9219;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7856;0.8085;0.7856;0.7885;0.7639;0.7949;0.7639;0.7689;0.6667;0.6759;0.6667;0.6683;0.9186;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7847;0.8045;0.7847;0.7867;0.7708;0.8058;0.7708;0.775;0.6667;0.6759;0.6667;0.6683;0.9211;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7925;0.8168;0.7925;0.7945;0.7222;0.7693;0.7222;0.726;0.6667;0.6759;0.6667;0.6683;0.9244;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7763;0.7983;0.7763;0.7785;0.7986;0.8024;0.7986;0.8001;0.6667;0.6759;0.6667;0.6683;0.9173;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7793;0.8016;0.7793;0.7816;0.8194;0.8423;0.8194;0.8229;0.6667;0.6727;0.6667;0.6678;0.9178;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7778;0.8013;0.7778;0.7808;0.7708;0.7968;0.7708;0.7754;0.6667;0.6727;0.6667;0.6678;0.9231;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7909;0.8129;0.7909;0.7933;0.7778;0.8407;0.7778;0.7762;0.6667;0.6727;0.6667;0.6678;0.9222;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7939;0.8134;0.7939;0.7948;0.75;0.7874;0.75;0.7563;0.6667;0.6727;0.6667;0.6678;0.9252;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.7808;0.8015;0.7808;0.7834;0.7569;0.79;0.7569;0.7614;0.6667;0.6727;0.6667;0.6678;0.9238;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.784;0.8076;0.784;0.7866;0.8264;0.8519;0.8264;0.8295;0.6667;0.6727;0.6667;0.6678;0.9173;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7925;0.8114;0.7925;0.7932;0.7847;0.7996;0.7847;0.7874;0.6667;0.6727;0.6667;0.6678;0.9207;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7933;0.812;0.7933;0.7958;0.7569;0.7811;0.7569;0.7616;0.6667;0.6727;0.6667;0.6678;0.9209;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7809;0.8028;0.7809;0.7829;0.8194;0.8436;0.8194;0.8202;0.6667;0.6727;0.6667;0.6678;0.9181;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7855;0.8075;0.7855;0.7873;0.7917;0.8081;0.7917;0.7921;0.6667;0.6727;0.6667;0.6678;0.9212;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7763;0.7968;0.7763;0.7784;0.8542;0.8708;0.8542;0.855;0.6667;0.6727;0.6667;0.6678;0.9186;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7801;0.8028;0.7801;0.7818;0.8333;0.86;0.8333;0.8378;0.6667;0.6727;0.6667;0.6678;0.9164;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7794;0.8022;0.7794;0.7817;0.7917;0.8005;0.7917;0.792;0.6667;0.6683;0.6667;0.6667;0.9209;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7901;0.811;0.7901;0.7924;0.7361;0.7448;0.7361;0.739;0.6667;0.6667;0.6667;0.6658;0.9216;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7831;0.8031;0.7831;0.7845;0.7639;0.7695;0.7639;0.7652;0.65;0.652;0.65;0.6507;0.9189;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7909;0.8133;0.7909;0.7928;0.7431;0.7452;0.7431;0.735;0.65;0.6502;0.65;0.6498;0.9246;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
LogisticRegression;0.7893;0.8094;0.7893;0.7909;0.7639;0.7908;0.7639;0.7696;0.65;0.6508;0.65;0.6496;0.9227;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 3, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=3)"
