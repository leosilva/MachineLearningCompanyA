Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
KNeighborsClassifier,0.9699,0.9705,0.9699,0.9698,0.9765,0.9768,0.9765,0.9764,0.9,0.913,0.9,0.9019,0.9898,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
RandomForestClassifier,0.9698,0.9703,0.9698,0.9698,0.9704,0.9707,0.9704,0.9703,0.9,0.913,0.9,0.9019,0.9928,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 660}","RandomForestClassifier(n_estimators=20, random_state=660)"
DecisionTreeClassifier,0.9467,0.9475,0.9467,0.9468,0.9469,0.9472,0.9469,0.9468,0.8667,0.8746,0.8667,0.8674,0.9854,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 370}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=370)"
KNeighborsClassifier,0.9684,0.9688,0.9684,0.9684,0.9698,0.9704,0.9698,0.9697,0.8167,0.8396,0.8167,0.8193,0.9902,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
KNeighborsClassifier,0.9677,0.9683,0.9677,0.9676,0.9698,0.9702,0.9698,0.9697,0.8,0.8276,0.8,0.8029,0.9899,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
RandomForestClassifier,0.9655,0.966,0.9655,0.9654,0.9692,0.9694,0.9692,0.9692,0.7833,0.8141,0.7833,0.7854,0.9931,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 768}","RandomForestClassifier(n_estimators=20, random_state=768)"
MLPClassifier,0.8651,0.8679,0.8651,0.8654,0.8898,0.8958,0.8898,0.8904,0.7833,0.7833,0.7833,0.7811,0.9645,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 402, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=402)"
DecisionTreeClassifier,0.9425,0.9434,0.9425,0.9425,0.9497,0.95,0.9497,0.9496,0.7667,0.7934,0.7667,0.7724,0.9845,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 526}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=526)"
RandomForestClassifier,0.9698,0.9702,0.9698,0.9698,0.9664,0.9671,0.9664,0.9664,0.7667,0.7687,0.7667,0.7674,0.9926,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 829}","RandomForestClassifier(n_estimators=20, random_state=829)"
MLPClassifier,0.8605,0.8646,0.8605,0.8603,0.8691,0.8699,0.8691,0.868,0.7667,0.8027,0.7667,0.7659,0.9626,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 162, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=162)"
DecisionTreeClassifier,0.9428,0.9436,0.9428,0.9427,0.943,0.9441,0.943,0.943,0.75,0.7703,0.75,0.7483,0.9823,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 923}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=923)"
MLPClassifier,0.8431,0.8502,0.8431,0.8435,0.8484,0.8481,0.8484,0.8482,0.7333,0.7337,0.7333,0.7332,0.9589,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=223)"
SVC,0.8136,0.815,0.8136,0.8127,0.8093,0.8098,0.8093,0.8085,0.7167,0.7248,0.7167,0.7169,0.8886,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 956}","SVC(C=10, kernel='linear', probability=True, random_state=956)"
SVC,0.7988,0.8031,0.7988,0.8001,0.8054,0.8117,0.8054,0.807,0.7,0.7477,0.7,0.6906,0.8968,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 686}","SVC(C=10, kernel='linear', probability=True, random_state=686)"
SVC,0.8027,0.8067,0.8027,0.8041,0.778,0.7854,0.778,0.7804,0.6667,0.7222,0.6667,0.6762,0.8985,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 848}","SVC(C=1, kernel='linear', probability=True, random_state=848)"
LogisticRegression,0.7679,0.769,0.7679,0.7687,0.7959,0.7972,0.7959,0.7964,0.6333,0.6756,0.6333,0.6435,0.9129,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 778, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=778)"
LogisticRegression,0.7736,0.7749,0.7736,0.7735,0.7724,0.7716,0.7724,0.7718,0.6333,0.6638,0.6333,0.6306,0.9155,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression,0.7711,0.7719,0.7711,0.7715,0.788,0.79,0.788,0.7889,0.6167,0.6262,0.6167,0.6197,0.9136,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 80, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=80)"
