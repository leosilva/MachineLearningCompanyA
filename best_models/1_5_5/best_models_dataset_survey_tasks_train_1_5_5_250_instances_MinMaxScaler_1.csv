Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8985;0.9027;0.8985;0.8982;0.8841;0.8931;0.8841;0.8794;0.9667;0.9697;0.9667;0.967;0.9748;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
RandomForestClassifier;0.8809;0.8871;0.8809;0.8812;0.913;0.9135;0.913;0.913;0.9667;0.9697;0.9667;0.967;0.9737;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
RandomForestClassifier;0.8953;0.8991;0.8953;0.8956;0.8841;0.8951;0.8841;0.883;0.9667;0.9697;0.9667;0.967;0.9797;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
RandomForestClassifier;0.8906;0.892;0.8906;0.8904;0.913;0.9253;0.913;0.9134;0.9667;0.9697;0.9667;0.967;0.9734;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
RandomForestClassifier;0.8969;0.9001;0.8969;0.8967;0.8841;0.8839;0.8841;0.8837;0.9667;0.9697;0.9667;0.967;0.9761;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
RandomForestClassifier;0.8904;0.8942;0.8904;0.8901;0.8841;0.8858;0.8841;0.8847;0.9667;0.9697;0.9667;0.967;0.9752;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
RandomForestClassifier;0.9049;0.9063;0.9049;0.9046;0.942;0.943;0.942;0.9413;0.9667;0.9697;0.9667;0.967;0.9759;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
RandomForestClassifier;0.8889;0.8962;0.8889;0.8886;0.8841;0.8841;0.8841;0.8841;0.9667;0.9667;0.9667;0.9667;0.9728;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
RandomForestClassifier;0.892;0.8952;0.892;0.8916;0.8696;0.871;0.8696;0.8694;0.95;0.9565;0.95;0.9507;0.976;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
RandomForestClassifier;0.8857;0.8909;0.8857;0.8852;0.8841;0.889;0.8841;0.8847;0.95;0.9565;0.95;0.9507;0.9716;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
KNeighborsClassifier;0.8083;0.8225;0.8083;0.807;0.913;0.9151;0.913;0.9129;0.95;0.9565;0.95;0.9507;0.9173;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8004;0.8136;0.8004;0.8003;0.8116;0.8264;0.8116;0.8082;0.95;0.9565;0.95;0.9507;0.9173;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8116;0.8331;0.8116;0.8105;0.8116;0.8333;0.8116;0.8139;0.95;0.9565;0.95;0.9507;0.922;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8921;0.8976;0.8921;0.8922;0.9565;0.9577;0.9565;0.9568;0.95;0.9565;0.95;0.9507;0.9727;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
RandomForestClassifier;0.9066;0.9098;0.9066;0.9064;0.8261;0.8261;0.8261;0.8261;0.95;0.9565;0.95;0.9507;0.9768;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
KNeighborsClassifier;0.8133;0.8284;0.8133;0.8123;0.8551;0.8703;0.8551;0.8556;0.95;0.9565;0.95;0.9507;0.9187;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8985;0.9075;0.8985;0.8984;0.913;0.9164;0.913;0.9139;0.95;0.9565;0.95;0.9507;0.9746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
KNeighborsClassifier;0.8099;0.8224;0.8099;0.8091;0.8116;0.8463;0.8116;0.8033;0.95;0.9565;0.95;0.9507;0.9199;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7891;0.8051;0.7891;0.7882;0.9275;0.9281;0.9275;0.9275;0.95;0.9565;0.95;0.9507;0.9141;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.9034;0.9061;0.9034;0.9029;0.9275;0.931;0.9275;0.9281;0.95;0.9565;0.95;0.9507;0.9782;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
DecisionTreeClassifier;0.8649;0.8684;0.8649;0.8649;0.8261;0.8323;0.8261;0.8267;0.95;0.9565;0.95;0.9507;0.8987;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
KNeighborsClassifier;0.8052;0.8187;0.8052;0.8043;0.8551;0.858;0.8551;0.8547;0.95;0.9565;0.95;0.9507;0.9151;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7954;0.8061;0.7954;0.7934;0.8551;0.8666;0.8551;0.8575;0.95;0.9565;0.95;0.9507;0.9119;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8712;0.8795;0.8712;0.871;0.8261;0.8339;0.8261;0.8276;0.95;0.9565;0.95;0.9507;0.9035;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
RandomForestClassifier;0.8969;0.9001;0.8969;0.8965;0.913;0.917;0.913;0.9131;0.95;0.9516;0.95;0.9504;0.9786;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
RandomForestClassifier;0.8857;0.8909;0.8857;0.8854;0.8986;0.8988;0.8986;0.8978;0.9333;0.937;0.9333;0.9341;0.9752;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
RandomForestClassifier;0.9034;0.9081;0.9034;0.9033;0.913;0.9135;0.913;0.913;0.9333;0.9444;0.9333;0.9341;0.9766;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
RandomForestClassifier;0.8954;0.9004;0.8954;0.8946;0.8696;0.8796;0.8696;0.872;0.9333;0.937;0.9333;0.9341;0.9775;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
RandomForestClassifier;0.8905;0.8933;0.8905;0.8898;0.8986;0.8988;0.8986;0.8978;0.9333;0.9444;0.9333;0.9341;0.9746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
RandomForestClassifier;0.8857;0.8886;0.8857;0.8844;0.8986;0.9034;0.8986;0.8971;0.9333;0.937;0.9333;0.9341;0.9756;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
RandomForestClassifier;0.884;0.889;0.884;0.8845;0.942;0.942;0.942;0.9417;0.9333;0.937;0.9333;0.9341;0.9717;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
KNeighborsClassifier;0.7907;0.8067;0.7907;0.7906;0.913;0.9246;0.913;0.9138;0.9333;0.9444;0.9333;0.9341;0.9177;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8003;0.816;0.8003;0.7998;0.913;0.9231;0.913;0.9145;0.9333;0.937;0.9333;0.9341;0.9085;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8004;0.8204;0.8004;0.7999;0.8261;0.8255;0.8261;0.825;0.9333;0.9444;0.9333;0.9341;0.928;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8018;0.8168;0.8018;0.8022;0.8696;0.8787;0.8696;0.8656;0.9333;0.937;0.9333;0.9341;0.919;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.81;0.8285;0.81;0.8105;0.8696;0.8701;0.8696;0.8687;0.9333;0.937;0.9333;0.9341;0.9252;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8181;0.8281;0.8181;0.8182;0.8116;0.8139;0.8116;0.8108;0.9333;0.9444;0.9333;0.9341;0.9277;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.815;0.8292;0.815;0.8152;0.8551;0.8574;0.8551;0.856;0.9333;0.937;0.9333;0.9341;0.9203;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7794;0.8021;0.7794;0.7781;0.913;0.915;0.913;0.9119;0.9333;0.937;0.9333;0.9341;0.9124;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8004;0.8153;0.8004;0.8008;0.8696;0.873;0.8696;0.8704;0.9333;0.937;0.9333;0.9341;0.9154;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8133;0.827;0.8133;0.8127;0.7971;0.7972;0.7971;0.7953;0.9333;0.937;0.9333;0.9341;0.931;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8067;0.8256;0.8067;0.8066;0.8406;0.8446;0.8406;0.8401;0.9333;0.937;0.9333;0.9341;0.9216;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8149;0.8277;0.8149;0.8151;0.8841;0.887;0.8841;0.882;0.9333;0.9444;0.9333;0.9341;0.9221;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8728;0.8783;0.8728;0.8726;0.8406;0.841;0.8406;0.8405;0.9333;0.9379;0.9333;0.934;0.9043;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
RandomForestClassifier;0.8872;0.8934;0.8872;0.8866;0.8261;0.8307;0.8261;0.824;0.9333;0.9379;0.9333;0.934;0.9746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
DecisionTreeClassifier;0.847;0.8528;0.847;0.8471;0.8116;0.8147;0.8116;0.808;0.9333;0.9379;0.9333;0.934;0.8854;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
KNeighborsClassifier;0.7954;0.8103;0.7954;0.7944;0.8841;0.8829;0.8841;0.8827;0.9333;0.9379;0.9333;0.934;0.9132;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8068;0.8235;0.8068;0.8073;0.8696;0.8744;0.8696;0.8699;0.9333;0.9379;0.9333;0.934;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7955;0.8148;0.7955;0.7937;0.8696;0.8712;0.8696;0.8693;0.9333;0.9379;0.9333;0.934;0.9145;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8873;0.8977;0.8873;0.8876;0.913;0.9129;0.913;0.9127;0.9333;0.936;0.9333;0.9332;0.9762;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
RandomForestClassifier;0.8791;0.8816;0.8791;0.8784;0.942;0.9426;0.942;0.942;0.9333;0.9399;0.9333;0.9331;0.973;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
RandomForestClassifier;0.8953;0.8977;0.8953;0.8952;0.913;0.9189;0.913;0.9127;0.9333;0.9399;0.9333;0.9331;0.9746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
KNeighborsClassifier;0.8004;0.8148;0.8004;0.7996;0.8696;0.8831;0.8696;0.8707;0.9167;0.9333;0.9167;0.9184;0.9133;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7955;0.8131;0.7955;0.7956;0.8696;0.8758;0.8696;0.8701;0.9167;0.9333;0.9167;0.9184;0.9157;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.7554;0.7894;0.7554;0.7568;0.8986;0.9032;0.8986;0.8997;0.9167;0.9245;0.9167;0.9181;0.8846;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
DecisionTreeClassifier;0.8567;0.8629;0.8567;0.8556;0.8841;0.8839;0.8841;0.8837;0.9167;0.9245;0.9167;0.9181;0.8923;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
SVC;0.76;0.7859;0.76;0.7614;0.8116;0.8172;0.8116;0.8125;0.9167;0.9245;0.9167;0.9181;0.8869;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7439;0.7712;0.7439;0.7446;0.913;0.9183;0.913;0.9135;0.9167;0.9245;0.9167;0.9181;0.875;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
KNeighborsClassifier;0.789;0.8062;0.789;0.7895;0.913;0.9183;0.913;0.9135;0.9167;0.9235;0.9167;0.9176;0.9114;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8067;0.8171;0.8067;0.8062;0.8261;0.8442;0.8261;0.8297;0.9167;0.9235;0.9167;0.9176;0.9189;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8938;0.8976;0.8938;0.8927;0.8986;0.9028;0.8986;0.8997;0.9167;0.9235;0.9167;0.9176;0.9778;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 230};RandomForestClassifier(n_estimators=20, random_state=230)
KNeighborsClassifier;0.7939;0.8054;0.7939;0.7936;0.913;0.9156;0.913;0.9122;0.9167;0.9235;0.9167;0.9176;0.9129;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.7312;0.761;0.7312;0.7321;0.8551;0.8544;0.8551;0.8528;0.9167;0.9235;0.9167;0.9176;0.8766;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
RandomForestClassifier;0.8986;0.905;0.8986;0.8984;0.8551;0.8591;0.8551;0.8562;0.9167;0.9254;0.9167;0.9175;0.9764;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 678};RandomForestClassifier(n_estimators=5, random_state=678)
RandomForestClassifier;0.9034;0.9052;0.9034;0.9034;0.913;0.9142;0.913;0.9133;0.9167;0.9254;0.9167;0.9175;0.9765;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 678};RandomForestClassifier(n_estimators=20, random_state=678)
KNeighborsClassifier;0.8035;0.8183;0.8035;0.8041;0.7971;0.8025;0.7971;0.797;0.9167;0.9212;0.9167;0.9174;0.924;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8455;0.8477;0.8455;0.8449;0.8551;0.8624;0.8551;0.8558;0.9167;0.9212;0.9167;0.9174;0.8841;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
DecisionTreeClassifier;0.8567;0.861;0.8567;0.8564;0.7391;0.7669;0.7391;0.7409;0.9167;0.9206;0.9167;0.9174;0.8925;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
DecisionTreeClassifier;0.8536;0.8589;0.8536;0.853;0.8406;0.8523;0.8406;0.8439;0.9167;0.9206;0.9167;0.9174;0.89;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
DecisionTreeClassifier;0.8711;0.8741;0.8711;0.8708;0.8116;0.8173;0.8116;0.812;0.9167;0.9212;0.9167;0.9174;0.9035;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
KNeighborsClassifier;0.781;0.8007;0.781;0.7809;0.8551;0.8613;0.8551;0.8557;0.9167;0.9212;0.9167;0.9174;0.9182;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.7489;0.7805;0.7489;0.751;0.8406;0.8413;0.8406;0.8401;0.9167;0.9212;0.9167;0.9174;0.8836;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
SVC;0.7455;0.7835;0.7455;0.746;0.8116;0.8236;0.8116;0.8133;0.9167;0.9212;0.9167;0.9174;0.875;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
SVC;0.7488;0.775;0.7488;0.7505;0.8551;0.8695;0.8551;0.8557;0.9167;0.9212;0.9167;0.9174;0.8857;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
DecisionTreeClassifier;0.8648;0.8677;0.8648;0.8644;0.8116;0.8126;0.8116;0.8119;0.9167;0.9182;0.9167;0.917;0.8988;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
RandomForestClassifier;0.884;0.8859;0.884;0.8838;0.913;0.9156;0.913;0.9122;0.9167;0.9182;0.9167;0.917;0.9664;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
RandomForestClassifier;0.897;0.8995;0.897;0.8958;0.8986;0.8988;0.8986;0.8978;0.9167;0.9248;0.9167;0.9153;0.9685;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 50};RandomForestClassifier(n_estimators=20, random_state=50)
SVC;0.7518;0.7813;0.7518;0.7549;0.8406;0.8428;0.8406;0.8399;0.9;0.912;0.9;0.9019;0.8753;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
SVC;0.7602;0.7927;0.7602;0.764;0.8116;0.8236;0.8116;0.8133;0.9;0.912;0.9;0.9019;0.885;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7746;0.8;0.7746;0.7766;0.7681;0.7919;0.7681;0.765;0.9;0.912;0.9;0.9019;0.8936;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7504;0.781;0.7504;0.7514;0.8261;0.8554;0.8261;0.8295;0.9;0.912;0.9;0.9019;0.8856;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
DecisionTreeClassifier;0.8535;0.8586;0.8535;0.8538;0.8841;0.8856;0.8841;0.8828;0.9;0.913;0.9;0.9019;0.89;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8454;0.8544;0.8454;0.8447;0.7971;0.8138;0.7971;0.7975;0.9;0.9061;0.9;0.9015;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8616;0.8638;0.8616;0.8616;0.8116;0.8119;0.8116;0.8107;0.9;0.9048;0.9;0.9012;0.8962;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
DecisionTreeClassifier;0.8583;0.8615;0.8583;0.857;0.7681;0.7681;0.7681;0.7681;0.9;0.9043;0.9;0.9011;0.8936;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
SVC;0.7584;0.7998;0.7584;0.7614;0.8261;0.8389;0.8261;0.828;0.9;0.9069;0.9;0.901;0.8905;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
DecisionTreeClassifier;0.8389;0.8458;0.8389;0.8388;0.8551;0.8549;0.8551;0.8547;0.9;0.9069;0.9;0.901;0.8793;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8423;0.848;0.8423;0.8422;0.8261;0.8318;0.8261;0.823;0.9;0.9006;0.9;0.8999;0.8818;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
SVC;0.7664;0.797;0.7664;0.7671;0.8261;0.8411;0.8261;0.8291;0.8833;0.9004;0.8833;0.8856;0.8737;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7616;0.7895;0.7616;0.7628;0.7391;0.7699;0.7391;0.7461;0.8833;0.9004;0.8833;0.8856;0.8944;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
SVC;0.7504;0.7736;0.7504;0.7521;0.8696;0.8803;0.8696;0.871;0.8833;0.9004;0.8833;0.8856;0.8817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
DecisionTreeClassifier;0.8599;0.8628;0.8599;0.8593;0.7826;0.7924;0.7826;0.7796;0.8833;0.8889;0.8833;0.8849;0.895;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
SVC;0.7568;0.7801;0.7568;0.7576;0.913;0.9181;0.913;0.9129;0.8833;0.8935;0.8833;0.8844;0.8805;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7616;0.7841;0.7616;0.7639;0.8261;0.8395;0.8261;0.8238;0.8833;0.8935;0.8833;0.8844;0.8702;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
MLPClassifier;0.7633;0.7807;0.7633;0.7624;0.8986;0.9049;0.8986;0.8983;0.8833;0.8992;0.8833;0.884;0.9111;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.7746;0.7962;0.7746;0.7753;0.8116;0.821;0.8116;0.8105;0.8833;0.8992;0.8833;0.884;0.9059;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
MLPClassifier;0.7665;0.778;0.7665;0.7679;0.8406;0.8406;0.8406;0.8406;0.8833;0.8992;0.8833;0.884;0.9056;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
MLPClassifier;0.7745;0.7963;0.7745;0.7756;0.7971;0.8013;0.7971;0.7976;0.8833;0.8992;0.8833;0.884;0.9097;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.7649;0.7818;0.7649;0.7648;0.7681;0.781;0.7681;0.7638;0.8833;0.8992;0.8833;0.884;0.9086;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
DecisionTreeClassifier;0.8568;0.8641;0.8568;0.8571;0.7971;0.8006;0.7971;0.7972;0.8833;0.8894;0.8833;0.8839;0.8928;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
DecisionTreeClassifier;0.868;0.8744;0.868;0.8682;0.8116;0.8158;0.8116;0.813;0.8833;0.8894;0.8833;0.8839;0.9011;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8502;0.8566;0.8502;0.85;0.7971;0.7976;0.7971;0.7966;0.8833;0.8934;0.8833;0.8839;0.8878;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
SVC;0.749;0.7772;0.749;0.7499;0.8406;0.8489;0.8406;0.843;0.8667;0.8894;0.8667;0.8689;0.8778;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7472;0.7782;0.7472;0.749;0.7971;0.81;0.7971;0.7951;0.8667;0.8894;0.8667;0.8689;0.8793;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7473;0.7803;0.7473;0.7485;0.8696;0.88;0.8696;0.871;0.8667;0.8894;0.8667;0.8689;0.8715;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
SVC;0.7666;0.7915;0.7666;0.7664;0.7826;0.7958;0.7826;0.7857;0.8667;0.8894;0.8667;0.8689;0.8847;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
SVC;0.7472;0.7813;0.7472;0.7507;0.7971;0.8169;0.7971;0.8012;0.8667;0.8894;0.8667;0.8689;0.8746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
SVC;0.76;0.7922;0.76;0.7617;0.7681;0.7911;0.7681;0.7685;0.8667;0.8894;0.8667;0.8689;0.8776;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
SVC;0.773;0.7959;0.773;0.7755;0.7971;0.8262;0.7971;0.7996;0.8667;0.8894;0.8667;0.8689;0.8922;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
SVC;0.7439;0.7718;0.7439;0.7458;0.8261;0.8444;0.8261;0.8264;0.8667;0.8808;0.8667;0.8675;0.8753;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7649;0.7938;0.7649;0.7674;0.8551;0.868;0.8551;0.8558;0.8667;0.8808;0.8667;0.8675;0.8764;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
MLPClassifier;0.7682;0.7836;0.7682;0.7692;0.7536;0.7585;0.7536;0.7552;0.8667;0.8808;0.8667;0.8675;0.9095;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
MLPClassifier;0.7681;0.7816;0.7681;0.7695;0.8406;0.8524;0.8406;0.8418;0.8667;0.8808;0.8667;0.8675;0.9117;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
DecisionTreeClassifier;0.8535;0.8571;0.8535;0.8525;0.7826;0.7815;0.7826;0.7803;0.8667;0.869;0.8667;0.8674;0.8904;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
MLPClassifier;0.7568;0.7709;0.7568;0.7567;0.7536;0.751;0.7536;0.7491;0.8667;0.8792;0.8667;0.8672;0.9063;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
MLPClassifier;0.7553;0.7697;0.7553;0.7545;0.8406;0.8424;0.8406;0.8407;0.8667;0.8792;0.8667;0.8672;0.904;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
DecisionTreeClassifier;0.8663;0.8718;0.8663;0.8664;0.8261;0.8261;0.8261;0.8261;0.8667;0.888;0.8667;0.8668;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.847;0.8515;0.847;0.8471;0.8116;0.8183;0.8116;0.8139;0.8667;0.875;0.8667;0.8668;0.8852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8566;0.8597;0.8566;0.8557;0.7971;0.8078;0.7971;0.7917;0.8667;0.8738;0.8667;0.8658;0.8929;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8679;0.8736;0.8679;0.8678;0.8116;0.8185;0.8116;0.8115;0.8667;0.8689;0.8667;0.8654;0.9009;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8583;0.8612;0.8583;0.8574;0.7536;0.7523;0.7536;0.7509;0.8667;0.8689;0.8667;0.8654;0.8938;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
MLPClassifier;0.76;0.7719;0.76;0.7612;0.8551;0.8632;0.8551;0.8537;0.85;0.879;0.85;0.852;0.9031;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
MLPClassifier;0.7746;0.7904;0.7746;0.776;0.7681;0.7879;0.7681;0.7692;0.85;0.8599;0.85;0.8507;0.9126;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
SVC;0.7456;0.7734;0.7456;0.7472;0.8551;0.8568;0.8551;0.8557;0.85;0.8686;0.85;0.8504;0.8716;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
SVC;0.7536;0.7858;0.7536;0.7564;0.8116;0.8386;0.8116;0.8111;0.85;0.8686;0.85;0.8504;0.8829;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 127};SVC(C=10, probability=True, random_state=127)
MLPClassifier;0.7551;0.7633;0.7551;0.7553;0.8116;0.8233;0.8116;0.8137;0.85;0.8686;0.85;0.8504;0.9082;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
SVC;0.7455;0.772;0.7455;0.7474;0.8841;0.8887;0.8841;0.8852;0.85;0.8686;0.85;0.8504;0.8742;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 681};SVC(C=10, probability=True, random_state=681)
SVC;0.7698;0.7983;0.7698;0.7719;0.7971;0.819;0.7971;0.7984;0.85;0.8686;0.85;0.8504;0.8802;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 925};SVC(C=10, probability=True, random_state=925)
MLPClassifier;0.7616;0.7775;0.7616;0.7628;0.7536;0.7773;0.7536;0.754;0.85;0.8678;0.85;0.85;0.915;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.7633;0.7767;0.7633;0.7643;0.8116;0.8158;0.8116;0.813;0.85;0.8678;0.85;0.85;0.9089;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
MLPClassifier;0.7811;0.7927;0.7811;0.7819;0.7681;0.8053;0.7681;0.7734;0.85;0.8678;0.85;0.85;0.9048;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
MLPClassifier;0.7729;0.7853;0.7729;0.7735;0.7971;0.8033;0.7971;0.7983;0.85;0.8678;0.85;0.85;0.9035;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
DecisionTreeClassifier;0.8438;0.8477;0.8438;0.8434;0.8261;0.8232;0.8261;0.8214;0.85;0.8544;0.85;0.8499;0.8826;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=861)
DecisionTreeClassifier;0.8631;0.8656;0.8631;0.8628;0.8116;0.8202;0.8116;0.8097;0.85;0.8544;0.85;0.8499;0.8973;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=861)
DecisionTreeClassifier;0.8437;0.8491;0.8437;0.8427;0.8696;0.8677;0.8696;0.8675;0.85;0.8505;0.85;0.8489;0.8828;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=588)
MLPClassifier;0.757;0.7704;0.757;0.7574;0.913;0.9142;0.913;0.9133;0.85;0.8627;0.85;0.8483;0.905;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
MLPClassifier;0.7651;0.777;0.7651;0.766;0.7681;0.7711;0.7681;0.7674;0.8333;0.8577;0.8333;0.8352;0.9084;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
MLPClassifier;0.7681;0.7809;0.7681;0.7687;0.8261;0.8385;0.8261;0.8269;0.8333;0.8577;0.8333;0.8352;0.9052;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
DecisionTreeClassifier;0.8599;0.8632;0.8599;0.8597;0.8261;0.8261;0.8261;0.8252;0.8333;0.8426;0.8333;0.8341;0.8952;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 2};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=2)
MLPClassifier;0.7826;0.8005;0.7826;0.784;0.7246;0.73;0.7246;0.7256;0.8333;0.8405;0.8333;0.8338;0.9128;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.7729;0.7909;0.7729;0.7742;0.7681;0.7772;0.7681;0.7679;0.8333;0.857;0.8333;0.8324;0.9115;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
MLPClassifier;0.7712;0.7817;0.7712;0.7715;0.8406;0.8681;0.8406;0.843;0.8333;0.8599;0.8333;0.8321;0.9073;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
MLPClassifier;0.7745;0.7868;0.7745;0.775;0.7681;0.7716;0.7681;0.7613;0.8333;0.8396;0.8333;0.8318;0.9093;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
MLPClassifier;0.768;0.7883;0.768;0.7686;0.8551;0.8551;0.8551;0.8551;0.8333;0.8511;0.8333;0.8305;0.9064;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.7681;0.7796;0.7681;0.7689;0.7826;0.7948;0.7826;0.7838;0.8333;0.8511;0.8333;0.8305;0.91;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.7746;0.7875;0.7746;0.7738;0.7246;0.7242;0.7246;0.7237;0.8333;0.8511;0.8333;0.8305;0.9114;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 121, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=121)
MLPClassifier;0.7699;0.7849;0.7699;0.771;0.7826;0.7828;0.7826;0.7809;0.8333;0.8511;0.8333;0.8305;0.9123;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.765;0.7803;0.765;0.7648;0.7971;0.8007;0.7971;0.7986;0.8167;0.8373;0.8167;0.8184;0.9034;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 63, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=63)
MLPClassifier;0.7826;0.7941;0.7826;0.7821;0.7826;0.7834;0.7826;0.7809;0.8167;0.8278;0.8167;0.8168;0.9081;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
MLPClassifier;0.7715;0.7829;0.7715;0.7718;0.7391;0.7614;0.7391;0.7416;0.8167;0.8278;0.8167;0.8168;0.9113;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 270, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=270)
LogisticRegression;0.6989;0.7203;0.6989;0.6974;0.7246;0.7314;0.7246;0.7211;0.75;0.7754;0.75;0.752;0.8721;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7344;0.7652;0.7344;0.7353;0.6522;0.7148;0.6522;0.6591;0.7333;0.7666;0.7333;0.7405;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7247;0.7559;0.7247;0.7262;0.7246;0.7863;0.7246;0.7334;0.7333;0.7702;0.7333;0.7383;0.8756;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7085;0.7389;0.7085;0.7087;0.6957;0.7049;0.6957;0.6956;0.7333;0.7635;0.7333;0.7373;0.8721;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7247;0.7513;0.7247;0.7259;0.7391;0.7768;0.7391;0.7421;0.7167;0.7518;0.7167;0.7223;0.8761;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7279;0.7582;0.7279;0.7296;0.7536;0.7821;0.7536;0.7575;0.7167;0.7518;0.7167;0.7223;0.8739;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7247;0.7611;0.7247;0.7262;0.7101;0.7301;0.7101;0.7143;0.7167;0.7518;0.7167;0.7223;0.8751;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.7262;0.7551;0.7262;0.7283;0.7391;0.7648;0.7391;0.7359;0.7167;0.7518;0.7167;0.7223;0.8755;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.7183;0.7445;0.7183;0.7183;0.6957;0.7015;0.6957;0.6966;0.7;0.7343;0.7;0.7062;0.8684;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7375;0.7658;0.7375;0.7368;0.6087;0.6276;0.6087;0.6097;0.7;0.7343;0.7;0.7062;0.8841;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7198;0.7497;0.7198;0.72;0.7246;0.7465;0.7246;0.7275;0.7;0.7343;0.7;0.7062;0.8746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7263;0.7505;0.7263;0.7268;0.6957;0.7298;0.6957;0.6949;0.7;0.7343;0.7;0.7062;0.8781;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7215;0.7524;0.7215;0.7212;0.7101;0.7128;0.7101;0.7098;0.7;0.7343;0.7;0.7062;0.8757;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.7279;0.7591;0.7279;0.7288;0.7391;0.7698;0.7391;0.7393;0.7;0.7343;0.7;0.7062;0.8758;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.7182;0.7419;0.7182;0.7205;0.7536;0.8148;0.7536;0.7556;0.7;0.7343;0.7;0.7062;0.8747;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.71;0.741;0.71;0.7114;0.7826;0.7823;0.7826;0.7822;0.7;0.7343;0.7;0.7062;0.8658;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7055;0.7382;0.7055;0.7052;0.7391;0.7562;0.7391;0.7421;0.7;0.7343;0.7;0.7062;0.8703;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.7248;0.7566;0.7248;0.726;0.6957;0.7277;0.6957;0.6941;0.7;0.7343;0.7;0.7062;0.8733;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.723;0.7524;0.723;0.7245;0.6812;0.6896;0.6812;0.683;0.7;0.7368;0.7;0.7038;0.8739;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.7182;0.7443;0.7182;0.7169;0.6522;0.6585;0.6522;0.6489;0.6833;0.7174;0.6833;0.69;0.8774;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7166;0.7426;0.7166;0.7175;0.6812;0.7188;0.6812;0.6833;0.6833;0.7174;0.6833;0.69;0.8753;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.7247;0.7569;0.7247;0.7251;0.7246;0.7272;0.7246;0.7243;0.6833;0.7174;0.6833;0.69;0.8746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7182;0.7494;0.7182;0.72;0.7536;0.7588;0.7536;0.7514;0.6833;0.7174;0.6833;0.69;0.8695;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.723;0.7479;0.723;0.7229;0.7681;0.797;0.7681;0.7659;0.6833;0.7253;0.6833;0.6892;0.8725;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7036;0.7357;0.7036;0.705;0.7971;0.8213;0.7971;0.8009;0.6833;0.7253;0.6833;0.6892;0.8633;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.707;0.7377;0.707;0.7063;0.7826;0.8297;0.7826;0.7848;0.6667;0.7083;0.6667;0.6731;0.8726;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7118;0.7442;0.7118;0.7133;0.7101;0.7302;0.7101;0.7103;0.6667;0.7083;0.6667;0.6731;0.8706;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 77, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=77)"
LogisticRegression;0.7247;0.7573;0.7247;0.7264;0.7101;0.7599;0.7101;0.7131;0.6667;0.7165;0.6667;0.6717;0.8733;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7134;0.7466;0.7134;0.7142;0.6522;0.6969;0.6522;0.6551;0.6667;0.7165;0.6667;0.6717;0.873;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 574, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=574)"
LogisticRegression;0.7071;0.7336;0.7071;0.7073;0.7391;0.7576;0.7391;0.7407;0.6667;0.6985;0.6667;0.6715;0.8735;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
