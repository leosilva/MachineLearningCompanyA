Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9336;0.9367;0.9336;0.9336;0.9028;0.903;0.9028;0.9027;0.8833;0.8884;0.8833;0.8834;0.9797;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.9213;0.9229;0.9213;0.9213;0.9514;0.9576;0.9514;0.9516;0.8833;0.8884;0.8833;0.8834;0.9687;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.9321;0.9339;0.9321;0.9319;0.9306;0.9335;0.9306;0.9294;0.8833;0.8884;0.8833;0.8834;0.9746;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
KNeighborsClassifier;0.8765;0.8802;0.8765;0.8765;0.9028;0.913;0.9028;0.9037;0.8833;0.884;0.8833;0.8833;0.9622;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9251;0.9281;0.9251;0.9253;0.9236;0.9295;0.9236;0.923;0.8833;0.8891;0.8833;0.8829;0.9701;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9297;0.9312;0.9297;0.9298;0.9583;0.9587;0.9583;0.9583;0.8833;0.8891;0.8833;0.8829;0.9687;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9167;0.9197;0.9167;0.9168;0.9514;0.9516;0.9514;0.9512;0.8833;0.8966;0.8833;0.8819;0.9716;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.922;0.925;0.922;0.9223;0.9375;0.9374;0.9375;0.9373;0.8833;0.8966;0.8833;0.8819;0.9726;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.9182;0.9225;0.9182;0.9185;0.9375;0.9434;0.9375;0.9372;0.8667;0.8759;0.8667;0.8668;0.968;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
MLPClassifier;0.8935;0.9026;0.8935;0.8934;0.8819;0.8872;0.8819;0.8826;0.8667;0.875;0.8667;0.8668;0.9726;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
DecisionTreeClassifier;0.9228;0.9261;0.9228;0.9228;0.9236;0.9257;0.9236;0.9235;0.8667;0.875;0.8667;0.8668;0.9702;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
RandomForestClassifier;0.9259;0.927;0.9259;0.9258;0.9236;0.9261;0.9236;0.9241;0.8667;0.8673;0.8667;0.8666;0.9843;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 123};RandomForestClassifier(n_estimators=5, random_state=123)
KNeighborsClassifier;0.8773;0.8798;0.8773;0.877;0.9167;0.9225;0.9167;0.9174;0.8667;0.869;0.8667;0.8664;0.9612;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8688;0.8833;0.8688;0.8698;0.9444;0.9505;0.9444;0.9446;0.8667;0.869;0.8667;0.8664;0.9645;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
KNeighborsClassifier;0.8711;0.8736;0.8711;0.8712;0.9167;0.9229;0.9167;0.9175;0.8667;0.869;0.8667;0.8664;0.9606;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8765;0.8797;0.8765;0.8762;0.9097;0.9093;0.9097;0.9094;0.8667;0.869;0.8667;0.8664;0.9607;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8711;0.8743;0.8711;0.8712;0.9097;0.9118;0.9097;0.9088;0.8667;0.869;0.8667;0.8664;0.9608;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9259;0.9282;0.9259;0.926;0.9444;0.9442;0.9444;0.9441;0.8667;0.8829;0.8667;0.8663;0.9831;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 480};RandomForestClassifier(n_estimators=10, random_state=480)
RandomForestClassifier;0.9321;0.9333;0.9321;0.932;0.8819;0.8816;0.8819;0.8817;0.8667;0.8829;0.8667;0.8663;0.9858;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 473};RandomForestClassifier(n_estimators=5, random_state=473)
RandomForestClassifier;0.9306;0.9334;0.9306;0.9306;0.8958;0.8978;0.8958;0.8964;0.8667;0.8829;0.8667;0.8663;0.9847;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 123};RandomForestClassifier(n_estimators=10, random_state=123)
KNeighborsClassifier;0.8843;0.8859;0.8843;0.8841;0.8889;0.888;0.8889;0.888;0.8667;0.8677;0.8667;0.8661;0.9589;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8704;0.8738;0.8704;0.8706;0.9236;0.9279;0.9236;0.9246;0.8667;0.8677;0.8667;0.8661;0.962;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8859;0.8884;0.8859;0.8857;0.9306;0.9355;0.9306;0.9302;0.8667;0.8677;0.8667;0.8661;0.9588;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.872;0.8741;0.872;0.8717;0.9028;0.9051;0.9028;0.9018;0.8667;0.8677;0.8667;0.8661;0.9601;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8742;0.8761;0.8742;0.8735;0.9028;0.9056;0.9028;0.9036;0.8667;0.8677;0.8667;0.8661;0.9611;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8658;0.8689;0.8658;0.8656;0.9375;0.9374;0.9375;0.9372;0.8667;0.8677;0.8667;0.8661;0.957;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8734;0.876;0.8734;0.8733;0.9236;0.926;0.9236;0.9242;0.8667;0.8677;0.8667;0.8661;0.9561;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8696;0.8733;0.8696;0.8692;0.9167;0.921;0.9167;0.9171;0.8667;0.8677;0.8667;0.8661;0.9637;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8734;0.8773;0.8734;0.8734;0.8958;0.9028;0.8958;0.8973;0.8667;0.8677;0.8667;0.8661;0.9614;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8804;0.8839;0.8804;0.8802;0.9097;0.918;0.9097;0.9106;0.8667;0.8677;0.8667;0.8661;0.9631;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8789;0.8832;0.8789;0.8787;0.875;0.8883;0.875;0.8746;0.8667;0.8677;0.8667;0.8661;0.9584;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8719;0.8759;0.8719;0.8719;0.9167;0.9218;0.9167;0.9169;0.8667;0.8677;0.8667;0.8661;0.9606;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8742;0.8784;0.8742;0.8741;0.9375;0.9474;0.9375;0.9376;0.8667;0.8677;0.8667;0.8661;0.9589;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8612;0.8659;0.8612;0.8608;0.9444;0.947;0.9444;0.9446;0.8667;0.8677;0.8667;0.8661;0.9568;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.872;0.8729;0.872;0.8718;0.9097;0.9171;0.9097;0.911;0.8667;0.8677;0.8667;0.8661;0.9581;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8658;0.8681;0.8658;0.866;0.9236;0.9278;0.9236;0.9237;0.8667;0.8677;0.8667;0.8661;0.9603;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8827;0.885;0.8827;0.8826;0.9236;0.9279;0.9236;0.9238;0.8667;0.8677;0.8667;0.8661;0.9621;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8673;0.8711;0.8673;0.8672;0.9167;0.925;0.9167;0.9169;0.8667;0.8677;0.8667;0.8661;0.9596;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8642;0.867;0.8642;0.8637;0.875;0.8835;0.875;0.8748;0.8667;0.8677;0.8667;0.8661;0.9633;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9267;0.9298;0.9267;0.9268;0.9236;0.9238;0.9236;0.9235;0.8667;0.8814;0.8667;0.866;0.9829;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 473};RandomForestClassifier(n_estimators=5, random_state=473)
MLPClassifier;0.8997;0.9119;0.8997;0.9;0.9028;0.9064;0.9028;0.9035;0.8667;0.8699;0.8667;0.8659;0.9734;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
MLPClassifier;0.8928;0.8971;0.8928;0.8928;0.9167;0.9204;0.9167;0.9158;0.8667;0.8699;0.8667;0.8659;0.969;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
MLPClassifier;0.8781;0.8877;0.8781;0.8779;0.9167;0.9184;0.9167;0.9161;0.8667;0.8699;0.8667;0.8659;0.9695;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
MLPClassifier;0.8781;0.8906;0.8781;0.879;0.8333;0.833;0.8333;0.8326;0.8667;0.8699;0.8667;0.8659;0.9658;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
DecisionTreeClassifier;0.9213;0.9231;0.9213;0.921;0.9653;0.9655;0.9653;0.9651;0.8667;0.8731;0.8667;0.8651;0.9685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
RandomForestClassifier;0.9298;0.9312;0.9298;0.9299;0.9236;0.9267;0.9236;0.9232;0.8667;0.8731;0.8667;0.8651;0.9864;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 123};RandomForestClassifier(n_estimators=20, random_state=123)
MLPClassifier;0.8812;0.8968;0.8812;0.882;0.9097;0.9124;0.9097;0.9086;0.8667;0.8736;0.8667;0.865;0.9637;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
DecisionTreeClassifier;0.9267;0.93;0.9267;0.9266;0.9236;0.9255;0.9236;0.924;0.85;0.8611;0.85;0.8517;0.969;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9174;0.9204;0.9174;0.9171;0.9375;0.9397;0.9375;0.9373;0.85;0.8611;0.85;0.8517;0.9688;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9252;0.9272;0.9252;0.9253;0.9028;0.9138;0.9028;0.9015;0.85;0.8611;0.85;0.8517;0.9726;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9229;0.9242;0.9229;0.9228;0.9167;0.9198;0.9167;0.9168;0.85;0.8611;0.85;0.8517;0.9702;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9236;0.9258;0.9236;0.9238;0.9375;0.9421;0.9375;0.9381;0.85;0.8611;0.85;0.8517;0.9704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
DecisionTreeClassifier;0.9228;0.9251;0.9228;0.9227;0.9514;0.9521;0.9514;0.9515;0.85;0.8611;0.85;0.8517;0.9706;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
DecisionTreeClassifier;0.9275;0.9316;0.9275;0.9276;0.8958;0.913;0.8958;0.8972;0.85;0.8611;0.85;0.8517;0.9735;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.9198;0.9232;0.9198;0.9199;0.9167;0.9241;0.9167;0.9167;0.85;0.8611;0.85;0.8517;0.9688;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
MLPClassifier;0.9012;0.9096;0.9012;0.9018;0.8889;0.9025;0.8889;0.8868;0.85;0.8545;0.85;0.8511;0.9711;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
RandomForestClassifier;0.9251;0.9275;0.9251;0.9251;0.9444;0.9449;0.9444;0.9446;0.85;0.8669;0.85;0.8505;0.984;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
DecisionTreeClassifier;0.9359;0.937;0.9359;0.9359;0.8958;0.8961;0.8958;0.8959;0.85;0.8625;0.85;0.8505;0.9716;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
DecisionTreeClassifier;0.9213;0.924;0.9213;0.9212;0.9167;0.9213;0.9167;0.9153;0.85;0.8625;0.85;0.8505;0.9686;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.929;0.9306;0.929;0.929;0.9236;0.9233;0.9236;0.9232;0.85;0.8625;0.85;0.8505;0.9739;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9367;0.938;0.9367;0.9367;0.8958;0.8979;0.8958;0.8942;0.85;0.8625;0.85;0.8505;0.9769;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
DecisionTreeClassifier;0.9282;0.9303;0.9282;0.9282;0.9236;0.923;0.9236;0.9232;0.85;0.8625;0.85;0.8505;0.9725;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
RandomForestClassifier;0.9282;0.9301;0.9282;0.928;0.9167;0.9219;0.9167;0.9165;0.85;0.8554;0.85;0.8504;0.9844;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 123};RandomForestClassifier(n_estimators=10, random_state=123)
MLPClassifier;0.8788;0.8937;0.8788;0.8794;0.9306;0.9357;0.9306;0.9302;0.85;0.8554;0.85;0.8504;0.9634;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
MLPClassifier;0.8819;0.8902;0.8819;0.8824;0.875;0.8766;0.875;0.8746;0.85;0.85;0.85;0.85;0.9655;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8788;0.889;0.8788;0.8787;0.9236;0.9272;0.9236;0.9238;0.85;0.8524;0.85;0.8497;0.9632;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
RandomForestClassifier;0.9337;0.9348;0.9337;0.9336;0.8958;0.8955;0.8958;0.8952;0.85;0.8591;0.85;0.8495;0.9837;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 480};RandomForestClassifier(n_estimators=20, random_state=480)
RandomForestClassifier;0.9244;0.9264;0.9244;0.9242;0.9653;0.9654;0.9653;0.9653;0.85;0.8591;0.85;0.8495;0.9835;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 480};RandomForestClassifier(n_estimators=20, random_state=480)
RandomForestClassifier;0.9283;0.9304;0.9283;0.9282;0.9306;0.9305;0.9306;0.9302;0.85;0.8591;0.85;0.8495;0.9841;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 480};RandomForestClassifier(n_estimators=10, random_state=480)
RandomForestClassifier;0.9229;0.9244;0.9229;0.9228;0.9514;0.9525;0.9514;0.9517;0.85;0.8591;0.85;0.8495;0.9826;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 480};RandomForestClassifier(n_estimators=10, random_state=480)
RandomForestClassifier;0.9321;0.9345;0.9321;0.9321;0.9028;0.9079;0.9028;0.9039;0.85;0.8591;0.85;0.8495;0.9848;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 123};RandomForestClassifier(n_estimators=20, random_state=123)
RandomForestClassifier;0.9274;0.9299;0.9274;0.9274;0.9097;0.9119;0.9097;0.9103;0.85;0.8591;0.85;0.8495;0.9833;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 473};RandomForestClassifier(n_estimators=5, random_state=473)
RandomForestClassifier;0.9213;0.9228;0.9213;0.9213;0.9306;0.9331;0.9306;0.9308;0.85;0.8591;0.85;0.8495;0.9844;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 123};RandomForestClassifier(n_estimators=10, random_state=123)
RandomForestClassifier;0.9298;0.931;0.9298;0.9298;0.9028;0.9039;0.9028;0.9027;0.85;0.8591;0.85;0.8495;0.9834;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 123};RandomForestClassifier(n_estimators=10, random_state=123)
RandomForestClassifier;0.929;0.9301;0.929;0.9287;0.9514;0.9525;0.9514;0.9513;0.85;0.8591;0.85;0.8495;0.9841;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 123};RandomForestClassifier(n_estimators=5, random_state=123)
RandomForestClassifier;0.9213;0.9235;0.9213;0.921;0.9514;0.9524;0.9514;0.951;0.85;0.8591;0.85;0.8495;0.982;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 123};RandomForestClassifier(n_estimators=20, random_state=123)
RandomForestClassifier;0.9275;0.9292;0.9275;0.9273;0.9306;0.9314;0.9306;0.9307;0.85;0.8591;0.85;0.8495;0.9807;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9305;0.9317;0.9305;0.9305;0.9167;0.9171;0.9167;0.9156;0.85;0.8591;0.85;0.8495;0.9847;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
RandomForestClassifier;0.9229;0.9255;0.9229;0.9229;0.9514;0.9514;0.9514;0.9513;0.85;0.8591;0.85;0.8495;0.9847;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9313;0.9323;0.9313;0.931;0.9306;0.9351;0.9306;0.9308;0.85;0.8591;0.85;0.8495;0.9847;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
RandomForestClassifier;0.9182;0.9224;0.9182;0.9179;0.9514;0.952;0.9514;0.9512;0.85;0.8591;0.85;0.8495;0.9845;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
RandomForestClassifier;0.9275;0.9302;0.9275;0.9274;0.9306;0.9305;0.9306;0.9296;0.85;0.8591;0.85;0.8495;0.9841;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.926;0.927;0.926;0.9259;0.9375;0.9388;0.9375;0.9373;0.85;0.8591;0.85;0.8495;0.985;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 480};RandomForestClassifier(n_estimators=20, random_state=480)
RandomForestClassifier;0.9259;0.9274;0.9259;0.9259;0.9514;0.9531;0.9514;0.9514;0.85;0.8591;0.85;0.8495;0.9839;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 480};RandomForestClassifier(n_estimators=10, random_state=480)
MLPClassifier;0.8773;0.8872;0.8773;0.8773;0.9444;0.9447;0.9444;0.9445;0.85;0.858;0.85;0.8492;0.9639;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
RandomForestClassifier;0.9267;0.9282;0.9267;0.9267;0.9236;0.9255;0.9236;0.9236;0.85;0.858;0.85;0.8492;0.9833;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 123};RandomForestClassifier(n_estimators=5, random_state=123)
MLPClassifier;0.8796;0.8899;0.8796;0.8801;0.8958;0.9029;0.8958;0.896;0.85;0.8577;0.85;0.8488;0.9655;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
KNeighborsClassifier;0.8689;0.8707;0.8689;0.8688;0.9167;0.9206;0.9167;0.9172;0.85;0.8526;0.85;0.8487;0.9598;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9305;0.9337;0.9305;0.9307;0.8958;0.8953;0.8958;0.8954;0.85;0.8526;0.85;0.8487;0.9839;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 480};RandomForestClassifier(n_estimators=10, random_state=480)
KNeighborsClassifier;0.8819;0.8839;0.8819;0.8818;0.8889;0.8905;0.8889;0.8883;0.85;0.8526;0.85;0.8487;0.9628;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8633;0.8661;0.8633;0.8626;0.8889;0.8965;0.8889;0.8895;0.85;0.8526;0.85;0.8487;0.9623;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9167;0.9203;0.9167;0.9167;0.9375;0.941;0.9375;0.9372;0.85;0.8599;0.85;0.8473;0.9684;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
MLPClassifier;0.8858;0.8963;0.8858;0.8864;0.9375;0.9402;0.9375;0.9374;0.85;0.8607;0.85;0.8472;0.9675;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8882;0.901;0.8882;0.8885;0.9375;0.9382;0.9375;0.9372;0.85;0.8607;0.85;0.8472;0.9641;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
KNeighborsClassifier;0.8765;0.8805;0.8765;0.876;0.9167;0.9218;0.9167;0.9169;0.85;0.8592;0.85;0.847;0.9611;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8781;0.8803;0.8781;0.8781;0.9028;0.9022;0.9028;0.9024;0.85;0.8592;0.85;0.847;0.9595;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8835;0.8989;0.8835;0.8842;0.8819;0.899;0.8819;0.8791;0.8333;0.8496;0.8333;0.8363;0.965;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
DecisionTreeClassifier;0.9205;0.9243;0.9205;0.9206;0.9375;0.9375;0.9375;0.9374;0.8333;0.8489;0.8333;0.8352;0.9729;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9229;0.9245;0.9229;0.9229;0.9375;0.9454;0.9375;0.9371;0.8333;0.8489;0.8333;0.8352;0.9696;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
MLPClassifier;0.8904;0.8982;0.8904;0.8906;0.9167;0.9203;0.9167;0.9168;0.8333;0.8391;0.8333;0.8348;0.9734;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
MLPClassifier;0.8727;0.8875;0.8727;0.8727;0.8819;0.8877;0.8819;0.8832;0.8333;0.8391;0.8333;0.8348;0.9668;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
MLPClassifier;0.892;0.9037;0.892;0.8926;0.8889;0.9021;0.8889;0.8888;0.8333;0.8458;0.8333;0.8338;0.9661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
MLPClassifier;0.8688;0.8842;0.8688;0.8693;0.9028;0.904;0.9028;0.9029;0.8333;0.8348;0.8333;0.8337;0.9682;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
MLPClassifier;0.8782;0.8913;0.8782;0.8789;0.8958;0.9033;0.8958;0.896;0.8333;0.8348;0.8333;0.8337;0.964;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
DecisionTreeClassifier;0.9321;0.9343;0.9321;0.9322;0.9028;0.9026;0.9028;0.9022;0.8333;0.8511;0.8333;0.8333;0.973;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.9329;0.9342;0.9329;0.9328;0.8889;0.8885;0.8889;0.8884;0.8333;0.8511;0.8333;0.8333;0.9758;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)
DecisionTreeClassifier;0.9282;0.9299;0.9282;0.9281;0.9097;0.9102;0.9097;0.9095;0.8333;0.8511;0.8333;0.8333;0.9705;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
RandomForestClassifier;0.9236;0.9256;0.9236;0.9237;0.9167;0.9273;0.9167;0.9172;0.8333;0.8383;0.8333;0.8327;0.9851;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 480};RandomForestClassifier(n_estimators=10, random_state=480)
RandomForestClassifier;0.9283;0.9312;0.9283;0.9284;0.9236;0.9238;0.9236;0.9228;0.8333;0.8371;0.8333;0.8307;0.9846;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 480};RandomForestClassifier(n_estimators=5, random_state=480)
DecisionTreeClassifier;0.9213;0.9239;0.9213;0.9214;0.9167;0.9174;0.9167;0.9164;0.8167;0.8386;0.8167;0.8194;0.9749;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 583};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=583)
MLPClassifier;0.8773;0.8902;0.8773;0.8777;0.8819;0.8967;0.8819;0.8827;0.8167;0.8386;0.8167;0.8194;0.9632;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.885;0.8962;0.885;0.8857;0.8819;0.8952;0.8819;0.8826;0.8167;0.8401;0.8167;0.8181;0.9696;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8673;0.8833;0.8673;0.8671;0.9306;0.9312;0.9306;0.93;0.8167;0.8189;0.8167;0.8174;0.9569;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
MLPClassifier;0.8788;0.8934;0.8788;0.8793;0.9167;0.927;0.9167;0.9173;0.8167;0.8224;0.8167;0.8173;0.9684;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 652, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=652)
MLPClassifier;0.8896;0.9006;0.8896;0.8902;0.875;0.8858;0.875;0.8747;0.8167;0.8238;0.8167;0.8155;0.9678;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
KNeighborsClassifier;0.8695;0.8726;0.8695;0.8689;0.9444;0.9447;0.9444;0.9445;0.8167;0.8165;0.8167;0.8135;0.954;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8835;0.8951;0.8835;0.8844;0.9236;0.9354;0.9236;0.9235;0.8;0.821;0.8;0.8018;0.964;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
MLPClassifier;0.8804;0.8932;0.8804;0.881;0.875;0.8981;0.875;0.8781;0.8;0.8102;0.8;0.8014;0.9649;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
MLPClassifier;0.8681;0.8846;0.8681;0.8677;0.9236;0.935;0.9236;0.9246;0.7833;0.7994;0.7833;0.7834;0.9604;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 226, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=226)
MLPClassifier;0.8942;0.9041;0.8942;0.8944;0.8542;0.8667;0.8542;0.8543;0.7833;0.8007;0.7833;0.781;0.9689;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
SVC;0.642;0.7163;0.642;0.6315;0.7986;0.8193;0.7986;0.8014;0.7333;0.7406;0.7333;0.7346;0.8104;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.6366;0.7103;0.6366;0.626;0.8542;0.8634;0.8542;0.8565;0.7333;0.7406;0.7333;0.7346;0.8048;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6467;0.7191;0.6467;0.6367;0.7153;0.7401;0.7153;0.7191;0.7167;0.7254;0.7167;0.7188;0.8095;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6427;0.7212;0.6427;0.6325;0.8056;0.8275;0.8056;0.8076;0.7167;0.7254;0.7167;0.7188;0.8076;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.6397;0.7168;0.6397;0.6277;0.8264;0.8476;0.8264;0.8295;0.7167;0.7254;0.7167;0.7188;0.8074;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
LogisticRegression;0.7994;0.8127;0.7994;0.8004;0.7361;0.7618;0.7361;0.7382;0.7167;0.7299;0.7167;0.7187;0.9241;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
SVC;0.632;0.7089;0.632;0.6208;0.8194;0.8312;0.8194;0.822;0.7167;0.7233;0.7167;0.7176;0.7973;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.642;0.717;0.642;0.6299;0.8056;0.8333;0.8056;0.8104;0.7167;0.7233;0.7167;0.7176;0.8093;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.6412;0.717;0.6412;0.6313;0.7778;0.7964;0.7778;0.7808;0.7167;0.7233;0.7167;0.7176;0.8096;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.6482;0.7216;0.6482;0.6382;0.7847;0.8072;0.7847;0.7878;0.7167;0.7233;0.7167;0.7176;0.8094;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
SVC;0.6366;0.7128;0.6366;0.6266;0.8056;0.8189;0.8056;0.8043;0.7167;0.7233;0.7167;0.7176;0.8061;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
SVC;0.6358;0.7136;0.6358;0.6246;0.8542;0.8582;0.8542;0.8556;0.7167;0.7233;0.7167;0.7176;0.801;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6404;0.7181;0.6404;0.63;0.8264;0.8444;0.8264;0.8296;0.7167;0.7233;0.7167;0.7176;0.8099;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
LogisticRegression;0.7855;0.8018;0.7855;0.7866;0.8472;0.8518;0.8472;0.8485;0.7;0.7139;0.7;0.7017;0.9172;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.794;0.8106;0.794;0.7963;0.7917;0.8067;0.7917;0.7961;0.7;0.7139;0.7;0.7017;0.92;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.7955;0.8114;0.7955;0.7986;0.7847;0.7977;0.7847;0.7887;0.7;0.7139;0.7;0.7017;0.9218;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7715;0.7835;0.7715;0.7723;0.8194;0.826;0.8194;0.8216;0.7;0.7139;0.7;0.7017;0.9199;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.787;0.8021;0.787;0.7892;0.8056;0.8141;0.8056;0.8086;0.7;0.7139;0.7;0.7017;0.92;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.7832;0.799;0.7832;0.7857;0.8125;0.8209;0.8125;0.8151;0.7;0.7139;0.7;0.7017;0.9204;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.7979;0.8131;0.7979;0.8004;0.8125;0.8259;0.8125;0.8148;0.7;0.7139;0.7;0.7017;0.9205;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.7855;0.7979;0.7855;0.7861;0.7639;0.7849;0.7639;0.7686;0.7;0.7139;0.7;0.7017;0.9211;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
SVC;0.6504;0.722;0.6504;0.64;0.7292;0.7509;0.7292;0.7288;0.7;0.7074;0.7;0.7013;0.8111;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6319;0.7099;0.6319;0.6211;0.8264;0.8311;0.8264;0.8277;0.7;0.7074;0.7;0.7013;0.8005;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
SVC;0.6359;0.7123;0.6359;0.624;0.7847;0.7977;0.7847;0.7872;0.7;0.7074;0.7;0.7013;0.806;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6366;0.7132;0.6366;0.6242;0.7917;0.8098;0.7917;0.7946;0.7;0.7074;0.7;0.7013;0.8034;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 709};SVC(C=1, kernel='linear', probability=True, random_state=709)
SVC;0.635;0.7115;0.635;0.6219;0.8194;0.8294;0.8194;0.8221;0.7;0.7064;0.7;0.7003;0.8013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.6404;0.7145;0.6404;0.629;0.7708;0.7983;0.7708;0.7753;0.7;0.7064;0.7;0.7003;0.8071;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.6367;0.7106;0.6367;0.6225;0.7986;0.8187;0.7986;0.8017;0.7;0.7064;0.7;0.7003;0.8071;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
SVC;0.6357;0.7113;0.6357;0.625;0.7778;0.8018;0.7778;0.7797;0.7;0.7064;0.7;0.7003;0.8018;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6404;0.7192;0.6404;0.6299;0.7778;0.8099;0.7778;0.7785;0.7;0.7064;0.7;0.7003;0.8051;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 514};SVC(C=1, kernel='linear', probability=True, random_state=514)
SVC;0.6397;0.7178;0.6397;0.6274;0.8125;0.8315;0.8125;0.8159;0.7;0.7064;0.7;0.7003;0.8033;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6351;0.7115;0.6351;0.6221;0.8333;0.8458;0.8333;0.8355;0.7;0.7064;0.7;0.7003;0.8034;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6435;0.7178;0.6435;0.6315;0.8194;0.8384;0.8194;0.8229;0.7;0.7064;0.7;0.7003;0.8053;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
SVC;0.6358;0.7131;0.6358;0.6245;0.8056;0.8205;0.8056;0.8064;0.7;0.7064;0.7;0.7003;0.8056;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 428};SVC(C=10, kernel='linear', probability=True, random_state=428)
SVC;0.6336;0.7113;0.6336;0.6201;0.8056;0.8173;0.8056;0.8081;0.7;0.7064;0.7;0.7003;0.8046;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 514};SVC(C=1, kernel='linear', probability=True, random_state=514)
SVC;0.6381;0.7136;0.6381;0.6278;0.7847;0.796;0.7847;0.7873;0.7;0.7064;0.7;0.7003;0.8059;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
SVC;0.6358;0.7117;0.6358;0.624;0.8264;0.852;0.8264;0.8288;0.7;0.7064;0.7;0.7003;0.8051;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
SVC;0.642;0.7184;0.642;0.6303;0.7847;0.8028;0.7847;0.7877;0.7;0.7064;0.7;0.7003;0.8064;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 514};SVC(C=10, kernel='linear', probability=True, random_state=514)
SVC;0.6435;0.7157;0.6435;0.6335;0.75;0.7714;0.75;0.7536;0.7;0.7064;0.7;0.7003;0.8082;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 709};SVC(C=10, kernel='linear', probability=True, random_state=709)
LogisticRegression;0.7863;0.7995;0.7863;0.7877;0.7917;0.799;0.7917;0.7944;0.6833;0.698;0.6833;0.6843;0.9197;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.7786;0.7932;0.7786;0.7792;0.8125;0.8244;0.8125;0.8149;0.6833;0.698;0.6833;0.6843;0.9202;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7825;0.8019;0.7825;0.7856;0.8125;0.8237;0.8125;0.8156;0.6833;0.698;0.6833;0.6843;0.9189;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7948;0.8111;0.7948;0.798;0.7847;0.8049;0.7847;0.788;0.6833;0.698;0.6833;0.6843;0.9225;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7777;0.7932;0.7777;0.7809;0.8542;0.8602;0.8542;0.8559;0.6833;0.698;0.6833;0.6843;0.919;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.7925;0.8091;0.7925;0.7957;0.7361;0.7605;0.7361;0.742;0.6833;0.698;0.6833;0.6843;0.9208;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.797;0.8094;0.797;0.798;0.75;0.7852;0.75;0.7545;0.6833;0.698;0.6833;0.6843;0.9228;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.7824;0.7965;0.7824;0.7843;0.7986;0.8127;0.7986;0.7959;0.6833;0.698;0.6833;0.6843;0.9212;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.7793;0.794;0.7793;0.7812;0.8333;0.8456;0.8333;0.8366;0.6833;0.698;0.6833;0.6843;0.9204;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.7901;0.8068;0.7901;0.7936;0.8056;0.8175;0.8056;0.809;0.6833;0.698;0.6833;0.6843;0.9185;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.784;0.7953;0.784;0.7847;0.7708;0.8064;0.7708;0.7731;0.6667;0.6889;0.6667;0.6729;0.9225;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.7693;0.7817;0.7693;0.7706;0.8125;0.843;0.8125;0.814;0.6667;0.6889;0.6667;0.6729;0.9195;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.7893;0.8009;0.7893;0.7905;0.7569;0.7952;0.7569;0.7599;0.65;0.6719;0.65;0.6567;0.9221;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7909;0.8057;0.7909;0.7928;0.7431;0.7755;0.7431;0.7436;0.65;0.6719;0.65;0.6567;0.9235;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.8033;0.8154;0.8033;0.8042;0.7153;0.7469;0.7153;0.7188;0.65;0.6719;0.65;0.6567;0.924;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7863;0.8008;0.7863;0.7888;0.7847;0.8014;0.7847;0.7825;0.65;0.6719;0.65;0.6567;0.9216;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7754;0.7865;0.7754;0.7753;0.7917;0.819;0.7917;0.7904;0.65;0.6719;0.65;0.6567;0.9211;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.7824;0.7982;0.7824;0.783;0.7708;0.7775;0.7708;0.7701;0.65;0.652;0.65;0.6507;0.9186;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.787;0.7974;0.787;0.7866;0.7431;0.756;0.7431;0.744;0.65;0.652;0.65;0.6507;0.9241;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 301, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=301)"
LogisticRegression;0.7909;0.8066;0.7909;0.7929;0.7917;0.7951;0.7917;0.7929;0.65;0.652;0.65;0.6507;0.9209;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 239, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=239)"
LogisticRegression;0.7847;0.7948;0.7847;0.784;0.7431;0.7506;0.7431;0.7436;0.65;0.65;0.65;0.65;0.9227;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
