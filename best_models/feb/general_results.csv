,Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
0,RandomForestClassifier,0.9617,0.9628,0.9617,0.9616,0.9711,0.9717,0.9711,0.971,0.8833,0.8884,0.8833,0.8834,0.9936,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 118}","RandomForestClassifier(n_estimators=20, random_state=118)"
1,KNeighborsClassifier,0.9477,0.9486,0.9477,0.9476,0.9575,0.9579,0.9575,0.9573,0.8833,0.8891,0.8833,0.8829,0.9807,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
2,MLPClassifier,0.9184,0.9224,0.9184,0.9185,0.9167,0.9213,0.9167,0.9168,0.8833,0.8903,0.8833,0.8808,0.9833,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 391, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=391)"
0,KNeighborsClassifier,0.9841,0.9844,0.9841,0.984,0.9836,0.9838,0.9836,0.9836,0.8833,0.9004,0.8833,0.8856,0.9948,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
1,RandomForestClassifier,0.9874,0.9876,0.9874,0.9874,0.9883,0.9884,0.9883,0.9883,0.8833,0.9004,0.8833,0.8856,0.9981,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 781}","RandomForestClassifier(n_estimators=20, random_state=781)"
0,RandomForestClassifier,0.9803,0.9806,0.9803,0.9802,0.9776,0.9777,0.9776,0.9776,0.8667,0.8906,0.8667,0.87,0.9965,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 882}","RandomForestClassifier(n_estimators=20, random_state=882)"
1,KNeighborsClassifier,0.9768,0.9772,0.9768,0.9767,0.976,0.9764,0.976,0.9758,0.8667,0.8833,0.8667,0.869,0.992,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
3,LogisticRegression,0.8682,0.8697,0.8682,0.8673,0.8741,0.8747,0.8741,0.8732,0.85,0.8508,0.85,0.849,0.9573,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 454, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=454)"
2,KNeighborsClassifier,0.946,0.9476,0.946,0.9459,0.9507,0.9518,0.9507,0.9506,0.85,0.8731,0.85,0.8498,0.9798,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
0,RandomForestClassifier,0.9329,0.9383,0.9329,0.933,0.9348,0.9348,0.9348,0.9343,0.85,0.8524,0.85,0.8497,0.9822,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 572}","RandomForestClassifier(n_estimators=20, random_state=572)"
0,KNeighborsClassifier,0.8882,0.8904,0.8882,0.8882,0.8827,0.8863,0.8827,0.8835,0.85,0.8652,0.85,0.8483,0.9657,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
0,RandomForestClassifier,0.9427,0.9452,0.9427,0.9427,0.934,0.9341,0.934,0.9339,0.85,0.8542,0.85,0.8506,0.9896,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 627}","RandomForestClassifier(n_estimators=20, random_state=627)"
1,RandomForestClassifier,0.898,0.901,0.898,0.8986,0.8997,0.9011,0.8997,0.9,0.85,0.8528,0.85,0.8482,0.9664,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 594}","RandomForestClassifier(n_estimators=10, random_state=594)"
0,KNeighborsClassifier,0.9132,0.9151,0.9132,0.9137,0.9157,0.9175,0.9157,0.9162,0.85,0.8599,0.85,0.8507,0.982,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
3,KNeighborsClassifier,0.9849,0.9852,0.9849,0.9849,0.9823,0.9824,0.9823,0.9822,0.85,0.8852,0.85,0.8518,0.9952,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
4,DecisionTreeClassifier,0.9617,0.9621,0.9617,0.9616,0.9605,0.9606,0.9605,0.9604,0.85,0.8634,0.85,0.8505,0.9911,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 600}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=600)"
2,LogisticRegression,0.8658,0.866,0.8658,0.8657,0.8596,0.8598,0.8596,0.8596,0.85,0.8634,0.85,0.8505,0.96,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 419, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=419)"
7,LogisticRegression,0.87,0.8701,0.87,0.8698,0.8691,0.8689,0.8691,0.8688,0.8333,0.8594,0.8333,0.8298,0.9616,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 458, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=458)"
8,MLPClassifier,0.8852,0.891,0.8852,0.8851,0.8605,0.8721,0.8605,0.861,0.8333,0.8361,0.8333,0.8315,0.9701,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 668, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=668)"
7,LogisticRegression,0.878,0.8785,0.878,0.8775,0.9048,0.9048,0.9048,0.9043,0.8333,0.8365,0.8333,0.8339,0.957,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
5,DecisionTreeClassifier,0.9584,0.959,0.9584,0.9584,0.9572,0.9578,0.9572,0.9571,0.8333,0.872,0.8333,0.838,0.9902,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)"
6,LogisticRegression,0.8644,0.8651,0.8644,0.864,0.8622,0.863,0.8622,0.8625,0.8333,0.8386,0.8333,0.8348,0.955,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
5,SVC,0.8839,0.8848,0.8839,0.8837,0.8946,0.8951,0.8946,0.8944,0.8333,0.8386,0.8333,0.8348,0.947,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 285}","SVC(C=10, kernel='linear', probability=True, random_state=285)"
4,DecisionTreeClassifier,0.9264,0.9278,0.9264,0.9265,0.932,0.9332,0.932,0.9318,0.8333,0.8581,0.8333,0.8369,0.9773,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)"
7,SVC,0.873,0.8743,0.873,0.8733,0.8663,0.8671,0.8663,0.8664,0.8333,0.8383,0.8333,0.831,0.9469,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 866}","SVC(C=10, kernel='linear', probability=True, random_state=866)"
1,RandomForestClassifier,0.9197,0.9209,0.9197,0.92,0.9244,0.9252,0.9244,0.9244,0.8333,0.8417,0.8333,0.832,0.979,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 719}","RandomForestClassifier(n_estimators=20, random_state=719)"
3,KNeighborsClassifier,0.9734,0.974,0.9734,0.9733,0.9765,0.9767,0.9765,0.9764,0.8333,0.8608,0.8333,0.8356,0.9903,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
1,RandomForestClassifier,0.9349,0.9374,0.9349,0.9348,0.9375,0.9376,0.9375,0.9375,0.8333,0.8383,0.8333,0.8327,0.982,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 963}","RandomForestClassifier(n_estimators=10, random_state=963)"
4,KNeighborsClassifier,0.9768,0.9773,0.9768,0.9767,0.9793,0.9795,0.9793,0.9792,0.8333,0.8769,0.8333,0.8349,0.9924,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
5,DecisionTreeClassifier,0.9571,0.9576,0.9571,0.957,0.9508,0.9511,0.9508,0.9508,0.8333,0.8444,0.8333,0.8345,0.9885,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 914}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=914)"
6,LogisticRegression,0.8641,0.8644,0.8641,0.8639,0.8563,0.8564,0.8563,0.8563,0.8333,0.8524,0.8333,0.8338,0.9605,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
0,DecisionTreeClassifier,0.8431,0.8532,0.8431,0.8453,0.8282,0.8393,0.8282,0.8314,0.8333,0.8342,0.8333,0.8323,0.9475,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 767}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=767)"
6,RandomForestClassifier,0.9858,0.9859,0.9858,0.9857,0.9853,0.9853,0.9853,0.9853,0.8333,0.8732,0.8333,0.8379,0.9978,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 73}","RandomForestClassifier(n_estimators=20, random_state=73)"
1,DecisionTreeClassifier,0.8914,0.8946,0.8914,0.8918,0.8831,0.8862,0.8831,0.8839,0.8167,0.8205,0.8167,0.8172,0.971,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 571}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=571)"
0,KNeighborsClassifier,0.9162,0.9179,0.9162,0.9166,0.9038,0.9046,0.9038,0.9041,0.8167,0.8412,0.8167,0.8176,0.9697,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
12,MLPClassifier,0.8929,0.8977,0.8929,0.8928,0.9004,0.9074,0.9004,0.9005,0.8167,0.825,0.8167,0.8153,0.9776,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=568)"
11,DecisionTreeClassifier,0.9388,0.9394,0.9388,0.9386,0.9286,0.9293,0.9286,0.9281,0.8167,0.8203,0.8167,0.8162,0.9771,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)"
11,MLPClassifier,0.8754,0.8791,0.8754,0.8754,0.8926,0.8957,0.8926,0.8922,0.8167,0.8172,0.8167,0.8155,0.9727,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 455, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=455)"
10,SVC,0.8673,0.869,0.8673,0.8677,0.8652,0.8671,0.8652,0.8652,0.8167,0.8406,0.8167,0.8162,0.9432,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 560}","SVC(C=10, kernel='linear', probability=True, random_state=560)"
9,RandomForestClassifier,0.9792,0.9794,0.9792,0.9791,0.9827,0.9829,0.9827,0.9826,0.8167,0.8681,0.8167,0.819,0.9964,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 939}","RandomForestClassifier(n_estimators=20, random_state=939)"
8,RandomForestClassifier,0.9815,0.9817,0.9815,0.9815,0.9838,0.9839,0.9838,0.9837,0.8167,0.8642,0.8167,0.822,0.9963,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 182}","RandomForestClassifier(n_estimators=20, random_state=182)"
2,DecisionTreeClassifier,0.8997,0.903,0.8997,0.9001,0.8896,0.8934,0.8896,0.8896,0.8167,0.8367,0.8167,0.8208,0.9773,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 180}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=180)"
3,LogisticRegression,0.7789,0.7783,0.7789,0.7779,0.7664,0.7661,0.7664,0.7649,0.8167,0.8246,0.8167,0.813,0.9215,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 416, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=416)"
4,KNeighborsClassifier,0.9122,0.9137,0.9122,0.9126,0.9143,0.9147,0.9143,0.9145,0.8167,0.8278,0.8167,0.813,0.973,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
0,RandomForestClassifier,0.8551,0.8628,0.8551,0.8559,0.8333,0.8451,0.8333,0.8346,0.8167,0.8335,0.8167,0.8141,0.9438,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 751}","RandomForestClassifier(n_estimators=10, random_state=751)"
10,SVC,0.8707,0.8726,0.8707,0.8713,0.8469,0.8477,0.8469,0.8473,0.8167,0.8367,0.8167,0.8208,0.9423,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 448}","SVC(C=10, kernel='linear', probability=True, random_state=448)"
1,RandomForestClassifier,0.9185,0.9224,0.9185,0.9185,0.8841,0.9019,0.8841,0.885,0.8167,0.8208,0.8167,0.8161,0.9746,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 167}","RandomForestClassifier(n_estimators=20, random_state=167)"
2,DecisionTreeClassifier,0.9115,0.9146,0.9115,0.9114,0.8889,0.8986,0.8889,0.8899,0.8167,0.8172,0.8167,0.8166,0.9692,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 873}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=873)"
3,KNeighborsClassifier,0.8287,0.8377,0.8287,0.8306,0.818,0.8273,0.818,0.8211,0.8167,0.8194,0.8167,0.8142,0.9412,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
2,LogisticRegression,0.7993,0.8124,0.7993,0.8023,0.8044,0.8257,0.8044,0.8085,0.8167,0.8157,0.8167,0.8147,0.9363,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 843, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=843)"
1,RandomForestClassifier,0.8198,0.8317,0.8198,0.8228,0.881,0.8902,0.881,0.8827,0.8167,0.8195,0.8167,0.8148,0.9428,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 541}","RandomForestClassifier(n_estimators=20, random_state=541)"
0,KNeighborsClassifier,0.8663,0.8709,0.8663,0.8658,0.8368,0.8378,0.8368,0.8371,0.8167,0.8212,0.8167,0.8146,0.9498,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
9,RandomForestClassifier,0.9545,0.9557,0.9545,0.9544,0.9609,0.961,0.9609,0.9606,0.8167,0.8484,0.8167,0.8214,0.9901,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 289}","RandomForestClassifier(n_estimators=20, random_state=289)"
2,DecisionTreeClassifier,0.8842,0.8886,0.8842,0.8827,0.7971,0.8041,0.7971,0.7981,0.8167,0.822,0.8167,0.8148,0.9478,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)"
0,RandomForestClassifier,0.8287,0.8391,0.8287,0.8312,0.8384,0.8461,0.8384,0.8408,0.8167,0.8201,0.8167,0.8173,0.9429,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 5, 'random_state': 41}","RandomForestClassifier(n_estimators=5, random_state=41)"
2,DecisionTreeClassifier,0.8537,0.8585,0.8537,0.8549,0.8639,0.8697,0.8639,0.8652,0.8167,0.8299,0.8167,0.8165,0.9553,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 652}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=652)"
8,MLPClassifier,0.9194,0.9238,0.9194,0.9196,0.9257,0.9292,0.9257,0.9255,0.8167,0.8163,0.8167,0.8162,0.9837,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 734, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=734)"
9,SVC,0.8753,0.8764,0.8753,0.8756,0.8718,0.8724,0.8718,0.872,0.8167,0.8175,0.8167,0.816,0.9501,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 611}","SVC(C=10, kernel='linear', probability=True, random_state=611)"
5,MLPClassifier,0.8535,0.86,0.8535,0.8549,0.8534,0.8644,0.8534,0.8555,0.8,0.7978,0.8,0.7966,0.9574,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 766, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=766)"
0,KNeighborsClassifier,0.8387,0.8497,0.8387,0.8415,0.829,0.837,0.829,0.8319,0.8,0.8054,0.8,0.7944,0.9468,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
4,SVC,0.8481,0.8522,0.8481,0.8482,0.8438,0.8459,0.8438,0.844,0.8,0.8079,0.8,0.7992,0.9389,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 388}","SVC(C=10, kernel='linear', probability=True, random_state=388)"
3,KNeighborsClassifier,0.9089,0.9124,0.9089,0.9086,0.8854,0.8907,0.8854,0.8854,0.8,0.8124,0.8,0.7994,0.9655,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
5,KNeighborsClassifier,0.8822,0.8855,0.8822,0.8828,0.9048,0.9082,0.9048,0.9054,0.8,0.8002,0.8,0.7955,0.9693,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
3,RandomForestClassifier,0.8958,0.8974,0.8958,0.896,0.9048,0.9057,0.9048,0.9049,0.8,0.8288,0.8,0.8034,0.9707,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 851}","RandomForestClassifier(n_estimators=20, random_state=851)"
2,KNeighborsClassifier,0.9127,0.9146,0.9127,0.9133,0.906,0.9104,0.906,0.9068,0.8,0.8083,0.8,0.7987,0.9785,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
12,SVC,0.8623,0.8659,0.8623,0.8629,0.8741,0.8751,0.8741,0.8745,0.8,0.8068,0.8,0.8011,0.938,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 802}","SVC(C=10, kernel='linear', probability=True, random_state=802)"
4,KNeighborsClassifier,0.8642,0.8685,0.8642,0.8639,0.8623,0.8661,0.8623,0.8626,0.8,0.8101,0.8,0.8019,0.959,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
3,DecisionTreeClassifier,0.8696,0.8756,0.8696,0.8685,0.8986,0.9038,0.8986,0.9,0.8,0.8595,0.8,0.8026,0.9381,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 889}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=889)"
1,KNeighborsClassifier,0.8281,0.8376,0.8281,0.8297,0.7971,0.7933,0.7971,0.7935,0.8,0.7997,0.8,0.7995,0.9413,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
13,DecisionTreeClassifier,0.9565,0.957,0.9565,0.9565,0.9508,0.9509,0.9508,0.9506,0.8,0.8062,0.8,0.8022,0.9891,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 388}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=388)"
3,RandomForestClassifier,0.9176,0.9192,0.9176,0.9178,0.9346,0.9349,0.9346,0.9347,0.8,0.8018,0.8,0.7986,0.9745,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 264}","RandomForestClassifier(n_estimators=20, random_state=264)"
4,DecisionTreeClassifier,0.8652,0.8701,0.8652,0.8665,0.8639,0.8681,0.8639,0.8653,0.8,0.8011,0.8,0.7963,0.9595,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)"
5,KNeighborsClassifier,0.8914,0.9012,0.8914,0.8903,0.8696,0.8707,0.8696,0.8696,0.7833,0.7835,0.7833,0.7821,0.9672,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')"
16,MLPClassifier,0.8627,0.8683,0.8627,0.8624,0.8554,0.8575,0.8554,0.8558,0.7833,0.7893,0.7833,0.7824,0.9641,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=352)"
15,DecisionTreeClassifier,0.9282,0.9294,0.9282,0.9281,0.9303,0.9309,0.9303,0.9303,0.7833,0.7905,0.7833,0.7838,0.9778,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 844}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=844)"
14,MLPClassifier,0.8809,0.8836,0.8809,0.8809,0.8656,0.8692,0.8656,0.8649,0.7833,0.8187,0.7833,0.7862,0.9671,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 297, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=297)"
13,RandomForestClassifier,0.9622,0.9632,0.9622,0.9622,0.9728,0.9729,0.9728,0.9728,0.7833,0.797,0.7833,0.7862,0.9923,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 68}","RandomForestClassifier(n_estimators=20, random_state=68)"
5,LogisticRegression,0.9001,0.9021,0.9001,0.8998,0.8611,0.8619,0.8611,0.861,0.7833,0.8027,0.7833,0.7875,0.9619,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
6,KNeighborsClassifier,0.9028,0.908,0.9028,0.9027,0.9201,0.9214,0.9201,0.9202,0.7833,0.7948,0.7833,0.7862,0.965,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
7,RandomForestClassifier,0.9349,0.9367,0.9349,0.9348,0.9549,0.958,0.9549,0.9543,0.7833,0.7912,0.7833,0.7848,0.9878,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 156}","RandomForestClassifier(n_estimators=20, random_state=156)"
8,MLPClassifier,0.8203,0.8278,0.8203,0.82,0.8611,0.8618,0.8611,0.8611,0.7833,0.7869,0.7833,0.7838,0.9367,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 688, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=688)"
5,DecisionTreeClassifier,0.881,0.8861,0.881,0.8817,0.8982,0.9024,0.8982,0.8987,0.7833,0.8025,0.7833,0.7843,0.9699,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 532}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=532)"
3,KNeighborsClassifier,0.8637,0.8672,0.8637,0.8637,0.8542,0.8574,0.8542,0.8534,0.7833,0.7861,0.7833,0.7823,0.9478,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
0,LogisticRegression,0.7931,0.8016,0.7931,0.7943,0.7821,0.793,0.7821,0.7839,0.7833,0.7805,0.7833,0.7805,0.9313,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
2,KNeighborsClassifier,0.8261,0.8369,0.8261,0.8249,0.8623,0.8637,0.8623,0.8621,0.7833,0.7824,0.7833,0.78,0.9407,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
1,LogisticRegression,0.7971,0.8102,0.7971,0.7993,0.7955,0.8131,0.7955,0.7977,0.7833,0.7815,0.7833,0.7814,0.9381,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 581, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=581)"
6,MLPClassifier,0.8023,0.8207,0.8023,0.8035,0.7755,0.7926,0.7755,0.7787,0.7833,0.7851,0.7833,0.7736,0.939,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 519, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=519)"
5,SVC,0.7985,0.8165,0.7985,0.802,0.8231,0.8409,0.8231,0.8265,0.7833,0.7882,0.7833,0.7798,0.8915,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 730}","SVC(C=1, kernel='linear', probability=True, random_state=730)"
4,SVC,0.8197,0.8282,0.8197,0.8219,0.8078,0.8154,0.8078,0.8106,0.7833,0.7815,0.7833,0.7814,0.8918,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 168}","SVC(C=1, kernel='linear', probability=True, random_state=168)"
0,RandomForestClassifier,0.8172,0.8274,0.8172,0.8183,0.7971,0.8377,0.7971,0.7985,0.7833,0.795,0.7833,0.7853,0.9309,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 140}","RandomForestClassifier(n_estimators=20, random_state=140)"
1,RandomForestClassifier,0.8776,0.8815,0.8776,0.8773,0.8542,0.857,0.8542,0.8529,0.7833,0.821,0.7833,0.79,0.954,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 290}","RandomForestClassifier(n_estimators=10, random_state=290)"
2,DecisionTreeClassifier,0.8333,0.844,0.8333,0.834,0.8403,0.8527,0.8403,0.8428,0.7833,0.7869,0.7833,0.7838,0.9334,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 885}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=885)"
6,MLPClassifier,0.8385,0.8465,0.8385,0.8392,0.8462,0.8541,0.8462,0.8484,0.7833,0.8002,0.7833,0.7833,0.9515,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 355, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=355)"
1,DecisionTreeClassifier,0.8344,0.8447,0.8344,0.8372,0.831,0.8426,0.831,0.8338,0.7833,0.8311,0.7833,0.7793,0.9504,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)"
9,DecisionTreeClassifier,0.8941,0.8974,0.8941,0.8938,0.8889,0.8895,0.8889,0.889,0.7833,0.807,0.7833,0.7824,0.9652,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 152}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=152)"
2,KNeighborsClassifier,0.8206,0.8419,0.8206,0.8224,0.8112,0.8365,0.8112,0.8129,0.7833,0.8045,0.7833,0.783,0.9367,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
1,DecisionTreeClassifier,0.8257,0.8385,0.8257,0.8279,0.8384,0.8473,0.8384,0.8412,0.7833,0.7898,0.7833,0.784,0.9443,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 559}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=559)"
10,KNeighborsClassifier,0.908,0.9115,0.908,0.908,0.9028,0.9063,0.9028,0.9033,0.7833,0.7857,0.7833,0.78,0.9641,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
12,LogisticRegression,0.8874,0.8871,0.8874,0.887,0.8842,0.8839,0.8842,0.8839,0.7833,0.7927,0.7833,0.785,0.9655,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 776, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=776)"
11,DecisionTreeClassifier,0.9606,0.9613,0.9606,0.9606,0.9612,0.9617,0.9612,0.9612,0.7833,0.8082,0.7833,0.7873,0.9916,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 615}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=615)"
10,RandomForestClassifier,0.9871,0.9872,0.9871,0.9871,0.9846,0.9847,0.9846,0.9846,0.7833,0.8082,0.7833,0.7873,0.9981,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 222}","RandomForestClassifier(n_estimators=20, random_state=222)"
6,SVC,0.7883,0.7878,0.7883,0.7875,0.7857,0.7851,0.7857,0.7853,0.7833,0.7948,0.7833,0.7816,0.8737,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 931}","SVC(C=10, kernel='linear', probability=True, random_state=931)"
7,LogisticRegression,0.7696,0.7697,0.7696,0.7677,0.7857,0.788,0.7857,0.7852,0.7833,0.7871,0.7833,0.7807,0.917,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
4,LogisticRegression,0.7683,0.7681,0.7683,0.7679,0.7696,0.7704,0.7696,0.7699,0.7833,0.8048,0.7833,0.7885,0.9196,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
14,DecisionTreeClassifier,0.9571,0.9576,0.9571,0.957,0.9558,0.9562,0.9558,0.9558,0.7833,0.8062,0.7833,0.7869,0.9883,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 945}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=945)"
3,LogisticRegression,0.7895,0.7993,0.7895,0.7909,0.7908,0.7962,0.7908,0.7909,0.7667,0.7731,0.7667,0.763,0.9292,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
8,SVC,0.801,0.8154,0.801,0.8036,0.8044,0.8137,0.8044,0.8071,0.7667,0.7668,0.7667,0.7655,0.8866,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 795}","SVC(C=1, kernel='linear', probability=True, random_state=795)"
3,MLPClassifier,0.8194,0.8413,0.8194,0.8193,0.8189,0.8768,0.8189,0.8181,0.7667,0.7906,0.7667,0.7568,0.9451,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 309, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=309)"
2,DecisionTreeClassifier,0.8364,0.8453,0.8364,0.8394,0.8514,0.8583,0.8514,0.8537,0.7667,0.7663,0.7667,0.7662,0.951,smote,5000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 342}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=342)"
0,DecisionTreeClassifier,0.8435,0.8526,0.8435,0.8458,0.8233,0.8335,0.8233,0.8266,0.7667,0.7664,0.7667,0.7642,0.9561,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 973}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=973)"
12,LogisticRegression,0.8411,0.8436,0.8411,0.8408,0.8472,0.8474,0.8472,0.8469,0.7667,0.7873,0.7667,0.7693,0.9493,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 521, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=521)"
7,LogisticRegression,0.7823,0.7924,0.7823,0.7842,0.784,0.787,0.784,0.7851,0.7667,0.7878,0.7667,0.7665,0.9367,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 5, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=5)"
15,MLPClassifier,0.8851,0.8879,0.8851,0.8849,0.8921,0.8922,0.8921,0.8921,0.7667,0.7688,0.7667,0.7656,0.9742,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=193)"
11,SVC,0.8837,0.8857,0.8837,0.883,0.8958,0.8978,0.8958,0.895,0.7667,0.7841,0.7667,0.77,0.947,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 57}","SVC(C=10, kernel='linear', probability=True, random_state=57)"
0,DecisionTreeClassifier,0.8332,0.8443,0.8332,0.8366,0.8317,0.842,0.8317,0.8348,0.7667,0.7919,0.7667,0.7594,0.9509,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 533}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=533)"
13,DecisionTreeClassifier,0.9037,0.9073,0.9037,0.9033,0.8993,0.9013,0.8993,0.8995,0.7667,0.7709,0.7667,0.7664,0.9639,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 603}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=603)"
2,KNeighborsClassifier,0.818,0.8372,0.818,0.8196,0.8143,0.8363,0.8143,0.8168,0.7667,0.7799,0.7667,0.7625,0.9428,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
17,KNeighborsClassifier,0.9536,0.9546,0.9536,0.9534,0.9507,0.9524,0.9507,0.9508,0.7667,0.7738,0.7667,0.7662,0.9836,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
0,RandomForestClassifier,0.8026,0.8119,0.8026,0.8054,0.7899,0.7997,0.7899,0.7935,0.7667,0.7663,0.7667,0.7662,0.9227,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 5, 'random_state': 90}","RandomForestClassifier(n_estimators=5, random_state=90)"
3,KNeighborsClassifier,0.8223,0.8292,0.8223,0.8229,0.8261,0.8303,0.8261,0.8273,0.7667,0.7833,0.7667,0.767,0.9357,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
5,RandomForestClassifier,0.8819,0.8873,0.8819,0.882,0.8681,0.8699,0.8681,0.8683,0.7667,0.7738,0.7667,0.7662,0.9653,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 251}","RandomForestClassifier(n_estimators=20, random_state=251)"
7,RandomForestClassifier,0.9197,0.9209,0.9197,0.9197,0.9189,0.9204,0.9189,0.9192,0.7667,0.8064,0.7667,0.7721,0.9763,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 86}","RandomForestClassifier(n_estimators=20, random_state=86)"
6,DecisionTreeClassifier,0.8918,0.8965,0.8918,0.8926,0.8973,0.901,0.8973,0.8976,0.7667,0.7672,0.7667,0.7659,0.9746,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)"
7,RandomForestClassifier,0.9157,0.9168,0.9157,0.9159,0.9257,0.9264,0.9257,0.9259,0.7667,0.7903,0.7667,0.7658,0.977,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 609}","RandomForestClassifier(n_estimators=20, random_state=609)"
9,KNeighborsClassifier,0.8903,0.8925,0.8903,0.891,0.8844,0.887,0.8844,0.8852,0.7667,0.7688,0.7667,0.7656,0.9666,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
8,RandomForestClassifier,0.8933,0.8954,0.8933,0.8934,0.915,0.9151,0.915,0.9148,0.7667,0.7874,0.7667,0.7688,0.9709,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 917}","RandomForestClassifier(n_estimators=20, random_state=917)"
4,RandomForestClassifier,0.8712,0.8769,0.8712,0.8717,0.8551,0.8627,0.8551,0.8571,0.7667,0.7663,0.7667,0.7656,0.9593,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 730}","RandomForestClassifier(n_estimators=20, random_state=730)"
4,DecisionTreeClassifier,0.8498,0.8577,0.8498,0.8496,0.8542,0.8557,0.8542,0.8547,0.7667,0.7815,0.7667,0.7675,0.9377,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 860}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=860)"
8,MLPClassifier,0.8087,0.8205,0.8087,0.808,0.8462,0.8552,0.8462,0.8483,0.7667,0.7652,0.7667,0.7619,0.9445,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 818, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=818)"
2,MLPClassifier,0.8015,0.8253,0.8015,0.8001,0.7819,0.8301,0.7819,0.779,0.75,0.793,0.75,0.7506,0.9398,smote,3000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=890)"
1,KNeighborsClassifier,0.79,0.8008,0.79,0.7906,0.7971,0.8192,0.7971,0.8019,0.75,0.7581,0.75,0.7497,0.8997,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
0,DecisionTreeClassifier,0.8237,0.8429,0.8237,0.8257,0.8472,0.8497,0.8472,0.8482,0.75,0.7665,0.75,0.7462,0.9358,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 567}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=567)"
16,LogisticRegression,0.8879,0.888,0.8879,0.8877,0.8949,0.8946,0.8949,0.8946,0.75,0.7599,0.75,0.7511,0.9624,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 467, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=467)"
9,RandomForestClassifier,0.8418,0.8514,0.8418,0.8438,0.8435,0.8477,0.8435,0.8449,0.75,0.7781,0.75,0.7469,0.947,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 562}","RandomForestClassifier(n_estimators=20, random_state=562)"
1,MLPClassifier,0.8041,0.8352,0.8041,0.804,0.8177,0.8742,0.8177,0.8166,0.75,0.793,0.75,0.7506,0.9412,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 147, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=147)"
17,SVC,0.8872,0.887,0.8872,0.8866,0.8915,0.8913,0.8915,0.8909,0.75,0.7557,0.75,0.7487,0.9498,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 193}","SVC(C=10, kernel='linear', probability=True, random_state=193)"
2,DecisionTreeClassifier,0.8391,0.8482,0.8391,0.8419,0.8434,0.8528,0.8434,0.8463,0.75,0.7778,0.75,0.7443,0.9527,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 843}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=843)"
3,RandomForestClassifier,0.8375,0.8473,0.8375,0.8403,0.83,0.839,0.83,0.8328,0.75,0.7778,0.75,0.7443,0.9505,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 446}","RandomForestClassifier(n_estimators=20, random_state=446)"
13,KNeighborsClassifier,0.9829,0.9832,0.9829,0.9829,0.9843,0.9844,0.9843,0.9842,0.75,0.7639,0.75,0.7536,0.9953,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
2,MLPClassifier,0.7826,0.7993,0.7826,0.7825,0.7826,0.7956,0.7826,0.7853,0.75,0.7766,0.75,0.7472,0.929,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 692, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=692)"
1,SVC,0.7869,0.8446,0.7869,0.7855,0.8026,0.8528,0.8026,0.8011,0.75,0.793,0.75,0.7506,0.9182,smote,3000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 307}","SVC(C=10, probability=True, random_state=307)"
6,MLPClassifier,0.7657,0.7812,0.7657,0.761,0.7743,0.7837,0.7743,0.7742,0.75,0.7639,0.75,0.7504,0.9226,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=141)"
0,RandomForestClassifier,0.8004,0.8125,0.8004,0.8022,0.8299,0.8416,0.8299,0.8329,0.75,0.7506,0.75,0.748,0.9312,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 895}","RandomForestClassifier(n_estimators=10, random_state=895)"
4,DecisionTreeClassifier,0.8398,0.8482,0.8398,0.8422,0.8363,0.8452,0.8363,0.8392,0.75,0.7788,0.75,0.7427,0.953,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 701}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=701)"
10,LogisticRegression,0.7883,0.799,0.7883,0.7903,0.7908,0.805,0.7908,0.794,0.75,0.7528,0.75,0.7465,0.9385,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=123)"
9,MLPClassifier,0.8363,0.8414,0.8363,0.8365,0.8177,0.8172,0.8177,0.8158,0.75,0.7548,0.75,0.7452,0.9503,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 345, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=345)"
4,RandomForestClassifier,0.8291,0.8393,0.8291,0.832,0.8265,0.8361,0.8265,0.8294,0.75,0.7542,0.75,0.7482,0.9439,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 933}","RandomForestClassifier(n_estimators=20, random_state=933)"
5,DecisionTreeClassifier,0.8329,0.8448,0.8329,0.8359,0.8248,0.8373,0.8248,0.8282,0.75,0.7642,0.75,0.7468,0.9471,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 952}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=952)"
6,SVC,0.7781,0.7856,0.7781,0.7784,0.8299,0.83,0.8299,0.8298,0.75,0.75,0.75,0.7464,0.8689,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 670}","SVC(C=10, kernel='linear', probability=True, random_state=670)"
5,RandomForestClassifier,0.8404,0.8505,0.8404,0.8431,0.839,0.8474,0.839,0.8417,0.75,0.787,0.75,0.7414,0.9519,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 384}","RandomForestClassifier(n_estimators=20, random_state=384)"
11,DecisionTreeClassifier,0.824,0.8354,0.824,0.8259,0.8588,0.864,0.8588,0.86,0.75,0.7714,0.75,0.7425,0.9485,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 906}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=906)"
6,RandomForestClassifier,0.9202,0.9228,0.9202,0.92,0.8913,0.8947,0.8913,0.8912,0.75,0.8037,0.75,0.7489,0.9804,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 821}","RandomForestClassifier(n_estimators=20, random_state=821)"
8,RandomForestClassifier,0.9179,0.9191,0.9179,0.9185,0.925,0.9261,0.925,0.9254,0.75,0.7616,0.75,0.7512,0.979,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 453}","RandomForestClassifier(n_estimators=20, random_state=453)"
7,KNeighborsClassifier,0.8858,0.8933,0.8858,0.8863,0.8768,0.8835,0.8768,0.8765,0.75,0.7767,0.75,0.7463,0.9586,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=9, weights='distance')"
14,MLPClassifier,0.7864,0.8006,0.7864,0.7812,0.8368,0.8462,0.8368,0.8344,0.75,0.7578,0.75,0.7502,0.935,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 298, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=298)"
7,SVC,0.7891,0.7908,0.7891,0.787,0.8021,0.8042,0.8021,0.7992,0.7333,0.7407,0.7333,0.7337,0.8754,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 486}","SVC(C=10, kernel='linear', probability=True, random_state=486)"
1,KNeighborsClassifier,0.7969,0.8109,0.7969,0.7985,0.7743,0.7853,0.7743,0.7773,0.7333,0.7327,0.7333,0.731,0.9154,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
2,KNeighborsClassifier,0.7752,0.7929,0.7752,0.7759,0.8261,0.8504,0.8261,0.8318,0.7333,0.7658,0.7333,0.7245,0.8987,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'}",KNeighborsClassifier()
1,LogisticRegression,0.7754,0.7914,0.7754,0.7768,0.8043,0.8159,0.8043,0.8064,0.7333,0.7598,0.7333,0.7313,0.9311,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 567, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=567)"
7,DecisionTreeClassifier,0.8206,0.8301,0.8206,0.8222,0.8406,0.851,0.8406,0.8415,0.7333,0.7408,0.7333,0.7317,0.9318,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 766}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=766)"
10,DecisionTreeClassifier,0.8614,0.8658,0.8614,0.8615,0.869,0.8717,0.869,0.8697,0.7333,0.776,0.7333,0.7382,0.9599,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 593}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=593)"
10,MLPClassifier,0.8434,0.8491,0.8434,0.8438,0.8641,0.8673,0.8641,0.8651,0.7333,0.7339,0.7333,0.7274,0.956,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 551, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=551)"
14,SVC,0.8882,0.8881,0.8882,0.8878,0.8869,0.8865,0.8869,0.8866,0.7333,0.7541,0.7333,0.7364,0.9529,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 516}","SVC(C=10, kernel='linear', probability=True, random_state=516)"
15,SVC,0.8593,0.8641,0.8593,0.8595,0.8438,0.8472,0.8438,0.8446,0.7333,0.7659,0.7333,0.7346,0.9411,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 510}","SVC(C=10, kernel='linear', probability=True, random_state=510)"
6,SVC,0.7592,0.7852,0.7592,0.7569,0.8043,0.8088,0.8043,0.8058,0.7333,0.756,0.7333,0.7315,0.8849,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 591}","SVC(C=1, kernel='linear', probability=True, random_state=591)"
4,SVC,0.807,0.852,0.807,0.8062,0.8104,0.8681,0.8104,0.8087,0.7333,0.7778,0.7333,0.7348,0.9153,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 154}","SVC(C=1, kernel='linear', probability=True, random_state=154)"
5,KNeighborsClassifier,0.835,0.8462,0.835,0.8373,0.821,0.8315,0.821,0.8239,0.7333,0.7421,0.7333,0.7245,0.9465,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=13, weights='distance')"
5,LogisticRegression,0.7879,0.8028,0.7879,0.7852,0.7826,0.8082,0.7826,0.7873,0.7333,0.7624,0.7333,0.7333,0.9245,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 615, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=615)"
4,MLPClassifier,0.8123,0.8402,0.8123,0.8131,0.8066,0.8627,0.8066,0.8063,0.7333,0.7905,0.7333,0.7171,0.9416,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=482)"
3,DecisionTreeClassifier,0.8189,0.8395,0.8189,0.8218,0.8043,0.8226,0.8043,0.8092,0.7333,0.7454,0.7333,0.736,0.9298,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 125}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=125)"
9,SVC,0.8013,0.8033,0.8013,0.7988,0.7975,0.7983,0.7975,0.7944,0.7333,0.8183,0.7333,0.7311,0.8939,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 124}","SVC(C=10, probability=True, random_state=124)"
4,KNeighborsClassifier,0.7898,0.7999,0.7898,0.7916,0.7754,0.7874,0.7754,0.7794,0.7333,0.7578,0.7333,0.7347,0.9018,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
11,SVC,0.7836,0.7834,0.7836,0.7822,0.7636,0.7646,0.7636,0.7637,0.7333,0.736,0.7333,0.7338,0.8749,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 660}","SVC(C=1, kernel='linear', probability=True, random_state=660)"
12,LogisticRegression,0.7747,0.7755,0.7747,0.7739,0.7653,0.7664,0.7653,0.7657,0.7333,0.748,0.7333,0.7327,0.9166,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
13,MLPClassifier,0.8074,0.813,0.8074,0.8056,0.8095,0.8103,0.8095,0.8089,0.7333,0.74,0.7333,0.7287,0.9343,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 380, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=380)"
3,MLPClassifier,0.8093,0.8364,0.8093,0.8089,0.8146,0.8249,0.8146,0.8174,0.7333,0.7316,0.7333,0.7312,0.9439,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 560, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=560)"
5,DecisionTreeClassifier,0.7844,0.7971,0.7844,0.7846,0.8841,0.8875,0.8841,0.8847,0.7333,0.7729,0.7333,0.7376,0.9083,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 228}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=228)"
6,RandomForestClassifier,0.8552,0.8612,0.8552,0.8544,0.8768,0.8864,0.8768,0.8788,0.7333,0.7525,0.7333,0.7333,0.9518,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 314}","RandomForestClassifier(n_estimators=20, random_state=314)"
3,RandomForestClassifier,0.8277,0.8384,0.8277,0.831,0.8333,0.8467,0.8333,0.8366,0.7333,0.7698,0.7333,0.7292,0.9492,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 986}","RandomForestClassifier(n_estimators=20, random_state=986)"
1,MLPClassifier,0.8039,0.8227,0.8039,0.8039,0.7674,0.7835,0.7674,0.7646,0.7333,0.7425,0.7333,0.7277,0.9384,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 446, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=446)"
10,SVC,0.7897,0.7881,0.7897,0.7871,0.7998,0.7988,0.7998,0.7979,0.7333,0.7386,0.7333,0.7308,0.8731,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 126}","SVC(C=10, kernel='linear', probability=True, random_state=126)"
2,RandomForestClassifier,0.8238,0.8334,0.8238,0.826,0.8194,0.829,0.8194,0.8213,0.7333,0.747,0.7333,0.7269,0.9404,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 515}","RandomForestClassifier(n_estimators=20, random_state=515)"
12,MLPClassifier,0.7874,0.8064,0.7874,0.7868,0.8061,0.8209,0.8061,0.8077,0.7167,0.7233,0.7167,0.7119,0.937,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=466)"
8,MLPClassifier,0.7815,0.7949,0.7815,0.7824,0.7942,0.8454,0.7942,0.794,0.7167,0.7447,0.7167,0.7154,0.931,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 178, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=178)"
7,LogisticRegression,0.7755,0.782,0.7755,0.7774,0.7857,0.7917,0.7857,0.7879,0.7167,0.7467,0.7167,0.7171,0.9263,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
11,DecisionTreeClassifier,0.8346,0.8457,0.8346,0.838,0.8316,0.8441,0.8316,0.8348,0.7167,0.7359,0.7167,0.7128,0.9461,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 444}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=444)"
10,RandomForestClassifier,0.8397,0.8484,0.8397,0.8422,0.7925,0.8084,0.7925,0.7965,0.7167,0.7351,0.7167,0.713,0.9469,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 5, 'random_state': 872}","RandomForestClassifier(n_estimators=5, random_state=872)"
9,MLPClassifier,0.7942,0.8146,0.7942,0.7937,0.8027,0.8123,0.8027,0.8051,0.7167,0.717,0.7167,0.7131,0.9369,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=279)"
6,MLPClassifier,0.8103,0.8375,0.8103,0.8107,0.8031,0.8057,0.8031,0.8042,0.7167,0.7266,0.7167,0.7121,0.9421,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 409, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=409)"
9,SVC,0.848,0.8571,0.848,0.8469,0.8551,0.8598,0.8551,0.8537,0.7167,0.7258,0.7167,0.7147,0.9314,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 392}","SVC(C=10, kernel='linear', probability=True, random_state=392)"
8,LogisticRegression,0.846,0.8505,0.846,0.8469,0.8841,0.8878,0.8841,0.8849,0.7167,0.7346,0.7167,0.7148,0.9532,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 407, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=407)"
8,LogisticRegression,0.776,0.7771,0.776,0.7747,0.7465,0.75,0.7465,0.7476,0.7167,0.7248,0.7167,0.7169,0.9227,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
9,DecisionTreeClassifier,0.8368,0.849,0.8368,0.8382,0.8229,0.8324,0.8229,0.8252,0.7167,0.742,0.7167,0.7115,0.9319,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 378}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=378)"
4,DecisionTreeClassifier,0.8248,0.838,0.8248,0.8278,0.8479,0.8567,0.8479,0.8504,0.7167,0.718,0.7167,0.7162,0.9491,smote,3000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 977}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=977)"
6,SVC,0.8075,0.8196,0.8075,0.8107,0.7964,0.8079,0.7964,0.7998,0.7167,0.7247,0.7167,0.7195,0.9012,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 98}","SVC(C=1, kernel='linear', probability=True, random_state=98)"
10,RandomForestClassifier,0.8319,0.842,0.8319,0.8349,0.8423,0.8501,0.8423,0.8448,0.7167,0.7152,0.7167,0.7139,0.9503,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 644}","RandomForestClassifier(n_estimators=20, random_state=644)"
4,RandomForestClassifier,0.7989,0.8121,0.7989,0.7981,0.8261,0.83,0.8261,0.8268,0.7167,0.7356,0.7167,0.718,0.9326,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 241}","RandomForestClassifier(n_estimators=20, random_state=241)"
12,MLPClassifier,0.8108,0.8337,0.8108,0.8112,0.7925,0.8025,0.7925,0.792,0.7167,0.7233,0.7167,0.7119,0.9435,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 93, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=93)"
13,KNeighborsClassifier,0.8244,0.8402,0.8244,0.8268,0.8503,0.8587,0.8503,0.8527,0.7167,0.7215,0.7167,0.7112,0.9413,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
9,DecisionTreeClassifier,0.8026,0.8201,0.8026,0.8057,0.8478,0.8529,0.8478,0.8499,0.7167,0.7178,0.7167,0.7095,0.9333,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 590}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=590)"
8,MLPClassifier,0.8187,0.8374,0.8187,0.8202,0.7319,0.801,0.7319,0.745,0.7167,0.753,0.7167,0.71,0.9418,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 281, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=281)"
7,DecisionTreeClassifier,0.8241,0.842,0.8241,0.8262,0.8333,0.8418,0.8333,0.8353,0.7167,0.7532,0.7167,0.7125,0.9291,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 913}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=913)"
6,MLPClassifier,0.8024,0.8178,0.8024,0.8038,0.7464,0.7591,0.7464,0.7488,0.7167,0.7162,0.7167,0.7143,0.9392,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 710, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=710)"
5,KNeighborsClassifier,0.7898,0.8075,0.7898,0.7918,0.8116,0.8157,0.8116,0.8131,0.7167,0.7339,0.7167,0.7151,0.9014,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')"
3,DecisionTreeClassifier,0.8078,0.8312,0.8078,0.81,0.7971,0.83,0.7971,0.8041,0.7167,0.7682,0.7167,0.7182,0.9314,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 29}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=29)"
9,KNeighborsClassifier,0.8262,0.8358,0.8262,0.8296,0.8389,0.8537,0.8389,0.8426,0.7167,0.7152,0.7167,0.7139,0.943,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=15, weights='distance')"
16,LogisticRegression,0.868,0.8693,0.868,0.8677,0.8125,0.8125,0.8125,0.8116,0.7167,0.7389,0.7167,0.7198,0.9625,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 852, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=852)"
17,MLPClassifier,0.8437,0.853,0.8437,0.8446,0.9028,0.9071,0.9028,0.9024,0.7167,0.7187,0.7167,0.711,0.9528,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=825)"
11,KNeighborsClassifier,0.8629,0.8672,0.8629,0.8631,0.8785,0.8788,0.8785,0.8776,0.7167,0.7259,0.7167,0.7105,0.9477,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
7,LogisticRegression,0.8132,0.8264,0.8132,0.8154,0.8154,0.8308,0.8154,0.818,0.7167,0.7313,0.7167,0.7166,0.94,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 663, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=663)"
6,RandomForestClassifier,0.8326,0.8435,0.8326,0.8357,0.8297,0.84,0.8297,0.8326,0.7167,0.7471,0.7167,0.7059,0.9506,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 343}","RandomForestClassifier(n_estimators=20, random_state=343)"
5,RandomForestClassifier,0.8337,0.8439,0.8337,0.8368,0.8333,0.8436,0.8333,0.8363,0.7167,0.7197,0.7167,0.7143,0.9512,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 912}","RandomForestClassifier(n_estimators=20, random_state=912)"
8,MLPClassifier,0.8112,0.8389,0.8112,0.8114,0.8233,0.8325,0.8233,0.8262,0.7167,0.7165,0.7167,0.7145,0.9435,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 311, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=311)"
10,RandomForestClassifier,0.8785,0.8821,0.8785,0.8788,0.9132,0.9145,0.9132,0.9133,0.7167,0.7572,0.7167,0.7113,0.9689,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 458}","RandomForestClassifier(n_estimators=20, random_state=458)"
5,LogisticRegression,0.7788,0.7835,0.7788,0.7799,0.7701,0.7765,0.7701,0.7722,0.7167,0.7162,0.7167,0.7153,0.9294,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 594, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=594)"
4,LogisticRegression,0.7709,0.7789,0.7709,0.7718,0.7847,0.7864,0.7847,0.7854,0.7167,0.7539,0.7167,0.7131,0.9185,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
3,DecisionTreeClassifier,0.8298,0.8443,0.8298,0.8332,0.8125,0.8382,0.8125,0.8176,0.7167,0.7194,0.7167,0.7131,0.9411,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 2}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=2)"
16,MLPClassifier,0.9078,0.9092,0.9078,0.9077,0.909,0.9101,0.909,0.9086,0.7167,0.7188,0.7167,0.7116,0.9822,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 103, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=103)"
15,LogisticRegression,0.8728,0.8728,0.8728,0.8726,0.8601,0.8597,0.8601,0.8598,0.7167,0.7178,0.7167,0.7169,0.9634,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
6,SVC,0.8008,0.8556,0.8008,0.799,0.7952,0.8511,0.7952,0.7931,0.7167,0.7817,0.7167,0.7017,0.9253,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 899}","SVC(C=10, probability=True, random_state=899)"
13,LogisticRegression,0.7526,0.7549,0.7526,0.7504,0.7396,0.7415,0.7396,0.7382,0.7167,0.7541,0.7167,0.704,0.9094,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 414, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=414)"
7,RandomForestClassifier,0.8096,0.8225,0.8096,0.8115,0.7971,0.807,0.7971,0.8005,0.7167,0.7277,0.7167,0.718,0.9192,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 463}","RandomForestClassifier(n_estimators=10, random_state=463)"
14,SVC,0.793,0.7936,0.793,0.792,0.8367,0.8357,0.8367,0.8346,0.7167,0.7083,0.7167,0.706,0.8784,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 782}","SVC(C=1, kernel='linear', probability=True, random_state=782)"
2,MLPClassifier,0.7803,0.8172,0.7803,0.7781,0.7674,0.7821,0.7674,0.7666,0.7167,0.7196,0.7167,0.7172,0.9258,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=679)"
12,SVC,0.7665,0.7677,0.7665,0.7654,0.7708,0.7708,0.7708,0.7708,0.7167,0.7567,0.7167,0.704,0.8699,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 27}","SVC(C=10, kernel='linear', probability=True, random_state=27)"
8,DecisionTreeClassifier,0.8024,0.8178,0.8024,0.8024,0.8333,0.84,0.8333,0.8346,0.7167,0.7215,0.7167,0.7112,0.9266,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 936}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=936)"
9,SVC,0.793,0.8463,0.793,0.7908,0.8025,0.8547,0.8025,0.8011,0.7,0.7761,0.7,0.6865,0.9217,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 583}","SVC(C=10, probability=True, random_state=583)"
12,DecisionTreeClassifier,0.898,0.9021,0.898,0.8985,0.8999,0.9047,0.8999,0.9004,0.7,0.7068,0.7,0.6999,0.9759,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 710}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=710)"
8,KNeighborsClassifier,0.8275,0.8384,0.8275,0.8306,0.835,0.8439,0.835,0.8378,0.7,0.6965,0.7,0.697,0.9437,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
7,DecisionTreeClassifier,0.8314,0.8427,0.8314,0.834,0.838,0.8471,0.838,0.8406,0.7,0.7058,0.7,0.7011,0.9506,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)"
9,MLPClassifier,0.7917,0.8014,0.7917,0.7929,0.7899,0.812,0.7899,0.7927,0.7,0.7237,0.7,0.6987,0.93,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 367, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=367)"
13,MLPClassifier,0.8469,0.8546,0.8469,0.8476,0.8514,0.8595,0.8514,0.851,0.7,0.6997,0.7,0.6979,0.9565,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 826, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=826)"
14,SVC,0.794,0.837,0.794,0.7935,0.8009,0.8569,0.8009,0.8003,0.7,0.7438,0.7,0.6836,0.9102,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 128}","SVC(C=1, kernel='linear', probability=True, random_state=128)"
11,SVC,0.761,0.804,0.761,0.7563,0.7899,0.8446,0.7899,0.7926,0.7,0.7417,0.7,0.696,0.9153,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 997}","SVC(C=0.1, kernel='linear', probability=True, random_state=997)"
14,MLPClassifier,0.8333,0.8466,0.8333,0.8311,0.8043,0.8124,0.8043,0.8014,0.7,0.7219,0.7,0.6945,0.9551,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 896, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=896)"
13,MLPClassifier,0.8153,0.8212,0.8153,0.8136,0.7971,0.8017,0.7971,0.7981,0.7,0.7357,0.7,0.6975,0.946,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=334)"
13,DecisionTreeClassifier,0.8445,0.8526,0.8445,0.847,0.8249,0.8375,0.8249,0.8285,0.7,0.7128,0.7,0.6902,0.9552,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 335}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=335)"
11,KNeighborsClassifier,0.9152,0.9169,0.9152,0.9158,0.9163,0.9174,0.9163,0.9167,0.7,0.7056,0.7,0.7001,0.9762,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
12,RandomForestClassifier,0.8024,0.8155,0.8024,0.8025,0.8188,0.8254,0.8188,0.8203,0.7,0.7074,0.7,0.6929,0.9251,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 727}","RandomForestClassifier(n_estimators=20, random_state=727)"
7,SVC,0.8009,0.8692,0.8009,0.8011,0.8089,0.8749,0.8089,0.8072,0.7,0.7935,0.7,0.7003,0.9212,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 412}","SVC(C=0.1, kernel='linear', probability=True, random_state=412)"
8,SVC,0.8096,0.8694,0.8096,0.8081,0.8159,0.869,0.8159,0.8124,0.7,0.7391,0.7,0.6949,0.9275,smote,5000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 824}","SVC(C=10, kernel='linear', probability=True, random_state=824)"
15,MLPClassifier,0.8057,0.816,0.8057,0.8033,0.8095,0.8135,0.8095,0.809,0.7,0.6978,0.7,0.6949,0.9394,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 55, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=55)"
16,LogisticRegression,0.7781,0.7814,0.7781,0.7786,0.7891,0.7904,0.7891,0.7896,0.7,0.6944,0.7,0.6908,0.92,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 654, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=654)"
10,SVC,0.8098,0.8194,0.8098,0.809,0.8333,0.8374,0.8333,0.8344,0.7,0.6996,0.7,0.6995,0.9111,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 984}","SVC(C=10, kernel='linear', probability=True, random_state=984)"
11,LogisticRegression,0.7972,0.8057,0.7972,0.7959,0.7391,0.7418,0.7391,0.7393,0.7,0.7279,0.7,0.6964,0.9342,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 411, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=411)"
15,RandomForestClassifier,0.8402,0.8502,0.8402,0.843,0.835,0.8474,0.835,0.8381,0.7,0.7162,0.7,0.6948,0.9468,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 444}","RandomForestClassifier(n_estimators=10, random_state=444)"
14,DecisionTreeClassifier,0.8465,0.8557,0.8465,0.8493,0.835,0.8439,0.835,0.8377,0.7,0.7081,0.7,0.6968,0.9528,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)"
11,SVC,0.7946,0.7934,0.7946,0.7927,0.778,0.7756,0.778,0.7746,0.7,0.7268,0.7,0.7063,0.8776,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 665}","SVC(C=10, kernel='linear', probability=True, random_state=665)"
3,MLPClassifier,0.7665,0.7873,0.7665,0.7646,0.7604,0.7644,0.7604,0.7592,0.7,0.6962,0.7,0.6961,0.929,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=52)"
4,KNeighborsClassifier,0.7951,0.8088,0.7951,0.7981,0.8194,0.8273,0.8194,0.8211,0.7,0.7396,0.7,0.6879,0.9183,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=13, weights='distance')"
12,DecisionTreeClassifier,0.8768,0.8818,0.8768,0.8766,0.8986,0.9004,0.8986,0.8989,0.7,0.722,0.7,0.7014,0.9449,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 357}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=357)"
10,LogisticRegression,0.7736,0.7884,0.7736,0.7744,0.8116,0.8188,0.8116,0.8125,0.7,0.743,0.7,0.6986,0.927,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 795, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=795)"
14,LogisticRegression,0.7802,0.7866,0.7802,0.7814,0.7687,0.7722,0.7687,0.77,0.7,0.7162,0.7,0.6948,0.9286,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 753, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=753)"
11,SVC,0.8425,0.849,0.8425,0.8397,0.7971,0.8014,0.7971,0.7978,0.7,0.7369,0.7,0.7051,0.9239,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 194}","SVC(C=10, kernel='linear', probability=True, random_state=194)"
8,SVC,0.7935,0.8014,0.7935,0.7911,0.7609,0.7597,0.7609,0.7599,0.7,0.7028,0.7,0.6965,0.8706,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 597}","SVC(C=10, kernel='linear', probability=True, random_state=597)"
12,RandomForestClassifier,0.9181,0.9196,0.9181,0.9183,0.9273,0.9282,0.9273,0.9274,0.7,0.7155,0.7,0.6886,0.9761,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 255}","RandomForestClassifier(n_estimators=20, random_state=255)"
13,SVC,0.7857,0.7928,0.7857,0.7877,0.7602,0.7628,0.7602,0.7612,0.7,0.7064,0.7,0.6957,0.8773,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 111}","SVC(C=10, kernel='linear', probability=True, random_state=111)"
15,KNeighborsClassifier,0.8172,0.8279,0.8172,0.8194,0.818,0.8217,0.818,0.8188,0.7,0.7075,0.7,0.6938,0.9362,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=13, weights='distance')"
12,RandomForestClassifier,0.8374,0.8469,0.8374,0.8406,0.83,0.8402,0.83,0.8331,0.7,0.7128,0.7,0.6902,0.9515,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 9}","RandomForestClassifier(n_estimators=10, random_state=9)"
11,LogisticRegression,0.7875,0.7978,0.7875,0.7903,0.7936,0.8038,0.7936,0.7965,0.7,0.7081,0.7,0.7017,0.9368,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
9,MLPClassifier,0.761,0.7668,0.761,0.7549,0.6594,0.6622,0.6594,0.6591,0.7,0.7111,0.7,0.6944,0.9145,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 873, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=873)"
10,LogisticRegression,0.8531,0.8581,0.8531,0.8517,0.7971,0.7994,0.7971,0.7975,0.7,0.7278,0.7,0.7064,0.9508,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 436, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=436)"
13,LogisticRegression,0.7732,0.7731,0.7732,0.7728,0.7752,0.7733,0.7752,0.7738,0.7,0.7784,0.7,0.6856,0.9207,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
12,RandomForestClassifier,0.8294,0.8403,0.8294,0.8323,0.8249,0.8372,0.8249,0.8283,0.7,0.7128,0.7,0.6902,0.9502,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 974}","RandomForestClassifier(n_estimators=20, random_state=974)"
7,LogisticRegression,0.7912,0.7988,0.7912,0.7927,0.7897,0.802,0.7897,0.7922,0.7,0.7177,0.7,0.702,0.9329,smote,3000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 88, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=88)"
8,RandomForestClassifier,0.8321,0.8428,0.8321,0.8354,0.8238,0.8392,0.8238,0.8277,0.7,0.6987,0.7,0.6991,0.9498,smote,3000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 694}","RandomForestClassifier(n_estimators=20, random_state=694)"
9,KNeighborsClassifier,0.8223,0.8343,0.8223,0.8254,0.8277,0.8404,0.8277,0.831,0.7,0.6986,0.7,0.6984,0.9424,smote,3000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
10,KNeighborsClassifier,0.8173,0.8268,0.8173,0.8197,0.8216,0.8328,0.8216,0.8248,0.7,0.7044,0.7,0.6947,0.9427,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
13,SVC,0.7899,0.8467,0.7899,0.788,0.7908,0.8461,0.7908,0.7906,0.7,0.765,0.7,0.6895,0.9205,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 302}","SVC(C=10, probability=True, random_state=302)"
11,DecisionTreeClassifier,0.8319,0.8437,0.8319,0.8352,0.8261,0.8365,0.8261,0.8294,0.7,0.7128,0.7,0.6902,0.9516,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 340}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=340)"
15,KNeighborsClassifier,0.7751,0.7979,0.7751,0.7766,0.8333,0.8378,0.8333,0.8337,0.6833,0.7127,0.6833,0.6755,0.9064,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'}",KNeighborsClassifier(n_neighbors=7)
16,KNeighborsClassifier,0.9114,0.9132,0.9114,0.9116,0.9183,0.9189,0.9183,0.9185,0.6833,0.692,0.6833,0.6717,0.975,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
15,SVC,0.7984,0.7976,0.7984,0.797,0.8015,0.7992,0.8015,0.7991,0.6833,0.6868,0.6833,0.6823,0.8793,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 839}","SVC(C=10, kernel='linear', probability=True, random_state=839)"
15,LogisticRegression,0.8298,0.8358,0.8298,0.8287,0.8551,0.8605,0.8551,0.8553,0.6833,0.6991,0.6833,0.6882,0.9473,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 403, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=403)"
14,DecisionTreeClassifier,0.8895,0.8929,0.8895,0.8903,0.9088,0.9112,0.9088,0.9094,0.6833,0.6852,0.6833,0.6834,0.9718,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 924}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=924)"
11,DecisionTreeClassifier,0.8278,0.8418,0.8278,0.8288,0.7536,0.7811,0.7536,0.7528,0.6833,0.7025,0.6833,0.6717,0.9306,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 10}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=10)"
15,KNeighborsClassifier,0.8314,0.8438,0.8314,0.835,0.8345,0.8468,0.8345,0.8377,0.6833,0.6865,0.6833,0.6705,0.9411,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')"
14,KNeighborsClassifier,0.8198,0.8304,0.8198,0.8231,0.8182,0.8305,0.8182,0.8213,0.6833,0.692,0.6833,0.6717,0.938,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
8,SVC,0.7717,0.8219,0.7717,0.7686,0.7326,0.7918,0.7326,0.7292,0.6833,0.6851,0.6833,0.6752,0.9031,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 316}","SVC(C=0.1, kernel='linear', probability=True, random_state=316)"
5,SVC,0.7951,0.8172,0.7951,0.7942,0.7917,0.8189,0.7917,0.7906,0.6833,0.7012,0.6833,0.6857,0.904,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 167}","SVC(C=1, kernel='linear', probability=True, random_state=167)"
6,DecisionTreeClassifier,0.8221,0.8313,0.8221,0.8249,0.8264,0.8336,0.8264,0.8288,0.6833,0.6802,0.6833,0.6799,0.9419,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 177}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=177)"
7,MLPClassifier,0.7639,0.7824,0.7639,0.7636,0.8646,0.8685,0.8646,0.8646,0.6833,0.6782,0.6833,0.6788,0.9256,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=440)"
8,RandomForestClassifier,0.8264,0.8376,0.8264,0.829,0.8715,0.875,0.8715,0.8728,0.6833,0.6797,0.6833,0.6755,0.9353,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 410}","RandomForestClassifier(n_estimators=10, random_state=410)"
10,LogisticRegression,0.7665,0.7741,0.7665,0.7638,0.7681,0.7724,0.7681,0.7674,0.6833,0.6954,0.6833,0.6767,0.9132,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 911, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=911)"
6,SVC,0.7829,0.8251,0.7829,0.781,0.7812,0.8202,0.7812,0.786,0.6833,0.7084,0.6833,0.6824,0.8977,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 618}","SVC(C=1, kernel='linear', probability=True, random_state=618)"
9,KNeighborsClassifier,0.8361,0.8463,0.8361,0.8388,0.8327,0.8416,0.8327,0.8355,0.6833,0.6796,0.6833,0.6794,0.9461,smote,5000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
12,KNeighborsClassifier,0.7827,0.802,0.7827,0.7882,0.7754,0.8006,0.7754,0.783,0.6833,0.6978,0.6833,0.6836,0.9081,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)"
7,RandomForestClassifier,0.8134,0.8215,0.8134,0.8143,0.8299,0.8357,0.8299,0.832,0.6833,0.6879,0.6833,0.6757,0.937,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 626}","RandomForestClassifier(n_estimators=20, random_state=626)"
16,SVC,0.8408,0.8532,0.8408,0.8404,0.7899,0.8052,0.7899,0.7864,0.6833,0.7677,0.6833,0.6867,0.925,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 393}","SVC(C=10, kernel='linear', probability=True, random_state=393)"
10,RandomForestClassifier,0.8426,0.8529,0.8426,0.8446,0.831,0.8419,0.831,0.834,0.6833,0.6819,0.6833,0.6779,0.9535,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 945}","RandomForestClassifier(n_estimators=20, random_state=945)"
5,DecisionTreeClassifier,0.8282,0.8408,0.8282,0.8321,0.8299,0.8427,0.8299,0.8331,0.6833,0.6944,0.6833,0.6866,0.9378,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 220}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=220)"
14,LogisticRegression,0.7682,0.7807,0.7682,0.7654,0.7826,0.7793,0.7826,0.7798,0.6833,0.7149,0.6833,0.679,0.9178,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 985, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=985)"
15,MLPClassifier,0.7526,0.7703,0.7526,0.7453,0.7569,0.7657,0.7569,0.755,0.6833,0.6976,0.6833,0.6708,0.9158,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 681, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=681)"
14,MLPClassifier,0.7361,0.7489,0.7361,0.7326,0.7986,0.8082,0.7986,0.7981,0.6833,0.6881,0.6833,0.6801,0.8992,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=439)"
17,SVC,0.8732,0.8745,0.8732,0.8734,0.8701,0.8713,0.8701,0.8704,0.6833,0.6889,0.6833,0.6754,0.9495,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 354}","SVC(C=10, kernel='linear', probability=True, random_state=354)"
10,SVC,0.7958,0.8481,0.7958,0.7936,0.7918,0.8469,0.7918,0.79,0.6833,0.7241,0.6833,0.679,0.9239,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 191}","SVC(C=10, probability=True, random_state=191)"
11,RandomForestClassifier,0.8425,0.852,0.8425,0.8449,0.8297,0.842,0.8297,0.8329,0.6833,0.6807,0.6833,0.6763,0.954,smote,5000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 348}","RandomForestClassifier(n_estimators=20, random_state=348)"
13,SVC,0.7608,0.7909,0.7608,0.7587,0.7899,0.852,0.7899,0.7936,0.6833,0.7402,0.6833,0.6815,0.915,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 49}","SVC(C=0.1, kernel='linear', probability=True, random_state=49)"
16,MLPClassifier,0.8126,0.8279,0.8126,0.8133,0.8194,0.8276,0.8194,0.822,0.6667,0.674,0.6667,0.6643,0.9432,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 810, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=810)"
16,MLPClassifier,0.8044,0.8292,0.8044,0.8048,0.801,0.8442,0.801,0.7998,0.6667,0.7169,0.6667,0.6461,0.9398,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=194)"
13,MLPClassifier,0.7899,0.7969,0.7899,0.7895,0.7971,0.8013,0.7971,0.7963,0.6667,0.6733,0.6667,0.6444,0.9206,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 56, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=56)"
12,MLPClassifier,0.8172,0.8442,0.8172,0.8173,0.8146,0.8253,0.8146,0.8151,0.6667,0.6647,0.6667,0.6594,0.9436,smote,5000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 823, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=823)"
13,LogisticRegression,0.8041,0.8187,0.8041,0.8067,0.8149,0.831,0.8149,0.8176,0.6667,0.6647,0.6667,0.6594,0.9379,smote,5000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 982, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=982)"
14,DecisionTreeClassifier,0.8379,0.8466,0.8379,0.8408,0.8471,0.8544,0.8471,0.8495,0.6667,0.6671,0.6667,0.6572,0.952,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 313}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=313)"
12,SVC,0.7736,0.7767,0.7736,0.7701,0.7681,0.768,0.7681,0.7668,0.6667,0.7239,0.6667,0.6637,0.8551,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 144}","SVC(C=1, kernel='linear', probability=True, random_state=144)"
17,MLPClassifier,0.8008,0.8105,0.8008,0.799,0.7899,0.8019,0.7899,0.7898,0.6667,0.6796,0.6667,0.6564,0.9331,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 335, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=335)"
16,MLPClassifier,0.8082,0.8343,0.8082,0.8083,0.7908,0.806,0.7908,0.7924,0.6667,0.6832,0.6667,0.6536,0.942,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=559)"
17,SVC,0.786,0.851,0.786,0.7855,0.7609,0.8297,0.7609,0.7577,0.6667,0.7476,0.6667,0.6451,0.9112,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 900}","SVC(C=1, kernel='linear', probability=True, random_state=900)"
16,SVC,0.7726,0.819,0.7726,0.7694,0.7326,0.8108,0.7326,0.7374,0.6667,0.7473,0.6667,0.6432,0.9092,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 919}","SVC(C=10, probability=True, random_state=919)"
12,MLPClassifier,0.7578,0.7815,0.7578,0.7567,0.7674,0.7729,0.7674,0.7689,0.6667,0.6952,0.6667,0.6584,0.9233,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 372, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=372)"
11,MLPClassifier,0.7499,0.7786,0.7499,0.7517,0.8264,0.832,0.8264,0.8283,0.6667,0.6603,0.6667,0.66,0.9174,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=317)"
10,KNeighborsClassifier,0.822,0.8315,0.822,0.8239,0.7847,0.8043,0.7847,0.7887,0.6667,0.679,0.6667,0.6627,0.9279,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
9,LogisticRegression,0.796,0.803,0.796,0.797,0.7778,0.7891,0.7778,0.7813,0.6667,0.6656,0.6667,0.6642,0.9308,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 5, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=5)"
17,DecisionTreeClassifier,0.8081,0.8727,0.8081,0.8068,0.7754,0.87,0.7754,0.7804,0.6667,0.7962,0.6667,0.6543,0.9174,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 715}","DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=715)"
13,MLPClassifier,0.79,0.8034,0.79,0.789,0.7826,0.7867,0.7826,0.7842,0.6667,0.6774,0.6667,0.6686,0.9364,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 957, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=957)"
14,SVC,0.79,0.8019,0.79,0.7914,0.8043,0.8138,0.8043,0.8066,0.6667,0.6855,0.6667,0.6574,0.9019,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 648}","SVC(C=10, kernel='linear', probability=True, random_state=648)"
15,LogisticRegression,0.7809,0.7884,0.7809,0.7822,0.7701,0.7749,0.7701,0.7715,0.6667,0.6611,0.6667,0.663,0.9305,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 261, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=261)"
15,RandomForestClassifier,0.8079,0.8198,0.8079,0.8102,0.8478,0.8509,0.8478,0.8488,0.6667,0.6746,0.6667,0.6566,0.9178,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 714}","RandomForestClassifier(n_estimators=10, random_state=714)"
9,SVC,0.7822,0.8073,0.7822,0.7863,0.7292,0.763,0.7292,0.7367,0.6667,0.6924,0.6667,0.6656,0.8759,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 743}","SVC(C=10, kernel='linear', probability=True, random_state=743)"
10,LogisticRegression,0.7934,0.8076,0.7934,0.7971,0.7812,0.7927,0.7812,0.7852,0.6667,0.6702,0.6667,0.6647,0.9363,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 376, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=376)"
11,SVC,0.7821,0.8556,0.7821,0.7812,0.7917,0.8504,0.7917,0.7932,0.6667,0.6722,0.6667,0.6627,0.9108,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 109}","SVC(C=0.1, kernel='linear', probability=True, random_state=109)"
12,LogisticRegression,0.7891,0.8026,0.7891,0.7903,0.7986,0.8104,0.7986,0.8009,0.6667,0.694,0.6667,0.6609,0.9316,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 246, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=246)"
13,KNeighborsClassifier,0.8141,0.8283,0.8141,0.8171,0.8646,0.8731,0.8646,0.8656,0.6667,0.6682,0.6667,0.6584,0.9216,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
16,LogisticRegression,0.7552,0.7565,0.7552,0.7541,0.7917,0.7909,0.7917,0.79,0.6667,0.681,0.6667,0.6542,0.9109,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
17,SVC,0.7795,0.7833,0.7795,0.7772,0.7708,0.7727,0.7708,0.7712,0.6667,0.6827,0.6667,0.6503,0.8719,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 199}","SVC(C=10, kernel='linear', probability=True, random_state=199)"
17,MLPClassifier,0.767,0.7742,0.767,0.7645,0.7789,0.7802,0.7789,0.7794,0.6667,0.6583,0.6667,0.6574,0.9191,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=154)"
17,LogisticRegression,0.7847,0.7851,0.7847,0.7847,0.7651,0.7651,0.7651,0.7648,0.6667,0.6693,0.6667,0.6671,0.9276,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 804, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=804)"
16,KNeighborsClassifier,0.8163,0.8279,0.8163,0.8179,0.8027,0.8399,0.8027,0.804,0.6667,0.721,0.6667,0.6623,0.9393,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
16,MLPClassifier,0.7481,0.7882,0.7481,0.7456,0.7609,0.8389,0.7609,0.7619,0.65,0.7246,0.65,0.6544,0.9186,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 59, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=59)"
13,DecisionTreeClassifier,0.822,0.8392,0.822,0.8242,0.8542,0.8629,0.8542,0.8559,0.65,0.662,0.65,0.6531,0.9374,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 620}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=620)"
17,LogisticRegression,0.7878,0.7965,0.7878,0.7897,0.7707,0.7751,0.7707,0.7721,0.65,0.647,0.65,0.6482,0.939,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 487, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=487)"
14,KNeighborsClassifier,0.8056,0.8187,0.8056,0.8065,0.809,0.8143,0.809,0.8103,0.65,0.6459,0.65,0.6471,0.9242,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
15,LogisticRegression,0.7648,0.7734,0.7648,0.7656,0.809,0.815,0.809,0.8109,0.65,0.6511,0.65,0.6449,0.9205,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 164, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=164)"
14,SVC,0.7989,0.8018,0.7989,0.7951,0.7985,0.8024,0.7985,0.796,0.65,0.6673,0.65,0.6398,0.8913,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 243}","SVC(C=10, probability=True, random_state=243)"
16,SVC,0.7771,0.7844,0.7771,0.7736,0.7754,0.7768,0.7754,0.7731,0.65,0.6667,0.65,0.6289,0.8673,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 799}","SVC(C=10, kernel='linear', probability=True, random_state=799)"
17,KNeighborsClassifier,0.8295,0.84,0.8295,0.832,0.8197,0.8464,0.8197,0.8213,0.65,0.6719,0.65,0.6444,0.9412,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=13, weights='distance')"
11,RandomForestClassifier,0.8307,0.8416,0.8307,0.8336,0.8404,0.8491,0.8404,0.8431,0.65,0.6599,0.65,0.6372,0.9495,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 306}","RandomForestClassifier(n_estimators=20, random_state=306)"
12,SVC,0.7973,0.8494,0.7973,0.7952,0.7885,0.8448,0.7885,0.7869,0.65,0.7362,0.65,0.6299,0.9233,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 832}","SVC(C=10, probability=True, random_state=832)"
14,MLPClassifier,0.7519,0.7573,0.7519,0.7521,0.7391,0.7403,0.7391,0.7397,0.65,0.6461,0.65,0.643,0.9119,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 560, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=560)"
17,KNeighborsClassifier,0.8143,0.8256,0.8143,0.8143,0.8125,0.8163,0.8125,0.814,0.65,0.6411,0.65,0.6438,0.9335,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
16,LogisticRegression,0.8177,0.8296,0.8177,0.8182,0.7812,0.7937,0.7812,0.7838,0.65,0.6469,0.65,0.6482,0.9391,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
15,RandomForestClassifier,0.8307,0.8416,0.8307,0.8308,0.8438,0.8486,0.8438,0.8449,0.65,0.6477,0.65,0.6486,0.9398,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 748}","RandomForestClassifier(n_estimators=20, random_state=748)"
14,DecisionTreeClassifier,0.8263,0.8359,0.8263,0.8287,0.8125,0.8286,0.8125,0.8169,0.65,0.6753,0.65,0.654,0.9403,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 785}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=785)"
16,LogisticRegression,0.7917,0.7993,0.7917,0.792,0.7754,0.7871,0.7754,0.7783,0.65,0.6689,0.65,0.6541,0.9408,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
15,LogisticRegression,0.7446,0.7528,0.7446,0.742,0.8188,0.8207,0.8188,0.8189,0.6333,0.6575,0.6333,0.6309,0.9043,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
16,SVC,0.8003,0.8022,0.8003,0.7974,0.8035,0.8085,0.8035,0.8014,0.6333,0.633,0.6333,0.614,0.8945,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 813}","SVC(C=10, probability=True, random_state=813)"
15,LogisticRegression,0.7756,0.7752,0.7756,0.7752,0.7721,0.7733,0.7721,0.7724,0.6333,0.6349,0.6333,0.6333,0.9226,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 761, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=761)"
17,SVC,0.7793,0.8328,0.7793,0.7791,0.801,0.8422,0.801,0.799,0.6333,0.7284,0.6333,0.6077,0.9175,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 896}","SVC(C=10, probability=True, random_state=896)"
17,LogisticRegression,0.777,0.783,0.777,0.7757,0.7391,0.7462,0.7391,0.7384,0.6333,0.642,0.6333,0.6213,0.9147,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
13,LogisticRegression,0.7987,0.8064,0.7987,0.7999,0.7999,0.8114,0.7999,0.8008,0.6333,0.6358,0.6333,0.6246,0.9325,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 914, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=914)"
17,SVC,0.7894,0.8443,0.7894,0.7875,0.7964,0.8534,0.7964,0.7949,0.6333,0.7311,0.6333,0.5941,0.9209,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 490}","SVC(C=10, probability=True, random_state=490)"
17,RandomForestClassifier,0.8246,0.8346,0.8246,0.8265,0.8021,0.8085,0.8021,0.8043,0.6167,0.6156,0.6167,0.6154,0.9397,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 734}","RandomForestClassifier(n_estimators=10, random_state=734)"
17,LogisticRegression,0.7826,0.7818,0.7826,0.7821,0.7768,0.7778,0.7768,0.7772,0.6167,0.6107,0.6167,0.5984,0.9246,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
15,LogisticRegression,0.7949,0.8076,0.7949,0.7969,0.7985,0.8102,0.7985,0.8004,0.6167,0.6267,0.6167,0.6181,0.9374,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 192, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=192)"
16,KNeighborsClassifier,0.8373,0.8492,0.8373,0.8392,0.8236,0.8343,0.8236,0.8269,0.6167,0.6113,0.6167,0.6106,0.9463,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=15, weights='distance')"
17,MLPClassifier,0.8174,0.83,0.8174,0.8184,0.7938,0.8478,0.7938,0.7906,0.6,0.6387,0.6,0.586,0.9429,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 541, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=541)"
16,KNeighborsClassifier,0.8217,0.8387,0.8217,0.8238,0.8079,0.8349,0.8079,0.8091,0.6,0.6111,0.6,0.5909,0.9419,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=15, weights='distance')"
15,DecisionTreeClassifier,0.8348,0.8463,0.8348,0.8376,0.8313,0.841,0.8313,0.8342,0.6,0.5992,0.6,0.5985,0.9516,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 39}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=39)"
14,LogisticRegression,0.7903,0.7998,0.7903,0.792,0.7928,0.8005,0.7928,0.7941,0.6,0.6117,0.6,0.6042,0.9306,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 661, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=661)"
17,MLPClassifier,0.8143,0.8346,0.8143,0.8136,0.7992,0.8596,0.7992,0.7947,0.6,0.6438,0.6,0.5872,0.9465,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 846, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=846)"
