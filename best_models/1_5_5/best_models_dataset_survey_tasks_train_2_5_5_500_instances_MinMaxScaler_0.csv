Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8757;0.8794;0.8757;0.8762;0.875;0.8977;0.875;0.8777;0.9333;0.938;0.9333;0.9327;0.9713;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 285};RandomForestClassifier(n_estimators=5, random_state=285)
RandomForestClassifier;0.8788;0.881;0.8788;0.879;0.9236;0.9261;0.9236;0.924;0.9167;0.9212;0.9167;0.9174;0.9702;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8859;0.888;0.8859;0.8855;0.8542;0.8549;0.8542;0.8541;0.9167;0.9228;0.9167;0.9168;0.9719;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8842;0.8878;0.8842;0.8847;0.8681;0.8764;0.8681;0.8701;0.9167;0.9174;0.9167;0.9166;0.9726;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 550};RandomForestClassifier(n_estimators=10, random_state=550)
RandomForestClassifier;0.8843;0.8874;0.8843;0.8845;0.8889;0.8921;0.8889;0.8899;0.9;0.9069;0.9;0.901;0.9735;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8843;0.8869;0.8843;0.8845;0.8958;0.8966;0.8958;0.8952;0.9;0.9087;0.9;0.9009;0.9699;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 933};RandomForestClassifier(n_estimators=10, random_state=933)
RandomForestClassifier;0.8788;0.8827;0.8788;0.8794;0.9028;0.9037;0.9028;0.9028;0.9;0.9069;0.9;0.9006;0.9696;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 550};RandomForestClassifier(n_estimators=20, random_state=550)
RandomForestClassifier;0.885;0.8899;0.885;0.8856;0.8542;0.8623;0.8542;0.8554;0.9;0.9027;0.9;0.8998;0.973;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 933};RandomForestClassifier(n_estimators=10, random_state=933)
RandomForestClassifier;0.8804;0.8841;0.8804;0.8807;0.8681;0.8751;0.8681;0.87;0.8833;0.8955;0.8833;0.8848;0.9724;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8843;0.8871;0.8843;0.8848;0.875;0.8749;0.875;0.8748;0.8833;0.8955;0.8833;0.8848;0.9715;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8819;0.8842;0.8819;0.8824;0.9236;0.9233;0.9236;0.9234;0.8833;0.8862;0.8833;0.8836;0.9736;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 550};RandomForestClassifier(n_estimators=20, random_state=550)
RandomForestClassifier;0.8788;0.8829;0.8788;0.8794;0.9028;0.9051;0.9028;0.9025;0.8833;0.8884;0.8833;0.8834;0.9717;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8696;0.8721;0.8696;0.8697;0.8958;0.8954;0.8958;0.8955;0.8833;0.8873;0.8833;0.8826;0.9715;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 933};RandomForestClassifier(n_estimators=10, random_state=933)
RandomForestClassifier;0.8896;0.8919;0.8896;0.8899;0.8403;0.8385;0.8403;0.8389;0.8667;0.8806;0.8667;0.8675;0.9754;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.875;0.8779;0.875;0.8754;0.8819;0.8975;0.8819;0.8844;0.8667;0.8709;0.8667;0.8673;0.9759;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 933};RandomForestClassifier(n_estimators=10, random_state=933)
RandomForestClassifier;0.8843;0.8875;0.8843;0.8846;0.8472;0.8485;0.8472;0.8476;0.8667;0.875;0.8667;0.8668;0.9739;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8765;0.8804;0.8765;0.8772;0.8819;0.8826;0.8819;0.8818;0.8667;0.875;0.8667;0.8668;0.9727;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8734;0.8764;0.8734;0.8737;0.8681;0.8726;0.8681;0.8691;0.8667;0.8722;0.8667;0.8667;0.9737;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 550};RandomForestClassifier(n_estimators=10, random_state=550)
KNeighborsClassifier;0.7947;0.8011;0.7947;0.7956;0.9167;0.9191;0.9167;0.917;0.8667;0.8829;0.8667;0.8663;0.9377;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8535;0.8572;0.8535;0.8536;0.8472;0.8542;0.8472;0.8456;0.8667;0.8829;0.8667;0.8663;0.8902;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
KNeighborsClassifier;0.8041;0.812;0.8041;0.8054;0.8542;0.8595;0.8542;0.8557;0.8667;0.8829;0.8667;0.8663;0.9393;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7947;0.8048;0.7947;0.796;0.875;0.8754;0.875;0.8745;0.8667;0.8829;0.8667;0.8663;0.9435;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8063;0.8175;0.8063;0.8078;0.8889;0.8912;0.8889;0.8895;0.8667;0.8829;0.8667;0.8663;0.9453;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8827;0.8864;0.8827;0.8832;0.8819;0.8856;0.8819;0.8832;0.8667;0.8724;0.8667;0.8662;0.9711;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8735;0.8761;0.8735;0.8735;0.9306;0.9302;0.9306;0.9303;0.8667;0.8699;0.8667;0.8659;0.9734;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 933};RandomForestClassifier(n_estimators=10, random_state=933)
RandomForestClassifier;0.8827;0.8871;0.8827;0.8831;0.8264;0.8321;0.8264;0.8261;0.8667;0.8851;0.8667;0.864;0.9771;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 550};RandomForestClassifier(n_estimators=10, random_state=550)
RandomForestClassifier;0.8889;0.8913;0.8889;0.8888;0.8889;0.8882;0.8889;0.8883;0.8667;0.8851;0.8667;0.864;0.9743;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
KNeighborsClassifier;0.8063;0.8123;0.8063;0.8073;0.9236;0.9258;0.9236;0.9238;0.85;0.8669;0.85;0.8505;0.9356;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.811;0.8171;0.811;0.8118;0.8611;0.8608;0.8611;0.8608;0.85;0.8669;0.85;0.8505;0.9451;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.882;0.885;0.882;0.8821;0.8611;0.8691;0.8611;0.8621;0.85;0.8583;0.85;0.8497;0.9739;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 550};RandomForestClassifier(n_estimators=20, random_state=550)
RandomForestClassifier;0.8835;0.8869;0.8835;0.8833;0.8819;0.8823;0.8819;0.8821;0.85;0.8583;0.85;0.8497;0.9751;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
KNeighborsClassifier;0.8101;0.8211;0.8101;0.8116;0.8264;0.8307;0.8264;0.8269;0.85;0.8597;0.85;0.849;0.9422;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8819;0.8859;0.8819;0.8823;0.8958;0.9038;0.8958;0.8974;0.85;0.8524;0.85;0.8488;0.974;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 550};RandomForestClassifier(n_estimators=20, random_state=550)
DecisionTreeClassifier;0.8642;0.8656;0.8642;0.8639;0.8403;0.8506;0.8403;0.8413;0.85;0.8577;0.85;0.8488;0.8987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
RandomForestClassifier;0.8735;0.88;0.8735;0.8739;0.8958;0.9051;0.8958;0.8969;0.85;0.8563;0.85;0.8487;0.9719;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
KNeighborsClassifier;0.8079;0.815;0.8079;0.8087;0.8333;0.8419;0.8333;0.8354;0.85;0.8724;0.85;0.8487;0.9384;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8095;0.8176;0.8095;0.8104;0.875;0.8765;0.875;0.8751;0.85;0.8699;0.85;0.8481;0.9396;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8063;0.8141;0.8063;0.8072;0.9097;0.9111;0.9097;0.9101;0.85;0.8699;0.85;0.8481;0.9358;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8549;0.8568;0.8549;0.8542;0.8056;0.8265;0.8056;0.8103;0.8333;0.8428;0.8333;0.8333;0.8917;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
KNeighborsClassifier;0.8025;0.8108;0.8025;0.8035;0.8681;0.8806;0.8681;0.87;0.8333;0.8603;0.8333;0.8332;0.941;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8048;0.8132;0.8048;0.8059;0.8611;0.8662;0.8611;0.8617;0.8333;0.8603;0.8333;0.8332;0.9422;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8148;0.8245;0.8148;0.8152;0.8611;0.8663;0.8611;0.8625;0.8333;0.8603;0.8333;0.8332;0.9415;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8774;0.8826;0.8774;0.8778;0.9028;0.9034;0.9028;0.9012;0.8333;0.8448;0.8333;0.8329;0.9715;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 550};RandomForestClassifier(n_estimators=10, random_state=550)
DecisionTreeClassifier;0.8588;0.8596;0.8588;0.8584;0.8403;0.8418;0.8403;0.8408;0.8333;0.8431;0.8333;0.8323;0.8941;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
DecisionTreeClassifier;0.8604;0.8626;0.8604;0.8607;0.8889;0.8941;0.8889;0.8898;0.8333;0.8431;0.8333;0.8323;0.8958;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
DecisionTreeClassifier;0.8673;0.8702;0.8673;0.8671;0.8056;0.8042;0.8056;0.8045;0.8333;0.8387;0.8333;0.8317;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
RandomForestClassifier;0.8803;0.8828;0.8803;0.8804;0.8958;0.9012;0.8958;0.8972;0.8333;0.8387;0.8333;0.8317;0.9739;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 550};RandomForestClassifier(n_estimators=10, random_state=550)
DecisionTreeClassifier;0.8518;0.856;0.8518;0.8517;0.8194;0.8208;0.8194;0.8201;0.8333;0.8317;0.8333;0.8315;0.8894;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
DecisionTreeClassifier;0.8765;0.8795;0.8765;0.8766;0.8472;0.846;0.8472;0.8458;0.8333;0.8338;0.8333;0.8312;0.9079;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
KNeighborsClassifier;0.8086;0.8137;0.8086;0.8093;0.875;0.8783;0.875;0.8755;0.8333;0.8594;0.8333;0.8298;0.94;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8079;0.8141;0.8079;0.8088;0.8681;0.8706;0.8681;0.8682;0.8333;0.8581;0.8333;0.8296;0.9407;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8905;0.8944;0.8905;0.8908;0.8542;0.8537;0.8542;0.8532;0.8167;0.8339;0.8167;0.8163;0.978;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 550};RandomForestClassifier(n_estimators=20, random_state=550)
DecisionTreeClassifier;0.8665;0.8691;0.8665;0.8666;0.7986;0.8176;0.7986;0.8022;0.8167;0.8289;0.8167;0.8152;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
KNeighborsClassifier;0.7995;0.8065;0.7995;0.8008;0.8681;0.8709;0.8681;0.8674;0.8167;0.8461;0.8167;0.815;0.9378;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8881;0.8907;0.8881;0.8883;0.8819;0.8827;0.8819;0.8821;0.8167;0.8212;0.8167;0.8146;0.9745;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
KNeighborsClassifier;0.804;0.811;0.804;0.8047;0.8472;0.8459;0.8472;0.8458;0.8167;0.8468;0.8167;0.8144;0.9408;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8033;0.8116;0.8033;0.8046;0.8403;0.8424;0.8403;0.8408;0.8167;0.8468;0.8167;0.8144;0.9397;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8257;0.8313;0.8257;0.8262;0.8472;0.8512;0.8472;0.8484;0.8167;0.8468;0.8167;0.8144;0.943;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8048;0.814;0.8048;0.8058;0.8403;0.846;0.8403;0.8407;0.8167;0.8468;0.8167;0.8144;0.9417;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8063;0.8151;0.8063;0.8076;0.8611;0.8621;0.8611;0.861;0.8167;0.8468;0.8167;0.8144;0.9412;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8048;0.8076;0.8048;0.805;0.8819;0.895;0.8819;0.8822;0.8167;0.8468;0.8167;0.8144;0.9424;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8147;0.8207;0.8147;0.8157;0.8681;0.8742;0.8681;0.8695;0.8167;0.8468;0.8167;0.8144;0.9437;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8071;0.8148;0.8071;0.8078;0.8542;0.8686;0.8542;0.8568;0.8167;0.8442;0.8167;0.8144;0.9399;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8111;0.8215;0.8111;0.8124;0.8542;0.8599;0.8542;0.855;0.8167;0.8468;0.8167;0.8144;0.9401;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8442;0.8476;0.8442;0.8441;0.8819;0.8843;0.8819;0.8817;0.8167;0.8153;0.8167;0.8137;0.8841;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
KNeighborsClassifier;0.8072;0.816;0.8072;0.8086;0.875;0.8748;0.875;0.873;0.8167;0.831;0.8167;0.8126;0.9417;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8087;0.8155;0.8087;0.8093;0.8889;0.8909;0.8889;0.8885;0.8167;0.8472;0.8167;0.8106;0.9404;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7091;0.7176;0.7091;0.7097;0.8056;0.8088;0.8056;0.8064;0.8;0.8151;0.8;0.8001;0.8981;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
MLPClassifier;0.7007;0.7074;0.7007;0.7016;0.8681;0.8676;0.8681;0.8678;0.8;0.8108;0.8;0.7996;0.8968;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
DecisionTreeClassifier;0.8789;0.8807;0.8789;0.8789;0.8472;0.8461;0.8472;0.8465;0.8;0.8151;0.8;0.7996;0.9091;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
KNeighborsClassifier;0.8172;0.825;0.8172;0.8173;0.8403;0.8497;0.8403;0.8422;0.8;0.8346;0.8;0.7988;0.9409;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8827;0.8842;0.8827;0.8824;0.8125;0.8229;0.8125;0.8144;0.8;0.799;0.8;0.7985;0.9121;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
DecisionTreeClassifier;0.8588;0.8615;0.8588;0.8585;0.8611;0.8679;0.8611;0.8626;0.8;0.8067;0.8;0.7974;0.8946;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
KNeighborsClassifier;0.7916;0.7994;0.7916;0.7932;0.9028;0.9025;0.9028;0.9025;0.8;0.8198;0.8;0.7969;0.9393;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8071;0.8156;0.8071;0.8081;0.8403;0.8479;0.8403;0.8403;0.8;0.8345;0.8;0.7952;0.9405;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.7145;0.7203;0.7145;0.7153;0.7917;0.8055;0.7917;0.7945;0.7833;0.7913;0.7833;0.7833;0.8993;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
MLPClassifier;0.7067;0.7132;0.7067;0.7069;0.8264;0.8264;0.8264;0.826;0.7833;0.8011;0.7833;0.7833;0.896;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
DecisionTreeClassifier;0.8611;0.8625;0.8611;0.8608;0.8611;0.8663;0.8611;0.8625;0.7833;0.7906;0.7833;0.7822;0.8958;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
DecisionTreeClassifier;0.8542;0.8573;0.8542;0.8542;0.875;0.8777;0.875;0.8758;0.7833;0.7815;0.7833;0.7814;0.8922;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
DecisionTreeClassifier;0.8619;0.8632;0.8619;0.8619;0.8403;0.8456;0.8403;0.8407;0.7833;0.7945;0.7833;0.7802;0.8969;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
DecisionTreeClassifier;0.8627;0.864;0.8627;0.8625;0.8611;0.8638;0.8611;0.8619;0.7833;0.786;0.7833;0.7789;0.897;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
MLPClassifier;0.7083;0.7137;0.7083;0.7086;0.8333;0.8307;0.8333;0.8305;0.7667;0.7746;0.7667;0.7681;0.9012;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
MLPClassifier;0.6999;0.7055;0.6999;0.7005;0.8056;0.8098;0.8056;0.8068;0.7667;0.7758;0.7667;0.7672;0.8999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
MLPClassifier;0.7153;0.7221;0.7153;0.716;0.8403;0.8475;0.8403;0.842;0.7667;0.7687;0.7667;0.7668;0.8992;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
MLPClassifier;0.7067;0.7147;0.7067;0.7079;0.8333;0.8404;0.8333;0.8348;0.7667;0.7671;0.7667;0.7666;0.9006;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
MLPClassifier;0.7061;0.7119;0.7061;0.7067;0.8819;0.8915;0.8819;0.8838;0.7667;0.7731;0.7667;0.7663;0.8988;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
MLPClassifier;0.7099;0.7145;0.7099;0.7101;0.7986;0.7975;0.7986;0.7976;0.7667;0.7684;0.7667;0.7662;0.9013;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
MLPClassifier;0.7006;0.7066;0.7006;0.7015;0.8542;0.8553;0.8542;0.8546;0.7667;0.7698;0.7667;0.766;0.8985;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
MLPClassifier;0.7106;0.7155;0.7106;0.7107;0.7778;0.7792;0.7778;0.7762;0.7667;0.7688;0.7667;0.7656;0.9002;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
MLPClassifier;0.6968;0.7041;0.6968;0.697;0.7708;0.7723;0.7708;0.7706;0.7667;0.7688;0.7667;0.7656;0.8973;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
MLPClassifier;0.7006;0.7059;0.7006;0.7008;0.875;0.8811;0.875;0.8764;0.7667;0.7773;0.7667;0.7652;0.8959;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
MLPClassifier;0.7061;0.7117;0.7061;0.7063;0.875;0.8786;0.875;0.8762;0.7667;0.7773;0.7667;0.7652;0.8973;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
MLPClassifier;0.7152;0.7198;0.7152;0.7157;0.7708;0.7898;0.7708;0.7752;0.7667;0.7736;0.7667;0.765;0.8994;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
DecisionTreeClassifier;0.8495;0.8525;0.8495;0.8494;0.8819;0.8861;0.8819;0.8805;0.7667;0.7701;0.7667;0.7643;0.8876;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
MLPClassifier;0.7092;0.7159;0.7092;0.7094;0.8333;0.8389;0.8333;0.8343;0.7667;0.7701;0.7667;0.7643;0.8985;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
DecisionTreeClassifier;0.8542;0.8561;0.8542;0.8542;0.8958;0.8964;0.8958;0.896;0.7667;0.777;0.7667;0.7642;0.8912;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
DecisionTreeClassifier;0.865;0.8659;0.865;0.8644;0.8403;0.8422;0.8403;0.84;0.7667;0.7639;0.7667;0.7616;0.8992;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
DecisionTreeClassifier;0.8635;0.8651;0.8635;0.8633;0.8889;0.8892;0.8889;0.889;0.7667;0.7698;0.7667;0.7615;0.8982;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
DecisionTreeClassifier;0.8673;0.8685;0.8673;0.867;0.8611;0.8721;0.8611;0.863;0.7667;0.7675;0.7667;0.7613;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
MLPClassifier;0.7052;0.711;0.7052;0.7053;0.8125;0.826;0.8125;0.8156;0.75;0.7614;0.75;0.7513;0.8991;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
MLPClassifier;0.7045;0.7098;0.7045;0.7041;0.8681;0.8695;0.8681;0.8686;0.75;0.7517;0.75;0.7496;0.8971;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
MLPClassifier;0.6984;0.7028;0.6984;0.6981;0.8611;0.8671;0.8611;0.8617;0.75;0.7542;0.75;0.7482;0.8951;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
MLPClassifier;0.6936;0.7023;0.6936;0.6938;0.8611;0.8659;0.8611;0.8616;0.75;0.7553;0.75;0.747;0.8963;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
DecisionTreeClassifier;0.868;0.872;0.868;0.8682;0.875;0.8777;0.875;0.8759;0.75;0.7542;0.75;0.7468;0.9021;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
SVC;0.7122;0.7365;0.7122;0.7121;0.8611;0.8716;0.8611;0.8637;0.75;0.7977;0.75;0.7465;0.8817;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.7221;0.7416;0.7221;0.7212;0.8333;0.8345;0.8333;0.8337;0.75;0.7977;0.75;0.7465;0.8848;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.7068;0.7364;0.7068;0.707;0.8472;0.8662;0.8472;0.85;0.75;0.7977;0.75;0.7465;0.8756;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.7215;0.7355;0.7215;0.7225;0.8333;0.8491;0.8333;0.8363;0.75;0.7977;0.75;0.7465;0.8802;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.7091;0.7313;0.7091;0.7078;0.8125;0.8551;0.8125;0.8127;0.75;0.7977;0.75;0.7465;0.8801;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.7377;0.7559;0.7377;0.7405;0.8125;0.8408;0.8125;0.8124;0.75;0.7811;0.75;0.7454;0.8835;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.716;0.7304;0.716;0.7157;0.8542;0.857;0.8542;0.8552;0.75;0.8052;0.75;0.7421;0.8786;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
MLPClassifier;0.7122;0.718;0.7122;0.7119;0.7917;0.7917;0.7917;0.7917;0.7333;0.7458;0.7333;0.735;0.9022;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
DecisionTreeClassifier;0.8557;0.8579;0.8557;0.856;0.8681;0.8793;0.8681;0.8668;0.7333;0.7406;0.7333;0.7346;0.8923;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
MLPClassifier;0.7037;0.7098;0.7037;0.7043;0.8333;0.836;0.8333;0.8341;0.7333;0.7419;0.7333;0.7322;0.8971;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
DecisionTreeClassifier;0.8573;0.8606;0.8573;0.8568;0.8542;0.8556;0.8542;0.8541;0.7333;0.7394;0.7333;0.7319;0.8935;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
MLPClassifier;0.7068;0.7127;0.7068;0.7072;0.8056;0.812;0.8056;0.8073;0.7333;0.7394;0.7333;0.7319;0.8989;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
DecisionTreeClassifier;0.8618;0.8634;0.8618;0.8614;0.8889;0.9016;0.8889;0.8906;0.7333;0.7495;0.7333;0.7314;0.8964;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
MLPClassifier;0.7052;0.7108;0.7052;0.7054;0.8472;0.8468;0.8472;0.8468;0.7333;0.7361;0.7333;0.7313;0.8944;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
DecisionTreeClassifier;0.8543;0.8571;0.8543;0.8545;0.8472;0.8506;0.8472;0.8471;0.7333;0.7302;0.7333;0.7309;0.8913;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
DecisionTreeClassifier;0.8595;0.8634;0.8595;0.8596;0.8889;0.8907;0.8889;0.8885;0.7333;0.7375;0.7333;0.7301;0.8952;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
SVC;0.7184;0.7368;0.7184;0.7197;0.8472;0.8685;0.8472;0.851;0.7333;0.7653;0.7333;0.7298;0.881;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.7176;0.737;0.7176;0.7169;0.7708;0.7903;0.7708;0.7717;0.7333;0.7653;0.7333;0.7298;0.8832;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.7138;0.7379;0.7138;0.7142;0.7847;0.8132;0.7847;0.7899;0.7333;0.7653;0.7333;0.7298;0.8801;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
MLPClassifier;0.7199;0.7274;0.7199;0.7211;0.8611;0.8638;0.8611;0.8619;0.7333;0.7479;0.7333;0.7296;0.8996;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 618, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=618)
SVC;0.7107;0.7354;0.7107;0.7122;0.8403;0.8583;0.8403;0.8433;0.7333;0.753;0.7333;0.7291;0.8804;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
DecisionTreeClassifier;0.8711;0.8753;0.8711;0.8708;0.8472;0.8495;0.8472;0.8481;0.7333;0.7389;0.7333;0.7289;0.9039;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 191};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=191)
DecisionTreeClassifier;0.8518;0.8544;0.8518;0.8518;0.8403;0.8434;0.8403;0.8411;0.7333;0.7389;0.7333;0.7289;0.8889;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 242};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=242)
SVC;0.7191;0.7437;0.7191;0.7195;0.8542;0.875;0.8542;0.8575;0.7333;0.7896;0.7333;0.7269;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.716;0.735;0.716;0.7152;0.7708;0.8002;0.7708;0.7753;0.7333;0.7896;0.7333;0.7269;0.8844;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.7145;0.7408;0.7145;0.7143;0.8194;0.8329;0.8194;0.8227;0.7333;0.7896;0.7333;0.7269;0.8783;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.7114;0.7363;0.7114;0.7103;0.8264;0.8447;0.8264;0.8283;0.7333;0.7896;0.7333;0.7269;0.8816;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.7168;0.7372;0.7168;0.7161;0.8125;0.8484;0.8125;0.8148;0.7333;0.7705;0.7333;0.726;0.8854;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
MLPClassifier;0.7029;0.7088;0.7029;0.7027;0.8333;0.834;0.8333;0.8334;0.7167;0.7222;0.7167;0.7161;0.9006;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
MLPClassifier;0.7052;0.7078;0.7052;0.7056;0.8264;0.83;0.8264;0.827;0.7167;0.7195;0.7167;0.7158;0.8969;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 92, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=92)
SVC;0.7129;0.7284;0.7129;0.7124;0.8125;0.8243;0.8125;0.8151;0.7167;0.7683;0.7167;0.7157;0.8805;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.7153;0.7421;0.7153;0.7153;0.7778;0.7892;0.7778;0.781;0.7167;0.75;0.7167;0.714;0.8799;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.7184;0.7459;0.7184;0.7185;0.7847;0.8047;0.7847;0.7885;0.7167;0.7484;0.7167;0.7123;0.8849;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.7221;0.7378;0.7221;0.7227;0.8472;0.8585;0.8472;0.8495;0.7167;0.7746;0.7167;0.7117;0.883;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.7137;0.7356;0.7137;0.7131;0.8194;0.83;0.8194;0.8205;0.7167;0.7746;0.7167;0.7117;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.723;0.7513;0.723;0.7242;0.7847;0.7924;0.7847;0.7845;0.7;0.7361;0.7;0.6989;0.8813;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.7184;0.7395;0.7184;0.7175;0.7708;0.7755;0.7708;0.772;0.7;0.7361;0.7;0.6989;0.8855;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.7191;0.7399;0.7191;0.7193;0.8125;0.8319;0.8125;0.8155;0.7;0.7351;0.7;0.6981;0.8871;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.723;0.7343;0.723;0.7221;0.7917;0.8116;0.7917;0.7947;0.7;0.7351;0.7;0.6981;0.8809;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.7237;0.7359;0.7237;0.7245;0.8264;0.8403;0.8264;0.8281;0.7;0.7351;0.7;0.6981;0.8791;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
SVC;0.723;0.757;0.723;0.7229;0.7917;0.8087;0.7917;0.7955;0.7;0.7351;0.7;0.6981;0.8848;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 682};SVC(C=10, probability=True, random_state=682)
SVC;0.7145;0.7401;0.7145;0.7141;0.8194;0.833;0.8194;0.822;0.7;0.76;0.7;0.6963;0.8797;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.733;0.7479;0.733;0.7329;0.7431;0.7444;0.7431;0.7416;0.7;0.76;0.7;0.6963;0.8874;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
SVC;0.7331;0.7508;0.7331;0.7326;0.7778;0.7876;0.7778;0.7804;0.6833;0.7253;0.6833;0.6797;0.8881;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 175};SVC(C=10, probability=True, random_state=175)
MLPClassifier;0.7145;0.7212;0.7145;0.715;0.7778;0.791;0.7778;0.7812;0.6667;0.679;0.6667;0.6627;0.8996;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
MLPClassifier;0.7045;0.7093;0.7045;0.7048;0.8264;0.837;0.8264;0.8287;0.6667;0.6929;0.6667;0.6617;0.899;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 259, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=259)
LogisticRegression;0.6288;0.6375;0.6288;0.628;0.5833;0.58;0.5833;0.5811;0.6167;0.625;0.6167;0.618;0.8244;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.6397;0.6467;0.6397;0.6404;0.6458;0.6569;0.6458;0.6472;0.6167;0.6308;0.6167;0.6153;0.8193;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6481;0.6596;0.6481;0.6486;0.5903;0.6082;0.5903;0.5924;0.6167;0.6308;0.6167;0.6153;0.821;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6342;0.6455;0.6342;0.6351;0.7153;0.7338;0.7153;0.7185;0.6167;0.6308;0.6167;0.6153;0.8166;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6382;0.6468;0.6382;0.6392;0.625;0.6259;0.625;0.6243;0.6167;0.6308;0.6167;0.6153;0.8225;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6366;0.6452;0.6366;0.6378;0.6042;0.6187;0.6042;0.6085;0.6167;0.6308;0.6167;0.6153;0.8215;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6327;0.6416;0.6327;0.6336;0.6597;0.6611;0.6597;0.658;0.6167;0.6308;0.6167;0.6153;0.8223;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.635;0.6458;0.635;0.6362;0.6319;0.6405;0.6319;0.6308;0.6167;0.6308;0.6167;0.6153;0.8198;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6296;0.639;0.6296;0.6303;0.6875;0.6915;0.6875;0.6889;0.6167;0.6308;0.6167;0.6153;0.8146;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6396;0.6474;0.6396;0.6402;0.625;0.6694;0.625;0.6265;0.6167;0.6308;0.6167;0.6153;0.8184;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6335;0.6451;0.6335;0.6354;0.6944;0.7064;0.6944;0.6951;0.6167;0.6308;0.6167;0.6153;0.8156;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.6451;0.6561;0.6451;0.6461;0.625;0.6519;0.625;0.6244;0.6167;0.6308;0.6167;0.6153;0.8209;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.6311;0.6405;0.6311;0.6313;0.7292;0.7383;0.7292;0.7282;0.6167;0.6308;0.6167;0.6153;0.8129;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.6273;0.6376;0.6273;0.6278;0.6875;0.691;0.6875;0.6864;0.6;0.6091;0.6;0.5988;0.8166;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6374;0.6464;0.6374;0.6374;0.5903;0.5939;0.5903;0.5915;0.6;0.6091;0.6;0.5988;0.8204;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.6366;0.6461;0.6366;0.6362;0.6458;0.6529;0.6458;0.6479;0.6;0.6091;0.6;0.5988;0.821;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6451;0.6547;0.6451;0.6454;0.6042;0.6156;0.6042;0.6079;0.6;0.6091;0.6;0.5988;0.8225;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6351;0.6478;0.6351;0.6362;0.5903;0.6041;0.5903;0.5938;0.6;0.6091;0.6;0.5988;0.8197;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6374;0.6492;0.6374;0.6382;0.6389;0.6433;0.6389;0.6405;0.6;0.6091;0.6;0.5988;0.8195;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.639;0.6462;0.639;0.6386;0.6319;0.6321;0.6319;0.6299;0.6;0.6083;0.6;0.5987;0.8228;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6489;0.6609;0.6489;0.6505;0.5625;0.5611;0.5625;0.5601;0.6;0.6083;0.6;0.5987;0.8249;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.635;0.6439;0.635;0.6356;0.6597;0.6719;0.6597;0.661;0.6;0.6083;0.6;0.5987;0.8157;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6258;0.6347;0.6258;0.6262;0.6944;0.7078;0.6944;0.6958;0.6;0.6083;0.6;0.5987;0.815;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6381;0.6481;0.6381;0.6389;0.5694;0.5728;0.5694;0.5702;0.6;0.6083;0.6;0.5987;0.8212;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.6458;0.6571;0.6458;0.6474;0.5556;0.5745;0.5556;0.5602;0.6;0.6083;0.6;0.5987;0.8282;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.638;0.6463;0.638;0.6389;0.6389;0.6464;0.6389;0.6369;0.6;0.6083;0.6;0.5987;0.8205;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.6442;0.6551;0.6442;0.6454;0.6181;0.6205;0.6181;0.6183;0.6;0.6083;0.6;0.5987;0.82;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6397;0.6502;0.6397;0.6401;0.6389;0.6402;0.6389;0.6391;0.6;0.6083;0.6;0.5987;0.8213;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
LogisticRegression;0.632;0.6389;0.632;0.6319;0.6389;0.6361;0.6389;0.6369;0.5833;0.5886;0.5833;0.5826;0.8203;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 759, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=759)"
LogisticRegression;0.6227;0.6304;0.6227;0.6233;0.7014;0.7078;0.7014;0.702;0.5667;0.566;0.5667;0.5632;0.8167;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 208, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=208)"
