Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
KNeighborsClassifier,0.9777,0.978,0.9777,0.9776,0.9793,0.9795,0.9793,0.9792,0.9167,0.9333,0.9167,0.9184,0.9946,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
RandomForestClassifier,0.9753,0.9755,0.9753,0.9753,0.9782,0.9784,0.9782,0.9782,0.9167,0.9333,0.9167,0.9184,0.9965,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 195}","RandomForestClassifier(n_estimators=20, random_state=195)"
KNeighborsClassifier,0.9757,0.976,0.9757,0.9756,0.9839,0.9841,0.9839,0.9839,0.8667,0.894,0.8667,0.8683,0.9932,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
DecisionTreeClassifier,0.9484,0.9493,0.9484,0.9483,0.9498,0.9511,0.9498,0.9498,0.8667,0.8764,0.8667,0.8657,0.99,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)"
DecisionTreeClassifier,0.95,0.951,0.95,0.9499,0.9538,0.9549,0.9538,0.9538,0.8333,0.862,0.8333,0.8361,0.9887,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 183}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=183)"
RandomForestClassifier,0.9767,0.977,0.9767,0.9767,0.9826,0.9829,0.9826,0.9826,0.8333,0.8576,0.8333,0.8346,0.9958,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 629}","RandomForestClassifier(n_estimators=20, random_state=629)"
MLPClassifier,0.8829,0.8839,0.8829,0.8828,0.8835,0.8852,0.8835,0.8838,0.8,0.8346,0.8,0.7988,0.9719,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 156, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=156)"
RandomForestClassifier,0.9772,0.9774,0.9772,0.9771,0.9799,0.9801,0.9799,0.9799,0.7833,0.8065,0.7833,0.7883,0.9953,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 10, 'random_state': 383}","RandomForestClassifier(n_estimators=10, random_state=383)"
DecisionTreeClassifier,0.949,0.9502,0.949,0.9489,0.9491,0.9499,0.9491,0.9491,0.7833,0.7902,0.7833,0.7855,0.9882,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)"
KNeighborsClassifier,0.9758,0.9761,0.9758,0.9757,0.9806,0.9808,0.9806,0.9805,0.7833,0.7884,0.7833,0.7846,0.9935,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
MLPClassifier,0.8904,0.8927,0.8904,0.8907,0.8788,0.8822,0.8788,0.8776,0.7167,0.7462,0.7167,0.7158,0.9732,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 59, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=59)"
MLPClassifier,0.8584,0.8603,0.8584,0.8583,0.8852,0.8857,0.8852,0.8851,0.7167,0.7299,0.7167,0.7121,0.9609,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 886, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=886)"
SVC,0.8207,0.8238,0.8207,0.8216,0.8186,0.8221,0.8186,0.8197,0.6833,0.7482,0.6833,0.6926,0.9034,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 394}","SVC(C=10, kernel='linear', probability=True, random_state=394)"
LogisticRegression,0.7825,0.7836,0.7825,0.7829,0.7882,0.7883,0.7882,0.7882,0.65,0.6908,0.65,0.6583,0.9194,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
SVC,0.8222,0.8248,0.8222,0.8226,0.8206,0.8215,0.8206,0.8209,0.65,0.6905,0.65,0.6554,0.9005,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 754}","SVC(C=10, kernel='linear', probability=True, random_state=754)"
SVC,0.8311,0.8331,0.8311,0.8313,0.8273,0.8282,0.8273,0.8276,0.65,0.6527,0.65,0.6417,0.9036,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 574}","SVC(C=1, kernel='linear', probability=True, random_state=574)"
LogisticRegression,0.7869,0.7877,0.7869,0.7867,0.7768,0.7765,0.7768,0.7765,0.6167,0.6667,0.6167,0.6248,0.9206,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 393, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=393)"
LogisticRegression,0.7839,0.7847,0.7839,0.7839,0.7871,0.788,0.7871,0.7872,0.6167,0.6109,0.6167,0.6064,0.9207,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 860, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=860)"
