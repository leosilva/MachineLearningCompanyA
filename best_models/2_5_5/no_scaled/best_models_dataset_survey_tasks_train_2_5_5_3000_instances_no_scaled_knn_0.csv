Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9203;0.921;0.9203;0.9204;0.9172;0.9177;0.9172;0.9173;0.85;0.871;0.85;0.8519;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9188;0.9194;0.9188;0.919;0.9262;0.9261;0.9262;0.9261;0.85;0.8599;0.85;0.8507;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9167;0.9175;0.9167;0.9169;0.9418;0.9434;0.9418;0.9421;0.85;0.8599;0.85;0.8507;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9182;0.919;0.9182;0.9184;0.915;0.9165;0.915;0.9153;0.8333;0.8498;0.8333;0.8342;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9169;0.9177;0.9169;0.9171;0.9284;0.9297;0.9284;0.9288;0.8333;0.8533;0.8333;0.8339;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9217;0.9224;0.9217;0.9219;0.9295;0.9297;0.9295;0.9295;0.8167;0.8401;0.8167;0.8175;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9177;0.9185;0.9177;0.9179;0.9295;0.9296;0.9295;0.9296;0.8167;0.8401;0.8167;0.8175;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9188;0.92;0.9188;0.9191;0.9195;0.9206;0.9195;0.9198;0.8167;0.8269;0.8167;0.8174;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9191;0.9203;0.9191;0.9194;0.9239;0.925;0.9239;0.9242;0.8167;0.8269;0.8167;0.8174;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9193;0.9202;0.9193;0.9195;0.9284;0.9283;0.9284;0.9283;0.8167;0.8269;0.8167;0.8174;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9182;0.9192;0.9182;0.9184;0.9374;0.9378;0.9374;0.9375;0.8167;0.8269;0.8167;0.8174;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9205;0.9216;0.9205;0.9207;0.9228;0.9252;0.9228;0.9234;0.8167;0.8269;0.8167;0.8174;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9226;0.9233;0.9226;0.9227;0.9172;0.9179;0.9172;0.9175;0.8167;0.8269;0.8167;0.8174;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9166;0.9172;0.9166;0.9168;0.9273;0.9272;0.9273;0.9272;0.8167;0.8292;0.8167;0.8172;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9203;0.9213;0.9203;0.9206;0.9139;0.9155;0.9139;0.9144;0.8;0.8233;0.8;0.8024;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9151;0.9164;0.9151;0.9154;0.9284;0.9281;0.9284;0.9282;0.8;0.8101;0.8;0.8019;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9196;0.9204;0.9196;0.9197;0.9273;0.928;0.9273;0.9275;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9162;0.9174;0.9162;0.9165;0.9273;0.9273;0.9273;0.9273;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.918;0.9189;0.918;0.9182;0.9161;0.9171;0.9161;0.9164;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.92;0.9208;0.92;0.9202;0.9262;0.9258;0.9262;0.9257;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9176;0.9188;0.9176;0.9179;0.953;0.9538;0.953;0.9532;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9169;0.9178;0.9169;0.917;0.915;0.9149;0.915;0.9149;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9181;0.9189;0.9181;0.9183;0.9329;0.9348;0.9329;0.9333;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9197;0.9208;0.9197;0.92;0.9239;0.9246;0.9239;0.9242;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.92;0.921;0.92;0.9202;0.9295;0.9315;0.9295;0.9299;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9165;0.9174;0.9165;0.9168;0.9284;0.9281;0.9284;0.9282;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.917;0.9179;0.917;0.9172;0.9239;0.9253;0.9239;0.9243;0.8;0.8157;0.8;0.8009;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9201;0.921;0.9201;0.9203;0.9217;0.9222;0.9217;0.9218;0.7833;0.7986;0.7833;0.7854;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9192;0.9203;0.9192;0.9195;0.9251;0.9259;0.9251;0.9253;0.7833;0.7986;0.7833;0.7854;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9212;0.9223;0.9212;0.9214;0.9239;0.9247;0.9239;0.9242;0.7833;0.7934;0.7833;0.7843;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
