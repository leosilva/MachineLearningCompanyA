Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8276;0.8354;0.8276;0.8285;0.7826;0.8007;0.7826;0.7854;0.7833;0.7889;0.7833;0.7772;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
SVC;0.7311;0.7662;0.7311;0.7301;0.8406;0.8388;0.8406;0.8389;0.7667;0.7795;0.7667;0.7691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7343;0.7668;0.7343;0.7355;0.7391;0.785;0.7391;0.7411;0.7667;0.7795;0.7667;0.7691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7391;0.7736;0.7391;0.7389;0.7971;0.8082;0.7971;0.7985;0.7667;0.7795;0.7667;0.7691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7294;0.7631;0.7294;0.7283;0.8406;0.8383;0.8406;0.8376;0.7667;0.7795;0.7667;0.7691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.7391;0.7697;0.7391;0.7394;0.7391;0.7514;0.7391;0.7415;0.7667;0.7795;0.7667;0.7691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.7376;0.7714;0.7376;0.738;0.7971;0.8199;0.7971;0.802;0.7667;0.7795;0.7667;0.7691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
SVC;0.7232;0.7598;0.7232;0.7229;0.8116;0.8556;0.8116;0.8145;0.7667;0.7866;0.7667;0.7689;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7167;0.7505;0.7167;0.7167;0.8841;0.8959;0.8841;0.8844;0.7667;0.7866;0.7667;0.7689;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
KNeighborsClassifier;0.7794;0.791;0.7794;0.7787;0.8261;0.8391;0.8261;0.8294;0.7667;0.7723;0.7667;0.7668;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7583;0.7705;0.7583;0.7593;0.8116;0.8093;0.8116;0.8095;0.7667;0.7708;0.7667;0.7646;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8229;0.8308;0.8229;0.8229;0.8406;0.8391;0.8406;0.8396;0.7667;0.775;0.7667;0.7631;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 948};RandomForestClassifier(n_estimators=10, random_state=948)
RandomForestClassifier;0.8164;0.8236;0.8164;0.8172;0.8116;0.8135;0.8116;0.8117;0.7667;0.775;0.7667;0.7631;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 749};RandomForestClassifier(n_estimators=5, random_state=749)
RandomForestClassifier;0.8278;0.8321;0.8278;0.8285;0.7536;0.7691;0.7536;0.7579;0.7667;0.775;0.7667;0.7631;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 749};RandomForestClassifier(n_estimators=20, random_state=749)
RandomForestClassifier;0.818;0.8256;0.818;0.8171;0.8116;0.8144;0.8116;0.812;0.7667;0.775;0.7667;0.7631;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 948};RandomForestClassifier(n_estimators=20, random_state=948)
DecisionTreeClassifier;0.818;0.8259;0.818;0.8188;0.7971;0.8095;0.7971;0.7988;0.7667;0.7731;0.7667;0.763;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
DecisionTreeClassifier;0.8166;0.8272;0.8166;0.8174;0.8551;0.8603;0.8551;0.8528;0.7667;0.776;0.7667;0.7627;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
RandomForestClassifier;0.8293;0.8391;0.8293;0.829;0.8406;0.8383;0.8406;0.8376;0.7667;0.7656;0.7667;0.7593;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 655};RandomForestClassifier(n_estimators=10, random_state=655)
MLPClassifier;0.7326;0.7589;0.7326;0.7332;0.8116;0.8227;0.8116;0.813;0.75;0.7747;0.75;0.753;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
RandomForestClassifier;0.8165;0.8231;0.8165;0.815;0.7536;0.7609;0.7536;0.7521;0.75;0.7747;0.75;0.753;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 749};RandomForestClassifier(n_estimators=5, random_state=749)
SVC;0.7424;0.7782;0.7424;0.7422;0.7101;0.7306;0.7101;0.7108;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7392;0.7738;0.7392;0.739;0.7681;0.79;0.7681;0.7726;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
SVC;0.7197;0.754;0.7197;0.7197;0.8261;0.8331;0.8261;0.8279;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.731;0.7668;0.731;0.7303;0.7536;0.7751;0.7536;0.7601;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7214;0.7561;0.7214;0.7205;0.8696;0.8824;0.8696;0.8714;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7165;0.7517;0.7165;0.7142;0.9275;0.9328;0.9275;0.9283;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.728;0.7637;0.728;0.7292;0.8261;0.8722;0.8261;0.83;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.7342;0.7665;0.7342;0.7348;0.7826;0.8041;0.7826;0.7876;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
SVC;0.7151;0.7498;0.7151;0.7151;0.8406;0.8657;0.8406;0.8415;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
SVC;0.7359;0.773;0.7359;0.7359;0.7971;0.8044;0.7971;0.7991;0.75;0.7667;0.75;0.7529;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
DecisionTreeClassifier;0.8164;0.8287;0.8164;0.8183;0.7391;0.7395;0.7391;0.7391;0.75;0.7614;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
DecisionTreeClassifier;0.831;0.839;0.831;0.8321;0.7971;0.7994;0.7971;0.798;0.75;0.7614;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
KNeighborsClassifier;0.7568;0.7693;0.7568;0.7568;0.8261;0.8271;0.8261;0.8263;0.75;0.77;0.75;0.7511;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.731;0.7625;0.731;0.7306;0.8116;0.8129;0.8116;0.8072;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.736;0.7633;0.736;0.7366;0.7971;0.8177;0.7971;0.8;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7373;0.7652;0.7373;0.7362;0.7826;0.7778;0.7826;0.7785;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7328;0.7616;0.7328;0.7319;0.7391;0.7439;0.7391;0.7398;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7357;0.7624;0.7357;0.7353;0.7536;0.7558;0.7536;0.7545;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
MLPClassifier;0.7294;0.7588;0.7294;0.729;0.8986;0.9006;0.8986;0.8984;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
MLPClassifier;0.7214;0.7462;0.7214;0.7205;0.8841;0.914;0.8841;0.8867;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
MLPClassifier;0.7311;0.7615;0.7311;0.732;0.8551;0.8761;0.8551;0.8552;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7375;0.7671;0.7375;0.7372;0.8696;0.8701;0.8696;0.8695;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
MLPClassifier;0.7262;0.7518;0.7262;0.7273;0.8116;0.8349;0.8116;0.8164;0.75;0.7651;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
KNeighborsClassifier;0.7746;0.7814;0.7746;0.7746;0.8116;0.8172;0.8116;0.8127;0.75;0.7581;0.75;0.7497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.81;0.8159;0.81;0.8099;0.9275;0.9336;0.9275;0.9286;0.75;0.7619;0.75;0.7489;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 749};RandomForestClassifier(n_estimators=20, random_state=749)
MLPClassifier;0.7343;0.7639;0.7343;0.7334;0.7101;0.6996;0.7101;0.7024;0.75;0.7655;0.75;0.7476;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
MLPClassifier;0.7263;0.7535;0.7263;0.7261;0.8406;0.8374;0.8406;0.8379;0.75;0.7655;0.75;0.7476;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
KNeighborsClassifier;0.7907;0.8009;0.7907;0.7915;0.7971;0.7987;0.7971;0.7947;0.75;0.7568;0.75;0.7468;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.7229;0.7518;0.7229;0.7235;0.7971;0.7976;0.7971;0.7966;0.7333;0.7642;0.7333;0.7377;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
DecisionTreeClassifier;0.8099;0.8224;0.8099;0.8106;0.7536;0.7649;0.7536;0.756;0.7333;0.747;0.7333;0.7373;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=148)
DecisionTreeClassifier;0.818;0.8279;0.818;0.8193;0.7101;0.7278;0.7101;0.7151;0.7333;0.747;0.7333;0.7373;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=482)
SVC;0.7343;0.766;0.7343;0.7334;0.8116;0.8156;0.8116;0.8126;0.7333;0.7481;0.7333;0.7369;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7359;0.7688;0.7359;0.7348;0.7826;0.8038;0.7826;0.785;0.7333;0.7658;0.7333;0.736;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.7391;0.774;0.7391;0.7392;0.6667;0.689;0.6667;0.6713;0.7333;0.7454;0.7333;0.736;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.7264;0.7621;0.7264;0.7254;0.7971;0.8413;0.7971;0.7978;0.7333;0.7658;0.7333;0.736;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
SVC;0.7265;0.7634;0.7265;0.7263;0.7971;0.8134;0.7971;0.8011;0.7333;0.7572;0.7333;0.7359;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
MLPClassifier;0.7311;0.7564;0.7311;0.7322;0.7826;0.8108;0.7826;0.7848;0.7333;0.7639;0.7333;0.7357;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
MLPClassifier;0.7262;0.7528;0.7262;0.7275;0.7681;0.7962;0.7681;0.767;0.7333;0.7522;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
MLPClassifier;0.752;0.7773;0.752;0.7527;0.7101;0.7298;0.7101;0.7162;0.7333;0.7522;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
MLPClassifier;0.7165;0.7422;0.7165;0.7158;0.8696;0.8736;0.8696;0.8691;0.7333;0.7522;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
DecisionTreeClassifier;0.8132;0.8237;0.8132;0.8148;0.8406;0.8378;0.8406;0.8373;0.7333;0.7494;0.7333;0.7345;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
RandomForestClassifier;0.8085;0.8167;0.8085;0.81;0.7681;0.8154;0.7681;0.7705;0.7333;0.7494;0.7333;0.7345;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 948};RandomForestClassifier(n_estimators=10, random_state=948)
DecisionTreeClassifier;0.8198;0.829;0.8198;0.8207;0.7971;0.8011;0.7971;0.7981;0.7333;0.7494;0.7333;0.7345;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
SVC;0.7327;0.7709;0.7327;0.7319;0.7391;0.7516;0.7391;0.7421;0.7333;0.7473;0.7333;0.7342;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
DecisionTreeClassifier;0.8229;0.8419;0.8229;0.8242;0.7826;0.7826;0.7826;0.7826;0.7333;0.7444;0.7333;0.7342;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
KNeighborsClassifier;0.7715;0.781;0.7715;0.7732;0.7536;0.7675;0.7536;0.7576;0.7333;0.75;0.7333;0.7341;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.7422;0.7674;0.7422;0.7401;0.7246;0.7325;0.7246;0.7271;0.7333;0.7487;0.7333;0.7341;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
KNeighborsClassifier;0.7923;0.8001;0.7923;0.7936;0.7826;0.7842;0.7826;0.7832;0.7333;0.7525;0.7333;0.734;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.739;0.768;0.739;0.739;0.8116;0.8133;0.8116;0.8122;0.7333;0.753;0.7333;0.7325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
MLPClassifier;0.7133;0.7494;0.7133;0.7144;0.8551;0.8551;0.8551;0.8551;0.7333;0.753;0.7333;0.7325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
MLPClassifier;0.7423;0.7688;0.7423;0.7422;0.7826;0.7806;0.7826;0.7798;0.7333;0.753;0.7333;0.7325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
MLPClassifier;0.7359;0.7632;0.7359;0.7355;0.8116;0.8406;0.8116;0.8148;0.7333;0.753;0.7333;0.7325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
MLPClassifier;0.7279;0.7585;0.7279;0.7286;0.8696;0.874;0.8696;0.8707;0.7333;0.753;0.7333;0.7325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7262;0.7547;0.7262;0.7271;0.8551;0.8574;0.8551;0.856;0.7333;0.753;0.7333;0.7325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
KNeighborsClassifier;0.7696;0.7834;0.7696;0.7722;0.8116;0.8185;0.8116;0.8128;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7776;0.789;0.7776;0.7792;0.7536;0.7644;0.7536;0.7562;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7553;0.7755;0.7553;0.7576;0.8261;0.8428;0.8261;0.8277;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.76;0.7698;0.76;0.7612;0.8261;0.8272;0.8261;0.8209;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7729;0.785;0.7729;0.7732;0.9275;0.9304;0.9275;0.9263;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7682;0.7795;0.7682;0.7689;0.7971;0.8291;0.7971;0.8025;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7744;0.789;0.7744;0.775;0.8261;0.8254;0.8261;0.825;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7729;0.7807;0.7729;0.7739;0.8116;0.8251;0.8116;0.8134;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7569;0.7655;0.7569;0.7569;0.7971;0.8213;0.7971;0.8009;0.7333;0.7448;0.7333;0.7323;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8116;0.8249;0.8116;0.8126;0.8406;0.8477;0.8406;0.8375;0.7333;0.7381;0.7333;0.7312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 749};RandomForestClassifier(n_estimators=10, random_state=749)
RandomForestClassifier;0.8131;0.8223;0.8131;0.8133;0.7681;0.7772;0.7681;0.7708;0.7333;0.7381;0.7333;0.7312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 655};RandomForestClassifier(n_estimators=5, random_state=655)
KNeighborsClassifier;0.781;0.7908;0.781;0.7815;0.7391;0.745;0.7391;0.7389;0.7333;0.7348;0.7333;0.7302;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8116;0.8173;0.8116;0.8126;0.8551;0.8608;0.8551;0.8547;0.7333;0.7324;0.7333;0.73;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 749};RandomForestClassifier(n_estimators=20, random_state=749)
RandomForestClassifier;0.8277;0.8314;0.8277;0.8276;0.8116;0.815;0.8116;0.8114;0.7333;0.7324;0.7333;0.73;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 948};RandomForestClassifier(n_estimators=10, random_state=948)
KNeighborsClassifier;0.7955;0.8082;0.7955;0.7957;0.8261;0.8273;0.8261;0.8259;0.7333;0.743;0.7333;0.7287;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8115;0.8222;0.8115;0.8118;0.8261;0.8287;0.8261;0.8181;0.7333;0.743;0.7333;0.7281;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 948};RandomForestClassifier(n_estimators=10, random_state=948)
RandomForestClassifier;0.818;0.8237;0.818;0.8185;0.8696;0.8794;0.8696;0.8701;0.7333;0.7369;0.7333;0.7278;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 749};RandomForestClassifier(n_estimators=20, random_state=749)
DecisionTreeClassifier;0.815;0.8326;0.815;0.8173;0.7681;0.7733;0.7681;0.764;0.7167;0.7444;0.7167;0.7214;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
SVC;0.7278;0.7627;0.7278;0.7248;0.8116;0.8168;0.8116;0.8119;0.7167;0.7457;0.7167;0.7202;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.7327;0.7638;0.7327;0.7323;0.7536;0.7726;0.7536;0.7562;0.7167;0.7457;0.7167;0.7202;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
SVC;0.7425;0.7788;0.7425;0.7429;0.7101;0.739;0.7101;0.7065;0.7167;0.7457;0.7167;0.7202;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.7327;0.77;0.7327;0.7328;0.7826;0.7901;0.7826;0.7789;0.7167;0.7457;0.7167;0.7202;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
DecisionTreeClassifier;0.81;0.825;0.81;0.8122;0.8841;0.8859;0.8841;0.8839;0.7167;0.7373;0.7167;0.7199;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
DecisionTreeClassifier;0.8083;0.8166;0.8083;0.8096;0.7536;0.7498;0.7536;0.7508;0.7167;0.7373;0.7167;0.7199;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
DecisionTreeClassifier;0.8197;0.8331;0.8197;0.8212;0.7246;0.7529;0.7246;0.7314;0.7167;0.7447;0.7167;0.7194;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
DecisionTreeClassifier;0.8279;0.8363;0.8279;0.8288;0.7391;0.7566;0.7391;0.744;0.7167;0.7447;0.7167;0.7194;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
SVC;0.7247;0.7625;0.7247;0.7264;0.8551;0.8576;0.8551;0.8556;0.7167;0.734;0.7167;0.7194;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
LogisticRegression;0.7037;0.7294;0.7037;0.7032;0.6232;0.6417;0.6232;0.6203;0.7167;0.7232;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6877;0.7116;0.6877;0.6863;0.7536;0.7683;0.7536;0.7568;0.7167;0.7232;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.7132;0.7335;0.7132;0.7122;0.5942;0.6063;0.5942;0.5916;0.7167;0.7232;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.6925;0.7147;0.6925;0.6911;0.7536;0.7731;0.7536;0.7576;0.7167;0.7232;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6907;0.7163;0.6907;0.6906;0.7826;0.7836;0.7826;0.7829;0.7167;0.7232;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.699;0.718;0.699;0.6992;0.6812;0.7073;0.6812;0.68;0.7167;0.7232;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.6892;0.7109;0.6892;0.6879;0.6522;0.6821;0.6522;0.6568;0.7167;0.7232;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
KNeighborsClassifier;0.7553;0.7674;0.7553;0.756;0.7826;0.8248;0.7826;0.7835;0.7167;0.7487;0.7167;0.7186;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8374;0.8452;0.8374;0.8373;0.7971;0.8036;0.7971;0.7994;0.7167;0.7277;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 749};RandomForestClassifier(n_estimators=10, random_state=749)
RandomForestClassifier;0.8244;0.8315;0.8244;0.8256;0.8261;0.8234;0.8261;0.824;0.7167;0.7441;0.7167;0.7179;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 655};RandomForestClassifier(n_estimators=5, random_state=655)
KNeighborsClassifier;0.7746;0.7874;0.7746;0.7759;0.8116;0.8121;0.8116;0.8108;0.7167;0.7333;0.7167;0.7175;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7811;0.7909;0.7811;0.7823;0.7681;0.7718;0.7681;0.7692;0.7167;0.7333;0.7167;0.7175;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8148;0.8277;0.8148;0.8157;0.913;0.9231;0.913;0.9145;0.7167;0.7377;0.7167;0.7173;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
DecisionTreeClassifier;0.8099;0.82;0.8099;0.8105;0.8406;0.8497;0.8406;0.8434;0.7167;0.7377;0.7167;0.7173;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
MLPClassifier;0.7294;0.757;0.7294;0.729;0.8116;0.8272;0.8116;0.8134;0.7167;0.7408;0.7167;0.7172;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
MLPClassifier;0.7294;0.7572;0.7294;0.7288;0.7971;0.8199;0.7971;0.802;0.7167;0.7408;0.7167;0.7172;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7311;0.7595;0.7311;0.7294;0.8696;0.8728;0.8696;0.8701;0.7167;0.7408;0.7167;0.7172;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
DecisionTreeClassifier;0.81;0.8219;0.81;0.8124;0.8406;0.8388;0.8406;0.8389;0.7167;0.7254;0.7167;0.7169;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
DecisionTreeClassifier;0.8019;0.811;0.8019;0.803;0.8406;0.8383;0.8406;0.8376;0.7167;0.735;0.7167;0.7159;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
RandomForestClassifier;0.8147;0.8242;0.8147;0.8158;0.8406;0.8482;0.8406;0.8427;0.7167;0.7236;0.7167;0.7157;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
KNeighborsClassifier;0.781;0.7851;0.781;0.7791;0.7536;0.7898;0.7536;0.7547;0.7167;0.7227;0.7167;0.7157;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7794;0.7903;0.7794;0.7804;0.7536;0.7643;0.7536;0.7574;0.7167;0.7227;0.7167;0.7157;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.715;0.7473;0.715;0.717;0.7391;0.7568;0.7391;0.7395;0.7167;0.7411;0.7167;0.7143;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 747, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=747)
RandomForestClassifier;0.8036;0.8157;0.8036;0.8047;0.8551;0.8608;0.8551;0.8555;0.7167;0.7289;0.7167;0.7143;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 948};RandomForestClassifier(n_estimators=5, random_state=948)
RandomForestClassifier;0.8084;0.8146;0.8084;0.8095;0.8841;0.8841;0.8841;0.8841;0.7167;0.7245;0.7167;0.714;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 948};RandomForestClassifier(n_estimators=20, random_state=948)
RandomForestClassifier;0.8099;0.8177;0.8099;0.8109;0.8406;0.8434;0.8406;0.841;0.7167;0.7172;0.7167;0.7127;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 655};RandomForestClassifier(n_estimators=10, random_state=655)
RandomForestClassifier;0.8068;0.8182;0.8068;0.8083;0.7971;0.7996;0.7971;0.7975;0.7167;0.7293;0.7167;0.7107;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 749};RandomForestClassifier(n_estimators=20, random_state=749)
LogisticRegression;0.7036;0.7263;0.7036;0.7018;0.5942;0.6065;0.5942;0.5958;0.7;0.7159;0.7;0.7052;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
DecisionTreeClassifier;0.7777;0.7946;0.7777;0.7808;0.8406;0.845;0.8406;0.8408;0.7;0.7256;0.7;0.705;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=482)
RandomForestClassifier;0.8115;0.8195;0.8115;0.8109;0.8261;0.8376;0.8261;0.8287;0.7;0.7341;0.7;0.7045;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 655};RandomForestClassifier(n_estimators=5, random_state=655)
SVC;0.7327;0.7676;0.7327;0.7327;0.7681;0.7703;0.7681;0.7685;0.7;0.7224;0.7;0.7037;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 921};SVC(C=10, random_state=921)
DecisionTreeClassifier;0.8067;0.8211;0.8067;0.8083;0.7826;0.8024;0.7826;0.7862;0.7;0.7263;0.7;0.7029;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
DecisionTreeClassifier;0.8132;0.8261;0.8132;0.8144;0.7681;0.799;0.7681;0.7708;0.7;0.7263;0.7;0.7029;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
KNeighborsClassifier;0.7729;0.788;0.7729;0.7745;0.8551;0.8692;0.8551;0.8553;0.7;0.7201;0.7;0.7028;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8067;0.8169;0.8067;0.8078;0.6957;0.6984;0.6957;0.6945;0.7;0.7036;0.7;0.7015;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=482)
LogisticRegression;0.6858;0.7092;0.6858;0.6841;0.7971;0.7996;0.7971;0.7975;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
KNeighborsClassifier;0.7763;0.7938;0.7763;0.7769;0.7536;0.7759;0.7536;0.7576;0.7;0.7302;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
LogisticRegression;0.699;0.7124;0.699;0.6952;0.6812;0.683;0.6812;0.6815;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.6926;0.7142;0.6926;0.693;0.7681;0.8128;0.7681;0.7592;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.6972;0.7208;0.6972;0.6962;0.7391;0.746;0.7391;0.74;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.6973;0.7188;0.6973;0.6957;0.6812;0.7339;0.6812;0.6879;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.7052;0.7238;0.7052;0.7048;0.6957;0.7038;0.6957;0.6928;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.7101;0.7305;0.7101;0.7098;0.6232;0.6348;0.6232;0.6228;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.7021;0.7214;0.7021;0.7011;0.7246;0.7739;0.7246;0.7243;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 346, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=346)"
LogisticRegression;0.7021;0.7257;0.7021;0.7017;0.6957;0.753;0.6957;0.6995;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.702;0.7252;0.702;0.7012;0.6522;0.6852;0.6522;0.6515;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6939;0.7148;0.6939;0.6937;0.7536;0.7673;0.7536;0.7544;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6989;0.7197;0.6989;0.6993;0.7246;0.7486;0.7246;0.7254;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6957;0.7204;0.6957;0.6946;0.6812;0.6817;0.6812;0.6799;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.702;0.725;0.702;0.703;0.6957;0.7293;0.6957;0.6938;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6957;0.7211;0.6957;0.6971;0.6957;0.703;0.6957;0.69;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.6988;0.7205;0.6988;0.6981;0.6667;0.6781;0.6667;0.6656;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.7118;0.733;0.7118;0.7112;0.6522;0.673;0.6522;0.653;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.6986;0.7176;0.6986;0.6972;0.6667;0.6824;0.6667;0.6711;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.699;0.7206;0.699;0.6988;0.7101;0.7341;0.7101;0.7046;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.6971;0.7211;0.6971;0.6971;0.7246;0.7562;0.7246;0.7258;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
LogisticRegression;0.6924;0.7166;0.6924;0.6926;0.7536;0.776;0.7536;0.7562;0.7;0.7028;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
DecisionTreeClassifier;0.8164;0.8325;0.8164;0.8167;0.7391;0.7375;0.7391;0.7381;0.7;0.7102;0.7;0.7011;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=482)
KNeighborsClassifier;0.7439;0.7616;0.7439;0.7446;0.8261;0.8372;0.8261;0.8279;0.7;0.7111;0.7;0.701;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7811;0.7974;0.7811;0.7828;0.8406;0.8556;0.8406;0.8435;0.7;0.7111;0.7;0.701;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.744;0.7669;0.744;0.7439;0.7681;0.7976;0.7681;0.7723;0.7;0.7131;0.7;0.6997;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 994, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=994)
DecisionTreeClassifier;0.8052;0.8131;0.8052;0.8064;0.8986;0.908;0.8986;0.8997;0.7;0.7263;0.7;0.6995;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
DecisionTreeClassifier;0.8084;0.8235;0.8084;0.8096;0.8116;0.8194;0.8116;0.8146;0.7;0.7263;0.7;0.6995;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
RandomForestClassifier;0.81;0.816;0.81;0.811;0.8841;0.8836;0.8841;0.8819;0.7;0.7069;0.7;0.6983;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 655};RandomForestClassifier(n_estimators=10, random_state=655)
KNeighborsClassifier;0.7649;0.7786;0.7649;0.7666;0.7971;0.8317;0.7971;0.7984;0.7;0.7087;0.7;0.6981;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8228;0.8359;0.8228;0.8248;0.8986;0.8996;0.8986;0.8988;0.7;0.7229;0.7;0.6979;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
DecisionTreeClassifier;0.8132;0.8221;0.8132;0.8138;0.7536;0.7598;0.7536;0.7483;0.7;0.7139;0.7;0.6976;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
RandomForestClassifier;0.8068;0.815;0.8068;0.8075;0.8116;0.8148;0.8116;0.8103;0.7;0.6986;0.7;0.6939;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
DecisionTreeClassifier;0.8115;0.8224;0.8115;0.8119;0.7971;0.7976;0.7971;0.7963;0.6833;0.7087;0.6833;0.6862;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 148};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=148)
RandomForestClassifier;0.8197;0.8271;0.8197;0.8199;0.8261;0.8274;0.8261;0.8259;0.6833;0.6951;0.6833;0.6852;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 948};RandomForestClassifier(n_estimators=5, random_state=948)
KNeighborsClassifier;0.7826;0.7938;0.7826;0.7838;0.7536;0.7553;0.7536;0.7542;0.6833;0.6924;0.6833;0.6839;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.6876;0.7074;0.6876;0.6855;0.7391;0.7421;0.7391;0.7398;0.6833;0.6844;0.6833;0.6836;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 238, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=238)"
RandomForestClassifier;0.8244;0.8328;0.8244;0.825;0.7246;0.7246;0.7246;0.7246;0.6833;0.6882;0.6833;0.6817;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 749};RandomForestClassifier(n_estimators=5, random_state=749)
DecisionTreeClassifier;0.7907;0.8042;0.7907;0.7914;0.8551;0.8683;0.8551;0.857;0.6667;0.69;0.6667;0.6712;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
RandomForestClassifier;0.8178;0.8259;0.8178;0.8177;0.7681;0.787;0.7681;0.7678;0.6667;0.6774;0.6667;0.665;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 655};RandomForestClassifier(n_estimators=10, random_state=655)
DecisionTreeClassifier;0.8084;0.8231;0.8084;0.8101;0.8551;0.8611;0.8551;0.856;0.6667;0.6969;0.6667;0.659;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 331};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=331)
KNeighborsClassifier;0.7906;0.8035;0.7906;0.7916;0.7681;0.7865;0.7681;0.7733;0.6667;0.6542;0.6667;0.653;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.7857;0.7953;0.7857;0.786;0.8261;0.8397;0.8261;0.8284;0.65;0.6794;0.65;0.642;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 948};RandomForestClassifier(n_estimators=5, random_state=948)
RandomForestClassifier;0.8132;0.8191;0.8132;0.8142;0.7101;0.7101;0.7101;0.7101;0.6333;0.6378;0.6333;0.6268;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 948};RandomForestClassifier(n_estimators=5, random_state=948)
