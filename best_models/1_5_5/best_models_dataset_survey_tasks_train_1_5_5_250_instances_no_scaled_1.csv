Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9001;0.9049;0.9001;0.8994;0.9275;0.9405;0.9275;0.9267;0.8667;0.8739;0.8667;0.8679;0.9783;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
RandomForestClassifier;0.8936;0.8964;0.8936;0.8939;0.913;0.931;0.913;0.915;0.8333;0.85;0.8333;0.8357;0.9779;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
RandomForestClassifier;0.9098;0.9128;0.9098;0.9097;0.8406;0.8433;0.8406;0.8411;0.8333;0.8419;0.8333;0.8353;0.9809;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.8986;0.9037;0.8986;0.8989;0.9855;0.9861;0.9855;0.9855;0.8333;0.8419;0.8333;0.8353;0.9762;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
RandomForestClassifier;0.9082;0.9159;0.9082;0.9073;0.9565;0.9571;0.9565;0.9565;0.8333;0.8391;0.8333;0.8348;0.9782;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 724};RandomForestClassifier(n_estimators=10, random_state=724)
RandomForestClassifier;0.9049;0.9083;0.9049;0.9045;0.8841;0.8889;0.8841;0.8856;0.8333;0.8444;0.8333;0.8345;0.9798;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9114;0.9169;0.9114;0.9115;0.9565;0.9615;0.9565;0.957;0.8333;0.8365;0.8333;0.8339;0.9751;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.9081;0.9121;0.9081;0.9076;0.8116;0.8191;0.8116;0.8086;0.8333;0.8365;0.8333;0.8339;0.9818;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.8888;0.892;0.8888;0.8875;0.9275;0.9275;0.9275;0.9275;0.8333;0.8365;0.8333;0.8339;0.9762;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9001;0.904;0.9001;0.8995;0.9275;0.9296;0.9275;0.9274;0.8333;0.8379;0.8333;0.8333;0.9771;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
DecisionTreeClassifier;0.8647;0.8721;0.8647;0.8647;0.8116;0.8141;0.8116;0.8112;0.8333;0.8374;0.8333;0.8328;0.8986;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
RandomForestClassifier;0.8969;0.903;0.8969;0.8963;0.8841;0.8861;0.8841;0.8843;0.8167;0.8386;0.8167;0.8194;0.9749;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
RandomForestClassifier;0.8905;0.8954;0.8905;0.8902;0.942;0.9426;0.942;0.942;0.8167;0.8239;0.8167;0.8189;0.9753;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.8905;0.8952;0.8905;0.8904;0.9565;0.9583;0.9565;0.9565;0.8167;0.8234;0.8167;0.8178;0.9758;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.8889;0.8932;0.8889;0.8888;0.942;0.9506;0.942;0.9427;0.8167;0.8189;0.8167;0.8174;0.9737;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9082;0.9128;0.9082;0.9082;0.8696;0.8762;0.8696;0.8694;0.8167;0.8189;0.8167;0.8174;0.9784;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
RandomForestClassifier;0.9018;0.9066;0.9018;0.9019;0.9275;0.9322;0.9275;0.9277;0.8167;0.8224;0.8167;0.8173;0.9813;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9002;0.9027;0.9002;0.9002;0.9275;0.9268;0.9275;0.9269;0.8167;0.8205;0.8167;0.8172;0.9779;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
RandomForestClassifier;0.9195;0.924;0.9195;0.9189;0.8551;0.8576;0.8551;0.8556;0.8167;0.8248;0.8167;0.8165;0.9814;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 845};RandomForestClassifier(n_estimators=20, random_state=845)
RandomForestClassifier;0.9146;0.9184;0.9146;0.9146;0.8696;0.8726;0.8696;0.87;0.8;0.8109;0.8;0.8014;0.9804;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.926;0.9295;0.926;0.9262;0.8841;0.8907;0.8841;0.8816;0.8;0.803;0.8;0.8012;0.9801;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 845};RandomForestClassifier(n_estimators=10, random_state=845)
RandomForestClassifier;0.9018;0.9059;0.9018;0.9016;0.8986;0.9017;0.8986;0.898;0.8;0.8042;0.8;0.801;0.9796;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9066;0.9117;0.9066;0.9065;0.9275;0.9293;0.9275;0.9281;0.8;0.8042;0.8;0.801;0.9765;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.8937;0.8975;0.8937;0.8935;0.913;0.9215;0.913;0.9112;0.8;0.8038;0.8;0.801;0.9762;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
DecisionTreeClassifier;0.8582;0.8633;0.8582;0.8578;0.8841;0.8873;0.8841;0.8846;0.8;0.8072;0.8;0.8005;0.8935;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
RandomForestClassifier;0.8969;0.8994;0.8969;0.8959;0.8841;0.8941;0.8841;0.8857;0.8;0.8057;0.8;0.8003;0.9742;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.9098;0.9135;0.9098;0.91;0.8986;0.8997;0.8986;0.8988;0.8;0.8013;0.8;0.8003;0.9803;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
DecisionTreeClassifier;0.8743;0.879;0.8743;0.8747;0.8696;0.879;0.8696;0.8709;0.8;0.808;0.8;0.7969;0.9058;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
RandomForestClassifier;0.9194;0.9266;0.9194;0.9193;0.8116;0.8242;0.8116;0.8128;0.7833;0.8082;0.7833;0.7873;0.9776;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 724};RandomForestClassifier(n_estimators=20, random_state=724)
RandomForestClassifier;0.9083;0.9117;0.9083;0.9081;0.8261;0.8349;0.8261;0.8247;0.7833;0.8098;0.7833;0.7865;0.977;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.8971;0.9004;0.8971;0.8971;0.9855;0.9861;0.9855;0.9855;0.7833;0.7956;0.7833;0.7864;0.973;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.897;0.9002;0.897;0.897;0.8841;0.8904;0.8841;0.881;0.7833;0.7894;0.7833;0.7843;0.9758;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
DecisionTreeClassifier;0.8695;0.876;0.8695;0.8697;0.8116;0.813;0.8116;0.8113;0.7833;0.7876;0.7833;0.7825;0.9022;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.868;0.8722;0.868;0.8675;0.7826;0.784;0.7826;0.778;0.7833;0.7948;0.7833;0.7816;0.9011;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8633;0.8691;0.8633;0.8619;0.913;0.9123;0.913;0.9124;0.7667;0.7709;0.7667;0.7664;0.8971;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
MLPClassifier;0.7793;0.7898;0.7793;0.7794;0.7826;0.8094;0.7826;0.7835;0.7667;0.779;0.7667;0.7654;0.9134;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
RandomForestClassifier;0.8954;0.899;0.8954;0.8954;0.8986;0.9018;0.8986;0.8983;0.7667;0.7777;0.7667;0.7652;0.9752;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 845};RandomForestClassifier(n_estimators=10, random_state=845)
DecisionTreeClassifier;0.8535;0.8608;0.8535;0.8516;0.8841;0.8852;0.8841;0.8843;0.7667;0.7736;0.7667;0.765;0.8901;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8647;0.869;0.8647;0.8645;0.8261;0.8287;0.8261;0.8264;0.7667;0.7708;0.7667;0.7646;0.8988;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
SVC;0.6087;0.6976;0.6087;0.5986;0.7391;0.7641;0.7391;0.7442;0.75;0.7826;0.75;0.7524;0.7665;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 745};SVC(C=1, kernel='linear', probability=True, random_state=745)
KNeighborsClassifier;0.7891;0.8003;0.7891;0.7886;0.8551;0.8569;0.8551;0.8549;0.75;0.7569;0.75;0.7521;0.918;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8632;0.8703;0.8632;0.8629;0.8406;0.8393;0.8406;0.8346;0.75;0.7651;0.75;0.7502;0.8973;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8663;0.8718;0.8663;0.8656;0.8551;0.8701;0.8551;0.8581;0.75;0.7615;0.75;0.7502;0.9001;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8728;0.8773;0.8728;0.8727;0.8261;0.8491;0.8261;0.8289;0.75;0.7597;0.75;0.7498;0.9047;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
DecisionTreeClassifier;0.8583;0.8651;0.8583;0.8572;0.8551;0.8651;0.8551;0.8575;0.75;0.7631;0.75;0.7491;0.8935;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
DecisionTreeClassifier;0.8665;0.8693;0.8665;0.8657;0.8261;0.8329;0.8261;0.8252;0.75;0.7567;0.75;0.749;0.8999;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
DecisionTreeClassifier;0.8647;0.8666;0.8647;0.864;0.7826;0.7921;0.7826;0.7843;0.75;0.7607;0.75;0.749;0.8984;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8632;0.8691;0.8632;0.8636;0.8116;0.8182;0.8116;0.8115;0.75;0.7567;0.75;0.749;0.8976;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8519;0.8544;0.8519;0.8508;0.8406;0.8404;0.8406;0.8402;0.75;0.7557;0.75;0.7487;0.889;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8729;0.8765;0.8729;0.8723;0.8696;0.8774;0.8696;0.8702;0.75;0.7561;0.75;0.7465;0.9044;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
KNeighborsClassifier;0.7728;0.7826;0.7728;0.773;0.9565;0.9583;0.9565;0.9565;0.7333;0.7481;0.7333;0.7382;0.9152;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7858;0.802;0.7858;0.7863;0.8841;0.8846;0.8841;0.884;0.7333;0.7481;0.7333;0.7382;0.9182;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.776;0.7867;0.776;0.7757;0.8986;0.9032;0.8986;0.8997;0.7333;0.7481;0.7333;0.7382;0.9099;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7794;0.7904;0.7794;0.7785;0.942;0.9426;0.942;0.942;0.7333;0.7481;0.7333;0.7382;0.916;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6215;0.7;0.6215;0.6082;0.6232;0.6682;0.6232;0.6188;0.7333;0.7647;0.7333;0.7368;0.7843;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 360};SVC(C=10, kernel='linear', probability=True, random_state=360)
SVC;0.612;0.6884;0.612;0.6033;0.8406;0.8613;0.8406;0.8375;0.7333;0.7647;0.7333;0.7368;0.7581;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 745};SVC(C=1, kernel='linear', probability=True, random_state=745)
SVC;0.6104;0.7007;0.6104;0.5982;0.7826;0.811;0.7826;0.7823;0.7333;0.7712;0.7333;0.7366;0.7766;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 226};SVC(C=10, kernel='linear', probability=True, random_state=226)
KNeighborsClassifier;0.7938;0.8026;0.7938;0.793;0.8116;0.8183;0.8116;0.8121;0.7333;0.7407;0.7333;0.736;0.9127;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7712;0.7811;0.7712;0.7692;0.8986;0.9069;0.8986;0.9001;0.7333;0.7407;0.7333;0.736;0.9134;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7664;0.7775;0.7664;0.7664;0.9275;0.9305;0.9275;0.9271;0.7333;0.7407;0.7333;0.736;0.9117;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7939;0.8053;0.7939;0.7925;0.8696;0.8708;0.8696;0.8683;0.7333;0.7407;0.7333;0.736;0.9154;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7955;0.8006;0.7955;0.7948;0.8261;0.8289;0.8261;0.8265;0.7333;0.7407;0.7333;0.736;0.9166;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.802;0.8152;0.802;0.8011;0.8986;0.899;0.8986;0.8985;0.7333;0.7407;0.7333;0.736;0.9111;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7826;0.8007;0.7826;0.7831;0.8986;0.9034;0.8986;0.8971;0.7333;0.7407;0.7333;0.736;0.9059;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7794;0.7909;0.7794;0.7766;0.8116;0.8286;0.8116;0.8088;0.7333;0.7407;0.7333;0.736;0.912;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
SVC;0.6214;0.6995;0.6214;0.6116;0.7391;0.7644;0.7391;0.7363;0.7333;0.7572;0.7333;0.7359;0.7734;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 226};SVC(C=10, kernel='linear', probability=True, random_state=226)
SVC;0.6104;0.7002;0.6104;0.5953;0.8116;0.8371;0.8116;0.8126;0.7333;0.7572;0.7333;0.7359;0.7644;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 360};SVC(C=10, kernel='linear', probability=True, random_state=360)
SVC;0.5991;0.6837;0.5991;0.5872;0.7971;0.8208;0.7971;0.8009;0.7333;0.7572;0.7333;0.7359;0.7628;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 745};SVC(C=10, kernel='linear', probability=True, random_state=745)
SVC;0.6103;0.6973;0.6103;0.5967;0.7391;0.767;0.7391;0.7438;0.7333;0.7572;0.7333;0.7359;0.7728;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 360};SVC(C=10, kernel='linear', probability=True, random_state=360)
SVC;0.6023;0.6887;0.6023;0.5898;0.7971;0.8024;0.7971;0.7953;0.7333;0.7512;0.7333;0.7351;0.7599;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 226};SVC(C=10, kernel='linear', probability=True, random_state=226)
SVC;0.6071;0.6884;0.6071;0.595;0.7391;0.7715;0.7391;0.7389;0.7333;0.7512;0.7333;0.7351;0.7761;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 745};SVC(C=10, kernel='linear', probability=True, random_state=745)
SVC;0.62;0.6928;0.62;0.6105;0.8116;0.849;0.8116;0.8123;0.7333;0.7732;0.7333;0.7349;0.7649;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 360};SVC(C=1, kernel='linear', probability=True, random_state=360)
SVC;0.6104;0.6966;0.6104;0.5949;0.7536;0.7685;0.7536;0.7555;0.7333;0.7732;0.7333;0.7349;0.7711;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 745};SVC(C=1, kernel='linear', probability=True, random_state=745)
KNeighborsClassifier;0.7859;0.7982;0.7859;0.7865;0.8551;0.8558;0.8551;0.8546;0.7333;0.7363;0.7333;0.7345;0.9162;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8551;0.8619;0.8551;0.8545;0.8406;0.8423;0.8406;0.8412;0.7333;0.7473;0.7333;0.7342;0.891;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
DecisionTreeClassifier;0.868;0.8739;0.868;0.8672;0.7971;0.8043;0.7971;0.7977;0.7333;0.7473;0.7333;0.7342;0.9009;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
MLPClassifier;0.7778;0.7981;0.7778;0.7785;0.7826;0.7901;0.7826;0.7809;0.7333;0.7492;0.7333;0.7339;0.9124;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
DecisionTreeClassifier;0.8615;0.868;0.8615;0.8626;0.8116;0.8206;0.8116;0.8053;0.7333;0.7369;0.7333;0.7338;0.896;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
KNeighborsClassifier;0.7665;0.7797;0.7665;0.7651;0.8696;0.8781;0.8696;0.8676;0.7333;0.736;0.7333;0.7338;0.9126;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8148;0.8291;0.8148;0.8135;0.8551;0.8625;0.8551;0.8552;0.7333;0.7336;0.7333;0.7332;0.9176;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8696;0.8746;0.8696;0.8682;0.7971;0.7978;0.7971;0.7956;0.7333;0.7431;0.7333;0.7332;0.9023;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8696;0.8749;0.8696;0.869;0.8406;0.8463;0.8406;0.841;0.7333;0.7403;0.7333;0.7331;0.902;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8695;0.8728;0.8695;0.8691;0.8986;0.9036;0.8986;0.8975;0.7333;0.7474;0.7333;0.7329;0.9018;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
KNeighborsClassifier;0.7665;0.7773;0.7665;0.7661;0.8406;0.8422;0.8406;0.8404;0.7167;0.7367;0.7167;0.7222;0.9219;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8019;0.8121;0.8019;0.8015;0.913;0.9231;0.913;0.9145;0.7167;0.7367;0.7167;0.7222;0.9194;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7745;0.7805;0.7745;0.7734;0.8406;0.8444;0.8406;0.8408;0.7167;0.7322;0.7167;0.7219;0.9146;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
SVC;0.6087;0.6869;0.6087;0.5968;0.7391;0.7721;0.7391;0.7416;0.7167;0.7457;0.7167;0.7202;0.7649;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 745};SVC(C=10, kernel='linear', probability=True, random_state=745)
SVC;0.6087;0.6943;0.6087;0.5981;0.7681;0.7937;0.7681;0.7661;0.7167;0.7457;0.7167;0.7202;0.7679;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 226};SVC(C=10, kernel='linear', probability=True, random_state=226)
SVC;0.6135;0.6979;0.6135;0.6029;0.7536;0.7715;0.7536;0.7563;0.7167;0.7457;0.7167;0.7202;0.7639;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 360};SVC(C=10, kernel='linear', probability=True, random_state=360)
SVC;0.6136;0.6967;0.6136;0.6023;0.7246;0.7846;0.7246;0.7228;0.7167;0.7457;0.7167;0.7202;0.7767;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 745};SVC(C=10, kernel='linear', probability=True, random_state=745)
KNeighborsClassifier;0.7906;0.7989;0.7906;0.7903;0.8261;0.8321;0.8261;0.8228;0.7167;0.7285;0.7167;0.7201;0.9172;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.7454;0.7591;0.7454;0.7441;0.6667;0.6961;0.6667;0.6594;0.7167;0.7429;0.7167;0.7199;0.8969;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
SVC;0.6346;0.7094;0.6346;0.6191;0.7101;0.7231;0.7101;0.7122;0.7167;0.7389;0.7167;0.7198;0.7718;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 745};SVC(C=10, kernel='linear', probability=True, random_state=745)
KNeighborsClassifier;0.7843;0.7957;0.7843;0.785;0.8261;0.8277;0.8261;0.8234;0.7167;0.7249;0.7167;0.7197;0.9181;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7891;0.7956;0.7891;0.789;0.913;0.9221;0.913;0.9114;0.7167;0.7251;0.7167;0.7196;0.9199;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7744;0.7853;0.7744;0.7724;0.9275;0.9281;0.9275;0.9275;0.7167;0.7251;0.7167;0.7196;0.9113;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8035;0.8172;0.8035;0.8015;0.8406;0.8404;0.8406;0.8402;0.7167;0.7251;0.7167;0.7196;0.9173;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.5942;0.6813;0.5942;0.5848;0.7681;0.7874;0.7681;0.7704;0.7167;0.7552;0.7167;0.7194;0.7678;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 360};SVC(C=1, kernel='linear', probability=True, random_state=360)
SVC;0.6135;0.7013;0.6135;0.604;0.7391;0.788;0.7391;0.7409;0.7167;0.7624;0.7167;0.7193;0.7681;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 226};SVC(C=1, kernel='linear', probability=True, random_state=226)
SVC;0.6183;0.6945;0.6183;0.607;0.7246;0.7903;0.7246;0.7234;0.7167;0.7624;0.7167;0.7193;0.7798;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 360};SVC(C=1, kernel='linear', probability=True, random_state=360)
SVC;0.6057;0.6869;0.6057;0.5948;0.7971;0.8057;0.7971;0.7933;0.7167;0.7624;0.7167;0.7193;0.7602;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 360};SVC(C=1, kernel='linear', probability=True, random_state=360)
SVC;0.6088;0.6848;0.6088;0.5924;0.7681;0.8025;0.7681;0.7698;0.7167;0.7624;0.7167;0.7193;0.763;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 226};SVC(C=1, kernel='linear', probability=True, random_state=226)
SVC;0.6119;0.6926;0.6119;0.5996;0.7681;0.7976;0.7681;0.7739;0.7167;0.7624;0.7167;0.7193;0.7708;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 360};SVC(C=1, kernel='linear', probability=True, random_state=360)
SVC;0.628;0.708;0.628;0.6134;0.7101;0.7254;0.7101;0.7114;0.7167;0.7624;0.7167;0.7193;0.7713;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 226};SVC(C=1, kernel='linear', probability=True, random_state=226)
SVC;0.6119;0.6898;0.6119;0.597;0.7536;0.7974;0.7536;0.7498;0.7167;0.7624;0.7167;0.7193;0.7628;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 226};SVC(C=1, kernel='linear', probability=True, random_state=226)
SVC;0.6183;0.6942;0.6183;0.6067;0.7681;0.802;0.7681;0.7742;0.7167;0.7624;0.7167;0.7193;0.7722;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 226};SVC(C=1, kernel='linear', probability=True, random_state=226)
SVC;0.6069;0.6858;0.6069;0.5974;0.7391;0.7934;0.7391;0.7363;0.7167;0.7624;0.7167;0.7193;0.7628;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 745};SVC(C=1, kernel='linear', probability=True, random_state=745)
LogisticRegression;0.7552;0.7673;0.7552;0.7553;0.5652;0.5759;0.5652;0.5625;0.7167;0.7352;0.7167;0.7182;0.9021;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
SVC;0.6248;0.7051;0.6248;0.6102;0.7246;0.7414;0.7246;0.7278;0.7167;0.7462;0.7167;0.718;0.7716;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 360};SVC(C=1, kernel='linear', probability=True, random_state=360)
DecisionTreeClassifier;0.8615;0.8675;0.8615;0.8613;0.8406;0.8369;0.8406;0.8363;0.7167;0.7329;0.7167;0.7179;0.8958;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
KNeighborsClassifier;0.7877;0.7931;0.7877;0.7878;0.8551;0.8637;0.8551;0.8513;0.7167;0.7196;0.7167;0.7178;0.9237;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7923;0.7967;0.7923;0.7915;0.913;0.9189;0.913;0.9127;0.7167;0.7196;0.7167;0.7178;0.9163;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.7761;0.7901;0.7761;0.7756;0.8261;0.8302;0.8261;0.8235;0.7167;0.7214;0.7167;0.7178;0.9112;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
KNeighborsClassifier;0.8116;0.8226;0.8116;0.8122;0.7971;0.8066;0.7971;0.7964;0.7167;0.7196;0.7167;0.7178;0.9191;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8517;0.8559;0.8517;0.8519;0.7826;0.7829;0.7826;0.7825;0.7167;0.7263;0.7167;0.7172;0.8887;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
DecisionTreeClassifier;0.8696;0.873;0.8696;0.8686;0.8116;0.8258;0.8116;0.8114;0.7167;0.735;0.7167;0.7169;0.9019;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
LogisticRegression;0.7215;0.7303;0.7215;0.7209;0.7826;0.7862;0.7826;0.7782;0.7167;0.7275;0.7167;0.7169;0.8938;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7457;0.7598;0.7457;0.746;0.6957;0.7047;0.6957;0.6956;0.7167;0.7275;0.7167;0.7169;0.8962;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7357;0.7456;0.7357;0.7355;0.7101;0.7286;0.7101;0.7111;0.7167;0.7275;0.7167;0.7169;0.8969;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
LogisticRegression;0.7181;0.7295;0.7181;0.7186;0.7536;0.7575;0.7536;0.754;0.7167;0.7275;0.7167;0.7169;0.8896;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7117;0.7238;0.7117;0.7098;0.7391;0.7436;0.7391;0.7407;0.7167;0.7275;0.7167;0.7169;0.8868;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7246;0.7346;0.7246;0.7242;0.6957;0.6999;0.6957;0.6963;0.7167;0.7275;0.7167;0.7169;0.8922;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7245;0.7315;0.7245;0.7235;0.6957;0.7006;0.6957;0.6943;0.7167;0.7275;0.7167;0.7169;0.8919;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7327;0.7439;0.7327;0.7336;0.7391;0.7863;0.7391;0.7377;0.7167;0.7275;0.7167;0.7169;0.892;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
DecisionTreeClassifier;0.8615;0.8682;0.8615;0.861;0.913;0.9183;0.913;0.9135;0.7167;0.7322;0.7167;0.7161;0.8958;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
DecisionTreeClassifier;0.8583;0.8633;0.8583;0.8576;0.8841;0.8834;0.8841;0.8826;0.7167;0.7322;0.7167;0.7161;0.8938;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
MLPClassifier;0.7729;0.7889;0.7729;0.7734;0.6957;0.7114;0.6957;0.6963;0.7167;0.7165;0.7167;0.7154;0.9227;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.7537;0.7697;0.7537;0.7525;0.7536;0.8043;0.7536;0.7391;0.7167;0.7421;0.7167;0.715;0.9112;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.7746;0.7896;0.7746;0.7757;0.6957;0.7125;0.6957;0.6949;0.7167;0.7535;0.7167;0.7142;0.9125;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
SVC;0.6168;0.6957;0.6168;0.6045;0.6522;0.7285;0.6522;0.6472;0.7;0.7268;0.7;0.7043;0.7847;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 226};SVC(C=10, kernel='linear', probability=True, random_state=226)
MLPClassifier;0.773;0.7906;0.773;0.7734;0.7536;0.7731;0.7536;0.7576;0.7;0.7454;0.7;0.7027;0.916;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
MLPClassifier;0.7536;0.7716;0.7536;0.753;0.8261;0.8279;0.8261;0.8246;0.7;0.7233;0.7;0.7019;0.9135;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
LogisticRegression;0.7295;0.7404;0.7295;0.7293;0.7101;0.7358;0.7101;0.7095;0.7;0.7233;0.7;0.7019;0.8855;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7086;0.7174;0.7086;0.7075;0.7971;0.819;0.7971;0.7984;0.7;0.7233;0.7;0.7019;0.8862;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7181;0.7322;0.7181;0.719;0.7971;0.8051;0.7971;0.7994;0.7;0.7233;0.7;0.7019;0.8869;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7294;0.7366;0.7294;0.7301;0.7391;0.7394;0.7391;0.739;0.7;0.7233;0.7;0.7019;0.8881;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7358;0.7462;0.7358;0.735;0.7101;0.7151;0.7101;0.7111;0.7;0.7233;0.7;0.7019;0.8922;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
LogisticRegression;0.731;0.7381;0.731;0.7308;0.7681;0.773;0.7681;0.7664;0.7;0.7233;0.7;0.7019;0.8868;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
LogisticRegression;0.731;0.7435;0.731;0.7298;0.6087;0.6109;0.6087;0.6076;0.7;0.7233;0.7;0.7019;0.8952;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
KNeighborsClassifier;0.794;0.8059;0.794;0.793;0.7391;0.74;0.7391;0.7379;0.7;0.7037;0.7;0.7016;0.9199;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7826;0.7942;0.7826;0.7818;0.7101;0.759;0.7101;0.7123;0.7;0.7589;0.7;0.7014;0.9169;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
MLPClassifier;0.789;0.8025;0.789;0.7887;0.6667;0.7474;0.6667;0.6705;0.7;0.7589;0.7;0.7014;0.9208;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
DecisionTreeClassifier;0.8615;0.8649;0.8615;0.8606;0.8696;0.8805;0.8696;0.8716;0.7;0.7102;0.7;0.7011;0.8959;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8535;0.8565;0.8535;0.8535;0.8406;0.8395;0.8406;0.8364;0.7;0.7037;0.7;0.7009;0.89;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 618};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=618)
SVC;0.612;0.6968;0.612;0.6026;0.7246;0.7694;0.7246;0.7273;0.7;0.736;0.7;0.7008;0.7683;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 745};SVC(C=1, kernel='linear', probability=True, random_state=745)
MLPClassifier;0.7907;0.8022;0.7907;0.791;0.7391;0.7361;0.7391;0.736;0.7;0.7088;0.7;0.7008;0.9169;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
LogisticRegression;0.7134;0.7218;0.7134;0.7118;0.8406;0.8515;0.8406;0.8427;0.7;0.7149;0.7;0.7004;0.8893;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7293;0.7467;0.7293;0.7281;0.6957;0.6998;0.6957;0.6957;0.7;0.7149;0.7;0.7004;0.8953;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7278;0.7385;0.7278;0.7266;0.7536;0.7693;0.7536;0.7509;0.7;0.7149;0.7;0.7004;0.8875;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
LogisticRegression;0.7246;0.7338;0.7246;0.7238;0.7246;0.7242;0.7246;0.7237;0.7;0.7149;0.7;0.7004;0.8888;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7262;0.737;0.7262;0.7258;0.7536;0.7621;0.7536;0.7531;0.7;0.7149;0.7;0.7004;0.8894;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7343;0.7458;0.7343;0.7354;0.7101;0.7104;0.7101;0.7101;0.7;0.7149;0.7;0.7004;0.8935;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7246;0.7319;0.7246;0.7243;0.7101;0.7161;0.7101;0.7099;0.7;0.7149;0.7;0.7004;0.8898;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
LogisticRegression;0.7247;0.736;0.7247;0.7241;0.7246;0.7416;0.7246;0.7272;0.7;0.7149;0.7;0.7004;0.8895;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
LogisticRegression;0.7211;0.737;0.7211;0.7214;0.7536;0.7536;0.7536;0.7536;0.7;0.7149;0.7;0.7004;0.8872;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
KNeighborsClassifier;0.7859;0.8005;0.7859;0.7847;0.8116;0.8303;0.8116;0.8058;0.7;0.7;0.7;0.7;0.9231;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7875;0.798;0.7875;0.7862;0.8406;0.85;0.8406;0.8415;0.7;0.7;0.7;0.7;0.9161;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
LogisticRegression;0.7182;0.7298;0.7182;0.7181;0.7536;0.7583;0.7536;0.7538;0.7;0.709;0.7;0.6993;0.8891;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7037;0.7152;0.7037;0.7038;0.8261;0.8265;0.8261;0.826;0.7;0.709;0.7;0.6993;0.8814;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
MLPClassifier;0.7715;0.7881;0.7715;0.772;0.7681;0.7704;0.7681;0.769;0.7;0.7367;0.7;0.6991;0.9117;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.7698;0.7791;0.7698;0.769;0.7101;0.7081;0.7101;0.7063;0.7;0.7558;0.7;0.696;0.9133;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
MLPClassifier;0.7713;0.7897;0.7713;0.7701;0.6812;0.7252;0.6812;0.6706;0.7;0.7254;0.7;0.6917;0.9118;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
LogisticRegression;0.7407;0.7522;0.7407;0.7406;0.6812;0.6973;0.6812;0.6801;0.6833;0.712;0.6833;0.685;0.8928;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
MLPClassifier;0.7665;0.7812;0.7665;0.7668;0.7681;0.8405;0.7681;0.7632;0.6833;0.7094;0.6833;0.684;0.9072;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
MLPClassifier;0.7729;0.7827;0.7729;0.7732;0.7246;0.7718;0.7246;0.7226;0.6833;0.7258;0.6833;0.6831;0.9161;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.7632;0.7816;0.7632;0.7631;0.7536;0.8056;0.7536;0.7458;0.6833;0.7258;0.6833;0.6831;0.9109;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
MLPClassifier;0.7777;0.81;0.7777;0.7784;0.6232;0.6363;0.6232;0.6212;0.6833;0.7093;0.6833;0.6825;0.92;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
LogisticRegression;0.7182;0.7323;0.7182;0.7183;0.7826;0.8158;0.7826;0.7848;0.6833;0.6959;0.6833;0.6822;0.8868;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 24, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=24)"
MLPClassifier;0.7683;0.7785;0.7683;0.7692;0.7536;0.772;0.7536;0.7551;0.6833;0.7362;0.6833;0.6816;0.9142;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
MLPClassifier;0.7635;0.779;0.7635;0.7625;0.7971;0.7941;0.7971;0.7906;0.6833;0.6833;0.6833;0.6794;0.9156;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
MLPClassifier;0.7729;0.7921;0.7729;0.7744;0.7681;0.7698;0.7681;0.7682;0.6667;0.6717;0.6667;0.6673;0.9158;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.7762;0.791;0.7762;0.7763;0.7101;0.7423;0.7101;0.694;0.6667;0.677;0.6667;0.6655;0.9126;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
MLPClassifier;0.7521;0.774;0.7521;0.7516;0.7536;0.7686;0.7536;0.743;0.6667;0.677;0.6667;0.6655;0.9112;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.765;0.7786;0.765;0.7643;0.8116;0.8118;0.8116;0.81;0.6667;0.6778;0.6667;0.6651;0.9103;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.7776;0.7896;0.7776;0.7773;0.7391;0.7992;0.7391;0.7362;0.6667;0.6878;0.6667;0.6639;0.9107;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
MLPClassifier;0.7778;0.7924;0.7778;0.7757;0.6377;0.6647;0.6377;0.5996;0.6667;0.6952;0.6667;0.658;0.917;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
MLPClassifier;0.7682;0.7958;0.7682;0.7683;0.6812;0.7536;0.6812;0.6764;0.65;0.7036;0.65;0.6497;0.912;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.768;0.7909;0.768;0.7688;0.7246;0.7694;0.7246;0.7273;0.65;0.6959;0.65;0.6468;0.917;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 638, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=638)
MLPClassifier;0.781;0.7967;0.781;0.7798;0.6522;0.68;0.6522;0.6564;0.65;0.7001;0.65;0.6441;0.9176;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
MLPClassifier;0.7666;0.7793;0.7666;0.7671;0.7536;0.8148;0.7536;0.7556;0.65;0.6963;0.65;0.6438;0.9185;smote;250;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 474, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=474)
