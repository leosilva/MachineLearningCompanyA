Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9335;0.9352;0.9335;0.9336;0.9371;0.9373;0.9371;0.937;0.9167;0.9242;0.9167;0.9153;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9346;0.9367;0.9346;0.9348;0.9315;0.9323;0.9315;0.9314;0.9167;0.9242;0.9167;0.9153;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
SVC;0.9016;0.9049;0.9016;0.9015;0.936;0.94;0.936;0.936;0.8833;0.8915;0.8833;0.885;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9048;0.9081;0.9048;0.9048;0.9202;0.9249;0.9202;0.9201;0.8833;0.8915;0.8833;0.885;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9023;0.9057;0.9023;0.9022;0.9303;0.9328;0.9303;0.9303;0.8833;0.8915;0.8833;0.885;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
DecisionTreeClassifier;0.9332;0.9352;0.9332;0.9333;0.9371;0.9383;0.9371;0.9371;0.8833;0.9046;0.8833;0.8844;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9357;0.9375;0.9357;0.9358;0.9247;0.9251;0.9247;0.9247;0.8833;0.9046;0.8833;0.8844;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
SVC;0.9019;0.9049;0.9019;0.9018;0.9338;0.9381;0.9338;0.9337;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.9009;0.9044;0.9009;0.9008;0.9293;0.9314;0.9293;0.9293;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.899;0.9017;0.899;0.8989;0.9495;0.9508;0.9495;0.9495;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.9005;0.9036;0.9005;0.9005;0.9337;0.9361;0.9337;0.9338;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9042;0.9075;0.9042;0.904;0.9337;0.9348;0.9337;0.9337;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9013;0.9042;0.9013;0.9011;0.9292;0.932;0.9292;0.9293;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.904;0.9075;0.904;0.9039;0.9236;0.9258;0.9236;0.9237;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9009;0.9044;0.9009;0.9008;0.9393;0.9416;0.9393;0.9392;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9027;0.9061;0.9027;0.9026;0.9258;0.9303;0.9258;0.9258;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9023;0.9058;0.9023;0.9023;0.9248;0.9289;0.9248;0.9248;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9037;0.9073;0.9037;0.9036;0.9225;0.9273;0.9225;0.9221;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.901;0.9042;0.901;0.9009;0.9348;0.9372;0.9348;0.9348;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.9012;0.9047;0.9012;0.9011;0.9348;0.936;0.9348;0.9348;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8994;0.9027;0.8994;0.8993;0.9449;0.9477;0.9449;0.9451;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.9008;0.9036;0.9008;0.9006;0.9371;0.9382;0.9371;0.9371;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
SVC;0.9055;0.909;0.9055;0.9055;0.9383;0.9407;0.9383;0.9382;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9019;0.905;0.9019;0.9018;0.9259;0.9285;0.9259;0.926;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9034;0.9063;0.9034;0.9031;0.9315;0.9356;0.9315;0.9316;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9;0.9035;0.9;0.8999;0.936;0.9378;0.936;0.9362;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9023;0.9055;0.9023;0.9022;0.9258;0.9299;0.9258;0.9258;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9009;0.9039;0.9009;0.9008;0.936;0.9378;0.936;0.936;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9012;0.9045;0.9012;0.9011;0.9337;0.9351;0.9337;0.9338;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9028;0.906;0.9028;0.9027;0.9326;0.9345;0.9326;0.9326;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9069;0.9095;0.9069;0.9068;0.8944;0.8994;0.8944;0.8946;0.8833;0.8875;0.8833;0.884;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
DecisionTreeClassifier;0.933;0.9347;0.933;0.9331;0.9315;0.9325;0.9315;0.9317;0.8833;0.8891;0.8833;0.8829;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
MLPClassifier;0.9324;0.9345;0.9324;0.9324;0.9393;0.94;0.9393;0.9392;0.8833;0.8891;0.8833;0.8829;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.9346;0.9368;0.9346;0.9347;0.9281;0.9299;0.9281;0.9282;0.8833;0.8891;0.8833;0.8829;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.9321;0.9342;0.9321;0.9321;0.9349;0.9378;0.9349;0.9351;0.8833;0.8891;0.8833;0.8829;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.933;0.935;0.933;0.933;0.927;0.9295;0.927;0.9269;0.8833;0.8891;0.8833;0.8829;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.9334;0.9359;0.9334;0.9334;0.936;0.9373;0.936;0.936;0.8833;0.8891;0.8833;0.8829;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
RandomForestClassifier;0.9329;0.9343;0.9329;0.9329;0.9393;0.9395;0.9393;0.939;0.8833;0.895;0.8833;0.8818;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 665};RandomForestClassifier(n_estimators=10, random_state=665)
KNeighborsClassifier;0.9186;0.921;0.9186;0.9188;0.9337;0.9338;0.9337;0.9337;0.8833;0.8883;0.8833;0.881;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9297;0.9305;0.9297;0.9297;0.9236;0.9234;0.9236;0.9233;0.8833;0.8883;0.8833;0.881;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9266;0.9285;0.9266;0.9269;0.9393;0.9392;0.9393;0.9392;0.8833;0.8883;0.8833;0.881;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9309;0.9319;0.9309;0.9309;0.9258;0.93;0.9258;0.9262;0.8833;0.8883;0.8833;0.881;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.9337;0.9359;0.9337;0.9339;0.945;0.9461;0.945;0.9451;0.8833;0.9016;0.8833;0.8797;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 109};RandomForestClassifier(n_estimators=20, random_state=109)
RandomForestClassifier;0.9341;0.9355;0.9341;0.9341;0.9258;0.9297;0.9258;0.9261;0.8833;0.9016;0.8833;0.8797;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 665};RandomForestClassifier(n_estimators=20, random_state=665)
RandomForestClassifier;0.9326;0.9343;0.9326;0.9326;0.9303;0.9316;0.9303;0.9302;0.8833;0.9016;0.8833;0.8797;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
DecisionTreeClassifier;0.9339;0.9361;0.9339;0.934;0.9326;0.9343;0.9326;0.9327;0.8833;0.899;0.8833;0.8791;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
RandomForestClassifier;0.9347;0.9365;0.9347;0.9348;0.9225;0.9244;0.9225;0.9224;0.8833;0.899;0.8833;0.8791;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 109};RandomForestClassifier(n_estimators=10, random_state=109)
RandomForestClassifier;0.9343;0.9357;0.9343;0.9344;0.9248;0.9266;0.9248;0.9248;0.8833;0.899;0.8833;0.8791;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 665};RandomForestClassifier(n_estimators=10, random_state=665)
RandomForestClassifier;0.9355;0.9368;0.9355;0.9356;0.9181;0.9217;0.9181;0.9182;0.8833;0.899;0.8833;0.8791;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 109};RandomForestClassifier(n_estimators=20, random_state=109)
RandomForestClassifier;0.936;0.9376;0.936;0.936;0.9259;0.9272;0.9259;0.9261;0.8833;0.899;0.8833;0.8791;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 109};RandomForestClassifier(n_estimators=20, random_state=109)
DecisionTreeClassifier;0.9351;0.9374;0.9351;0.9353;0.9382;0.9407;0.9382;0.9384;0.8833;0.899;0.8833;0.8791;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9294;0.9312;0.9294;0.9294;0.9573;0.9582;0.9573;0.9574;0.8833;0.899;0.8833;0.8791;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
RandomForestClassifier;0.9332;0.935;0.9332;0.9334;0.927;0.9285;0.927;0.927;0.8833;0.8888;0.8833;0.8783;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 109};RandomForestClassifier(n_estimators=20, random_state=109)
RandomForestClassifier;0.9349;0.9369;0.9349;0.935;0.9247;0.9269;0.9247;0.925;0.8833;0.8888;0.8833;0.8783;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
DecisionTreeClassifier;0.9346;0.9363;0.9346;0.9347;0.927;0.9295;0.927;0.9273;0.8667;0.8849;0.8667;0.8684;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.9371;0.9392;0.9371;0.9372;0.9236;0.9241;0.9236;0.9236;0.8667;0.8849;0.8667;0.8684;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
DecisionTreeClassifier;0.9345;0.9366;0.9345;0.9346;0.9213;0.9236;0.9213;0.9217;0.8667;0.894;0.8667;0.8683;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
SVC;0.9039;0.907;0.9039;0.9037;0.9247;0.9257;0.9247;0.9244;0.8667;0.8681;0.8667;0.867;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 982};SVC(C=10, random_state=982)
SVC;0.9007;0.9043;0.9007;0.9006;0.9292;0.9311;0.9292;0.9292;0.8667;0.8681;0.8667;0.867;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.9059;0.9088;0.9059;0.9058;0.927;0.9291;0.927;0.9269;0.8667;0.8681;0.8667;0.867;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 859};SVC(C=10, random_state=859)
MLPClassifier;0.9325;0.9342;0.9325;0.9325;0.9416;0.9427;0.9416;0.9418;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.9321;0.9343;0.9321;0.9321;0.9281;0.9291;0.9281;0.9281;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.934;0.936;0.934;0.934;0.9327;0.9338;0.9327;0.9328;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9326;0.9343;0.9326;0.9327;0.9404;0.9403;0.9404;0.9403;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.9319;0.9337;0.9319;0.9319;0.9281;0.9287;0.9281;0.9281;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9326;0.9343;0.9326;0.9326;0.936;0.9374;0.936;0.9362;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.932;0.9339;0.932;0.932;0.9383;0.938;0.9383;0.9381;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9324;0.934;0.9324;0.9324;0.9292;0.9298;0.9292;0.9292;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9337;0.9355;0.9337;0.9337;0.9281;0.9309;0.9281;0.9282;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9332;0.9351;0.9332;0.9333;0.9258;0.9301;0.9258;0.9261;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9337;0.9357;0.9337;0.9337;0.927;0.9279;0.927;0.927;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.9335;0.9355;0.9335;0.9335;0.9348;0.935;0.9348;0.9348;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.9339;0.9359;0.9339;0.9339;0.927;0.9297;0.927;0.9273;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.933;0.9346;0.933;0.933;0.9315;0.9333;0.9315;0.9315;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.9324;0.9339;0.9324;0.9324;0.9315;0.9338;0.9315;0.9317;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.932;0.9334;0.932;0.932;0.9449;0.947;0.9449;0.9451;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.9327;0.9346;0.9327;0.9328;0.9393;0.9404;0.9393;0.9394;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.9312;0.9328;0.9312;0.9313;0.936;0.9362;0.936;0.9359;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.9317;0.9339;0.9317;0.9318;0.9293;0.9343;0.9293;0.9294;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.9329;0.9347;0.9329;0.9329;0.936;0.9383;0.936;0.936;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.9353;0.9373;0.9353;0.9354;0.9203;0.9216;0.9203;0.9204;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.9306;0.9322;0.9306;0.9306;0.9393;0.9401;0.9393;0.9395;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 358, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=358)
MLPClassifier;0.933;0.9349;0.933;0.933;0.9416;0.9421;0.9416;0.9416;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9334;0.9357;0.9334;0.9334;0.927;0.9299;0.927;0.927;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.9314;0.9334;0.9314;0.9314;0.9382;0.9392;0.9382;0.9381;0.8667;0.8759;0.8667;0.8668;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
DecisionTreeClassifier;0.9332;0.9352;0.9332;0.9333;0.9259;0.9305;0.9259;0.9264;0.8667;0.8839;0.8667;0.8664;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
KNeighborsClassifier;0.9246;0.9258;0.9246;0.9246;0.9147;0.915;0.9147;0.9145;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.929;0.9299;0.929;0.929;0.9293;0.9295;0.9293;0.9294;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9291;0.9301;0.9291;0.9291;0.9281;0.9284;0.9281;0.9278;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9179;0.9192;0.9179;0.9178;0.9473;0.9474;0.9473;0.9473;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9232;0.9254;0.9232;0.9232;0.9292;0.9318;0.9292;0.9293;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9209;0.9218;0.9209;0.9207;0.9236;0.9239;0.9236;0.9236;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9261;0.927;0.9261;0.9262;0.9427;0.9431;0.9427;0.9427;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.924;0.9259;0.924;0.9239;0.9258;0.9278;0.9258;0.926;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9272;0.9286;0.9272;0.9273;0.936;0.9359;0.936;0.9359;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.929;0.9301;0.929;0.929;0.9393;0.9403;0.9393;0.9396;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9223;0.924;0.9223;0.9224;0.9191;0.924;0.9191;0.9198;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9252;0.9273;0.9252;0.9253;0.9326;0.9326;0.9326;0.9323;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9261;0.9269;0.9261;0.9259;0.9383;0.9386;0.9383;0.9384;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9267;0.9285;0.9267;0.9269;0.9315;0.9327;0.9315;0.9318;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9289;0.9307;0.9289;0.929;0.9327;0.9343;0.9327;0.9328;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9237;0.925;0.9237;0.9239;0.9304;0.931;0.9304;0.9305;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9284;0.9296;0.9284;0.9285;0.9258;0.9271;0.9258;0.9261;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9282;0.9294;0.9282;0.9283;0.9247;0.9259;0.9247;0.925;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9286;0.9298;0.9286;0.9287;0.9226;0.9227;0.9226;0.9224;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9239;0.9257;0.9239;0.9237;0.9236;0.9234;0.9236;0.9233;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.925;0.926;0.925;0.9248;0.9382;0.9397;0.9382;0.9383;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9292;0.9301;0.9292;0.9293;0.9236;0.9287;0.9236;0.9243;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9265;0.9272;0.9265;0.9265;0.9348;0.9352;0.9348;0.9347;0.8667;0.8736;0.8667;0.865;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9326;0.9342;0.9326;0.9326;0.9303;0.9308;0.9303;0.9305;0.8667;0.8851;0.8667;0.864;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9336;0.9355;0.9336;0.9337;0.9393;0.9406;0.9393;0.9396;0.8667;0.8851;0.8667;0.864;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 665};RandomForestClassifier(n_estimators=20, random_state=665)
RandomForestClassifier;0.9329;0.934;0.9329;0.9328;0.9461;0.9477;0.9461;0.9462;0.8667;0.8851;0.8667;0.864;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9346;0.9363;0.9346;0.9347;0.9327;0.9346;0.9327;0.9327;0.8667;0.8851;0.8667;0.864;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
DecisionTreeClassifier;0.9322;0.9338;0.9322;0.9323;0.9439;0.9451;0.9439;0.9437;0.8667;0.8841;0.8667;0.8637;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
DecisionTreeClassifier;0.9342;0.9362;0.9342;0.9343;0.9337;0.9353;0.9337;0.9339;0.8667;0.8841;0.8667;0.8637;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
RandomForestClassifier;0.9314;0.933;0.9314;0.9315;0.9338;0.9362;0.9338;0.9338;0.8667;0.8841;0.8667;0.8637;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9366;0.9385;0.9366;0.9368;0.9236;0.9256;0.9236;0.9238;0.8667;0.8841;0.8667;0.8637;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 665};RandomForestClassifier(n_estimators=20, random_state=665)
RandomForestClassifier;0.9312;0.9326;0.9312;0.9313;0.9394;0.942;0.9394;0.9396;0.8667;0.8841;0.8667;0.8637;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 665};RandomForestClassifier(n_estimators=10, random_state=665)
RandomForestClassifier;0.9336;0.9348;0.9336;0.9337;0.9405;0.9419;0.9405;0.9407;0.8667;0.8841;0.8667;0.8637;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9357;0.9376;0.9357;0.9358;0.9315;0.9335;0.9315;0.9318;0.8667;0.8841;0.8667;0.8637;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 109};RandomForestClassifier(n_estimators=20, random_state=109)
RandomForestClassifier;0.9317;0.9329;0.9317;0.9317;0.9371;0.939;0.9371;0.9372;0.8667;0.8766;0.8667;0.8635;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9304;0.9309;0.9304;0.9303;0.9382;0.9385;0.9382;0.9382;0.8667;0.8766;0.8667;0.8635;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 109};RandomForestClassifier(n_estimators=5, random_state=109)
RandomForestClassifier;0.9335;0.935;0.9335;0.9336;0.9292;0.9329;0.9292;0.9294;0.8667;0.8766;0.8667;0.8635;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9319;0.9332;0.9319;0.9319;0.936;0.9372;0.936;0.936;0.8667;0.8744;0.8667;0.8628;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 665};RandomForestClassifier(n_estimators=20, random_state=665)
RandomForestClassifier;0.9355;0.9375;0.9355;0.9356;0.9258;0.9271;0.9258;0.9259;0.8667;0.8744;0.8667;0.8628;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 109};RandomForestClassifier(n_estimators=20, random_state=109)
RandomForestClassifier;0.9331;0.9343;0.9331;0.9332;0.9472;0.9476;0.9472;0.9472;0.8667;0.8744;0.8667;0.8628;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 109};RandomForestClassifier(n_estimators=10, random_state=109)
DecisionTreeClassifier;0.9346;0.9366;0.9346;0.9348;0.9393;0.9396;0.9393;0.9393;0.85;0.8732;0.85;0.8524;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9343;0.9362;0.9343;0.9345;0.927;0.9281;0.927;0.927;0.85;0.8732;0.85;0.8524;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
DecisionTreeClassifier;0.932;0.9341;0.932;0.9321;0.9449;0.9477;0.9449;0.9452;0.85;0.8732;0.85;0.8524;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9321;0.9335;0.9321;0.9322;0.9303;0.9325;0.9303;0.9307;0.85;0.8732;0.85;0.8524;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.9338;0.9354;0.9338;0.9339;0.9181;0.9204;0.9181;0.9182;0.85;0.8732;0.85;0.8524;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9322;0.9341;0.9322;0.9323;0.9236;0.9251;0.9236;0.9238;0.85;0.871;0.85;0.8519;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9345;0.9363;0.9345;0.9346;0.9439;0.9442;0.9439;0.9439;0.85;0.871;0.85;0.8519;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
KNeighborsClassifier;0.9216;0.9231;0.9216;0.9218;0.9394;0.9396;0.9394;0.9391;0.85;0.858;0.85;0.8492;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9236;0.9245;0.9236;0.9235;0.9382;0.9386;0.9382;0.9383;0.85;0.858;0.85;0.8492;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.934;0.9354;0.934;0.934;0.9315;0.9318;0.9315;0.9313;0.85;0.8599;0.85;0.8473;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
DecisionTreeClassifier;0.9285;0.9297;0.9285;0.9285;0.9371;0.9378;0.9371;0.937;0.8333;0.8769;0.8333;0.8349;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
RandomForestClassifier;0.9357;0.9376;0.9357;0.9358;0.9326;0.9333;0.9326;0.9326;0.8333;0.8524;0.8333;0.8338;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 665};RandomForestClassifier(n_estimators=10, random_state=665)
DecisionTreeClassifier;0.9326;0.9347;0.9326;0.9328;0.9438;0.9438;0.9438;0.9437;0.8333;0.8629;0.8333;0.8327;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
DecisionTreeClassifier;0.934;0.9356;0.934;0.934;0.936;0.9384;0.936;0.9361;0.8333;0.8629;0.8333;0.8327;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
LogisticRegression;0.8118;0.8263;0.8118;0.8141;0.836;0.8491;0.836;0.8383;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8179;0.8311;0.8179;0.8201;0.8213;0.8371;0.8213;0.8238;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8194;0.8329;0.8194;0.8217;0.7888;0.8093;0.7888;0.792;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8183;0.8321;0.8183;0.8205;0.8002;0.813;0.8002;0.8029;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8147;0.8289;0.8147;0.8169;0.8126;0.8257;0.8126;0.8147;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8177;0.8314;0.8177;0.8199;0.8137;0.8264;0.8137;0.8164;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8169;0.8305;0.8169;0.8193;0.8348;0.8478;0.8348;0.8373;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8148;0.829;0.8148;0.8171;0.8022;0.8202;0.8022;0.8044;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8158;0.8301;0.8158;0.8181;0.8236;0.8332;0.8236;0.826;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8169;0.8305;0.8169;0.8191;0.8202;0.836;0.8202;0.8231;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.817;0.8314;0.817;0.8193;0.8146;0.8239;0.8146;0.817;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8162;0.8305;0.8162;0.8184;0.8067;0.8196;0.8067;0.8094;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.818;0.8318;0.818;0.8202;0.8303;0.8415;0.8303;0.833;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8121;0.8266;0.8121;0.8145;0.836;0.8456;0.836;0.8379;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8182;0.8315;0.8182;0.8204;0.818;0.8375;0.818;0.8204;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8173;0.8309;0.8173;0.8194;0.8159;0.833;0.8159;0.8192;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.818;0.8318;0.818;0.8203;0.8159;0.8312;0.8159;0.8187;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8183;0.8321;0.8183;0.8205;0.8249;0.835;0.8249;0.8272;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8142;0.8281;0.8142;0.8163;0.8135;0.8285;0.8135;0.817;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.8189;0.8324;0.8189;0.8212;0.8213;0.8359;0.8213;0.8237;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.8178;0.8312;0.8178;0.82;0.8112;0.8281;0.8112;0.814;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.819;0.8324;0.819;0.8213;0.8146;0.8281;0.8146;0.8172;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.8165;0.8307;0.8165;0.8189;0.8011;0.8172;0.8011;0.8027;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 765, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=765)"
LogisticRegression;0.8144;0.8288;0.8144;0.8168;0.8025;0.8161;0.8025;0.8047;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.8168;0.8305;0.8168;0.8192;0.8157;0.8288;0.8157;0.8172;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8183;0.8319;0.8183;0.8206;0.8202;0.8329;0.8202;0.8226;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
LogisticRegression;0.8164;0.8301;0.8164;0.8187;0.8204;0.8372;0.8204;0.8225;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.8158;0.8301;0.8158;0.8181;0.8227;0.8323;0.8227;0.8247;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.8154;0.83;0.8154;0.8177;0.8067;0.8214;0.8067;0.8086;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
LogisticRegression;0.8143;0.8287;0.8143;0.8166;0.8337;0.8423;0.8337;0.8355;0.8333;0.8333;0.8333;0.8323;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 578, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=578)"
KNeighborsClassifier;0.9261;0.9277;0.9261;0.9262;0.9225;0.9225;0.9225;0.9224;0.8333;0.8447;0.8333;0.8315;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9331;0.9343;0.9331;0.9332;0.9371;0.9388;0.9371;0.9373;0.8333;0.8332;0.8333;0.8302;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 665};RandomForestClassifier(n_estimators=20, random_state=665)
DecisionTreeClassifier;0.9337;0.9358;0.9337;0.9339;0.9393;0.9395;0.9393;0.9393;0.8167;0.8361;0.8167;0.8205;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9337;0.9359;0.9337;0.9339;0.9348;0.9351;0.9348;0.9348;0.8167;0.8558;0.8167;0.8191;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.9358;0.9374;0.9358;0.9359;0.9349;0.9351;0.9349;0.9346;0.8167;0.842;0.8167;0.8169;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.9297;0.9314;0.9297;0.9298;0.9337;0.9339;0.9337;0.9334;0.8167;0.842;0.8167;0.8169;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 809};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=809)
DecisionTreeClassifier;0.9322;0.9333;0.9322;0.9323;0.9393;0.9417;0.9393;0.9395;0.8167;0.842;0.8167;0.8169;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.9345;0.9363;0.9345;0.9346;0.9303;0.9306;0.9303;0.9299;0.8167;0.842;0.8167;0.8169;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 721};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=721)
RandomForestClassifier;0.9309;0.9322;0.9309;0.9309;0.9461;0.9468;0.9461;0.946;0.8167;0.8193;0.8167;0.8157;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 109};RandomForestClassifier(n_estimators=5, random_state=109)
RandomForestClassifier;0.9334;0.9352;0.9334;0.9334;0.927;0.9275;0.927;0.9271;0.8;0.8072;0.8;0.8005;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 665};RandomForestClassifier(n_estimators=5, random_state=665)
