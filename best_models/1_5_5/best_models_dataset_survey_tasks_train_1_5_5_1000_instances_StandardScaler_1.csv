Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8806;0.8816;0.8806;0.8805;0.9034;0.9035;0.9034;0.9035;0.9167;0.9205;0.9167;0.916;0.9638;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.8818;0.8821;0.8818;0.8818;0.9276;0.9275;0.9276;0.9272;0.9;0.9027;0.9;0.8998;0.9642;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
MLPClassifier;0.8833;0.8839;0.8833;0.8831;0.9034;0.905;0.9034;0.9025;0.9;0.9036;0.9;0.8984;0.965;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
RandomForestClassifier;0.9227;0.9232;0.9227;0.9226;0.9207;0.9226;0.9207;0.92;0.8833;0.8831;0.8833;0.8829;0.9745;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
MLPClassifier;0.8829;0.8838;0.8829;0.8826;0.9172;0.9182;0.9172;0.9166;0.8833;0.8844;0.8833;0.8814;0.9644;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
MLPClassifier;0.8794;0.8798;0.8794;0.8794;0.89;0.8915;0.89;0.8892;0.8833;0.8844;0.8833;0.8814;0.9654;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
MLPClassifier;0.8814;0.8816;0.8814;0.8813;0.9069;0.9063;0.9069;0.9064;0.8833;0.8881;0.8833;0.8805;0.9643;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
MLPClassifier;0.8844;0.8849;0.8844;0.8842;0.9138;0.9173;0.9138;0.913;0.8833;0.8881;0.8833;0.8805;0.9648;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.8782;0.8791;0.8782;0.8784;0.9313;0.9323;0.9313;0.931;0.8833;0.8881;0.8833;0.8805;0.966;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.8832;0.8837;0.8832;0.883;0.9141;0.9168;0.9141;0.9143;0.8833;0.8881;0.8833;0.8805;0.9659;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
RandomForestClassifier;0.9238;0.9242;0.9238;0.9238;0.9345;0.935;0.9345;0.9343;0.8667;0.8681;0.8667;0.867;0.9744;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
RandomForestClassifier;0.9265;0.9272;0.9265;0.9264;0.9517;0.9521;0.9517;0.9518;0.8667;0.8667;0.8667;0.8667;0.9737;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
RandomForestClassifier;0.9227;0.9235;0.9227;0.9226;0.9517;0.9522;0.9517;0.9515;0.8667;0.8675;0.8667;0.8656;0.9733;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
MLPClassifier;0.8852;0.8859;0.8852;0.8854;0.9172;0.9201;0.9172;0.9173;0.8667;0.8675;0.8667;0.8656;0.9669;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
MLPClassifier;0.8825;0.883;0.8825;0.8824;0.9276;0.9274;0.9276;0.9271;0.8667;0.8731;0.8667;0.8651;0.9653;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
MLPClassifier;0.884;0.8841;0.884;0.8842;0.8793;0.8797;0.8793;0.8787;0.8667;0.8669;0.8667;0.8643;0.9662;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
MLPClassifier;0.8779;0.8789;0.8779;0.8779;0.9276;0.9277;0.9276;0.9273;0.8667;0.8673;0.8667;0.8637;0.9639;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.8809;0.8815;0.8809;0.8809;0.9003;0.9009;0.9003;0.9003;0.8667;0.8673;0.8667;0.8637;0.9649;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.876;0.877;0.876;0.8761;0.9;0.9017;0.9;0.8988;0.8667;0.8737;0.8667;0.8625;0.9651;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.8775;0.8782;0.8775;0.8772;0.9345;0.9341;0.9345;0.9342;0.8667;0.8737;0.8667;0.8625;0.9625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
SVC;0.7987;0.81;0.7987;0.8007;0.8552;0.8576;0.8552;0.8557;0.85;0.8514;0.85;0.8504;0.9207;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.8005;0.8115;0.8005;0.8022;0.8935;0.893;0.8935;0.8929;0.85;0.8514;0.85;0.8504;0.9189;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.8036;0.8137;0.8036;0.8057;0.8522;0.8521;0.8522;0.8512;0.85;0.8514;0.85;0.8504;0.9215;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.8041;0.8147;0.8041;0.8058;0.8724;0.8749;0.8724;0.873;0.85;0.8514;0.85;0.8504;0.922;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.7995;0.8106;0.7995;0.8013;0.8759;0.8753;0.8759;0.8755;0.85;0.8514;0.85;0.8504;0.9214;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.8002;0.8114;0.8002;0.8021;0.8621;0.8621;0.8621;0.8621;0.85;0.8514;0.85;0.8504;0.9218;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.8048;0.8158;0.8048;0.8069;0.8655;0.8659;0.8655;0.864;0.85;0.8514;0.85;0.8504;0.9234;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.7995;0.8104;0.7995;0.8012;0.8724;0.8718;0.8724;0.8709;0.85;0.8514;0.85;0.8504;0.9201;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.7987;0.8091;0.7987;0.8005;0.9;0.8993;0.9;0.8985;0.85;0.8514;0.85;0.8504;0.9202;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.8033;0.8135;0.8033;0.8052;0.8655;0.8667;0.8655;0.864;0.85;0.8514;0.85;0.8504;0.9218;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.8028;0.8128;0.8028;0.8044;0.8763;0.8762;0.8763;0.8752;0.85;0.8514;0.85;0.8504;0.9214;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.8024;0.8134;0.8024;0.8041;0.8316;0.8306;0.8316;0.8311;0.85;0.8514;0.85;0.8504;0.9232;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.7959;0.8058;0.7959;0.798;0.89;0.8913;0.89;0.8885;0.85;0.8514;0.85;0.8504;0.9183;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.801;0.8108;0.801;0.8029;0.8828;0.8822;0.8828;0.8821;0.85;0.8514;0.85;0.8504;0.9203;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.8071;0.817;0.8071;0.8092;0.8586;0.8602;0.8586;0.8555;0.85;0.8514;0.85;0.8504;0.9232;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.7991;0.8097;0.7991;0.801;0.8724;0.8722;0.8724;0.8722;0.85;0.8514;0.85;0.8504;0.9197;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.7995;0.8108;0.7995;0.8015;0.8793;0.879;0.8793;0.8791;0.85;0.8514;0.85;0.8504;0.9208;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.7934;0.8047;0.7934;0.7954;0.9034;0.9031;0.9034;0.9026;0.85;0.8514;0.85;0.8504;0.9184;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.7972;0.8083;0.7972;0.799;0.8793;0.879;0.8793;0.879;0.85;0.8514;0.85;0.8504;0.921;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.8006;0.8109;0.8006;0.8025;0.8793;0.8796;0.8793;0.8777;0.85;0.8514;0.85;0.8504;0.9205;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.8033;0.8141;0.8033;0.8048;0.8828;0.8837;0.8828;0.8819;0.85;0.8514;0.85;0.8504;0.9194;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.8013;0.8116;0.8013;0.8033;0.8419;0.8407;0.8419;0.8412;0.85;0.8514;0.85;0.8504;0.9215;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.804;0.8133;0.804;0.8055;0.8797;0.8798;0.8797;0.8797;0.85;0.8514;0.85;0.8504;0.9212;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
RandomForestClassifier;0.9215;0.9222;0.9215;0.9215;0.9379;0.9389;0.9379;0.9378;0.85;0.8505;0.85;0.8499;0.9761;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
RandomForestClassifier;0.9212;0.9221;0.9212;0.9212;0.9345;0.9353;0.9345;0.9346;0.85;0.8524;0.85;0.8497;0.9759;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
RandomForestClassifier;0.9242;0.9247;0.9242;0.9242;0.9244;0.9242;0.9244;0.924;0.85;0.8497;0.85;0.8495;0.974;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
RandomForestClassifier;0.9296;0.9303;0.9296;0.9296;0.8966;0.8979;0.8966;0.8969;0.85;0.8497;0.85;0.8495;0.9749;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
RandomForestClassifier;0.9242;0.9251;0.9242;0.9242;0.9138;0.9141;0.9138;0.9133;0.85;0.8524;0.85;0.8488;0.9768;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
KNeighborsClassifier;0.8955;0.8966;0.8955;0.8956;0.945;0.9462;0.945;0.9453;0.85;0.8492;0.85;0.8485;0.962;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9055;0.9068;0.9055;0.9054;0.8931;0.8927;0.8931;0.8929;0.85;0.8518;0.85;0.8483;0.9637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.881;0.8818;0.881;0.8809;0.9207;0.9207;0.9207;0.9206;0.85;0.8518;0.85;0.8483;0.9638;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
RandomForestClassifier;0.9254;0.926;0.9254;0.9253;0.9244;0.9251;0.9244;0.9243;0.85;0.8528;0.85;0.8482;0.9757;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
MLPClassifier;0.8794;0.8796;0.8794;0.8794;0.8969;0.897;0.8969;0.896;0.85;0.8483;0.85;0.8467;0.9637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
MLPClassifier;0.8859;0.8864;0.8859;0.886;0.8935;0.8933;0.8935;0.893;0.85;0.8514;0.85;0.8458;0.9662;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.8829;0.8836;0.8829;0.883;0.9172;0.9176;0.9172;0.9168;0.85;0.8514;0.85;0.8458;0.9637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
SVC;0.8048;0.8154;0.8048;0.8068;0.8414;0.8412;0.8414;0.8409;0.8333;0.836;0.8333;0.8335;0.9246;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.7957;0.8071;0.7957;0.7976;0.8759;0.8773;0.8759;0.8738;0.8333;0.8333;0.8333;0.8333;0.9204;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.799;0.8095;0.799;0.8009;0.8557;0.8591;0.8557;0.8552;0.8333;0.8333;0.8333;0.8333;0.9209;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
SVC;0.8006;0.8106;0.8006;0.8025;0.8966;0.8975;0.8966;0.8968;0.8333;0.8333;0.8333;0.8333;0.9197;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 851};SVC(C=10, probability=True, random_state=851)
SVC;0.8025;0.8119;0.8025;0.8041;0.8625;0.8635;0.8625;0.8617;0.8333;0.8333;0.8333;0.8333;0.9214;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
SVC;0.8025;0.8144;0.8025;0.8045;0.8655;0.8679;0.8655;0.8624;0.8333;0.8333;0.8333;0.8333;0.9206;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 22};SVC(C=10, probability=True, random_state=22)
RandomForestClassifier;0.9227;0.9235;0.9227;0.9227;0.9414;0.9419;0.9414;0.9413;0.8333;0.8331;0.8333;0.8329;0.9747;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
RandomForestClassifier;0.925;0.9255;0.925;0.9249;0.9175;0.9175;0.9175;0.9172;0.8333;0.8367;0.8333;0.8324;0.9774;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
KNeighborsClassifier;0.9036;0.9047;0.9036;0.9035;0.9138;0.9156;0.9138;0.9141;0.8333;0.8333;0.8333;0.8323;0.9623;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8794;0.8803;0.8794;0.8794;0.9107;0.9104;0.9107;0.9105;0.8333;0.8333;0.8333;0.8323;0.9628;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
KNeighborsClassifier;0.9001;0.9019;0.9001;0.9;0.9241;0.9239;0.9241;0.9237;0.8333;0.8338;0.8333;0.8322;0.9637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8993;0.9001;0.8993;0.8991;0.9278;0.9282;0.9278;0.928;0.8333;0.8338;0.8333;0.8322;0.9621;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.897;0.8981;0.897;0.8971;0.9381;0.9395;0.9381;0.9375;0.8333;0.8338;0.8333;0.8322;0.9615;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8986;0.8993;0.8986;0.8985;0.9414;0.9412;0.9414;0.9413;0.8333;0.8338;0.8333;0.8322;0.9648;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9016;0.9005;0.9006;0.8897;0.8897;0.8897;0.8891;0.8333;0.8396;0.8333;0.8318;0.9654;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8767;0.8785;0.8767;0.877;0.9347;0.9358;0.9347;0.9339;0.8333;0.8323;0.8333;0.8314;0.9638;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
KNeighborsClassifier;0.8994;0.9006;0.8994;0.8994;0.8966;0.8978;0.8966;0.8953;0.8333;0.8354;0.8333;0.8313;0.9635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9227;0.9231;0.9227;0.9225;0.9172;0.9186;0.9172;0.9175;0.8333;0.8338;0.8333;0.8312;0.9729;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
KNeighborsClassifier;0.8986;0.8999;0.8986;0.8986;0.9414;0.9429;0.9414;0.9408;0.8333;0.833;0.8333;0.8306;0.962;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8924;0.8932;0.8924;0.8924;0.866;0.8688;0.866;0.8658;0.8333;0.8322;0.8333;0.8303;0.9194;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=5)
MLPClassifier;0.8817;0.8818;0.8817;0.8817;0.9034;0.9039;0.9034;0.9029;0.8333;0.8322;0.8333;0.8303;0.9662;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
MLPClassifier;0.8829;0.8839;0.8829;0.8828;0.9069;0.9075;0.9069;0.9061;0.8333;0.8322;0.8333;0.8303;0.9642;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
MLPClassifier;0.8852;0.8853;0.8852;0.8851;0.9138;0.9136;0.9138;0.9135;0.8333;0.8322;0.8333;0.8303;0.9661;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 965, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=965)
DecisionTreeClassifier;0.8856;0.8867;0.8856;0.8858;0.8586;0.8612;0.8586;0.859;0.8333;0.839;0.8333;0.8291;0.9142;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=687)
MLPClassifier;0.8806;0.8825;0.8806;0.8806;0.9172;0.917;0.9172;0.9165;0.8333;0.831;0.8333;0.829;0.9658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
MLPClassifier;0.8844;0.8847;0.8844;0.8843;0.9276;0.9288;0.9276;0.9266;0.8333;0.8376;0.8333;0.8283;0.9633;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
KNeighborsClassifier;0.8959;0.8965;0.8959;0.8959;0.9103;0.9109;0.9103;0.9101;0.8333;0.8376;0.8333;0.8283;0.9626;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9039;0.9043;0.9039;0.9039;0.931;0.9325;0.931;0.9307;0.8333;0.8376;0.8333;0.8283;0.9657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8836;0.8843;0.8836;0.8835;0.9003;0.9;0.9003;0.8993;0.8333;0.8363;0.8333;0.8275;0.9649;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
MLPClassifier;0.881;0.8812;0.881;0.881;0.9172;0.9172;0.9172;0.9172;0.8333;0.8363;0.8333;0.8275;0.966;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
RandomForestClassifier;0.9265;0.9272;0.9265;0.9265;0.9241;0.9244;0.9241;0.9241;0.8167;0.8241;0.8167;0.8166;0.9731;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
RandomForestClassifier;0.9258;0.9264;0.9258;0.9257;0.9345;0.9357;0.9345;0.9349;0.8167;0.8193;0.8167;0.8157;0.9766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
RandomForestClassifier;0.9307;0.9315;0.9307;0.9307;0.9244;0.9246;0.9244;0.9243;0.8167;0.8193;0.8167;0.8157;0.9752;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
RandomForestClassifier;0.9319;0.9325;0.9319;0.9318;0.8793;0.8805;0.8793;0.8797;0.8167;0.8228;0.8167;0.8156;0.9769;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
KNeighborsClassifier;0.8986;0.9004;0.8986;0.8983;0.9241;0.9242;0.9241;0.9241;0.8167;0.8172;0.8167;0.8155;0.9616;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9001;0.9014;0.9001;0.9;0.9172;0.9173;0.9172;0.9168;0.8167;0.8178;0.8167;0.8148;0.9623;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9032;0.9042;0.9032;0.903;0.9138;0.9137;0.9138;0.9137;0.8167;0.8178;0.8167;0.8148;0.9638;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8936;0.8948;0.8936;0.8934;0.9347;0.9348;0.9347;0.9347;0.8167;0.8178;0.8167;0.8148;0.9636;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9001;0.9011;0.9001;0.9;0.9138;0.9142;0.9138;0.9138;0.8167;0.8178;0.8167;0.8148;0.9631;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9017;0.9005;0.9004;0.9072;0.9073;0.9072;0.9069;0.8167;0.8178;0.8167;0.8148;0.9677;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8994;0.9008;0.8994;0.8994;0.9207;0.9213;0.9207;0.9205;0.8167;0.8178;0.8167;0.8148;0.9634;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9254;0.926;0.9254;0.9252;0.9172;0.9171;0.9172;0.9169;0.8167;0.8187;0.8167;0.8147;0.9743;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
DecisionTreeClassifier;0.8829;0.8846;0.8829;0.8831;0.9069;0.9071;0.9069;0.9068;0.8167;0.8187;0.8167;0.8147;0.9122;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=5)
DecisionTreeClassifier;0.8879;0.8889;0.8879;0.888;0.8241;0.8244;0.8241;0.824;0.8167;0.8241;0.8167;0.8144;0.916;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=402)
DecisionTreeClassifier;0.889;0.8901;0.889;0.889;0.8351;0.837;0.8351;0.8357;0.8167;0.8257;0.8167;0.8142;0.9168;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=687)
KNeighborsClassifier;0.9031;0.9047;0.9031;0.903;0.9141;0.9144;0.9141;0.9138;0.8167;0.821;0.8167;0.814;0.9644;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8997;0.9005;0.8997;0.8996;0.9381;0.9403;0.9381;0.9379;0.8167;0.8208;0.8167;0.8135;0.9608;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9039;0.9028;0.9027;0.9072;0.9069;0.9072;0.9069;0.8167;0.8174;0.8167;0.8125;0.9621;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9009;0.9029;0.9009;0.9009;0.9069;0.9077;0.9069;0.906;0.8167;0.8218;0.8167;0.812;0.964;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9013;0.9028;0.9013;0.9012;0.9345;0.9357;0.9345;0.9343;0.8167;0.8218;0.8167;0.812;0.962;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8855;0.8859;0.8855;0.8856;0.8625;0.8646;0.8625;0.8611;0.8167;0.8226;0.8167;0.8119;0.9142;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=687)
DecisionTreeClassifier;0.886;0.8873;0.886;0.8861;0.8621;0.8613;0.8621;0.8614;0.8167;0.826;0.8167;0.811;0.9145;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=402)
MLPClassifier;0.8787;0.8798;0.8787;0.8788;0.8931;0.8947;0.8931;0.893;0.8167;0.8147;0.8167;0.811;0.9652;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 42, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=42)
DecisionTreeClassifier;0.8798;0.8807;0.8798;0.8799;0.866;0.8658;0.866;0.8654;0.8167;0.8255;0.8167;0.8085;0.9099;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=5)
DecisionTreeClassifier;0.8859;0.8864;0.8859;0.886;0.866;0.8653;0.866;0.8638;0.8167;0.8222;0.8167;0.808;0.9145;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=5)
RandomForestClassifier;0.92;0.9204;0.92;0.92;0.9034;0.9065;0.9034;0.9019;0.8;0.8057;0.8;0.8003;0.975;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
RandomForestClassifier;0.9211;0.9216;0.9211;0.921;0.9278;0.9277;0.9278;0.9277;0.8;0.8108;0.8;0.7996;0.9756;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
DecisionTreeClassifier;0.8875;0.8885;0.8875;0.8878;0.8448;0.8452;0.8448;0.8443;0.8;0.8108;0.8;0.7996;0.9156;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=402)
RandomForestClassifier;0.9239;0.9249;0.9239;0.9239;0.9379;0.9378;0.9379;0.9378;0.8;0.7997;0.8;0.7995;0.9748;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
SVC;0.8098;0.8195;0.8098;0.8112;0.8345;0.8365;0.8345;0.8326;0.8;0.8002;0.8;0.7988;0.9245;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 506};SVC(C=10, probability=True, random_state=506)
RandomForestClassifier;0.9269;0.9272;0.9269;0.9269;0.9278;0.9278;0.9278;0.9275;0.8;0.8008;0.8;0.7982;0.9757;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
RandomForestClassifier;0.9208;0.9215;0.9208;0.9206;0.9416;0.9427;0.9416;0.9418;0.8;0.8008;0.8;0.7982;0.9715;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
RandomForestClassifier;0.9315;0.9318;0.9315;0.9314;0.9241;0.926;0.9241;0.9244;0.8;0.8012;0.8;0.7981;0.9745;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
DecisionTreeClassifier;0.8837;0.885;0.8837;0.8838;0.8586;0.8638;0.8586;0.8579;0.8;0.8198;0.8;0.7978;0.9127;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=5)
KNeighborsClassifier;0.899;0.9003;0.899;0.8989;0.9414;0.9426;0.9414;0.9409;0.8;0.8029;0.8;0.797;0.9636;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9311;0.9319;0.9311;0.9311;0.9141;0.9144;0.9141;0.9134;0.8;0.8042;0.8;0.7968;0.9755;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
KNeighborsClassifier;0.8982;0.8989;0.8982;0.8981;0.9;0.8997;0.9;0.8997;0.8;0.8042;0.8;0.7968;0.9632;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8867;0.8874;0.8867;0.8868;0.831;0.8305;0.831;0.83;0.8;0.8015;0.8;0.7962;0.9151;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=687)
DecisionTreeClassifier;0.8837;0.8847;0.8837;0.8837;0.8552;0.8591;0.8552;0.856;0.8;0.8015;0.8;0.7962;0.9127;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=687)
RandomForestClassifier;0.9288;0.9295;0.9288;0.9288;0.9103;0.9103;0.9103;0.9098;0.8;0.8049;0.8;0.7957;0.9765;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
DecisionTreeClassifier;0.8863;0.887;0.8863;0.8862;0.8517;0.8545;0.8517;0.852;0.8;0.8089;0.8;0.7932;0.9148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=687)
RandomForestClassifier;0.9215;0.9223;0.9215;0.9215;0.9172;0.9179;0.9172;0.9166;0.7833;0.7854;0.7833;0.783;0.9744;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
DecisionTreeClassifier;0.8809;0.8812;0.8809;0.8807;0.8351;0.8357;0.8351;0.834;0.7833;0.787;0.7833;0.7815;0.9107;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=402)
RandomForestClassifier;0.9219;0.9227;0.9219;0.9218;0.9345;0.9345;0.9345;0.9344;0.7833;0.7915;0.7833;0.7809;0.9745;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 312};RandomForestClassifier(n_estimators=20, random_state=312)
RandomForestClassifier;0.9296;0.9304;0.9296;0.9294;0.9069;0.9079;0.9069;0.907;0.7833;0.7856;0.7833;0.7805;0.9754;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
RandomForestClassifier;0.9257;0.926;0.9257;0.9255;0.9107;0.9114;0.9107;0.9106;0.7833;0.7856;0.7833;0.7805;0.9743;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 671};RandomForestClassifier(n_estimators=20, random_state=671)
DecisionTreeClassifier;0.8871;0.8884;0.8871;0.8873;0.869;0.8687;0.869;0.8687;0.7833;0.7801;0.7833;0.7805;0.9153;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=687)
KNeighborsClassifier;0.9096;0.9112;0.9096;0.9096;0.8694;0.8694;0.8694;0.8686;0.7833;0.786;0.7833;0.7804;0.9663;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9032;0.9042;0.9032;0.903;0.9138;0.9141;0.9138;0.9138;0.7833;0.786;0.7833;0.7804;0.9623;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.899;0.9007;0.899;0.8989;0.8724;0.8727;0.8724;0.8714;0.7833;0.7857;0.7833;0.78;0.9651;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9019;0.9005;0.9003;0.9;0.9022;0.9;0.9001;0.7833;0.7857;0.7833;0.78;0.9643;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8863;0.8873;0.8863;0.8865;0.8552;0.8543;0.8552;0.8546;0.7833;0.786;0.7833;0.7789;0.9148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=5)
DecisionTreeClassifier;0.8844;0.8856;0.8844;0.8848;0.8034;0.8033;0.8034;0.8025;0.7833;0.786;0.7833;0.7789;0.9133;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=687)
DecisionTreeClassifier;0.8756;0.8773;0.8756;0.8756;0.8763;0.8779;0.8763;0.8768;0.7833;0.7867;0.7833;0.7767;0.9067;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=402)
DecisionTreeClassifier;0.8829;0.8834;0.8829;0.8827;0.8144;0.8208;0.8144;0.8161;0.7833;0.7845;0.7833;0.7766;0.9123;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=402)
DecisionTreeClassifier;0.8871;0.8883;0.8871;0.8873;0.8483;0.8478;0.8483;0.8475;0.7833;0.7914;0.7833;0.7754;0.9153;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=687)
LogisticRegression;0.713;0.716;0.713;0.7141;0.6897;0.7061;0.6897;0.6906;0.7667;0.7873;0.7667;0.7693;0.882;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.7072;0.7114;0.7072;0.7077;0.6862;0.6892;0.6862;0.6857;0.7667;0.7873;0.7667;0.7693;0.8815;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
DecisionTreeClassifier;0.8844;0.8857;0.8844;0.8847;0.8552;0.8653;0.8552;0.8564;0.7667;0.7897;0.7667;0.7637;0.9133;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=402)
DecisionTreeClassifier;0.889;0.8895;0.889;0.8891;0.831;0.8394;0.831;0.8297;0.7667;0.7681;0.7667;0.7634;0.9169;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=5)
DecisionTreeClassifier;0.8821;0.8836;0.8821;0.8824;0.8621;0.864;0.8621;0.8622;0.7667;0.7667;0.7667;0.7616;0.9116;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=402)
DecisionTreeClassifier;0.8794;0.8805;0.8794;0.8796;0.8345;0.8358;0.8345;0.8341;0.7667;0.77;0.7667;0.7601;0.9096;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=5)
DecisionTreeClassifier;0.8798;0.8809;0.8798;0.88;0.8379;0.8378;0.8379;0.8378;0.7667;0.7665;0.7667;0.7601;0.9099;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=402)
DecisionTreeClassifier;0.8883;0.8891;0.8883;0.8883;0.8655;0.8802;0.8655;0.8626;0.7667;0.7692;0.7667;0.7573;0.9162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 402};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=402)
LogisticRegression;0.7049;0.708;0.7049;0.7054;0.7172;0.7205;0.7172;0.7185;0.75;0.7709;0.75;0.7532;0.8789;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.6995;0.7031;0.6995;0.7006;0.7216;0.7302;0.7216;0.7225;0.75;0.7709;0.75;0.7532;0.878;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7021;0.7054;0.7021;0.7031;0.732;0.7335;0.732;0.732;0.75;0.7709;0.75;0.7532;0.8792;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7098;0.7129;0.7098;0.7106;0.701;0.7046;0.701;0.7007;0.75;0.7703;0.75;0.7528;0.8819;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7065;0.711;0.7065;0.7075;0.7103;0.7089;0.7103;0.7095;0.75;0.7703;0.75;0.7528;0.8812;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.7019;0.706;0.7019;0.7028;0.7724;0.7778;0.7724;0.773;0.75;0.7639;0.75;0.7517;0.8758;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7071;0.7115;0.7071;0.7077;0.701;0.7085;0.701;0.7029;0.75;0.7639;0.75;0.7517;0.8797;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
DecisionTreeClassifier;0.8886;0.8904;0.8886;0.8888;0.8557;0.8559;0.8557;0.8558;0.75;0.7531;0.75;0.746;0.9164;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 687};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=687)
DecisionTreeClassifier;0.8909;0.8912;0.8909;0.8909;0.831;0.8322;0.831;0.8308;0.75;0.7479;0.75;0.7433;0.9182;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=5)
DecisionTreeClassifier;0.8841;0.8848;0.8841;0.8842;0.8241;0.8291;0.8241;0.8216;0.75;0.7512;0.75;0.7413;0.913;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 5};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=5)
LogisticRegression;0.7053;0.7105;0.7053;0.7062;0.7;0.7071;0.7;0.7017;0.7333;0.7472;0.7333;0.7357;0.8823;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7179;0.722;0.7179;0.7188;0.6448;0.652;0.6448;0.6469;0.7333;0.7472;0.7333;0.7357;0.8845;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7088;0.7129;0.7088;0.7096;0.7241;0.7243;0.7241;0.7236;0.7333;0.7472;0.7333;0.7357;0.8789;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7053;0.7088;0.7053;0.7059;0.6931;0.6972;0.6931;0.6945;0.7333;0.7472;0.7333;0.7357;0.8816;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7057;0.7094;0.7057;0.7068;0.7207;0.7256;0.7207;0.7222;0.7333;0.7472;0.7333;0.7357;0.8806;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7045;0.7084;0.7045;0.7055;0.7241;0.7285;0.7241;0.725;0.7333;0.7472;0.7333;0.7357;0.8806;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7057;0.7088;0.7057;0.7062;0.6966;0.6975;0.6966;0.6969;0.7333;0.7472;0.7333;0.7357;0.8808;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.7049;0.708;0.7049;0.706;0.7207;0.7207;0.7207;0.7204;0.7333;0.7472;0.7333;0.7357;0.8799;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7086;0.7121;0.7086;0.7096;0.6942;0.7014;0.6942;0.6946;0.7333;0.7472;0.7333;0.7357;0.8802;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.7107;0.715;0.7107;0.7118;0.6931;0.6961;0.6931;0.6943;0.7333;0.7472;0.7333;0.7357;0.8813;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.6961;0.6995;0.6961;0.697;0.7586;0.7577;0.7586;0.7575;0.7333;0.7472;0.7333;0.7357;0.8782;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.7136;0.7178;0.7136;0.7145;0.6495;0.6466;0.6495;0.6428;0.7333;0.7472;0.7333;0.7357;0.8831;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7072;0.7101;0.7072;0.7079;0.7172;0.7241;0.7172;0.7189;0.7333;0.7472;0.7333;0.7357;0.8791;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7034;0.7066;0.7034;0.7044;0.6931;0.6949;0.6931;0.6933;0.7333;0.7462;0.7333;0.7354;0.8812;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7049;0.7073;0.7049;0.7055;0.6976;0.7026;0.6976;0.699;0.7333;0.7462;0.7333;0.7354;0.8794;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.6984;0.7016;0.6984;0.6988;0.7414;0.7415;0.7414;0.7403;0.7333;0.7462;0.7333;0.7354;0.8793;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.7011;0.7047;0.7011;0.7017;0.7207;0.7225;0.7207;0.7213;0.7333;0.7462;0.7333;0.7354;0.8792;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
LogisticRegression;0.7014;0.704;0.7014;0.7022;0.7251;0.7254;0.7251;0.7252;0.7333;0.7462;0.7333;0.7354;0.8798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7065;0.711;0.7065;0.7073;0.7241;0.7337;0.7241;0.7239;0.7333;0.7462;0.7333;0.7354;0.8804;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7045;0.7101;0.7045;0.7054;0.7034;0.7078;0.7034;0.7041;0.7333;0.7462;0.7333;0.7354;0.8827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 657, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=657)"
LogisticRegression;0.7033;0.7056;0.7033;0.7041;0.7113;0.7146;0.7113;0.7107;0.7167;0.7313;0.7167;0.7195;0.8816;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 909, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=909)"
