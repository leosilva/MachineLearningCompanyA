Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8767;0.8783;0.8767;0.8767;0.8674;0.8676;0.8674;0.8675;0.7833;0.7851;0.7833;0.7775;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8757;0.8774;0.8757;0.8756;0.8854;0.8892;0.8854;0.8857;0.7667;0.7687;0.7667;0.7663;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8699;0.873;0.8699;0.8698;0.8855;0.8855;0.8855;0.8855;0.7667;0.765;0.7667;0.7646;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8648;0.8666;0.8648;0.8643;0.8876;0.8883;0.8876;0.8878;0.7667;0.765;0.7667;0.7646;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8665;0.8685;0.8665;0.8661;0.8562;0.8582;0.8562;0.8569;0.7667;0.7652;0.7667;0.7619;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8719;0.8744;0.8719;0.8718;0.8777;0.8783;0.8777;0.8777;0.7667;0.7652;0.7667;0.7619;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8705;0.873;0.8705;0.8701;0.8809;0.8803;0.8809;0.8805;0.7667;0.7652;0.7667;0.7619;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.853;0.8573;0.853;0.8521;0.8944;0.8956;0.8944;0.8947;0.7667;0.7652;0.7667;0.7619;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8715;0.8746;0.8715;0.8713;0.8708;0.8822;0.8708;0.8708;0.75;0.7543;0.75;0.7497;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8683;0.8706;0.8683;0.8681;0.8777;0.8776;0.8777;0.8776;0.75;0.7488;0.75;0.7485;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.873;0.8752;0.873;0.873;0.8629;0.8638;0.8629;0.8619;0.75;0.7488;0.75;0.7485;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8656;0.8682;0.8656;0.8655;0.8743;0.8806;0.8743;0.8753;0.75;0.7488;0.75;0.7485;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8711;0.8736;0.8711;0.8706;0.8539;0.8683;0.8539;0.8542;0.75;0.7488;0.75;0.7485;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8726;0.8779;0.8726;0.8726;0.8798;0.8829;0.8798;0.8803;0.75;0.7468;0.75;0.7462;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8773;0.8786;0.8773;0.8774;0.882;0.8834;0.882;0.8824;0.75;0.7468;0.75;0.7462;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8723;0.8747;0.8723;0.8723;0.8899;0.89;0.8899;0.8898;0.75;0.7484;0.75;0.7429;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.868;0.8699;0.868;0.8682;0.891;0.892;0.891;0.8914;0.75;0.754;0.75;0.7385;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8687;0.8727;0.8687;0.8685;0.9012;0.9017;0.9012;0.9014;0.7333;0.7405;0.7333;0.7328;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.874;0.8779;0.874;0.874;0.8764;0.8784;0.8764;0.8767;0.7333;0.7335;0.7333;0.7321;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8829;0.8843;0.8829;0.8833;0.8788;0.8816;0.8788;0.8792;0.7333;0.7335;0.7333;0.7321;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8603;0.8632;0.8603;0.8602;0.8708;0.8723;0.8708;0.8712;0.7333;0.7298;0.7333;0.7304;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8692;0.8728;0.8692;0.869;0.8721;0.8746;0.8721;0.8728;0.7333;0.7298;0.7333;0.7304;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8747;0.8774;0.8747;0.8748;0.8854;0.8863;0.8854;0.8857;0.7333;0.7298;0.7333;0.7304;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8663;0.8694;0.8663;0.866;0.8697;0.8705;0.8697;0.87;0.7333;0.7298;0.7333;0.7304;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8609;0.8638;0.8609;0.8598;0.8562;0.8613;0.8562;0.8559;0.7333;0.7287;0.7333;0.7289;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8633;0.8654;0.8633;0.8629;0.8844;0.886;0.8844;0.8848;0.7333;0.7292;0.7333;0.7275;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8773;0.8788;0.8773;0.8774;0.8697;0.8772;0.8697;0.8696;0.7167;0.7137;0.7167;0.7143;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8778;0.8809;0.8778;0.8781;0.891;0.892;0.891;0.8914;0.7167;0.7114;0.7167;0.7119;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8753;0.878;0.8753;0.8755;0.8754;0.8785;0.8754;0.8764;0.7167;0.7114;0.7167;0.7119;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.871;0.8742;0.871;0.8707;0.8944;0.8966;0.8944;0.8946;0.7167;0.714;0.7167;0.7116;smote;3000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
