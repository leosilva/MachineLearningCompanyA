Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8726;0.8757;0.8726;0.8722;0.8893;0.8898;0.8893;0.8895;0.8;0.8079;0.8;0.7992;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.874;0.8773;0.874;0.8735;0.8879;0.8872;0.8879;0.8868;0.7833;0.783;0.7833;0.7828;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8753;0.8782;0.8753;0.8756;0.8826;0.8832;0.8826;0.8828;0.7833;0.783;0.7833;0.7828;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8755;0.8765;0.8755;0.8754;0.902;0.903;0.902;0.9023;0.7833;0.7868;0.7833;0.7826;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8697;0.874;0.8697;0.8696;0.8973;0.899;0.8973;0.8975;0.7833;0.7868;0.7833;0.7826;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8671;0.8706;0.8671;0.8663;0.8919;0.8966;0.8919;0.8923;0.7833;0.7948;0.7833;0.7816;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8704;0.873;0.8704;0.8702;0.8993;0.9041;0.8993;0.8996;0.7833;0.7948;0.7833;0.7816;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8829;0.8846;0.8829;0.8831;0.8745;0.8756;0.8745;0.8747;0.7833;0.7948;0.7833;0.7816;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8705;0.8736;0.8705;0.8704;0.8927;0.8918;0.8927;0.8921;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8735;0.874;0.8735;0.8728;0.8872;0.8878;0.8872;0.8875;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8763;0.8802;0.8763;0.8763;0.8785;0.8777;0.8785;0.8774;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8731;0.8759;0.8731;0.8725;0.8981;0.8986;0.8981;0.8979;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.875;0.877;0.875;0.8742;0.8772;0.8805;0.8772;0.878;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8714;0.8733;0.8714;0.8708;0.8846;0.8837;0.8846;0.884;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8685;0.8712;0.8685;0.8685;0.8966;0.8965;0.8966;0.8966;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8771;0.8784;0.8771;0.8768;0.8765;0.8787;0.8765;0.877;0.7667;0.7726;0.7667;0.7652;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8747;0.8771;0.8747;0.8743;0.8852;0.8915;0.8852;0.8853;0.7667;0.7726;0.7667;0.7652;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8718;0.8757;0.8718;0.8721;0.9034;0.9043;0.9034;0.9034;0.75;0.752;0.75;0.7488;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8797;0.8807;0.8797;0.8795;0.8913;0.8912;0.8913;0.8912;0.75;0.752;0.75;0.7488;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8786;0.88;0.8786;0.8781;0.8833;0.8891;0.8833;0.8841;0.75;0.752;0.75;0.7488;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8667;0.8699;0.8667;0.866;0.9007;0.9007;0.9007;0.9006;0.75;0.752;0.75;0.7488;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8718;0.8743;0.8718;0.8714;0.8832;0.8845;0.8832;0.8831;0.75;0.7487;0.75;0.7484;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.88;0.8818;0.88;0.8801;0.8853;0.8859;0.8853;0.8855;0.7333;0.7328;0.7333;0.7321;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8755;0.8767;0.8755;0.8752;0.8852;0.8859;0.8852;0.8855;0.7333;0.7328;0.7333;0.7321;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8759;0.8768;0.8759;0.8755;0.8893;0.8928;0.8893;0.8898;0.7333;0.7372;0.7333;0.7312;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8755;0.8765;0.8755;0.8751;0.8866;0.8872;0.8866;0.8868;0.7167;0.7173;0.7167;0.7149;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8773;0.8804;0.8773;0.8769;0.8632;0.8724;0.8632;0.863;0.7167;0.7266;0.7167;0.7113;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8835;0.8861;0.8835;0.8836;0.8389;0.8557;0.8389;0.841;0.7167;0.7314;0.7167;0.7103;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8758;0.8771;0.8758;0.8753;0.8671;0.8791;0.8671;0.8673;0.7;0.7079;0.7;0.6947;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8758;0.8795;0.8758;0.8759;0.8786;0.8856;0.8786;0.8784;0.7;0.7079;0.7;0.6947;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
