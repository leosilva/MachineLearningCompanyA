Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.868;0.8744;0.868;0.8673;0.8986;0.8986;0.8986;0.8986;0.8833;0.8862;0.8833;0.8836;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.913;0.9194;0.913;0.9135;0.8696;0.8722;0.8696;0.8689;0.8667;0.8692;0.8667;0.8669;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
DecisionTreeClassifier;0.9179;0.9253;0.9179;0.9183;0.913;0.9135;0.913;0.913;0.8667;0.8692;0.8667;0.8669;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
DecisionTreeClassifier;0.9179;0.9226;0.9179;0.918;0.9275;0.9342;0.9275;0.9282;0.8667;0.8673;0.8667;0.8666;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
RandomForestClassifier;0.9163;0.9197;0.9163;0.9164;0.942;0.9441;0.942;0.9419;0.8667;0.869;0.8667;0.8664;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 609};RandomForestClassifier(n_estimators=20, random_state=609)
KNeighborsClassifier;0.8792;0.8854;0.8792;0.8778;0.942;0.947;0.942;0.9418;0.8667;0.8665;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8695;0.8765;0.8695;0.8679;0.9855;0.9861;0.9855;0.9855;0.8667;0.8665;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8743;0.88;0.8743;0.8735;0.8841;0.885;0.8841;0.8825;0.8667;0.8665;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.9163;0.9247;0.9163;0.9166;0.8406;0.8592;0.8406;0.8419;0.8667;0.8724;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=599)
KNeighborsClassifier;0.8953;0.8995;0.8953;0.8946;0.8116;0.8085;0.8116;0.8093;0.8667;0.8665;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8873;0.8959;0.8873;0.8863;0.8551;0.8591;0.8551;0.8546;0.8667;0.8665;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.905;0.9108;0.905;0.904;0.8841;0.8959;0.8841;0.8844;0.8667;0.8665;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.876;0.8811;0.876;0.8746;0.913;0.9228;0.913;0.9114;0.8667;0.8665;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8582;0.8713;0.8582;0.8566;0.8696;0.8854;0.8696;0.8676;0.8667;0.8699;0.8667;0.8659;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8503;0.8654;0.8503;0.8508;0.8696;0.8673;0.8696;0.8676;0.8667;0.8699;0.8667;0.8659;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
RandomForestClassifier;0.9227;0.9276;0.9227;0.9231;0.913;0.9126;0.913;0.9117;0.8667;0.8731;0.8667;0.8651;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 188};RandomForestClassifier(n_estimators=20, random_state=188)
RandomForestClassifier;0.9211;0.9246;0.9211;0.9209;0.9565;0.9565;0.9565;0.9565;0.8667;0.8731;0.8667;0.8651;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 651};RandomForestClassifier(n_estimators=20, random_state=651)
RandomForestClassifier;0.9275;0.9312;0.9275;0.9273;0.9275;0.9274;0.9275;0.9272;0.8667;0.8736;0.8667;0.865;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 651};RandomForestClassifier(n_estimators=20, random_state=651)
KNeighborsClassifier;0.8841;0.889;0.8841;0.8836;0.8841;0.8885;0.8841;0.8852;0.8667;0.8651;0.8667;0.8648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8728;0.8787;0.8728;0.8713;0.8696;0.8701;0.8696;0.8695;0.85;0.8523;0.85;0.8508;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8777;0.8824;0.8777;0.8768;0.913;0.9216;0.913;0.9126;0.85;0.8523;0.85;0.8508;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8536;0.8678;0.8536;0.854;0.8986;0.9018;0.8986;0.8983;0.85;0.8634;0.85;0.8505;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
DecisionTreeClassifier;0.926;0.9309;0.926;0.9262;0.8406;0.8454;0.8406;0.835;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
KNeighborsClassifier;0.8551;0.8573;0.8551;0.8536;0.971;0.9716;0.971;0.971;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8857;0.8914;0.8857;0.8839;0.913;0.9142;0.913;0.9133;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8953;0.9028;0.8953;0.8942;0.942;0.947;0.942;0.9418;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8792;0.8836;0.8792;0.8778;0.913;0.9164;0.913;0.9139;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8824;0.8875;0.8824;0.8812;0.942;0.943;0.942;0.9417;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8873;0.8916;0.8873;0.8869;0.971;0.9733;0.971;0.9713;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8794;0.8851;0.8794;0.8788;0.913;0.9138;0.913;0.9123;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9308;0.9334;0.9308;0.931;0.8841;0.8841;0.8841;0.8841;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9131;0.9181;0.9131;0.9133;0.8986;0.9004;0.8986;0.8984;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9178;0.9214;0.9178;0.9171;0.8551;0.8732;0.8551;0.857;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
DecisionTreeClassifier;0.921;0.9252;0.921;0.921;0.942;0.9443;0.942;0.942;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
DecisionTreeClassifier;0.9227;0.9267;0.9227;0.9225;0.8841;0.8887;0.8841;0.882;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
DecisionTreeClassifier;0.9178;0.9234;0.9178;0.9183;0.913;0.9126;0.913;0.9117;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9259;0.932;0.9259;0.9261;0.8986;0.9087;0.8986;0.8986;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9244;0.9286;0.9244;0.9242;0.913;0.9221;0.913;0.9114;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
DecisionTreeClassifier;0.9259;0.9311;0.9259;0.9259;0.8986;0.9047;0.8986;0.8991;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.913;0.9195;0.913;0.9126;0.9275;0.9268;0.9275;0.9269;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
DecisionTreeClassifier;0.9098;0.9147;0.9098;0.9096;0.8841;0.8861;0.8841;0.8831;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
DecisionTreeClassifier;0.9211;0.9241;0.9211;0.9208;0.9275;0.9286;0.9275;0.9271;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9163;0.9189;0.9163;0.916;0.9275;0.9305;0.9275;0.9271;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9275;0.9322;0.9275;0.9274;0.8551;0.8877;0.8551;0.8568;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9243;0.9281;0.9243;0.9243;0.8986;0.899;0.8986;0.8985;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 352};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=352)
DecisionTreeClassifier;0.9292;0.9349;0.9292;0.9292;0.8116;0.8155;0.8116;0.8127;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
MLPClassifier;0.8552;0.8693;0.8552;0.8546;0.8696;0.8821;0.8696;0.8698;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
DecisionTreeClassifier;0.9275;0.9323;0.9275;0.9271;0.9275;0.9317;0.9275;0.9274;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
MLPClassifier;0.8567;0.8695;0.8567;0.8567;0.8116;0.828;0.8116;0.816;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
DecisionTreeClassifier;0.9178;0.9221;0.9178;0.9178;0.8841;0.8939;0.8841;0.8846;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
DecisionTreeClassifier;0.9114;0.917;0.9114;0.9112;0.8696;0.8762;0.8696;0.8694;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
MLPClassifier;0.8422;0.8606;0.8422;0.8417;0.942;0.9443;0.942;0.942;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
DecisionTreeClassifier;0.9163;0.9213;0.9163;0.9165;0.942;0.9448;0.942;0.9426;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
MLPClassifier;0.8567;0.8711;0.8567;0.8573;0.8696;0.8783;0.8696;0.8709;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8567;0.8716;0.8567;0.8573;0.8551;0.8649;0.8551;0.8556;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
DecisionTreeClassifier;0.9227;0.9278;0.9227;0.9231;0.8841;0.8833;0.8841;0.8834;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
DecisionTreeClassifier;0.9243;0.9269;0.9243;0.9242;0.8841;0.8827;0.8841;0.8831;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
DecisionTreeClassifier;0.9212;0.9252;0.9212;0.9216;0.942;0.9448;0.942;0.9426;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
MLPClassifier;0.8519;0.8646;0.8519;0.8514;0.8406;0.8467;0.8406;0.8416;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
DecisionTreeClassifier;0.921;0.9276;0.921;0.9213;0.9275;0.9279;0.9275;0.9269;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
MLPClassifier;0.8615;0.8744;0.8615;0.8617;0.8841;0.8869;0.8841;0.8829;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
DecisionTreeClassifier;0.9147;0.9209;0.9147;0.9147;0.913;0.9238;0.913;0.9138;0.85;0.8524;0.85;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 49};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=49)
RandomForestClassifier;0.9261;0.929;0.9261;0.9258;0.8841;0.8885;0.8841;0.8852;0.85;0.8591;0.85;0.8495;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 188};RandomForestClassifier(n_estimators=20, random_state=188)
RandomForestClassifier;0.9162;0.9225;0.9162;0.9166;0.971;0.9733;0.971;0.9713;0.85;0.855;0.85;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 609};RandomForestClassifier(n_estimators=10, random_state=609)
MLPClassifier;0.8583;0.871;0.8583;0.8587;0.8406;0.8574;0.8406;0.8402;0.85;0.8565;0.85;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
MLPClassifier;0.8534;0.8664;0.8534;0.8526;0.8841;0.8829;0.8841;0.8827;0.85;0.8565;0.85;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
MLPClassifier;0.8519;0.8688;0.8519;0.8517;0.913;0.9127;0.913;0.912;0.85;0.8565;0.85;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
MLPClassifier;0.8535;0.8654;0.8535;0.8539;0.8696;0.8681;0.8696;0.8686;0.85;0.8565;0.85;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
RandomForestClassifier;0.9147;0.9185;0.9147;0.914;0.942;0.9426;0.942;0.942;0.85;0.858;0.85;0.8492;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 188};RandomForestClassifier(n_estimators=20, random_state=188)
SVC;0.8536;0.8679;0.8536;0.8536;0.8841;0.8859;0.8841;0.8832;0.85;0.8533;0.85;0.8491;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
MLPClassifier;0.855;0.8692;0.855;0.856;0.942;0.9461;0.942;0.9419;0.85;0.8524;0.85;0.8488;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
KNeighborsClassifier;0.8872;0.8915;0.8872;0.8862;0.913;0.9266;0.913;0.9102;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8776;0.886;0.8776;0.877;0.913;0.9161;0.913;0.9125;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8891;0.8949;0.8891;0.8876;0.8841;0.8878;0.8841;0.8838;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.884;0.8894;0.884;0.8825;0.8986;0.9144;0.8986;0.8995;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8663;0.8715;0.8663;0.8648;0.8841;0.8904;0.8841;0.881;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8905;0.898;0.8905;0.8892;0.913;0.9145;0.913;0.913;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8728;0.8758;0.8728;0.8715;0.8986;0.9105;0.8986;0.8981;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8679;0.8719;0.8679;0.8669;0.913;0.9221;0.913;0.9114;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8889;0.8918;0.8889;0.8881;0.9275;0.9405;0.9275;0.9289;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8873;0.8945;0.8873;0.8855;0.9275;0.9321;0.9275;0.9272;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8825;0.8877;0.8825;0.8816;0.942;0.9476;0.942;0.9408;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8825;0.8893;0.8825;0.8813;0.9275;0.9347;0.9275;0.9279;0.85;0.8481;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.8519;0.8666;0.8519;0.8511;0.8841;0.8859;0.8841;0.8832;0.85;0.8492;0.85;0.8485;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
SVC;0.8502;0.8645;0.8502;0.8498;0.913;0.9156;0.913;0.9122;0.85;0.8492;0.85;0.8485;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
SVC;0.8598;0.8734;0.8598;0.8599;0.8841;0.8959;0.8841;0.8844;0.85;0.8492;0.85;0.8485;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
RandomForestClassifier;0.9147;0.9228;0.9147;0.9146;0.8986;0.908;0.8986;0.8997;0.85;0.8518;0.85;0.8483;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 651};RandomForestClassifier(n_estimators=10, random_state=651)
RandomForestClassifier;0.9178;0.9222;0.9178;0.9176;0.942;0.947;0.942;0.9418;0.85;0.8518;0.85;0.8483;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 651};RandomForestClassifier(n_estimators=20, random_state=651)
RandomForestClassifier;0.9146;0.9186;0.9146;0.9148;0.9275;0.9348;0.9275;0.9271;0.85;0.8518;0.85;0.8483;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 651};RandomForestClassifier(n_estimators=20, random_state=651)
MLPClassifier;0.8503;0.8617;0.8503;0.8498;0.9275;0.9289;0.9275;0.9261;0.85;0.8528;0.85;0.8482;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.847;0.8629;0.847;0.8472;0.913;0.9136;0.913;0.913;0.85;0.8528;0.85;0.8482;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
RandomForestClassifier;0.9179;0.922;0.9179;0.9176;0.971;0.9722;0.971;0.9707;0.85;0.8528;0.85;0.8482;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 609};RandomForestClassifier(n_estimators=20, random_state=609)
RandomForestClassifier;0.9243;0.9268;0.9243;0.9238;0.913;0.9215;0.913;0.9112;0.85;0.8571;0.85;0.8473;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 651};RandomForestClassifier(n_estimators=10, random_state=651)
SVC;0.8485;0.8614;0.8485;0.8478;0.8986;0.9044;0.8986;0.8993;0.8333;0.8399;0.8333;0.8344;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
SVC;0.8485;0.8617;0.8485;0.8473;0.9275;0.9281;0.9275;0.9275;0.8333;0.8399;0.8333;0.8344;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
RandomForestClassifier;0.9098;0.9129;0.9098;0.9096;0.9275;0.9342;0.9275;0.9282;0.8333;0.8399;0.8333;0.8344;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 609};RandomForestClassifier(n_estimators=20, random_state=609)
MLPClassifier;0.8485;0.8618;0.8485;0.8488;0.8841;0.8859;0.8841;0.8812;0.8333;0.8426;0.8333;0.8341;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
RandomForestClassifier;0.9404;0.9444;0.9404;0.9404;0.8696;0.8727;0.8696;0.8704;0.8333;0.8405;0.8333;0.8338;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 609};RandomForestClassifier(n_estimators=10, random_state=609)
RandomForestClassifier;0.9178;0.9224;0.9178;0.9173;0.942;0.942;0.942;0.9417;0.8333;0.8424;0.8333;0.8336;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 609};RandomForestClassifier(n_estimators=10, random_state=609)
MLPClassifier;0.8567;0.8699;0.8567;0.8571;0.8696;0.8822;0.8696;0.8676;0.8333;0.836;0.8333;0.8335;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
MLPClassifier;0.8599;0.8709;0.8599;0.8593;0.8986;0.9018;0.8986;0.899;0.8333;0.8379;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
RandomForestClassifier;0.9324;0.935;0.9324;0.9324;0.8841;0.8873;0.8841;0.8846;0.8333;0.8354;0.8333;0.833;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 609};RandomForestClassifier(n_estimators=20, random_state=609)
RandomForestClassifier;0.9179;0.925;0.9179;0.9183;0.942;0.9457;0.942;0.9419;0.8333;0.8374;0.8333;0.8328;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 651};RandomForestClassifier(n_estimators=20, random_state=651)
RandomForestClassifier;0.9242;0.9289;0.9242;0.9242;0.8986;0.9159;0.8986;0.8987;0.8333;0.8374;0.8333;0.8328;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 609};RandomForestClassifier(n_estimators=20, random_state=609)
RandomForestClassifier;0.9227;0.9278;0.9227;0.9226;0.9565;0.9615;0.9565;0.9563;0.8333;0.8374;0.8333;0.8328;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 188};RandomForestClassifier(n_estimators=20, random_state=188)
RandomForestClassifier;0.9307;0.9339;0.9307;0.9302;0.8986;0.9052;0.8986;0.8993;0.8333;0.8374;0.8333;0.8328;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 651};RandomForestClassifier(n_estimators=10, random_state=651)
RandomForestClassifier;0.9244;0.9298;0.9244;0.9241;0.9275;0.9348;0.9275;0.9271;0.8333;0.8374;0.8333;0.8328;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 609};RandomForestClassifier(n_estimators=10, random_state=609)
MLPClassifier;0.8439;0.8585;0.8439;0.8439;0.9565;0.9615;0.9565;0.9563;0.8333;0.8437;0.8333;0.8325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
MLPClassifier;0.8551;0.8664;0.8551;0.854;0.8696;0.871;0.8696;0.8694;0.8333;0.8437;0.8333;0.8325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
MLPClassifier;0.8583;0.8692;0.8583;0.8582;0.8116;0.8271;0.8116;0.8078;0.8333;0.8437;0.8333;0.8325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
MLPClassifier;0.855;0.8663;0.855;0.8537;0.7681;0.7776;0.7681;0.7705;0.8333;0.8367;0.8333;0.8324;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
MLPClassifier;0.8632;0.8735;0.8632;0.8639;0.7826;0.813;0.7826;0.784;0.8333;0.8367;0.8333;0.8324;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8567;0.8701;0.8567;0.8573;0.8696;0.875;0.8696;0.8702;0.8333;0.8367;0.8333;0.8324;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
RandomForestClassifier;0.9163;0.9222;0.9163;0.9162;0.942;0.9426;0.942;0.942;0.8333;0.8367;0.8333;0.8324;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 188};RandomForestClassifier(n_estimators=5, random_state=188)
RandomForestClassifier;0.9164;0.9198;0.9164;0.9162;0.942;0.9426;0.942;0.942;0.8333;0.8367;0.8333;0.8324;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 188};RandomForestClassifier(n_estimators=20, random_state=188)
MLPClassifier;0.855;0.8635;0.855;0.8547;0.8986;0.9071;0.8986;0.8988;0.8333;0.8367;0.8333;0.8324;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 906, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=906)
RandomForestClassifier;0.9178;0.9246;0.9178;0.918;0.9275;0.9336;0.9275;0.9286;0.8333;0.8387;0.8333;0.8317;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 651};RandomForestClassifier(n_estimators=5, random_state=651)
MLPClassifier;0.847;0.8624;0.847;0.8468;0.913;0.9151;0.913;0.9129;0.8333;0.8387;0.8333;0.8317;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
SVC;0.8632;0.875;0.8632;0.8624;0.8406;0.8443;0.8406;0.8383;0.8333;0.838;0.8333;0.8317;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
SVC;0.8486;0.861;0.8486;0.8488;0.942;0.9464;0.942;0.9422;0.8333;0.8361;0.8333;0.8315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
RandomForestClassifier;0.9356;0.9387;0.9356;0.9354;0.8986;0.9047;0.8986;0.8991;0.8333;0.8361;0.8333;0.8315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 188};RandomForestClassifier(n_estimators=10, random_state=188)
SVC;0.8615;0.8728;0.8615;0.8611;0.8551;0.8596;0.8551;0.8514;0.8333;0.8361;0.8333;0.8315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
RandomForestClassifier;0.9308;0.9359;0.9308;0.9305;0.8986;0.9014;0.8986;0.8974;0.8333;0.8361;0.8333;0.8315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 188};RandomForestClassifier(n_estimators=20, random_state=188)
SVC;0.8566;0.8699;0.8566;0.8567;0.8406;0.841;0.8406;0.8405;0.8333;0.8338;0.8333;0.8312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
SVC;0.8583;0.8706;0.8583;0.8574;0.8551;0.855;0.8551;0.8531;0.8333;0.8338;0.8333;0.8312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
SVC;0.855;0.8695;0.855;0.8546;0.7971;0.8188;0.7971;0.7887;0.8333;0.8338;0.8333;0.8312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8518;0.864;0.8518;0.8516;0.8986;0.9011;0.8986;0.8977;0.8333;0.8338;0.8333;0.8312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
SVC;0.8503;0.8662;0.8503;0.8502;0.913;0.9156;0.913;0.9122;0.8333;0.8338;0.8333;0.8312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8472;0.8601;0.8472;0.8445;0.9565;0.9582;0.9565;0.9565;0.8333;0.8338;0.8333;0.8312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8518;0.8686;0.8518;0.8504;0.8696;0.8712;0.8696;0.8693;0.8167;0.8285;0.8167;0.8184;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
RandomForestClassifier;0.9291;0.9315;0.9291;0.9285;0.8841;0.8846;0.8841;0.8832;0.8167;0.8287;0.8167;0.8178;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 609};RandomForestClassifier(n_estimators=5, random_state=609)
MLPClassifier;0.8583;0.8685;0.8583;0.858;0.7971;0.8037;0.7971;0.7932;0.8167;0.8304;0.8167;0.8176;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
MLPClassifier;0.8599;0.8711;0.8599;0.8598;0.8696;0.8878;0.8696;0.8715;0.8167;0.8248;0.8167;0.8165;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 1000, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=1000)
SVC;0.8615;0.871;0.8615;0.8611;0.8986;0.9018;0.8986;0.899;0.8167;0.8208;0.8167;0.8161;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
RandomForestClassifier;0.9195;0.9235;0.9195;0.9189;0.9565;0.9615;0.9565;0.9563;0.8167;0.8175;0.8167;0.816;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 188};RandomForestClassifier(n_estimators=5, random_state=188)
RandomForestClassifier;0.9243;0.9283;0.9243;0.924;0.8841;0.8981;0.8841;0.8847;0.8167;0.8172;0.8167;0.8155;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 188};RandomForestClassifier(n_estimators=10, random_state=188)
SVC;0.8582;0.8729;0.8582;0.8583;0.8406;0.8424;0.8406;0.8361;0.8167;0.8252;0.8167;0.8149;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
RandomForestClassifier;0.9147;0.9246;0.9147;0.9149;0.9275;0.9268;0.9275;0.9269;0.8167;0.8252;0.8167;0.8149;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 651};RandomForestClassifier(n_estimators=5, random_state=651)
SVC;0.8551;0.8705;0.8551;0.8549;0.8551;0.8806;0.8551;0.8503;0.8167;0.8252;0.8167;0.8149;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8535;0.8686;0.8535;0.8536;0.913;0.92;0.913;0.9127;0.8167;0.8212;0.8167;0.8146;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.847;0.8632;0.847;0.8461;0.913;0.9188;0.913;0.9124;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
SVC;0.8551;0.8721;0.8551;0.8554;0.8696;0.871;0.8696;0.8694;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
SVC;0.8615;0.8755;0.8615;0.8609;0.8551;0.8597;0.8551;0.853;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
SVC;0.8487;0.8646;0.8487;0.8489;0.9275;0.9279;0.9275;0.9269;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8536;0.8707;0.8536;0.8529;0.8841;0.887;0.8841;0.882;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8534;0.8647;0.8534;0.853;0.8986;0.8981;0.8986;0.8972;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
SVC;0.8502;0.864;0.8502;0.8498;0.913;0.9231;0.913;0.9092;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 493};SVC(C=10, random_state=493)
SVC;0.8551;0.8711;0.8551;0.8554;0.8841;0.9044;0.8841;0.8858;0.8167;0.8194;0.8167;0.8142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8519;0.8682;0.8519;0.8507;0.8696;0.8748;0.8696;0.8691;0.8;0.8064;0.8;0.8007;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, random_state=649)
SVC;0.8502;0.8627;0.8502;0.8498;0.8551;0.8544;0.8551;0.8536;0.7833;0.7854;0.7833;0.783;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 614};SVC(C=10, random_state=614)
LogisticRegression;0.802;0.8344;0.802;0.8036;0.7826;0.7922;0.7826;0.7803;0.7833;0.7815;0.7833;0.7814;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.7955;0.8279;0.7955;0.7961;0.7971;0.8178;0.7971;0.7956;0.7833;0.7815;0.7833;0.7814;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.7874;0.8208;0.7874;0.7908;0.8406;0.8506;0.8406;0.839;0.7667;0.7655;0.7667;0.7657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.805;0.8353;0.805;0.8069;0.7826;0.8099;0.7826;0.7825;0.7667;0.7655;0.7667;0.7657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7923;0.8195;0.7923;0.7944;0.7681;0.7857;0.7681;0.7616;0.7667;0.7655;0.7667;0.7657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7778;0.8076;0.7778;0.7789;0.8116;0.8185;0.8116;0.8128;0.7667;0.7655;0.7667;0.7657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.7922;0.8253;0.7922;0.7935;0.8261;0.8566;0.8261;0.8267;0.7667;0.7655;0.7667;0.7657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.7859;0.8139;0.7859;0.7867;0.7536;0.7834;0.7536;0.7558;0.7667;0.7655;0.7667;0.7657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7809;0.8102;0.7809;0.7831;0.8406;0.8501;0.8406;0.8424;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.7891;0.8171;0.7891;0.7912;0.913;0.9246;0.913;0.9138;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.7988;0.8292;0.7988;0.7986;0.7101;0.7459;0.7101;0.7119;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7891;0.8144;0.7891;0.7906;0.8116;0.8458;0.8116;0.8136;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.8019;0.8315;0.8019;0.8042;0.8406;0.875;0.8406;0.8413;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.7938;0.8216;0.7938;0.7926;0.8551;0.8874;0.8551;0.858;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.7843;0.8214;0.7843;0.7854;0.8551;0.8724;0.8551;0.8501;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.7923;0.8315;0.7923;0.7931;0.7101;0.7281;0.7101;0.7118;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.789;0.8209;0.789;0.7902;0.8696;0.8833;0.8696;0.8718;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.7922;0.8199;0.7922;0.7934;0.8116;0.8305;0.8116;0.8104;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.7843;0.8123;0.7843;0.7861;0.8696;0.8776;0.8696;0.8718;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.8052;0.835;0.8052;0.8069;0.7391;0.7982;0.7391;0.7383;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.8003;0.8203;0.8003;0.8014;0.8116;0.828;0.8116;0.8134;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.789;0.8159;0.789;0.7904;0.8116;0.84;0.8116;0.8112;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.7811;0.8101;0.7811;0.7821;0.7826;0.8148;0.7826;0.7822;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.7938;0.8217;0.7938;0.7926;0.7971;0.8203;0.7971;0.7977;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7875;0.8175;0.7875;0.7892;0.8406;0.8587;0.8406;0.8426;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7922;0.8225;0.7922;0.7916;0.8551;0.8639;0.8551;0.8557;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7923;0.822;0.7923;0.7936;0.8696;0.8796;0.8696;0.868;0.75;0.7487;0.75;0.7484;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 924, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=924)"
LogisticRegression;0.7891;0.8185;0.7891;0.79;0.7971;0.806;0.7971;0.7988;0.7333;0.731;0.7333;0.73;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 792, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=792)"
LogisticRegression;0.794;0.8261;0.794;0.7958;0.7101;0.7322;0.7101;0.7038;0.7333;0.731;0.7333;0.73;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
LogisticRegression;0.8052;0.8359;0.8052;0.8071;0.7826;0.8246;0.7826;0.7837;0.7333;0.731;0.7333;0.73;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 866, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=866)"
