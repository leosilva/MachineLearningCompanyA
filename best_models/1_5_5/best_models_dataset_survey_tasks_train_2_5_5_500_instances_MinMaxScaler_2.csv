Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8209;0.8301;0.8209;0.8224;0.8611;0.8651;0.8611;0.8613;0.9333;0.937;0.9333;0.9341;0.9471;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 548};RandomForestClassifier(n_estimators=20, random_state=548)
RandomForestClassifier;0.8171;0.821;0.8171;0.818;0.8542;0.8552;0.8542;0.85;0.9167;0.9245;0.9167;0.9181;0.9493;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 101};RandomForestClassifier(n_estimators=10, random_state=101)
RandomForestClassifier;0.8364;0.841;0.8364;0.8368;0.7778;0.8002;0.7778;0.7817;0.9167;0.919;0.9167;0.9175;0.952;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 101};RandomForestClassifier(n_estimators=20, random_state=101)
RandomForestClassifier;0.8202;0.8266;0.8202;0.8218;0.8611;0.8733;0.8611;0.8621;0.9167;0.919;0.9167;0.9175;0.9508;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 101};RandomForestClassifier(n_estimators=20, random_state=101)
RandomForestClassifier;0.8264;0.8331;0.8264;0.8275;0.8333;0.8407;0.8333;0.8355;0.9167;0.9212;0.9167;0.9174;0.9512;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 548};RandomForestClassifier(n_estimators=20, random_state=548)
DecisionTreeClassifier;0.8102;0.8205;0.8102;0.8117;0.8681;0.8683;0.8681;0.8681;0.9167;0.9212;0.9167;0.9174;0.9308;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)
RandomForestClassifier;0.8302;0.8364;0.8302;0.8308;0.8125;0.8154;0.8125;0.8116;0.9167;0.9194;0.9167;0.9165;0.9504;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 101};RandomForestClassifier(n_estimators=20, random_state=101)
DecisionTreeClassifier;0.8186;0.8279;0.8186;0.8205;0.8542;0.8564;0.8542;0.8541;0.9;0.9048;0.9;0.9012;0.9349;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
RandomForestClassifier;0.8241;0.8307;0.8241;0.8252;0.8472;0.8718;0.8472;0.8501;0.9;0.9087;0.9;0.9009;0.9501;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 704};RandomForestClassifier(n_estimators=20, random_state=704)
RandomForestClassifier;0.8234;0.8294;0.8234;0.8247;0.8403;0.854;0.8403;0.8427;0.9;0.9087;0.9;0.9009;0.9445;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 101};RandomForestClassifier(n_estimators=5, random_state=101)
RandomForestClassifier;0.8055;0.8123;0.8055;0.8063;0.8542;0.8531;0.8542;0.8535;0.9;0.906;0.9;0.9005;0.9504;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 704};RandomForestClassifier(n_estimators=10, random_state=704)
DecisionTreeClassifier;0.8187;0.8276;0.8187;0.8207;0.8403;0.841;0.8403;0.8392;0.9;0.9019;0.9;0.8999;0.9371;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)
RandomForestClassifier;0.828;0.835;0.828;0.8293;0.8056;0.816;0.8056;0.8073;0.8833;0.8918;0.8833;0.8847;0.9468;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 704};RandomForestClassifier(n_estimators=20, random_state=704)
RandomForestClassifier;0.8287;0.8326;0.8287;0.8294;0.7778;0.7832;0.7778;0.7799;0.8833;0.8868;0.8833;0.884;0.9479;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 548};RandomForestClassifier(n_estimators=10, random_state=548)
DecisionTreeClassifier;0.8287;0.8394;0.8287;0.8306;0.8056;0.816;0.8056;0.8073;0.8833;0.8884;0.8833;0.8834;0.9351;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)
DecisionTreeClassifier;0.8256;0.8361;0.8256;0.8272;0.8403;0.8467;0.8403;0.8422;0.8833;0.886;0.8833;0.8832;0.9365;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
RandomForestClassifier;0.8225;0.8267;0.8225;0.8234;0.8333;0.8314;0.8333;0.8321;0.8833;0.886;0.8833;0.8832;0.9493;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 101};RandomForestClassifier(n_estimators=5, random_state=101)
RandomForestClassifier;0.8287;0.8366;0.8287;0.8302;0.7847;0.8077;0.7847;0.7893;0.8667;0.8775;0.8667;0.8687;0.9484;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 548};RandomForestClassifier(n_estimators=5, random_state=548)
DecisionTreeClassifier;0.8063;0.8187;0.8063;0.808;0.8542;0.8601;0.8542;0.8559;0.8667;0.8759;0.8667;0.8684;0.9322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
DecisionTreeClassifier;0.8217;0.8312;0.8217;0.8234;0.8542;0.8654;0.8542;0.8567;0.8667;0.8759;0.8667;0.8684;0.9356;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
KNeighborsClassifier;0.787;0.7971;0.787;0.7865;0.8542;0.8639;0.8542;0.8556;0.8667;0.8799;0.8667;0.868;0.9158;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7925;0.8027;0.7925;0.7924;0.7986;0.8101;0.7986;0.8014;0.8667;0.8799;0.8667;0.868;0.9224;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.8272;0.838;0.8272;0.8295;0.8194;0.8246;0.8194;0.8208;0.8667;0.869;0.8667;0.8674;0.9367;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
RandomForestClassifier;0.8187;0.8253;0.8187;0.8199;0.8333;0.8526;0.8333;0.8362;0.8667;0.869;0.8667;0.8674;0.9485;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 548};RandomForestClassifier(n_estimators=20, random_state=548)
RandomForestClassifier;0.8241;0.8315;0.8241;0.8258;0.7917;0.7882;0.7917;0.7893;0.8667;0.869;0.8667;0.8674;0.9525;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 548};RandomForestClassifier(n_estimators=10, random_state=548)
DecisionTreeClassifier;0.8272;0.8382;0.8272;0.8286;0.7917;0.7907;0.7917;0.7911;0.8667;0.869;0.8667;0.8674;0.9398;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
RandomForestClassifier;0.804;0.8166;0.804;0.8054;0.8611;0.8633;0.8611;0.8619;0.8667;0.8709;0.8667;0.8673;0.9522;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 704};RandomForestClassifier(n_estimators=10, random_state=704)
RandomForestClassifier;0.8242;0.8299;0.8242;0.8245;0.8403;0.8411;0.8403;0.8406;0.8667;0.8709;0.8667;0.8673;0.9484;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 704};RandomForestClassifier(n_estimators=20, random_state=704)
RandomForestClassifier;0.8232;0.8317;0.8232;0.8247;0.8542;0.8601;0.8542;0.8555;0.8667;0.8709;0.8667;0.8673;0.9492;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 548};RandomForestClassifier(n_estimators=5, random_state=548)
DecisionTreeClassifier;0.8263;0.8339;0.8263;0.8277;0.75;0.7511;0.75;0.7504;0.8667;0.8759;0.8667;0.8668;0.9379;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
DecisionTreeClassifier;0.8256;0.8377;0.8256;0.8279;0.8125;0.8191;0.8125;0.8134;0.8667;0.8664;0.8667;0.8662;0.9366;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
DecisionTreeClassifier;0.8071;0.8127;0.8071;0.8082;0.8889;0.8887;0.8889;0.8879;0.8667;0.8664;0.8667;0.8662;0.9353;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
RandomForestClassifier;0.8226;0.827;0.8226;0.8232;0.8056;0.8123;0.8056;0.8075;0.8667;0.8699;0.8667;0.8659;0.9505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 548};RandomForestClassifier(n_estimators=20, random_state=548)
DecisionTreeClassifier;0.8093;0.8194;0.8093;0.8111;0.8542;0.8534;0.8542;0.8537;0.8667;0.8699;0.8667;0.8659;0.9282;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)
RandomForestClassifier;0.8271;0.8339;0.8271;0.8277;0.7569;0.7678;0.7569;0.757;0.8667;0.8677;0.8667;0.8645;0.9552;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 101};RandomForestClassifier(n_estimators=5, random_state=101)
DecisionTreeClassifier;0.811;0.8231;0.811;0.8132;0.8542;0.8749;0.8542;0.8574;0.85;0.8609;0.85;0.852;0.9303;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
KNeighborsClassifier;0.7879;0.7924;0.7879;0.7879;0.8611;0.869;0.8611;0.8623;0.85;0.8636;0.85;0.8519;0.913;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7963;0.806;0.7963;0.7966;0.7917;0.7941;0.7917;0.792;0.85;0.8557;0.85;0.8514;0.9262;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8164;0.8262;0.8164;0.8183;0.8056;0.8116;0.8056;0.8076;0.85;0.8557;0.85;0.8514;0.9334;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=650)
RandomForestClassifier;0.8195;0.8268;0.8195;0.8206;0.7986;0.807;0.7986;0.801;0.85;0.8574;0.85;0.8513;0.9505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 704};RandomForestClassifier(n_estimators=10, random_state=704)
DecisionTreeClassifier;0.8133;0.8274;0.8133;0.8149;0.8681;0.8715;0.8681;0.869;0.85;0.8545;0.85;0.8511;0.9353;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
DecisionTreeClassifier;0.8179;0.8277;0.8179;0.8197;0.7986;0.8133;0.7986;0.8021;0.85;0.8545;0.85;0.8511;0.9362;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=543)
DecisionTreeClassifier;0.8248;0.8336;0.8248;0.8265;0.7778;0.7786;0.7778;0.7778;0.85;0.8545;0.85;0.8511;0.9404;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
RandomForestClassifier;0.8194;0.8242;0.8194;0.8196;0.8264;0.8427;0.8264;0.8293;0.85;0.8545;0.85;0.8511;0.9502;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 101};RandomForestClassifier(n_estimators=5, random_state=101)
DecisionTreeClassifier;0.8225;0.8293;0.8225;0.824;0.7917;0.8131;0.7917;0.795;0.85;0.8545;0.85;0.8511;0.9381;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)
DecisionTreeClassifier;0.8133;0.8256;0.8133;0.8155;0.8403;0.8436;0.8403;0.8407;0.85;0.8545;0.85;0.8511;0.9329;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)
KNeighborsClassifier;0.8063;0.8132;0.8063;0.8065;0.7917;0.8025;0.7917;0.793;0.85;0.8579;0.85;0.8507;0.9204;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7955;0.8082;0.7955;0.7954;0.8194;0.8325;0.8194;0.822;0.85;0.8579;0.85;0.8507;0.9207;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.7253;0.758;0.7253;0.7258;0.8472;0.8552;0.8472;0.8491;0.85;0.8669;0.85;0.8505;0.8667;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.7345;0.7683;0.7345;0.7351;0.7986;0.8045;0.7986;0.7985;0.85;0.8669;0.85;0.8505;0.87;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.7315;0.7618;0.7315;0.7328;0.7917;0.8027;0.7917;0.7948;0.85;0.8669;0.85;0.8505;0.8672;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.7268;0.7623;0.7268;0.7276;0.8056;0.8104;0.8056;0.8072;0.85;0.8669;0.85;0.8505;0.8659;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.7284;0.7612;0.7284;0.7288;0.7778;0.8021;0.7778;0.7803;0.85;0.8669;0.85;0.8505;0.8678;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
SVC;0.726;0.7599;0.726;0.7273;0.7847;0.8029;0.7847;0.7837;0.85;0.8669;0.85;0.8505;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
SVC;0.723;0.7564;0.723;0.7239;0.875;0.8793;0.875;0.8752;0.85;0.8669;0.85;0.8505;0.8608;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
SVC;0.7276;0.7619;0.7276;0.7277;0.8125;0.8154;0.8125;0.8128;0.85;0.8669;0.85;0.8505;0.8658;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
SVC;0.7245;0.7582;0.7245;0.7242;0.8681;0.8689;0.8681;0.8684;0.85;0.8669;0.85;0.8505;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
SVC;0.7314;0.7628;0.7314;0.7318;0.8264;0.8242;0.8264;0.8247;0.85;0.8669;0.85;0.8505;0.8622;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
SVC;0.723;0.7591;0.723;0.7235;0.8472;0.8488;0.8472;0.8472;0.85;0.8669;0.85;0.8505;0.8642;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
SVC;0.7222;0.7608;0.7222;0.7227;0.8264;0.837;0.8264;0.8287;0.85;0.8671;0.85;0.85;0.8646;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.733;0.7648;0.733;0.7339;0.75;0.7535;0.75;0.7514;0.85;0.8671;0.85;0.85;0.8708;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.7284;0.7606;0.7284;0.7287;0.75;0.772;0.75;0.7514;0.85;0.8671;0.85;0.85;0.8723;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
RandomForestClassifier;0.8171;0.8235;0.8171;0.8184;0.8056;0.8109;0.8056;0.8071;0.85;0.8505;0.85;0.8499;0.9474;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 548};RandomForestClassifier(n_estimators=10, random_state=548)
RandomForestClassifier;0.8202;0.8239;0.8202;0.8206;0.7986;0.8039;0.7986;0.8005;0.85;0.8517;0.85;0.8498;0.9476;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 704};RandomForestClassifier(n_estimators=20, random_state=704)
RandomForestClassifier;0.821;0.8279;0.821;0.8221;0.8056;0.8118;0.8056;0.8075;0.85;0.8517;0.85;0.8498;0.9499;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 704};RandomForestClassifier(n_estimators=10, random_state=704)
DecisionTreeClassifier;0.8094;0.8201;0.8094;0.8111;0.8194;0.8251;0.8194;0.8202;0.85;0.8517;0.85;0.8498;0.9356;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
KNeighborsClassifier;0.8017;0.8081;0.8017;0.8024;0.8333;0.8333;0.8333;0.8308;0.85;0.8565;0.85;0.8493;0.9181;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8156;0.824;0.8156;0.8168;0.8056;0.8047;0.8056;0.804;0.85;0.8524;0.85;0.8488;0.9496;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 704};RandomForestClassifier(n_estimators=10, random_state=704)
KNeighborsClassifier;0.8001;0.8094;0.8001;0.8011;0.7708;0.7788;0.7708;0.7726;0.8333;0.8411;0.8333;0.8346;0.9248;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8202;0.8316;0.8202;0.8218;0.7847;0.7908;0.7847;0.7861;0.8333;0.8355;0.8333;0.8341;0.9357;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
KNeighborsClassifier;0.8102;0.8206;0.8102;0.8106;0.7708;0.7855;0.7708;0.7721;0.8333;0.8458;0.8333;0.8338;0.9243;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.7469;0.7712;0.7469;0.7471;0.875;0.8745;0.875;0.8747;0.8333;0.8432;0.8333;0.8333;0.9089;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
SVC;0.726;0.7602;0.726;0.7279;0.7986;0.8187;0.7986;0.8021;0.8333;0.8432;0.8333;0.8333;0.8685;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
KNeighborsClassifier;0.7948;0.8026;0.7948;0.7948;0.7292;0.7299;0.7292;0.7286;0.8333;0.8432;0.8333;0.8333;0.9176;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7985;0.8029;0.7985;0.7988;0.7778;0.7748;0.7778;0.7751;0.8333;0.8379;0.8333;0.8333;0.9193;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.7245;0.7575;0.7245;0.7247;0.8542;0.8583;0.8542;0.8552;0.8333;0.8432;0.8333;0.8333;0.8672;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
SVC;0.7323;0.7669;0.7323;0.7331;0.7986;0.8062;0.7986;0.801;0.8333;0.8432;0.8333;0.8333;0.8722;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
SVC;0.7269;0.763;0.7269;0.7267;0.7708;0.7736;0.7708;0.7711;0.8333;0.8432;0.8333;0.8333;0.8679;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
SVC;0.726;0.7577;0.726;0.7272;0.8125;0.8222;0.8125;0.8133;0.8333;0.8432;0.8333;0.8333;0.8681;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.7246;0.756;0.7246;0.7262;0.8472;0.8556;0.8472;0.8475;0.8333;0.8432;0.8333;0.8333;0.867;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
SVC;0.7276;0.7636;0.7276;0.7287;0.8264;0.8442;0.8264;0.8302;0.8333;0.8432;0.8333;0.8333;0.8684;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
SVC;0.7308;0.7647;0.7308;0.7321;0.7986;0.8096;0.7986;0.8008;0.8333;0.8432;0.8333;0.8333;0.8712;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
SVC;0.7284;0.7659;0.7284;0.7286;0.75;0.7648;0.75;0.7535;0.8333;0.8432;0.8333;0.8333;0.8704;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
KNeighborsClassifier;0.7978;0.8062;0.7978;0.7978;0.7708;0.7786;0.7708;0.7733;0.8333;0.8379;0.8333;0.8333;0.9138;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.7609;0.7845;0.7609;0.7617;0.7708;0.7686;0.7708;0.769;0.8333;0.8432;0.8333;0.8333;0.9178;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
SVC;0.7284;0.7599;0.7284;0.7297;0.8472;0.85;0.8472;0.8468;0.8333;0.8432;0.8333;0.8333;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
SVC;0.723;0.7566;0.723;0.7237;0.8403;0.8391;0.8403;0.8391;0.8333;0.8432;0.8333;0.8333;0.8681;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
KNeighborsClassifier;0.7972;0.8047;0.7972;0.7975;0.7778;0.7803;0.7778;0.7789;0.8333;0.8379;0.8333;0.8333;0.9197;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.7261;0.7618;0.7261;0.7268;0.7917;0.7908;0.7917;0.791;0.8333;0.8561;0.8333;0.833;0.8667;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
SVC;0.7377;0.7636;0.7377;0.7389;0.7708;0.7862;0.7708;0.7656;0.8333;0.8561;0.8333;0.833;0.8707;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
RandomForestClassifier;0.811;0.8151;0.811;0.812;0.8264;0.8333;0.8264;0.8286;0.8333;0.8322;0.8333;0.8324;0.949;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 101};RandomForestClassifier(n_estimators=5, random_state=101)
SVC;0.7261;0.7566;0.7261;0.7267;0.8125;0.8247;0.8125;0.8152;0.8333;0.8431;0.8333;0.8323;0.8622;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 151};SVC(C=10, probability=True, random_state=151)
DecisionTreeClassifier;0.8078;0.817;0.8078;0.8098;0.8472;0.8444;0.8472;0.8439;0.8333;0.8338;0.8333;0.8322;0.933;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=650)
RandomForestClassifier;0.8302;0.8358;0.8302;0.8309;0.8403;0.8439;0.8403;0.8413;0.8333;0.8338;0.8333;0.8322;0.9495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 101};RandomForestClassifier(n_estimators=5, random_state=101)
RandomForestClassifier;0.8226;0.8264;0.8226;0.8228;0.7639;0.7592;0.7639;0.7573;0.8333;0.8371;0.8333;0.8307;0.9479;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 704};RandomForestClassifier(n_estimators=5, random_state=704)
DecisionTreeClassifier;0.8156;0.8244;0.8156;0.8172;0.8056;0.8227;0.8056;0.8066;0.8167;0.8268;0.8167;0.8185;0.9388;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=543)
KNeighborsClassifier;0.787;0.795;0.787;0.7865;0.7986;0.8016;0.7986;0.7984;0.8167;0.8287;0.8167;0.8178;0.9181;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.7608;0.7786;0.7608;0.7607;0.8125;0.8155;0.8125;0.8135;0.8167;0.8277;0.8167;0.8175;0.9176;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
MLPClassifier;0.7538;0.7752;0.7538;0.7535;0.8542;0.8583;0.8542;0.855;0.8167;0.8277;0.8167;0.8175;0.9114;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
MLPClassifier;0.7576;0.7785;0.7576;0.7571;0.8056;0.8109;0.8056;0.8071;0.8167;0.8277;0.8167;0.8175;0.9146;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.7646;0.7811;0.7646;0.7648;0.8611;0.8681;0.8611;0.8628;0.8167;0.8277;0.8167;0.8175;0.9138;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.7384;0.7622;0.7384;0.7377;0.8819;0.8897;0.8819;0.8837;0.8167;0.8277;0.8167;0.8175;0.9123;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.7615;0.7848;0.7615;0.7613;0.7986;0.8005;0.7986;0.7994;0.8167;0.8277;0.8167;0.8175;0.9183;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.7577;0.7785;0.7577;0.7574;0.7917;0.8033;0.7917;0.7921;0.8167;0.8277;0.8167;0.8175;0.9159;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.757;0.7763;0.757;0.7564;0.8264;0.8265;0.8264;0.8259;0.8167;0.8277;0.8167;0.8175;0.915;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
DecisionTreeClassifier;0.8063;0.8162;0.8063;0.8083;0.8681;0.8725;0.8681;0.869;0.8167;0.8277;0.8167;0.8175;0.9329;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=597)
MLPClassifier;0.7639;0.7836;0.7639;0.7632;0.7917;0.7983;0.7917;0.794;0.8167;0.8201;0.8167;0.8173;0.9151;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
KNeighborsClassifier;0.7993;0.8093;0.7993;0.8;0.7708;0.788;0.7708;0.7732;0.8167;0.8205;0.8167;0.8172;0.9199;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.7508;0.7707;0.7508;0.7507;0.8056;0.8112;0.8056;0.807;0.8167;0.8205;0.8167;0.8172;0.9161;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
KNeighborsClassifier;0.7831;0.7927;0.7831;0.7827;0.7917;0.8146;0.7917;0.7926;0.8167;0.8406;0.8167;0.8171;0.9111;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
DecisionTreeClassifier;0.8179;0.8251;0.8179;0.8194;0.8056;0.8131;0.8056;0.8074;0.8167;0.8167;0.8167;0.8167;0.9409;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=650)
MLPClassifier;0.7438;0.764;0.7438;0.7428;0.8403;0.8383;0.8403;0.8389;0.8167;0.8215;0.8167;0.8165;0.9134;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
MLPClassifier;0.767;0.786;0.767;0.7666;0.8125;0.8145;0.8125;0.8128;0.8167;0.8215;0.8167;0.8165;0.9189;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
KNeighborsClassifier;0.8002;0.8121;0.8002;0.8009;0.7778;0.774;0.7778;0.7725;0.8167;0.8248;0.8167;0.8165;0.9193;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.7477;0.7731;0.7477;0.748;0.8819;0.8812;0.8819;0.8815;0.8167;0.8215;0.8167;0.8165;0.9115;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
SVC;0.7299;0.7625;0.7299;0.7306;0.7778;0.7976;0.7778;0.7798;0.8167;0.8215;0.8167;0.8165;0.8694;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 955};SVC(C=10, probability=True, random_state=955)
RandomForestClassifier;0.8101;0.8166;0.8101;0.8112;0.8056;0.804;0.8056;0.8034;0.8167;0.8187;0.8167;0.8163;0.9464;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 548};RandomForestClassifier(n_estimators=5, random_state=548)
SVC;0.7376;0.7717;0.7376;0.7388;0.7569;0.7574;0.7569;0.7565;0.8167;0.8208;0.8167;0.8161;0.8718;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 926};SVC(C=10, probability=True, random_state=926)
MLPClassifier;0.7499;0.7718;0.7499;0.7492;0.8403;0.8404;0.8403;0.8398;0.8167;0.8217;0.8167;0.816;0.9112;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
KNeighborsClassifier;0.7894;0.797;0.7894;0.7889;0.8194;0.8211;0.8194;0.8197;0.8167;0.831;0.8167;0.8158;0.9155;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
DecisionTreeClassifier;0.8171;0.8283;0.8171;0.8192;0.7986;0.797;0.7986;0.7966;0.8167;0.8193;0.8167;0.8157;0.9326;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=597)
MLPClassifier;0.7707;0.7893;0.7707;0.7709;0.8056;0.8326;0.8056;0.8097;0.8;0.8128;0.8;0.8015;0.9153;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
MLPClassifier;0.7546;0.7798;0.7546;0.7545;0.7986;0.8081;0.7986;0.8008;0.8;0.8128;0.8;0.8015;0.9172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
DecisionTreeClassifier;0.8171;0.8285;0.8171;0.8196;0.7986;0.8062;0.7986;0.7998;0.8;0.8128;0.8;0.8015;0.9339;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 543};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=543)
MLPClassifier;0.753;0.7762;0.753;0.7527;0.8819;0.8812;0.8819;0.881;0.8;0.8057;0.8;0.8003;0.915;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.7654;0.7869;0.7654;0.7656;0.8125;0.8231;0.8125;0.8152;0.8;0.8057;0.8;0.8003;0.9184;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.7469;0.7731;0.7469;0.7462;0.7917;0.7947;0.7917;0.7926;0.8;0.8057;0.8;0.8003;0.9154;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.7523;0.7766;0.7523;0.7526;0.8403;0.8469;0.8403;0.8421;0.8;0.8057;0.8;0.8003;0.9144;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
MLPClassifier;0.7492;0.7688;0.7492;0.7493;0.8125;0.825;0.8125;0.8149;0.8;0.8057;0.8;0.8003;0.9131;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
MLPClassifier;0.7477;0.7721;0.7477;0.7471;0.8333;0.841;0.8333;0.8347;0.8;0.8057;0.8;0.8003;0.9138;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
MLPClassifier;0.7454;0.7704;0.7454;0.7452;0.8403;0.8445;0.8403;0.8405;0.8;0.8057;0.8;0.8003;0.9114;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
MLPClassifier;0.7561;0.7784;0.7561;0.7554;0.8125;0.8187;0.8125;0.8144;0.8;0.8057;0.8;0.8003;0.9166;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 403, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=403)
KNeighborsClassifier;0.7816;0.7962;0.7816;0.7823;0.7917;0.7918;0.7917;0.791;0.8;0.8151;0.8;0.8001;0.9179;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.7886;0.7962;0.7886;0.7884;0.7917;0.8066;0.7917;0.7933;0.8;0.8151;0.8;0.8001;0.924;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8086;0.8174;0.8086;0.8089;0.8056;0.8138;0.8056;0.8057;0.8;0.8151;0.8;0.8001;0.9209;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8024;0.8122;0.8024;0.8026;0.7778;0.7932;0.7778;0.7804;0.8;0.8014;0.8;0.7998;0.9239;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7878;0.7953;0.7878;0.789;0.7986;0.7975;0.7986;0.7976;0.8;0.8014;0.8;0.7998;0.9137;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8017;0.8094;0.8017;0.8023;0.7569;0.7916;0.7569;0.7591;0.8;0.8309;0.8;0.7991;0.9242;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.7638;0.7784;0.7638;0.7638;0.8333;0.8339;0.8333;0.8332;0.8;0.802;0.8;0.798;0.9156;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7832;0.7915;0.7832;0.7843;0.7639;0.7886;0.7639;0.7624;0.8;0.8087;0.8;0.7968;0.9087;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
DecisionTreeClassifier;0.8195;0.8299;0.8195;0.8217;0.75;0.7711;0.75;0.7541;0.8;0.7991;0.8;0.7966;0.9287;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 650};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=650)
MLPClassifier;0.7578;0.7806;0.7578;0.7572;0.8542;0.8614;0.8542;0.8557;0.7833;0.7905;0.7833;0.7844;0.9175;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
KNeighborsClassifier;0.7964;0.8017;0.7964;0.7963;0.8264;0.8249;0.8264;0.8247;0.7833;0.8012;0.7833;0.7844;0.9216;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.7554;0.7797;0.7554;0.7552;0.7917;0.7919;0.7917;0.7917;0.7833;0.7857;0.7833;0.7835;0.9152;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
MLPClassifier;0.7592;0.7846;0.7592;0.7599;0.7847;0.7827;0.7847;0.7835;0.7833;0.7857;0.7833;0.7835;0.915;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
KNeighborsClassifier;0.7885;0.8033;0.7885;0.7884;0.7986;0.8008;0.7986;0.7989;0.7833;0.792;0.7833;0.783;0.9154;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
DecisionTreeClassifier;0.824;0.8359;0.824;0.8252;0.7847;0.8091;0.7847;0.7852;0.7833;0.8032;0.7833;0.7823;0.9399;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 597};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=597)
KNeighborsClassifier;0.8102;0.8186;0.8102;0.8111;0.7292;0.7637;0.7292;0.729;0.7833;0.8023;0.7833;0.782;0.9215;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.7948;0.8018;0.7948;0.7957;0.7986;0.806;0.7986;0.8012;0.7667;0.7761;0.7667;0.7667;0.9207;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.7523;0.7789;0.7523;0.7521;0.8333;0.8353;0.8333;0.8339;0.7667;0.7671;0.7667;0.7666;0.9125;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 202, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=202)
LogisticRegression;0.6797;0.7022;0.6797;0.6796;0.6944;0.7049;0.6944;0.6942;0.7;0.7012;0.7;0.7003;0.8322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6752;0.6999;0.6752;0.6751;0.7639;0.7739;0.7639;0.7665;0.6833;0.6852;0.6833;0.6834;0.8232;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6914;0.7137;0.6914;0.6924;0.625;0.6415;0.625;0.6254;0.6833;0.6852;0.6833;0.6834;0.8324;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6914;0.7146;0.6914;0.6909;0.625;0.6359;0.625;0.6249;0.6833;0.6852;0.6833;0.6834;0.8361;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6906;0.7119;0.6906;0.6905;0.6597;0.6861;0.6597;0.6608;0.6833;0.6852;0.6833;0.6834;0.8317;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6937;0.7144;0.6937;0.6938;0.6667;0.7041;0.6667;0.6683;0.6833;0.6852;0.6833;0.6834;0.8336;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6782;0.6965;0.6782;0.6786;0.7361;0.7835;0.7361;0.7345;0.6833;0.6852;0.6833;0.6834;0.8293;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6821;0.7085;0.6821;0.6827;0.6944;0.7156;0.6944;0.6956;0.6833;0.6852;0.6833;0.6834;0.8306;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6782;0.7004;0.6782;0.6789;0.7361;0.7471;0.7361;0.7317;0.6833;0.6852;0.6833;0.6834;0.8314;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6891;0.7129;0.6891;0.6895;0.6736;0.6823;0.6736;0.6745;0.6833;0.6852;0.6833;0.6834;0.8308;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6868;0.7109;0.6868;0.6886;0.6667;0.6933;0.6667;0.6628;0.6833;0.6852;0.6833;0.6834;0.8355;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6814;0.7043;0.6814;0.6809;0.6875;0.7065;0.6875;0.6901;0.6833;0.6852;0.6833;0.6834;0.8293;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6836;0.7073;0.6836;0.6838;0.6875;0.7142;0.6875;0.6898;0.6833;0.6852;0.6833;0.6834;0.8282;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6898;0.7112;0.6898;0.6901;0.6667;0.6915;0.6667;0.6684;0.6833;0.6852;0.6833;0.6834;0.8314;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6829;0.705;0.6829;0.684;0.7014;0.7245;0.7014;0.7034;0.6833;0.6852;0.6833;0.6834;0.8294;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6813;0.7061;0.6813;0.6819;0.6944;0.6984;0.6944;0.6934;0.6833;0.6852;0.6833;0.6834;0.8265;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6883;0.7086;0.6883;0.6888;0.5972;0.6163;0.5972;0.6005;0.6833;0.6852;0.6833;0.6834;0.8353;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6882;0.7085;0.6882;0.6882;0.6389;0.6689;0.6389;0.6404;0.6833;0.6852;0.6833;0.6834;0.8355;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6775;0.6992;0.6775;0.6775;0.75;0.7842;0.75;0.7495;0.6833;0.6852;0.6833;0.6834;0.8287;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6805;0.7004;0.6805;0.681;0.6736;0.6994;0.6736;0.6708;0.6833;0.6852;0.6833;0.6834;0.8335;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6821;0.7048;0.6821;0.6837;0.6875;0.699;0.6875;0.6858;0.6833;0.6852;0.6833;0.6834;0.8327;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6852;0.7061;0.6852;0.6858;0.7014;0.7199;0.7014;0.7004;0.6833;0.6852;0.6833;0.6834;0.8312;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.679;0.7005;0.679;0.6789;0.7361;0.7523;0.7361;0.7383;0.6833;0.6852;0.6833;0.6834;0.8284;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 297, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=297)"
LogisticRegression;0.6914;0.7109;0.6914;0.6918;0.625;0.6586;0.625;0.6265;0.6833;0.6852;0.6833;0.6834;0.8351;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6891;0.7116;0.6891;0.6892;0.625;0.6505;0.625;0.6285;0.6833;0.6852;0.6833;0.6834;0.8342;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6852;0.709;0.6852;0.6854;0.6736;0.6849;0.6736;0.675;0.6833;0.6852;0.6833;0.6834;0.8303;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.6775;0.6997;0.6775;0.6772;0.75;0.7696;0.75;0.7523;0.6833;0.6852;0.6833;0.6834;0.8235;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.686;0.7085;0.686;0.6865;0.6667;0.6817;0.6667;0.6675;0.6833;0.6852;0.6833;0.6834;0.8355;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
LogisticRegression;0.679;0.6998;0.679;0.679;0.6875;0.7105;0.6875;0.6876;0.6667;0.6695;0.6667;0.667;0.8316;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 171, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=171)"
LogisticRegression;0.6868;0.7102;0.6868;0.6881;0.6528;0.6851;0.6528;0.6532;0.6667;0.6695;0.6667;0.667;0.83;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
