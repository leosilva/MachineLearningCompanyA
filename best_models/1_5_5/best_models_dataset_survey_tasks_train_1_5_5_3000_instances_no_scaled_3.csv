Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9287;0.93;0.9287;0.9286;0.9418;0.9435;0.9418;0.942;0.9;0.9074;0.9;0.8995;0.9807;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.9334;0.9348;0.9334;0.9332;0.9284;0.9344;0.9284;0.9291;0.8833;0.8875;0.8833;0.884;0.9903;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 569, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=569)
KNeighborsClassifier;0.927;0.9278;0.927;0.927;0.9362;0.9383;0.9362;0.9364;0.8833;0.8952;0.8833;0.8828;0.9779;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9218;0.9235;0.9218;0.922;0.943;0.9429;0.943;0.9429;0.8667;0.8774;0.8667;0.8647;0.9816;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9417;0.9435;0.9417;0.9418;0.9374;0.9385;0.9374;0.9372;0.85;0.8634;0.85;0.8505;0.9934;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 853};RandomForestClassifier(n_estimators=20, random_state=853)
RandomForestClassifier;0.941;0.9426;0.941;0.941;0.9463;0.948;0.9463;0.9461;0.85;0.8554;0.85;0.8504;0.9925;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 941};RandomForestClassifier(n_estimators=10, random_state=941)
RandomForestClassifier;0.9409;0.943;0.9409;0.9408;0.9396;0.9411;0.9396;0.9396;0.8333;0.8426;0.8333;0.8341;0.9926;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 339};RandomForestClassifier(n_estimators=20, random_state=339)
DecisionTreeClassifier;0.9397;0.9423;0.9397;0.9399;0.9446;0.9474;0.9446;0.9449;0.8333;0.8365;0.8333;0.8339;0.9926;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 644};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=644)
DecisionTreeClassifier;0.9427;0.945;0.9427;0.9428;0.9418;0.9433;0.9418;0.9419;0.8333;0.8372;0.8333;0.8339;0.9923;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 887};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=887)
SVC;0.7115;0.7766;0.7115;0.6921;0.8781;0.8922;0.8781;0.8791;0.8167;0.8333;0.8167;0.819;0.861;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
DecisionTreeClassifier;0.9431;0.9454;0.9431;0.943;0.9424;0.9448;0.9424;0.9425;0.8167;0.8234;0.8167;0.8178;0.9932;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 77};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=77)
MLPClassifier;0.932;0.9337;0.932;0.9321;0.9346;0.9363;0.9346;0.9343;0.8167;0.8248;0.8167;0.8165;0.9904;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.9248;0.9277;0.9248;0.925;0.9256;0.9269;0.9256;0.9249;0.8167;0.8296;0.8167;0.8156;0.9893;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 885, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=885)
SVC;0.7205;0.7838;0.7205;0.703;0.8518;0.8727;0.8518;0.8534;0.8;0.8233;0.8;0.8024;0.8675;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 576};SVC(C=10, probability=True, random_state=576)
SVC;0.7142;0.7774;0.7142;0.6941;0.877;0.8945;0.877;0.8781;0.8;0.8233;0.8;0.8024;0.864;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 664};SVC(C=10, probability=True, random_state=664)
LogisticRegression;0.8297;0.8402;0.8297;0.8315;0.8166;0.8286;0.8166;0.8187;0.8;0.7997;0.8;0.7995;0.9316;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.8248;0.8364;0.8248;0.8273;0.8149;0.8234;0.8149;0.8169;0.8;0.7997;0.8;0.7995;0.93;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.8209;0.8329;0.8209;0.8236;0.8031;0.8185;0.8031;0.8067;0.7833;0.783;0.7833;0.7828;0.9306;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
