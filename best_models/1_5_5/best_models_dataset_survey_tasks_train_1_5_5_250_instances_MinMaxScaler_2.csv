Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8326;0.8381;0.8326;0.832;0.913;0.9156;0.913;0.9122;0.8667;0.8746;0.8667;0.8674;0.9612;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 235};RandomForestClassifier(n_estimators=10, random_state=235)
KNeighborsClassifier;0.818;0.8302;0.818;0.8158;0.7971;0.8069;0.7971;0.7912;0.8667;0.8785;0.8667;0.8673;0.933;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
KNeighborsClassifier;0.8228;0.8365;0.8228;0.8209;0.7971;0.803;0.7971;0.7969;0.8667;0.8681;0.8667;0.867;0.9448;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7955;0.8194;0.7955;0.794;0.7971;0.8066;0.7971;0.7964;0.8667;0.888;0.8667;0.8662;0.9232;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
MLPClassifier;0.7921;0.813;0.7921;0.7908;0.8696;0.8736;0.8696;0.8691;0.8667;0.8699;0.8667;0.8659;0.9142;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8004;0.822;0.8004;0.7984;0.8551;0.8591;0.8551;0.8546;0.8667;0.8699;0.8667;0.8659;0.9185;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.7971;0.8149;0.7971;0.7961;0.8261;0.8277;0.8261;0.8251;0.8667;0.8699;0.8667;0.8659;0.9188;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.7875;0.8083;0.7875;0.7855;0.8406;0.8623;0.8406;0.8395;0.8667;0.8774;0.8667;0.8647;0.9189;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.7971;0.8175;0.7971;0.7956;0.8696;0.8794;0.8696;0.8697;0.8667;0.8774;0.8667;0.8647;0.9139;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
RandomForestClassifier;0.8599;0.8655;0.8599;0.8579;0.8116;0.8191;0.8116;0.8086;0.85;0.8541;0.85;0.851;0.9681;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 235};RandomForestClassifier(n_estimators=20, random_state=235)
RandomForestClassifier;0.8502;0.8554;0.8502;0.8497;0.8841;0.8883;0.8841;0.8841;0.85;0.8541;0.85;0.851;0.9623;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 972};RandomForestClassifier(n_estimators=20, random_state=972)
RandomForestClassifier;0.839;0.8469;0.839;0.8371;0.8841;0.8841;0.8841;0.8841;0.85;0.8541;0.85;0.851;0.9581;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 235};RandomForestClassifier(n_estimators=20, random_state=235)
KNeighborsClassifier;0.8149;0.8223;0.8149;0.8127;0.8406;0.8425;0.8406;0.8404;0.85;0.8514;0.85;0.8504;0.9316;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8568;0.8625;0.8568;0.8552;0.8551;0.8564;0.8551;0.8539;0.85;0.8514;0.85;0.8504;0.9659;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 235};RandomForestClassifier(n_estimators=20, random_state=235)
MLPClassifier;0.8069;0.8314;0.8069;0.8058;0.7826;0.7906;0.7826;0.7827;0.85;0.8554;0.85;0.8504;0.9222;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
KNeighborsClassifier;0.8292;0.8345;0.8292;0.8282;0.7826;0.7945;0.7826;0.7778;0.85;0.8514;0.85;0.8504;0.9318;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8199;0.8263;0.8199;0.8192;0.8841;0.8966;0.8841;0.8839;0.85;0.8514;0.85;0.8504;0.927;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8147;0.8221;0.8147;0.8122;0.8986;0.9105;0.8986;0.8981;0.85;0.8514;0.85;0.8504;0.9293;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8083;0.8193;0.8083;0.8062;0.8696;0.8708;0.8696;0.8683;0.85;0.8514;0.85;0.8504;0.94;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7956;0.8228;0.7956;0.7944;0.8116;0.8273;0.8116;0.8111;0.85;0.8641;0.85;0.8499;0.9201;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
MLPClassifier;0.7971;0.8162;0.7971;0.7946;0.8406;0.8463;0.8406;0.8398;0.85;0.8641;0.85;0.8499;0.9169;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
KNeighborsClassifier;0.8068;0.8124;0.8068;0.8039;0.8551;0.8555;0.8551;0.855;0.85;0.8517;0.85;0.8498;0.9336;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8309;0.832;0.8309;0.8302;0.8406;0.8457;0.8406;0.835;0.85;0.8517;0.85;0.8498;0.9325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8211;0.8262;0.8211;0.8197;0.8841;0.8891;0.8841;0.8829;0.85;0.8524;0.85;0.8497;0.9353;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.7923;0.8202;0.7923;0.7889;0.8261;0.8397;0.8261;0.8244;0.85;0.8563;0.85;0.8487;0.8983;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
MLPClassifier;0.7972;0.8205;0.7972;0.7964;0.8261;0.8277;0.8261;0.8234;0.85;0.8563;0.85;0.8487;0.9164;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
RandomForestClassifier;0.8582;0.8638;0.8582;0.859;0.7826;0.8021;0.7826;0.783;0.8333;0.85;0.8333;0.8357;0.9645;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 303};RandomForestClassifier(n_estimators=20, random_state=303)
RandomForestClassifier;0.8534;0.8603;0.8534;0.8526;0.8696;0.875;0.8696;0.8702;0.8333;0.85;0.8333;0.8357;0.9621;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 972};RandomForestClassifier(n_estimators=20, random_state=972)
RandomForestClassifier;0.8486;0.8527;0.8486;0.8483;0.8261;0.8418;0.8261;0.8286;0.8333;0.85;0.8333;0.8357;0.9634;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 235};RandomForestClassifier(n_estimators=10, random_state=235)
RandomForestClassifier;0.8438;0.8486;0.8438;0.8417;0.8696;0.8831;0.8696;0.8707;0.8333;0.8409;0.8333;0.8349;0.9652;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 972};RandomForestClassifier(n_estimators=20, random_state=972)
RandomForestClassifier;0.8567;0.8622;0.8567;0.8557;0.8551;0.8578;0.8551;0.8544;0.8333;0.8409;0.8333;0.8349;0.9699;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 972};RandomForestClassifier(n_estimators=20, random_state=972)
RandomForestClassifier;0.8342;0.8414;0.8342;0.8338;0.8696;0.8754;0.8696;0.8676;0.8333;0.8426;0.8333;0.8341;0.9669;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 972};RandomForestClassifier(n_estimators=10, random_state=972)
DecisionTreeClassifier;0.8373;0.8466;0.8373;0.8363;0.7826;0.8037;0.7826;0.7791;0.8333;0.8372;0.8333;0.8339;0.9362;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
DecisionTreeClassifier;0.8261;0.8319;0.8261;0.8249;0.8406;0.8443;0.8406;0.8391;0.8333;0.8372;0.8333;0.8339;0.9367;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
KNeighborsClassifier;0.8212;0.83;0.8212;0.819;0.8696;0.8714;0.8696;0.8694;0.8333;0.8372;0.8333;0.8339;0.9304;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8309;0.8341;0.8309;0.8301;0.8406;0.8421;0.8406;0.8396;0.8333;0.8372;0.8333;0.8339;0.9282;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
DecisionTreeClassifier;0.8229;0.8349;0.8229;0.8221;0.7971;0.7988;0.7971;0.7972;0.8333;0.8372;0.8333;0.8339;0.9342;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
KNeighborsClassifier;0.8294;0.8346;0.8294;0.8279;0.7246;0.7438;0.7246;0.7227;0.8333;0.8372;0.8333;0.8339;0.9425;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8004;0.8208;0.8004;0.7991;0.7681;0.7755;0.7681;0.7688;0.8333;0.8348;0.8333;0.8337;0.9237;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
MLPClassifier;0.7923;0.8143;0.7923;0.7898;0.8986;0.9036;0.8986;0.8975;0.8333;0.8348;0.8333;0.8337;0.919;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.7988;0.8242;0.7988;0.7973;0.8841;0.8873;0.8841;0.8846;0.8333;0.836;0.8333;0.8335;0.9203;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
KNeighborsClassifier;0.8196;0.8254;0.8196;0.8189;0.7826;0.795;0.7826;0.7777;0.8333;0.836;0.8333;0.8335;0.9368;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8019;0.8126;0.8019;0.8003;0.7971;0.8215;0.7971;0.7853;0.8333;0.836;0.8333;0.8335;0.9375;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.8406;0.8456;0.8406;0.8407;0.8696;0.8696;0.8696;0.8696;0.8333;0.836;0.8333;0.8335;0.9574;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 303};RandomForestClassifier(n_estimators=5, random_state=303)
KNeighborsClassifier;0.8211;0.8293;0.8211;0.8182;0.7971;0.8063;0.7971;0.7974;0.8333;0.836;0.8333;0.8335;0.9362;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8182;0.8275;0.8182;0.8158;0.8406;0.8413;0.8406;0.8401;0.8333;0.836;0.8333;0.8335;0.929;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.818;0.8255;0.818;0.8171;0.8696;0.871;0.8696;0.8694;0.8333;0.836;0.8333;0.8335;0.9327;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8099;0.8172;0.8099;0.8084;0.7971;0.8084;0.7971;0.7909;0.8333;0.8339;0.8333;0.8333;0.927;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.8261;0.8339;0.8261;0.8251;0.7101;0.7395;0.7101;0.7084;0.8333;0.8339;0.8333;0.8333;0.9324;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=668)
MLPClassifier;0.8003;0.8218;0.8003;0.7969;0.8116;0.8106;0.8116;0.8092;0.8333;0.8379;0.8333;0.8333;0.9219;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
DecisionTreeClassifier;0.8438;0.8491;0.8438;0.8435;0.8261;0.8471;0.8261;0.8273;0.8333;0.8357;0.8333;0.8331;0.9458;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=614)
DecisionTreeClassifier;0.8165;0.8276;0.8165;0.8144;0.8696;0.8758;0.8696;0.869;0.8333;0.8357;0.8333;0.8331;0.9368;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
DecisionTreeClassifier;0.8583;0.8694;0.8583;0.8575;0.8261;0.8273;0.8261;0.8259;0.8333;0.8357;0.8333;0.8331;0.9493;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.8261;0.8284;0.8261;0.8249;0.8986;0.8996;0.8986;0.8988;0.8333;0.8357;0.8333;0.8331;0.9369;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
KNeighborsClassifier;0.8277;0.8387;0.8277;0.8265;0.8406;0.8462;0.8406;0.8423;0.8333;0.8529;0.8333;0.8326;0.9375;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8245;0.8327;0.8245;0.8228;0.7826;0.7872;0.7826;0.7831;0.8333;0.8529;0.8333;0.8326;0.9325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.7955;0.8225;0.7955;0.7929;0.8116;0.8426;0.8116;0.8118;0.8333;0.8529;0.8333;0.8326;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7906;0.8193;0.7906;0.7895;0.7971;0.8269;0.7971;0.7962;0.8333;0.8529;0.8333;0.8326;0.8976;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
MLPClassifier;0.802;0.8216;0.802;0.8013;0.8116;0.8414;0.8116;0.8102;0.8333;0.8437;0.8333;0.8325;0.9147;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
SVC;0.7939;0.8219;0.7939;0.7914;0.8261;0.8432;0.8261;0.8221;0.8333;0.8432;0.8333;0.8313;0.8998;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7908;0.8204;0.7908;0.7902;0.8116;0.8413;0.8116;0.8125;0.8333;0.8432;0.8333;0.8313;0.8964;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
SVC;0.8051;0.8281;0.8051;0.8032;0.7246;0.7587;0.7246;0.7227;0.8333;0.8432;0.8333;0.8313;0.9042;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.8052;0.8289;0.8052;0.8031;0.7681;0.7972;0.7681;0.7667;0.8333;0.8432;0.8333;0.8313;0.9032;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
SVC;0.7857;0.8106;0.7857;0.7829;0.8406;0.8683;0.8406;0.8336;0.8333;0.8432;0.8333;0.8313;0.8996;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
MLPClassifier;0.8053;0.8286;0.8053;0.8027;0.8406;0.8504;0.8406;0.84;0.8333;0.8432;0.8333;0.8313;0.913;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
MLPClassifier;0.7956;0.818;0.7956;0.7942;0.8116;0.8292;0.8116;0.8087;0.8333;0.8432;0.8333;0.8313;0.9157;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
MLPClassifier;0.8019;0.823;0.8019;0.8008;0.8116;0.8313;0.8116;0.8064;0.8333;0.8432;0.8333;0.8313;0.919;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
SVC;0.7747;0.8067;0.7747;0.7713;0.8986;0.9079;0.8986;0.8983;0.8333;0.8432;0.8333;0.8313;0.8949;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
SVC;0.7955;0.8208;0.7955;0.7926;0.8261;0.8526;0.8261;0.8234;0.8333;0.8432;0.8333;0.8313;0.9024;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
SVC;0.7892;0.8189;0.7892;0.786;0.7971;0.8177;0.7971;0.7987;0.8333;0.8432;0.8333;0.8313;0.9018;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7924;0.8191;0.7924;0.79;0.8406;0.8669;0.8406;0.8328;0.8333;0.8432;0.8333;0.8313;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7875;0.8138;0.7875;0.7855;0.8116;0.8414;0.8116;0.8102;0.8333;0.8432;0.8333;0.8313;0.8968;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
SVC;0.8004;0.8304;0.8004;0.7979;0.7826;0.7989;0.7826;0.7832;0.8333;0.8432;0.8333;0.8313;0.8996;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
SVC;0.7891;0.8191;0.7891;0.7853;0.7971;0.8349;0.7971;0.7954;0.8333;0.8432;0.8333;0.8313;0.8997;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7955;0.8236;0.7955;0.7947;0.8116;0.8375;0.8116;0.8071;0.8333;0.8432;0.8333;0.8313;0.8995;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
SVC;0.7971;0.8231;0.7971;0.7932;0.7971;0.8246;0.7971;0.7978;0.8333;0.8432;0.8333;0.8313;0.9029;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
SVC;0.7874;0.8145;0.7874;0.7858;0.8551;0.8663;0.8551;0.8522;0.8333;0.8432;0.8333;0.8313;0.8959;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7891;0.814;0.7891;0.7882;0.7826;0.8214;0.7826;0.776;0.8333;0.8432;0.8333;0.8313;0.8946;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
SVC;0.7939;0.8211;0.7939;0.7923;0.8696;0.8919;0.8696;0.8689;0.8333;0.8432;0.8333;0.8313;0.8946;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
SVC;0.7843;0.8161;0.7843;0.7806;0.8406;0.8483;0.8406;0.8399;0.8333;0.8389;0.8333;0.8305;0.8976;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
MLPClassifier;0.7923;0.8204;0.7923;0.7905;0.8261;0.8303;0.8261;0.8271;0.8167;0.8285;0.8167;0.8184;0.9156;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
RandomForestClassifier;0.8519;0.8555;0.8519;0.8515;0.8261;0.8324;0.8261;0.8256;0.8167;0.8214;0.8167;0.8181;0.9646;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 303};RandomForestClassifier(n_estimators=20, random_state=303)
DecisionTreeClassifier;0.8358;0.8397;0.8358;0.8345;0.8986;0.9065;0.8986;0.899;0.8167;0.8234;0.8167;0.8178;0.9383;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
DecisionTreeClassifier;0.8438;0.8462;0.8438;0.8432;0.8116;0.8194;0.8116;0.81;0.8167;0.8234;0.8167;0.8178;0.9438;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
RandomForestClassifier;0.8439;0.8523;0.8439;0.8424;0.8841;0.8932;0.8841;0.8846;0.8167;0.8234;0.8167;0.8178;0.961;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 303};RandomForestClassifier(n_estimators=20, random_state=303)
MLPClassifier;0.794;0.8188;0.794;0.7926;0.8551;0.8596;0.8551;0.8514;0.8167;0.8304;0.8167;0.8176;0.918;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
RandomForestClassifier;0.8423;0.8485;0.8423;0.8422;0.8551;0.8564;0.8551;0.8539;0.8167;0.8304;0.8167;0.8176;0.96;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 972};RandomForestClassifier(n_estimators=20, random_state=972)
MLPClassifier;0.7972;0.8152;0.7972;0.7947;0.7826;0.7909;0.7826;0.7784;0.8167;0.8189;0.8167;0.8174;0.9224;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
RandomForestClassifier;0.8437;0.8465;0.8437;0.8431;0.8841;0.8841;0.8841;0.8841;0.8167;0.8201;0.8167;0.8173;0.965;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 972};RandomForestClassifier(n_estimators=10, random_state=972)
RandomForestClassifier;0.8534;0.8576;0.8534;0.8526;0.8261;0.8329;0.8261;0.8252;0.8167;0.8205;0.8167;0.8172;0.9661;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 235};RandomForestClassifier(n_estimators=10, random_state=235)
RandomForestClassifier;0.8615;0.8665;0.8615;0.8611;0.8261;0.8294;0.8261;0.8269;0.8167;0.8238;0.8167;0.8172;0.9659;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 235};RandomForestClassifier(n_estimators=20, random_state=235)
MLPClassifier;0.7939;0.8143;0.7939;0.7906;0.7681;0.7898;0.7681;0.7668;0.8167;0.8205;0.8167;0.8172;0.918;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.7971;0.8207;0.7971;0.7959;0.8261;0.8471;0.8261;0.8263;0.8167;0.8205;0.8167;0.8172;0.9213;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
DecisionTreeClassifier;0.847;0.8551;0.847;0.8464;0.8261;0.8274;0.8261;0.8259;0.8167;0.8205;0.8167;0.8172;0.9347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
MLPClassifier;0.8068;0.8233;0.8068;0.8056;0.7246;0.7594;0.7246;0.7172;0.8167;0.842;0.8167;0.8169;0.9222;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
DecisionTreeClassifier;0.8422;0.8468;0.8422;0.8408;0.8406;0.8534;0.8406;0.8379;0.8167;0.8167;0.8167;0.8167;0.9349;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
SVC;0.7794;0.8103;0.7794;0.7764;0.8116;0.8445;0.8116;0.8057;0.8167;0.8344;0.8167;0.8167;0.898;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
DecisionTreeClassifier;0.8277;0.8374;0.8277;0.8257;0.8841;0.8869;0.8841;0.8846;0.8167;0.8167;0.8167;0.8167;0.9421;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
DecisionTreeClassifier;0.868;0.8717;0.868;0.8669;0.7971;0.799;0.7971;0.7964;0.8167;0.8167;0.8167;0.8167;0.9428;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
KNeighborsClassifier;0.8052;0.8134;0.8052;0.8033;0.8406;0.8406;0.8406;0.8398;0.8167;0.8172;0.8167;0.8166;0.9395;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.7971;0.8198;0.7971;0.7961;0.8406;0.8472;0.8406;0.8419;0.8167;0.8241;0.8167;0.8166;0.915;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.802;0.8198;0.802;0.8006;0.8116;0.839;0.8116;0.8029;0.8167;0.8241;0.8167;0.8166;0.9193;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
KNeighborsClassifier;0.8164;0.8265;0.8164;0.8145;0.7971;0.8056;0.7971;0.7955;0.8167;0.8172;0.8167;0.8166;0.9307;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8068;0.8175;0.8068;0.8052;0.8696;0.87;0.8696;0.8695;0.8167;0.8172;0.8167;0.8166;0.9333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
SVC;0.7955;0.8281;0.7955;0.7934;0.7826;0.7808;0.7826;0.78;0.8167;0.8187;0.8167;0.8163;0.9099;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
KNeighborsClassifier;0.8293;0.8431;0.8293;0.8284;0.8406;0.8413;0.8406;0.8401;0.8167;0.8163;0.8167;0.8162;0.9379;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8084;0.8241;0.8084;0.8076;0.8696;0.8787;0.8696;0.8656;0.8167;0.8175;0.8167;0.816;0.9337;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7956;0.8215;0.7956;0.7937;0.8986;0.9012;0.8986;0.8991;0.8167;0.8228;0.8167;0.8156;0.9103;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
SVC;0.789;0.8164;0.789;0.786;0.7101;0.7429;0.7101;0.7067;0.8167;0.825;0.8167;0.8153;0.8961;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
MLPClassifier;0.8051;0.8279;0.8051;0.8037;0.7681;0.7928;0.7681;0.7656;0.8167;0.8316;0.8167;0.8153;0.9211;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
SVC;0.7939;0.8214;0.7939;0.7908;0.7971;0.8317;0.7971;0.7984;0.8167;0.825;0.8167;0.8153;0.8992;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.789;0.8167;0.789;0.7864;0.8261;0.8516;0.8261;0.8228;0.8167;0.825;0.8167;0.8153;0.8965;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
MLPClassifier;0.8035;0.8223;0.8035;0.8025;0.7971;0.8243;0.7971;0.7855;0.8167;0.8316;0.8167;0.8153;0.9153;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 151, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=151)
RandomForestClassifier;0.8341;0.8407;0.8341;0.8331;0.8696;0.8846;0.8696;0.8684;0.8;0.8276;0.8;0.8029;0.959;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 303};RandomForestClassifier(n_estimators=10, random_state=303)
RandomForestClassifier;0.8438;0.8489;0.8438;0.8433;0.8551;0.8542;0.8551;0.8544;0.8;0.8089;0.8;0.8023;0.9581;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 303};RandomForestClassifier(n_estimators=20, random_state=303)
RandomForestClassifier;0.8454;0.8502;0.8454;0.845;0.8551;0.858;0.8551;0.8547;0.8;0.8042;0.8;0.801;0.9607;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 303};RandomForestClassifier(n_estimators=20, random_state=303)
KNeighborsClassifier;0.7906;0.7994;0.7906;0.7875;0.9275;0.9317;0.9275;0.9274;0.8;0.8042;0.8;0.801;0.9369;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8421;0.8512;0.8421;0.841;0.8261;0.8402;0.8261;0.8263;0.8;0.8022;0.8;0.8008;0.9585;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 303};RandomForestClassifier(n_estimators=20, random_state=303)
RandomForestClassifier;0.8246;0.8312;0.8246;0.823;0.8986;0.9003;0.8986;0.8991;0.8;0.8022;0.8;0.8008;0.9602;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 235};RandomForestClassifier(n_estimators=20, random_state=235)
MLPClassifier;0.7939;0.8181;0.7939;0.7928;0.8551;0.8635;0.8551;0.8545;0.8;0.8058;0.8;0.8007;0.9194;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 46, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=46)
RandomForestClassifier;0.8374;0.8453;0.8374;0.8347;0.8406;0.8545;0.8406;0.8424;0.8;0.8035;0.8;0.8005;0.962;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 972};RandomForestClassifier(n_estimators=20, random_state=972)
DecisionTreeClassifier;0.8567;0.8631;0.8567;0.8565;0.8696;0.8742;0.8696;0.8675;0.8;0.8013;0.8;0.8003;0.9488;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.8503;0.8554;0.8503;0.8502;0.8551;0.8617;0.8551;0.8545;0.8;0.8013;0.8;0.8003;0.9432;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.8358;0.8418;0.8358;0.8355;0.913;0.9135;0.913;0.913;0.8;0.8013;0.8;0.8003;0.9321;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.826;0.8334;0.826;0.825;0.8986;0.9008;0.8986;0.8988;0.8;0.8013;0.8;0.8003;0.9326;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.8438;0.8502;0.8438;0.8433;0.7971;0.7978;0.7971;0.7956;0.8;0.8;0.8;0.8;0.9374;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
SVC;0.7843;0.8182;0.7843;0.7819;0.8551;0.8558;0.8551;0.8546;0.8;0.8039;0.8;0.7998;0.9026;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7988;0.8289;0.7988;0.7964;0.7681;0.7813;0.7681;0.767;0.8;0.8039;0.8;0.7998;0.9051;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 268};SVC(C=10, probability=True, random_state=268)
SVC;0.8019;0.8294;0.8019;0.8002;0.7536;0.7846;0.7536;0.7449;0.8;0.8039;0.8;0.7998;0.8993;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
DecisionTreeClassifier;0.8278;0.8345;0.8278;0.827;0.7971;0.7974;0.7971;0.7962;0.8;0.802;0.8;0.7997;0.936;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.8373;0.8398;0.8373;0.8363;0.8116;0.8139;0.8116;0.8108;0.8;0.802;0.8;0.7997;0.9383;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
KNeighborsClassifier;0.8164;0.8246;0.8164;0.8159;0.7826;0.7831;0.7826;0.78;0.8;0.7997;0.8;0.7995;0.9356;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8245;0.831;0.8245;0.8225;0.8406;0.8428;0.8406;0.8399;0.8;0.7997;0.8;0.7995;0.938;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.773;0.8048;0.773;0.7688;0.8551;0.8591;0.8551;0.8546;0.8;0.8042;0.8;0.7992;0.8902;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, probability=True, random_state=416)
RandomForestClassifier;0.8599;0.8637;0.8599;0.8593;0.7971;0.8033;0.7971;0.7983;0.7833;0.795;0.7833;0.7865;0.966;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 235};RandomForestClassifier(n_estimators=20, random_state=235)
KNeighborsClassifier;0.8003;0.8119;0.8003;0.7992;0.913;0.9123;0.913;0.9124;0.7833;0.7913;0.7833;0.7852;0.9291;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.847;0.854;0.847;0.846;0.8261;0.8566;0.8261;0.8251;0.7833;0.7972;0.7833;0.785;0.9678;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 303};RandomForestClassifier(n_estimators=10, random_state=303)
DecisionTreeClassifier;0.818;0.8225;0.818;0.8168;0.913;0.9189;0.913;0.9138;0.7833;0.7869;0.7833;0.7838;0.9315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
DecisionTreeClassifier;0.8326;0.8401;0.8326;0.8322;0.8116;0.8185;0.8116;0.8115;0.7833;0.7869;0.7833;0.7838;0.9351;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
DecisionTreeClassifier;0.8471;0.8519;0.8471;0.8464;0.7826;0.7831;0.7826;0.7812;0.7833;0.7847;0.7833;0.7837;0.9405;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
KNeighborsClassifier;0.8229;0.8346;0.8229;0.8204;0.7101;0.7171;0.7101;0.7067;0.7833;0.7917;0.7833;0.7831;0.9451;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8486;0.8511;0.8486;0.8472;0.8406;0.8411;0.8406;0.8398;0.7833;0.785;0.7833;0.7829;0.937;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
RandomForestClassifier;0.8583;0.8642;0.8583;0.8581;0.7826;0.7865;0.7826;0.7801;0.7833;0.785;0.7833;0.7829;0.9668;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 972};RandomForestClassifier(n_estimators=5, random_state=972)
KNeighborsClassifier;0.8212;0.8254;0.8212;0.8195;0.8261;0.8271;0.8261;0.8263;0.7833;0.7839;0.7833;0.7827;0.9322;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8422;0.8469;0.8422;0.8417;0.8406;0.8435;0.8406;0.8403;0.7833;0.7835;0.7833;0.7821;0.9367;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 668};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=668)
RandomForestClassifier;0.8324;0.8366;0.8324;0.8316;0.7681;0.7684;0.7681;0.7651;0.7667;0.7841;0.7667;0.77;0.9658;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 972};RandomForestClassifier(n_estimators=10, random_state=972)
DecisionTreeClassifier;0.8438;0.8517;0.8438;0.8433;0.8406;0.8428;0.8406;0.8399;0.7667;0.7718;0.7667;0.7672;0.9384;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 376};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=376)
DecisionTreeClassifier;0.826;0.8324;0.826;0.8255;0.8986;0.8972;0.8986;0.8976;0.7667;0.7718;0.7667;0.7672;0.9375;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 614};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=614)
LogisticRegression;0.715;0.7328;0.715;0.7148;0.6957;0.7066;0.6957;0.6756;0.7667;0.7794;0.7667;0.7648;0.8188;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7069;0.7267;0.7069;0.7045;0.7826;0.8046;0.7826;0.7772;0.7667;0.7794;0.7667;0.7648;0.8068;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7135;0.7347;0.7135;0.713;0.6522;0.6676;0.6522;0.6507;0.7667;0.7794;0.7667;0.7648;0.826;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.6925;0.7144;0.6925;0.6905;0.8261;0.8504;0.8261;0.8234;0.7667;0.7794;0.7667;0.7648;0.8014;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
RandomForestClassifier;0.8552;0.8634;0.8552;0.8546;0.7971;0.8252;0.7971;0.7987;0.75;0.7645;0.75;0.7542;0.9663;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 235};RandomForestClassifier(n_estimators=20, random_state=235)
LogisticRegression;0.7087;0.7272;0.7087;0.7072;0.7246;0.7407;0.7246;0.7271;0.75;0.7607;0.75;0.749;0.8202;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
LogisticRegression;0.6973;0.7194;0.6973;0.6947;0.7681;0.7851;0.7681;0.7707;0.75;0.7607;0.75;0.749;0.8077;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.7021;0.7259;0.7021;0.6999;0.7826;0.7834;0.7826;0.7809;0.75;0.7667;0.75;0.747;0.8038;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7086;0.7245;0.7086;0.7076;0.6957;0.7724;0.6957;0.6792;0.75;0.7667;0.75;0.747;0.8118;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.7134;0.7441;0.7134;0.7129;0.6812;0.7005;0.6812;0.6841;0.75;0.7667;0.75;0.747;0.8204;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.7148;0.7387;0.7148;0.7129;0.6232;0.6616;0.6232;0.6236;0.75;0.7667;0.75;0.747;0.8187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7198;0.7412;0.7198;0.719;0.6667;0.6697;0.6667;0.6676;0.75;0.7667;0.75;0.747;0.8145;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.6973;0.7212;0.6973;0.6933;0.7826;0.8029;0.7826;0.7846;0.75;0.7667;0.75;0.747;0.808;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.7037;0.7219;0.7037;0.7023;0.7681;0.7895;0.7681;0.7679;0.75;0.7606;0.75;0.7459;0.8054;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7036;0.7268;0.7036;0.6995;0.7681;0.7908;0.7681;0.7719;0.75;0.7606;0.75;0.7459;0.8121;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7118;0.7369;0.7118;0.7078;0.7536;0.7769;0.7536;0.7573;0.75;0.7606;0.75;0.7459;0.8103;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.7071;0.7301;0.7071;0.7056;0.7971;0.8011;0.7971;0.7981;0.75;0.7606;0.75;0.7459;0.8102;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
LogisticRegression;0.7039;0.7261;0.7039;0.701;0.6667;0.6567;0.6667;0.653;0.75;0.7606;0.75;0.7459;0.8118;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
LogisticRegression;0.7198;0.7364;0.7198;0.7189;0.6812;0.7015;0.6812;0.6737;0.75;0.7606;0.75;0.7459;0.8206;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7262;0.7473;0.7262;0.7236;0.6232;0.66;0.6232;0.6195;0.75;0.7606;0.75;0.7459;0.821;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
LogisticRegression;0.7085;0.7314;0.7085;0.7069;0.6087;0.6158;0.6087;0.6034;0.75;0.7606;0.75;0.7459;0.8175;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
RandomForestClassifier;0.8374;0.8451;0.8374;0.8355;0.8406;0.8406;0.8406;0.8398;0.7333;0.7436;0.7333;0.736;0.9632;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 303};RandomForestClassifier(n_estimators=5, random_state=303)
LogisticRegression;0.7102;0.7329;0.7102;0.7079;0.6957;0.7505;0.6957;0.7004;0.7333;0.7478;0.7333;0.7314;0.812;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
LogisticRegression;0.7164;0.7449;0.7164;0.716;0.6087;0.6222;0.6087;0.6122;0.7333;0.7398;0.7333;0.7305;0.8167;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.6988;0.7215;0.6988;0.6968;0.7246;0.7269;0.7246;0.7204;0.7333;0.7427;0.7333;0.7266;0.8121;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.715;0.7324;0.715;0.7131;0.6812;0.6907;0.6812;0.6776;0.7333;0.7427;0.7333;0.7266;0.8147;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
LogisticRegression;0.7037;0.7232;0.7037;0.7;0.6667;0.6667;0.6667;0.6652;0.7333;0.7427;0.7333;0.7266;0.807;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.6989;0.7188;0.6989;0.696;0.6957;0.7017;0.6957;0.6932;0.7333;0.7427;0.7333;0.7266;0.8159;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.7134;0.7305;0.7134;0.7116;0.6957;0.6982;0.6957;0.6924;0.7167;0.7211;0.7167;0.7114;0.8193;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 147, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=147)"
LogisticRegression;0.699;0.7248;0.699;0.6983;0.7536;0.7649;0.7536;0.756;0.7167;0.7211;0.7167;0.7114;0.8128;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
LogisticRegression;0.7036;0.7241;0.7036;0.7024;0.7101;0.7123;0.7101;0.7105;0.7167;0.7267;0.7167;0.7114;0.818;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
LogisticRegression;0.6957;0.7229;0.6957;0.6921;0.6812;0.6901;0.6812;0.6783;0.7167;0.7208;0.7167;0.7097;0.8093;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 296, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=296)"
