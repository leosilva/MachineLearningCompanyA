Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9078;0.9088;0.9078;0.908;0.9067;0.9075;0.9067;0.907;0.9333;0.9333;0.9333;0.9333;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9083;0.9094;0.9083;0.9086;0.9102;0.9102;0.9102;0.9102;0.9333;0.9333;0.9333;0.9333;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9085;0.9091;0.9085;0.9087;0.9157;0.9176;0.9157;0.9162;0.9167;0.9182;0.9167;0.917;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9055;0.9063;0.9055;0.9057;0.9136;0.9137;0.9136;0.9136;0.9167;0.9165;0.9167;0.9162;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9047;0.9055;0.9047;0.9049;0.9079;0.9084;0.9079;0.9079;0.9167;0.9165;0.9167;0.9162;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9059;0.907;0.9059;0.9062;0.9112;0.9112;0.9112;0.9111;0.9167;0.9165;0.9167;0.9162;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9018;0.9027;0.9018;0.902;0.9304;0.931;0.9304;0.9305;0.9167;0.9165;0.9167;0.9162;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9104;0.9113;0.9104;0.9106;0.9112;0.9114;0.9112;0.9113;0.9167;0.9165;0.9167;0.9162;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9089;0.9097;0.9089;0.9091;0.9046;0.9052;0.9046;0.9048;0.9;0.9043;0.9;0.9011;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9101;0.911;0.9101;0.9104;0.9011;0.9014;0.9011;0.9012;0.9;0.9042;0.9;0.9006;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9065;0.9076;0.9065;0.9068;0.9169;0.9177;0.9169;0.9171;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9109;0.9119;0.9109;0.9111;0.918;0.9184;0.918;0.9181;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9131;0.9138;0.9131;0.9134;0.899;0.8993;0.899;0.8991;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9085;0.9095;0.9085;0.9088;0.9181;0.918;0.9181;0.918;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.908;0.9092;0.908;0.9083;0.9079;0.9107;0.9079;0.9085;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9082;0.9096;0.9082;0.9085;0.9169;0.9171;0.9169;0.9169;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9062;0.9069;0.9062;0.9064;0.9348;0.9355;0.9348;0.9351;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9071;0.9079;0.9071;0.9073;0.9258;0.9263;0.9258;0.9259;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9105;0.9113;0.9105;0.9108;0.9001;0.9004;0.9001;0.9002;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9088;0.9101;0.9088;0.9091;0.918;0.9185;0.918;0.9182;0.9;0.9;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9106;0.9117;0.9106;0.911;0.9191;0.9218;0.9191;0.9198;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.906;0.9073;0.906;0.9063;0.918;0.9187;0.918;0.9182;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9091;0.9101;0.9091;0.9094;0.9112;0.9115;0.9112;0.9113;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9081;0.9092;0.9081;0.9084;0.9214;0.9227;0.9214;0.9218;0.9;0.9007;0.9;0.9;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9089;0.9099;0.9089;0.9091;0.9124;0.9127;0.9124;0.9124;0.8833;0.8862;0.8833;0.8836;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9119;0.9129;0.9119;0.9121;0.9124;0.9127;0.9124;0.9125;0.8833;0.8862;0.8833;0.8836;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9076;0.9089;0.9076;0.9079;0.9259;0.9272;0.9259;0.9262;0.8833;0.8833;0.8833;0.8833;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9111;0.9117;0.9111;0.9113;0.9011;0.9019;0.9011;0.9014;0.8833;0.8833;0.8833;0.8833;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.908;0.909;0.908;0.9083;0.9169;0.9173;0.9169;0.917;0.8667;0.8681;0.8667;0.867;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9096;0.9107;0.9096;0.9099;0.9101;0.9108;0.9101;0.9104;0.8667;0.8664;0.8667;0.8662;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
