Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8471;0.8529;0.8471;0.8462;0.8406;0.8463;0.8406;0.8398;0.7667;0.7679;0.7667;0.767;0.9391;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
DecisionTreeClassifier;0.8551;0.8612;0.8551;0.8539;0.8116;0.8258;0.8116;0.8131;0.7667;0.7731;0.7667;0.767;0.9385;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
DecisionTreeClassifier;0.8488;0.8546;0.8488;0.8481;0.8986;0.8986;0.8986;0.8986;0.7667;0.7679;0.7667;0.767;0.9342;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
DecisionTreeClassifier;0.8567;0.865;0.8567;0.8559;0.8696;0.8719;0.8696;0.8682;0.7667;0.7679;0.7667;0.767;0.9444;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.839;0.84;0.839;0.838;0.8696;0.8775;0.8696;0.8678;0.7667;0.7679;0.7667;0.7645;0.9359;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
RandomForestClassifier;0.8551;0.8611;0.8551;0.8541;0.8986;0.9079;0.8986;0.8983;0.75;0.7744;0.75;0.7537;0.9643;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 628};RandomForestClassifier(n_estimators=20, random_state=628)
DecisionTreeClassifier;0.8374;0.8424;0.8374;0.8354;0.8406;0.8526;0.8406;0.8422;0.75;0.7656;0.75;0.7524;0.9325;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
DecisionTreeClassifier;0.8437;0.8531;0.8437;0.8429;0.7826;0.8002;0.7826;0.7808;0.75;0.7733;0.75;0.751;0.938;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8358;0.8404;0.8358;0.8344;0.8841;0.8902;0.8841;0.8846;0.75;0.7536;0.75;0.7509;0.9368;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
RandomForestClassifier;0.855;0.8614;0.855;0.8541;0.8551;0.8533;0.8551;0.8523;0.75;0.7553;0.75;0.7505;0.9651;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
DecisionTreeClassifier;0.8389;0.8485;0.8389;0.8393;0.8116;0.821;0.8116;0.811;0.75;0.7513;0.75;0.7497;0.9407;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
DecisionTreeClassifier;0.8212;0.8266;0.8212;0.8198;0.8986;0.9022;0.8986;0.8983;0.75;0.7542;0.75;0.7482;0.9366;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
DecisionTreeClassifier;0.8181;0.825;0.8181;0.8157;0.8696;0.8709;0.8696;0.8694;0.75;0.7542;0.75;0.7482;0.939;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8678;0.8731;0.8678;0.8678;0.8261;0.83;0.8261;0.8263;0.7333;0.7541;0.7333;0.7364;0.9444;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
RandomForestClassifier;0.8454;0.853;0.8454;0.8442;0.8841;0.8983;0.8841;0.8822;0.7333;0.7399;0.7333;0.7342;0.964;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 628};RandomForestClassifier(n_estimators=5, random_state=628)
DecisionTreeClassifier;0.86;0.8658;0.86;0.8594;0.7681;0.8119;0.7681;0.7622;0.7333;0.7392;0.7333;0.7339;0.9335;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
DecisionTreeClassifier;0.8245;0.8337;0.8245;0.8225;0.8551;0.8549;0.8551;0.8547;0.7333;0.7392;0.7333;0.7339;0.9365;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
RandomForestClassifier;0.8551;0.8608;0.8551;0.8539;0.913;0.9177;0.913;0.9135;0.7333;0.7346;0.7333;0.7336;0.9669;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 628};RandomForestClassifier(n_estimators=10, random_state=628)
RandomForestClassifier;0.8503;0.8532;0.8503;0.8497;0.8696;0.8689;0.8696;0.8681;0.7333;0.7354;0.7333;0.7334;0.9653;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
DecisionTreeClassifier;0.8358;0.8435;0.8358;0.8345;0.7971;0.8006;0.7971;0.797;0.7333;0.7333;0.7333;0.7333;0.9328;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
RandomForestClassifier;0.8551;0.8651;0.8551;0.8539;0.8696;0.8758;0.8696;0.869;0.7333;0.7333;0.7333;0.7333;0.9664;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 976};RandomForestClassifier(n_estimators=20, random_state=976)
RandomForestClassifier;0.8648;0.872;0.8648;0.8641;0.8696;0.8716;0.8696;0.8671;0.7333;0.7337;0.7333;0.7332;0.9704;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 628};RandomForestClassifier(n_estimators=5, random_state=628)
RandomForestClassifier;0.847;0.8513;0.847;0.8465;0.8696;0.8849;0.8696;0.8683;0.7333;0.7337;0.7333;0.7326;0.9657;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
DecisionTreeClassifier;0.8422;0.8523;0.8422;0.8417;0.7826;0.7861;0.7826;0.7821;0.7333;0.7337;0.7333;0.7326;0.9398;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
RandomForestClassifier;0.8695;0.8722;0.8695;0.8689;0.8116;0.8239;0.8116;0.8093;0.7167;0.7353;0.7167;0.7188;0.9668;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 628};RandomForestClassifier(n_estimators=10, random_state=628)
RandomForestClassifier;0.8567;0.8627;0.8567;0.856;0.8116;0.8111;0.8116;0.8095;0.7167;0.7285;0.7167;0.7188;0.9649;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 976};RandomForestClassifier(n_estimators=10, random_state=976)
DecisionTreeClassifier;0.8422;0.8524;0.8422;0.8419;0.8261;0.832;0.8261;0.8257;0.7167;0.7464;0.7167;0.7187;0.9301;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=728)
DecisionTreeClassifier;0.8503;0.855;0.8503;0.8486;0.8551;0.8635;0.8551;0.8545;0.7167;0.7195;0.7167;0.7178;0.9442;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
SVC;0.6151;0.698;0.6151;0.6027;0.7681;0.7738;0.7681;0.7618;0.7167;0.7263;0.7167;0.7172;0.7674;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 922};SVC(C=10, kernel='linear', probability=True, random_state=922)
SVC;0.6313;0.7025;0.6313;0.6149;0.7246;0.744;0.7246;0.7239;0.7167;0.7263;0.7167;0.7172;0.7828;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 234};SVC(C=10, kernel='linear', probability=True, random_state=234)
MLPClassifier;0.7439;0.7712;0.7439;0.7458;0.8551;0.8567;0.8551;0.8549;0.7167;0.7298;0.7167;0.7171;0.879;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
RandomForestClassifier;0.8421;0.8483;0.8421;0.8417;0.8986;0.899;0.8986;0.8985;0.7167;0.7179;0.7167;0.717;0.9646;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 976};RandomForestClassifier(n_estimators=20, random_state=976)
RandomForestClassifier;0.847;0.8509;0.847;0.8451;0.8841;0.8898;0.8841;0.8835;0.7167;0.717;0.7167;0.7166;0.9649;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 313};RandomForestClassifier(n_estimators=5, random_state=313)
DecisionTreeClassifier;0.8438;0.8507;0.8438;0.8427;0.8116;0.8135;0.8116;0.8117;0.7167;0.7203;0.7167;0.7162;0.9376;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
DecisionTreeClassifier;0.8358;0.8432;0.8358;0.8337;0.8116;0.8141;0.8116;0.8112;0.7167;0.7203;0.7167;0.7162;0.9404;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
DecisionTreeClassifier;0.8454;0.8576;0.8454;0.8433;0.8406;0.8424;0.8406;0.8407;0.7167;0.7162;0.7167;0.7161;0.9402;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
RandomForestClassifier;0.8438;0.8477;0.8438;0.8435;0.8406;0.8398;0.8406;0.8399;0.7167;0.7169;0.7167;0.7159;0.9683;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
KNeighborsClassifier;0.7907;0.8002;0.7907;0.7906;0.7681;0.7696;0.7681;0.7678;0.7167;0.7169;0.7167;0.7159;0.9211;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8648;0.869;0.8648;0.864;0.8261;0.8406;0.8261;0.825;0.7167;0.7169;0.7167;0.7159;0.9662;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
DecisionTreeClassifier;0.8341;0.843;0.8341;0.8332;0.7246;0.77;0.7246;0.7132;0.7167;0.7195;0.7167;0.7158;0.9327;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
RandomForestClassifier;0.8503;0.862;0.8503;0.8503;0.8116;0.8121;0.8116;0.8111;0.7167;0.7214;0.7167;0.7149;0.973;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 976};RandomForestClassifier(n_estimators=10, random_state=976)
RandomForestClassifier;0.8405;0.8457;0.8405;0.8389;0.8551;0.8578;0.8551;0.8544;0.7167;0.7146;0.7167;0.7145;0.9652;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 976};RandomForestClassifier(n_estimators=20, random_state=976)
DecisionTreeClassifier;0.847;0.8519;0.847;0.8463;0.8696;0.8703;0.8696;0.8665;0.7167;0.72;0.7167;0.7142;0.9393;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
RandomForestClassifier;0.8519;0.8576;0.8519;0.8511;0.8841;0.8861;0.8841;0.8843;0.7;0.7298;0.7;0.7045;0.9662;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 628};RandomForestClassifier(n_estimators=20, random_state=628)
KNeighborsClassifier;0.7875;0.7991;0.7875;0.7856;0.8696;0.8758;0.8696;0.8701;0.7;0.7126;0.7;0.7039;0.9211;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8503;0.8613;0.8503;0.8488;0.8986;0.9071;0.8986;0.8988;0.7;0.7047;0.7;0.7012;0.9642;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 976};RandomForestClassifier(n_estimators=20, random_state=976)
DecisionTreeClassifier;0.8503;0.858;0.8503;0.8489;0.7681;0.7681;0.7681;0.7681;0.7;0.7037;0.7;0.7009;0.9458;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 711};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=711)
SVC;0.6135;0.6926;0.6135;0.5944;0.6522;0.6779;0.6522;0.6564;0.7;0.7088;0.7;0.7008;0.7715;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 234};SVC(C=10, kernel='linear', probability=True, random_state=234)
MLPClassifier;0.7375;0.7653;0.7375;0.7372;0.6957;0.6939;0.6957;0.6933;0.7;0.702;0.7;0.7007;0.8772;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
KNeighborsClassifier;0.7826;0.8003;0.7826;0.7814;0.913;0.9156;0.913;0.9122;0.7;0.702;0.7;0.7007;0.9189;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8052;0.8177;0.8052;0.8043;0.7681;0.7731;0.7681;0.7668;0.7;0.7242;0.7;0.7005;0.9164;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8341;0.8448;0.8341;0.8334;0.8696;0.8802;0.8696;0.87;0.7;0.7044;0.7;0.7;0.965;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
KNeighborsClassifier;0.7971;0.8125;0.7971;0.7962;0.8406;0.8399;0.8406;0.8392;0.7;0.7;0.7;0.7;0.9268;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8599;0.8642;0.8599;0.8594;0.8696;0.8728;0.8696;0.8701;0.7;0.7068;0.7;0.6999;0.9644;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
SVC;0.6328;0.7103;0.6328;0.6149;0.7246;0.7302;0.7246;0.7231;0.7;0.7131;0.7;0.6997;0.7768;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 234};SVC(C=1, kernel='linear', probability=True, random_state=234)
RandomForestClassifier;0.8566;0.8605;0.8566;0.8563;0.8551;0.8658;0.8551;0.8558;0.7;0.7027;0.7;0.6988;0.9631;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 628};RandomForestClassifier(n_estimators=5, random_state=628)
RandomForestClassifier;0.8487;0.8547;0.8487;0.8475;0.7681;0.7824;0.7681;0.7697;0.7;0.6978;0.7;0.6986;0.9619;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 628};RandomForestClassifier(n_estimators=10, random_state=628)
DecisionTreeClassifier;0.8342;0.8398;0.8342;0.8328;0.8696;0.8758;0.8696;0.8701;0.7;0.7045;0.7;0.6984;0.935;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
DecisionTreeClassifier;0.8535;0.861;0.8535;0.8522;0.8406;0.8491;0.8406;0.8413;0.7;0.7045;0.7;0.6984;0.9384;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
KNeighborsClassifier;0.8068;0.8176;0.8068;0.8075;0.8261;0.8468;0.8261;0.823;0.6833;0.7161;0.6833;0.6892;0.9211;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7826;0.793;0.7826;0.78;0.8406;0.8457;0.8406;0.8372;0.6833;0.7161;0.6833;0.6892;0.913;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7778;0.7838;0.7778;0.7776;0.8261;0.8468;0.8261;0.823;0.6833;0.7161;0.6833;0.6892;0.9111;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7923;0.8025;0.7923;0.792;0.913;0.9151;0.913;0.9129;0.6833;0.7161;0.6833;0.6892;0.925;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7987;0.8079;0.7987;0.7978;0.7971;0.8348;0.7971;0.7905;0.6833;0.7161;0.6833;0.6892;0.9265;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7875;0.8018;0.7875;0.7861;0.8551;0.864;0.8551;0.8538;0.6833;0.7161;0.6833;0.6892;0.9231;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8018;0.8081;0.8018;0.8013;0.8551;0.8625;0.8551;0.8552;0.6833;0.7161;0.6833;0.6892;0.9233;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.789;0.8044;0.789;0.7888;0.8986;0.903;0.8986;0.8976;0.6833;0.7039;0.6833;0.6869;0.919;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7825;0.7921;0.7825;0.7815;0.7971;0.8087;0.7971;0.7919;0.6833;0.7039;0.6833;0.6869;0.9111;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.802;0.8096;0.802;0.8018;0.8696;0.8717;0.8696;0.8686;0.6833;0.7039;0.6833;0.6869;0.9176;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7826;0.7884;0.7826;0.7821;0.8406;0.8413;0.8406;0.8401;0.6833;0.7039;0.6833;0.6869;0.9251;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7971;0.8082;0.7971;0.7962;0.8551;0.8625;0.8551;0.8521;0.6833;0.7039;0.6833;0.6869;0.9228;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7987;0.8067;0.7987;0.798;0.7536;0.781;0.7536;0.752;0.6833;0.7056;0.6833;0.6865;0.9249;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7987;0.8061;0.7987;0.7983;0.8696;0.8709;0.8696;0.8694;0.6833;0.6937;0.6833;0.6862;0.9145;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
LogisticRegression;0.6942;0.7012;0.6942;0.6893;0.6377;0.6389;0.6377;0.6377;0.6833;0.7039;0.6833;0.6862;0.8281;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
LogisticRegression;0.6716;0.6847;0.6716;0.6667;0.6957;0.7132;0.6957;0.6965;0.6833;0.7039;0.6833;0.6862;0.8171;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
SVC;0.6248;0.7025;0.6248;0.6106;0.6232;0.6468;0.6232;0.6269;0.6833;0.7021;0.6833;0.6859;0.7775;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 922};SVC(C=0.1, kernel='linear', probability=True, random_state=922)
LogisticRegression;0.6925;0.7055;0.6925;0.6891;0.7681;0.7651;0.7681;0.7617;0.6833;0.7169;0.6833;0.6856;0.8195;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.6715;0.6809;0.6715;0.6693;0.6957;0.7021;0.6957;0.6841;0.6833;0.7169;0.6833;0.6856;0.8292;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.7086;0.7227;0.7086;0.7059;0.5942;0.6007;0.5942;0.5807;0.6833;0.712;0.6833;0.685;0.8384;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
LogisticRegression;0.702;0.7153;0.702;0.6976;0.6377;0.667;0.6377;0.6393;0.6833;0.712;0.6833;0.685;0.8326;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
LogisticRegression;0.6844;0.6927;0.6844;0.6819;0.7246;0.7465;0.7246;0.7179;0.6833;0.712;0.6833;0.685;0.8272;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.6812;0.6975;0.6812;0.679;0.7101;0.7148;0.7101;0.7027;0.6833;0.712;0.6833;0.685;0.8263;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
LogisticRegression;0.6892;0.7021;0.6892;0.6875;0.6812;0.6836;0.6812;0.675;0.6833;0.712;0.6833;0.685;0.8365;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
LogisticRegression;0.6763;0.6829;0.6763;0.6706;0.7391;0.7595;0.7391;0.7433;0.6833;0.712;0.6833;0.685;0.821;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.7052;0.7135;0.7052;0.7038;0.6522;0.6532;0.6522;0.6467;0.6833;0.712;0.6833;0.685;0.8347;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
LogisticRegression;0.7086;0.7232;0.7086;0.7051;0.7101;0.7333;0.7101;0.7081;0.6833;0.712;0.6833;0.685;0.8295;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
LogisticRegression;0.6988;0.71;0.6988;0.6986;0.6812;0.6926;0.6812;0.6665;0.6833;0.712;0.6833;0.685;0.8351;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
KNeighborsClassifier;0.7939;0.8055;0.7939;0.7928;0.8696;0.8744;0.8696;0.8699;0.6833;0.6902;0.6833;0.6849;0.921;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8535;0.8596;0.8535;0.8532;0.8551;0.8587;0.8551;0.8551;0.6833;0.6929;0.6833;0.6847;0.963;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 628};RandomForestClassifier(n_estimators=5, random_state=628)
SVC;0.6023;0.6834;0.6023;0.5925;0.6957;0.73;0.6957;0.6929;0.6833;0.6911;0.6833;0.6846;0.7706;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 453};SVC(C=1, kernel='linear', probability=True, random_state=453)
SVC;0.625;0.7072;0.625;0.6103;0.6377;0.6503;0.6377;0.6372;0.6833;0.6911;0.6833;0.6846;0.782;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 453};SVC(C=1, kernel='linear', probability=True, random_state=453)
SVC;0.6184;0.6993;0.6184;0.607;0.7391;0.7648;0.7391;0.7359;0.6833;0.6956;0.6833;0.6845;0.7755;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 234};SVC(C=1, kernel='linear', probability=True, random_state=234)
SVC;0.6248;0.7053;0.6248;0.6133;0.7826;0.8111;0.7826;0.7809;0.6833;0.6956;0.6833;0.6845;0.7776;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 922};SVC(C=1, kernel='linear', probability=True, random_state=922)
SVC;0.6135;0.689;0.6135;0.5981;0.7826;0.7861;0.7826;0.7821;0.6833;0.6956;0.6833;0.6845;0.7625;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 234};SVC(C=1, kernel='linear', probability=True, random_state=234)
SVC;0.6313;0.7101;0.6313;0.6198;0.6232;0.6606;0.6232;0.6246;0.6833;0.6956;0.6833;0.6845;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 922};SVC(C=10, kernel='linear', probability=True, random_state=922)
SVC;0.6072;0.6892;0.6072;0.5928;0.7391;0.751;0.7391;0.734;0.6833;0.6956;0.6833;0.6845;0.7769;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 453};SVC(C=1, kernel='linear', probability=True, random_state=453)
SVC;0.636;0.7079;0.636;0.6253;0.5942;0.6363;0.5942;0.5982;0.6833;0.7;0.6833;0.6841;0.7769;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', probability=True, random_state=453)
SVC;0.6167;0.7008;0.6167;0.6022;0.7536;0.7604;0.7536;0.7536;0.6833;0.7;0.6833;0.6841;0.7735;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 234};SVC(C=10, kernel='linear', probability=True, random_state=234)
SVC;0.6201;0.6914;0.6201;0.6059;0.7246;0.7295;0.7246;0.7223;0.6833;0.7;0.6833;0.6841;0.7715;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 922};SVC(C=1, kernel='linear', probability=True, random_state=922)
SVC;0.6457;0.7149;0.6457;0.6321;0.6522;0.6913;0.6522;0.646;0.6833;0.7;0.6833;0.6841;0.7848;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 922};SVC(C=1, kernel='linear', probability=True, random_state=922)
KNeighborsClassifier;0.8148;0.8203;0.8148;0.8131;0.7826;0.7941;0.7826;0.7806;0.6833;0.7049;0.6833;0.6836;0.9267;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8326;0.8383;0.8326;0.8325;0.8551;0.8596;0.8551;0.8514;0.6833;0.6852;0.6833;0.6834;0.9293;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
RandomForestClassifier;0.8437;0.8482;0.8437;0.8434;0.8551;0.858;0.8551;0.8547;0.6833;0.6833;0.6833;0.6833;0.9597;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
RandomForestClassifier;0.8486;0.8578;0.8486;0.8487;0.8696;0.8714;0.8696;0.8694;0.6833;0.6872;0.6833;0.6833;0.9611;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 313};RandomForestClassifier(n_estimators=10, random_state=313)
SVC;0.6199;0.6956;0.6199;0.6073;0.7101;0.7151;0.7101;0.7056;0.6833;0.6917;0.6833;0.6828;0.7682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', probability=True, random_state=453)
SVC;0.6168;0.6944;0.6168;0.6037;0.7826;0.8225;0.7826;0.7772;0.6833;0.6917;0.6833;0.6828;0.7698;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', probability=True, random_state=453)
DecisionTreeClassifier;0.8485;0.8573;0.8485;0.8463;0.7826;0.7957;0.7826;0.779;0.6833;0.6828;0.6833;0.6828;0.9471;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
MLPClassifier;0.7408;0.7722;0.7408;0.7402;0.7246;0.7522;0.7246;0.73;0.6833;0.7122;0.6833;0.6812;0.8832;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
RandomForestClassifier;0.8584;0.8611;0.8584;0.8568;0.7971;0.7999;0.7971;0.795;0.6833;0.6967;0.6833;0.6808;0.9679;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 628};RandomForestClassifier(n_estimators=10, random_state=628)
RandomForestClassifier;0.8712;0.8753;0.8712;0.8701;0.8261;0.8303;0.8261;0.8271;0.6833;0.6795;0.6833;0.6803;0.9723;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 976};RandomForestClassifier(n_estimators=20, random_state=976)
RandomForestClassifier;0.8486;0.8598;0.8486;0.8484;0.8986;0.9031;0.8986;0.8982;0.6833;0.6803;0.6833;0.6798;0.9651;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 976};RandomForestClassifier(n_estimators=10, random_state=976)
MLPClassifier;0.7487;0.7752;0.7487;0.7478;0.7971;0.7981;0.7971;0.7973;0.6833;0.7099;0.6833;0.6771;0.8893;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
KNeighborsClassifier;0.8019;0.8106;0.8019;0.7993;0.7681;0.7742;0.7681;0.7648;0.6667;0.7065;0.6667;0.6721;0.9272;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8083;0.8194;0.8083;0.8071;0.8551;0.8742;0.8551;0.8526;0.6667;0.6894;0.6667;0.6714;0.9213;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8051;0.8159;0.8051;0.8042;0.8116;0.8169;0.8116;0.8132;0.6667;0.6894;0.6667;0.6714;0.9228;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7972;0.8085;0.7972;0.7971;0.9275;0.9274;0.9275;0.9272;0.6667;0.6894;0.6667;0.6714;0.9165;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8263;0.8342;0.8263;0.8267;0.8841;0.8896;0.8841;0.8822;0.6667;0.6894;0.6667;0.6714;0.9267;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8083;0.8169;0.8083;0.8072;0.7971;0.8318;0.7971;0.8008;0.6667;0.6923;0.6667;0.6696;0.9225;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
LogisticRegression;0.6909;0.7099;0.6909;0.6878;0.7391;0.7427;0.7391;0.7323;0.6667;0.6901;0.6667;0.6692;0.8321;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
LogisticRegression;0.694;0.701;0.694;0.6916;0.6522;0.6532;0.6522;0.6492;0.6667;0.6901;0.6667;0.6692;0.8353;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
SVC;0.6346;0.7115;0.6346;0.6203;0.6377;0.6746;0.6377;0.6426;0.6667;0.6774;0.6667;0.6686;0.775;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 234};SVC(C=1, kernel='linear', probability=True, random_state=234)
SVC;0.625;0.7035;0.625;0.6101;0.7391;0.7575;0.7391;0.7378;0.6667;0.6833;0.6667;0.6683;0.7707;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 234};SVC(C=10, kernel='linear', probability=True, random_state=234)
MLPClassifier;0.7407;0.7626;0.7407;0.7413;0.6957;0.7213;0.6957;0.6924;0.6667;0.6833;0.6667;0.6683;0.8743;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
LogisticRegression;0.6796;0.6943;0.6796;0.6774;0.7971;0.8039;0.7971;0.7962;0.6667;0.687;0.6667;0.6682;0.8231;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
LogisticRegression;0.6699;0.6838;0.6699;0.6675;0.7101;0.7213;0.7101;0.7133;0.6667;0.687;0.6667;0.6682;0.8163;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
LogisticRegression;0.6892;0.6981;0.6892;0.6851;0.6522;0.6753;0.6522;0.6564;0.6667;0.687;0.6667;0.6682;0.8262;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
LogisticRegression;0.6699;0.6814;0.6699;0.6661;0.7971;0.803;0.7971;0.7969;0.6667;0.687;0.6667;0.6682;0.8154;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
KNeighborsClassifier;0.7922;0.802;0.7922;0.7917;0.8841;0.8867;0.8841;0.8835;0.6667;0.6707;0.6667;0.6679;0.9281;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.797;0.8082;0.797;0.7961;0.7826;0.7871;0.7826;0.7772;0.6667;0.6714;0.6667;0.6678;0.9211;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6393;0.7102;0.6393;0.621;0.6232;0.6392;0.6232;0.6201;0.6667;0.683;0.6667;0.6677;0.7874;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 922};SVC(C=10, kernel='linear', probability=True, random_state=922)
LogisticRegression;0.6845;0.6981;0.6845;0.6824;0.7536;0.7575;0.7536;0.754;0.6667;0.683;0.6667;0.6677;0.8276;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.6957;0.7117;0.6957;0.6915;0.6667;0.6723;0.6667;0.6667;0.6667;0.683;0.6667;0.6677;0.8225;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.6763;0.6866;0.6763;0.6728;0.7391;0.7571;0.7391;0.7328;0.6667;0.683;0.6667;0.6677;0.8263;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
SVC;0.6183;0.6937;0.6183;0.6016;0.7246;0.7645;0.7246;0.7271;0.6667;0.6778;0.6667;0.6677;0.7672;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', probability=True, random_state=453)
LogisticRegression;0.6989;0.7102;0.6989;0.6964;0.7391;0.7557;0.7391;0.7363;0.6667;0.683;0.6667;0.6677;0.8282;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
SVC;0.628;0.7079;0.628;0.6157;0.6377;0.6452;0.6377;0.6385;0.6667;0.683;0.6667;0.6677;0.7763;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', probability=True, random_state=453)
MLPClassifier;0.7004;0.7344;0.7004;0.6998;0.7536;0.7795;0.7536;0.7526;0.6667;0.6924;0.6667;0.667;0.8642;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
SVC;0.62;0.702;0.62;0.6053;0.7391;0.7605;0.7391;0.7319;0.6667;0.6751;0.6667;0.6669;0.7746;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 922};SVC(C=1, kernel='linear', probability=True, random_state=922)
SVC;0.6263;0.6938;0.6263;0.6082;0.6377;0.644;0.6377;0.6339;0.6667;0.6781;0.6667;0.6667;0.7702;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', probability=True, random_state=453)
MLPClassifier;0.7406;0.7729;0.7406;0.7406;0.6522;0.7858;0.6522;0.6449;0.6667;0.6807;0.6667;0.6667;0.8739;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
LogisticRegression;0.7004;0.7122;0.7004;0.6977;0.6087;0.6037;0.6087;0.5986;0.6667;0.6781;0.6667;0.6667;0.8324;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.6971;0.7035;0.6971;0.6955;0.6522;0.659;0.6522;0.6508;0.6667;0.7006;0.6667;0.6667;0.8319;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
MLPClassifier;0.7425;0.7652;0.7425;0.7418;0.7101;0.7159;0.7101;0.7089;0.6667;0.7114;0.6667;0.6665;0.8716;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
LogisticRegression;0.707;0.7181;0.707;0.7035;0.6232;0.6341;0.6232;0.6234;0.6667;0.676;0.6667;0.6665;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
LogisticRegression;0.6861;0.6957;0.6861;0.6829;0.7536;0.7545;0.7536;0.7511;0.6667;0.676;0.6667;0.6665;0.8265;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
DecisionTreeClassifier;0.839;0.8429;0.839;0.8378;0.8406;0.8388;0.8406;0.8389;0.6667;0.675;0.6667;0.6662;0.937;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=728)
LogisticRegression;0.7135;0.7208;0.7135;0.711;0.5797;0.582;0.5797;0.5788;0.6667;0.6931;0.6667;0.666;0.8433;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 650, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=650)"
LogisticRegression;0.7101;0.7187;0.7101;0.7086;0.6667;0.6854;0.6667;0.6603;0.6667;0.6931;0.6667;0.666;0.8381;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 117, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=117)"
RandomForestClassifier;0.8599;0.8679;0.8599;0.8598;0.8116;0.8108;0.8116;0.8109;0.6667;0.6713;0.6667;0.6659;0.9688;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 976};RandomForestClassifier(n_estimators=20, random_state=976)
SVC;0.6346;0.7084;0.6346;0.6162;0.7101;0.7105;0.7101;0.7101;0.6667;0.6836;0.6667;0.6659;0.77;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 922};SVC(C=10, kernel='linear', probability=True, random_state=922)
SVC;0.6102;0.6937;0.6102;0.5956;0.7246;0.7357;0.7246;0.7228;0.6667;0.6836;0.6667;0.6659;0.7658;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 922};SVC(C=10, kernel='linear', probability=True, random_state=922)
SVC;0.6279;0.7051;0.6279;0.6146;0.6377;0.6366;0.6377;0.6292;0.6667;0.6841;0.6667;0.6656;0.7805;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 234};SVC(C=10, kernel='linear', probability=True, random_state=234)
SVC;0.6087;0.6938;0.6087;0.5968;0.7536;0.7764;0.7536;0.7561;0.6667;0.6841;0.6667;0.6656;0.7621;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 453};SVC(C=1, kernel='linear', probability=True, random_state=453)
MLPClassifier;0.7633;0.7896;0.7633;0.7637;0.6667;0.6778;0.6667;0.6589;0.6667;0.6841;0.6667;0.6656;0.8997;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
MLPClassifier;0.7439;0.7645;0.7439;0.7425;0.7536;0.7851;0.7536;0.7552;0.6667;0.7008;0.6667;0.6646;0.8712;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
MLPClassifier;0.723;0.7471;0.723;0.7202;0.8261;0.8536;0.8261;0.8254;0.6667;0.7263;0.6667;0.6633;0.8728;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
LogisticRegression;0.6795;0.6937;0.6795;0.6763;0.5942;0.5986;0.5942;0.5948;0.65;0.6702;0.65;0.6532;0.8343;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 668, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=668)"
KNeighborsClassifier;0.8067;0.8201;0.8067;0.8057;0.8986;0.8984;0.8986;0.8982;0.65;0.6582;0.65;0.6523;0.9382;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.7439;0.7684;0.7439;0.7419;0.7391;0.7514;0.7391;0.7415;0.65;0.6645;0.65;0.6501;0.8757;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
SVC;0.6103;0.692;0.6103;0.5987;0.6667;0.7162;0.6667;0.6684;0.65;0.6685;0.65;0.65;0.7692;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 234};SVC(C=1, kernel='linear', probability=True, random_state=234)
MLPClassifier;0.7632;0.7885;0.7632;0.7645;0.5797;0.631;0.5797;0.5752;0.65;0.6685;0.65;0.6465;0.8886;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
MLPClassifier;0.7504;0.7714;0.7504;0.7509;0.7246;0.7502;0.7246;0.7289;0.65;0.7162;0.65;0.6462;0.8831;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
MLPClassifier;0.7457;0.77;0.7457;0.7451;0.7536;0.7984;0.7536;0.7545;0.65;0.7162;0.65;0.6462;0.8822;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
MLPClassifier;0.7522;0.7748;0.7522;0.7516;0.7101;0.7276;0.7101;0.7137;0.6333;0.6711;0.6333;0.6357;0.8823;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
MLPClassifier;0.7471;0.7674;0.7471;0.7477;0.7246;0.7317;0.7246;0.7263;0.6333;0.6501;0.6333;0.6353;0.885;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
MLPClassifier;0.7279;0.7514;0.7279;0.728;0.6377;0.6618;0.6377;0.6338;0.6333;0.6627;0.6333;0.6345;0.8832;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
MLPClassifier;0.7746;0.8009;0.7746;0.7716;0.6087;0.7021;0.6087;0.6085;0.6333;0.6693;0.6333;0.6325;0.892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
MLPClassifier;0.7297;0.7584;0.7297;0.7301;0.6377;0.6789;0.6377;0.6306;0.6333;0.6693;0.6333;0.6325;0.8806;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
MLPClassifier;0.7747;0.7969;0.7747;0.773;0.6087;0.6254;0.6087;0.6126;0.6333;0.6473;0.6333;0.632;0.8912;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
MLPClassifier;0.7376;0.7561;0.7376;0.7397;0.6522;0.6529;0.6522;0.6524;0.6333;0.6353;0.6333;0.6319;0.8681;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
RandomForestClassifier;0.8405;0.8508;0.8405;0.8406;0.8986;0.9012;0.8986;0.8991;0.6333;0.6336;0.6333;0.6316;0.9639;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 976};RandomForestClassifier(n_estimators=20, random_state=976)
MLPClassifier;0.768;0.7925;0.768;0.7677;0.5797;0.611;0.5797;0.5777;0.6333;0.6893;0.6333;0.6263;0.891;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
MLPClassifier;0.7439;0.7721;0.7439;0.7462;0.6522;0.6479;0.6522;0.6399;0.6333;0.6681;0.6333;0.6259;0.8811;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
MLPClassifier;0.7842;0.806;0.7842;0.7831;0.5217;0.5371;0.5217;0.5279;0.6167;0.6385;0.6167;0.619;0.8939;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
MLPClassifier;0.7391;0.7589;0.7391;0.7379;0.7391;0.74;0.7391;0.7296;0.6333;0.6667;0.6333;0.6178;0.8769;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
MLPClassifier;0.7198;0.7433;0.7198;0.7193;0.6812;0.7356;0.6812;0.6789;0.6167;0.6528;0.6167;0.6174;0.8851;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 377, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=377)
DecisionTreeClassifier;0.8341;0.8389;0.8341;0.8321;0.7826;0.7932;0.7826;0.7821;0.6167;0.618;0.6167;0.6166;0.9306;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 728};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=728)
MLPClassifier;0.747;0.7652;0.747;0.7474;0.7971;0.8358;0.7971;0.7849;0.6167;0.6534;0.6167;0.6073;0.8818;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 897, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=897)
MLPClassifier;0.7441;0.7665;0.7441;0.7423;0.6087;0.5797;0.6087;0.5787;0.5833;0.6161;0.5833;0.5493;0.8885;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
MLPClassifier;0.7456;0.7702;0.7456;0.7426;0.6377;0.7936;0.6377;0.5431;0.5167;0.6888;0.5167;0.4385;0.87;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 691, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=691)
