Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8674;0.8689;0.8674;0.867;0.875;0.8806;0.875;0.8762;0.8833;0.8857;0.8833;0.8831;0.9006;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
MLPClassifier;0.8009;0.8075;0.8009;0.802;0.9097;0.912;0.9097;0.9092;0.8667;0.8699;0.8667;0.8659;0.941;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
RandomForestClassifier;0.8835;0.8872;0.8835;0.884;0.8681;0.8703;0.8681;0.8687;0.85;0.8579;0.85;0.8507;0.9718;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
MLPClassifier;0.8063;0.814;0.8063;0.8077;0.875;0.8764;0.875;0.8745;0.85;0.8524;0.85;0.8497;0.9444;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
MLPClassifier;0.8017;0.8057;0.8017;0.8019;0.8958;0.8957;0.8958;0.8956;0.85;0.8565;0.85;0.8493;0.9412;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8117;0.817;0.8117;0.8122;0.8333;0.832;0.8333;0.8323;0.85;0.8565;0.85;0.8493;0.944;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8017;0.8077;0.8017;0.8022;0.9028;0.9067;0.9028;0.9039;0.85;0.8565;0.85;0.8493;0.9428;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
RandomForestClassifier;0.8811;0.8845;0.8811;0.8815;0.8681;0.8712;0.8681;0.8688;0.8333;0.8449;0.8333;0.8363;0.9725;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
RandomForestClassifier;0.8788;0.8844;0.8788;0.8793;0.9236;0.9238;0.9236;0.9231;0.8333;0.8465;0.8333;0.8354;0.9716;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 85};RandomForestClassifier(n_estimators=20, random_state=85)
RandomForestClassifier;0.8765;0.8782;0.8765;0.8767;0.8681;0.869;0.8681;0.8677;0.8333;0.8391;0.8333;0.8348;0.9742;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
RandomForestClassifier;0.8842;0.8857;0.8842;0.8845;0.875;0.8837;0.875;0.8758;0.8333;0.8411;0.8333;0.8346;0.9726;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 85};RandomForestClassifier(n_estimators=10, random_state=85)
RandomForestClassifier;0.8811;0.8846;0.8811;0.8816;0.8611;0.8638;0.8611;0.86;0.8333;0.8444;0.8333;0.8345;0.976;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
KNeighborsClassifier;0.8295;0.8379;0.8295;0.8307;0.8333;0.839;0.8333;0.8348;0.8333;0.8372;0.8333;0.8339;0.9439;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.8093;0.8145;0.8093;0.8097;0.8958;0.8954;0.8958;0.8943;0.8333;0.8379;0.8333;0.8333;0.9426;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
MLPClassifier;0.8148;0.8241;0.8148;0.8163;0.8542;0.8557;0.8542;0.8548;0.8333;0.8379;0.8333;0.8333;0.944;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
MLPClassifier;0.811;0.8179;0.811;0.8114;0.8819;0.8819;0.8819;0.8819;0.8333;0.8437;0.8333;0.8325;0.9418;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8086;0.8157;0.8086;0.8091;0.8889;0.8939;0.8889;0.8894;0.8333;0.8437;0.8333;0.8325;0.9437;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8102;0.8152;0.8102;0.8107;0.8889;0.8891;0.8889;0.8881;0.8333;0.8437;0.8333;0.8325;0.9427;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8071;0.8124;0.8071;0.8075;0.8472;0.8469;0.8472;0.8455;0.8333;0.8437;0.8333;0.8325;0.942;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8071;0.8158;0.8071;0.8083;0.8681;0.869;0.8681;0.8685;0.8333;0.8437;0.8333;0.8325;0.9414;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8102;0.8173;0.8102;0.811;0.8681;0.8826;0.8681;0.8697;0.8333;0.8387;0.8333;0.8317;0.9397;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
MLPClassifier;0.8063;0.8127;0.8063;0.8071;0.8542;0.8588;0.8542;0.8552;0.8333;0.8387;0.8333;0.8317;0.9453;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8047;0.8129;0.8047;0.806;0.8958;0.8953;0.8958;0.8954;0.8333;0.8387;0.8333;0.8317;0.9415;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
RandomForestClassifier;0.8727;0.8756;0.8727;0.8729;0.8819;0.8869;0.8819;0.8833;0.8167;0.8253;0.8167;0.8183;0.973;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.8819;0.8863;0.8819;0.8824;0.8611;0.8651;0.8611;0.8623;0.8167;0.8234;0.8167;0.8178;0.9741;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
RandomForestClassifier;0.8828;0.8854;0.8828;0.8831;0.9028;0.9026;0.9028;0.9026;0.8167;0.8201;0.8167;0.8173;0.9731;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 85};RandomForestClassifier(n_estimators=5, random_state=85)
KNeighborsClassifier;0.8187;0.8252;0.8187;0.8194;0.875;0.8776;0.875;0.8755;0.8167;0.8238;0.8167;0.8172;0.9472;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.814;0.8236;0.814;0.815;0.8889;0.8903;0.8889;0.889;0.8167;0.819;0.8167;0.8168;0.9452;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8218;0.8322;0.8218;0.823;0.8125;0.8171;0.8125;0.8133;0.8167;0.819;0.8167;0.8168;0.9465;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8117;0.8224;0.8117;0.8128;0.875;0.8771;0.875;0.8752;0.8167;0.8172;0.8167;0.8166;0.947;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8109;0.8174;0.8109;0.8118;0.8472;0.8526;0.8472;0.8486;0.8167;0.8241;0.8167;0.8166;0.944;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.7993;0.8066;0.7993;0.8004;0.875;0.874;0.875;0.8743;0.8167;0.8241;0.8167;0.8166;0.9422;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
DecisionTreeClassifier;0.8604;0.8661;0.8604;0.8606;0.8681;0.8797;0.8681;0.8704;0.8167;0.8248;0.8167;0.8165;0.8953;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
KNeighborsClassifier;0.8233;0.8328;0.8233;0.8245;0.8542;0.8542;0.8542;0.8542;0.8167;0.8187;0.8167;0.8163;0.9455;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8264;0.8344;0.8264;0.8276;0.8819;0.8838;0.8819;0.8825;0.8167;0.8187;0.8167;0.8163;0.9489;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8148;0.8204;0.8148;0.8156;0.8403;0.8482;0.8403;0.8405;0.8167;0.8318;0.8167;0.8159;0.9443;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
RandomForestClassifier;0.8904;0.8935;0.8904;0.8905;0.8611;0.865;0.8611;0.8621;0.8167;0.8263;0.8167;0.8154;0.9756;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
MLPClassifier;0.8125;0.8191;0.8125;0.8131;0.8819;0.8835;0.8819;0.8825;0.8167;0.8316;0.8167;0.8153;0.9432;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8087;0.814;0.8087;0.8093;0.8403;0.8468;0.8403;0.8416;0.8167;0.8252;0.8167;0.8149;0.9412;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
MLPClassifier;0.8195;0.8264;0.8195;0.8203;0.8472;0.8523;0.8472;0.8488;0.8167;0.8252;0.8167;0.8149;0.944;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8087;0.8171;0.8087;0.8101;0.8472;0.8476;0.8472;0.8474;0.8167;0.8252;0.8167;0.8149;0.9449;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
MLPClassifier;0.8025;0.8087;0.8025;0.8029;0.8889;0.8898;0.8889;0.8892;0.8167;0.8311;0.8167;0.8148;0.9421;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8017;0.809;0.8017;0.8031;0.8819;0.8853;0.8819;0.8823;0.8167;0.8257;0.8167;0.8142;0.941;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8079;0.8138;0.8079;0.8086;0.8472;0.8499;0.8472;0.8481;0.8167;0.8257;0.8167;0.8142;0.9451;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
RandomForestClassifier;0.8812;0.8849;0.8812;0.8813;0.875;0.8804;0.875;0.8757;0.8;0.8101;0.8;0.8024;0.9758;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.8819;0.8857;0.8819;0.8825;0.875;0.8745;0.875;0.8747;0.8;0.8101;0.8;0.8024;0.9726;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
RandomForestClassifier;0.8742;0.8789;0.8742;0.8746;0.9097;0.9125;0.9097;0.9104;0.8;0.8189;0.8;0.8023;0.9743;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.8889;0.8933;0.8889;0.8895;0.875;0.8818;0.875;0.8756;0.8;0.8153;0.8;0.802;0.9741;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.8811;0.8836;0.8811;0.8813;0.8542;0.8638;0.8542;0.8562;0.8;0.8101;0.8;0.8019;0.9747;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 85};RandomForestClassifier(n_estimators=20, random_state=85)
DecisionTreeClassifier;0.8634;0.8651;0.8634;0.8634;0.8194;0.8231;0.8194;0.8204;0.8;0.8039;0.8;0.8005;0.8976;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
MLPClassifier;0.8056;0.8121;0.8056;0.8059;0.8472;0.8764;0.8472;0.851;0.8;0.8057;0.8;0.8003;0.9435;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
RandomForestClassifier;0.882;0.8842;0.882;0.8824;0.8542;0.8558;0.8542;0.8537;0.8;0.8093;0.8;0.8003;0.9739;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 85};RandomForestClassifier(n_estimators=20, random_state=85)
KNeighborsClassifier;0.8202;0.8272;0.8202;0.821;0.8681;0.8685;0.8681;0.8682;0.8;0.8049;0.8;0.8002;0.944;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8542;0.8589;0.8542;0.8546;0.8819;0.8901;0.8819;0.8838;0.8;0.8119;0.8;0.8001;0.8907;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
RandomForestClassifier;0.8827;0.8862;0.8827;0.8827;0.8819;0.888;0.8819;0.8833;0.8;0.8039;0.8;0.7998;0.9742;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
KNeighborsClassifier;0.814;0.8214;0.814;0.8151;0.8472;0.8634;0.8472;0.8489;0.8;0.8016;0.8;0.7997;0.9468;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8071;0.814;0.8071;0.8083;0.8819;0.8816;0.8819;0.8816;0.8;0.8108;0.8;0.7996;0.9425;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 530, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=530)
DecisionTreeClassifier;0.8596;0.8619;0.8596;0.8587;0.8889;0.8889;0.8889;0.8888;0.8;0.8019;0.8;0.7985;0.8946;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
MLPClassifier;0.8094;0.8171;0.8094;0.81;0.8264;0.8307;0.8264;0.8278;0.8;0.813;0.8;0.7978;0.9444;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
MLPClassifier;0.8087;0.8154;0.8087;0.8101;0.875;0.8768;0.875;0.8741;0.8;0.8056;0.8;0.7969;0.9436;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8117;0.8186;0.8117;0.8127;0.875;0.8757;0.875;0.8753;0.8;0.8056;0.8;0.7969;0.9423;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 843, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=843)
DecisionTreeClassifier;0.865;0.8685;0.865;0.8645;0.875;0.8759;0.875;0.8736;0.8;0.8073;0.8;0.7965;0.8987;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
SVC;0.7376;0.7517;0.7376;0.7374;0.8264;0.8377;0.8264;0.8278;0.7833;0.7984;0.7833;0.786;0.8913;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.7509;0.7599;0.7509;0.7517;0.8472;0.873;0.8472;0.8497;0.7833;0.8012;0.7833;0.7844;0.8945;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
RandomForestClassifier;0.8788;0.8821;0.8788;0.879;0.8472;0.8547;0.8472;0.8487;0.7833;0.7905;0.7833;0.7844;0.9714;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 85};RandomForestClassifier(n_estimators=20, random_state=85)
SVC;0.7523;0.7599;0.7523;0.7531;0.8333;0.8381;0.8333;0.8324;0.7833;0.7999;0.7833;0.7842;0.8997;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
SVC;0.7236;0.7461;0.7236;0.7252;0.8681;0.8741;0.8681;0.8695;0.7833;0.7999;0.7833;0.7842;0.887;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
DecisionTreeClassifier;0.858;0.8618;0.858;0.8575;0.8611;0.8654;0.8611;0.8625;0.7833;0.7905;0.7833;0.7838;0.8934;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
DecisionTreeClassifier;0.8657;0.8675;0.8657;0.8649;0.8403;0.8447;0.8403;0.8415;0.7833;0.7847;0.7833;0.7837;0.8994;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
RandomForestClassifier;0.8866;0.8894;0.8866;0.8865;0.9167;0.9168;0.9167;0.9157;0.7833;0.7883;0.7833;0.7836;0.9735;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 85};RandomForestClassifier(n_estimators=20, random_state=85)
RandomForestClassifier;0.8812;0.8846;0.8812;0.8817;0.875;0.8788;0.875;0.8762;0.7833;0.7883;0.7833;0.7836;0.9747;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 85};RandomForestClassifier(n_estimators=20, random_state=85)
KNeighborsClassifier;0.8341;0.8396;0.8341;0.8343;0.8056;0.8114;0.8056;0.8075;0.7833;0.7857;0.7833;0.7835;0.9528;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8179;0.8257;0.8179;0.8193;0.8681;0.8746;0.8681;0.8687;0.7833;0.7913;0.7833;0.7833;0.9472;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8171;0.823;0.8171;0.8179;0.8819;0.8851;0.8819;0.8829;0.7833;0.7838;0.7833;0.7832;0.9478;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8171;0.8273;0.8171;0.8177;0.8958;0.8964;0.8958;0.8953;0.7833;0.7838;0.7833;0.7832;0.9499;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8218;0.827;0.8218;0.8228;0.8611;0.8616;0.8611;0.8609;0.7833;0.7873;0.7833;0.7831;0.9446;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8318;0.8395;0.8318;0.8326;0.8681;0.8707;0.8681;0.8687;0.7833;0.7854;0.7833;0.783;0.9489;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8372;0.8439;0.8372;0.8379;0.8611;0.8654;0.8611;0.8607;0.7833;0.7868;0.7833;0.7826;0.9467;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8858;0.8888;0.8858;0.8863;0.8611;0.8607;0.8611;0.8601;0.7833;0.7934;0.7833;0.7826;0.9753;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.8843;0.8877;0.8843;0.8849;0.875;0.8739;0.875;0.874;0.7667;0.7789;0.7667;0.7697;0.9731;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.8688;0.8721;0.8688;0.8692;0.9167;0.9172;0.9167;0.9166;0.7667;0.7736;0.7667;0.7688;0.9732;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
SVC;0.7562;0.7658;0.7562;0.7569;0.8264;0.8629;0.8264;0.83;0.7667;0.7854;0.7667;0.7687;0.8986;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.7454;0.7565;0.7454;0.7471;0.8264;0.8367;0.8264;0.8277;0.7667;0.7854;0.7667;0.7687;0.8945;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
SVC;0.733;0.7448;0.733;0.7331;0.8958;0.9035;0.8958;0.8975;0.7667;0.7854;0.7667;0.7687;0.8844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
SVC;0.74;0.7488;0.74;0.741;0.8125;0.8373;0.8125;0.816;0.7667;0.7854;0.7667;0.7687;0.8952;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
SVC;0.7439;0.7579;0.7439;0.7453;0.8958;0.9012;0.8958;0.8969;0.7667;0.7854;0.7667;0.7687;0.8913;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
SVC;0.7438;0.7571;0.7438;0.7456;0.8194;0.8518;0.8194;0.8227;0.7667;0.7854;0.7667;0.7687;0.8955;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
SVC;0.7446;0.7612;0.7446;0.7449;0.8264;0.8502;0.8264;0.829;0.7667;0.7878;0.7667;0.7685;0.8893;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.7547;0.7645;0.7547;0.7547;0.8125;0.8403;0.8125;0.817;0.7667;0.7878;0.7667;0.7685;0.8956;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
RandomForestClassifier;0.8812;0.8847;0.8812;0.8811;0.8819;0.8828;0.8819;0.8823;0.7667;0.7853;0.7667;0.7681;0.9744;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
SVC;0.7492;0.7549;0.7492;0.7479;0.7986;0.8052;0.7986;0.8006;0.7667;0.7775;0.7667;0.7675;0.8951;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.75;0.7538;0.75;0.7486;0.8403;0.8584;0.8403;0.8426;0.7667;0.7775;0.7667;0.7675;0.8963;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
KNeighborsClassifier;0.8225;0.8307;0.8225;0.8234;0.875;0.8784;0.875;0.8757;0.7667;0.7698;0.7667;0.7672;0.9482;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8711;0.8731;0.8711;0.8707;0.8542;0.8585;0.8542;0.8552;0.7667;0.7702;0.7667;0.7671;0.9034;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
RandomForestClassifier;0.8804;0.8845;0.8804;0.881;0.8611;0.8696;0.8611;0.8599;0.7667;0.768;0.7667;0.767;0.9732;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 85};RandomForestClassifier(n_estimators=10, random_state=85)
SVC;0.7377;0.7488;0.7377;0.7382;0.8125;0.8246;0.8125;0.8148;0.7667;0.7902;0.7667;0.7669;0.8923;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
SVC;0.7539;0.7649;0.7539;0.7534;0.7639;0.7912;0.7639;0.7681;0.7667;0.7778;0.7667;0.7668;0.8984;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
RandomForestClassifier;0.8796;0.8836;0.8796;0.8801;0.9097;0.9108;0.9097;0.9101;0.7667;0.7667;0.7667;0.7667;0.9734;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
KNeighborsClassifier;0.814;0.8222;0.814;0.8152;0.9097;0.9099;0.9097;0.9092;0.7667;0.7671;0.7667;0.7666;0.948;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8264;0.8346;0.8264;0.8274;0.8542;0.8577;0.8542;0.8552;0.7667;0.7671;0.7667;0.7666;0.9463;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8318;0.8421;0.8318;0.8334;0.8889;0.8943;0.8889;0.8889;0.7667;0.7671;0.7667;0.7666;0.9521;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8202;0.8282;0.8202;0.821;0.875;0.8758;0.875;0.8749;0.7667;0.7709;0.7667;0.7664;0.9478;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8133;0.8195;0.8133;0.8139;0.8681;0.8701;0.8681;0.8682;0.7667;0.7731;0.7667;0.7663;0.9456;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.814;0.8223;0.814;0.8147;0.8819;0.8821;0.8819;0.8812;0.7667;0.7709;0.7667;0.7658;0.9462;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8557;0.8595;0.8557;0.856;0.8681;0.8685;0.8681;0.8675;0.7667;0.7701;0.7667;0.7656;0.8918;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
DecisionTreeClassifier;0.8626;0.8643;0.8626;0.8624;0.8264;0.833;0.8264;0.8284;0.7667;0.7727;0.7667;0.7641;0.8969;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
RandomForestClassifier;0.8827;0.8856;0.8827;0.883;0.8403;0.8407;0.8403;0.8402;0.75;0.7632;0.75;0.754;0.9743;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 85};RandomForestClassifier(n_estimators=20, random_state=85)
RandomForestClassifier;0.8819;0.885;0.8819;0.8823;0.8333;0.831;0.8333;0.8311;0.75;0.7703;0.75;0.7528;0.974;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
SVC;0.7538;0.7673;0.7538;0.7551;0.7431;0.7689;0.7431;0.748;0.75;0.7703;0.75;0.7528;0.8967;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.7592;0.7785;0.7592;0.7619;0.8264;0.8543;0.8264;0.8254;0.75;0.7703;0.75;0.7528;0.9004;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.7523;0.7663;0.7523;0.7543;0.8681;0.8778;0.8681;0.8698;0.75;0.7703;0.75;0.7528;0.8934;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
RandomForestClassifier;0.8865;0.8897;0.8865;0.8867;0.9097;0.9108;0.9097;0.9101;0.75;0.7682;0.75;0.7527;0.9745;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
SVC;0.7493;0.7638;0.7493;0.7503;0.8194;0.8305;0.8194;0.8208;0.75;0.7614;0.75;0.7513;0.8978;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
SVC;0.7376;0.7501;0.7376;0.7384;0.8403;0.8688;0.8403;0.8433;0.75;0.7742;0.75;0.7513;0.8911;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.7268;0.7469;0.7268;0.7265;0.7778;0.8089;0.7778;0.7816;0.75;0.7742;0.75;0.7513;0.8932;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
SVC;0.7477;0.7613;0.7477;0.7486;0.8403;0.8546;0.8403;0.8424;0.75;0.7616;0.75;0.7512;0.8944;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
SVC;0.736;0.7511;0.736;0.7369;0.8194;0.839;0.8194;0.822;0.75;0.7616;0.75;0.7512;0.8957;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
DecisionTreeClassifier;0.8649;0.8683;0.8649;0.8652;0.8333;0.8425;0.8333;0.8353;0.75;0.7521;0.75;0.7507;0.8988;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
KNeighborsClassifier;0.8194;0.8258;0.8194;0.8202;0.8333;0.8514;0.8333;0.8352;0.75;0.7513;0.75;0.7503;0.9467;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8171;0.8232;0.8171;0.8176;0.8611;0.862;0.8611;0.861;0.75;0.755;0.75;0.7501;0.9481;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8063;0.8152;0.8063;0.8078;0.8958;0.9003;0.8958;0.896;0.75;0.75;0.75;0.75;0.9432;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8109;0.8183;0.8109;0.8118;0.8889;0.9048;0.8889;0.8904;0.75;0.7505;0.75;0.7499;0.9391;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8209;0.8286;0.8209;0.8222;0.8819;0.8852;0.8819;0.8828;0.75;0.7512;0.75;0.7497;0.9484;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8172;0.8252;0.8172;0.8183;0.8819;0.89;0.8819;0.8836;0.75;0.7496;0.75;0.7495;0.9444;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.892;0.8931;0.892;0.892;0.8542;0.8606;0.8542;0.8546;0.75;0.7583;0.75;0.7488;0.9749;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
DecisionTreeClassifier;0.8627;0.8663;0.8627;0.8628;0.875;0.8769;0.875;0.8757;0.75;0.7542;0.75;0.7482;0.897;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
SVC;0.7507;0.7632;0.7507;0.7521;0.8333;0.8436;0.8333;0.835;0.7333;0.7558;0.7333;0.7373;0.8941;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
SVC;0.7546;0.7621;0.7546;0.7548;0.7847;0.8078;0.7847;0.7879;0.7333;0.7458;0.7333;0.735;0.8994;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
DecisionTreeClassifier;0.865;0.8667;0.865;0.8641;0.8472;0.847;0.8472;0.8469;0.7333;0.7522;0.7333;0.7347;0.8987;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8619;0.8662;0.8619;0.8622;0.8472;0.8578;0.8472;0.849;0.7333;0.7399;0.7333;0.7342;0.8964;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8696;0.8703;0.8696;0.869;0.8403;0.8469;0.8403;0.8421;0.7333;0.7397;0.7333;0.7336;0.9022;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.875;0.8783;0.875;0.8749;0.8125;0.8135;0.8125;0.8123;0.7333;0.7377;0.7333;0.7334;0.9062;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
SVC;0.7453;0.7556;0.7453;0.7465;0.8681;0.8841;0.8681;0.8699;0.7333;0.7634;0.7333;0.7334;0.8972;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 234};SVC(C=10, probability=True, random_state=234)
KNeighborsClassifier;0.8279;0.8409;0.8279;0.8292;0.8472;0.8479;0.8472;0.8473;0.7333;0.7337;0.7333;0.7332;0.9466;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8526;0.8548;0.8526;0.852;0.8958;0.9;0.8958;0.8966;0.7333;0.7328;0.7333;0.7328;0.8895;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
DecisionTreeClassifier;0.8695;0.8704;0.8695;0.8689;0.8403;0.8441;0.8403;0.8412;0.7333;0.7398;0.7333;0.7305;0.9021;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
DecisionTreeClassifier;0.8596;0.8637;0.8596;0.8596;0.875;0.8758;0.875;0.8752;0.7333;0.7425;0.7333;0.7277;0.8947;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
SVC;0.7539;0.7709;0.7539;0.7561;0.8403;0.8455;0.8403;0.84;0.7167;0.7451;0.7167;0.7203;0.8952;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 153};SVC(C=10, probability=True, random_state=153)
SVC;0.7445;0.7629;0.7445;0.7463;0.8194;0.8336;0.8194;0.8189;0.7167;0.7311;0.7167;0.7196;0.8948;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
SVC;0.7322;0.7525;0.7322;0.7339;0.8403;0.847;0.8403;0.841;0.7167;0.7353;0.7167;0.7188;0.8887;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 93};SVC(C=10, probability=True, random_state=93)
DecisionTreeClassifier;0.8565;0.8591;0.8565;0.8562;0.875;0.8784;0.875;0.8754;0.7167;0.7248;0.7167;0.7169;0.8922;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
DecisionTreeClassifier;0.8735;0.8766;0.8735;0.8734;0.8472;0.8486;0.8472;0.8477;0.7;0.7102;0.7;0.7011;0.9051;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8765;0.8784;0.8765;0.8758;0.8472;0.8524;0.8472;0.8487;0.7;0.7032;0.7;0.7004;0.9074;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8696;0.8707;0.8696;0.8695;0.8542;0.8588;0.8542;0.855;0.7;0.6995;0.7;0.6986;0.9023;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8565;0.8599;0.8565;0.8559;0.875;0.8779;0.875;0.8757;0.7;0.7037;0.7;0.6986;0.8923;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 527};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=527)
DecisionTreeClassifier;0.8673;0.8699;0.8673;0.8676;0.875;0.8757;0.875;0.8728;0.7;0.7015;0.7;0.6917;0.9005;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8658;0.8678;0.8658;0.8657;0.8542;0.8519;0.8542;0.8517;0.6833;0.6811;0.6833;0.6802;0.8993;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8596;0.8599;0.8596;0.8591;0.8472;0.8483;0.8472;0.8445;0.6833;0.6814;0.6833;0.6766;0.8947;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8572;0.8589;0.8572;0.857;0.8681;0.8733;0.8681;0.8696;0.6833;0.6822;0.6833;0.6757;0.893;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8773;0.8799;0.8773;0.8773;0.8542;0.8612;0.8542;0.8554;0.6667;0.6639;0.6667;0.6609;0.908;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
LogisticRegression;0.6373;0.6412;0.6373;0.6375;0.625;0.6395;0.625;0.6251;0.5167;0.5243;0.5167;0.5176;0.8264;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6327;0.6369;0.6327;0.6321;0.5556;0.5641;0.5556;0.5558;0.5167;0.5243;0.5167;0.5176;0.8306;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6219;0.6268;0.6219;0.6216;0.6944;0.701;0.6944;0.6948;0.5167;0.5243;0.5167;0.5176;0.818;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6249;0.6313;0.6249;0.6246;0.6667;0.6731;0.6667;0.6649;0.5167;0.5243;0.5167;0.5176;0.8238;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6282;0.6326;0.6282;0.6285;0.5486;0.5617;0.5486;0.5497;0.5167;0.5243;0.5167;0.5176;0.83;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6249;0.6267;0.6249;0.6249;0.6528;0.6592;0.6528;0.6545;0.5;0.5091;0.5;0.5001;0.8215;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6234;0.6283;0.6234;0.6236;0.6319;0.6403;0.6319;0.6344;0.5;0.5091;0.5;0.5001;0.8229;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6258;0.6318;0.6258;0.6264;0.6806;0.6933;0.6806;0.6819;0.5;0.5091;0.5;0.5001;0.8251;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6396;0.6454;0.6396;0.6395;0.5694;0.5668;0.5694;0.5661;0.5;0.5091;0.5;0.5001;0.8311;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6474;0.6526;0.6474;0.6476;0.5069;0.5052;0.5069;0.5;0.5;0.5057;0.5;0.5;0.8356;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6227;0.6267;0.6227;0.6226;0.6597;0.6758;0.6597;0.6621;0.5;0.5057;0.5;0.5;0.8199;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6218;0.627;0.6218;0.622;0.6319;0.6353;0.6319;0.6322;0.5;0.5057;0.5;0.5;0.8231;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6311;0.6354;0.6311;0.6294;0.6319;0.6303;0.6319;0.6276;0.5;0.5057;0.5;0.5;0.823;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6149;0.6204;0.6149;0.6145;0.6806;0.6806;0.6806;0.6801;0.5;0.5057;0.5;0.5;0.8233;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6211;0.6259;0.6211;0.621;0.6389;0.6524;0.6389;0.6407;0.5;0.5057;0.5;0.5;0.8193;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6373;0.6415;0.6373;0.6369;0.5833;0.5909;0.5833;0.5842;0.5;0.5057;0.5;0.5;0.8226;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6265;0.6313;0.6265;0.6264;0.6736;0.6743;0.6736;0.6738;0.5;0.5057;0.5;0.5;0.8178;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6181;0.6214;0.6181;0.6184;0.6736;0.6764;0.6736;0.6731;0.5;0.5057;0.5;0.5;0.8236;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6196;0.6226;0.6196;0.6195;0.6458;0.6463;0.6458;0.6439;0.5;0.5057;0.5;0.5;0.8246;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6234;0.6273;0.6234;0.6229;0.6528;0.6527;0.6528;0.6502;0.5;0.5057;0.5;0.5;0.8253;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6242;0.6302;0.6242;0.6247;0.6319;0.6404;0.6319;0.6308;0.5;0.5057;0.5;0.5;0.8242;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6235;0.6264;0.6235;0.6236;0.6042;0.6098;0.6042;0.6055;0.5;0.5057;0.5;0.5;0.8252;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6158;0.62;0.6158;0.6154;0.6667;0.6712;0.6667;0.6675;0.5;0.5057;0.5;0.5;0.8217;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6181;0.6245;0.6181;0.619;0.6319;0.6371;0.6319;0.6302;0.4833;0.4907;0.4833;0.4828;0.8208;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6227;0.6261;0.6227;0.6215;0.6736;0.6761;0.6736;0.6743;0.4833;0.4907;0.4833;0.4828;0.823;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6242;0.6271;0.6242;0.6224;0.6319;0.6514;0.6319;0.6363;0.4833;0.4907;0.4833;0.4828;0.8242;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 381, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=381)"
LogisticRegression;0.6265;0.6296;0.6265;0.626;0.6042;0.61;0.6042;0.6007;0.4833;0.4907;0.4833;0.4828;0.8241;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6228;0.6287;0.6228;0.6223;0.625;0.6329;0.625;0.6249;0.4833;0.487;0.4833;0.482;0.8223;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
LogisticRegression;0.6196;0.626;0.6196;0.6186;0.6528;0.6508;0.6528;0.6505;0.4833;0.487;0.4833;0.482;0.8231;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6135;0.6172;0.6135;0.6127;0.6597;0.6597;0.6597;0.6597;0.4667;0.4722;0.4667;0.465;0.8199;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 627, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=627)"
