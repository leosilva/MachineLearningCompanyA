Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7584;0.7656;0.7584;0.7583;0.8261;0.8406;0.8261;0.8301;0.8333;0.8333;0.8333;0.8333;0.9;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7583;0.7722;0.7583;0.7599;0.8406;0.8556;0.8406;0.8435;0.8333;0.8338;0.8333;0.8322;0.9062;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7664;0.782;0.7664;0.766;0.7536;0.7467;0.7536;0.7485;0.8167;0.8187;0.8167;0.8163;0.9056;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7665;0.7751;0.7665;0.7657;0.7536;0.7638;0.7536;0.7566;0.8167;0.8175;0.8167;0.816;0.9138;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7809;0.7934;0.7809;0.7819;0.7536;0.7585;0.7536;0.7552;0.8167;0.822;0.8167;0.8148;0.9216;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7923;0.8041;0.7923;0.7929;0.8116;0.8314;0.8116;0.8149;0.8;0.8;0.8;0.8;0.9151;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7649;0.7705;0.7649;0.7624;0.7826;0.7994;0.7826;0.7855;0.8;0.8;0.8;0.8;0.911;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7536;0.7721;0.7536;0.7551;0.8116;0.8256;0.8116;0.813;0.8;0.8016;0.8;0.7997;0.908;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7698;0.7799;0.7698;0.7708;0.8261;0.8377;0.8261;0.8291;0.8;0.8042;0.8;0.7992;0.9084;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7648;0.7731;0.7648;0.7645;0.7681;0.7745;0.7681;0.7692;0.8;0.8002;0.8;0.7988;0.9088;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7713;0.795;0.7713;0.7744;0.8261;0.8402;0.8261;0.8289;0.8;0.7989;0.8;0.7985;0.911;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7843;0.7957;0.7843;0.7866;0.7826;0.8024;0.7826;0.7862;0.8;0.7989;0.8;0.7985;0.9174;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8147;0.8235;0.8147;0.8162;0.8261;0.8344;0.8261;0.8283;0.8;0.808;0.8;0.7969;0.9377;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 57};RandomForestClassifier(n_estimators=10, random_state=57)
KNeighborsClassifier;0.773;0.7829;0.773;0.7729;0.7681;0.7892;0.7681;0.7726;0.8;0.8011;0.8;0.7963;0.8974;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8147;0.822;0.8147;0.8149;0.8841;0.8839;0.8841;0.8837;0.8;0.8067;0.8;0.7957;0.9334;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8148;0.8225;0.8148;0.816;0.8696;0.8796;0.8696;0.872;0.8;0.8088;0.8;0.7918;0.9336;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 720};RandomForestClassifier(n_estimators=10, random_state=720)
SVC;0.5975;0.6145;0.5975;0.599;0.7391;0.8004;0.7391;0.7333;0.7833;0.7863;0.7833;0.7839;0.7869;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 306};SVC(C=0.1, kernel='linear', probability=True, random_state=306)
SVC;0.6038;0.6241;0.6038;0.6047;0.6232;0.663;0.6232;0.6247;0.7833;0.7863;0.7833;0.7839;0.7962;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 642};SVC(C=0.1, kernel='linear', probability=True, random_state=642)
SVC;0.6038;0.6147;0.6038;0.6004;0.7246;0.7589;0.7246;0.7261;0.7833;0.7863;0.7833;0.7839;0.7922;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
SVC;0.5908;0.5989;0.5908;0.5889;0.8406;0.8489;0.8406;0.8409;0.7833;0.7863;0.7833;0.7839;0.784;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
SVC;0.6006;0.6129;0.6006;0.5995;0.7391;0.7764;0.7391;0.7321;0.7833;0.7863;0.7833;0.7839;0.7889;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
SVC;0.5927;0.6087;0.5927;0.5875;0.7971;0.8137;0.7971;0.7973;0.7833;0.7863;0.7833;0.7839;0.7843;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 642};SVC(C=1, kernel='linear', probability=True, random_state=642)
SVC;0.6247;0.6577;0.6247;0.6274;0.7101;0.7585;0.7101;0.7157;0.7833;0.7863;0.7833;0.7839;0.7935;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 642};SVC(C=1, kernel='linear', probability=True, random_state=642)
SVC;0.6053;0.6216;0.6053;0.6038;0.6957;0.7387;0.6957;0.6929;0.7833;0.7863;0.7833;0.7839;0.7921;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 642};SVC(C=1, kernel='linear', probability=True, random_state=642)
SVC;0.6084;0.6132;0.6084;0.6076;0.8261;0.8469;0.8261;0.8278;0.7833;0.7863;0.7833;0.7839;0.7922;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 642};SVC(C=0.1, kernel='linear', probability=True, random_state=642)
SVC;0.6087;0.6304;0.6087;0.606;0.7681;0.7822;0.7681;0.7709;0.7833;0.7863;0.7833;0.7839;0.7834;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 306};SVC(C=0.1, kernel='linear', probability=True, random_state=306)
SVC;0.6183;0.6299;0.6183;0.6164;0.7246;0.7697;0.7246;0.7271;0.7833;0.7863;0.7833;0.7839;0.7879;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 306};SVC(C=0.1, kernel='linear', probability=True, random_state=306)
SVC;0.604;0.6118;0.604;0.6034;0.7391;0.7706;0.7391;0.7329;0.7833;0.7863;0.7833;0.7839;0.7916;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 306};SVC(C=0.1, kernel='linear', probability=True, random_state=306)
SVC;0.5893;0.6194;0.5893;0.5834;0.7246;0.7548;0.7246;0.7255;0.7833;0.7863;0.7833;0.7839;0.7933;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 306};SVC(C=10, kernel='linear', probability=True, random_state=306)
SVC;0.6021;0.6219;0.6021;0.6015;0.7246;0.7711;0.7246;0.7274;0.7833;0.7863;0.7833;0.7839;0.7839;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 642};SVC(C=0.1, kernel='linear', probability=True, random_state=642)
SVC;0.6071;0.6209;0.6071;0.6062;0.7826;0.7878;0.7826;0.7836;0.7833;0.7863;0.7833;0.7839;0.7951;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 306};SVC(C=0.1, kernel='linear', probability=True, random_state=306)
SVC;0.5926;0.6002;0.5926;0.5906;0.6667;0.7392;0.6667;0.6578;0.7833;0.7863;0.7833;0.7839;0.7915;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 306};SVC(C=10, kernel='linear', probability=True, random_state=306)
SVC;0.6135;0.6338;0.6135;0.6123;0.6812;0.7;0.6812;0.6799;0.7833;0.7863;0.7833;0.7839;0.7922;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 306};SVC(C=1, kernel='linear', probability=True, random_state=306)
SVC;0.5941;0.622;0.5941;0.5933;0.6812;0.7023;0.6812;0.6813;0.7833;0.7863;0.7833;0.7839;0.793;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
SVC;0.6025;0.6239;0.6025;0.6024;0.6957;0.7498;0.6957;0.6989;0.7833;0.7863;0.7833;0.7839;0.785;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
SVC;0.6183;0.6272;0.6183;0.6187;0.6812;0.7227;0.6812;0.6775;0.7833;0.7863;0.7833;0.7839;0.7909;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
SVC;0.5975;0.6015;0.5975;0.5962;0.6957;0.7282;0.6957;0.7009;0.7833;0.7863;0.7833;0.7839;0.7922;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
SVC;0.6038;0.6129;0.6038;0.6043;0.7971;0.8095;0.7971;0.7988;0.7833;0.7863;0.7833;0.7839;0.7839;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 220};SVC(C=1, kernel='linear', probability=True, random_state=220)
SVC;0.612;0.6278;0.612;0.6113;0.7246;0.7587;0.7246;0.7227;0.7833;0.7863;0.7833;0.7839;0.7876;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 220};SVC(C=1, kernel='linear', probability=True, random_state=220)
SVC;0.6022;0.6178;0.6022;0.6001;0.7536;0.7917;0.7536;0.7559;0.7833;0.7863;0.7833;0.7839;0.7841;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 220};SVC(C=0.1, kernel='linear', probability=True, random_state=220)
KNeighborsClassifier;0.7746;0.7872;0.7746;0.7746;0.7681;0.7965;0.7681;0.7739;0.7833;0.7821;0.7833;0.7824;0.8997;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7537;0.762;0.7537;0.7525;0.8551;0.8583;0.8551;0.8556;0.7833;0.7821;0.7833;0.7824;0.9069;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7811;0.7872;0.7811;0.7796;0.7971;0.795;0.7971;0.7943;0.7833;0.7821;0.7833;0.7824;0.9122;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8019;0.8094;0.8019;0.8029;0.942;0.943;0.942;0.9413;0.7833;0.7861;0.7833;0.7823;0.9348;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 57};RandomForestClassifier(n_estimators=10, random_state=57)
KNeighborsClassifier;0.7536;0.7644;0.7536;0.7543;0.7826;0.8004;0.7826;0.7866;0.7833;0.7835;0.7833;0.7821;0.9135;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8181;0.8257;0.8181;0.8188;0.8841;0.8862;0.8841;0.8839;0.7833;0.7922;0.7833;0.7807;0.9308;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8389;0.847;0.8389;0.839;0.8696;0.8774;0.8696;0.871;0.7833;0.7922;0.7833;0.7807;0.9423;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8357;0.8433;0.8357;0.8366;0.8696;0.8727;0.8696;0.8704;0.7833;0.7922;0.7833;0.7807;0.937;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8309;0.8339;0.8309;0.8301;0.8261;0.8348;0.8261;0.8272;0.7833;0.7922;0.7833;0.7807;0.9363;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8195;0.8245;0.8195;0.82;0.8116;0.8156;0.8116;0.8126;0.7833;0.7871;0.7833;0.7807;0.9438;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 57};RandomForestClassifier(n_estimators=10, random_state=57)
KNeighborsClassifier;0.7714;0.7834;0.7714;0.774;0.8116;0.8101;0.8116;0.8106;0.7833;0.7823;0.7833;0.7805;0.9122;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7472;0.759;0.7472;0.7479;0.8841;0.8924;0.8841;0.8856;0.7833;0.7823;0.7833;0.7805;0.9072;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.781;0.7844;0.781;0.7788;0.7971;0.8036;0.7971;0.7988;0.7833;0.7823;0.7833;0.7805;0.906;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7664;0.7815;0.7664;0.7661;0.7826;0.7931;0.7826;0.7824;0.7833;0.7823;0.7833;0.7805;0.9002;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7602;0.7678;0.7602;0.7588;0.8406;0.8472;0.8406;0.843;0.7833;0.7823;0.7833;0.7805;0.9097;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7618;0.7662;0.7618;0.7603;0.8406;0.8667;0.8406;0.8448;0.7833;0.7823;0.7833;0.7805;0.9094;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8405;0.8468;0.8405;0.84;0.7391;0.7563;0.7391;0.7437;0.7833;0.786;0.7833;0.7804;0.945;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 57};RandomForestClassifier(n_estimators=20, random_state=57)
KNeighborsClassifier;0.7794;0.7881;0.7794;0.7789;0.7681;0.7801;0.7681;0.7706;0.7833;0.786;0.7833;0.7804;0.9033;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7875;0.8003;0.7875;0.7893;0.7101;0.7162;0.7101;0.7123;0.7833;0.7816;0.7833;0.7801;0.9126;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8181;0.8233;0.8181;0.8188;0.8261;0.8333;0.8261;0.8265;0.7833;0.8041;0.7833;0.7787;0.9417;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 829};RandomForestClassifier(n_estimators=10, random_state=829)
RandomForestClassifier;0.8341;0.8457;0.8341;0.8347;0.7681;0.7865;0.7681;0.7733;0.7833;0.793;0.7833;0.7769;0.9531;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 720};RandomForestClassifier(n_estimators=5, random_state=720)
RandomForestClassifier;0.831;0.8365;0.831;0.8314;0.7681;0.7755;0.7681;0.7666;0.7833;0.793;0.7833;0.7769;0.9339;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 57};RandomForestClassifier(n_estimators=20, random_state=57)
RandomForestClassifier;0.8277;0.8423;0.8277;0.8283;0.8406;0.8491;0.8406;0.8413;0.7833;0.793;0.7833;0.7769;0.937;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 829};RandomForestClassifier(n_estimators=20, random_state=829)
SVC;0.5958;0.618;0.5958;0.5955;0.7971;0.8117;0.7971;0.7988;0.7667;0.7728;0.7667;0.7676;0.7825;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 306};SVC(C=0.1, kernel='linear', probability=True, random_state=306)
SVC;0.6136;0.6283;0.6136;0.6127;0.6812;0.7221;0.6812;0.6852;0.7667;0.7684;0.7667;0.7662;0.7864;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 642};SVC(C=1, kernel='linear', probability=True, random_state=642)
RandomForestClassifier;0.8342;0.8411;0.8342;0.8353;0.7681;0.8036;0.7681;0.7641;0.7667;0.7684;0.7667;0.7662;0.94;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 57};RandomForestClassifier(n_estimators=10, random_state=57)
SVC;0.6117;0.6227;0.6117;0.6104;0.7826;0.8085;0.7826;0.7781;0.7667;0.7684;0.7667;0.7662;0.7908;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 642};SVC(C=10, kernel='linear', probability=True, random_state=642)
KNeighborsClassifier;0.7779;0.7857;0.7779;0.7786;0.7391;0.7678;0.7391;0.7462;0.7667;0.7662;0.7667;0.7661;0.9133;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7955;0.8076;0.7955;0.7963;0.7536;0.7606;0.7536;0.7553;0.7667;0.7665;0.7667;0.7654;0.9221;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8243;0.8332;0.8243;0.8247;0.7971;0.7943;0.7971;0.7939;0.7667;0.7726;0.7667;0.7652;0.9373;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
KNeighborsClassifier;0.7731;0.7855;0.7731;0.7743;0.8261;0.825;0.8261;0.8245;0.7667;0.7646;0.7667;0.7647;0.9083;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8196;0.8238;0.8196;0.8199;0.8261;0.8289;0.8261;0.8236;0.7667;0.7708;0.7667;0.7646;0.9391;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 57};RandomForestClassifier(n_estimators=20, random_state=57)
RandomForestClassifier;0.8245;0.8285;0.8245;0.8245;0.7826;0.8247;0.7826;0.7805;0.7667;0.7706;0.7667;0.762;0.9473;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.826;0.8347;0.826;0.8269;0.8406;0.8475;0.8406;0.8423;0.7667;0.7781;0.7667;0.762;0.948;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 57};RandomForestClassifier(n_estimators=20, random_state=57)
RandomForestClassifier;0.8228;0.8277;0.8228;0.8222;0.8406;0.8441;0.8406;0.8392;0.7667;0.7781;0.7667;0.762;0.9421;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 829};RandomForestClassifier(n_estimators=10, random_state=829)
RandomForestClassifier;0.8406;0.8478;0.8406;0.8405;0.8696;0.8681;0.8696;0.8686;0.7667;0.7706;0.7667;0.7615;0.9436;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 829};RandomForestClassifier(n_estimators=20, random_state=829)
RandomForestClassifier;0.8228;0.8349;0.8228;0.823;0.7826;0.804;0.7826;0.7821;0.7667;0.7706;0.7667;0.7615;0.94;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 829};RandomForestClassifier(n_estimators=20, random_state=829)
SVC;0.5989;0.6141;0.5989;0.5983;0.7246;0.7492;0.7246;0.7215;0.75;0.7513;0.75;0.7497;0.7934;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 642};SVC(C=1, kernel='linear', probability=True, random_state=642)
SVC;0.5941;0.5979;0.5941;0.591;0.7391;0.7604;0.7391;0.7417;0.75;0.7513;0.75;0.7497;0.7855;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 306};SVC(C=1, kernel='linear', probability=True, random_state=306)
MLPClassifier;0.7666;0.7906;0.7666;0.7655;0.7536;0.7583;0.7536;0.7538;0.75;0.7535;0.75;0.749;0.9066;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
MLPClassifier;0.7696;0.7927;0.7696;0.7688;0.7536;0.7851;0.7536;0.7552;0.75;0.7546;0.75;0.7488;0.9107;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
SVC;0.596;0.6442;0.596;0.5931;0.7101;0.7198;0.7101;0.711;0.75;0.7513;0.75;0.7484;0.7906;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 642};SVC(C=10, kernel='linear', probability=True, random_state=642)
RandomForestClassifier;0.8358;0.8462;0.8358;0.8374;0.8406;0.8462;0.8406;0.8423;0.75;0.7561;0.75;0.7465;0.9416;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 829};RandomForestClassifier(n_estimators=10, random_state=829)
RandomForestClassifier;0.8277;0.8342;0.8277;0.828;0.7971;0.8006;0.7971;0.7981;0.75;0.7561;0.75;0.7465;0.9383;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 829};RandomForestClassifier(n_estimators=20, random_state=829)
KNeighborsClassifier;0.7731;0.7787;0.7731;0.7734;0.8261;0.8574;0.8261;0.8307;0.75;0.7483;0.75;0.7464;0.9086;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.8245;0.8306;0.8245;0.8245;0.8841;0.8899;0.8841;0.8858;0.75;0.7555;0.75;0.7461;0.9368;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 829};RandomForestClassifier(n_estimators=20, random_state=829)
RandomForestClassifier;0.8325;0.8427;0.8325;0.8328;0.8406;0.8406;0.8406;0.8406;0.75;0.7555;0.75;0.7461;0.9384;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 57};RandomForestClassifier(n_estimators=10, random_state=57)
RandomForestClassifier;0.8438;0.8553;0.8438;0.844;0.7826;0.7813;0.7826;0.781;0.75;0.7555;0.75;0.7461;0.9475;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 829};RandomForestClassifier(n_estimators=10, random_state=829)
DecisionTreeClassifier;0.8246;0.838;0.8246;0.8259;0.7681;0.7692;0.7681;0.7684;0.75;0.7503;0.75;0.746;0.915;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
KNeighborsClassifier;0.7631;0.7802;0.7631;0.7612;0.6957;0.7109;0.6957;0.7006;0.75;0.7503;0.75;0.746;0.912;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
RandomForestClassifier;0.8423;0.8488;0.8423;0.843;0.7971;0.8016;0.7971;0.7985;0.75;0.7503;0.75;0.746;0.9441;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
MLPClassifier;0.7586;0.7802;0.7586;0.7598;0.8696;0.8708;0.8696;0.8683;0.75;0.75;0.75;0.7449;0.9064;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
DecisionTreeClassifier;0.8149;0.8265;0.8149;0.8159;0.8261;0.8376;0.8261;0.8287;0.75;0.7559;0.75;0.7425;0.9179;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
MLPClassifier;0.77;0.7894;0.77;0.7698;0.6522;0.7265;0.6522;0.6537;0.7333;0.7642;0.7333;0.7377;0.9097;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
MLPClassifier;0.7633;0.7829;0.7633;0.7626;0.6667;0.8111;0.6667;0.6665;0.7333;0.7541;0.7333;0.7364;0.9086;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
LogisticRegression;0.7038;0.725;0.7038;0.704;0.6812;0.6808;0.6812;0.6807;0.7333;0.7392;0.7333;0.7339;0.8436;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
MLPClassifier;0.7796;0.7947;0.7796;0.7787;0.7826;0.8283;0.7826;0.7808;0.7333;0.7377;0.7333;0.7334;0.9134;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7748;0.7922;0.7748;0.7736;0.7681;0.7993;0.7681;0.771;0.7333;0.7403;0.7333;0.7331;0.9118;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
LogisticRegression;0.6828;0.7092;0.6828;0.6814;0.7826;0.7849;0.7826;0.7835;0.7333;0.735;0.7333;0.7329;0.8312;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
MLPClassifier;0.7536;0.777;0.7536;0.7551;0.7536;0.7964;0.7536;0.7587;0.7333;0.735;0.7333;0.7329;0.9033;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
MLPClassifier;0.7455;0.7674;0.7455;0.7463;0.8116;0.8406;0.8116;0.8148;0.7333;0.743;0.7333;0.7326;0.9066;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
MLPClassifier;0.7699;0.787;0.7699;0.7698;0.6957;0.7313;0.6957;0.6986;0.7333;0.7358;0.7333;0.7325;0.9163;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7617;0.7802;0.7617;0.762;0.7536;0.7828;0.7536;0.7443;0.7333;0.7358;0.7333;0.7325;0.9108;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
MLPClassifier;0.7778;0.7918;0.7778;0.7778;0.7391;0.7601;0.7391;0.7382;0.7333;0.7358;0.7333;0.7325;0.9108;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7729;0.7886;0.7729;0.7727;0.7391;0.7882;0.7391;0.7364;0.7333;0.7358;0.7333;0.7325;0.909;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7457;0.7697;0.7457;0.7454;0.7536;0.7671;0.7536;0.7551;0.7333;0.7358;0.7333;0.7325;0.9026;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7698;0.7874;0.7698;0.7697;0.6522;0.7;0.6522;0.6517;0.7333;0.732;0.7333;0.7324;0.9102;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7553;0.7779;0.7553;0.7537;0.8116;0.8209;0.8116;0.8132;0.7333;0.732;0.7333;0.7324;0.9024;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
MLPClassifier;0.7729;0.7921;0.7729;0.7735;0.7536;0.7887;0.7536;0.7572;0.7333;0.732;0.7333;0.7324;0.9102;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
MLPClassifier;0.7649;0.792;0.7649;0.7633;0.7101;0.7619;0.7101;0.7113;0.7333;0.7387;0.7333;0.7321;0.9087;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7583;0.7874;0.7583;0.7606;0.7971;0.8133;0.7971;0.8016;0.7333;0.7332;0.7333;0.732;0.8973;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
MLPClassifier;0.7583;0.7812;0.7583;0.7599;0.8696;0.8703;0.8696;0.8688;0.7333;0.7332;0.7333;0.732;0.9017;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
MLPClassifier;0.7794;0.8009;0.7794;0.7792;0.7391;0.7843;0.7391;0.746;0.7333;0.7332;0.7333;0.732;0.9171;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
DecisionTreeClassifier;0.8101;0.8234;0.8101;0.8109;0.8406;0.8424;0.8406;0.8391;0.7333;0.7338;0.7333;0.7309;0.9107;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.8116;0.8256;0.8116;0.8133;0.7826;0.7848;0.7826;0.7835;0.7333;0.741;0.7333;0.7306;0.9161;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=362)
DecisionTreeClassifier;0.818;0.8272;0.818;0.8199;0.7536;0.7558;0.7536;0.7545;0.7333;0.7317;0.7333;0.7303;0.9163;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
RandomForestClassifier;0.8406;0.8464;0.8406;0.8408;0.8116;0.8194;0.8116;0.8135;0.7333;0.7348;0.7333;0.7302;0.939;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 57};RandomForestClassifier(n_estimators=20, random_state=57)
MLPClassifier;0.7618;0.7799;0.7618;0.7621;0.7391;0.7521;0.7391;0.7429;0.7333;0.7317;0.7333;0.7298;0.9116;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
DecisionTreeClassifier;0.8132;0.8259;0.8132;0.8148;0.8551;0.8542;0.8551;0.8544;0.7333;0.7345;0.7333;0.7273;0.9205;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8115;0.8243;0.8115;0.8133;0.7826;0.7978;0.7826;0.7839;0.7333;0.7404;0.7333;0.7272;0.9239;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
RandomForestClassifier;0.8229;0.8312;0.8229;0.8235;0.8406;0.8523;0.8406;0.8439;0.7333;0.7404;0.7333;0.7272;0.9454;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 829};RandomForestClassifier(n_estimators=10, random_state=829)
DecisionTreeClassifier;0.7987;0.8149;0.7987;0.8004;0.8551;0.8603;0.8551;0.8559;0.7333;0.7344;0.7333;0.7262;0.9091;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
LogisticRegression;0.7004;0.7283;0.7004;0.7007;0.6812;0.684;0.6812;0.6811;0.7167;0.7247;0.7167;0.7184;0.8473;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.7069;0.7329;0.7069;0.7055;0.6812;0.6883;0.6812;0.681;0.7167;0.7247;0.7167;0.7184;0.8461;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.6972;0.7223;0.6972;0.6957;0.7246;0.7407;0.7246;0.7271;0.7167;0.7196;0.7167;0.7172;0.8409;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7005;0.7242;0.7005;0.7;0.6232;0.6628;0.6232;0.6065;0.7167;0.7196;0.7167;0.7172;0.8495;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
LogisticRegression;0.7006;0.7233;0.7006;0.6993;0.6087;0.6381;0.6087;0.6074;0.7167;0.7196;0.7167;0.7172;0.8468;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
MLPClassifier;0.7811;0.802;0.7811;0.7831;0.7391;0.7854;0.7391;0.7372;0.7167;0.7318;0.7167;0.7162;0.9154;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
MLPClassifier;0.747;0.7691;0.747;0.7456;0.8261;0.8381;0.8261;0.8277;0.7167;0.7207;0.7167;0.7151;0.904;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.7633;0.7834;0.7633;0.7627;0.6667;0.7088;0.6667;0.6739;0.7167;0.7143;0.7167;0.7146;0.9116;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
MLPClassifier;0.7569;0.774;0.7569;0.7569;0.8116;0.8257;0.8116;0.8118;0.7167;0.7234;0.7167;0.7146;0.9059;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
MLPClassifier;0.7698;0.7935;0.7698;0.7695;0.7536;0.7674;0.7536;0.7546;0.7167;0.7197;0.7167;0.7143;0.9116;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 256, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=256)
DecisionTreeClassifier;0.8342;0.8437;0.8342;0.8354;0.7681;0.8121;0.7681;0.7716;0.7167;0.7188;0.7167;0.7116;0.913;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.8326;0.8415;0.8326;0.8334;0.8261;0.8356;0.8261;0.8284;0.7167;0.7188;0.7167;0.7116;0.9237;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8099;0.8232;0.8099;0.8117;0.8261;0.8457;0.8261;0.8297;0.7167;0.7153;0.7167;0.7113;0.9171;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.8084;0.819;0.8084;0.8103;0.8696;0.874;0.8696;0.8707;0.7167;0.7187;0.7167;0.711;0.9105;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.8099;0.8245;0.8099;0.8121;0.8261;0.8372;0.8261;0.8279;0.7167;0.7187;0.7167;0.711;0.9202;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
LogisticRegression;0.7038;0.7275;0.7038;0.7034;0.6812;0.7218;0.6812;0.6831;0.7;0.7047;0.7;0.7012;0.8388;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.6891;0.7114;0.6891;0.6892;0.7536;0.7944;0.7536;0.7575;0.7;0.7047;0.7;0.7012;0.8351;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.6941;0.7157;0.6941;0.6945;0.7101;0.7533;0.7101;0.6897;0.7;0.7047;0.7;0.7012;0.8396;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7037;0.7308;0.7037;0.7037;0.6957;0.7029;0.6957;0.6896;0.7;0.7047;0.7;0.7012;0.842;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.7086;0.7285;0.7086;0.7081;0.6667;0.6895;0.6667;0.6662;0.7;0.7047;0.7;0.7012;0.8376;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6908;0.7107;0.6908;0.6871;0.7681;0.7794;0.7681;0.7684;0.7;0.7047;0.7;0.7012;0.8359;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.7004;0.7224;0.7004;0.6996;0.6812;0.7;0.6812;0.6824;0.7;0.7047;0.7;0.7012;0.8388;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.7019;0.7255;0.7019;0.7014;0.6377;0.6814;0.6377;0.6367;0.7;0.7047;0.7;0.7012;0.8354;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.7005;0.7224;0.7005;0.6997;0.6957;0.7332;0.6957;0.6959;0.7;0.7047;0.7;0.7012;0.8379;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.7053;0.7306;0.7053;0.7031;0.6667;0.6782;0.6667;0.6678;0.7;0.7047;0.7;0.7012;0.8407;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.694;0.718;0.694;0.6936;0.6667;0.6865;0.6667;0.6667;0.7;0.7047;0.7;0.7012;0.8403;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6974;0.7199;0.6974;0.6959;0.6522;0.6671;0.6522;0.6504;0.7;0.7047;0.7;0.7012;0.8398;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 162, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=162)"
LogisticRegression;0.6844;0.7056;0.6844;0.6807;0.7826;0.8167;0.7826;0.7846;0.7;0.7047;0.7;0.7012;0.8329;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6923;0.7124;0.6923;0.6898;0.6957;0.7039;0.6957;0.695;0.7;0.7047;0.7;0.7012;0.8398;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7038;0.7238;0.7038;0.7023;0.6667;0.691;0.6667;0.6646;0.7;0.7047;0.7;0.7012;0.8433;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.699;0.7248;0.699;0.697;0.7101;0.7313;0.7101;0.7083;0.7;0.7047;0.7;0.7012;0.8342;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6893;0.7126;0.6893;0.6884;0.7246;0.7298;0.7246;0.7242;0.7;0.7047;0.7;0.7012;0.8367;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
LogisticRegression;0.702;0.7247;0.702;0.7013;0.6812;0.6848;0.6812;0.6824;0.7;0.7047;0.7;0.7012;0.8409;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
LogisticRegression;0.6942;0.7234;0.6942;0.692;0.7101;0.76;0.7101;0.7148;0.7;0.7047;0.7;0.7012;0.8321;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
LogisticRegression;0.6942;0.7137;0.6942;0.6948;0.7971;0.8078;0.7971;0.7959;0.7;0.7047;0.7;0.7012;0.8346;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
LogisticRegression;0.6924;0.7173;0.6924;0.6916;0.6812;0.7091;0.6812;0.6811;0.7;0.7047;0.7;0.7012;0.8379;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
LogisticRegression;0.7022;0.7281;0.7022;0.7019;0.6522;0.7392;0.6522;0.6338;0.7;0.7047;0.7;0.7012;0.8404;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 826, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=826)"
LogisticRegression;0.7022;0.7245;0.7022;0.7004;0.6957;0.7047;0.6957;0.6956;0.7;0.7047;0.7;0.7012;0.8401;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
MLPClassifier;0.7616;0.7815;0.7616;0.7601;0.7536;0.7984;0.7536;0.7545;0.7;0.7044;0.7;0.7;0.9019;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 341, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=341)
MLPClassifier;0.765;0.7844;0.765;0.7661;0.8116;0.8483;0.8116;0.8064;0.7;0.7133;0.7;0.6986;0.9177;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
DecisionTreeClassifier;0.8229;0.8362;0.8229;0.8238;0.8261;0.8333;0.8261;0.8277;0.7;0.7048;0.7;0.6959;0.9175;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.8309;0.8449;0.8309;0.8331;0.7826;0.7928;0.7826;0.7838;0.7;0.6991;0.7;0.6957;0.9269;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8325;0.8403;0.8325;0.833;0.7826;0.7901;0.7826;0.7789;0.7;0.6991;0.7;0.6957;0.9216;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8164;0.8252;0.8164;0.8177;0.8406;0.8406;0.8406;0.8398;0.7;0.6991;0.7;0.6957;0.9224;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.8245;0.8367;0.8245;0.8256;0.8696;0.8774;0.8696;0.871;0.7;0.6991;0.7;0.6957;0.9153;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.8164;0.8275;0.8164;0.8183;0.8261;0.8305;0.8261;0.8272;0.7;0.6991;0.7;0.6957;0.9065;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8116;0.8254;0.8116;0.8119;0.8551;0.8874;0.8551;0.858;0.7;0.6991;0.7;0.6957;0.9127;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8149;0.8301;0.8149;0.816;0.7971;0.797;0.7971;0.7963;0.7;0.6991;0.7;0.6957;0.9108;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.818;0.8283;0.818;0.8194;0.8551;0.8747;0.8551;0.8584;0.7;0.6991;0.7;0.6957;0.9225;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8196;0.8368;0.8196;0.8221;0.8551;0.8687;0.8551;0.8559;0.7;0.6991;0.7;0.6957;0.9258;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8099;0.8239;0.8099;0.8114;0.8406;0.8613;0.8406;0.844;0.7;0.6991;0.7;0.6957;0.9076;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.815;0.8277;0.815;0.8147;0.8551;0.8675;0.8551;0.8566;0.7;0.6991;0.7;0.6957;0.9206;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.8245;0.8394;0.8245;0.826;0.7971;0.8116;0.7971;0.8012;0.7;0.7122;0.7;0.693;0.9206;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=581)
DecisionTreeClassifier;0.8228;0.8347;0.8228;0.8247;0.7391;0.7419;0.7391;0.7403;0.7;0.7105;0.7;0.6925;0.9161;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=362)
DecisionTreeClassifier;0.8228;0.8332;0.8228;0.8245;0.7681;0.7681;0.7681;0.7681;0.7;0.7105;0.7;0.6925;0.92;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=581)
MLPClassifier;0.7587;0.7808;0.7587;0.7587;0.7971;0.8028;0.7971;0.798;0.6833;0.6845;0.6833;0.6779;0.9051;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 314, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=314)
DecisionTreeClassifier;0.8164;0.8309;0.8164;0.8174;0.8261;0.8291;0.8261;0.8269;0.6833;0.6825;0.6833;0.6768;0.9148;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.81;0.8226;0.81;0.8113;0.8696;0.869;0.8696;0.8685;0.6833;0.6944;0.6833;0.6723;0.9227;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=750)
