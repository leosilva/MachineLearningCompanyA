Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8454;0.8489;0.8454;0.8454;0.8897;0.8906;0.8897;0.89;0.8333;0.8489;0.8333;0.8352;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8683;0.873;0.8683;0.8687;0.8828;0.8838;0.8828;0.8829;0.8333;0.8399;0.8333;0.8344;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 545};RandomForestClassifier(n_estimators=10, random_state=545)
KNeighborsClassifier;0.8228;0.829;0.8228;0.8214;0.8414;0.8416;0.8414;0.8415;0.8167;0.8315;0.8167;0.8181;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8599;0.8642;0.8599;0.8603;0.8931;0.8935;0.8931;0.8932;0.8167;0.8189;0.8167;0.8174;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 545};RandomForestClassifier(n_estimators=20, random_state=545)
MLPClassifier;0.8439;0.851;0.8439;0.8445;0.8517;0.8591;0.8517;0.8524;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
MLPClassifier;0.8454;0.8532;0.8454;0.846;0.8655;0.8715;0.8655;0.8654;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
RandomForestClassifier;0.871;0.8747;0.871;0.8714;0.8557;0.8613;0.8557;0.8572;0.8167;0.819;0.8167;0.8168;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
MLPClassifier;0.8435;0.8508;0.8435;0.8446;0.8655;0.8669;0.8655;0.8655;0.8167;0.819;0.8167;0.8168;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8481;0.8547;0.8481;0.8485;0.8621;0.8634;0.8621;0.8623;0.8167;0.819;0.8167;0.8168;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
MLPClassifier;0.8431;0.8513;0.8431;0.8438;0.8621;0.8695;0.8621;0.8617;0.8167;0.819;0.8167;0.8168;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
KNeighborsClassifier;0.8473;0.8494;0.8473;0.8469;0.8586;0.8621;0.8586;0.8589;0.8167;0.8228;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8683;0.8734;0.8683;0.8686;0.8694;0.87;0.8694;0.8696;0.8;0.8089;0.8;0.8023;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
RandomForestClassifier;0.8703;0.8744;0.8703;0.8704;0.8448;0.851;0.8448;0.8458;0.8;0.8142;0.8;0.8023;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 842};RandomForestClassifier(n_estimators=20, random_state=842)
KNeighborsClassifier;0.8507;0.8544;0.8507;0.8508;0.8517;0.8544;0.8517;0.8524;0.8;0.8101;0.8;0.8019;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8427;0.8482;0.8427;0.8421;0.8724;0.8733;0.8724;0.8725;0.8;0.8102;0.8;0.8014;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
RandomForestClassifier;0.8695;0.8739;0.8695;0.8696;0.8414;0.8413;0.8414;0.8413;0.8;0.8109;0.8;0.8014;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 545};RandomForestClassifier(n_estimators=20, random_state=545)
RandomForestClassifier;0.8622;0.867;0.8622;0.8624;0.8931;0.8964;0.8931;0.8925;0.8;0.8109;0.8;0.8014;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 842};RandomForestClassifier(n_estimators=20, random_state=842)
MLPClassifier;0.8488;0.8553;0.8488;0.8494;0.8897;0.8934;0.8897;0.8904;0.8;0.8038;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8484;0.8553;0.8484;0.849;0.8655;0.868;0.8655;0.8658;0.8;0.8038;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
MLPClassifier;0.8489;0.8569;0.8489;0.8496;0.8552;0.8594;0.8552;0.8561;0.8;0.8038;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
MLPClassifier;0.8446;0.8512;0.8446;0.8453;0.8385;0.8444;0.8385;0.8402;0.8;0.8022;0.8;0.8008;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
KNeighborsClassifier;0.8401;0.8434;0.8401;0.8398;0.8517;0.8548;0.8517;0.8521;0.8;0.8021;0.8;0.8007;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=15)
RandomForestClassifier;0.8703;0.8751;0.8703;0.8708;0.8241;0.8296;0.8241;0.8253;0.8;0.8072;0.8;0.8005;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 842};RandomForestClassifier(n_estimators=20, random_state=842)
RandomForestClassifier;0.8687;0.8726;0.8687;0.8689;0.8729;0.8749;0.8729;0.8733;0.8;0.8072;0.8;0.8005;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 842};RandomForestClassifier(n_estimators=10, random_state=842)
MLPClassifier;0.8485;0.8558;0.8485;0.8491;0.869;0.8748;0.869;0.8703;0.8;0.8089;0.8;0.8004;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
MLPClassifier;0.848;0.855;0.848;0.8486;0.8797;0.8833;0.8797;0.8804;0.8;0.8089;0.8;0.8004;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
RandomForestClassifier;0.8687;0.8722;0.8687;0.8689;0.8591;0.8627;0.8591;0.8596;0.8;0.8151;0.8;0.8001;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 545};RandomForestClassifier(n_estimators=20, random_state=545)
KNeighborsClassifier;0.8504;0.8522;0.8504;0.8498;0.8172;0.8239;0.8172;0.8182;0.8;0.8164;0.8;0.7999;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.8492;0.8561;0.8492;0.85;0.8379;0.8456;0.8379;0.8394;0.8;0.8039;0.8;0.7998;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8499;0.8575;0.8499;0.8507;0.8351;0.8406;0.8351;0.8343;0.8;0.8039;0.8;0.7998;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
KNeighborsClassifier;0.8424;0.8457;0.8424;0.8421;0.8655;0.8671;0.8655;0.8658;0.8;0.8039;0.8;0.7998;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.8431;0.8494;0.8431;0.8437;0.8828;0.8906;0.8828;0.8834;0.8;0.8039;0.8;0.7998;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
KNeighborsClassifier;0.8446;0.8501;0.8446;0.8448;0.8345;0.8409;0.8345;0.8341;0.8;0.8108;0.8;0.7996;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8328;0.839;0.8328;0.8324;0.8552;0.8557;0.8552;0.8547;0.8;0.8091;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8611;0.865;0.8611;0.8614;0.9;0.9008;0.9;0.9003;0.7833;0.7997;0.7833;0.7858;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 842};RandomForestClassifier(n_estimators=10, random_state=842)
MLPClassifier;0.8473;0.8546;0.8473;0.8482;0.8454;0.8478;0.8454;0.8451;0.7833;0.7986;0.7833;0.7853;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
MLPClassifier;0.8476;0.8538;0.8476;0.8485;0.866;0.8742;0.866;0.8663;0.7833;0.7986;0.7833;0.7853;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
RandomForestClassifier;0.853;0.8575;0.853;0.8534;0.8832;0.8829;0.8832;0.8821;0.7833;0.7986;0.7833;0.7853;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 545};RandomForestClassifier(n_estimators=10, random_state=545)
MLPClassifier;0.843;0.8495;0.843;0.8436;0.8557;0.8596;0.8557;0.8569;0.7833;0.7927;0.7833;0.785;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
RandomForestClassifier;0.8626;0.868;0.8626;0.863;0.8828;0.8832;0.8828;0.8828;0.7833;0.7975;0.7833;0.7848;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 268};RandomForestClassifier(n_estimators=5, random_state=268)
MLPClassifier;0.8492;0.8568;0.8492;0.8495;0.8828;0.884;0.8828;0.8831;0.7833;0.7863;0.7833;0.7845;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
RandomForestClassifier;0.8683;0.8718;0.8683;0.8686;0.8832;0.8867;0.8832;0.884;0.7833;0.8012;0.7833;0.7844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 842};RandomForestClassifier(n_estimators=20, random_state=842)
RandomForestClassifier;0.8668;0.87;0.8668;0.8668;0.8797;0.8892;0.8797;0.8813;0.7833;0.8012;0.7833;0.7844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 545};RandomForestClassifier(n_estimators=10, random_state=545)
RandomForestClassifier;0.8661;0.8698;0.8661;0.8664;0.8966;0.8978;0.8966;0.8965;0.7833;0.7934;0.7833;0.7843;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 842};RandomForestClassifier(n_estimators=20, random_state=842)
KNeighborsClassifier;0.8369;0.841;0.8369;0.8354;0.8522;0.8585;0.8522;0.8533;0.7833;0.8068;0.7833;0.7843;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8396;0.8466;0.8396;0.8404;0.8517;0.8561;0.8517;0.8529;0.7833;0.7934;0.7833;0.7843;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
KNeighborsClassifier;0.8553;0.8607;0.8553;0.8556;0.8385;0.8399;0.8385;0.8389;0.7833;0.8068;0.7833;0.7843;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8442;0.8524;0.8442;0.8448;0.8724;0.8747;0.8724;0.8728;0.7833;0.7894;0.7833;0.7843;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
MLPClassifier;0.8492;0.8565;0.8492;0.8501;0.8586;0.858;0.8586;0.858;0.7833;0.7894;0.7833;0.7843;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.84;0.8461;0.84;0.8407;0.9072;0.9118;0.9072;0.9078;0.7833;0.7863;0.7833;0.7839;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
MLPClassifier;0.8465;0.853;0.8465;0.8474;0.8517;0.8556;0.8517;0.8528;0.7833;0.7863;0.7833;0.7839;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
KNeighborsClassifier;0.853;0.858;0.853;0.8532;0.8557;0.8597;0.8557;0.8561;0.7833;0.7994;0.7833;0.7834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.8293;0.8346;0.8293;0.8303;0.8552;0.8629;0.8552;0.8554;0.7833;0.8037;0.7833;0.7821;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
KNeighborsClassifier;0.853;0.857;0.853;0.8529;0.8385;0.8546;0.8385;0.8404;0.7833;0.7912;0.7833;0.7816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8458;0.8509;0.8458;0.8458;0.8345;0.835;0.8345;0.8332;0.7833;0.7846;0.7833;0.7811;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8684;0.8723;0.8684;0.8685;0.8621;0.8707;0.8621;0.8633;0.7667;0.7791;0.7667;0.7703;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 842};RandomForestClassifier(n_estimators=20, random_state=842)
KNeighborsClassifier;0.8354;0.845;0.8354;0.8351;0.8621;0.8641;0.8621;0.8619;0.7667;0.7791;0.7667;0.7703;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8462;0.8535;0.8462;0.8467;0.8828;0.8856;0.8828;0.8828;0.7667;0.7795;0.7667;0.7691;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
DecisionTreeClassifier;0.8568;0.8619;0.8568;0.8572;0.89;0.8952;0.89;0.8906;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=291)
DecisionTreeClassifier;0.8588;0.8625;0.8588;0.8589;0.8552;0.8709;0.8552;0.8561;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.8629;0.8686;0.8629;0.8634;0.8385;0.8417;0.8385;0.8394;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.8573;0.8621;0.8573;0.8579;0.8828;0.8855;0.8828;0.8833;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8576;0.8627;0.8576;0.8581;0.8931;0.8958;0.8931;0.893;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=291)
DecisionTreeClassifier;0.8561;0.8607;0.8561;0.8561;0.8759;0.8787;0.8759;0.8764;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=291)
DecisionTreeClassifier;0.8553;0.8596;0.8553;0.8557;0.8828;0.8846;0.8828;0.8829;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=291)
DecisionTreeClassifier;0.8565;0.8624;0.8565;0.8569;0.8759;0.8848;0.8759;0.8772;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.863;0.869;0.863;0.8635;0.8586;0.8665;0.8586;0.8595;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8572;0.8622;0.8572;0.8574;0.8621;0.8671;0.8621;0.8631;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8588;0.8641;0.8588;0.8593;0.8621;0.8677;0.8621;0.8625;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.861;0.8667;0.861;0.8614;0.8591;0.8612;0.8591;0.8595;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
SVC;0.8312;0.8374;0.8312;0.8322;0.8207;0.8291;0.8207;0.8212;0.7667;0.8063;0.7667;0.7685;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
RandomForestClassifier;0.8672;0.8712;0.8672;0.8674;0.8724;0.8814;0.8724;0.8732;0.7667;0.7878;0.7667;0.7685;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 545};RandomForestClassifier(n_estimators=20, random_state=545)
MLPClassifier;0.845;0.851;0.845;0.8457;0.8655;0.8686;0.8655;0.8657;0.7667;0.776;0.7667;0.7683;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
MLPClassifier;0.8481;0.8542;0.8481;0.8486;0.8793;0.8789;0.8793;0.879;0.7667;0.776;0.7667;0.7683;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
KNeighborsClassifier;0.8404;0.8451;0.8404;0.8404;0.8557;0.8636;0.8557;0.8556;0.7667;0.7811;0.7667;0.7682;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.868;0.8714;0.868;0.8683;0.8517;0.8573;0.8517;0.8532;0.7667;0.7853;0.7667;0.7681;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 545};RandomForestClassifier(n_estimators=20, random_state=545)
RandomForestClassifier;0.8684;0.8712;0.8684;0.8687;0.8483;0.8528;0.8483;0.849;0.7667;0.78;0.7667;0.7677;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 842};RandomForestClassifier(n_estimators=5, random_state=842)
RandomForestClassifier;0.8694;0.8727;0.8694;0.8695;0.866;0.8749;0.866;0.867;0.7667;0.7778;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
KNeighborsClassifier;0.8538;0.8576;0.8538;0.8537;0.8379;0.8396;0.8379;0.8385;0.7667;0.7731;0.7667;0.7663;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8526;0.8588;0.8526;0.8532;0.8448;0.8547;0.8448;0.8444;0.7667;0.7829;0.7667;0.7655;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
MLPClassifier;0.8442;0.8509;0.8442;0.845;0.8832;0.8862;0.8832;0.8835;0.7667;0.7829;0.7667;0.7655;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 939, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=939)
KNeighborsClassifier;0.8342;0.8414;0.8342;0.8332;0.8282;0.8292;0.8282;0.8284;0.7667;0.7717;0.7667;0.7653;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8511;0.8566;0.8511;0.8514;0.8103;0.8401;0.8103;0.809;0.7667;0.8124;0.7667;0.759;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.853;0.8551;0.853;0.8529;0.8076;0.8296;0.8076;0.8072;0.7667;0.7772;0.7667;0.7587;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8458;0.8497;0.8458;0.8458;0.8241;0.8466;0.8241;0.8241;0.7667;0.7944;0.7667;0.7574;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8469;0.8505;0.8469;0.8466;0.8448;0.8461;0.8448;0.8453;0.75;0.7678;0.75;0.7534;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8305;0.8366;0.8305;0.8313;0.8483;0.8611;0.8483;0.8496;0.75;0.7828;0.75;0.753;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
SVC;0.8293;0.8347;0.8293;0.8303;0.8552;0.8651;0.8552;0.8561;0.75;0.7828;0.75;0.753;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
DecisionTreeClassifier;0.8504;0.8564;0.8504;0.8505;0.8759;0.8782;0.8759;0.8764;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=176)
DecisionTreeClassifier;0.8546;0.8595;0.8546;0.8548;0.869;0.875;0.869;0.8699;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=291)
DecisionTreeClassifier;0.8561;0.8616;0.8561;0.8563;0.8793;0.8823;0.8793;0.8798;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=895)
DecisionTreeClassifier;0.8611;0.8664;0.8611;0.8611;0.8345;0.8403;0.8345;0.8356;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=176)
DecisionTreeClassifier;0.863;0.8679;0.863;0.8633;0.8172;0.8221;0.8172;0.8175;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=291)
DecisionTreeClassifier;0.863;0.8683;0.863;0.8631;0.8414;0.8471;0.8414;0.8418;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=895)
KNeighborsClassifier;0.8374;0.8409;0.8374;0.8369;0.8724;0.8742;0.8724;0.8728;0.75;0.764;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8603;0.8652;0.8603;0.8605;0.8557;0.8667;0.8557;0.8562;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=291)
DecisionTreeClassifier;0.8553;0.8602;0.8553;0.8557;0.866;0.8689;0.866;0.8667;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.8595;0.8651;0.8595;0.8598;0.8729;0.8761;0.8729;0.8736;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=291)
DecisionTreeClassifier;0.8546;0.8589;0.8546;0.8549;0.8966;0.9008;0.8966;0.8964;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=176)
DecisionTreeClassifier;0.8553;0.8603;0.8553;0.8556;0.869;0.8692;0.869;0.8685;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=176)
DecisionTreeClassifier;0.8576;0.8639;0.8576;0.8581;0.8522;0.8551;0.8522;0.8528;0.75;0.7667;0.75;0.7529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
RandomForestClassifier;0.8618;0.8657;0.8618;0.8622;0.8862;0.8893;0.8862;0.8868;0.75;0.7703;0.75;0.7528;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 268};RandomForestClassifier(n_estimators=10, random_state=268)
MLPClassifier;0.8458;0.8524;0.8458;0.8465;0.869;0.8743;0.869;0.8679;0.75;0.762;0.75;0.752;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 74, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=74)
RandomForestClassifier;0.8714;0.8753;0.8714;0.8716;0.8379;0.8478;0.8379;0.8394;0.75;0.7639;0.75;0.7517;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
SVC;0.8266;0.8322;0.8266;0.8277;0.8729;0.877;0.8729;0.8732;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.8304;0.8364;0.8304;0.8314;0.8694;0.8739;0.8694;0.87;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.8281;0.8331;0.8281;0.8288;0.8797;0.8865;0.8797;0.8805;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.827;0.8321;0.827;0.8281;0.8621;0.8673;0.8621;0.863;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.8297;0.8346;0.8297;0.8306;0.8552;0.8664;0.8552;0.8573;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.8312;0.837;0.8312;0.8318;0.8586;0.8707;0.8586;0.8597;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.827;0.8324;0.827;0.8279;0.866;0.8743;0.866;0.8673;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.8277;0.8338;0.8277;0.829;0.8832;0.8861;0.8832;0.8832;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
RandomForestClassifier;0.8706;0.8743;0.8706;0.8709;0.8379;0.8439;0.8379;0.8391;0.75;0.7616;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 545};RandomForestClassifier(n_estimators=20, random_state=545)
SVC;0.8274;0.8329;0.8274;0.8281;0.8448;0.8605;0.8448;0.8472;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.8273;0.8325;0.8273;0.8282;0.8832;0.8929;0.8832;0.8841;0.75;0.7861;0.75;0.7512;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
DecisionTreeClassifier;0.8538;0.8589;0.8538;0.8544;0.8724;0.8729;0.8724;0.8726;0.75;0.77;0.75;0.7504;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
MLPClassifier;0.8426;0.8501;0.8426;0.8434;0.8797;0.884;0.8797;0.8806;0.75;0.7558;0.75;0.7492;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 630, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=630)
KNeighborsClassifier;0.8453;0.851;0.8453;0.8451;0.8213;0.826;0.8213;0.8216;0.75;0.77;0.75;0.7474;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8415;0.8477;0.8415;0.8402;0.8557;0.8667;0.8557;0.8572;0.75;0.7725;0.75;0.7464;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8741;0.8773;0.8741;0.8743;0.8379;0.848;0.8379;0.8392;0.7333;0.7558;0.7333;0.7373;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
RandomForestClassifier;0.8645;0.8679;0.8645;0.8649;0.8586;0.8593;0.8586;0.8589;0.7333;0.7558;0.7333;0.7373;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
SVC;0.8327;0.8397;0.8327;0.8338;0.8419;0.8473;0.8419;0.8417;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.8312;0.8375;0.8312;0.8321;0.8448;0.8487;0.8448;0.8457;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
SVC;0.8293;0.8352;0.8293;0.8304;0.8828;0.8885;0.8828;0.8834;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
SVC;0.8301;0.8364;0.8301;0.8312;0.8552;0.8611;0.8552;0.8557;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
SVC;0.8281;0.8343;0.8281;0.829;0.866;0.8749;0.866;0.8674;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
SVC;0.8297;0.8375;0.8297;0.831;0.8621;0.8672;0.8621;0.8628;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.8305;0.8356;0.8305;0.8314;0.8414;0.8527;0.8414;0.8429;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.8289;0.8338;0.8289;0.8297;0.8419;0.854;0.8419;0.8435;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.8289;0.8356;0.8289;0.83;0.8759;0.8761;0.8759;0.8758;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.8289;0.835;0.8289;0.8298;0.8793;0.8923;0.8793;0.8801;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.8316;0.8369;0.8316;0.8325;0.8586;0.871;0.8586;0.858;0.7333;0.7649;0.7333;0.7361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
RandomForestClassifier;0.8653;0.8701;0.8653;0.8656;0.9034;0.9038;0.9034;0.903;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
DecisionTreeClassifier;0.8554;0.8612;0.8554;0.8557;0.9034;0.9042;0.9034;0.9034;0.7333;0.7473;0.7333;0.7342;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8572;0.863;0.8572;0.8577;0.8832;0.8843;0.8832;0.8835;0.7333;0.7473;0.7333;0.7342;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.8637;0.8688;0.8637;0.8642;0.8621;0.8666;0.8621;0.8628;0.7333;0.7473;0.7333;0.7342;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=291)
KNeighborsClassifier;0.8423;0.8482;0.8423;0.8414;0.8207;0.8238;0.8207;0.8208;0.7333;0.7491;0.7333;0.7338;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
SVC;0.8282;0.8339;0.8282;0.829;0.8621;0.8715;0.8621;0.8633;0.7333;0.7629;0.7333;0.7309;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
KNeighborsClassifier;0.8469;0.8508;0.8469;0.8467;0.8586;0.862;0.8586;0.8584;0.7333;0.7487;0.7333;0.7268;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8504;0.8535;0.8504;0.8505;0.8552;0.8665;0.8552;0.8569;0.7333;0.771;0.7333;0.7241;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.8687;0.8727;0.8687;0.8688;0.8419;0.8433;0.8419;0.842;0.7167;0.7303;0.7167;0.7207;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 842};RandomForestClassifier(n_estimators=10, random_state=842)
SVC;0.8339;0.8395;0.8339;0.8348;0.8034;0.8188;0.8034;0.8057;0.7167;0.7565;0.7167;0.7202;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
RandomForestClassifier;0.8664;0.8702;0.8664;0.8668;0.8621;0.8637;0.8621;0.8621;0.7167;0.7311;0.7167;0.7196;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 545};RandomForestClassifier(n_estimators=5, random_state=545)
RandomForestClassifier;0.8691;0.8743;0.8691;0.8696;0.8448;0.8482;0.8448;0.8444;0.7167;0.7313;0.7167;0.7195;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 268};RandomForestClassifier(n_estimators=20, random_state=268)
SVC;0.8286;0.8348;0.8286;0.8296;0.8724;0.8752;0.8724;0.8719;0.7167;0.7409;0.7167;0.7159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 890};SVC(C=10, random_state=890)
SVC;0.8282;0.8341;0.8282;0.8291;0.8621;0.8688;0.8621;0.8627;0.7167;0.7409;0.7167;0.7159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 74};SVC(C=10, random_state=74)
SVC;0.8282;0.835;0.8282;0.8291;0.8655;0.8704;0.8655;0.8653;0.7167;0.7625;0.7167;0.7151;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 727};SVC(C=10, random_state=727)
DecisionTreeClassifier;0.8603;0.866;0.8603;0.8608;0.8621;0.8621;0.8621;0.8617;0.7167;0.7476;0.7167;0.7147;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 291};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=291)
DecisionTreeClassifier;0.856;0.8607;0.856;0.856;0.866;0.8679;0.866;0.8652;0.7;0.7278;0.7;0.7056;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=895)
LogisticRegression;0.7994;0.8045;0.7994;0.8005;0.7973;0.8026;0.7973;0.7985;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.7987;0.8041;0.7987;0.7995;0.7966;0.8005;0.7966;0.7973;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.7975;0.803;0.7975;0.7983;0.8172;0.8186;0.8172;0.8177;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.7991;0.8045;0.7991;0.8;0.8103;0.817;0.8103;0.8122;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.7982;0.8029;0.7982;0.7991;0.7835;0.7897;0.7835;0.7854;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.7968;0.8019;0.7968;0.7976;0.8276;0.8309;0.8276;0.8287;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.7948;0.8003;0.7948;0.7956;0.8247;0.8302;0.8247;0.8262;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.7979;0.8033;0.7979;0.7988;0.8034;0.8105;0.8034;0.8055;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.8003;0.8054;0.8003;0.801;0.7828;0.7938;0.7828;0.7847;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.7967;0.8025;0.7967;0.7978;0.811;0.8169;0.811;0.8128;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.794;0.7993;0.794;0.7951;0.8213;0.8235;0.8213;0.8215;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.7998;0.8051;0.7998;0.8005;0.7862;0.7938;0.7862;0.7883;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.7987;0.8044;0.7987;0.7997;0.7897;0.7924;0.7897;0.7905;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.801;0.8066;0.801;0.8019;0.8069;0.8134;0.8069;0.8087;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.8006;0.8062;0.8006;0.8014;0.7931;0.8012;0.7931;0.7949;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.7941;0.7991;0.7941;0.7948;0.8655;0.874;0.8655;0.8672;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.799;0.8049;0.799;0.8002;0.7828;0.7884;0.7828;0.7838;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.8005;0.8064;0.8005;0.8016;0.7869;0.7887;0.7869;0.7876;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.8013;0.8063;0.8013;0.8024;0.8007;0.8068;0.8007;0.8024;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.8005;0.8056;0.8005;0.8013;0.7801;0.7877;0.7801;0.782;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
LogisticRegression;0.801;0.8062;0.801;0.8019;0.7897;0.7945;0.7897;0.7913;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.8006;0.8067;0.8006;0.8018;0.7828;0.7856;0.7828;0.7835;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.7972;0.8022;0.7972;0.7982;0.8172;0.8174;0.8172;0.8173;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.8002;0.8058;0.8002;0.8011;0.7862;0.7949;0.7862;0.7889;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.7983;0.8047;0.7983;0.7994;0.8379;0.8404;0.8379;0.8389;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.7968;0.8022;0.7968;0.798;0.8;0.8024;0.8;0.8007;0.7;0.6984;0.7;0.6983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 971, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=971)"
LogisticRegression;0.7998;0.8052;0.7998;0.801;0.7793;0.7787;0.7793;0.779;0.6833;0.6804;0.6833;0.6816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.8002;0.8054;0.8002;0.8012;0.7966;0.7984;0.7966;0.7973;0.6833;0.6804;0.6833;0.6816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.8044;0.8088;0.8044;0.8048;0.7388;0.7501;0.7388;0.7423;0.6833;0.6804;0.6833;0.6816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 134, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=134)"
LogisticRegression;0.7987;0.8047;0.7987;0.7997;0.7897;0.7902;0.7897;0.789;0.6833;0.6804;0.6833;0.6816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 687, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=687)"
KNeighborsClassifier;0.8557;0.8619;0.8557;0.8557;0.8517;0.8545;0.8517;0.8509;0.6833;0.6906;0.6833;0.6794;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
