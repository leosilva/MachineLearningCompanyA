Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.875;0.8783;0.875;0.8753;0.8542;0.8571;0.8542;0.8539;0.85;0.8641;0.85;0.8499;0.9697;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 980};RandomForestClassifier(n_estimators=20, random_state=980)
MLPClassifier;0.8102;0.8198;0.8102;0.8113;0.875;0.8765;0.875;0.8753;0.85;0.8517;0.85;0.8498;0.9442;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
KNeighborsClassifier;0.8349;0.8416;0.8349;0.8356;0.8333;0.8415;0.8333;0.834;0.85;0.8524;0.85;0.8497;0.9487;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.831;0.839;0.831;0.8319;0.8542;0.855;0.8542;0.8542;0.85;0.8497;0.85;0.8495;0.9454;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8102;0.819;0.8102;0.8106;0.9236;0.9271;0.9236;0.9239;0.85;0.8565;0.85;0.8493;0.9404;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
RandomForestClassifier;0.8742;0.8773;0.8742;0.8742;0.8542;0.8665;0.8542;0.8563;0.85;0.858;0.85;0.8492;0.9664;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 980};RandomForestClassifier(n_estimators=20, random_state=980)
RandomForestClassifier;0.8827;0.8857;0.8827;0.8829;0.8819;0.882;0.8819;0.8814;0.85;0.8643;0.85;0.8484;0.9701;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 325};RandomForestClassifier(n_estimators=20, random_state=325)
RandomForestClassifier;0.8773;0.8804;0.8773;0.8774;0.8889;0.8894;0.8889;0.8887;0.8333;0.8432;0.8333;0.8333;0.9685;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
KNeighborsClassifier;0.8341;0.841;0.8341;0.8347;0.8264;0.8361;0.8264;0.8285;0.8333;0.8339;0.8333;0.8333;0.9472;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8866;0.8898;0.8866;0.8867;0.8542;0.8583;0.8542;0.8546;0.8333;0.8339;0.8333;0.8333;0.9696;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 949};RandomForestClassifier(n_estimators=10, random_state=949)
MLPClassifier;0.8203;0.8297;0.8203;0.8211;0.875;0.8753;0.875;0.875;0.8333;0.8357;0.8333;0.8331;0.9431;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
KNeighborsClassifier;0.8303;0.8372;0.8303;0.8308;0.8542;0.8639;0.8542;0.8541;0.8333;0.8331;0.8333;0.8329;0.9379;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8256;0.8339;0.8256;0.8267;0.8819;0.8861;0.8819;0.882;0.8333;0.8341;0.8333;0.8327;0.9449;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8063;0.8144;0.8063;0.8067;0.9028;0.9049;0.9028;0.902;0.8333;0.8383;0.8333;0.8327;0.9399;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
KNeighborsClassifier;0.828;0.8375;0.828;0.8285;0.875;0.8792;0.875;0.876;0.8333;0.8341;0.8333;0.8327;0.9469;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8264;0.8341;0.8264;0.827;0.8264;0.8445;0.8264;0.8285;0.8333;0.8383;0.8333;0.8327;0.9463;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
RandomForestClassifier;0.8673;0.8716;0.8673;0.8677;0.9167;0.9199;0.9167;0.9165;0.8333;0.8333;0.8333;0.8323;0.9643;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 980};RandomForestClassifier(n_estimators=10, random_state=980)
RandomForestClassifier;0.8835;0.8869;0.8835;0.8841;0.8611;0.8641;0.8611;0.8607;0.8333;0.838;0.8333;0.8317;0.9706;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
MLPClassifier;0.814;0.8203;0.814;0.8151;0.9097;0.9122;0.9097;0.9099;0.8333;0.8387;0.8333;0.8317;0.9426;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
RandomForestClassifier;0.8797;0.8824;0.8797;0.8799;0.8472;0.8499;0.8472;0.848;0.8333;0.8338;0.8333;0.8312;0.9685;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 980};RandomForestClassifier(n_estimators=10, random_state=980)
KNeighborsClassifier;0.8318;0.8402;0.8318;0.8328;0.8472;0.8499;0.8472;0.8478;0.8167;0.818;0.8167;0.817;0.9437;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8434;0.8525;0.8434;0.844;0.8542;0.8595;0.8542;0.854;0.8167;0.8172;0.8167;0.8166;0.9485;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8325;0.8417;0.8325;0.833;0.8819;0.8852;0.8819;0.8819;0.8167;0.8172;0.8167;0.8166;0.942;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8356;0.8436;0.8356;0.8364;0.8472;0.8613;0.8472;0.8488;0.8167;0.8163;0.8167;0.8162;0.9435;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8288;0.8394;0.8288;0.8301;0.8681;0.8711;0.8681;0.8668;0.8167;0.8217;0.8167;0.816;0.9485;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
RandomForestClassifier;0.8735;0.8787;0.8735;0.8737;0.8472;0.8553;0.8472;0.8469;0.8167;0.8217;0.8167;0.816;0.9715;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 325};RandomForestClassifier(n_estimators=10, random_state=325)
KNeighborsClassifier;0.831;0.8422;0.831;0.8318;0.8542;0.855;0.8542;0.8542;0.8167;0.8175;0.8167;0.816;0.9434;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8264;0.8341;0.8264;0.8271;0.8611;0.8722;0.8611;0.8621;0.8167;0.8217;0.8167;0.816;0.9463;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
KNeighborsClassifier;0.8356;0.8417;0.8356;0.8359;0.8125;0.8186;0.8125;0.8122;0.8167;0.8175;0.8167;0.816;0.9501;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8218;0.829;0.8218;0.8221;0.8681;0.8692;0.8681;0.8682;0.8167;0.8217;0.8167;0.816;0.9432;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8071;0.8131;0.8071;0.8076;0.8681;0.8676;0.8681;0.8676;0.8167;0.8193;0.8167;0.8157;0.9408;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
KNeighborsClassifier;0.8395;0.8479;0.8395;0.8399;0.875;0.8851;0.875;0.8748;0.8167;0.8193;0.8167;0.8157;0.9397;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8804;0.8835;0.8804;0.8803;0.8611;0.8626;0.8611;0.8614;0.8167;0.8296;0.8167;0.8156;0.9686;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 949};RandomForestClassifier(n_estimators=10, random_state=949)
KNeighborsClassifier;0.8356;0.8438;0.8356;0.8362;0.8264;0.8323;0.8264;0.826;0.8167;0.8178;0.8167;0.8148;0.9439;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8718;0.8747;0.8718;0.872;0.875;0.8776;0.875;0.8755;0.8167;0.8423;0.8167;0.8148;0.9661;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
RandomForestClassifier;0.8773;0.8794;0.8773;0.8773;0.9097;0.9099;0.9097;0.9096;0.8167;0.8257;0.8167;0.8142;0.9674;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 325};RandomForestClassifier(n_estimators=20, random_state=325)
MLPClassifier;0.8255;0.8334;0.8255;0.8262;0.8819;0.883;0.8819;0.8823;0.8167;0.8194;0.8167;0.8142;0.943;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
RandomForestClassifier;0.8858;0.8899;0.8858;0.8862;0.8819;0.8821;0.8819;0.8818;0.8167;0.819;0.8167;0.8117;0.971;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 980};RandomForestClassifier(n_estimators=20, random_state=980)
RandomForestClassifier;0.8788;0.8822;0.8788;0.8792;0.8819;0.8969;0.8819;0.8835;0.8;0.8171;0.8;0.8007;0.9671;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 325};RandomForestClassifier(n_estimators=20, random_state=325)
RandomForestClassifier;0.875;0.879;0.875;0.8752;0.8472;0.869;0.8472;0.8488;0.8;0.8072;0.8;0.8005;0.9691;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 325};RandomForestClassifier(n_estimators=20, random_state=325)
KNeighborsClassifier;0.831;0.8388;0.831;0.8315;0.8125;0.8181;0.8125;0.8135;0.8;0.8013;0.8;0.8003;0.9464;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8233;0.8328;0.8233;0.8238;0.8958;0.8987;0.8958;0.8956;0.8;0.8013;0.8;0.8003;0.9409;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8256;0.8338;0.8256;0.8266;0.8403;0.8468;0.8403;0.8412;0.8;0.802;0.8;0.7997;0.9444;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
RandomForestClassifier;0.8812;0.8837;0.8812;0.8814;0.8681;0.8697;0.8681;0.8676;0.8;0.8016;0.8;0.7997;0.9678;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 980};RandomForestClassifier(n_estimators=10, random_state=980)
KNeighborsClassifier;0.8318;0.8408;0.8318;0.8321;0.9167;0.9165;0.9167;0.9161;0.8;0.802;0.8;0.7997;0.9409;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8295;0.8371;0.8295;0.8299;0.8819;0.8843;0.8819;0.8824;0.8;0.7997;0.8;0.7995;0.9439;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8403;0.8484;0.8403;0.8405;0.8889;0.8929;0.8889;0.8883;0.8;0.7997;0.8;0.7995;0.9448;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8781;0.8802;0.8781;0.8781;0.8264;0.8294;0.8264;0.8268;0.8;0.8083;0.8;0.7987;0.9696;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
RandomForestClassifier;0.8796;0.8832;0.8796;0.8801;0.875;0.8799;0.875;0.8759;0.8;0.8018;0.8;0.7986;0.968;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 980};RandomForestClassifier(n_estimators=10, random_state=980)
MLPClassifier;0.8257;0.8329;0.8257;0.8261;0.8889;0.8908;0.8889;0.8893;0.8;0.8018;0.8;0.7986;0.9442;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
MLPClassifier;0.828;0.8362;0.828;0.8286;0.8819;0.8834;0.8819;0.8821;0.8;0.8018;0.8;0.7986;0.9453;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8147;0.822;0.8147;0.8157;0.9375;0.9373;0.9375;0.9374;0.8;0.8018;0.8;0.7986;0.9399;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
MLPClassifier;0.828;0.8348;0.828;0.8284;0.8611;0.8712;0.8611;0.8635;0.8;0.8018;0.8;0.7986;0.9477;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
KNeighborsClassifier;0.8372;0.8434;0.8372;0.8374;0.8681;0.8687;0.8681;0.8682;0.8;0.8019;0.8;0.7985;0.9448;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8696;0.872;0.8696;0.8696;0.9028;0.9096;0.9028;0.9039;0.8;0.8065;0.8;0.7985;0.9679;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
MLPClassifier;0.8287;0.837;0.8287;0.8288;0.8681;0.879;0.8681;0.8698;0.8;0.7987;0.8;0.798;0.9451;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
KNeighborsClassifier;0.8271;0.8367;0.8271;0.8275;0.8264;0.8313;0.8264;0.8268;0.8;0.802;0.8;0.798;0.9394;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8673;0.8706;0.8673;0.8674;0.9306;0.9352;0.9306;0.9304;0.8;0.8056;0.8;0.7969;0.9689;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
MLPClassifier;0.8203;0.8286;0.8203;0.8211;0.9028;0.9036;0.9028;0.9027;0.8;0.8016;0.8;0.7965;0.9417;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.814;0.8221;0.814;0.8151;0.9028;0.9038;0.9028;0.9027;0.8;0.8016;0.8;0.7965;0.9424;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8178;0.8273;0.8178;0.8189;0.9097;0.9127;0.9097;0.9102;0.8;0.8016;0.8;0.7965;0.9431;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8225;0.8281;0.8225;0.8227;0.875;0.8844;0.875;0.8766;0.8;0.8016;0.8;0.7965;0.9418;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
RandomForestClassifier;0.8758;0.879;0.8758;0.876;0.9028;0.9049;0.9028;0.903;0.8;0.8132;0.8;0.7965;0.9672;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 325};RandomForestClassifier(n_estimators=20, random_state=325)
RandomForestClassifier;0.8789;0.8821;0.8789;0.8795;0.8333;0.8336;0.8333;0.8333;0.7833;0.7857;0.7833;0.7835;0.9685;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
KNeighborsClassifier;0.824;0.8337;0.824;0.8248;0.8681;0.8731;0.8681;0.8687;0.7833;0.7833;0.7833;0.7833;0.9421;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8341;0.8429;0.8341;0.8347;0.8542;0.8592;0.8542;0.8541;0.7833;0.7873;0.7833;0.7831;0.9453;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.814;0.8229;0.814;0.8145;0.9306;0.9321;0.9306;0.9307;0.7833;0.783;0.7833;0.7828;0.9355;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8611;0.8637;0.8611;0.8611;0.8472;0.8501;0.8472;0.8468;0.7833;0.783;0.7833;0.7828;0.8958;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
KNeighborsClassifier;0.8349;0.8418;0.8349;0.8354;0.9028;0.9041;0.9028;0.903;0.7833;0.7839;0.7833;0.7827;0.9473;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8719;0.8761;0.8719;0.8719;0.9167;0.9168;0.9167;0.9167;0.7833;0.7839;0.7833;0.7827;0.9663;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 980};RandomForestClassifier(n_estimators=20, random_state=980)
KNeighborsClassifier;0.8325;0.84;0.8325;0.8332;0.8611;0.8613;0.8611;0.8609;0.7833;0.7839;0.7833;0.7827;0.9443;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8726;0.8755;0.8726;0.873;0.8542;0.8549;0.8542;0.8544;0.7833;0.7861;0.7833;0.7823;0.9696;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 980};RandomForestClassifier(n_estimators=20, random_state=980)
DecisionTreeClassifier;0.8642;0.8669;0.8642;0.8646;0.8125;0.8161;0.8125;0.8136;0.7833;0.7831;0.7833;0.7822;0.8982;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=236)
KNeighborsClassifier;0.8341;0.8412;0.8341;0.8344;0.8403;0.8602;0.8403;0.8421;0.7833;0.7903;0.7833;0.7816;0.9442;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8264;0.833;0.8264;0.8272;0.875;0.8818;0.875;0.8765;0.7833;0.7854;0.7833;0.7813;0.944;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8187;0.8263;0.8187;0.8195;0.8681;0.8708;0.8681;0.8689;0.7833;0.7833;0.7833;0.7811;0.945;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8218;0.8285;0.8218;0.8225;0.8681;0.8759;0.8681;0.8694;0.7833;0.7833;0.7833;0.7811;0.9458;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8311;0.8369;0.8311;0.8312;0.8194;0.8277;0.8194;0.8211;0.7833;0.7833;0.7833;0.7811;0.9472;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
MLPClassifier;0.8188;0.8262;0.8188;0.8194;0.8542;0.8716;0.8542;0.8568;0.7833;0.7833;0.7833;0.7811;0.9458;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
MLPClassifier;0.8279;0.8343;0.8279;0.8286;0.8681;0.8685;0.8681;0.8682;0.7833;0.7833;0.7833;0.7811;0.9469;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8187;0.8262;0.8187;0.8192;0.8958;0.897;0.8958;0.8954;0.7833;0.7833;0.7833;0.7811;0.9437;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 300, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=300)
RandomForestClassifier;0.8727;0.8756;0.8727;0.8728;0.875;0.8795;0.875;0.8743;0.7833;0.7922;0.7833;0.7807;0.9692;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 325};RandomForestClassifier(n_estimators=10, random_state=325)
RandomForestClassifier;0.8773;0.8805;0.8773;0.8773;0.875;0.8785;0.875;0.8756;0.7833;0.7873;0.7833;0.7786;0.9683;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 980};RandomForestClassifier(n_estimators=20, random_state=980)
RandomForestClassifier;0.8726;0.8762;0.8726;0.8727;0.9167;0.9165;0.9167;0.9165;0.7833;0.7873;0.7833;0.7786;0.9678;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 949};RandomForestClassifier(n_estimators=20, random_state=949)
RandomForestClassifier;0.8719;0.8753;0.8719;0.8723;0.8819;0.8868;0.8819;0.883;0.7667;0.7672;0.7667;0.7659;0.9654;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 325};RandomForestClassifier(n_estimators=5, random_state=325)
DecisionTreeClassifier;0.8573;0.8594;0.8573;0.8569;0.8403;0.8443;0.8403;0.8407;0.7667;0.7672;0.7667;0.7659;0.8929;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=236)
KNeighborsClassifier;0.8318;0.8403;0.8318;0.8323;0.875;0.8775;0.875;0.8755;0.7667;0.7655;0.7667;0.7657;0.946;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.74;0.772;0.74;0.739;0.7986;0.819;0.7986;0.7999;0.7667;0.779;0.7667;0.7654;0.8866;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
MLPClassifier;0.8218;0.8283;0.8218;0.8226;0.9167;0.9227;0.9167;0.9172;0.7667;0.7658;0.7667;0.7633;0.9442;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
DecisionTreeClassifier;0.8618;0.8641;0.8618;0.8615;0.8681;0.8758;0.8681;0.8679;0.75;0.75;0.75;0.75;0.8964;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
DecisionTreeClassifier;0.8604;0.8627;0.8604;0.8603;0.8194;0.8244;0.8194;0.8207;0.75;0.7504;0.75;0.7499;0.8953;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
DecisionTreeClassifier;0.8511;0.8556;0.8511;0.8514;0.8542;0.8568;0.8542;0.855;0.75;0.7504;0.75;0.7499;0.8883;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
DecisionTreeClassifier;0.8603;0.8629;0.8603;0.8602;0.8542;0.8542;0.8542;0.8542;0.75;0.7488;0.75;0.7491;0.8953;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
SVC;0.7554;0.7918;0.7554;0.7541;0.8333;0.8481;0.8333;0.8333;0.75;0.7689;0.75;0.7488;0.8884;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.74;0.7732;0.74;0.7385;0.8542;0.8667;0.8542;0.8514;0.75;0.7557;0.75;0.7487;0.8859;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
DecisionTreeClassifier;0.8642;0.867;0.8642;0.8641;0.8264;0.8329;0.8264;0.8274;0.75;0.7506;0.75;0.748;0.8981;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
MLPClassifier;0.8287;0.8353;0.8287;0.8295;0.8819;0.8831;0.8819;0.8817;0.75;0.7506;0.75;0.748;0.9453;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
SVC;0.757;0.7938;0.757;0.756;0.8264;0.8426;0.8264;0.8306;0.75;0.7587;0.75;0.7474;0.8873;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
RandomForestClassifier;0.8834;0.8862;0.8834;0.8836;0.8472;0.8482;0.8472;0.8475;0.75;0.7609;0.75;0.7472;0.9675;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 325};RandomForestClassifier(n_estimators=20, random_state=325)
KNeighborsClassifier;0.8249;0.8317;0.8249;0.8255;0.8681;0.8694;0.8681;0.8683;0.75;0.76;0.75;0.7471;0.938;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8681;0.8709;0.8681;0.8682;0.8889;0.8897;0.8889;0.8885;0.75;0.7564;0.75;0.7467;0.9682;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 325};RandomForestClassifier(n_estimators=20, random_state=325)
DecisionTreeClassifier;0.8533;0.8544;0.8533;0.853;0.8472;0.852;0.8472;0.8488;0.7333;0.7407;0.7333;0.7337;0.89;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=681)
DecisionTreeClassifier;0.8619;0.8643;0.8619;0.8618;0.8472;0.8607;0.8472;0.8468;0.7333;0.7345;0.7333;0.7336;0.8964;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
DecisionTreeClassifier;0.8627;0.8668;0.8627;0.8626;0.8889;0.8924;0.8889;0.8896;0.7333;0.7333;0.7333;0.7333;0.897;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
DecisionTreeClassifier;0.8626;0.8641;0.8626;0.8621;0.8472;0.8469;0.8472;0.847;0.7333;0.7347;0.7333;0.7328;0.8969;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
DecisionTreeClassifier;0.8464;0.849;0.8464;0.8464;0.8681;0.8716;0.8681;0.868;0.7333;0.7347;0.7333;0.7328;0.8848;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
DecisionTreeClassifier;0.8549;0.8594;0.8549;0.8549;0.875;0.8784;0.875;0.8758;0.7333;0.7329;0.7333;0.7328;0.8912;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
SVC;0.75;0.7882;0.75;0.7484;0.8194;0.8338;0.8194;0.8204;0.7333;0.7467;0.7333;0.7323;0.8879;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.7493;0.7797;0.7493;0.7485;0.8333;0.837;0.8333;0.8333;0.7333;0.7448;0.7333;0.7323;0.89;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
SVC;0.7415;0.7809;0.7415;0.7407;0.8611;0.8696;0.8611;0.8626;0.7333;0.7448;0.7333;0.7323;0.8833;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
DecisionTreeClassifier;0.8565;0.8589;0.8565;0.8564;0.8333;0.8339;0.8333;0.832;0.7333;0.7312;0.7333;0.732;0.8923;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
SVC;0.7446;0.7754;0.7446;0.7441;0.8333;0.8479;0.8333;0.8354;0.7333;0.7429;0.7333;0.7312;0.8862;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
KNeighborsClassifier;0.8287;0.8382;0.8287;0.8297;0.7847;0.7985;0.7847;0.7859;0.7333;0.7346;0.7333;0.7311;0.9472;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.7523;0.7815;0.7523;0.7509;0.8264;0.8422;0.8264;0.8292;0.7333;0.7416;0.7333;0.731;0.8891;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7555;0.7946;0.7555;0.7547;0.8403;0.8693;0.8403;0.8439;0.7333;0.7416;0.7333;0.731;0.8856;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7376;0.7744;0.7376;0.7364;0.8611;0.8673;0.8611;0.8625;0.7333;0.7416;0.7333;0.731;0.8848;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.7484;0.781;0.7484;0.7468;0.8125;0.836;0.8125;0.8155;0.7333;0.753;0.7333;0.7291;0.8897;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7553;0.7862;0.7553;0.7543;0.8056;0.83;0.8056;0.807;0.7333;0.753;0.7333;0.7291;0.8895;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7454;0.782;0.7454;0.744;0.8472;0.8716;0.8472;0.8502;0.7333;0.753;0.7333;0.7291;0.8847;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
SVC;0.7522;0.7919;0.7522;0.7513;0.8403;0.8688;0.8403;0.8428;0.7333;0.753;0.7333;0.7291;0.8815;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
SVC;0.7492;0.7853;0.7492;0.7481;0.8542;0.8829;0.8542;0.8554;0.7333;0.753;0.7333;0.7291;0.8847;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
DecisionTreeClassifier;0.8611;0.8639;0.8611;0.8611;0.7847;0.7882;0.7847;0.7851;0.7167;0.7187;0.7167;0.7174;0.8959;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
DecisionTreeClassifier;0.8549;0.8561;0.8549;0.8546;0.8681;0.8721;0.8681;0.8693;0.7167;0.7195;0.7167;0.717;0.8912;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
DecisionTreeClassifier;0.8604;0.8639;0.8604;0.8602;0.8333;0.8396;0.8333;0.8344;0.7167;0.717;0.7167;0.7165;0.8953;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
DecisionTreeClassifier;0.8626;0.8656;0.8626;0.8622;0.8472;0.8482;0.8472;0.8475;0.7167;0.7154;0.7167;0.7157;0.897;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
SVC;0.7477;0.7806;0.7477;0.7461;0.7708;0.7917;0.7708;0.7734;0.7167;0.7214;0.7167;0.7149;0.8888;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
DecisionTreeClassifier;0.8519;0.8553;0.8519;0.852;0.8403;0.8422;0.8403;0.8408;0.7167;0.7214;0.7167;0.7149;0.8889;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
DecisionTreeClassifier;0.8549;0.8582;0.8549;0.8548;0.8611;0.8658;0.8611;0.8623;0.7167;0.7214;0.7167;0.7149;0.8912;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
SVC;0.7523;0.784;0.7523;0.751;0.7986;0.8238;0.7986;0.801;0.7167;0.7411;0.7167;0.7143;0.8929;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
SVC;0.7485;0.7772;0.7485;0.7472;0.8333;0.847;0.8333;0.833;0.7167;0.7368;0.7167;0.7131;0.8939;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.7492;0.7845;0.7492;0.7492;0.7917;0.8403;0.7917;0.7955;0.7167;0.7292;0.7167;0.7129;0.8878;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.7539;0.786;0.7539;0.7523;0.7847;0.8021;0.7847;0.7856;0.7167;0.7292;0.7167;0.7129;0.8906;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7423;0.7774;0.7423;0.7414;0.8681;0.8688;0.8681;0.8671;0.7167;0.7292;0.7167;0.7129;0.8877;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7576;0.7855;0.7576;0.7562;0.7917;0.8219;0.7917;0.7966;0.7167;0.7292;0.7167;0.7129;0.8926;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
SVC;0.7461;0.7742;0.7461;0.7444;0.8819;0.8905;0.8819;0.8833;0.7167;0.7292;0.7167;0.7129;0.8866;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7492;0.7762;0.7492;0.7491;0.8125;0.8244;0.8125;0.815;0.7;0.7045;0.7;0.6984;0.8897;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
DecisionTreeClassifier;0.8541;0.859;0.8541;0.8546;0.8889;0.8894;0.8889;0.8891;0.7;0.6986;0.7;0.6984;0.8906;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
DecisionTreeClassifier;0.8627;0.8663;0.8627;0.8625;0.8472;0.8529;0.8472;0.8485;0.7;0.6986;0.7;0.6984;0.897;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
DecisionTreeClassifier;0.8572;0.8596;0.8572;0.8573;0.8194;0.8248;0.8194;0.8208;0.7;0.7042;0.7;0.6976;0.8929;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
SVC;0.7562;0.791;0.7562;0.756;0.8056;0.8262;0.8056;0.8057;0.7;0.7067;0.7;0.697;0.8885;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.7508;0.7858;0.7508;0.7501;0.8333;0.8589;0.8333;0.8355;0.7;0.7067;0.7;0.697;0.8862;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 852};SVC(C=10, probability=True, random_state=852)
SVC;0.7445;0.7826;0.7445;0.7445;0.8264;0.834;0.8264;0.8267;0.7;0.7067;0.7;0.697;0.8911;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
SVC;0.7592;0.7906;0.7592;0.7586;0.8403;0.8547;0.8403;0.8425;0.7;0.7067;0.7;0.697;0.8918;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
DecisionTreeClassifier;0.8611;0.8627;0.8611;0.8608;0.8472;0.856;0.8472;0.8489;0.7;0.6991;0.7;0.6957;0.8958;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 236};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=236)
DecisionTreeClassifier;0.8519;0.8535;0.8519;0.8518;0.7778;0.7881;0.7778;0.7784;0.7;0.695;0.7;0.6896;0.889;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
SVC;0.736;0.7682;0.736;0.7348;0.8889;0.8968;0.8889;0.8899;0.6833;0.6944;0.6833;0.6817;0.8843;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 287};SVC(C=10, probability=True, random_state=287)
DecisionTreeClassifier;0.8588;0.8613;0.8588;0.8584;0.8542;0.8531;0.8542;0.8535;0.6667;0.6645;0.6667;0.6635;0.894;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
DecisionTreeClassifier;0.8595;0.8616;0.8595;0.8593;0.8611;0.8607;0.8611;0.8605;0.6667;0.671;0.6667;0.6572;0.8946;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
DecisionTreeClassifier;0.8565;0.8613;0.8565;0.8564;0.8889;0.8976;0.8889;0.8896;0.65;0.6549;0.65;0.644;0.8924;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 911};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=911)
DecisionTreeClassifier;0.8549;0.8575;0.8549;0.8546;0.8542;0.8681;0.8542;0.8559;0.65;0.644;0.65;0.6417;0.8911;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 681};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=681)
LogisticRegression;0.6798;0.6844;0.6798;0.6788;0.7569;0.7605;0.7569;0.7534;0.5833;0.6005;0.5833;0.5835;0.8697;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6905;0.6935;0.6905;0.6892;0.6944;0.6992;0.6944;0.694;0.5833;0.6005;0.5833;0.5835;0.8747;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6883;0.6993;0.6883;0.6872;0.6806;0.6806;0.6806;0.6787;0.5833;0.6005;0.5833;0.5835;0.8766;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6805;0.6848;0.6805;0.678;0.7708;0.7823;0.7708;0.7713;0.5833;0.6005;0.5833;0.5835;0.868;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6836;0.6913;0.6836;0.683;0.6736;0.6916;0.6736;0.6761;0.5833;0.6005;0.5833;0.5835;0.8752;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6882;0.6965;0.6882;0.6871;0.6667;0.6759;0.6667;0.6663;0.5833;0.6005;0.5833;0.5835;0.8799;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.7029;0.7093;0.7029;0.7025;0.6319;0.6338;0.6319;0.6293;0.5833;0.6005;0.5833;0.5835;0.8794;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6812;0.685;0.6812;0.6804;0.6875;0.6965;0.6875;0.684;0.5833;0.6005;0.5833;0.5835;0.8742;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6952;0.7002;0.6952;0.6946;0.7014;0.716;0.7014;0.7021;0.5833;0.6005;0.5833;0.5835;0.8758;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
LogisticRegression;0.6883;0.695;0.6883;0.6872;0.7292;0.7449;0.7292;0.7277;0.5833;0.6005;0.5833;0.5835;0.8727;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6968;0.7008;0.6968;0.6957;0.6667;0.6705;0.6667;0.6658;0.5833;0.6005;0.5833;0.5835;0.876;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6952;0.7037;0.6952;0.6932;0.6944;0.7162;0.6944;0.6936;0.5833;0.6005;0.5833;0.5835;0.8772;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6852;0.6888;0.6852;0.6841;0.6736;0.6775;0.6736;0.6732;0.5833;0.6005;0.5833;0.5835;0.8718;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6852;0.6926;0.6852;0.6844;0.7014;0.7225;0.7014;0.7025;0.5833;0.6005;0.5833;0.5835;0.8763;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6928;0.6975;0.6928;0.6916;0.6806;0.6865;0.6806;0.6803;0.5833;0.6005;0.5833;0.5835;0.8772;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6774;0.6828;0.6774;0.6758;0.7986;0.7986;0.7986;0.7979;0.5833;0.6005;0.5833;0.5835;0.8697;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6867;0.694;0.6867;0.6865;0.7222;0.7315;0.7222;0.7204;0.5833;0.6005;0.5833;0.5835;0.8731;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6966;0.7024;0.6966;0.6959;0.6667;0.7064;0.6667;0.6658;0.5833;0.6005;0.5833;0.5835;0.8775;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6944;0.7036;0.6944;0.6946;0.6944;0.7176;0.6944;0.6903;0.5833;0.6005;0.5833;0.5835;0.8763;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6997;0.7052;0.6997;0.6982;0.6389;0.6542;0.6389;0.6388;0.5833;0.6005;0.5833;0.5835;0.8771;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6844;0.6898;0.6844;0.6837;0.6736;0.6764;0.6736;0.6728;0.5833;0.6005;0.5833;0.5835;0.875;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6828;0.6928;0.6828;0.683;0.6944;0.7036;0.6944;0.6942;0.5833;0.6005;0.5833;0.5835;0.8754;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6906;0.6967;0.6906;0.6904;0.6736;0.6843;0.6736;0.6755;0.5833;0.6005;0.5833;0.5835;0.8746;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.679;0.6847;0.679;0.6781;0.7292;0.7293;0.7292;0.7279;0.5833;0.6005;0.5833;0.5835;0.8726;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.6813;0.6863;0.6813;0.6808;0.6944;0.7017;0.6944;0.6943;0.5833;0.6005;0.5833;0.5835;0.8749;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6899;0.694;0.6899;0.6887;0.6736;0.6795;0.6736;0.6738;0.5833;0.6005;0.5833;0.5835;0.8764;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6875;0.6925;0.6875;0.687;0.6597;0.6815;0.6597;0.6618;0.5833;0.6005;0.5833;0.5835;0.8749;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6852;0.6924;0.6852;0.6851;0.7292;0.7312;0.7292;0.7291;0.5833;0.6005;0.5833;0.5835;0.8723;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.6905;0.6971;0.6905;0.6901;0.7361;0.7486;0.7361;0.7351;0.5833;0.6005;0.5833;0.5835;0.8746;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 99, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=99)"
LogisticRegression;0.686;0.6927;0.686;0.6846;0.7014;0.7254;0.7014;0.7037;0.5333;0.5489;0.5333;0.5349;0.8772;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 543, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=543)"
