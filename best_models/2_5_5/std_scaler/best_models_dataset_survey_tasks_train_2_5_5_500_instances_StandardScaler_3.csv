Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8696;0.875;0.8696;0.8705;0.8472;0.8483;0.8472;0.8477;0.8833;0.8873;0.8833;0.8826;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=573)
RandomForestClassifier;0.8781;0.8825;0.8781;0.8786;0.8472;0.8503;0.8472;0.848;0.85;0.8579;0.85;0.8507;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 178};RandomForestClassifier(n_estimators=5, random_state=178)
DecisionTreeClassifier;0.8603;0.8667;0.8603;0.8614;0.875;0.8756;0.875;0.8721;0.85;0.8577;0.85;0.8488;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=478)
DecisionTreeClassifier;0.8642;0.8723;0.8642;0.8654;0.8889;0.8878;0.8889;0.8881;0.85;0.8577;0.85;0.8488;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=478)
DecisionTreeClassifier;0.8626;0.8675;0.8626;0.8633;0.7986;0.8139;0.7986;0.8012;0.85;0.8577;0.85;0.8488;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=478)
DecisionTreeClassifier;0.8649;0.8711;0.8649;0.8661;0.8611;0.8604;0.8611;0.86;0.85;0.8577;0.85;0.8488;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=573)
DecisionTreeClassifier;0.8604;0.8649;0.8604;0.8611;0.8611;0.8739;0.8611;0.863;0.85;0.8518;0.85;0.8483;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=58)
MLPClassifier;0.8457;0.8531;0.8457;0.8469;0.8889;0.8899;0.8889;0.8892;0.8333;0.8419;0.8333;0.8353;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.8465;0.8575;0.8465;0.8477;0.8472;0.8589;0.8472;0.8481;0.8333;0.8419;0.8333;0.8353;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
MLPClassifier;0.8425;0.8509;0.8425;0.8436;0.8542;0.8686;0.8542;0.852;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
RandomForestClassifier;0.8603;0.8637;0.8603;0.8608;0.9167;0.9199;0.9167;0.9169;0.8333;0.8524;0.8333;0.8338;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 204};RandomForestClassifier(n_estimators=20, random_state=204)
DecisionTreeClassifier;0.8549;0.8632;0.8549;0.8558;0.8889;0.8887;0.8889;0.8875;0.8333;0.8357;0.8333;0.8331;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.8719;0.8786;0.8719;0.8729;0.8264;0.8279;0.8264;0.8267;0.8333;0.8367;0.8333;0.8324;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.8696;0.877;0.8696;0.8705;0.8542;0.861;0.8542;0.8563;0.8333;0.8333;0.8333;0.8323;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=573)
DecisionTreeClassifier;0.8696;0.8764;0.8696;0.8703;0.8542;0.8576;0.8542;0.8555;0.8333;0.8333;0.8333;0.8323;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=573)
DecisionTreeClassifier;0.8549;0.8625;0.8549;0.8564;0.9236;0.9296;0.9236;0.9219;0.8333;0.8333;0.8333;0.8323;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=58)
DecisionTreeClassifier;0.8688;0.8765;0.8688;0.8699;0.8819;0.881;0.8819;0.881;0.8333;0.8333;0.8333;0.8323;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=58)
RandomForestClassifier;0.8688;0.8749;0.8688;0.8695;0.9028;0.904;0.9028;0.9029;0.8167;0.8287;0.8167;0.819;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.8634;0.8691;0.8634;0.8642;0.9167;0.9222;0.9167;0.9178;0.8167;0.8239;0.8167;0.8189;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 103};RandomForestClassifier(n_estimators=5, random_state=103)
DecisionTreeClassifier;0.8742;0.8794;0.8742;0.875;0.8194;0.8338;0.8194;0.8217;0.8167;0.8268;0.8167;0.8185;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=58)
DecisionTreeClassifier;0.875;0.882;0.875;0.8761;0.8472;0.8565;0.8472;0.849;0.8167;0.8268;0.8167;0.8185;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
MLPClassifier;0.8426;0.851;0.8426;0.8435;0.8472;0.8627;0.8472;0.849;0.8167;0.8214;0.8167;0.8181;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
DecisionTreeClassifier;0.8766;0.8838;0.8766;0.8772;0.8333;0.85;0.8333;0.8355;0.8167;0.8234;0.8167;0.8178;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=58)
MLPClassifier;0.8465;0.8551;0.8465;0.8471;0.8472;0.8543;0.8472;0.8493;0.8167;0.8234;0.8167;0.8178;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8418;0.8523;0.8418;0.8437;0.875;0.8883;0.875;0.876;0.8167;0.8234;0.8167;0.8178;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
RandomForestClassifier;0.8742;0.8776;0.8742;0.8749;0.8264;0.8428;0.8264;0.8275;0.8167;0.8224;0.8167;0.8173;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 204};RandomForestClassifier(n_estimators=10, random_state=204)
MLPClassifier;0.8434;0.8529;0.8434;0.8446;0.875;0.8775;0.875;0.876;0.8167;0.8224;0.8167;0.8173;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8434;0.8509;0.8434;0.8446;0.8542;0.8542;0.8542;0.854;0.8167;0.8224;0.8167;0.8173;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
MLPClassifier;0.8426;0.8493;0.8426;0.8437;0.8889;0.8976;0.8889;0.8903;0.8167;0.8224;0.8167;0.8173;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
RandomForestClassifier;0.875;0.8802;0.875;0.876;0.8681;0.8699;0.8681;0.8687;0.8167;0.8167;0.8167;0.8167;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 103};RandomForestClassifier(n_estimators=20, random_state=103)
DecisionTreeClassifier;0.8727;0.8815;0.8727;0.8738;0.8472;0.8577;0.8472;0.8471;0.8167;0.8163;0.8167;0.8162;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=573)
DecisionTreeClassifier;0.8634;0.8702;0.8634;0.8642;0.8681;0.8711;0.8681;0.8677;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=58)
RandomForestClassifier;0.8634;0.8687;0.8634;0.8641;0.8819;0.8843;0.8819;0.882;0.8167;0.8228;0.8167;0.8156;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 178};RandomForestClassifier(n_estimators=10, random_state=178)
DecisionTreeClassifier;0.8665;0.876;0.8665;0.8678;0.8611;0.8622;0.8611;0.8609;0.8167;0.8171;0.8167;0.8144;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=58)
DecisionTreeClassifier;0.8588;0.8633;0.8588;0.8592;0.8611;0.8743;0.8611;0.8628;0.8167;0.8171;0.8167;0.8144;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=478)
DecisionTreeClassifier;0.8642;0.8724;0.8642;0.8651;0.9097;0.9202;0.9097;0.9113;0.8167;0.8171;0.8167;0.8144;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.8626;0.8703;0.8626;0.8637;0.8958;0.9099;0.8958;0.8971;0.8167;0.8171;0.8167;0.8144;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=58)
RandomForestClassifier;0.8604;0.8657;0.8604;0.8609;0.8889;0.8909;0.8889;0.8876;0.8;0.8101;0.8;0.8024;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 204};RandomForestClassifier(n_estimators=20, random_state=204)
RandomForestClassifier;0.875;0.8803;0.875;0.8756;0.8403;0.8392;0.8403;0.839;0.8;0.813;0.8;0.8023;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 204};RandomForestClassifier(n_estimators=10, random_state=204)
MLPClassifier;0.8403;0.8496;0.8403;0.8415;0.9097;0.9118;0.9097;0.9103;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
MLPClassifier;0.8449;0.8523;0.8449;0.8463;0.8403;0.8451;0.8403;0.8421;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.848;0.8571;0.848;0.8491;0.8542;0.8618;0.8542;0.855;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
MLPClassifier;0.8402;0.848;0.8402;0.8412;0.8611;0.8639;0.8611;0.8612;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.8534;0.8607;0.8534;0.8543;0.8056;0.8218;0.8056;0.807;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.8349;0.8441;0.8349;0.8364;0.8611;0.8607;0.8611;0.8601;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8418;0.8491;0.8418;0.8427;0.8819;0.8873;0.8819;0.8835;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8395;0.8484;0.8395;0.8404;0.8889;0.8894;0.8889;0.8886;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
RandomForestClassifier;0.8688;0.8722;0.8688;0.8694;0.8611;0.8794;0.8611;0.8642;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 178};RandomForestClassifier(n_estimators=10, random_state=178)
RandomForestClassifier;0.868;0.8729;0.868;0.8686;0.875;0.883;0.875;0.8756;0.8;0.8054;0.8;0.8013;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 178};RandomForestClassifier(n_estimators=10, random_state=178)
RandomForestClassifier;0.8673;0.8729;0.8673;0.868;0.8472;0.8481;0.8472;0.8468;0.8;0.8038;0.8;0.801;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 178};RandomForestClassifier(n_estimators=5, random_state=178)
RandomForestClassifier;0.8719;0.8771;0.8719;0.8725;0.8611;0.8604;0.8611;0.8606;0.8;0.8042;0.8;0.801;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.8696;0.8742;0.8696;0.8701;0.8403;0.8568;0.8403;0.8434;0.8;0.8038;0.8;0.801;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 178};RandomForestClassifier(n_estimators=5, random_state=178)
MLPClassifier;0.8457;0.8579;0.8457;0.8475;0.8681;0.8667;0.8681;0.8657;0.8;0.8058;0.8;0.8007;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
KNeighborsClassifier;0.8465;0.851;0.8465;0.8462;0.875;0.8868;0.875;0.8754;0.8;0.8072;0.8;0.8005;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8449;0.8553;0.8449;0.8463;0.8889;0.8894;0.8889;0.8891;0.8;0.8089;0.8;0.8004;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
DecisionTreeClassifier;0.8703;0.877;0.8703;0.871;0.8889;0.9014;0.8889;0.89;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.8665;0.8746;0.8665;0.8676;0.8611;0.8679;0.8611;0.8612;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=573)
DecisionTreeClassifier;0.8649;0.8744;0.8649;0.8664;0.8403;0.8408;0.8403;0.8398;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.8626;0.8692;0.8626;0.8638;0.8403;0.8439;0.8403;0.8402;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=573)
DecisionTreeClassifier;0.8603;0.868;0.8603;0.8616;0.9097;0.9118;0.9097;0.9103;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=573)
DecisionTreeClassifier;0.8689;0.8761;0.8689;0.8697;0.9097;0.9198;0.9097;0.9109;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=573)
DecisionTreeClassifier;0.858;0.8673;0.858;0.859;0.875;0.8821;0.875;0.8766;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=58)
DecisionTreeClassifier;0.8681;0.8779;0.8681;0.869;0.8542;0.8545;0.8542;0.8534;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 58};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=58)
RandomForestClassifier;0.8642;0.8698;0.8642;0.865;0.8819;0.8814;0.8819;0.8803;0.8;0.8288;0.8;0.7998;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 103};RandomForestClassifier(n_estimators=20, random_state=103)
RandomForestClassifier;0.8581;0.8642;0.8581;0.8589;0.9028;0.904;0.9028;0.9029;0.8;0.7989;0.8;0.7991;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 178};RandomForestClassifier(n_estimators=10, random_state=178)
RandomForestClassifier;0.8673;0.8707;0.8673;0.8679;0.875;0.8786;0.875;0.876;0.7833;0.7991;0.7833;0.7871;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 204};RandomForestClassifier(n_estimators=20, random_state=204)
RandomForestClassifier;0.8703;0.876;0.8703;0.8709;0.8819;0.8931;0.8819;0.884;0.7833;0.7956;0.7833;0.7864;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 103};RandomForestClassifier(n_estimators=20, random_state=103)
DecisionTreeClassifier;0.8687;0.8749;0.8687;0.8696;0.9028;0.9119;0.9028;0.9035;0.7833;0.8119;0.7833;0.7861;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 573};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=573)
RandomForestClassifier;0.8657;0.8699;0.8657;0.8661;0.8611;0.8783;0.8611;0.864;0.7833;0.7997;0.7833;0.7858;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 204};RandomForestClassifier(n_estimators=10, random_state=204)
RandomForestClassifier;0.8727;0.8799;0.8727;0.8735;0.8472;0.8506;0.8472;0.8477;0.7833;0.7913;0.7833;0.7852;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 204};RandomForestClassifier(n_estimators=20, random_state=204)
MLPClassifier;0.8503;0.8576;0.8503;0.8516;0.8472;0.8561;0.8472;0.8472;0.7833;0.7913;0.7833;0.7852;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
RandomForestClassifier;0.865;0.8697;0.865;0.8656;0.8611;0.8736;0.8611;0.8612;0.7833;0.7927;0.7833;0.785;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 204};RandomForestClassifier(n_estimators=5, random_state=204)
MLPClassifier;0.8403;0.8475;0.8403;0.8415;0.8611;0.8621;0.8611;0.8613;0.7833;0.7975;0.7833;0.7848;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8379;0.8461;0.8379;0.8388;0.8681;0.8728;0.8681;0.8693;0.7833;0.7975;0.7833;0.7848;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.8457;0.8556;0.8457;0.8468;0.8611;0.8596;0.8611;0.8596;0.7833;0.7975;0.7833;0.7848;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8395;0.8468;0.8395;0.8405;0.8681;0.8709;0.8681;0.8691;0.7833;0.7975;0.7833;0.7848;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.8419;0.8495;0.8419;0.8427;0.8681;0.8698;0.8681;0.8684;0.7833;0.7975;0.7833;0.7848;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.8426;0.8507;0.8426;0.8437;0.9097;0.9091;0.9097;0.9094;0.7833;0.7975;0.7833;0.7848;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 430, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=430)
MLPClassifier;0.8449;0.8531;0.8449;0.846;0.8542;0.8571;0.8542;0.8502;0.7833;0.7975;0.7833;0.7848;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
MLPClassifier;0.8403;0.8478;0.8403;0.8415;0.8819;0.8966;0.8819;0.883;0.7833;0.7904;0.7833;0.7847;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
SVC;0.8287;0.8358;0.8287;0.8301;0.8611;0.8684;0.8611;0.8618;0.7833;0.7863;0.7833;0.7845;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.8396;0.8451;0.8396;0.8408;0.8333;0.8475;0.8333;0.8351;0.7833;0.7863;0.7833;0.7845;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.8365;0.8434;0.8365;0.8379;0.8472;0.8583;0.8472;0.8483;0.7833;0.7863;0.7833;0.7845;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8403;0.8475;0.8403;0.8416;0.7917;0.7918;0.7917;0.7913;0.7833;0.7863;0.7833;0.7839;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.8371;0.8426;0.8371;0.8383;0.8056;0.8183;0.8056;0.8079;0.7833;0.7863;0.7833;0.7839;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
KNeighborsClassifier;0.8457;0.8525;0.8457;0.8463;0.8611;0.8791;0.8611;0.8627;0.7833;0.7838;0.7833;0.7832;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8334;0.837;0.8334;0.8331;0.8194;0.8281;0.8194;0.8218;0.7833;0.785;0.7833;0.7829;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8411;0.8496;0.8411;0.8417;0.9167;0.9162;0.9167;0.9162;0.7833;0.7829;0.7833;0.7828;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8341;0.8407;0.8341;0.8321;0.8819;0.8893;0.8819;0.883;0.7833;0.7863;0.7833;0.7827;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8442;0.8494;0.8442;0.8446;0.8889;0.9016;0.8889;0.8906;0.7833;0.7863;0.7833;0.7827;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8434;0.8494;0.8434;0.8437;0.8403;0.8419;0.8403;0.8406;0.7833;0.7915;0.7833;0.7809;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.8356;0.8423;0.8356;0.8366;0.8333;0.8417;0.8333;0.8352;0.7667;0.7754;0.7667;0.7697;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
RandomForestClassifier;0.8565;0.8612;0.8565;0.8569;0.8542;0.8578;0.8542;0.8555;0.7667;0.7825;0.7667;0.7697;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 178};RandomForestClassifier(n_estimators=5, random_state=178)
MLPClassifier;0.8441;0.8519;0.8441;0.8451;0.8125;0.8284;0.8125;0.8125;0.7667;0.7778;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
RandomForestClassifier;0.8634;0.8669;0.8634;0.8639;0.875;0.875;0.875;0.875;0.7667;0.7811;0.7667;0.7682;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 103};RandomForestClassifier(n_estimators=20, random_state=103)
RandomForestClassifier;0.8626;0.868;0.8626;0.8632;0.9097;0.9091;0.9097;0.9092;0.7667;0.7711;0.7667;0.768;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 204};RandomForestClassifier(n_estimators=10, random_state=204)
SVC;0.8334;0.8414;0.8334;0.8348;0.8333;0.8414;0.8333;0.8345;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.8372;0.8453;0.8372;0.8383;0.8125;0.8273;0.8125;0.8132;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
MLPClassifier;0.841;0.8496;0.841;0.8416;0.8819;0.8853;0.8819;0.8803;0.7667;0.7851;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 984, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=984)
SVC;0.8326;0.8404;0.8326;0.8339;0.8611;0.8622;0.8611;0.8609;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8372;0.845;0.8372;0.8383;0.8264;0.8391;0.8264;0.8295;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.8402;0.8491;0.8402;0.8419;0.8194;0.8345;0.8194;0.8179;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8325;0.8402;0.8325;0.8343;0.875;0.8823;0.875;0.8748;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.8395;0.8477;0.8395;0.8409;0.8125;0.8284;0.8125;0.8156;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.838;0.8446;0.838;0.8396;0.8472;0.8595;0.8472;0.8492;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
SVC;0.8364;0.8436;0.8364;0.8378;0.8542;0.858;0.8542;0.8556;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
SVC;0.831;0.8369;0.831;0.8326;0.9028;0.9047;0.9028;0.9031;0.7667;0.7697;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
RandomForestClassifier;0.8688;0.8759;0.8688;0.8694;0.8403;0.8468;0.8403;0.8398;0.7667;0.7851;0.7667;0.7678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 204};RandomForestClassifier(n_estimators=10, random_state=204)
KNeighborsClassifier;0.8534;0.858;0.8534;0.8539;0.8681;0.8806;0.8681;0.87;0.7667;0.7718;0.7667;0.7672;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8364;0.8414;0.8364;0.8372;0.875;0.8847;0.875;0.8771;0.7667;0.7718;0.7667;0.7672;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8418;0.8488;0.8418;0.8425;0.8542;0.8549;0.8542;0.8538;0.7667;0.7687;0.7667;0.7668;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8357;0.8406;0.8357;0.8352;0.8819;0.8902;0.8819;0.8823;0.7667;0.7687;0.7667;0.7668;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.831;0.8395;0.831;0.8321;0.8542;0.8699;0.8542;0.8541;0.7667;0.767;0.7667;0.7666;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
RandomForestClassifier;0.8664;0.8704;0.8664;0.8668;0.8542;0.8644;0.8542;0.857;0.7667;0.7684;0.7667;0.7662;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 103};RandomForestClassifier(n_estimators=10, random_state=103)
SVC;0.8333;0.8411;0.8333;0.8348;0.8681;0.8712;0.8681;0.8691;0.75;0.7645;0.75;0.7542;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.841;0.8492;0.841;0.8426;0.8264;0.8265;0.8264;0.8253;0.75;0.7593;0.75;0.7526;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
SVC;0.8364;0.8433;0.8364;0.8378;0.8611;0.8653;0.8611;0.8624;0.75;0.7566;0.75;0.7522;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
SVC;0.8371;0.8429;0.8371;0.8383;0.8264;0.8308;0.8264;0.8275;0.75;0.7569;0.75;0.7521;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8349;0.8421;0.8349;0.8364;0.8472;0.8549;0.8472;0.8491;0.75;0.7569;0.75;0.7521;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8341;0.8406;0.8341;0.8353;0.8611;0.8741;0.8611;0.862;0.75;0.7569;0.75;0.7521;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8371;0.8433;0.8371;0.8385;0.7986;0.8164;0.7986;0.8009;0.75;0.7569;0.75;0.7521;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
SVC;0.8395;0.8448;0.8395;0.8406;0.8333;0.8479;0.8333;0.835;0.75;0.7569;0.75;0.7521;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8372;0.8436;0.8372;0.8384;0.8542;0.8593;0.8542;0.8552;0.75;0.7569;0.75;0.7521;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 367};SVC(C=10, random_state=367)
RandomForestClassifier;0.8673;0.8736;0.8673;0.8675;0.8472;0.8485;0.8472;0.8478;0.75;0.7645;0.75;0.752;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 103};RandomForestClassifier(n_estimators=10, random_state=103)
RandomForestClassifier;0.8742;0.8798;0.8742;0.8747;0.8681;0.8775;0.8681;0.8683;0.75;0.762;0.75;0.752;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 103};RandomForestClassifier(n_estimators=5, random_state=103)
RandomForestClassifier;0.8766;0.8815;0.8766;0.8772;0.8403;0.8446;0.8403;0.841;0.75;0.7736;0.75;0.7516;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 103};RandomForestClassifier(n_estimators=20, random_state=103)
KNeighborsClassifier;0.858;0.8679;0.858;0.8588;0.8611;0.8732;0.8611;0.8623;0.75;0.7532;0.75;0.7504;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.8256;0.8335;0.8256;0.8272;0.8819;0.8926;0.8819;0.8817;0.75;0.75;0.75;0.75;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, random_state=781)
SVC;0.8372;0.8446;0.8372;0.8388;0.8472;0.8506;0.8472;0.8482;0.75;0.75;0.75;0.75;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
KNeighborsClassifier;0.848;0.8569;0.848;0.8483;0.8403;0.8446;0.8403;0.84;0.75;0.7504;0.75;0.7499;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8403;0.849;0.8403;0.8402;0.8333;0.877;0.8333;0.8354;0.75;0.7533;0.75;0.7496;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8295;0.839;0.8295;0.8296;0.9028;0.9075;0.9028;0.9025;0.75;0.7495;0.75;0.7495;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8526;0.8561;0.8526;0.8528;0.875;0.8799;0.875;0.8749;0.75;0.7496;0.75;0.7495;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8464;0.8535;0.8464;0.8466;0.8403;0.8491;0.8403;0.8425;0.75;0.76;0.75;0.7471;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.8333;0.8393;0.8333;0.8346;0.8611;0.8706;0.8611;0.8621;0.7333;0.7542;0.7333;0.7384;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
SVC;0.8287;0.8362;0.8287;0.8303;0.8958;0.9018;0.8958;0.8964;0.7333;0.7448;0.7333;0.7362;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 158};SVC(C=10, random_state=158)
KNeighborsClassifier;0.8534;0.857;0.8534;0.8537;0.8472;0.8479;0.8472;0.8468;0.7333;0.7388;0.7333;0.7341;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8704;0.8739;0.8704;0.8708;0.8403;0.843;0.8403;0.8411;0.7333;0.7525;0.7333;0.734;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 103};RandomForestClassifier(n_estimators=10, random_state=103)
KNeighborsClassifier;0.8365;0.8434;0.8365;0.8369;0.8889;0.8981;0.8889;0.89;0.7333;0.7345;0.7333;0.7336;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8519;0.8576;0.8519;0.8522;0.8472;0.8529;0.8472;0.8483;0.7333;0.7333;0.7333;0.7333;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8488;0.854;0.8488;0.849;0.8403;0.8445;0.8403;0.8416;0.7333;0.7347;0.7333;0.7328;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8418;0.8483;0.8418;0.8418;0.8056;0.8261;0.8056;0.8101;0.7333;0.7347;0.7333;0.7328;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8387;0.8468;0.8387;0.838;0.8681;0.8751;0.8681;0.87;0.7333;0.7347;0.7333;0.7328;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8503;0.8573;0.8503;0.8509;0.8958;0.9031;0.8958;0.8957;0.7333;0.7347;0.7333;0.7328;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.838;0.8488;0.838;0.8384;0.8333;0.8361;0.8333;0.834;0.7333;0.7328;0.7333;0.7328;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8487;0.854;0.8487;0.8486;0.8611;0.8682;0.8611;0.863;0.7333;0.7328;0.7333;0.7321;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8519;0.8562;0.8519;0.852;0.8403;0.8456;0.8403;0.8419;0.7333;0.7328;0.7333;0.7321;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8465;0.8542;0.8465;0.847;0.875;0.8762;0.875;0.8743;0.7167;0.7243;0.7167;0.717;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8533;0.8582;0.8533;0.8539;0.7847;0.8146;0.7847;0.7878;0.7167;0.7214;0.7167;0.7149;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8457;0.8504;0.8457;0.8461;0.8333;0.8371;0.8333;0.8345;0.7167;0.7165;0.7167;0.7145;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.8194;0.8288;0.8194;0.8212;0.7917;0.7904;0.7917;0.7905;0.7;0.6994;0.7;0.6994;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8187;0.8281;0.8187;0.8207;0.7917;0.7939;0.7917;0.7912;0.7;0.6994;0.7;0.6994;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8233;0.8338;0.8233;0.8246;0.7708;0.7743;0.7708;0.7722;0.7;0.6994;0.7;0.6994;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8064;0.8158;0.8064;0.8079;0.8958;0.903;0.8958;0.8972;0.6833;0.687;0.6833;0.6849;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8163;0.8243;0.8163;0.8175;0.7986;0.8003;0.7986;0.7986;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8157;0.8234;0.8157;0.8172;0.8056;0.8313;0.8056;0.8072;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8195;0.8265;0.8195;0.8205;0.7986;0.8086;0.7986;0.8022;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8171;0.826;0.8171;0.818;0.8125;0.8174;0.8125;0.8127;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8195;0.8268;0.8195;0.8206;0.7917;0.8129;0.7917;0.7969;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.814;0.8225;0.814;0.8152;0.8125;0.8273;0.8125;0.8139;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8156;0.825;0.8156;0.8163;0.7847;0.7995;0.7847;0.7887;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8133;0.8225;0.8133;0.8149;0.8333;0.837;0.8333;0.8337;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8125;0.82;0.8125;0.8142;0.8333;0.8383;0.8333;0.8351;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.814;0.823;0.814;0.8157;0.8194;0.8224;0.8194;0.8205;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8102;0.8181;0.8102;0.8117;0.8472;0.8508;0.8472;0.8485;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8117;0.82;0.8117;0.8125;0.8333;0.8418;0.8333;0.8347;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8164;0.8239;0.8164;0.8173;0.8125;0.827;0.8125;0.8158;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8126;0.8212;0.8126;0.8137;0.8472;0.8525;0.8472;0.8484;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8194;0.8256;0.8194;0.8202;0.7639;0.7855;0.7639;0.7675;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8087;0.8163;0.8087;0.8101;0.875;0.8782;0.875;0.876;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 844, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=844)"
LogisticRegression;0.8056;0.8138;0.8056;0.8075;0.8611;0.8669;0.8611;0.8626;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8171;0.8264;0.8171;0.819;0.8194;0.8194;0.8194;0.8194;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8156;0.8229;0.8156;0.8172;0.8264;0.8413;0.8264;0.8297;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8202;0.8285;0.8202;0.8211;0.7986;0.8179;0.7986;0.8029;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8187;0.8246;0.8187;0.8198;0.7847;0.7998;0.7847;0.789;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8148;0.8236;0.8148;0.8167;0.8056;0.8102;0.8056;0.8048;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8148;0.8217;0.8148;0.8167;0.8264;0.8313;0.8264;0.8261;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
LogisticRegression;0.8194;0.8265;0.8194;0.8205;0.7986;0.8074;0.7986;0.8008;0.6833;0.6854;0.6833;0.6841;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8156;0.8264;0.8156;0.8175;0.8194;0.8198;0.8194;0.8196;0.6833;0.682;0.6833;0.6824;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 477, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=477)"
LogisticRegression;0.8125;0.8198;0.8125;0.8139;0.8542;0.8689;0.8542;0.8561;0.6833;0.6825;0.6833;0.6821;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 785, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=785)"
