Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.86;0.8637;0.86;0.8593;0.8406;0.8419;0.8406;0.839;0.8167;0.8208;0.8167;0.8161;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
DecisionTreeClassifier;0.847;0.8572;0.847;0.8484;0.7971;0.7994;0.7971;0.7906;0.8167;0.822;0.8167;0.8148;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 314};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=314)
DecisionTreeClassifier;0.8501;0.8575;0.8501;0.8503;0.7681;0.7654;0.7681;0.7665;0.8;0.8296;0.8;0.8027;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 314};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=314)
RandomForestClassifier;0.8566;0.86;0.8566;0.8561;0.8116;0.8139;0.8116;0.812;0.8;0.8157;0.8;0.8004;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
MLPClassifier;0.8147;0.8194;0.8147;0.8149;0.8261;0.8307;0.8261;0.8255;0.8;0.8057;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.8165;0.8224;0.8165;0.8165;0.7971;0.804;0.7971;0.7951;0.8;0.8057;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
RandomForestClassifier;0.8535;0.8581;0.8535;0.8536;0.7681;0.7853;0.7681;0.7718;0.8;0.8068;0.8;0.7989;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
RandomForestClassifier;0.8502;0.8574;0.8502;0.8512;0.8841;0.8887;0.8841;0.882;0.8;0.8051;0.8;0.7977;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.8615;0.8665;0.8615;0.8606;0.8551;0.8606;0.8551;0.8557;0.8;0.8067;0.8;0.7962;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.8519;0.8576;0.8519;0.8519;0.7826;0.8085;0.7826;0.7875;0.8;0.8067;0.8;0.7962;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
SVC;0.8263;0.8344;0.8263;0.8269;0.8696;0.8783;0.8696;0.8709;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 154};SVC(C=1, random_state=154)
SVC;0.8293;0.8387;0.8293;0.83;0.7971;0.8107;0.7971;0.7966;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 363};SVC(C=1, random_state=363)
SVC;0.826;0.8352;0.826;0.8268;0.8406;0.8571;0.8406;0.8421;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 363};SVC(C=10, kernel='linear', random_state=363)
DecisionTreeClassifier;0.8566;0.8693;0.8566;0.8573;0.7971;0.8031;0.7971;0.7967;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 660};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=660)
DecisionTreeClassifier;0.8325;0.8439;0.8325;0.8334;0.9275;0.928;0.9275;0.9275;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 660};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=660)
SVC;0.8213;0.8319;0.8213;0.8226;0.8696;0.8774;0.8696;0.871;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 765};SVC(C=10, kernel='linear', random_state=765)
SVC;0.8277;0.8384;0.8277;0.8286;0.8116;0.8183;0.8116;0.8139;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 765};SVC(C=10, kernel='linear', random_state=765)
DecisionTreeClassifier;0.8325;0.8412;0.8325;0.8331;0.7971;0.8083;0.7971;0.8003;0.7833;0.8195;0.7833;0.7869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 441};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=441)
RandomForestClassifier;0.8438;0.8511;0.8438;0.8442;0.7681;0.7705;0.7681;0.7684;0.7833;0.8098;0.7833;0.7865;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
DecisionTreeClassifier;0.8245;0.8314;0.8245;0.8251;0.8261;0.829;0.8261;0.8244;0.7833;0.8059;0.7833;0.7863;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=441)
DecisionTreeClassifier;0.842;0.8534;0.842;0.8433;0.7971;0.8016;0.7971;0.7949;0.7833;0.8059;0.7833;0.7863;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 314};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=314)
DecisionTreeClassifier;0.8487;0.8577;0.8487;0.8498;0.7681;0.7721;0.7681;0.7694;0.7833;0.8201;0.7833;0.7856;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.8374;0.8452;0.8374;0.8388;0.8696;0.8778;0.8696;0.8715;0.7833;0.8201;0.7833;0.7856;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 660};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=660)
DecisionTreeClassifier;0.8598;0.8711;0.8598;0.861;0.8406;0.8475;0.8406;0.8423;0.7833;0.8201;0.7833;0.7856;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
RandomForestClassifier;0.8261;0.8335;0.8261;0.8266;0.9565;0.9615;0.9565;0.957;0.7833;0.7972;0.7833;0.785;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
DecisionTreeClassifier;0.8292;0.8477;0.8292;0.8307;0.8406;0.8369;0.8406;0.8363;0.7833;0.7972;0.7833;0.785;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=441)
MLPClassifier;0.818;0.8244;0.818;0.8189;0.8551;0.8602;0.8551;0.854;0.7833;0.7905;0.7833;0.7838;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
RandomForestClassifier;0.8631;0.8684;0.8631;0.8637;0.8986;0.8996;0.8986;0.8988;0.7833;0.7934;0.7833;0.7837;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
MLPClassifier;0.8132;0.8183;0.8132;0.8135;0.8696;0.8708;0.8696;0.8683;0.7833;0.7854;0.7833;0.783;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.8164;0.8239;0.8164;0.8166;0.8406;0.8429;0.8406;0.8415;0.7833;0.7854;0.7833;0.783;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.8148;0.8228;0.8148;0.814;0.8551;0.8574;0.8551;0.856;0.7833;0.7854;0.7833;0.783;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
DecisionTreeClassifier;0.8309;0.8419;0.8309;0.8321;0.8841;0.8859;0.8841;0.8832;0.7833;0.8202;0.7833;0.783;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 314};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=314)
RandomForestClassifier;0.8454;0.85;0.8454;0.8458;0.7971;0.8245;0.7971;0.8029;0.7833;0.7989;0.7833;0.7828;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 147};RandomForestClassifier(n_estimators=10, random_state=147)
DecisionTreeClassifier;0.8566;0.8643;0.8566;0.8573;0.8261;0.8318;0.8261;0.8258;0.7833;0.7968;0.7833;0.7827;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
RandomForestClassifier;0.8374;0.8503;0.8374;0.8361;0.913;0.913;0.913;0.913;0.7833;0.7935;0.7833;0.7814;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.8551;0.8633;0.8551;0.8554;0.7971;0.8097;0.7971;0.7956;0.7833;0.7935;0.7833;0.7814;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 355};RandomForestClassifier(n_estimators=10, random_state=355)
RandomForestClassifier;0.8518;0.8565;0.8518;0.8525;0.8116;0.8178;0.8116;0.8128;0.7833;0.7909;0.7833;0.7794;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.8438;0.8483;0.8438;0.8432;0.8986;0.9047;0.8986;0.8991;0.7833;0.793;0.7833;0.7779;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
SVC;0.8196;0.8308;0.8196;0.8213;0.8551;0.8651;0.8551;0.8568;0.7667;0.8076;0.7667;0.773;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.8341;0.844;0.8341;0.8337;0.7391;0.7482;0.7391;0.7426;0.7667;0.7988;0.7667;0.771;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 363};SVC(C=10, kernel='linear', random_state=363)
DecisionTreeClassifier;0.8437;0.8509;0.8437;0.8429;0.8261;0.8574;0.8261;0.8307;0.7667;0.8097;0.7667;0.7708;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 314};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=314)
DecisionTreeClassifier;0.8358;0.8462;0.8358;0.8368;0.7536;0.7969;0.7536;0.7574;0.7667;0.8097;0.7667;0.7708;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 660};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=660)
DecisionTreeClassifier;0.839;0.8554;0.839;0.8401;0.8551;0.8596;0.8551;0.8556;0.7667;0.8097;0.7667;0.7708;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 660};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=660)
DecisionTreeClassifier;0.831;0.8416;0.831;0.8308;0.7971;0.8083;0.7971;0.8003;0.7667;0.8097;0.7667;0.7708;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 660};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=660)
DecisionTreeClassifier;0.8276;0.8384;0.8276;0.8295;0.8551;0.8675;0.8551;0.8566;0.7667;0.8097;0.7667;0.7708;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 314};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=314)
DecisionTreeClassifier;0.8502;0.8567;0.8502;0.8508;0.7681;0.7758;0.7681;0.771;0.7667;0.8097;0.7667;0.7708;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 314};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=314)
SVC;0.839;0.8496;0.839;0.8391;0.7681;0.7909;0.7681;0.7706;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 154};SVC(C=1, random_state=154)
SVC;0.839;0.8488;0.839;0.8395;0.7391;0.7573;0.7391;0.7432;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 154};SVC(C=1, random_state=154)
SVC;0.8324;0.8411;0.8324;0.8335;0.7971;0.8025;0.7971;0.7943;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 154};SVC(C=1, random_state=154)
SVC;0.8244;0.8342;0.8244;0.8243;0.8551;0.8579;0.8551;0.8555;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 154};SVC(C=1, random_state=154)
SVC;0.8309;0.8387;0.8309;0.8316;0.8261;0.8298;0.8261;0.8245;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 154};SVC(C=10, random_state=154)
SVC;0.8229;0.8306;0.8229;0.8232;0.8696;0.881;0.8696;0.8704;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 154};SVC(C=1, random_state=154)
SVC;0.8277;0.8404;0.8277;0.8283;0.8696;0.8733;0.8696;0.8679;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 363};SVC(C=1, random_state=363)
SVC;0.8308;0.84;0.8308;0.8319;0.8116;0.8116;0.8116;0.8116;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 765};SVC(C=1, random_state=765)
SVC;0.8293;0.8375;0.8293;0.8295;0.8261;0.8364;0.8261;0.8256;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 363};SVC(C=1, random_state=363)
SVC;0.8261;0.835;0.8261;0.827;0.8406;0.8677;0.8406;0.8413;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 363};SVC(C=1, random_state=363)
SVC;0.8292;0.8375;0.8292;0.8297;0.8696;0.8805;0.8696;0.8716;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 363};SVC(C=1, random_state=363)
SVC;0.826;0.8341;0.826;0.8265;0.8696;0.8859;0.8696;0.8696;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 363};SVC(C=1, random_state=363)
SVC;0.8326;0.8404;0.8326;0.8329;0.8116;0.8156;0.8116;0.8126;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 765};SVC(C=1, random_state=765)
SVC;0.8214;0.8314;0.8214;0.8211;0.8841;0.901;0.8841;0.8844;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 765};SVC(C=1, random_state=765)
SVC;0.8293;0.8404;0.8293;0.8304;0.8261;0.8233;0.8261;0.8228;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 765};SVC(C=1, random_state=765)
SVC;0.8357;0.843;0.8357;0.8354;0.7826;0.7891;0.7826;0.7849;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 765};SVC(C=1, random_state=765)
SVC;0.8342;0.8419;0.8342;0.8347;0.8116;0.8388;0.8116;0.814;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 765};SVC(C=1, random_state=765)
SVC;0.8261;0.835;0.8261;0.8265;0.8261;0.8358;0.8261;0.8274;0.7667;0.7957;0.7667;0.7707;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 765};SVC(C=1, random_state=765)
SVC;0.8277;0.8351;0.8277;0.8285;0.8261;0.8333;0.8261;0.8265;0.7667;0.7852;0.7667;0.7705;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 154};SVC(C=1, random_state=154)
DecisionTreeClassifier;0.847;0.854;0.847;0.8473;0.8116;0.8142;0.8116;0.8023;0.7667;0.7911;0.7667;0.7704;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 10, 'random_state': 314};DecisionTreeClassifier(max_depth=5, min_samples_leaf=10, random_state=314)
DecisionTreeClassifier;0.8228;0.8415;0.8228;0.8233;0.8551;0.8744;0.8551;0.8568;0.7667;0.8105;0.7667;0.7701;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.8502;0.8594;0.8502;0.8511;0.8551;0.8533;0.8551;0.853;0.7667;0.8105;0.7667;0.7701;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.847;0.855;0.847;0.8478;0.8551;0.8589;0.8551;0.855;0.7667;0.8105;0.7667;0.7701;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 660};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=660)
DecisionTreeClassifier;0.8455;0.8582;0.8455;0.8469;0.8551;0.8594;0.8551;0.8565;0.7667;0.8105;0.7667;0.7701;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 660};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=660)
DecisionTreeClassifier;0.8567;0.8664;0.8567;0.8575;0.7101;0.7178;0.7101;0.7121;0.7667;0.8105;0.7667;0.7701;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 660};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=660)
SVC;0.831;0.8423;0.831;0.8306;0.7971;0.8123;0.7971;0.7991;0.7667;0.7857;0.7667;0.7698;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 363};SVC(C=10, random_state=363)
RandomForestClassifier;0.8566;0.8611;0.8566;0.8568;0.8406;0.8571;0.8406;0.8442;0.7667;0.7795;0.7667;0.7691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
DecisionTreeClassifier;0.8567;0.8619;0.8567;0.8576;0.8696;0.8796;0.8696;0.872;0.7667;0.8109;0.7667;0.768;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 314};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=314)
DecisionTreeClassifier;0.8374;0.8443;0.8374;0.8389;0.8116;0.8195;0.8116;0.8139;0.7667;0.8109;0.7667;0.768;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 660};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=660)
DecisionTreeClassifier;0.8551;0.8661;0.8551;0.8559;0.7826;0.7923;0.7826;0.7858;0.7667;0.8109;0.7667;0.768;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=441)
RandomForestClassifier;0.8341;0.841;0.8341;0.8357;0.8986;0.899;0.8986;0.8985;0.7667;0.7875;0.7667;0.7675;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 147};RandomForestClassifier(n_estimators=10, random_state=147)
MLPClassifier;0.8116;0.8184;0.8116;0.8106;0.8406;0.85;0.8406;0.8415;0.7667;0.7698;0.7667;0.7672;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
RandomForestClassifier;0.86;0.8661;0.86;0.8599;0.8841;0.8841;0.8841;0.8841;0.7667;0.781;0.7667;0.7665;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
KNeighborsClassifier;0.8164;0.8312;0.8164;0.8173;0.8116;0.8206;0.8116;0.8141;0.7667;0.781;0.7667;0.7665;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8131;0.8206;0.8131;0.8133;0.8551;0.8594;0.8551;0.8565;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.818;0.8242;0.818;0.8185;0.7826;0.7937;0.7826;0.7849;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.8084;0.8179;0.8084;0.8084;0.8551;0.8814;0.8551;0.8518;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.8196;0.8248;0.8196;0.8199;0.7536;0.7758;0.7536;0.7505;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.8197;0.8261;0.8197;0.8201;0.7681;0.7911;0.7681;0.7685;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.8116;0.8199;0.8116;0.8122;0.7971;0.7944;0.7971;0.794;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.8067;0.8123;0.8067;0.8062;0.8406;0.841;0.8406;0.8405;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.8165;0.8236;0.8165;0.8168;0.7681;0.7798;0.7681;0.7709;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.8211;0.8293;0.8211;0.8206;0.7681;0.7724;0.7681;0.7674;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8115;0.822;0.8115;0.8119;0.8406;0.8475;0.8406;0.8429;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8149;0.8214;0.8149;0.8151;0.8261;0.8265;0.8261;0.826;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8164;0.8265;0.8164;0.816;0.8406;0.8421;0.8406;0.8396;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8164;0.8267;0.8164;0.8168;0.7826;0.7847;0.7826;0.7821;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.8228;0.8341;0.8228;0.8242;0.7826;0.7842;0.7826;0.7792;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8116;0.8155;0.8116;0.8114;0.8261;0.8301;0.8261;0.8271;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8116;0.8164;0.8116;0.8118;0.8261;0.8316;0.8261;0.8272;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8181;0.8263;0.8181;0.8182;0.7826;0.7854;0.7826;0.783;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.8164;0.8278;0.8164;0.8171;0.7971;0.806;0.7971;0.7988;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8163;0.8259;0.8163;0.817;0.8406;0.8559;0.8406;0.8405;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.8198;0.8293;0.8198;0.8193;0.7971;0.8016;0.7971;0.7985;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
MLPClassifier;0.818;0.8242;0.818;0.8175;0.8116;0.8141;0.8116;0.8112;0.7667;0.7698;0.7667;0.766;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 327, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=327)
RandomForestClassifier;0.8679;0.8711;0.8679;0.8678;0.7971;0.8101;0.7971;0.7948;0.7667;0.7908;0.7667;0.7639;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.847;0.8551;0.847;0.8482;0.913;0.9163;0.913;0.9135;0.7667;0.7807;0.7667;0.7634;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
RandomForestClassifier;0.8728;0.8774;0.8728;0.8733;0.8116;0.8243;0.8116;0.8143;0.7667;0.7807;0.7667;0.7634;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
KNeighborsClassifier;0.8132;0.8252;0.8132;0.8133;0.7826;0.8587;0.7826;0.7687;0.7667;0.7713;0.7667;0.7623;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8277;0.8344;0.8277;0.827;0.7681;0.7833;0.7681;0.765;0.75;0.7738;0.75;0.7544;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
SVC;0.8196;0.8278;0.8196;0.8202;0.8696;0.8762;0.8696;0.8694;0.75;0.7746;0.75;0.7543;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 154};SVC(C=10, kernel='linear', random_state=154)
DecisionTreeClassifier;0.8647;0.8739;0.8647;0.8637;0.8261;0.8291;0.8261;0.8273;0.75;0.8012;0.75;0.7542;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 314};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=314)
KNeighborsClassifier;0.7987;0.8069;0.7987;0.7991;0.8841;0.8883;0.8841;0.8844;0.75;0.7635;0.75;0.753;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8294;0.8434;0.8294;0.8306;0.8696;0.8739;0.8696;0.8696;0.75;0.8018;0.75;0.7527;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
RandomForestClassifier;0.834;0.8379;0.834;0.834;0.8841;0.8969;0.8841;0.8859;0.75;0.7761;0.75;0.7526;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 355};RandomForestClassifier(n_estimators=5, random_state=355)
SVC;0.8311;0.8443;0.8311;0.8316;0.7971;0.7981;0.7971;0.7974;0.75;0.763;0.75;0.752;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 363};SVC(C=10, random_state=363)
SVC;0.831;0.8409;0.831;0.8314;0.8116;0.8119;0.8116;0.8115;0.75;0.763;0.75;0.752;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 765};SVC(C=10, random_state=765)
RandomForestClassifier;0.847;0.8538;0.847;0.8465;0.8986;0.8972;0.8986;0.8976;0.75;0.7765;0.75;0.7519;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
LogisticRegression;0.8116;0.8193;0.8116;0.8125;0.7971;0.7973;0.7971;0.7948;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.8164;0.8235;0.8164;0.817;0.7971;0.8011;0.7971;0.7973;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8084;0.8176;0.8084;0.8084;0.7826;0.7917;0.7826;0.7813;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
MLPClassifier;0.8068;0.8138;0.8068;0.8069;0.8696;0.8864;0.8696;0.8724;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
LogisticRegression;0.8099;0.8201;0.8099;0.8112;0.8261;0.8271;0.8261;0.8263;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8244;0.8313;0.8244;0.8238;0.7246;0.7734;0.7246;0.7285;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
MLPClassifier;0.8117;0.817;0.8117;0.8119;0.8406;0.8444;0.8406;0.8408;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
LogisticRegression;0.8165;0.8248;0.8165;0.817;0.7681;0.7802;0.7681;0.7699;0.75;0.7551;0.75;0.7513;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
RandomForestClassifier;0.8584;0.8658;0.8584;0.8592;0.8116;0.8183;0.8116;0.8121;0.75;0.7619;0.75;0.7489;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 355};RandomForestClassifier(n_estimators=5, random_state=355)
RandomForestClassifier;0.8566;0.8632;0.8566;0.8568;0.8261;0.8244;0.8261;0.8234;0.75;0.7689;0.75;0.7488;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.8406;0.8469;0.8406;0.8403;0.7971;0.8044;0.7971;0.7991;0.7333;0.7581;0.7333;0.7393;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 355};RandomForestClassifier(n_estimators=5, random_state=355)
KNeighborsClassifier;0.818;0.827;0.818;0.8182;0.8116;0.8255;0.8116;0.8153;0.7333;0.7637;0.7333;0.7385;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8116;0.818;0.8116;0.8124;0.8116;0.8132;0.8116;0.8121;0.7333;0.7637;0.7333;0.7385;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8197;0.8281;0.8197;0.8206;0.8261;0.8502;0.8261;0.8249;0.7333;0.7534;0.7333;0.7381;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.8051;0.8097;0.8051;0.8042;0.8261;0.8313;0.8261;0.8279;0.7333;0.7515;0.7333;0.7365;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8116;0.8244;0.8116;0.8124;0.7391;0.7339;0.7391;0.7345;0.7333;0.7429;0.7333;0.7362;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
RandomForestClassifier;0.868;0.8732;0.868;0.8682;0.7971;0.8036;0.7971;0.7988;0.7333;0.7537;0.7333;0.7358;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.8373;0.8435;0.8373;0.8376;0.8406;0.8422;0.8406;0.8411;0.7333;0.7512;0.7333;0.7351;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 346};RandomForestClassifier(n_estimators=5, random_state=346)
LogisticRegression;0.815;0.8257;0.815;0.8147;0.8261;0.8442;0.8261;0.8297;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
KNeighborsClassifier;0.8164;0.8259;0.8164;0.8166;0.8261;0.8313;0.8261;0.8264;0.7333;0.7458;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
LogisticRegression;0.8133;0.8194;0.8133;0.8136;0.7971;0.8187;0.7971;0.7997;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.8133;0.8192;0.8133;0.8134;0.8116;0.8108;0.8116;0.8109;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.8085;0.8167;0.8085;0.8076;0.8406;0.8472;0.8406;0.8419;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.81;0.8179;0.81;0.809;0.8116;0.8225;0.8116;0.8135;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8035;0.8102;0.8035;0.8036;0.8551;0.8611;0.8551;0.8572;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8068;0.8132;0.8068;0.8075;0.8551;0.8533;0.8551;0.853;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.8068;0.8145;0.8068;0.8065;0.7681;0.798;0.7681;0.7719;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8053;0.8152;0.8053;0.8056;0.7681;0.7746;0.7681;0.7704;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.8163;0.822;0.8163;0.8152;0.7971;0.8112;0.7971;0.7999;0.7333;0.7381;0.7333;0.7347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
KNeighborsClassifier;0.8133;0.8235;0.8133;0.8138;0.8261;0.8372;0.8261;0.8275;0.7333;0.7575;0.7333;0.7338;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.805;0.819;0.805;0.8061;0.8406;0.8529;0.8406;0.8352;0.7333;0.7575;0.7333;0.7338;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8407;0.8471;0.8407;0.8411;0.8986;0.8992;0.8986;0.8963;0.7333;0.7474;0.7333;0.7334;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
KNeighborsClassifier;0.8262;0.8326;0.8262;0.8252;0.7826;0.7853;0.7826;0.7822;0.7333;0.7416;0.7333;0.731;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8356;0.8445;0.8356;0.8351;0.7536;0.7752;0.7536;0.753;0.7167;0.7539;0.7167;0.7221;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8229;0.8316;0.8229;0.8228;0.8116;0.8243;0.8116;0.8143;0.7167;0.7315;0.7167;0.7209;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.8148;0.826;0.8148;0.8133;0.7391;0.7445;0.7391;0.7402;0.7167;0.7429;0.7167;0.7199;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8132;0.8198;0.8132;0.8134;0.7971;0.8251;0.7971;0.7914;0.7167;0.734;0.7167;0.7194;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8148;0.8224;0.8148;0.8146;0.7971;0.8199;0.7971;0.802;0.7167;0.742;0.7167;0.7187;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8421;0.8494;0.8421;0.842;0.942;0.9425;0.942;0.9413;0.7167;0.7342;0.7167;0.7186;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
LogisticRegression;0.8131;0.8187;0.8131;0.8133;0.7971;0.7989;0.7971;0.7962;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8099;0.8152;0.8099;0.8105;0.7971;0.812;0.7971;0.7962;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8035;0.8112;0.8035;0.804;0.8696;0.8701;0.8696;0.8687;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.8148;0.8218;0.8148;0.8151;0.7826;0.7919;0.7826;0.7844;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.8148;0.8206;0.8148;0.8155;0.7971;0.795;0.7971;0.7958;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.8163;0.8236;0.8163;0.8158;0.7826;0.7813;0.7826;0.7799;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.8116;0.8197;0.8116;0.8116;0.7971;0.8107;0.7971;0.7966;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.8051;0.8111;0.8051;0.8056;0.8406;0.8452;0.8406;0.8411;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.7955;0.8018;0.7955;0.7947;0.8841;0.8859;0.8841;0.8839;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.7988;0.8031;0.7988;0.7994;0.913;0.9149;0.913;0.9129;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.7988;0.8067;0.7988;0.7979;0.8841;0.8869;0.8841;0.8846;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.8004;0.8127;0.8004;0.8007;0.8696;0.8691;0.8696;0.8685;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.7988;0.8103;0.7988;0.7977;0.8841;0.8885;0.8841;0.8852;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 18, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=18)"
LogisticRegression;0.8133;0.8196;0.8133;0.8135;0.7971;0.8073;0.7971;0.7952;0.7167;0.724;0.7167;0.718;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
RandomForestClassifier;0.8437;0.8482;0.8437;0.8438;0.8696;0.875;0.8696;0.8714;0.7167;0.7397;0.7167;0.7177;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
KNeighborsClassifier;0.8083;0.8227;0.8083;0.8092;0.8841;0.8879;0.8841;0.8852;0.7167;0.7333;0.7167;0.7175;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8195;0.8269;0.8195;0.8183;0.7681;0.7902;0.7681;0.7734;0.7167;0.7333;0.7167;0.7175;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8068;0.8191;0.8068;0.8062;0.8261;0.8344;0.8261;0.8222;0.7167;0.7254;0.7167;0.7169;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8148;0.8241;0.8148;0.8145;0.8406;0.8556;0.8406;0.8435;0.7167;0.729;0.7167;0.716;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8276;0.835;0.8276;0.8282;0.8116;0.8169;0.8116;0.8132;0.7167;0.729;0.7167;0.716;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8147;0.8244;0.8147;0.8149;0.8551;0.8544;0.8551;0.8528;0.7167;0.7227;0.7167;0.7157;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.797;0.8031;0.797;0.796;0.7971;0.8228;0.7971;0.7948;0.7;0.7333;0.7;0.706;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1)
KNeighborsClassifier;0.8083;0.8139;0.8083;0.8085;0.8406;0.8425;0.8406;0.8404;0.7;0.7305;0.7;0.7058;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8309;0.838;0.8309;0.831;0.8116;0.8178;0.8116;0.8128;0.7;0.7204;0.7;0.7053;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.7954;0.8072;0.7954;0.7932;0.7391;0.7514;0.7391;0.729;0.7;0.7268;0.7;0.7043;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1)
KNeighborsClassifier;0.8083;0.8147;0.8083;0.8086;0.8551;0.8588;0.8551;0.8528;0.7;0.7091;0.7;0.6975;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8148;0.8244;0.8148;0.8148;0.7536;0.772;0.7536;0.7551;0.6667;0.6804;0.6667;0.6672;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
