Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7924;0.8005;0.7924;0.7919;0.8403;0.8396;0.8403;0.8386;0.8167;0.8163;0.8167;0.8141;0.9187;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8187;0.8273;0.8187;0.8188;0.8542;0.8667;0.8542;0.855;0.8;0.8144;0.8;0.7997;0.9369;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
KNeighborsClassifier;0.7955;0.8028;0.7955;0.7956;0.8542;0.8729;0.8542;0.8567;0.8;0.8005;0.8;0.7989;0.9202;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8241;0.832;0.8241;0.8249;0.7986;0.8211;0.7986;0.8003;0.8;0.8309;0.8;0.7982;0.9385;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
RandomForestClassifier;0.8265;0.835;0.8265;0.8274;0.7708;0.7831;0.7708;0.771;0.7833;0.8065;0.7833;0.7883;0.9543;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 437};RandomForestClassifier(n_estimators=5, random_state=437)
RandomForestClassifier;0.8234;0.8303;0.8234;0.8239;0.8333;0.8464;0.8333;0.834;0.7833;0.7883;0.7833;0.7836;0.9511;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 856};RandomForestClassifier(n_estimators=5, random_state=856)
MLPClassifier;0.8156;0.8247;0.8156;0.8165;0.9028;0.9024;0.9028;0.9023;0.7833;0.8158;0.7833;0.7833;0.9348;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
MLPClassifier;0.8134;0.8227;0.8134;0.8139;0.8542;0.8626;0.8542;0.8563;0.7833;0.8158;0.7833;0.7833;0.9374;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
MLPClassifier;0.8255;0.8334;0.8255;0.8259;0.8056;0.8146;0.8056;0.8068;0.7833;0.8158;0.7833;0.7833;0.9379;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
KNeighborsClassifier;0.8109;0.8153;0.8109;0.8101;0.7569;0.776;0.7569;0.7592;0.7833;0.7909;0.7833;0.7794;0.9217;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8202;0.8271;0.8202;0.8214;0.8333;0.8309;0.8333;0.8304;0.7833;0.7989;0.7833;0.7766;0.9497;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
KNeighborsClassifier;0.8125;0.8218;0.8125;0.8129;0.8333;0.839;0.8333;0.8336;0.7667;0.7754;0.7667;0.7685;0.9222;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8179;0.8274;0.8179;0.8183;0.8194;0.8265;0.8194;0.8202;0.7667;0.8013;0.7667;0.7683;0.9363;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
MLPClassifier;0.8202;0.8291;0.8202;0.8213;0.8194;0.8168;0.8194;0.8176;0.7667;0.7848;0.7667;0.7683;0.9374;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
MLPClassifier;0.8156;0.8268;0.8156;0.8165;0.8125;0.8244;0.8125;0.815;0.7667;0.7848;0.7667;0.7683;0.938;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
KNeighborsClassifier;0.7994;0.805;0.7994;0.7984;0.7847;0.7847;0.7847;0.7846;0.7667;0.7717;0.7667;0.7679;0.9223;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8256;0.8303;0.8256;0.8258;0.8194;0.8323;0.8194;0.8218;0.7667;0.8022;0.7667;0.7674;0.9362;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
MLPClassifier;0.814;0.8191;0.814;0.8147;0.8611;0.8633;0.8611;0.8618;0.7667;0.8022;0.7667;0.7674;0.9365;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
MLPClassifier;0.8217;0.8292;0.8217;0.8223;0.8194;0.8239;0.8194;0.8204;0.7667;0.8022;0.7667;0.7674;0.9414;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
MLPClassifier;0.8179;0.824;0.8179;0.8185;0.8611;0.8731;0.8611;0.8626;0.7667;0.8022;0.7667;0.7674;0.9369;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
KNeighborsClassifier;0.7979;0.806;0.7979;0.7977;0.8542;0.8647;0.8542;0.8568;0.7667;0.781;0.7667;0.7665;0.9215;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7893;0.7947;0.7893;0.7878;0.8125;0.8507;0.8125;0.8176;0.7667;0.7764;0.7667;0.7665;0.9165;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8272;0.8372;0.8272;0.8291;0.8333;0.8467;0.8333;0.8361;0.7667;0.7783;0.7667;0.7655;0.9372;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=305)
RandomForestClassifier;0.8179;0.8231;0.8179;0.8191;0.8333;0.8383;0.8333;0.834;0.7667;0.7773;0.7667;0.7652;0.9495;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 200};RandomForestClassifier(n_estimators=10, random_state=200)
MLPClassifier;0.8218;0.8288;0.8218;0.8221;0.8333;0.8349;0.8333;0.8339;0.7667;0.8065;0.7667;0.7648;0.9373;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
MLPClassifier;0.821;0.8296;0.821;0.8214;0.7847;0.7848;0.7847;0.7843;0.7667;0.8065;0.7667;0.7648;0.9408;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
KNeighborsClassifier;0.8025;0.8087;0.8025;0.8021;0.7569;0.7667;0.7569;0.76;0.7667;0.777;0.7667;0.7648;0.9206;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8248;0.8318;0.8248;0.8259;0.8333;0.8383;0.8333;0.8349;0.7667;0.7771;0.7667;0.7638;0.9537;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 200};RandomForestClassifier(n_estimators=5, random_state=200)
MLPClassifier;0.821;0.8289;0.821;0.8216;0.7778;0.7833;0.7778;0.7793;0.7667;0.806;0.7667;0.7634;0.9384;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
RandomForestClassifier;0.8302;0.8392;0.8302;0.8316;0.8125;0.8137;0.8125;0.8129;0.7667;0.7781;0.7667;0.7629;0.9473;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 200};RandomForestClassifier(n_estimators=10, random_state=200)
RandomForestClassifier;0.8326;0.8421;0.8326;0.8338;0.8611;0.8732;0.8611;0.8617;0.7667;0.7707;0.7667;0.7624;0.9488;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 200};RandomForestClassifier(n_estimators=10, random_state=200)
RandomForestClassifier;0.818;0.8234;0.818;0.819;0.8194;0.8171;0.8194;0.8178;0.7667;0.7756;0.7667;0.7624;0.9521;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 856};RandomForestClassifier(n_estimators=10, random_state=856)
RandomForestClassifier;0.8303;0.8398;0.8303;0.8306;0.7708;0.7804;0.7708;0.7736;0.7667;0.7781;0.7667;0.7623;0.9499;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 856};RandomForestClassifier(n_estimators=10, random_state=856)
MLPClassifier;0.821;0.829;0.821;0.8216;0.8403;0.8492;0.8403;0.8427;0.75;0.7822;0.75;0.754;0.9388;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
MLPClassifier;0.8164;0.8261;0.8164;0.8173;0.8611;0.872;0.8611;0.8622;0.75;0.7873;0.75;0.7526;0.9344;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
MLPClassifier;0.824;0.8322;0.824;0.8242;0.7708;0.7769;0.7708;0.7726;0.75;0.7873;0.75;0.7526;0.9399;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
MLPClassifier;0.814;0.8218;0.814;0.8147;0.8819;0.8886;0.8819;0.8825;0.75;0.7873;0.75;0.7526;0.9364;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
MLPClassifier;0.8225;0.8276;0.8225;0.823;0.8056;0.8085;0.8056;0.8066;0.75;0.7873;0.75;0.7526;0.9362;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
KNeighborsClassifier;0.7894;0.7944;0.7894;0.7893;0.8681;0.8996;0.8681;0.8715;0.75;0.7768;0.75;0.7521;0.9223;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7964;0.8034;0.7964;0.7974;0.8542;0.8585;0.8542;0.8545;0.75;0.7583;0.75;0.7521;0.9223;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.8187;0.8268;0.8187;0.8195;0.8264;0.8259;0.8264;0.8261;0.75;0.7711;0.75;0.7519;0.9377;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
KNeighborsClassifier;0.8009;0.8043;0.8009;0.8002;0.8472;0.8868;0.8472;0.8469;0.75;0.7765;0.75;0.7519;0.9294;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8039;0.8076;0.8039;0.8031;0.8264;0.831;0.8264;0.8275;0.75;0.7689;0.75;0.7513;0.9147;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.797;0.8024;0.797;0.7967;0.8125;0.815;0.8125;0.8106;0.75;0.7689;0.75;0.7513;0.9245;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8164;0.8229;0.8164;0.8171;0.8333;0.834;0.8333;0.8336;0.75;0.7889;0.75;0.7513;0.9368;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
RandomForestClassifier;0.8264;0.832;0.8264;0.8273;0.8472;0.8496;0.8472;0.8482;0.75;0.7535;0.75;0.7505;0.9492;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
KNeighborsClassifier;0.791;0.7985;0.791;0.789;0.8681;0.8811;0.8681;0.8699;0.75;0.7639;0.75;0.75;0.9152;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8218;0.8277;0.8218;0.8225;0.8125;0.8226;0.8125;0.8143;0.75;0.7625;0.75;0.7493;0.9403;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
MLPClassifier;0.8287;0.8338;0.8287;0.8282;0.7778;0.7971;0.7778;0.7809;0.75;0.7937;0.75;0.7492;0.9396;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
RandomForestClassifier;0.8264;0.834;0.8264;0.8279;0.8472;0.8503;0.8472;0.8482;0.75;0.7907;0.75;0.7492;0.9474;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
DecisionTreeClassifier;0.841;0.8503;0.841;0.8424;0.8056;0.8212;0.8056;0.8082;0.75;0.7593;0.75;0.7492;0.9421;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
DecisionTreeClassifier;0.8264;0.8353;0.8264;0.8279;0.8264;0.8504;0.8264;0.8304;0.75;0.7631;0.75;0.7491;0.9346;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
MLPClassifier;0.8209;0.8297;0.8209;0.8217;0.8264;0.8288;0.8264;0.8274;0.75;0.7914;0.75;0.749;0.9353;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
RandomForestClassifier;0.828;0.835;0.828;0.8288;0.8125;0.8205;0.8125;0.8145;0.75;0.7632;0.75;0.7482;0.9503;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
DecisionTreeClassifier;0.8349;0.8429;0.8349;0.8362;0.7917;0.8142;0.7917;0.7925;0.75;0.7542;0.75;0.7482;0.9385;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
RandomForestClassifier;0.8357;0.8417;0.8357;0.8368;0.7917;0.7901;0.7917;0.7902;0.75;0.7602;0.75;0.7474;0.9524;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 200};RandomForestClassifier(n_estimators=20, random_state=200)
DecisionTreeClassifier;0.8294;0.8403;0.8294;0.8311;0.8264;0.8436;0.8264;0.83;0.75;0.764;0.75;0.7469;0.9381;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
RandomForestClassifier;0.8256;0.8317;0.8256;0.8268;0.8403;0.8403;0.8403;0.8399;0.75;0.7765;0.75;0.7469;0.9512;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
DecisionTreeClassifier;0.8349;0.8461;0.8349;0.8372;0.8264;0.84;0.8264;0.8282;0.75;0.7642;0.75;0.7452;0.9433;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
RandomForestClassifier;0.8164;0.8236;0.8164;0.8178;0.8472;0.8471;0.8472;0.8459;0.75;0.7552;0.75;0.7442;0.947;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 856};RandomForestClassifier(n_estimators=10, random_state=856)
MLPClassifier;0.8148;0.8229;0.8148;0.8152;0.8681;0.8736;0.8681;0.8692;0.7333;0.7735;0.7333;0.7366;0.9372;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 732, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=732)
MLPClassifier;0.8226;0.829;0.8226;0.8231;0.8194;0.8204;0.8194;0.8197;0.7333;0.7735;0.7333;0.7366;0.9395;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
KNeighborsClassifier;0.7987;0.8025;0.7987;0.798;0.7847;0.7872;0.7847;0.7849;0.7333;0.7603;0.7333;0.7361;0.9256;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8048;0.8106;0.8048;0.8047;0.8264;0.8366;0.8264;0.828;0.7333;0.7537;0.7333;0.7358;0.9237;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.801;0.8095;0.801;0.8014;0.8125;0.8301;0.8125;0.8153;0.7333;0.7537;0.7333;0.7358;0.9217;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8057;0.8126;0.8057;0.8057;0.8056;0.8181;0.8056;0.8077;0.7333;0.7537;0.7333;0.7358;0.9254;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
RandomForestClassifier;0.8303;0.8394;0.8303;0.8316;0.7917;0.7952;0.7917;0.7931;0.7333;0.7588;0.7333;0.7355;0.95;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
MLPClassifier;0.821;0.8304;0.821;0.8217;0.7917;0.7891;0.7917;0.7887;0.7333;0.759;0.7333;0.7354;0.9409;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 81, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=81)
KNeighborsClassifier;0.7963;0.8026;0.7963;0.7962;0.7639;0.7661;0.7639;0.7648;0.7333;0.7512;0.7333;0.7351;0.9248;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.804;0.8149;0.804;0.8045;0.7986;0.8173;0.7986;0.801;0.7333;0.7512;0.7333;0.7351;0.9251;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7924;0.7963;0.7924;0.7912;0.8264;0.8344;0.8264;0.8272;0.7333;0.7512;0.7333;0.7351;0.9179;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8209;0.8283;0.8209;0.8216;0.8056;0.8035;0.8056;0.8041;0.7333;0.7774;0.7333;0.7344;0.9374;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
KNeighborsClassifier;0.8025;0.807;0.8025;0.803;0.7708;0.768;0.7708;0.7685;0.7333;0.7369;0.7333;0.7338;0.9137;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8025;0.8124;0.8025;0.8022;0.8333;0.8477;0.8333;0.8355;0.7333;0.7422;0.7333;0.7335;0.9253;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8125;0.8181;0.8125;0.8135;0.8333;0.8346;0.8333;0.8339;0.7333;0.7444;0.7333;0.7335;0.9488;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 437};RandomForestClassifier(n_estimators=5, random_state=437)
KNeighborsClassifier;0.8179;0.822;0.8179;0.818;0.7639;0.7627;0.7639;0.7631;0.7333;0.7422;0.7333;0.7335;0.9328;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
RandomForestClassifier;0.8287;0.8355;0.8287;0.8297;0.8264;0.851;0.8264;0.8268;0.7333;0.7474;0.7333;0.7329;0.9518;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 856};RandomForestClassifier(n_estimators=5, random_state=856)
RandomForestClassifier;0.8334;0.8448;0.8334;0.8346;0.8056;0.8167;0.8056;0.809;0.7333;0.7556;0.7333;0.7325;0.9554;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
DecisionTreeClassifier;0.8272;0.8387;0.8272;0.8289;0.8056;0.807;0.8056;0.8061;0.7333;0.7387;0.7333;0.7321;0.9356;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8248;0.8383;0.8248;0.8262;0.875;0.8747;0.875;0.8748;0.7333;0.7403;0.7333;0.7316;0.935;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
DecisionTreeClassifier;0.8272;0.8394;0.8272;0.8289;0.8472;0.8455;0.8472;0.8458;0.7333;0.7361;0.7333;0.7298;0.9315;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8195;0.8308;0.8195;0.8216;0.8611;0.8701;0.8611;0.8633;0.7333;0.7423;0.7333;0.7297;0.9357;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
RandomForestClassifier;0.828;0.8323;0.828;0.8286;0.8472;0.848;0.8472;0.8468;0.7333;0.7632;0.7333;0.7296;0.9512;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 200};RandomForestClassifier(n_estimators=20, random_state=200)
DecisionTreeClassifier;0.8226;0.8313;0.8226;0.8241;0.8333;0.8438;0.8333;0.8359;0.7333;0.7639;0.7333;0.7292;0.9398;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8395;0.8478;0.8395;0.8409;0.7778;0.7941;0.7778;0.7813;0.7333;0.762;0.7333;0.7285;0.9397;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
RandomForestClassifier;0.8333;0.842;0.8333;0.8348;0.8194;0.8226;0.8194;0.8206;0.7333;0.7484;0.7333;0.727;0.952;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
RandomForestClassifier;0.8241;0.8332;0.8241;0.8255;0.8611;0.8668;0.8611;0.8626;0.7333;0.7407;0.7333;0.7265;0.9492;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 200};RandomForestClassifier(n_estimators=10, random_state=200)
RandomForestClassifier;0.821;0.8285;0.821;0.8224;0.8403;0.8432;0.8403;0.8413;0.7167;0.7585;0.7167;0.7221;0.9475;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
SVC;0.7538;0.7803;0.7538;0.7533;0.8403;0.8476;0.8403;0.8414;0.7167;0.7443;0.7167;0.72;0.8808;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.7485;0.7835;0.7485;0.7476;0.8333;0.8546;0.8333;0.8349;0.7167;0.7311;0.7167;0.7196;0.8768;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
KNeighborsClassifier;0.7885;0.7946;0.7885;0.7893;0.7708;0.7795;0.7708;0.7728;0.7167;0.734;0.7167;0.7194;0.9191;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.821;0.8273;0.821;0.8217;0.8681;0.8677;0.8681;0.8678;0.7167;0.7634;0.7167;0.7186;0.9361;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 974, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=974)
KNeighborsClassifier;0.7925;0.8001;0.7925;0.7938;0.8125;0.8353;0.8125;0.8077;0.7167;0.7269;0.7167;0.7185;0.923;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
SVC;0.7407;0.7745;0.7407;0.7398;0.8264;0.8498;0.8264;0.8285;0.7167;0.7252;0.7167;0.7181;0.8777;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
RandomForestClassifier;0.8226;0.8282;0.8226;0.8234;0.8403;0.8524;0.8403;0.8424;0.7167;0.7425;0.7167;0.7181;0.9525;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
KNeighborsClassifier;0.7956;0.8029;0.7956;0.796;0.7917;0.8018;0.7917;0.7939;0.7167;0.7292;0.7167;0.718;0.9196;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8156;0.8278;0.8156;0.8179;0.8611;0.8617;0.8611;0.8608;0.7167;0.724;0.7167;0.718;0.9299;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=251)
RandomForestClassifier;0.8341;0.8406;0.8341;0.8352;0.7569;0.7687;0.7569;0.7601;0.7167;0.7465;0.7167;0.7165;0.9509;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 200};RandomForestClassifier(n_estimators=20, random_state=200)
RandomForestClassifier;0.8287;0.8353;0.8287;0.8297;0.8542;0.8672;0.8542;0.8562;0.7167;0.7318;0.7167;0.7162;0.9497;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
RandomForestClassifier;0.8241;0.8319;0.8241;0.8252;0.7986;0.8133;0.7986;0.8021;0.7167;0.7234;0.7167;0.7146;0.9502;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 200};RandomForestClassifier(n_estimators=10, random_state=200)
DecisionTreeClassifier;0.8218;0.8307;0.8218;0.8232;0.8403;0.8431;0.8403;0.8397;0.7167;0.7172;0.7167;0.7143;0.9391;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8218;0.8304;0.8218;0.8232;0.8333;0.8314;0.8333;0.8312;0.7167;0.72;0.7167;0.7142;0.9329;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
DecisionTreeClassifier;0.8186;0.831;0.8186;0.821;0.8611;0.8644;0.8611;0.8609;0.7167;0.7191;0.7167;0.714;0.9371;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8218;0.832;0.8218;0.8232;0.8194;0.8239;0.8194;0.8205;0.7167;0.7267;0.7167;0.7138;0.9357;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
RandomForestClassifier;0.8326;0.8397;0.8326;0.8337;0.8194;0.825;0.8194;0.8212;0.7167;0.7436;0.7167;0.7116;0.9509;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 200};RandomForestClassifier(n_estimators=10, random_state=200)
RandomForestClassifier;0.831;0.8357;0.831;0.8319;0.7847;0.8037;0.7847;0.788;0.7167;0.7259;0.7167;0.7113;0.9519;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 856};RandomForestClassifier(n_estimators=10, random_state=856)
SVC;0.7516;0.7812;0.7516;0.7502;0.8056;0.8068;0.8056;0.8059;0.7;0.7154;0.7;0.7032;0.8814;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
RandomForestClassifier;0.8326;0.8415;0.8326;0.8337;0.7917;0.809;0.7917;0.7946;0.7;0.734;0.7;0.7026;0.9527;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
DecisionTreeClassifier;0.8311;0.8436;0.8311;0.8329;0.8125;0.8224;0.8125;0.8138;0.7;0.7184;0.7;0.7024;0.939;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
DecisionTreeClassifier;0.8318;0.8402;0.8318;0.8334;0.8333;0.8544;0.8333;0.8372;0.7;0.7184;0.7;0.7024;0.9419;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=780)
DecisionTreeClassifier;0.831;0.838;0.831;0.8321;0.8056;0.8221;0.8056;0.8075;0.7;0.7109;0.7;0.7017;0.9413;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8264;0.8377;0.8264;0.8284;0.8125;0.8254;0.8125;0.8139;0.7;0.7102;0.7;0.7011;0.9352;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
DecisionTreeClassifier;0.8271;0.8394;0.8271;0.8289;0.8472;0.8651;0.8472;0.8495;0.7;0.7102;0.7;0.7011;0.9401;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
SVC;0.7485;0.7756;0.7485;0.7477;0.7847;0.7902;0.7847;0.7843;0.7;0.7213;0.7;0.7007;0.8854;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
KNeighborsClassifier;0.7855;0.7925;0.7855;0.7852;0.7986;0.7963;0.7986;0.7958;0.7;0.7174;0.7;0.6998;0.9219;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8248;0.8359;0.8248;0.8269;0.8819;0.8819;0.8819;0.8801;0.7;0.721;0.7;0.6993;0.9377;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
DecisionTreeClassifier;0.8349;0.8458;0.8349;0.8361;0.7847;0.7976;0.7847;0.7862;0.7;0.6995;0.7;0.6986;0.9391;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
DecisionTreeClassifier;0.8179;0.8259;0.8179;0.8191;0.875;0.8833;0.875;0.8757;0.7;0.6995;0.7;0.6986;0.9365;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
DecisionTreeClassifier;0.8225;0.8309;0.8225;0.8238;0.8125;0.8162;0.8125;0.8127;0.7;0.6995;0.7;0.6986;0.9352;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
DecisionTreeClassifier;0.8272;0.8345;0.8272;0.8287;0.8472;0.853;0.8472;0.848;0.7;0.7136;0.7;0.6971;0.9381;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
DecisionTreeClassifier;0.8249;0.8366;0.8249;0.827;0.8333;0.8322;0.8333;0.8324;0.7;0.7064;0.7;0.6957;0.934;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 305};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=305)
SVC;0.7554;0.786;0.7554;0.7547;0.7847;0.7881;0.7847;0.7838;0.6833;0.7;0.6833;0.6865;0.8848;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.7391;0.7691;0.7391;0.7387;0.8264;0.8259;0.8264;0.8257;0.6833;0.7;0.6833;0.6865;0.8843;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
KNeighborsClassifier;0.7987;0.8089;0.7987;0.7989;0.7847;0.7911;0.7847;0.7841;0.6833;0.6944;0.6833;0.6858;0.9213;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
DecisionTreeClassifier;0.8333;0.84;0.8333;0.8346;0.7847;0.7998;0.7847;0.7884;0.6833;0.7022;0.6833;0.6847;0.9443;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 251};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=251)
KNeighborsClassifier;0.8172;0.8246;0.8172;0.8176;0.7778;0.78;0.7778;0.772;0.6833;0.6975;0.6833;0.6841;0.9305;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
SVC;0.7439;0.7751;0.7439;0.7434;0.8472;0.8553;0.8472;0.8487;0.6667;0.7018;0.6667;0.6723;0.8804;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.7476;0.7735;0.7476;0.7476;0.7778;0.7943;0.7778;0.7793;0.6667;0.7018;0.6667;0.6723;0.8841;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
SVC;0.7499;0.7783;0.7499;0.749;0.8194;0.8274;0.8194;0.8201;0.6667;0.7018;0.6667;0.6723;0.8818;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
SVC;0.7515;0.7777;0.7515;0.7505;0.8125;0.8115;0.8125;0.8118;0.6667;0.6877;0.6667;0.67;0.8839;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7539;0.7806;0.7539;0.7532;0.7569;0.7663;0.7569;0.7585;0.6667;0.6877;0.6667;0.67;0.8862;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.7478;0.7774;0.7478;0.7479;0.8333;0.84;0.8333;0.8342;0.6667;0.6877;0.6667;0.67;0.8824;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.75;0.7805;0.75;0.7497;0.8125;0.8205;0.8125;0.8131;0.6667;0.6877;0.6667;0.67;0.881;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7523;0.7844;0.7523;0.7518;0.7639;0.7747;0.7639;0.7666;0.6667;0.6889;0.6667;0.6698;0.8885;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7523;0.7838;0.7523;0.7513;0.8472;0.8487;0.8472;0.8466;0.6667;0.691;0.6667;0.6689;0.8851;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.75;0.7768;0.75;0.7501;0.8333;0.8458;0.8333;0.8334;0.65;0.6905;0.65;0.6549;0.8769;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.747;0.7761;0.747;0.7465;0.8194;0.8373;0.8194;0.8223;0.65;0.6905;0.65;0.6549;0.8792;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.7369;0.7691;0.7369;0.7363;0.8472;0.8478;0.8472;0.8473;0.65;0.6905;0.65;0.6549;0.8786;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7477;0.7798;0.7477;0.7471;0.8056;0.8198;0.8056;0.8051;0.65;0.6905;0.65;0.6549;0.8809;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7507;0.783;0.7507;0.7491;0.8194;0.8201;0.8194;0.8195;0.65;0.6905;0.65;0.6549;0.8825;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.7431;0.7767;0.7431;0.7424;0.8611;0.8617;0.8611;0.861;0.65;0.6905;0.65;0.6549;0.8801;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
SVC;0.7538;0.7819;0.7538;0.7535;0.8333;0.8493;0.8333;0.8364;0.65;0.6905;0.65;0.6549;0.8787;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
SVC;0.743;0.7763;0.743;0.7428;0.8403;0.8472;0.8403;0.8399;0.65;0.6905;0.65;0.6549;0.8799;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
SVC;0.7515;0.7782;0.7515;0.751;0.8056;0.8144;0.8056;0.8056;0.65;0.6905;0.65;0.6549;0.8813;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
SVC;0.7477;0.7761;0.7477;0.747;0.8194;0.8193;0.8194;0.8177;0.65;0.6905;0.65;0.6549;0.881;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
SVC;0.7515;0.7798;0.7515;0.7513;0.8681;0.8798;0.8681;0.8682;0.65;0.6905;0.65;0.6549;0.8803;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, probability=True, random_state=988)
SVC;0.7492;0.7772;0.7492;0.7481;0.8333;0.837;0.8333;0.8334;0.65;0.6762;0.65;0.6526;0.8819;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
DecisionTreeClassifier;0.8203;0.8321;0.8203;0.8217;0.8611;0.8616;0.8611;0.8612;0.65;0.6562;0.65;0.6495;0.9354;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
SVC;0.7461;0.7715;0.7461;0.7454;0.8264;0.8368;0.8264;0.8287;0.6333;0.6629;0.6333;0.6378;0.8794;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 402};SVC(C=10, probability=True, random_state=402)
SVC;0.7446;0.7775;0.7446;0.7441;0.8333;0.8467;0.8333;0.8339;0.6333;0.6629;0.6333;0.6378;0.8821;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 931};SVC(C=10, probability=True, random_state=931)
LogisticRegression;0.6944;0.7154;0.6944;0.6952;0.6319;0.6735;0.6319;0.6264;0.55;0.5632;0.55;0.5531;0.8394;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6828;0.706;0.6828;0.6826;0.6875;0.7;0.6875;0.6879;0.55;0.5556;0.55;0.552;0.8374;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6851;0.7075;0.6851;0.6851;0.7222;0.7473;0.7222;0.7247;0.55;0.5556;0.55;0.552;0.8345;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6906;0.7146;0.6906;0.6916;0.6319;0.6474;0.6319;0.6318;0.55;0.5556;0.55;0.552;0.8387;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6867;0.711;0.6867;0.6863;0.6944;0.7224;0.6944;0.6987;0.55;0.5578;0.55;0.551;0.8359;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6884;0.7104;0.6884;0.6887;0.6875;0.7049;0.6875;0.6866;0.55;0.5578;0.55;0.551;0.8363;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6868;0.7099;0.6868;0.6865;0.6875;0.6953;0.6875;0.6856;0.5333;0.5418;0.5333;0.5358;0.8346;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6844;0.7053;0.6844;0.6843;0.7014;0.7177;0.7014;0.7036;0.5333;0.5418;0.5333;0.5358;0.836;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6806;0.7023;0.6806;0.68;0.7014;0.7247;0.7014;0.7036;0.5333;0.5418;0.5333;0.5358;0.8378;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6914;0.7108;0.6914;0.6905;0.6597;0.6918;0.6597;0.6616;0.5333;0.5418;0.5333;0.5358;0.8385;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6922;0.7111;0.6922;0.6926;0.625;0.6834;0.625;0.6234;0.5333;0.5418;0.5333;0.5358;0.8387;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6798;0.7007;0.6798;0.6793;0.7292;0.743;0.7292;0.7311;0.5333;0.5418;0.5333;0.5358;0.8349;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6952;0.7206;0.6952;0.6954;0.6667;0.6894;0.6667;0.6672;0.5333;0.5418;0.5333;0.5358;0.8379;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6913;0.7138;0.6913;0.6915;0.6528;0.688;0.6528;0.65;0.5333;0.5418;0.5333;0.5358;0.8438;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.689;0.7103;0.689;0.69;0.6944;0.7226;0.6944;0.6886;0.5333;0.5418;0.5333;0.5358;0.8375;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6821;0.7092;0.6821;0.6832;0.7153;0.7259;0.7153;0.714;0.5333;0.5418;0.5333;0.5358;0.8357;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6852;0.7096;0.6852;0.6862;0.7153;0.7339;0.7153;0.7107;0.5333;0.5418;0.5333;0.5358;0.8368;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6822;0.7034;0.6822;0.6829;0.7153;0.7372;0.7153;0.715;0.5333;0.5418;0.5333;0.5358;0.837;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6829;0.7063;0.6829;0.6838;0.7153;0.7357;0.7153;0.7157;0.5333;0.5418;0.5333;0.5358;0.8376;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6921;0.7148;0.6921;0.6916;0.6319;0.6497;0.6319;0.6345;0.5333;0.5418;0.5333;0.5358;0.8409;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.69;0.7136;0.69;0.6909;0.7014;0.7071;0.7014;0.7011;0.5333;0.5418;0.5333;0.5358;0.8366;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6797;0.7026;0.6797;0.6795;0.7292;0.741;0.7292;0.7299;0.5333;0.5418;0.5333;0.5358;0.8334;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.6868;0.7086;0.6868;0.6873;0.6875;0.7075;0.6875;0.6911;0.5333;0.5418;0.5333;0.5358;0.8354;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 591, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=591)"
LogisticRegression;0.679;0.702;0.679;0.6778;0.7639;0.7751;0.7639;0.7662;0.5333;0.5418;0.5333;0.5358;0.8326;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 227, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=227)"
LogisticRegression;0.6914;0.7127;0.6914;0.6922;0.6528;0.6816;0.6528;0.6501;0.5333;0.5418;0.5333;0.5358;0.8384;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6829;0.7058;0.6829;0.6834;0.6944;0.7058;0.6944;0.6903;0.5333;0.5418;0.5333;0.5358;0.8353;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6883;0.7108;0.6883;0.6875;0.6944;0.7064;0.6944;0.695;0.5333;0.5418;0.5333;0.5358;0.8352;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6914;0.7147;0.6914;0.6903;0.6667;0.6965;0.6667;0.6699;0.5333;0.5418;0.5333;0.5358;0.8379;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6867;0.7074;0.6867;0.6862;0.7361;0.7552;0.7361;0.7371;0.5333;0.5418;0.5333;0.5358;0.8336;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
LogisticRegression;0.6829;0.7054;0.6829;0.6824;0.7292;0.7702;0.7292;0.7276;0.5333;0.5418;0.5333;0.5358;0.8385;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 938, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=938)"
