Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7408;0.7578;0.7408;0.7428;0.8986;0.9056;0.8986;0.9002;0.85;0.855;0.85;0.8493;0.8924;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8487;0.8569;0.8487;0.8498;0.8551;0.8606;0.8551;0.8568;0.8333;0.8482;0.8333;0.8355;0.9517;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 567};RandomForestClassifier(n_estimators=10, random_state=567)
RandomForestClassifier;0.8615;0.8712;0.8615;0.8614;0.7681;0.7903;0.7681;0.7711;0.8333;0.8446;0.8333;0.834;0.9551;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 567};RandomForestClassifier(n_estimators=20, random_state=567)
RandomForestClassifier;0.8518;0.8626;0.8518;0.8529;0.8986;0.8986;0.8986;0.8986;0.8167;0.826;0.8167;0.8187;0.9582;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 567};RandomForestClassifier(n_estimators=20, random_state=567)
DecisionTreeClassifier;0.8309;0.8361;0.8309;0.8305;0.8551;0.8544;0.8551;0.8528;0.8167;0.826;0.8167;0.8187;0.8731;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
DecisionTreeClassifier;0.8212;0.8295;0.8212;0.8204;0.8551;0.8594;0.8551;0.8565;0.8167;0.8253;0.8167;0.8183;0.8663;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
RandomForestClassifier;0.8373;0.8463;0.8373;0.8382;0.8116;0.8196;0.8116;0.812;0.8167;0.8277;0.8167;0.8175;0.9502;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
RandomForestClassifier;0.8518;0.8626;0.8518;0.8519;0.8696;0.8702;0.8696;0.8674;0.8167;0.8205;0.8167;0.8172;0.9543;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
RandomForestClassifier;0.8582;0.8631;0.8582;0.8577;0.7826;0.8059;0.7826;0.7867;0.8167;0.8273;0.8167;0.817;0.9577;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 681};RandomForestClassifier(n_estimators=20, random_state=681)
RandomForestClassifier;0.8566;0.8639;0.8566;0.8579;0.8261;0.8271;0.8261;0.8263;0.8167;0.8215;0.8167;0.8165;0.9529;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 681};RandomForestClassifier(n_estimators=10, random_state=681)
KNeighborsClassifier;0.723;0.7423;0.723;0.7256;0.8406;0.8658;0.8406;0.8444;0.8167;0.8215;0.8167;0.8165;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7488;0.7695;0.7488;0.7501;0.8406;0.8491;0.8406;0.8413;0.8167;0.822;0.8167;0.8148;0.8947;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8534;0.8642;0.8534;0.854;0.8406;0.8416;0.8406;0.8408;0.8;0.8142;0.8;0.8023;0.9607;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
DecisionTreeClassifier;0.8245;0.8302;0.8245;0.8244;0.8261;0.8301;0.8261;0.8199;0.8;0.8094;0.8;0.802;0.8684;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
RandomForestClassifier;0.8389;0.8467;0.8389;0.8398;0.942;0.9464;0.942;0.9422;0.8;0.8094;0.8;0.802;0.9507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
DecisionTreeClassifier;0.826;0.8352;0.826;0.8249;0.8841;0.8942;0.8841;0.8861;0.8;0.8093;0.8;0.8017;0.8692;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
RandomForestClassifier;0.8567;0.8676;0.8567;0.8567;0.7971;0.8238;0.7971;0.7997;0.8;0.8093;0.8;0.8017;0.9633;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 567};RandomForestClassifier(n_estimators=10, random_state=567)
RandomForestClassifier;0.8469;0.8553;0.8469;0.8466;0.8696;0.8762;0.8696;0.8711;0.8;0.8125;0.8;0.8016;0.9518;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 681};RandomForestClassifier(n_estimators=20, random_state=681)
DecisionTreeClassifier;0.8246;0.828;0.8246;0.8246;0.8841;0.8852;0.8841;0.8843;0.8;0.8042;0.8;0.801;0.8684;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
DecisionTreeClassifier;0.8293;0.8344;0.8293;0.8287;0.8406;0.851;0.8406;0.8421;0.8;0.8042;0.8;0.801;0.8721;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
RandomForestClassifier;0.8519;0.8629;0.8519;0.8529;0.8841;0.8834;0.8841;0.8826;0.8;0.8042;0.8;0.801;0.9548;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
RandomForestClassifier;0.8535;0.8646;0.8535;0.8545;0.8116;0.8158;0.8116;0.813;0.8;0.8064;0.8;0.8007;0.9608;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 567};RandomForestClassifier(n_estimators=20, random_state=567)
RandomForestClassifier;0.8664;0.8759;0.8664;0.8666;0.7826;0.8068;0.7826;0.7834;0.8;0.8064;0.8;0.8007;0.9565;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
RandomForestClassifier;0.8405;0.8475;0.8405;0.8419;0.8551;0.8571;0.8551;0.8553;0.8;0.8039;0.8;0.8005;0.9501;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 681};RandomForestClassifier(n_estimators=20, random_state=681)
RandomForestClassifier;0.8615;0.8706;0.8615;0.8617;0.8116;0.8178;0.8116;0.8128;0.8;0.8125;0.8;0.8005;0.9585;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
KNeighborsClassifier;0.7553;0.7783;0.7553;0.7566;0.7971;0.802;0.7971;0.7979;0.8;0.8057;0.8;0.8003;0.899;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7328;0.7486;0.7328;0.7342;0.7536;0.7716;0.7536;0.7567;0.8;0.8057;0.8;0.8003;0.8962;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8552;0.8604;0.8552;0.8561;0.8986;0.9127;0.8986;0.9007;0.8;0.8057;0.8;0.8003;0.9573;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 155};RandomForestClassifier(n_estimators=10, random_state=155)
KNeighborsClassifier;0.7247;0.7466;0.7247;0.7277;0.8261;0.8294;0.8261;0.8269;0.8;0.8079;0.8;0.7992;0.891;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7328;0.7541;0.7328;0.7367;0.913;0.913;0.913;0.913;0.8;0.8079;0.8;0.7992;0.8914;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7408;0.7588;0.7408;0.7423;0.8406;0.8465;0.8406;0.8395;0.8;0.8068;0.8;0.7989;0.8999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.752;0.7659;0.752;0.7534;0.7536;0.7845;0.7536;0.7563;0.8;0.8073;0.8;0.7965;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8568;0.8647;0.8568;0.8576;0.7971;0.8205;0.7971;0.8005;0.7833;0.7973;0.7833;0.7857;0.9569;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 567};RandomForestClassifier(n_estimators=10, random_state=567)
RandomForestClassifier;0.8486;0.8588;0.8486;0.8495;0.8696;0.8746;0.8696;0.8702;0.7833;0.7934;0.7833;0.7852;0.9533;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 567};RandomForestClassifier(n_estimators=10, random_state=567)
DecisionTreeClassifier;0.8229;0.83;0.8229;0.8228;0.8116;0.8116;0.8116;0.8116;0.7833;0.797;0.7833;0.7852;0.867;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
RandomForestClassifier;0.8437;0.8551;0.8437;0.8447;0.8261;0.8272;0.8261;0.8264;0.7833;0.797;0.7833;0.7852;0.952;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 567};RandomForestClassifier(n_estimators=20, random_state=567)
RandomForestClassifier;0.8534;0.8573;0.8534;0.8535;0.913;0.931;0.913;0.9146;0.7833;0.7927;0.7833;0.785;0.9572;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 567};RandomForestClassifier(n_estimators=20, random_state=567)
DecisionTreeClassifier;0.8309;0.8349;0.8309;0.8301;0.8261;0.8473;0.8261;0.83;0.7833;0.7972;0.7833;0.785;0.8736;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
DecisionTreeClassifier;0.8406;0.8543;0.8406;0.8407;0.7246;0.7463;0.7246;0.7253;0.7833;0.7972;0.7833;0.785;0.8803;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
KNeighborsClassifier;0.7262;0.7529;0.7262;0.7292;0.8261;0.8289;0.8261;0.8265;0.7833;0.7898;0.7833;0.784;0.897;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8228;0.8266;0.8228;0.8233;0.7536;0.7525;0.7536;0.7521;0.7833;0.7872;0.7833;0.7839;0.8672;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
DecisionTreeClassifier;0.8003;0.8136;0.8003;0.8003;0.8406;0.8469;0.8406;0.8325;0.7833;0.7872;0.7833;0.7839;0.8503;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
DecisionTreeClassifier;0.8245;0.829;0.8245;0.8236;0.8696;0.8713;0.8696;0.8701;0.7833;0.7872;0.7833;0.7839;0.8683;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
RandomForestClassifier;0.8535;0.8616;0.8535;0.8533;0.8551;0.8606;0.8551;0.8568;0.7833;0.7905;0.7833;0.7838;0.9538;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 681};RandomForestClassifier(n_estimators=5, random_state=681)
KNeighborsClassifier;0.7423;0.7573;0.7423;0.7438;0.8841;0.8899;0.8841;0.8858;0.7833;0.7905;0.7833;0.7838;0.8947;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7488;0.7638;0.7488;0.7502;0.8406;0.8452;0.8406;0.842;0.7833;0.7934;0.7833;0.7837;0.9026;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8487;0.8579;0.8487;0.85;0.8696;0.874;0.8696;0.8707;0.7833;0.7917;0.7833;0.7831;0.9527;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 681};RandomForestClassifier(n_estimators=10, random_state=681)
KNeighborsClassifier;0.7569;0.7747;0.7569;0.7587;0.8116;0.8665;0.8116;0.8126;0.7833;0.792;0.7833;0.783;0.9016;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.752;0.7674;0.752;0.7537;0.7536;0.7628;0.7536;0.7567;0.7833;0.792;0.7833;0.783;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8437;0.8511;0.8437;0.8438;0.8116;0.825;0.8116;0.8158;0.7833;0.7883;0.7833;0.7827;0.8827;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
KNeighborsClassifier;0.7214;0.7447;0.7214;0.7237;0.913;0.9147;0.913;0.913;0.7833;0.7868;0.7833;0.7826;0.8878;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7422;0.7636;0.7422;0.7436;0.7681;0.8115;0.7681;0.7735;0.7833;0.7868;0.7833;0.7826;0.9015;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7311;0.7521;0.7311;0.734;0.8841;0.8839;0.8841;0.8837;0.7833;0.7861;0.7833;0.7823;0.8959;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7312;0.7536;0.7312;0.7334;0.7971;0.805;0.7971;0.7986;0.7833;0.7928;0.7833;0.781;0.8989;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.678;0.7125;0.678;0.6756;0.7681;0.7757;0.7681;0.7703;0.7667;0.789;0.7667;0.7712;0.8649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
SVC;0.6716;0.7061;0.6716;0.6684;0.7826;0.822;0.7826;0.7857;0.7667;0.789;0.7667;0.7712;0.861;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.6925;0.7326;0.6925;0.6898;0.7101;0.7312;0.7101;0.7067;0.7667;0.7863;0.7667;0.7709;0.865;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
RandomForestClassifier;0.8471;0.854;0.8471;0.8476;0.8986;0.9056;0.8986;0.9002;0.7667;0.7971;0.7667;0.7706;0.9534;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 681};RandomForestClassifier(n_estimators=10, random_state=681)
DecisionTreeClassifier;0.8228;0.829;0.8228;0.8232;0.8116;0.8219;0.8116;0.8139;0.7667;0.7839;0.7667;0.7705;0.867;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
DecisionTreeClassifier;0.8309;0.838;0.8309;0.8297;0.8116;0.8211;0.8116;0.8126;0.7667;0.7759;0.7667;0.7692;0.8734;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
RandomForestClassifier;0.8406;0.8509;0.8406;0.8412;0.8116;0.8299;0.8116;0.8156;0.7667;0.7811;0.7667;0.769;0.9555;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 155};RandomForestClassifier(n_estimators=10, random_state=155)
DecisionTreeClassifier;0.8004;0.8101;0.8004;0.7996;0.8696;0.8727;0.8696;0.8704;0.7667;0.7819;0.7667;0.7687;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
DecisionTreeClassifier;0.8325;0.8372;0.8325;0.8307;0.8986;0.8996;0.8986;0.8988;0.7667;0.7725;0.7667;0.7685;0.8741;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
DecisionTreeClassifier;0.818;0.8257;0.818;0.817;0.8986;0.8994;0.8986;0.8981;0.7667;0.7848;0.7667;0.7683;0.8634;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
KNeighborsClassifier;0.7618;0.7795;0.7618;0.7642;0.7971;0.8044;0.7971;0.7991;0.7667;0.7746;0.7667;0.7681;0.9054;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8373;0.8451;0.8373;0.838;0.8551;0.8608;0.8551;0.8555;0.7667;0.7765;0.7667;0.7672;0.9524;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 681};RandomForestClassifier(n_estimators=10, random_state=681)
KNeighborsClassifier;0.7647;0.786;0.7647;0.7675;0.7826;0.7864;0.7826;0.7835;0.7667;0.7778;0.7667;0.7668;0.9093;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.752;0.7713;0.752;0.7545;0.7681;0.7783;0.7681;0.7702;0.7667;0.7716;0.7667;0.7668;0.8972;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.8373;0.8432;0.8373;0.8381;0.913;0.9177;0.913;0.9142;0.7667;0.7761;0.7667;0.7667;0.9496;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 681};RandomForestClassifier(n_estimators=10, random_state=681)
KNeighborsClassifier;0.7439;0.7651;0.7439;0.7452;0.8116;0.8183;0.8116;0.8121;0.7667;0.7702;0.7667;0.766;0.8874;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.847;0.8566;0.847;0.8473;0.8696;0.8783;0.8696;0.8709;0.7667;0.7702;0.7667;0.766;0.9563;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 155};RandomForestClassifier(n_estimators=20, random_state=155)
KNeighborsClassifier;0.7488;0.7711;0.7488;0.7505;0.7391;0.764;0.7391;0.7439;0.7667;0.7726;0.7667;0.7652;0.9014;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7569;0.7776;0.7569;0.7593;0.7971;0.8201;0.7971;0.7996;0.7667;0.7777;0.7667;0.7652;0.9002;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7698;0.7907;0.7698;0.7715;0.8551;0.8649;0.8551;0.8556;0.7667;0.7777;0.7667;0.7652;0.8997;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7325;0.7527;0.7325;0.7356;0.7536;0.7675;0.7536;0.7564;0.7667;0.7966;0.7667;0.7644;0.8934;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7248;0.7424;0.7248;0.727;0.8551;0.8664;0.8551;0.8555;0.7667;0.7822;0.7667;0.7636;0.8955;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7536;0.772;0.7536;0.7558;0.7826;0.7916;0.7826;0.7837;0.7667;0.779;0.7667;0.7589;0.8955;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.6667;0.7038;0.6667;0.6671;0.8116;0.8346;0.8116;0.8144;0.75;0.7708;0.75;0.7551;0.851;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.6975;0.7417;0.6975;0.6961;0.7971;0.8318;0.7971;0.8008;0.75;0.7794;0.75;0.755;0.8688;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
RandomForestClassifier;0.8455;0.8545;0.8455;0.8465;0.8696;0.8814;0.8696;0.8716;0.75;0.767;0.75;0.754;0.9597;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 681};RandomForestClassifier(n_estimators=20, random_state=681)
SVC;0.6859;0.7217;0.6859;0.6871;0.7681;0.7813;0.7681;0.7707;0.75;0.7656;0.75;0.754;0.8634;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.6619;0.6979;0.6619;0.6628;0.8261;0.8502;0.8261;0.8249;0.75;0.7744;0.75;0.7537;0.8535;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
SVC;0.6924;0.7359;0.6924;0.6892;0.6812;0.7057;0.6812;0.6884;0.75;0.7639;0.75;0.7536;0.8638;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
DecisionTreeClassifier;0.8341;0.8407;0.8341;0.8338;0.7536;0.7559;0.7536;0.7545;0.75;0.7602;0.75;0.7527;0.8759;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
DecisionTreeClassifier;0.8311;0.8339;0.8311;0.8298;0.8696;0.8692;0.8696;0.8675;0.75;0.7694;0.75;0.7519;0.8733;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
DecisionTreeClassifier;0.839;0.8454;0.839;0.8382;0.7391;0.7472;0.7391;0.7392;0.75;0.7694;0.75;0.7519;0.8794;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
RandomForestClassifier;0.8486;0.8582;0.8486;0.8499;0.8551;0.861;0.8551;0.8563;0.75;0.7639;0.75;0.7517;0.9536;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 567};RandomForestClassifier(n_estimators=10, random_state=567)
DecisionTreeClassifier;0.8454;0.8502;0.8454;0.8456;0.8551;0.8666;0.8551;0.8575;0.75;0.7614;0.75;0.7513;0.8841;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
DecisionTreeClassifier;0.8245;0.8265;0.8245;0.8236;0.8696;0.8691;0.8696;0.8685;0.75;0.7572;0.75;0.7505;0.8685;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
KNeighborsClassifier;0.7343;0.757;0.7343;0.7368;0.8116;0.8413;0.8116;0.817;0.75;0.7625;0.75;0.7493;0.8948;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7342;0.7558;0.7342;0.7353;0.8986;0.9028;0.8986;0.8997;0.75;0.7631;0.75;0.7491;0.8903;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.6426;0.6543;0.6426;0.6425;0.7971;0.8095;0.7971;0.8006;0.75;0.7583;0.75;0.7487;0.8612;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
DecisionTreeClassifier;0.8294;0.8302;0.8294;0.8289;0.7826;0.7833;0.7826;0.78;0.75;0.7583;0.75;0.7487;0.8722;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
MLPClassifier;0.6411;0.6553;0.6411;0.6427;0.7826;0.7949;0.7826;0.7857;0.75;0.7464;0.75;0.7444;0.8627;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
SVC;0.6811;0.716;0.6811;0.6802;0.7391;0.7378;0.7391;0.737;0.7333;0.7581;0.7333;0.7393;0.8649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.6731;0.7076;0.6731;0.6721;0.7246;0.7415;0.7246;0.7287;0.7333;0.7679;0.7333;0.7392;0.8574;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
SVC;0.6667;0.7081;0.6667;0.6679;0.7826;0.7919;0.7826;0.7844;0.7333;0.7649;0.7333;0.739;0.8532;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.6812;0.7206;0.6812;0.6802;0.7681;0.7801;0.7681;0.7706;0.7333;0.7619;0.7333;0.7379;0.8606;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
MLPClassifier;0.6522;0.6685;0.6522;0.6525;0.6667;0.6794;0.6667;0.6691;0.7333;0.7485;0.7333;0.7365;0.8637;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
MLPClassifier;0.6474;0.6571;0.6474;0.6447;0.7536;0.7544;0.7536;0.7524;0.7333;0.7474;0.7333;0.7334;0.8695;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
DecisionTreeClassifier;0.81;0.8163;0.81;0.8084;0.8841;0.8879;0.8841;0.8852;0.7333;0.7408;0.7333;0.733;0.8574;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
MLPClassifier;0.6506;0.6579;0.6506;0.6503;0.6957;0.7022;0.6957;0.6937;0.7333;0.7354;0.7333;0.733;0.865;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
DecisionTreeClassifier;0.826;0.8308;0.826;0.8258;0.8261;0.8273;0.8261;0.8259;0.7333;0.7347;0.7333;0.7319;0.8695;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 112};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=112)
MLPClassifier;0.6394;0.6494;0.6394;0.6366;0.8261;0.8372;0.8261;0.8296;0.7333;0.7422;0.7333;0.7311;0.8592;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
MLPClassifier;0.6602;0.674;0.6602;0.6585;0.6957;0.7138;0.6957;0.7015;0.7333;0.7456;0.7333;0.731;0.8666;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
SVC;0.6797;0.7108;0.6797;0.6782;0.7536;0.7944;0.7536;0.7579;0.7167;0.7403;0.7167;0.7232;0.8639;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
SVC;0.665;0.706;0.665;0.6665;0.7246;0.7372;0.7246;0.7285;0.7167;0.7403;0.7167;0.7232;0.8544;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.665;0.7008;0.665;0.664;0.7246;0.7649;0.7246;0.7302;0.7167;0.7565;0.7167;0.7231;0.857;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.6796;0.715;0.6796;0.6789;0.7681;0.7813;0.7681;0.7721;0.7167;0.7593;0.7167;0.7227;0.8609;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
SVC;0.6715;0.7067;0.6715;0.6715;0.7681;0.7771;0.7681;0.771;0.7167;0.7376;0.7167;0.7225;0.8587;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
SVC;0.6813;0.7145;0.6813;0.6786;0.7246;0.7321;0.7246;0.7274;0.7167;0.7432;0.7167;0.7223;0.8654;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
LogisticRegression;0.6249;0.6492;0.6249;0.6255;0.7101;0.723;0.7101;0.7127;0.7167;0.7325;0.7167;0.7218;0.8134;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
SVC;0.686;0.7186;0.686;0.6849;0.7826;0.8;0.7826;0.7871;0.7167;0.7315;0.7167;0.7209;0.8629;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
SVC;0.6893;0.7258;0.6893;0.6884;0.7101;0.7238;0.7101;0.7117;0.7167;0.7315;0.7167;0.7209;0.866;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
SVC;0.6698;0.7065;0.6698;0.6678;0.7246;0.7235;0.7246;0.7231;0.7167;0.7315;0.7167;0.7209;0.8633;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
SVC;0.6715;0.7172;0.6715;0.6708;0.7391;0.7993;0.7391;0.7437;0.7167;0.748;0.7167;0.7201;0.8557;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
SVC;0.6811;0.7152;0.6811;0.6811;0.7681;0.8047;0.7681;0.7725;0.7167;0.748;0.7167;0.7201;0.8619;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
SVC;0.6795;0.7128;0.6795;0.6781;0.6957;0.732;0.6957;0.701;0.7167;0.7274;0.7167;0.7193;0.8608;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
MLPClassifier;0.6377;0.6486;0.6377;0.6367;0.7246;0.737;0.7246;0.7286;0.7167;0.7222;0.7167;0.7184;0.8617;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
DecisionTreeClassifier;0.8181;0.8253;0.8181;0.8168;0.6522;0.6891;0.6522;0.6597;0.7167;0.7278;0.7167;0.7168;0.8639;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
LogisticRegression;0.6378;0.6649;0.6378;0.6374;0.5652;0.5904;0.5652;0.5644;0.7167;0.7212;0.7167;0.7168;0.8144;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
LogisticRegression;0.6151;0.6362;0.6151;0.6153;0.6667;0.6672;0.6667;0.6662;0.7167;0.7212;0.7167;0.7168;0.8148;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
LogisticRegression;0.6328;0.6534;0.6328;0.6334;0.5942;0.606;0.5942;0.5916;0.7167;0.7212;0.7167;0.7168;0.8196;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
LogisticRegression;0.6297;0.6501;0.6297;0.629;0.6087;0.6156;0.6087;0.6025;0.7167;0.7212;0.7167;0.7168;0.8203;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
LogisticRegression;0.6232;0.6421;0.6232;0.6219;0.5942;0.609;0.5942;0.5945;0.7167;0.7212;0.7167;0.7168;0.8191;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
LogisticRegression;0.6119;0.6286;0.6119;0.6116;0.6667;0.6824;0.6667;0.6714;0.7167;0.7212;0.7167;0.7168;0.8157;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
LogisticRegression;0.6004;0.6173;0.6004;0.5983;0.7101;0.715;0.7101;0.7108;0.7167;0.7212;0.7167;0.7168;0.8111;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
LogisticRegression;0.628;0.65;0.628;0.6304;0.6087;0.6107;0.6087;0.5985;0.7167;0.7212;0.7167;0.7168;0.8177;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
LogisticRegression;0.6136;0.629;0.6136;0.615;0.6957;0.7176;0.6957;0.6938;0.7167;0.7212;0.7167;0.7168;0.8148;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
DecisionTreeClassifier;0.826;0.8365;0.826;0.8258;0.8551;0.8619;0.8551;0.8542;0.7167;0.7209;0.7167;0.7158;0.8694;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 433};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=433)
MLPClassifier;0.6505;0.6608;0.6505;0.6502;0.7681;0.7909;0.7681;0.7733;0.7167;0.7171;0.7167;0.7148;0.8612;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
MLPClassifier;0.6459;0.6578;0.6459;0.6469;0.7826;0.7808;0.7826;0.7744;0.7167;0.7332;0.7167;0.7128;0.8621;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
MLPClassifier;0.6249;0.6367;0.6249;0.6247;0.7971;0.7972;0.7971;0.7953;0.7167;0.7182;0.7167;0.7119;0.8552;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.6522;0.6696;0.6522;0.6519;0.7536;0.7667;0.7536;0.7522;0.7167;0.7139;0.7167;0.71;0.8638;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
LogisticRegression;0.628;0.6488;0.628;0.6276;0.6667;0.6924;0.6667;0.6708;0.7;0.7216;0.7;0.7063;0.814;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
SVC;0.686;0.7232;0.686;0.6869;0.6812;0.7227;0.6812;0.6836;0.7;0.7318;0.7;0.7063;0.8606;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
SVC;0.6797;0.7106;0.6797;0.6789;0.7391;0.7551;0.7391;0.7443;0.7;0.7159;0.7;0.7052;0.8538;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
SVC;0.6618;0.6937;0.6618;0.6614;0.8261;0.8259;0.8261;0.8257;0.7;0.7193;0.7;0.7048;0.8546;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
MLPClassifier;0.6521;0.6632;0.6521;0.6513;0.7101;0.7264;0.7101;0.7111;0.7;0.7129;0.7;0.7038;0.8604;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
MLPClassifier;0.6409;0.6565;0.6409;0.6422;0.7536;0.7921;0.7536;0.7508;0.7;0.7081;0.7;0.7033;0.8615;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.6554;0.6692;0.6554;0.6548;0.6812;0.6954;0.6812;0.6831;0.7;0.7103;0.7;0.7029;0.8653;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
MLPClassifier;0.6455;0.6512;0.6455;0.6437;0.7536;0.7601;0.7536;0.7559;0.7;0.7063;0.7;0.7022;0.8588;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
LogisticRegression;0.625;0.6471;0.625;0.6255;0.6087;0.6153;0.6087;0.6107;0.7;0.7093;0.7;0.7017;0.8233;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
DecisionTreeClassifier;0.8196;0.8234;0.8196;0.8196;0.8406;0.858;0.8406;0.8429;0.7;0.7205;0.7;0.7004;0.865;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
LogisticRegression;0.6281;0.6509;0.6281;0.6291;0.5652;0.5715;0.5652;0.5659;0.7;0.7037;0.7;0.6986;0.8192;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
MLPClassifier;0.665;0.6787;0.665;0.6633;0.6522;0.6898;0.6522;0.6571;0.7;0.6986;0.7;0.6972;0.8704;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.6458;0.6586;0.6458;0.6448;0.8116;0.821;0.8116;0.8146;0.7;0.7211;0.7;0.6969;0.8613;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
LogisticRegression;0.6198;0.6343;0.6198;0.6206;0.6812;0.7199;0.6812;0.6799;0.6833;0.7086;0.6833;0.6915;0.813;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
LogisticRegression;0.6248;0.6482;0.6248;0.6232;0.6377;0.6424;0.6377;0.6392;0.6833;0.7086;0.6833;0.6915;0.8143;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
SVC;0.6619;0.7006;0.6619;0.6623;0.8116;0.8299;0.8116;0.8145;0.6833;0.7223;0.6833;0.6911;0.8498;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 746};SVC(C=10, probability=True, random_state=746)
LogisticRegression;0.6344;0.6575;0.6344;0.6335;0.5797;0.6539;0.5797;0.593;0.6833;0.7123;0.6833;0.6908;0.8148;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
LogisticRegression;0.6168;0.6378;0.6168;0.6186;0.7391;0.758;0.7391;0.7365;0.6833;0.7014;0.6833;0.6897;0.8082;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
MLPClassifier;0.6411;0.6504;0.6411;0.6402;0.7536;0.7833;0.7536;0.7525;0.6833;0.7037;0.6833;0.6892;0.8609;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
SVC;0.6923;0.7259;0.6923;0.6922;0.6812;0.6957;0.6812;0.6835;0.6833;0.7007;0.6833;0.6885;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 512};SVC(C=10, probability=True, random_state=512)
MLPClassifier;0.6636;0.6761;0.6636;0.6632;0.7536;0.7551;0.7536;0.7533;0.6833;0.6984;0.6833;0.6883;0.8629;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
MLPClassifier;0.6473;0.6592;0.6473;0.6459;0.7246;0.7287;0.7246;0.7264;0.6833;0.7105;0.6833;0.6866;0.8617;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.6572;0.6694;0.6572;0.6576;0.7826;0.7868;0.7826;0.7837;0.6833;0.6905;0.6833;0.6859;0.8598;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.6572;0.6723;0.6572;0.6564;0.8116;0.8126;0.8116;0.8118;0.6833;0.6905;0.6833;0.6859;0.8663;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
MLPClassifier;0.6442;0.6591;0.6442;0.6432;0.6667;0.6605;0.6667;0.6618;0.6833;0.6905;0.6833;0.6859;0.8626;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
LogisticRegression;0.6215;0.6408;0.6215;0.6222;0.6522;0.6602;0.6522;0.6542;0.6833;0.7013;0.6833;0.6858;0.8201;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
MLPClassifier;0.6585;0.6795;0.6585;0.6569;0.6812;0.6867;0.6812;0.6833;0.6833;0.6951;0.6833;0.6852;0.8659;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
LogisticRegression;0.6215;0.6449;0.6215;0.6224;0.5942;0.5962;0.5942;0.5926;0.6833;0.6884;0.6833;0.6846;0.8164;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
LogisticRegression;0.6217;0.6494;0.6217;0.622;0.7246;0.7389;0.7246;0.7256;0.6833;0.6884;0.6833;0.6846;0.8199;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
LogisticRegression;0.6279;0.6467;0.6279;0.6283;0.5797;0.5849;0.5797;0.5771;0.6833;0.6861;0.6833;0.6799;0.8157;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
LogisticRegression;0.6394;0.6588;0.6394;0.6392;0.4783;0.4688;0.4783;0.4704;0.6833;0.6861;0.6833;0.6799;0.816;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
LogisticRegression;0.6313;0.6504;0.6313;0.6327;0.5652;0.5816;0.5652;0.5662;0.6833;0.6861;0.6833;0.6799;0.8196;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
DecisionTreeClassifier;0.815;0.8172;0.815;0.8148;0.7971;0.7962;0.7971;0.7964;0.6833;0.6861;0.6833;0.6798;0.8611;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 778};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=778)
MLPClassifier;0.6554;0.6717;0.6554;0.6553;0.7826;0.8007;0.7826;0.7779;0.6833;0.7009;0.6833;0.6786;0.8621;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
MLPClassifier;0.6487;0.6617;0.6487;0.6491;0.7101;0.7239;0.7101;0.7111;0.6833;0.6963;0.6833;0.6784;0.8637;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 183, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=183)
LogisticRegression;0.641;0.6676;0.641;0.6445;0.5362;0.5292;0.5362;0.5269;0.6667;0.6958;0.6667;0.6763;0.8225;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
LogisticRegression;0.6265;0.6491;0.6265;0.6268;0.6377;0.648;0.6377;0.6361;0.6667;0.6958;0.6667;0.6763;0.8167;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
LogisticRegression;0.6411;0.6648;0.6411;0.6424;0.5072;0.529;0.5072;0.4922;0.6667;0.6741;0.6667;0.6652;0.8274;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 248, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=248)"
MLPClassifier;0.6731;0.6872;0.6731;0.6713;0.6957;0.7163;0.6957;0.694;0.6667;0.684;0.6667;0.6642;0.8683;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 827, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=827)
MLPClassifier;0.6555;0.6747;0.6555;0.6566;0.6522;0.6448;0.6522;0.6429;0.6833;0.6684;0.6833;0.6634;0.8661;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
LogisticRegression;0.6378;0.6611;0.6378;0.6387;0.5942;0.6397;0.5942;0.596;0.65;0.6878;0.65;0.6611;0.8154;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
MLPClassifier;0.6524;0.6638;0.6524;0.652;0.7246;0.7549;0.7246;0.7286;0.6667;0.6887;0.6667;0.6604;0.8678;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
SVC;0.6781;0.7041;0.6781;0.6788;0.7826;0.7826;0.7826;0.7826;0.65;0.6648;0.65;0.6534;0.8546;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 160};SVC(C=10, probability=True, random_state=160)
LogisticRegression;0.625;0.648;0.625;0.6247;0.6377;0.6389;0.6377;0.6377;0.65;0.6552;0.65;0.6523;0.8252;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 646, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=646)"
LogisticRegression;0.6135;0.6333;0.6135;0.6133;0.6667;0.6611;0.6667;0.6522;0.65;0.6528;0.65;0.6483;0.8106;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
LogisticRegression;0.6264;0.6472;0.6264;0.6274;0.6377;0.6404;0.6377;0.6388;0.65;0.6528;0.65;0.6483;0.8185;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 917, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=917)"
