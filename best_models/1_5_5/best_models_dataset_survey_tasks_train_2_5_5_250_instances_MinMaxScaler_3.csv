Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8391;0.8469;0.8391;0.8389;0.7391;0.7365;0.7391;0.7334;0.8167;0.8238;0.8167;0.8155;0.9235;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=831)
DecisionTreeClassifier;0.8615;0.8704;0.8615;0.8622;0.8696;0.8719;0.8696;0.8647;0.8;0.8296;0.8;0.8027;0.9364;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
DecisionTreeClassifier;0.823;0.8373;0.823;0.8241;0.8696;0.8689;0.8696;0.8673;0.8;0.8296;0.8;0.8027;0.9251;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.8389;0.8475;0.8389;0.8395;0.8406;0.8556;0.8406;0.8435;0.8;0.8211;0.8;0.8019;0.9331;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=95)
RandomForestClassifier;0.8374;0.8421;0.8374;0.837;0.9275;0.931;0.9275;0.9281;0.8;0.8087;0.8;0.7973;0.9539;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 653};RandomForestClassifier(n_estimators=10, random_state=653)
RandomForestClassifier;0.8534;0.8583;0.8534;0.8533;0.8116;0.8135;0.8116;0.808;0.8;0.8067;0.8;0.7962;0.9609;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 653};RandomForestClassifier(n_estimators=10, random_state=653)
SVC;0.8229;0.8318;0.8229;0.8226;0.8261;0.8377;0.8261;0.8291;0.7833;0.8078;0.7833;0.787;0.9168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 399};SVC(C=10, probability=True, random_state=399)
SVC;0.8439;0.8519;0.8439;0.844;0.7101;0.7174;0.7101;0.7123;0.7833;0.8195;0.7833;0.7869;0.9224;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 399};SVC(C=1, probability=True, random_state=399)
DecisionTreeClassifier;0.8262;0.838;0.8262;0.8273;0.8406;0.8712;0.8406;0.8413;0.7833;0.8195;0.7833;0.7869;0.921;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=831)
SVC;0.8244;0.8373;0.8244;0.8244;0.8696;0.8716;0.8696;0.8671;0.7833;0.8195;0.7833;0.7869;0.9128;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 636};SVC(C=10, kernel='linear', probability=True, random_state=636)
SVC;0.8276;0.8372;0.8276;0.8281;0.8261;0.8298;0.8261;0.8245;0.7833;0.8195;0.7833;0.7869;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 649};SVC(C=10, kernel='linear', probability=True, random_state=649)
DecisionTreeClassifier;0.8405;0.8498;0.8405;0.8417;0.7971;0.8036;0.7971;0.7995;0.7833;0.8195;0.7833;0.7869;0.9253;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=95)
DecisionTreeClassifier;0.8262;0.8395;0.8262;0.8275;0.8116;0.8425;0.8116;0.8155;0.7833;0.8195;0.7833;0.7869;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 831};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=831)
DecisionTreeClassifier;0.8373;0.8469;0.8373;0.8386;0.8551;0.8589;0.8551;0.8514;0.7833;0.8059;0.7833;0.7863;0.9209;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=95)
DecisionTreeClassifier;0.8342;0.8451;0.8342;0.8348;0.8551;0.873;0.8551;0.8573;0.7833;0.8201;0.7833;0.7856;0.9254;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=57)
DecisionTreeClassifier;0.8503;0.8604;0.8503;0.8513;0.8116;0.8185;0.8116;0.8128;0.7833;0.8201;0.7833;0.7856;0.9374;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=57)
DecisionTreeClassifier;0.847;0.8576;0.847;0.8484;0.7826;0.7824;0.7826;0.7816;0.7833;0.8108;0.7833;0.7846;0.9357;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=57)
MLPClassifier;0.81;0.8165;0.81;0.8105;0.8841;0.8907;0.8841;0.8842;0.7833;0.7905;0.7833;0.7838;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
MLPClassifier;0.8292;0.8365;0.8292;0.8296;0.7391;0.7515;0.7391;0.7401;0.7833;0.7854;0.7833;0.783;0.9441;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
MLPClassifier;0.8148;0.8232;0.8148;0.815;0.8261;0.8283;0.8261;0.8253;0.7833;0.7854;0.7833;0.783;0.9394;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
MLPClassifier;0.8148;0.8244;0.8148;0.8154;0.8696;0.8746;0.8696;0.8702;0.7833;0.7854;0.7833;0.783;0.9333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
DecisionTreeClassifier;0.8325;0.8451;0.8325;0.8333;0.8551;0.86;0.8551;0.8494;0.7833;0.7875;0.7833;0.783;0.9222;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=95)
MLPClassifier;0.8181;0.8253;0.8181;0.8179;0.7971;0.7981;0.7971;0.7974;0.7833;0.7854;0.7833;0.783;0.9412;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
RandomForestClassifier;0.8487;0.8572;0.8487;0.8496;0.8406;0.857;0.8406;0.8363;0.7833;0.7968;0.7833;0.7827;0.9577;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 793};RandomForestClassifier(n_estimators=20, random_state=793)
RandomForestClassifier;0.8551;0.8636;0.8551;0.8559;0.8116;0.8156;0.8116;0.8118;0.7833;0.8023;0.7833;0.782;0.9593;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 653};RandomForestClassifier(n_estimators=20, random_state=653)
RandomForestClassifier;0.8422;0.8498;0.8422;0.8412;0.8841;0.8879;0.8841;0.8852;0.7833;0.8023;0.7833;0.782;0.9561;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 793};RandomForestClassifier(n_estimators=5, random_state=793)
RandomForestClassifier;0.8583;0.8658;0.8583;0.8583;0.8551;0.8589;0.8551;0.855;0.7833;0.7935;0.7833;0.7814;0.9577;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 685};RandomForestClassifier(n_estimators=20, random_state=685)
RandomForestClassifier;0.8471;0.8564;0.8471;0.8472;0.8116;0.8183;0.8116;0.8139;0.7833;0.7935;0.7833;0.7814;0.9575;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 685};RandomForestClassifier(n_estimators=5, random_state=685)
RandomForestClassifier;0.8776;0.8832;0.8776;0.8776;0.8116;0.828;0.8116;0.8134;0.7833;0.793;0.7833;0.7779;0.9583;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 653};RandomForestClassifier(n_estimators=20, random_state=653)
DecisionTreeClassifier;0.8453;0.8579;0.8453;0.8459;0.7826;0.804;0.7826;0.7869;0.7667;0.8097;0.7667;0.7708;0.937;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 57};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=57)
DecisionTreeClassifier;0.8631;0.8703;0.8631;0.8637;0.7391;0.7753;0.7391;0.7423;0.7667;0.8097;0.7667;0.7708;0.9491;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
DecisionTreeClassifier;0.8308;0.8429;0.8308;0.8326;0.7826;0.7833;0.7826;0.7784;0.7667;0.8097;0.7667;0.7708;0.9289;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=57)
DecisionTreeClassifier;0.8405;0.8534;0.8405;0.8416;0.8261;0.8477;0.8261;0.8291;0.7667;0.8097;0.7667;0.7708;0.9343;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 95};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=95)
SVC;0.826;0.8348;0.826;0.8271;0.8551;0.8664;0.8551;0.8555;0.7667;0.7957;0.7667;0.7707;0.9119;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 649};SVC(C=1, probability=True, random_state=649)
SVC;0.8357;0.8427;0.8357;0.8353;0.7681;0.7718;0.7681;0.7692;0.7667;0.7957;0.7667;0.7707;0.9222;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 649};SVC(C=1, probability=True, random_state=649)
SVC;0.8342;0.8436;0.8342;0.8349;0.7681;0.7773;0.7681;0.7661;0.7667;0.7957;0.7667;0.7707;0.918;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, probability=True, random_state=649)
SVC;0.8279;0.8361;0.8279;0.8291;0.8261;0.8416;0.8261;0.8256;0.7667;0.7957;0.7667;0.7707;0.9192;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 649};SVC(C=1, probability=True, random_state=649)
SVC;0.8245;0.8324;0.8245;0.8241;0.8841;0.8907;0.8841;0.8842;0.7667;0.7957;0.7667;0.7707;0.9089;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 649};SVC(C=1, probability=True, random_state=649)
SVC;0.8227;0.8356;0.8227;0.8236;0.8841;0.8846;0.8841;0.884;0.7667;0.7957;0.7667;0.7707;0.9166;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 649};SVC(C=1, probability=True, random_state=649)
SVC;0.8324;0.8437;0.8324;0.833;0.7826;0.7893;0.7826;0.7849;0.7667;0.7957;0.7667;0.7707;0.9186;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 649};SVC(C=10, kernel='linear', probability=True, random_state=649)
SVC;0.8325;0.8396;0.8325;0.8331;0.7536;0.7568;0.7536;0.7519;0.7667;0.7957;0.7667;0.7707;0.9185;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 399};SVC(C=1, kernel='linear', probability=True, random_state=399)
SVC;0.8228;0.8334;0.8228;0.8233;0.8551;0.8532;0.8551;0.8533;0.7667;0.7957;0.7667;0.7707;0.9141;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 399};SVC(C=1, probability=True, random_state=399)
DecisionTreeClassifier;0.8422;0.854;0.8422;0.8437;0.8696;0.8692;0.8696;0.8675;0.7667;0.7957;0.7667;0.7707;0.925;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
SVC;0.8278;0.839;0.8278;0.8274;0.8551;0.8686;0.8551;0.8549;0.7667;0.7957;0.7667;0.7707;0.9157;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 399};SVC(C=1, probability=True, random_state=399)
SVC;0.8197;0.8312;0.8197;0.8206;0.8986;0.8986;0.8986;0.8986;0.7667;0.7957;0.7667;0.7707;0.9119;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
SVC;0.8324;0.8424;0.8324;0.8324;0.7971;0.806;0.7971;0.7983;0.7667;0.7957;0.7667;0.7707;0.9206;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
SVC;0.8229;0.834;0.8229;0.8235;0.8841;0.8902;0.8841;0.8846;0.7667;0.7957;0.7667;0.7707;0.9153;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 399};SVC(C=1, probability=True, random_state=399)
SVC;0.8309;0.84;0.8309;0.8313;0.8116;0.828;0.8116;0.8134;0.7667;0.7957;0.7667;0.7707;0.9222;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 399};SVC(C=1, probability=True, random_state=399)
SVC;0.8196;0.8279;0.8196;0.82;0.8986;0.9045;0.8986;0.8977;0.7667;0.7957;0.7667;0.7707;0.9106;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 399};SVC(C=1, probability=True, random_state=399)
SVC;0.8276;0.8417;0.8276;0.8283;0.8551;0.8589;0.8551;0.855;0.7667;0.7957;0.7667;0.7707;0.9107;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
SVC;0.831;0.8417;0.831;0.8309;0.8116;0.8211;0.8116;0.8126;0.7667;0.7957;0.7667;0.7707;0.9196;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
SVC;0.8229;0.8335;0.8229;0.823;0.8841;0.8981;0.8841;0.8847;0.7667;0.7957;0.7667;0.7707;0.9163;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
SVC;0.8262;0.8319;0.8262;0.8265;0.8261;0.8381;0.8261;0.8277;0.7667;0.7957;0.7667;0.7707;0.9156;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 399};SVC(C=1, probability=True, random_state=399)
SVC;0.8341;0.8469;0.8341;0.8341;0.8116;0.8325;0.8116;0.8134;0.7667;0.7957;0.7667;0.7707;0.915;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
DecisionTreeClassifier;0.8438;0.8564;0.8438;0.8443;0.8261;0.8378;0.8261;0.8295;0.7667;0.8105;0.7667;0.7701;0.9319;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=57)
DecisionTreeClassifier;0.8279;0.844;0.8279;0.8298;0.8696;0.8709;0.8696;0.8694;0.7667;0.8105;0.7667;0.7701;0.9243;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.8472;0.8539;0.8472;0.847;0.7826;0.7772;0.7826;0.7752;0.7667;0.7927;0.7667;0.7684;0.9283;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
RandomForestClassifier;0.8503;0.8557;0.8503;0.8501;0.8696;0.8754;0.8696;0.8713;0.7667;0.7927;0.7667;0.7684;0.9551;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 685};RandomForestClassifier(n_estimators=5, random_state=685)
MLPClassifier;0.8149;0.8226;0.8149;0.8151;0.8406;0.8458;0.8406;0.8409;0.7667;0.7746;0.7667;0.7681;0.9397;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
RandomForestClassifier;0.8501;0.8555;0.8501;0.8498;0.8841;0.8881;0.8841;0.8836;0.7667;0.7856;0.7667;0.768;0.9551;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 685};RandomForestClassifier(n_estimators=20, random_state=685)
RandomForestClassifier;0.8389;0.8482;0.8389;0.8391;0.8406;0.8648;0.8406;0.8405;0.7667;0.7875;0.7667;0.7675;0.9572;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 653};RandomForestClassifier(n_estimators=20, random_state=653)
RandomForestClassifier;0.8471;0.8517;0.8471;0.8467;0.8841;0.8902;0.8841;0.8846;0.7667;0.7893;0.7667;0.7672;0.9526;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 793};RandomForestClassifier(n_estimators=10, random_state=793)
DecisionTreeClassifier;0.8568;0.8708;0.8568;0.858;0.7391;0.742;0.7391;0.7403;0.7667;0.8009;0.7667;0.7669;0.9406;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=831)
DecisionTreeClassifier;0.8486;0.8568;0.8486;0.8491;0.7826;0.8046;0.7826;0.7879;0.7667;0.8009;0.7667;0.7669;0.9381;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
KNeighborsClassifier;0.8002;0.8052;0.8002;0.7995;0.8261;0.8256;0.8261;0.824;0.7667;0.781;0.7667;0.7665;0.9271;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.839;0.8519;0.839;0.8389;0.8696;0.8701;0.8696;0.8695;0.7667;0.781;0.7667;0.7665;0.9591;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 685};RandomForestClassifier(n_estimators=10, random_state=685)
RandomForestClassifier;0.8599;0.8674;0.8599;0.8597;0.8551;0.8568;0.8551;0.8557;0.7667;0.781;0.7667;0.7665;0.9582;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 653};RandomForestClassifier(n_estimators=20, random_state=653)
MLPClassifier;0.8115;0.8181;0.8115;0.8115;0.8551;0.8666;0.8551;0.8575;0.7667;0.7698;0.7667;0.766;0.9367;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
MLPClassifier;0.8182;0.8264;0.8182;0.8182;0.7246;0.7374;0.7246;0.7263;0.7667;0.7698;0.7667;0.766;0.9391;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
MLPClassifier;0.8293;0.8359;0.8293;0.8297;0.6957;0.7018;0.6957;0.6981;0.7667;0.7698;0.7667;0.766;0.9451;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
MLPClassifier;0.8099;0.8181;0.8099;0.8097;0.8986;0.8986;0.8986;0.8986;0.7667;0.7698;0.7667;0.766;0.9325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
MLPClassifier;0.8084;0.8166;0.8084;0.8078;0.913;0.9165;0.913;0.9136;0.7667;0.7698;0.7667;0.766;0.9347;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
MLPClassifier;0.8068;0.8143;0.8068;0.8067;0.8696;0.8727;0.8696;0.8704;0.7667;0.7698;0.7667;0.766;0.9374;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
MLPClassifier;0.8131;0.8185;0.8131;0.8131;0.8551;0.8747;0.8551;0.8584;0.7667;0.7698;0.7667;0.766;0.9395;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
MLPClassifier;0.8261;0.8344;0.8261;0.8264;0.7536;0.7579;0.7536;0.755;0.7667;0.7698;0.7667;0.766;0.943;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
MLPClassifier;0.8195;0.8273;0.8195;0.8198;0.7536;0.7578;0.7536;0.7537;0.7667;0.7698;0.7667;0.766;0.9433;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
MLPClassifier;0.8148;0.8213;0.8148;0.8135;0.8551;0.8543;0.8551;0.8544;0.7667;0.7698;0.7667;0.766;0.9381;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
MLPClassifier;0.8085;0.8179;0.8085;0.8087;0.8841;0.8845;0.8841;0.884;0.7667;0.7698;0.7667;0.766;0.9377;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
MLPClassifier;0.8115;0.8191;0.8115;0.811;0.8696;0.8762;0.8696;0.8711;0.7667;0.7698;0.7667;0.766;0.9373;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
MLPClassifier;0.8311;0.8369;0.8311;0.8312;0.6957;0.6993;0.6957;0.6956;0.7667;0.7698;0.7667;0.766;0.9428;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
MLPClassifier;0.8276;0.8354;0.8276;0.8281;0.7681;0.7738;0.7681;0.7701;0.7667;0.7698;0.7667;0.766;0.9366;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
RandomForestClassifier;0.839;0.8442;0.839;0.8393;0.913;0.913;0.913;0.913;0.7667;0.7756;0.7667;0.7624;0.9515;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 653};RandomForestClassifier(n_estimators=20, random_state=653)
SVC;0.8261;0.8334;0.8261;0.827;0.7971;0.806;0.7971;0.7988;0.75;0.7857;0.75;0.7546;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 399};SVC(C=10, probability=True, random_state=399)
SVC;0.8276;0.8357;0.8276;0.8281;0.7826;0.799;0.7826;0.7847;0.75;0.7857;0.75;0.7546;0.9196;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, probability=True, random_state=649)
SVC;0.8196;0.8285;0.8196;0.8203;0.8696;0.8783;0.8696;0.8709;0.75;0.7857;0.75;0.7546;0.9082;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 636};SVC(C=10, probability=True, random_state=636)
SVC;0.8374;0.845;0.8374;0.8384;0.7536;0.7631;0.7536;0.7501;0.75;0.7738;0.75;0.7544;0.922;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
DecisionTreeClassifier;0.8486;0.8602;0.8486;0.8505;0.7971;0.8086;0.7971;0.7999;0.75;0.8012;0.75;0.7542;0.9334;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=57)
DecisionTreeClassifier;0.8422;0.8511;0.8422;0.8427;0.8261;0.8501;0.8261;0.8271;0.75;0.8012;0.75;0.7542;0.9305;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
DecisionTreeClassifier;0.8277;0.8443;0.8277;0.8293;0.8551;0.8583;0.8551;0.8556;0.75;0.7854;0.75;0.754;0.9349;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
SVC;0.8244;0.8341;0.8244;0.825;0.8551;0.8625;0.8551;0.8552;0.75;0.7761;0.75;0.7526;0.9195;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 649};SVC(C=10, kernel='linear', probability=True, random_state=649)
SVC;0.8357;0.8432;0.8357;0.8364;0.7391;0.7624;0.7391;0.7412;0.75;0.7595;0.75;0.7523;0.9229;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 636};SVC(C=1, probability=True, random_state=636)
MLPClassifier;0.8229;0.829;0.8229;0.8237;0.7681;0.7798;0.7681;0.7709;0.75;0.762;0.75;0.752;0.9428;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
MLPClassifier;0.8084;0.8179;0.8084;0.8094;0.8841;0.8858;0.8841;0.8847;0.75;0.7551;0.75;0.7513;0.935;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
LogisticRegression;0.8117;0.8192;0.8117;0.8124;0.8261;0.8274;0.8261;0.8234;0.75;0.7551;0.75;0.7513;0.9221;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8148;0.823;0.8148;0.8146;0.7826;0.7789;0.7826;0.7778;0.75;0.7551;0.75;0.7513;0.9246;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
RandomForestClassifier;0.8551;0.8612;0.8551;0.8555;0.8841;0.8865;0.8841;0.885;0.75;0.7689;0.75;0.7513;0.9572;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 793};RandomForestClassifier(n_estimators=10, random_state=793)
LogisticRegression;0.8164;0.8219;0.8164;0.8171;0.8406;0.8561;0.8406;0.8428;0.75;0.7551;0.75;0.7513;0.925;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
DecisionTreeClassifier;0.8454;0.8547;0.8454;0.8456;0.8406;0.8489;0.8406;0.843;0.75;0.7742;0.75;0.7505;0.9357;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
RandomForestClassifier;0.8535;0.8616;0.8535;0.8544;0.8116;0.8096;0.8116;0.8095;0.75;0.7763;0.75;0.7499;0.9588;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 685};RandomForestClassifier(n_estimators=10, random_state=685)
KNeighborsClassifier;0.826;0.8329;0.826;0.8267;0.7246;0.7525;0.7246;0.7266;0.75;0.7581;0.75;0.7497;0.9394;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8293;0.8337;0.8293;0.8299;0.913;0.9136;0.913;0.913;0.75;0.7786;0.75;0.7493;0.9533;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 653};RandomForestClassifier(n_estimators=10, random_state=653)
RandomForestClassifier;0.8518;0.8582;0.8518;0.8523;0.8261;0.8272;0.8261;0.8264;0.75;0.7689;0.75;0.7488;0.9551;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 685};RandomForestClassifier(n_estimators=20, random_state=685)
MLPClassifier;0.8115;0.8176;0.8115;0.812;0.8116;0.8278;0.8116;0.8153;0.75;0.7546;0.75;0.7488;0.9395;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
RandomForestClassifier;0.8453;0.8548;0.8453;0.8452;0.8841;0.8844;0.8841;0.8822;0.75;0.7689;0.75;0.7488;0.956;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 793};RandomForestClassifier(n_estimators=20, random_state=793)
MLPClassifier;0.818;0.8262;0.818;0.8185;0.7826;0.7778;0.7826;0.7792;0.75;0.7546;0.75;0.7488;0.9363;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=825)
RandomForestClassifier;0.8439;0.8479;0.8439;0.8446;0.913;0.9127;0.913;0.912;0.75;0.7611;0.75;0.748;0.9568;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 685};RandomForestClassifier(n_estimators=20, random_state=685)
KNeighborsClassifier;0.81;0.8178;0.81;0.8105;0.7971;0.8001;0.7971;0.7975;0.75;0.7568;0.75;0.7468;0.9234;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8405;0.8484;0.8405;0.8395;0.8406;0.8423;0.8406;0.8412;0.75;0.763;0.75;0.7461;0.9577;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 685};RandomForestClassifier(n_estimators=5, random_state=685)
KNeighborsClassifier;0.8035;0.8162;0.8035;0.8033;0.8696;0.884;0.8696;0.8713;0.7333;0.7637;0.7333;0.7385;0.9308;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
DecisionTreeClassifier;0.8404;0.8499;0.8404;0.8414;0.8696;0.8727;0.8696;0.8704;0.7333;0.7702;0.7333;0.7383;0.9329;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=57)
DecisionTreeClassifier;0.8295;0.8415;0.8295;0.8303;0.8986;0.9119;0.8986;0.9003;0.7333;0.7702;0.7333;0.7383;0.931;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 831};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=831)
KNeighborsClassifier;0.8068;0.8184;0.8068;0.8053;0.8551;0.864;0.8551;0.8553;0.7333;0.7534;0.7333;0.7381;0.9271;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8277;0.8363;0.8277;0.8263;0.7246;0.7285;0.7246;0.7236;0.7333;0.7523;0.7333;0.7376;0.922;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.847;0.8543;0.847;0.8474;0.8116;0.8144;0.8116;0.8091;0.7333;0.7635;0.7333;0.7373;0.9444;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=57)
KNeighborsClassifier;0.8132;0.825;0.8132;0.8144;0.8261;0.824;0.8261;0.824;0.7333;0.7515;0.7333;0.7365;0.9275;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8421;0.8526;0.8421;0.8417;0.7536;0.7709;0.7536;0.7587;0.7333;0.7719;0.7333;0.736;0.9307;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 57};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=57)
KNeighborsClassifier;0.8115;0.8196;0.8115;0.811;0.7826;0.785;0.7826;0.7802;0.7333;0.7537;0.7333;0.7358;0.9247;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8148;0.8259;0.8148;0.8155;0.8696;0.8746;0.8696;0.8687;0.7333;0.7408;0.7333;0.735;0.9379;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
LogisticRegression;0.802;0.8077;0.802;0.8025;0.8986;0.8983;0.8986;0.8964;0.7333;0.7381;0.7333;0.7347;0.9168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8133;0.8219;0.8133;0.8129;0.7971;0.8088;0.7971;0.7998;0.7333;0.7381;0.7333;0.7347;0.924;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
KNeighborsClassifier;0.818;0.8247;0.818;0.8176;0.7971;0.7975;0.7971;0.7971;0.7333;0.7458;0.7333;0.7347;0.926;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8148;0.8248;0.8148;0.8156;0.8696;0.8715;0.8696;0.8687;0.7333;0.7381;0.7333;0.7347;0.9359;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
MLPClassifier;0.8212;0.8308;0.8212;0.8204;0.7826;0.7965;0.7826;0.7864;0.7333;0.7381;0.7333;0.7347;0.9434;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
MLPClassifier;0.8005;0.8073;0.8005;0.8006;0.913;0.9149;0.913;0.9129;0.7333;0.7381;0.7333;0.7347;0.9331;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
LogisticRegression;0.8165;0.8236;0.8165;0.817;0.7536;0.7621;0.7536;0.7564;0.7333;0.7381;0.7333;0.7347;0.9276;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
LogisticRegression;0.8229;0.8286;0.8229;0.8229;0.7391;0.7608;0.7391;0.7349;0.7333;0.7381;0.7333;0.7347;0.9297;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8102;0.8177;0.8102;0.81;0.8261;0.8287;0.8261;0.8264;0.7333;0.7381;0.7333;0.7347;0.9231;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
LogisticRegression;0.8164;0.8216;0.8164;0.8161;0.7536;0.7536;0.7536;0.7536;0.7333;0.7381;0.7333;0.7347;0.9231;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8084;0.8193;0.8084;0.8089;0.8551;0.8692;0.8551;0.8553;0.7333;0.7381;0.7333;0.7347;0.9211;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
MLPClassifier;0.8133;0.8179;0.8133;0.8127;0.8551;0.8629;0.8551;0.8565;0.7333;0.7381;0.7333;0.7347;0.9374;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 735, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=735)
LogisticRegression;0.8149;0.8205;0.8149;0.8141;0.7391;0.7508;0.7391;0.7421;0.7333;0.7381;0.7333;0.7347;0.9309;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8085;0.8128;0.8085;0.8085;0.8261;0.8519;0.8261;0.8262;0.7333;0.7381;0.7333;0.7347;0.921;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8068;0.8103;0.8068;0.8069;0.8406;0.8473;0.8406;0.8421;0.7333;0.7381;0.7333;0.7347;0.92;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8083;0.8143;0.8083;0.8073;0.7971;0.8208;0.7971;0.8009;0.7333;0.7381;0.7333;0.7347;0.9245;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.802;0.8108;0.802;0.8011;0.8696;0.8731;0.8696;0.8696;0.7333;0.7381;0.7333;0.7347;0.9196;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8116;0.8192;0.8116;0.8118;0.8551;0.8595;0.8551;0.8562;0.7333;0.7381;0.7333;0.7347;0.9198;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
MLPClassifier;0.815;0.8206;0.815;0.8152;0.8551;0.8556;0.8551;0.8534;0.7333;0.7381;0.7333;0.7347;0.9378;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 772, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=772)
RandomForestClassifier;0.8583;0.8654;0.8583;0.8578;0.8116;0.8202;0.8116;0.8143;0.7333;0.7659;0.7333;0.7346;0.9583;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 793};RandomForestClassifier(n_estimators=20, random_state=793)
LogisticRegression;0.8179;0.8253;0.8179;0.8181;0.7536;0.7526;0.7536;0.7529;0.7333;0.7399;0.7333;0.7342;0.9275;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8165;0.8256;0.8165;0.8168;0.7681;0.783;0.7681;0.7678;0.7333;0.7399;0.7333;0.7342;0.9238;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
RandomForestClassifier;0.8438;0.8516;0.8438;0.8441;0.913;0.9216;0.913;0.9138;0.7333;0.7575;0.7333;0.7338;0.9561;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 793};RandomForestClassifier(n_estimators=20, random_state=793)
KNeighborsClassifier;0.8133;0.8232;0.8133;0.8133;0.8406;0.841;0.8406;0.8405;0.7333;0.7575;0.7333;0.7338;0.9234;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8084;0.8179;0.8084;0.8083;0.8261;0.8402;0.8261;0.8289;0.7333;0.7575;0.7333;0.7338;0.9237;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8213;0.8279;0.8213;0.8215;0.7536;0.7619;0.7536;0.7552;0.7333;0.7575;0.7333;0.7338;0.934;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8648;0.8719;0.8648;0.8637;0.8116;0.8268;0.8116;0.8129;0.7333;0.7474;0.7333;0.7334;0.9605;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 793};RandomForestClassifier(n_estimators=20, random_state=793)
KNeighborsClassifier;0.781;0.7893;0.781;0.7808;0.8406;0.868;0.8406;0.8426;0.7333;0.7448;0.7333;0.7323;0.9221;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8534;0.8607;0.8534;0.8529;0.7971;0.8148;0.7971;0.8001;0.7333;0.7456;0.7333;0.731;0.9648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 685};RandomForestClassifier(n_estimators=20, random_state=685)
RandomForestClassifier;0.8535;0.8563;0.8535;0.8533;0.8261;0.8377;0.8261;0.8291;0.7333;0.7478;0.7333;0.7302;0.9617;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 793};RandomForestClassifier(n_estimators=20, random_state=793)
KNeighborsClassifier;0.8036;0.81;0.8036;0.8028;0.8551;0.8568;0.8551;0.8557;0.7167;0.7432;0.7167;0.7223;0.9243;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8132;0.8234;0.8132;0.8141;0.8116;0.8206;0.8116;0.7976;0.7167;0.7432;0.7167;0.7223;0.9208;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
KNeighborsClassifier;0.8101;0.8239;0.8101;0.809;0.8406;0.8569;0.8406;0.8429;0.7167;0.7413;0.7167;0.7219;0.9283;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
LogisticRegression;0.8067;0.8123;0.8067;0.8068;0.8116;0.8155;0.8116;0.8127;0.7167;0.724;0.7167;0.718;0.9257;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
LogisticRegression;0.8101;0.8172;0.8101;0.8103;0.7826;0.7856;0.7826;0.7809;0.7167;0.724;0.7167;0.718;0.9254;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8101;0.8167;0.8101;0.8097;0.7971;0.8094;0.7971;0.7995;0.7167;0.724;0.7167;0.718;0.9252;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
LogisticRegression;0.8004;0.8066;0.8004;0.8012;0.8841;0.8968;0.8841;0.8855;0.7167;0.724;0.7167;0.718;0.9208;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8133;0.819;0.8133;0.814;0.7681;0.7789;0.7681;0.7681;0.7167;0.724;0.7167;0.718;0.9226;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8037;0.8119;0.8037;0.8041;0.8696;0.8713;0.8696;0.8702;0.7167;0.724;0.7167;0.718;0.9205;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 702, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=702)"
LogisticRegression;0.8116;0.8176;0.8116;0.8107;0.8261;0.8271;0.8261;0.8263;0.7167;0.724;0.7167;0.718;0.9224;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8067;0.8109;0.8067;0.8063;0.8261;0.8305;0.8261;0.8272;0.7167;0.724;0.7167;0.718;0.9235;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8019;0.8104;0.8019;0.8008;0.8406;0.845;0.8406;0.8417;0.7167;0.724;0.7167;0.718;0.9258;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8068;0.8135;0.8068;0.8072;0.7971;0.8056;0.7971;0.796;0.7167;0.724;0.7167;0.718;0.9211;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 767, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=767)"
LogisticRegression;0.8083;0.8195;0.8083;0.8088;0.8551;0.8551;0.8551;0.8551;0.7167;0.724;0.7167;0.718;0.9222;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
LogisticRegression;0.802;0.8096;0.802;0.8025;0.8841;0.8842;0.8841;0.8833;0.7167;0.724;0.7167;0.718;0.9237;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 263, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=263)"
KNeighborsClassifier;0.8067;0.8175;0.8067;0.8068;0.8406;0.8652;0.8406;0.8419;0.7167;0.7397;0.7167;0.7177;0.9208;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7858;0.7949;0.7858;0.7856;0.8986;0.9222;0.8986;0.9002;0.7167;0.7333;0.7167;0.7175;0.9198;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8228;0.835;0.8228;0.8236;0.8406;0.8472;0.8406;0.843;0.7167;0.7365;0.7167;0.7165;0.9212;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8019;0.8148;0.8019;0.8014;0.8841;0.8845;0.8841;0.884;0.7167;0.729;0.7167;0.716;0.9227;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8196;0.8309;0.8196;0.82;0.7391;0.745;0.7391;0.7401;0.7167;0.729;0.7167;0.716;0.9332;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8502;0.8589;0.8502;0.8509;0.7826;0.8037;0.7826;0.7848;0.7167;0.735;0.7167;0.7159;0.9565;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 653};RandomForestClassifier(n_estimators=20, random_state=653)
KNeighborsClassifier;0.8214;0.8286;0.8214;0.8218;0.7536;0.7915;0.7536;0.7599;0.7167;0.7339;0.7167;0.7151;0.9235;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8149;0.8254;0.8149;0.8141;0.7971;0.7944;0.7971;0.794;0.7;0.7204;0.7;0.7053;0.9305;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8181;0.8271;0.8181;0.8178;0.8261;0.8378;0.8261;0.8235;0.7;0.7204;0.7;0.7053;0.9262;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.81;0.8189;0.81;0.8095;0.8406;0.8683;0.8406;0.8447;0.7;0.7204;0.7;0.7053;0.9281;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
RandomForestClassifier;0.8534;0.8601;0.8534;0.8538;0.7826;0.7921;0.7826;0.7787;0.7;0.7217;0.7;0.7039;0.9578;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 653};RandomForestClassifier(n_estimators=10, random_state=653)
KNeighborsClassifier;0.8052;0.8122;0.8052;0.8045;0.8116;0.8132;0.8116;0.8121;0.7;0.7317;0.7;0.703;0.9237;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8567;0.8596;0.8567;0.8565;0.8261;0.8261;0.8261;0.8261;0.7;0.7226;0.7;0.7014;0.9546;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 793};RandomForestClassifier(n_estimators=20, random_state=793)
KNeighborsClassifier;0.8149;0.8291;0.8149;0.8143;0.8406;0.8523;0.8406;0.8439;0.7;0.7238;0.7;0.7014;0.9282;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.81;0.8179;0.81;0.8104;0.7971;0.8073;0.7971;0.7983;0.7;0.7091;0.7;0.6975;0.9203;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8133;0.8193;0.8133;0.8137;0.7391;0.7492;0.7391;0.7376;0.6833;0.6799;0.6833;0.6808;0.9244;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8309;0.8405;0.8309;0.8318;0.8261;0.8309;0.8261;0.8278;0.6833;0.6769;0.6833;0.6764;0.9315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
