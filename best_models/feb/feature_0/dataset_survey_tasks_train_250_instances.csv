Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.8551,0.8628,0.8551,0.8559,0.8333,0.8451,0.8333,0.8346,0.8167,0.8335,0.8167,0.8141,0.9438,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 751}","RandomForestClassifier(n_estimators=10, random_state=751)"
KNeighborsClassifier,0.8281,0.8376,0.8281,0.8297,0.7971,0.7933,0.7971,0.7935,0.8,0.7997,0.8,0.7995,0.9413,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier,0.8261,0.8369,0.8261,0.8249,0.8623,0.8637,0.8623,0.8621,0.7833,0.7824,0.7833,0.78,0.9407,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
KNeighborsClassifier,0.8223,0.8292,0.8223,0.8229,0.8261,0.8303,0.8261,0.8273,0.7667,0.7833,0.7667,0.767,0.9357,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
RandomForestClassifier,0.8712,0.8769,0.8712,0.8717,0.8551,0.8627,0.8551,0.8571,0.7667,0.7663,0.7667,0.7656,0.9593,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 730}","RandomForestClassifier(n_estimators=20, random_state=730)"
DecisionTreeClassifier,0.7844,0.7971,0.7844,0.7846,0.8841,0.8875,0.8841,0.8847,0.7333,0.7729,0.7333,0.7376,0.9083,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 228}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=228)"
RandomForestClassifier,0.8552,0.8612,0.8552,0.8544,0.8768,0.8864,0.8768,0.8788,0.7333,0.7525,0.7333,0.7333,0.9518,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 314}","RandomForestClassifier(n_estimators=20, random_state=314)"
DecisionTreeClassifier,0.8206,0.8301,0.8206,0.8222,0.8406,0.851,0.8406,0.8415,0.7333,0.7408,0.7333,0.7317,0.9318,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 766}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=766)"
SVC,0.7935,0.8014,0.7935,0.7911,0.7609,0.7597,0.7609,0.7599,0.7,0.7028,0.7,0.6965,0.8706,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 597}","SVC(C=10, kernel='linear', probability=True, random_state=597)"
MLPClassifier,0.761,0.7668,0.761,0.7549,0.6594,0.6622,0.6594,0.6591,0.7,0.7111,0.7,0.6944,0.9145,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 873, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=873)"
LogisticRegression,0.7665,0.7741,0.7665,0.7638,0.7681,0.7724,0.7681,0.7674,0.6833,0.6954,0.6833,0.6767,0.9132,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 911, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=911)"
DecisionTreeClassifier,0.8278,0.8418,0.8278,0.8288,0.7536,0.7811,0.7536,0.7528,0.6833,0.7025,0.6833,0.6717,0.9306,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 10}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=10)"
SVC,0.7736,0.7767,0.7736,0.7701,0.7681,0.768,0.7681,0.7668,0.6667,0.7239,0.6667,0.6637,0.8551,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 144}","SVC(C=1, kernel='linear', probability=True, random_state=144)"
MLPClassifier,0.7899,0.7969,0.7899,0.7895,0.7971,0.8013,0.7971,0.7963,0.6667,0.6733,0.6667,0.6444,0.9206,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 56, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=56)"
MLPClassifier,0.7519,0.7573,0.7519,0.7521,0.7391,0.7403,0.7391,0.7397,0.65,0.6461,0.65,0.643,0.9119,smote,250,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 560, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=560)"
LogisticRegression,0.7446,0.7528,0.7446,0.742,0.8188,0.8207,0.8188,0.8189,0.6333,0.6575,0.6333,0.6309,0.9043,smote,250,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
SVC,0.7771,0.7844,0.7771,0.7736,0.7754,0.7768,0.7754,0.7731,0.65,0.6667,0.65,0.6289,0.8673,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 799}","SVC(C=10, kernel='linear', probability=True, random_state=799)"
LogisticRegression,0.777,0.783,0.777,0.7757,0.7391,0.7462,0.7391,0.7384,0.6333,0.642,0.6333,0.6213,0.9147,smote,250,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
