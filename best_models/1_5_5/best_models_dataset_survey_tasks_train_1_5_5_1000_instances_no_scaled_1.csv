Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9618;0.9625;0.9618;0.9618;0.9524;0.9533;0.9524;0.9522;0.9167;0.9165;0.9167;0.9162;0.9948;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 601};RandomForestClassifier(n_estimators=10, random_state=601)
RandomForestClassifier;0.9611;0.9617;0.9611;0.9611;0.966;0.966;0.966;0.9659;0.9167;0.9205;0.9167;0.916;0.9945;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.9603;0.9609;0.9603;0.9603;0.9524;0.9527;0.9524;0.9525;0.9167;0.9205;0.9167;0.916;0.9942;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.9562;0.9566;0.9562;0.9561;0.9864;0.9867;0.9864;0.9864;0.9;0.9019;0.9;0.8999;0.9937;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 510};RandomForestClassifier(n_estimators=20, random_state=510)
RandomForestClassifier;0.963;0.9635;0.963;0.9629;0.949;0.9489;0.949;0.9489;0.9;0.9019;0.9;0.8999;0.9947;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9618;0.9626;0.9618;0.9618;0.9626;0.9628;0.9626;0.9625;0.9;0.9019;0.9;0.8999;0.9957;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.9637;0.9642;0.9637;0.9636;0.9626;0.9627;0.9626;0.9624;0.9;0.9019;0.9;0.8999;0.9954;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9565;0.9572;0.9565;0.9565;0.983;0.9834;0.983;0.9829;0.9;0.9019;0.9;0.8999;0.9939;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.958;0.9589;0.958;0.958;0.9796;0.9797;0.9796;0.9796;0.9;0.9019;0.9;0.8999;0.9946;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 510};RandomForestClassifier(n_estimators=20, random_state=510)
RandomForestClassifier;0.958;0.9588;0.958;0.958;0.9592;0.9591;0.9592;0.9591;0.9;0.9074;0.9;0.8995;0.9937;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9656;0.9661;0.9656;0.9656;0.9592;0.9593;0.9592;0.9591;0.9;0.9074;0.9;0.8995;0.9951;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 510};RandomForestClassifier(n_estimators=10, random_state=510)
RandomForestClassifier;0.9611;0.9619;0.9611;0.961;0.9694;0.97;0.9694;0.9692;0.8833;0.8935;0.8833;0.8844;0.9939;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9599;0.9606;0.9599;0.9598;0.966;0.9665;0.966;0.966;0.8833;0.8884;0.8833;0.8834;0.9956;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 510};RandomForestClassifier(n_estimators=20, random_state=510)
RandomForestClassifier;0.9565;0.9572;0.9565;0.9565;0.9558;0.9562;0.9558;0.9559;0.8833;0.8884;0.8833;0.8834;0.9944;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9577;0.9582;0.9577;0.9577;0.9626;0.9627;0.9626;0.9624;0.8833;0.8884;0.8833;0.8834;0.9945;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.9584;0.9593;0.9584;0.9584;0.9592;0.9597;0.9592;0.9592;0.8833;0.8884;0.8833;0.8834;0.9942;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.9611;0.9615;0.9611;0.961;0.9558;0.956;0.9558;0.9558;0.8833;0.8884;0.8833;0.8834;0.9948;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 237};RandomForestClassifier(n_estimators=10, random_state=237)
RandomForestClassifier;0.9607;0.961;0.9607;0.9606;0.9558;0.9566;0.9558;0.9557;0.8833;0.8884;0.8833;0.8834;0.9943;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9607;0.9612;0.9607;0.9607;0.9694;0.9698;0.9694;0.9695;0.8833;0.8884;0.8833;0.8834;0.9942;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9577;0.9582;0.9577;0.9576;0.9762;0.9763;0.9762;0.9761;0.8833;0.8884;0.8833;0.8834;0.995;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9595;0.9601;0.9595;0.9595;0.9796;0.98;0.9796;0.9796;0.8833;0.8884;0.8833;0.8834;0.9938;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 510};RandomForestClassifier(n_estimators=20, random_state=510)
RandomForestClassifier;0.9599;0.9604;0.9599;0.9599;0.966;0.9668;0.966;0.9659;0.8833;0.8884;0.8833;0.8834;0.9943;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 510};RandomForestClassifier(n_estimators=20, random_state=510)
RandomForestClassifier;0.9592;0.9597;0.9592;0.9592;0.949;0.9495;0.949;0.9489;0.8833;0.884;0.8833;0.8833;0.9948;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 601};RandomForestClassifier(n_estimators=10, random_state=601)
RandomForestClassifier;0.9615;0.962;0.9615;0.9614;0.9524;0.9522;0.9524;0.9522;0.8833;0.8952;0.8833;0.8828;0.9955;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 510};RandomForestClassifier(n_estimators=20, random_state=510)
RandomForestClassifier;0.9618;0.9626;0.9618;0.9618;0.9626;0.9626;0.9626;0.9625;0.8833;0.8952;0.8833;0.8828;0.994;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.9633;0.9638;0.9633;0.9633;0.966;0.9664;0.966;0.9658;0.8833;0.8952;0.8833;0.8828;0.9952;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 510};RandomForestClassifier(n_estimators=20, random_state=510)
RandomForestClassifier;0.9599;0.9606;0.9599;0.9599;0.9592;0.9604;0.9592;0.9593;0.8667;0.875;0.8667;0.8668;0.995;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.9607;0.9611;0.9607;0.9607;0.9592;0.9598;0.9592;0.9593;0.8667;0.875;0.8667;0.8668;0.9941;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 237};RandomForestClassifier(n_estimators=20, random_state=237)
RandomForestClassifier;0.9611;0.9615;0.9611;0.961;0.9286;0.9308;0.9286;0.9285;0.8667;0.8839;0.8667;0.8664;0.9946;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 510};RandomForestClassifier(n_estimators=10, random_state=510)
DecisionTreeClassifier;0.9395;0.9405;0.9395;0.9394;0.8946;0.8953;0.8946;0.8943;0.85;0.8554;0.85;0.8504;0.9547;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.9399;0.9403;0.9399;0.9399;0.8844;0.8856;0.8844;0.8848;0.85;0.8623;0.85;0.85;0.9549;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
KNeighborsClassifier;0.9033;0.9066;0.9033;0.9029;0.9422;0.9428;0.9422;0.9421;0.85;0.8565;0.85;0.8493;0.9713;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8915;0.8945;0.8915;0.8914;0.9456;0.9469;0.9456;0.9458;0.85;0.8565;0.85;0.8493;0.9718;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8874;0.8919;0.8874;0.8872;0.9592;0.9597;0.9592;0.9591;0.85;0.8565;0.85;0.8493;0.9698;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9407;0.9418;0.9407;0.9407;0.8776;0.8819;0.8776;0.8782;0.8333;0.836;0.8333;0.8335;0.9555;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
KNeighborsClassifier;0.8953;0.897;0.8953;0.8949;0.915;0.9168;0.915;0.9149;0.8333;0.8379;0.8333;0.8333;0.9707;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8912;0.8945;0.8912;0.8909;0.9728;0.9732;0.9728;0.9729;0.8333;0.8379;0.8333;0.8333;0.9727;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9051;0.9072;0.9051;0.905;0.9354;0.936;0.9354;0.9352;0.8333;0.8379;0.8333;0.8333;0.9734;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.893;0.8954;0.893;0.8927;0.9388;0.9408;0.9388;0.9382;0.8333;0.8379;0.8333;0.8333;0.9721;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8866;0.8904;0.8866;0.8865;0.9524;0.9522;0.9524;0.9522;0.8333;0.8379;0.8333;0.8333;0.9691;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8957;0.8977;0.8957;0.8954;0.966;0.9665;0.966;0.9659;0.8333;0.8379;0.8333;0.8333;0.9722;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.898;0.9004;0.898;0.8978;0.9626;0.9633;0.9626;0.9626;0.8333;0.8379;0.8333;0.8333;0.972;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8919;0.8945;0.8919;0.8919;0.9558;0.9564;0.9558;0.9557;0.8333;0.8379;0.8333;0.8333;0.9701;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9025;0.9047;0.9025;0.9024;0.9524;0.9531;0.9524;0.9522;0.8333;0.8379;0.8333;0.8333;0.972;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8938;0.8966;0.8938;0.8935;0.9558;0.9558;0.9558;0.9557;0.8333;0.8379;0.8333;0.8333;0.9722;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8832;0.8856;0.8832;0.8833;0.949;0.9501;0.949;0.9487;0.8333;0.8379;0.8333;0.8333;0.968;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.898;0.9001;0.898;0.8979;0.9422;0.9434;0.9422;0.942;0.8333;0.8379;0.8333;0.8333;0.9703;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8942;0.8969;0.8942;0.894;0.9592;0.9609;0.9592;0.959;0.8333;0.8379;0.8333;0.8333;0.9704;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8953;0.8979;0.8953;0.8952;0.9524;0.953;0.9524;0.9522;0.8333;0.8379;0.8333;0.8333;0.9698;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8938;0.8975;0.8938;0.8937;0.9592;0.9605;0.9592;0.959;0.8333;0.8379;0.8333;0.8333;0.9713;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8919;0.8954;0.8919;0.8918;0.949;0.9501;0.949;0.9491;0.8333;0.8379;0.8333;0.8333;0.9702;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8912;0.8935;0.8912;0.8909;0.949;0.9506;0.949;0.949;0.8333;0.8379;0.8333;0.8333;0.9715;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9021;0.9051;0.9021;0.9021;0.9524;0.9539;0.9524;0.9523;0.8333;0.8379;0.8333;0.8333;0.9725;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.89;0.8931;0.89;0.8899;0.9218;0.9275;0.9218;0.9215;0.8333;0.8379;0.8333;0.8333;0.9711;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8919;0.8946;0.8919;0.8918;0.9626;0.9637;0.9626;0.9628;0.8333;0.8379;0.8333;0.8333;0.9729;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8927;0.8951;0.8927;0.8925;0.9422;0.9424;0.9422;0.9423;0.8333;0.8379;0.8333;0.8333;0.9694;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8866;0.8883;0.8866;0.8866;0.9558;0.9574;0.9558;0.956;0.8333;0.8379;0.8333;0.8333;0.97;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9652;0.9658;0.9652;0.9652;0.949;0.9492;0.949;0.9488;0.8333;0.8427;0.8333;0.832;0.9943;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 510};RandomForestClassifier(n_estimators=10, random_state=510)
DecisionTreeClassifier;0.938;0.9387;0.938;0.938;0.8878;0.8887;0.8878;0.8879;0.8167;0.8285;0.8167;0.8184;0.9535;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9377;0.9386;0.9377;0.9376;0.8605;0.8602;0.8605;0.8603;0.8167;0.8332;0.8167;0.8179;0.9533;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.9384;0.9391;0.9384;0.9384;0.8878;0.8895;0.8878;0.8883;0.8167;0.8224;0.8167;0.8173;0.9538;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.9301;0.9308;0.9301;0.9301;0.8878;0.8892;0.8878;0.8882;0.8167;0.8224;0.8167;0.8173;0.9476;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.938;0.9387;0.938;0.938;0.8741;0.8733;0.8741;0.8728;0.8167;0.8293;0.8167;0.8172;0.9535;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.9365;0.9371;0.9365;0.9365;0.8707;0.8704;0.8707;0.8703;0.8167;0.8238;0.8167;0.8172;0.9524;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9422;0.9427;0.9422;0.9421;0.8776;0.8815;0.8776;0.8782;0.8167;0.8238;0.8167;0.8172;0.9566;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9354;0.9361;0.9354;0.9355;0.8571;0.8613;0.8571;0.8582;0.8167;0.8205;0.8167;0.8172;0.9515;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9369;0.9378;0.9369;0.9368;0.8741;0.8747;0.8741;0.8744;0.8167;0.8238;0.8167;0.8172;0.9527;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9369;0.9381;0.9369;0.9369;0.898;0.898;0.898;0.8977;0.8167;0.8238;0.8167;0.8172;0.9527;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
KNeighborsClassifier;0.8942;0.8959;0.8942;0.8939;0.9388;0.941;0.9388;0.9388;0.8167;0.8217;0.8167;0.816;0.9709;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8874;0.8923;0.8874;0.8874;0.9728;0.9732;0.9728;0.9728;0.8167;0.8217;0.8167;0.816;0.969;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8957;0.8999;0.8957;0.8953;0.9558;0.9569;0.9558;0.9558;0.8167;0.8193;0.8167;0.8157;0.971;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8949;0.898;0.8949;0.8948;0.9388;0.9403;0.9388;0.9387;0.8167;0.8193;0.8167;0.8157;0.9704;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9331;0.9336;0.9331;0.933;0.8605;0.8601;0.8605;0.86;0.8;0.8072;0.8;0.8022;0.9498;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9358;0.9364;0.9358;0.9357;0.8878;0.8896;0.8878;0.8877;0.8;0.8109;0.8;0.8014;0.9518;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9361;0.937;0.9361;0.9362;0.8776;0.8826;0.8776;0.8784;0.8;0.8038;0.8;0.801;0.9521;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9346;0.9354;0.9346;0.9346;0.8741;0.8754;0.8741;0.8746;0.8;0.8035;0.8;0.8005;0.951;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.935;0.9351;0.935;0.9349;0.8946;0.895;0.8946;0.8942;0.8;0.8035;0.8;0.8005;0.9512;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=441)
DecisionTreeClassifier;0.9324;0.9328;0.9324;0.9323;0.8946;0.8959;0.8946;0.8949;0.8;0.8035;0.8;0.8005;0.9493;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9365;0.9373;0.9365;0.9365;0.9116;0.9117;0.9116;0.9116;0.8;0.8013;0.8;0.8003;0.9524;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=441)
KNeighborsClassifier;0.8972;0.8991;0.8972;0.897;0.9354;0.9389;0.9354;0.9354;0.8;0.8018;0.8;0.7986;0.9738;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9365;0.9371;0.9365;0.9364;0.8878;0.8875;0.8878;0.8876;0.7833;0.7884;0.7833;0.7848;0.9524;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9324;0.933;0.9324;0.9323;0.8912;0.8928;0.8912;0.8916;0.7833;0.7975;0.7833;0.7848;0.9493;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.9305;0.9313;0.9305;0.9305;0.8707;0.8727;0.8707;0.8708;0.7833;0.7887;0.7833;0.7847;0.9479;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=441)
DecisionTreeClassifier;0.9335;0.9341;0.9335;0.9335;0.9048;0.9058;0.9048;0.9051;0.7833;0.7904;0.7833;0.7847;0.9501;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.9392;0.94;0.9392;0.9391;0.8946;0.8947;0.8946;0.8943;0.7833;0.7846;0.7833;0.7836;0.9544;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
DecisionTreeClassifier;0.9429;0.9437;0.9429;0.9428;0.8707;0.8703;0.8707;0.8704;0.7833;0.8004;0.7833;0.782;0.9572;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9354;0.9358;0.9354;0.9353;0.8605;0.8624;0.8605;0.8607;0.7833;0.8053;0.7833;0.7789;0.9515;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.935;0.9356;0.935;0.935;0.915;0.9146;0.915;0.9145;0.7667;0.7774;0.7667;0.7682;0.9512;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 796};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=796)
DecisionTreeClassifier;0.9361;0.9366;0.9361;0.9361;0.8639;0.8661;0.8639;0.864;0.7667;0.7711;0.7667;0.768;0.9521;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 554};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=554)
MLPClassifier;0.8341;0.8365;0.8341;0.833;0.8571;0.8568;0.8571;0.8566;0.75;0.7503;0.75;0.746;0.9448;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
DecisionTreeClassifier;0.9373;0.938;0.9373;0.9373;0.8776;0.8781;0.8776;0.8776;0.7333;0.7436;0.7333;0.736;0.953;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 441};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=441)
MLPClassifier;0.8254;0.8328;0.8254;0.8253;0.8265;0.8429;0.8265;0.8249;0.7333;0.7347;0.7333;0.7317;0.9489;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.8254;0.8301;0.8254;0.8255;0.8231;0.835;0.8231;0.822;0.7333;0.7317;0.7333;0.7298;0.9479;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.8352;0.8399;0.8352;0.8345;0.8095;0.8302;0.8095;0.8106;0.7333;0.7344;0.7333;0.7262;0.9493;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8315;0.8353;0.8315;0.8299;0.7959;0.8121;0.7959;0.7976;0.7333;0.7514;0.7333;0.7255;0.9521;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
SVC;0.6194;0.7028;0.6194;0.6068;0.7585;0.7779;0.7585;0.7618;0.7167;0.749;0.7167;0.7227;0.7907;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 389};SVC(C=10, kernel='linear', probability=True, random_state=389)
SVC;0.6194;0.7012;0.6194;0.6056;0.7687;0.7952;0.7687;0.7696;0.7167;0.749;0.7167;0.7227;0.794;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 858};SVC(C=10, kernel='linear', probability=True, random_state=858)
LogisticRegression;0.7196;0.7234;0.7196;0.7201;0.7381;0.7509;0.7381;0.7403;0.7167;0.7663;0.7167;0.7212;0.8967;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
SVC;0.616;0.6996;0.616;0.6011;0.7959;0.8021;0.7959;0.7973;0.7167;0.7576;0.7167;0.7204;0.7935;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 430};SVC(C=10, kernel='linear', probability=True, random_state=430)
LogisticRegression;0.7188;0.722;0.7188;0.7191;0.7891;0.7942;0.7891;0.7896;0.7167;0.7556;0.7167;0.7188;0.8963;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7188;0.7221;0.7188;0.7191;0.7143;0.7175;0.7143;0.7149;0.7167;0.7556;0.7167;0.7188;0.8977;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7256;0.7283;0.7256;0.7259;0.7075;0.7371;0.7075;0.709;0.7167;0.7556;0.7167;0.7188;0.9001;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.72;0.7229;0.72;0.7199;0.7347;0.7445;0.7347;0.7362;0.7167;0.7556;0.7167;0.7188;0.8977;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7256;0.7304;0.7256;0.7262;0.7143;0.7293;0.7143;0.7119;0.7167;0.7556;0.7167;0.7188;0.8998;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7188;0.7226;0.7188;0.719;0.7075;0.7161;0.7075;0.704;0.7167;0.7556;0.7167;0.7188;0.8983;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
LogisticRegression;0.7222;0.7262;0.7222;0.7224;0.7483;0.7549;0.7483;0.7488;0.7167;0.7556;0.7167;0.7188;0.897;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7215;0.7262;0.7215;0.7217;0.7449;0.7537;0.7449;0.7467;0.7167;0.7556;0.7167;0.7188;0.8981;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
LogisticRegression;0.7203;0.7234;0.7203;0.7209;0.7449;0.7532;0.7449;0.7445;0.7167;0.7556;0.7167;0.7188;0.8982;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7185;0.7223;0.7185;0.7187;0.7449;0.7606;0.7449;0.7437;0.7167;0.7556;0.7167;0.7188;0.8986;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7268;0.7304;0.7268;0.7269;0.6939;0.7042;0.6939;0.6938;0.7167;0.7556;0.7167;0.7188;0.8998;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7241;0.7288;0.7241;0.7245;0.7109;0.7133;0.7109;0.7116;0.7167;0.7556;0.7167;0.7188;0.8991;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7211;0.7255;0.7211;0.7216;0.7857;0.8035;0.7857;0.7864;0.7167;0.7556;0.7167;0.7188;0.8961;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7241;0.729;0.7241;0.7248;0.6973;0.7172;0.6973;0.697;0.7167;0.7721;0.7167;0.7185;0.8996;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
MLPClassifier;0.8262;0.8326;0.8262;0.8242;0.7687;0.7935;0.7687;0.7677;0.7167;0.7509;0.7167;0.7182;0.9466;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8288;0.8349;0.8288;0.8275;0.8027;0.8057;0.8027;0.8034;0.7333;0.7488;0.7333;0.7178;0.9485;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
LogisticRegression;0.7268;0.7303;0.7268;0.7271;0.7415;0.7445;0.7415;0.7413;0.7167;0.7474;0.7167;0.717;0.8989;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
MLPClassifier;0.8299;0.835;0.8299;0.8284;0.7891;0.8283;0.7891;0.7759;0.7167;0.721;0.7167;0.7166;0.9493;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
LogisticRegression;0.7211;0.7241;0.7211;0.7212;0.7449;0.7503;0.7449;0.7458;0.7167;0.7412;0.7167;0.7157;0.8983;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
MLPClassifier;0.8314;0.8353;0.8314;0.8307;0.8435;0.8423;0.8435;0.8413;0.7167;0.7148;0.7167;0.7097;0.9483;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8326;0.8359;0.8326;0.8317;0.8741;0.8749;0.8741;0.8736;0.7167;0.7166;0.7167;0.7076;0.9483;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8341;0.8389;0.8341;0.8321;0.8231;0.8221;0.8231;0.8221;0.7167;0.7166;0.7167;0.7076;0.9524;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8296;0.835;0.8296;0.8281;0.8469;0.8453;0.8469;0.8458;0.7167;0.7166;0.7167;0.7076;0.949;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8277;0.8294;0.8277;0.8263;0.8061;0.8053;0.8061;0.8044;0.7167;0.7162;0.7167;0.7066;0.9453;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
SVC;0.627;0.7112;0.627;0.6143;0.7313;0.7461;0.7313;0.7346;0.7;0.7385;0.7;0.7064;0.7966;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 858};SVC(C=10, kernel='linear', probability=True, random_state=858)
SVC;0.6172;0.7032;0.6172;0.6045;0.7313;0.7412;0.7313;0.7336;0.7;0.7385;0.7;0.7064;0.792;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 389};SVC(C=10, kernel='linear', probability=True, random_state=389)
SVC;0.6247;0.707;0.6247;0.6119;0.7687;0.7835;0.7687;0.7718;0.7;0.7385;0.7;0.7064;0.7936;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 389};SVC(C=10, kernel='linear', probability=True, random_state=389)
SVC;0.621;0.7037;0.621;0.6087;0.7653;0.7873;0.7653;0.7686;0.7;0.7436;0.7;0.706;0.7917;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 858};SVC(C=10, kernel='linear', probability=True, random_state=858)
SVC;0.6225;0.7079;0.6225;0.6096;0.7721;0.7847;0.7721;0.773;0.7;0.7436;0.7;0.706;0.7941;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 858};SVC(C=10, kernel='linear', probability=True, random_state=858)
LogisticRegression;0.7226;0.7268;0.7226;0.7226;0.7415;0.7544;0.7415;0.7422;0.7;0.7574;0.7;0.7051;0.8986;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
MLPClassifier;0.8273;0.8318;0.8273;0.8269;0.7959;0.8258;0.7959;0.8001;0.7167;0.731;0.7167;0.7042;0.9481;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8193;0.8222;0.8193;0.8177;0.8163;0.8283;0.8163;0.8175;0.7167;0.7262;0.7167;0.703;0.9468;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
LogisticRegression;0.7207;0.7246;0.7207;0.7211;0.7279;0.7475;0.7279;0.7278;0.7;0.7454;0.7;0.7027;0.8993;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.72;0.7248;0.72;0.7199;0.7313;0.7328;0.7313;0.7317;0.7;0.7454;0.7;0.7027;0.8968;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7264;0.7307;0.7264;0.727;0.7449;0.7588;0.7449;0.7456;0.7;0.7454;0.7;0.7027;0.8986;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7215;0.7254;0.7215;0.7219;0.7041;0.7092;0.7041;0.7036;0.7;0.7454;0.7;0.7027;0.8978;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7249;0.7297;0.7249;0.7253;0.7313;0.7418;0.7313;0.7332;0.7;0.7454;0.7;0.7027;0.8989;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7226;0.726;0.7226;0.7231;0.7449;0.7518;0.7449;0.7457;0.7;0.7454;0.7;0.7027;0.8989;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7215;0.7252;0.7215;0.7216;0.7517;0.766;0.7517;0.7516;0.7;0.7454;0.7;0.7027;0.8989;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
LogisticRegression;0.72;0.7237;0.72;0.7204;0.7619;0.7679;0.7619;0.7635;0.7;0.7454;0.7;0.7027;0.8956;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
LogisticRegression;0.7211;0.7235;0.7211;0.7214;0.7109;0.7309;0.7109;0.7108;0.7;0.7454;0.7;0.7027;0.8979;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
SVC;0.6206;0.7009;0.6206;0.6078;0.7823;0.8087;0.7823;0.785;0.7;0.7496;0.7;0.7025;0.7904;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 430};SVC(C=0.1, kernel='linear', probability=True, random_state=430)
LogisticRegression;0.7249;0.7281;0.7249;0.7251;0.7415;0.7515;0.7415;0.7424;0.7;0.736;0.7;0.7008;0.8972;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 719, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=719)"
LogisticRegression;0.7234;0.7271;0.7234;0.7238;0.7517;0.7586;0.7517;0.7519;0.7;0.736;0.7;0.7008;0.8994;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 875, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=875)"
MLPClassifier;0.8273;0.8309;0.8273;0.8267;0.7857;0.8136;0.7857;0.7819;0.7167;0.7333;0.7167;0.6963;0.9509;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.8288;0.8341;0.8288;0.8267;0.7789;0.7926;0.7789;0.7749;0.7167;0.7335;0.7167;0.6962;0.9456;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.8356;0.8374;0.8356;0.8348;0.8367;0.839;0.8367;0.8372;0.7;0.6989;0.7;0.6958;0.9495;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
MLPClassifier;0.8194;0.8244;0.8194;0.818;0.8503;0.8519;0.8503;0.8508;0.7;0.6991;0.7;0.6957;0.9438;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
MLPClassifier;0.8148;0.8241;0.8148;0.8132;0.7857;0.8304;0.7857;0.7724;0.7;0.7089;0.7;0.6948;0.9441;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
MLPClassifier;0.8265;0.8322;0.8265;0.8249;0.8299;0.8308;0.8299;0.8289;0.7;0.6964;0.7;0.692;0.951;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
MLPClassifier;0.8394;0.8418;0.8394;0.839;0.8129;0.8129;0.8129;0.8091;0.7;0.6964;0.7;0.692;0.9491;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
SVC;0.6236;0.7087;0.6236;0.6108;0.7687;0.7789;0.7687;0.7705;0.6833;0.7289;0.6833;0.6896;0.7959;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 430};SVC(C=10, kernel='linear', probability=True, random_state=430)
SVC;0.6149;0.6977;0.6149;0.6015;0.7857;0.8075;0.7857;0.7882;0.6833;0.7351;0.6833;0.6886;0.7905;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 389};SVC(C=10, kernel='linear', probability=True, random_state=389)
MLPClassifier;0.8273;0.8332;0.8273;0.8268;0.7857;0.7972;0.7857;0.787;0.7;0.7086;0.7;0.6874;0.946;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
LogisticRegression;0.726;0.7296;0.726;0.7264;0.7517;0.7591;0.7517;0.7526;0.6833;0.7245;0.6833;0.6872;0.898;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
SVC;0.6221;0.7041;0.6221;0.6099;0.7891;0.8199;0.7891;0.7861;0.6833;0.7357;0.6833;0.6861;0.7927;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.6236;0.7072;0.6236;0.6107;0.7313;0.7613;0.7313;0.7333;0.6833;0.7357;0.6833;0.6861;0.7953;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.6236;0.7067;0.6236;0.6114;0.7551;0.7853;0.7551;0.7568;0.6833;0.7357;0.6833;0.6861;0.7946;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.6213;0.706;0.6213;0.609;0.7551;0.7821;0.7551;0.7587;0.6833;0.7357;0.6833;0.6861;0.7952;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.6217;0.7043;0.6217;0.6085;0.7721;0.791;0.7721;0.7744;0.6833;0.7357;0.6833;0.6861;0.7947;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 858};SVC(C=10, kernel='linear', probability=True, random_state=858)
SVC;0.6258;0.707;0.6258;0.613;0.7381;0.7723;0.7381;0.7403;0.6833;0.7357;0.6833;0.6861;0.7966;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 858};SVC(C=0.1, kernel='linear', probability=True, random_state=858)
SVC;0.6228;0.7033;0.6228;0.609;0.7449;0.7762;0.7449;0.747;0.6833;0.7357;0.6833;0.6861;0.7971;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.624;0.7072;0.624;0.6117;0.7619;0.7922;0.7619;0.7628;0.6833;0.7357;0.6833;0.6861;0.7974;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 430};SVC(C=0.1, kernel='linear', probability=True, random_state=430)
SVC;0.6232;0.705;0.6232;0.6112;0.7755;0.7996;0.7755;0.7773;0.6833;0.7357;0.6833;0.6861;0.791;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 858};SVC(C=0.1, kernel='linear', probability=True, random_state=858)
SVC;0.6187;0.7018;0.6187;0.6046;0.7959;0.8164;0.7959;0.7962;0.6833;0.7357;0.6833;0.6861;0.7926;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 858};SVC(C=0.1, kernel='linear', probability=True, random_state=858)
SVC;0.6281;0.7091;0.6281;0.6152;0.7143;0.7481;0.7143;0.7211;0.6833;0.7357;0.6833;0.6861;0.7942;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 430};SVC(C=0.1, kernel='linear', probability=True, random_state=430)
SVC;0.6224;0.708;0.6224;0.6094;0.7619;0.7917;0.7619;0.7627;0.6833;0.7357;0.6833;0.6861;0.7964;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 430};SVC(C=0.1, kernel='linear', probability=True, random_state=430)
MLPClassifier;0.839;0.8413;0.839;0.8384;0.8061;0.8226;0.8061;0.8043;0.7;0.7052;0.7;0.6815;0.9488;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.8247;0.832;0.8247;0.8227;0.8265;0.8265;0.8265;0.8214;0.6833;0.6806;0.6833;0.6786;0.9458;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.8276;0.8322;0.8276;0.8268;0.8333;0.8373;0.8333;0.829;0.6833;0.6817;0.6833;0.6753;0.9503;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8216;0.8288;0.8216;0.8188;0.8163;0.8216;0.8163;0.8101;0.7;0.7176;0.7;0.6738;0.946;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
SVC;0.6198;0.7038;0.6198;0.607;0.7925;0.8063;0.7925;0.7933;0.6667;0.7203;0.6667;0.6724;0.7919;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 430};SVC(C=10, kernel='linear', probability=True, random_state=430)
SVC;0.6201;0.7046;0.6201;0.6071;0.7483;0.7744;0.7483;0.7516;0.6667;0.7203;0.6667;0.6724;0.7975;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 858};SVC(C=10, kernel='linear', probability=True, random_state=858)
SVC;0.6243;0.7089;0.6243;0.6123;0.7517;0.7725;0.7517;0.7542;0.6667;0.7203;0.6667;0.6724;0.7938;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 389};SVC(C=10, kernel='linear', probability=True, random_state=389)
SVC;0.6255;0.7068;0.6255;0.6128;0.7585;0.7835;0.7585;0.7604;0.6667;0.7203;0.6667;0.6724;0.7928;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 430};SVC(C=10, kernel='linear', probability=True, random_state=430)
SVC;0.624;0.7061;0.624;0.6116;0.7279;0.7615;0.7279;0.7324;0.6667;0.7213;0.6667;0.6721;0.7936;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 430};SVC(C=10, kernel='linear', probability=True, random_state=430)
SVC;0.6187;0.7034;0.6187;0.6073;0.7687;0.7901;0.7687;0.7682;0.6667;0.7213;0.6667;0.6721;0.7924;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 430};SVC(C=10, kernel='linear', probability=True, random_state=430)
SVC;0.627;0.7085;0.627;0.6121;0.7551;0.7753;0.7551;0.7588;0.6667;0.7213;0.6667;0.6721;0.7934;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 858};SVC(C=10, kernel='linear', probability=True, random_state=858)
MLPClassifier;0.8228;0.834;0.8228;0.821;0.8571;0.8598;0.8571;0.857;0.6833;0.6806;0.6833;0.6667;0.9454;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 443, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=443)
MLPClassifier;0.8265;0.8339;0.8265;0.8242;0.8265;0.8373;0.8265;0.8218;0.6833;0.6923;0.6833;0.6665;0.9491;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
MLPClassifier;0.8296;0.834;0.8296;0.8286;0.8197;0.8407;0.8197;0.8189;0.6833;0.6923;0.6833;0.6665;0.9471;smote;1000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 30, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=30)
