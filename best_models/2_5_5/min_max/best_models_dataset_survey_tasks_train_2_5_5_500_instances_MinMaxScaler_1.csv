Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.946;0.9475;0.946;0.9461;0.9931;0.9932;0.9931;0.9931;0.9167;0.9228;0.9167;0.9168;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.9483;0.9494;0.9483;0.9484;0.9375;0.9418;0.9375;0.9383;0.9167;0.9228;0.9167;0.9168;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9514;0.9535;0.9514;0.9515;0.9583;0.9599;0.9583;0.9582;0.9167;0.9228;0.9167;0.9168;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.946;0.9489;0.946;0.9461;0.9514;0.9541;0.9514;0.9516;0.9167;0.9228;0.9167;0.9168;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 300};RandomForestClassifier(n_estimators=10, random_state=300)
RandomForestClassifier;0.9476;0.9491;0.9476;0.9476;0.9306;0.9387;0.9306;0.9316;0.9167;0.9228;0.9167;0.9168;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.9468;0.9482;0.9468;0.9469;0.9306;0.9308;0.9306;0.9302;0.9;0.9027;0.9;0.8998;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9484;0.95;0.9484;0.9485;0.9514;0.9517;0.9514;0.9515;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9452;0.9473;0.9452;0.9454;0.9583;0.9585;0.9583;0.9583;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9506;0.9517;0.9506;0.9506;0.9444;0.9476;0.9444;0.9446;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9514;0.9523;0.9514;0.9515;0.9792;0.9804;0.9792;0.9793;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9499;0.9514;0.9499;0.95;0.9375;0.938;0.9375;0.9369;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9499;0.9517;0.9499;0.95;0.9653;0.9664;0.9653;0.9652;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9413;0.943;0.9413;0.9414;0.9514;0.9523;0.9514;0.9514;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9475;0.949;0.9475;0.9476;0.9444;0.9441;0.9444;0.944;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9475;0.9492;0.9475;0.9476;0.9167;0.9198;0.9167;0.9161;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9467;0.9486;0.9467;0.947;0.9375;0.94;0.9375;0.9368;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9413;0.9425;0.9413;0.9415;0.9653;0.9657;0.9653;0.965;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.9475;0.9483;0.9475;0.9475;0.9514;0.9559;0.9514;0.9516;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.9491;0.9505;0.9491;0.9493;0.8958;0.8994;0.8958;0.8963;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.9491;0.9504;0.9491;0.9493;0.9792;0.9793;0.9792;0.9792;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.9499;0.9515;0.9499;0.9501;0.9653;0.9664;0.9653;0.9652;0.9;0.9091;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9421;0.9467;0.9421;0.9425;0.9514;0.9514;0.9514;0.9513;0.8833;0.8944;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
RandomForestClassifier;0.9468;0.9483;0.9468;0.9469;0.9236;0.9313;0.9236;0.9245;0.8833;0.8944;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9529;0.9543;0.9529;0.953;0.8958;0.9051;0.8958;0.8969;0.8833;0.8944;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
DecisionTreeClassifier;0.9198;0.9211;0.9198;0.9195;0.9167;0.9186;0.9167;0.9172;0.8833;0.8944;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
MLPClassifier;0.7824;0.7871;0.7824;0.782;0.9028;0.9044;0.9028;0.9033;0.8833;0.8944;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
RandomForestClassifier;0.939;0.9413;0.939;0.9393;0.9444;0.9467;0.9444;0.9447;0.8833;0.8873;0.8833;0.8826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9506;0.952;0.9506;0.9507;0.9583;0.9583;0.9583;0.9583;0.8833;0.8873;0.8833;0.8826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 656};RandomForestClassifier(n_estimators=10, random_state=656)
RandomForestClassifier;0.9467;0.9487;0.9467;0.9468;0.9375;0.9382;0.9375;0.9374;0.8833;0.8873;0.8833;0.8826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 300};RandomForestClassifier(n_estimators=20, random_state=300)
RandomForestClassifier;0.9452;0.9466;0.9452;0.9452;0.9306;0.9365;0.9306;0.931;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 300};RandomForestClassifier(n_estimators=10, random_state=300)
RandomForestClassifier;0.9452;0.9478;0.9452;0.9453;0.9375;0.9376;0.9375;0.9375;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 461};RandomForestClassifier(n_estimators=20, random_state=461)
KNeighborsClassifier;0.8735;0.8782;0.8735;0.8736;0.9375;0.9387;0.9375;0.9375;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8681;0.8731;0.8681;0.8688;0.9375;0.9405;0.9375;0.9376;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8633;0.8668;0.8633;0.8632;0.9444;0.9459;0.9444;0.9447;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8842;0.8862;0.8842;0.8844;0.9097;0.9149;0.9097;0.9099;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.865;0.8678;0.865;0.8652;0.9514;0.9526;0.9514;0.9515;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8735;0.8761;0.8735;0.8736;0.9444;0.9442;0.9444;0.9441;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8681;0.872;0.8681;0.8682;0.9375;0.938;0.9375;0.9372;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8689;0.8719;0.8689;0.8689;0.9236;0.9298;0.9236;0.9243;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8728;0.8771;0.8728;0.8727;0.9375;0.9388;0.9375;0.9367;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8804;0.885;0.8804;0.8809;0.9167;0.9181;0.9167;0.9163;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.882;0.8834;0.882;0.8815;0.8681;0.8696;0.8681;0.8671;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8634;0.8678;0.8634;0.8636;0.9583;0.9583;0.9583;0.9583;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8727;0.8772;0.8727;0.8727;0.9583;0.9583;0.9583;0.9583;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8688;0.8707;0.8688;0.8687;0.9514;0.9517;0.9514;0.9515;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8626;0.8668;0.8626;0.8628;0.9375;0.9378;0.9375;0.9376;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8765;0.8806;0.8765;0.8766;0.9097;0.9131;0.9097;0.9097;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8704;0.8727;0.8704;0.8704;0.9236;0.9283;0.9236;0.923;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.855;0.8616;0.855;0.8554;0.9375;0.9375;0.9375;0.9375;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8604;0.8627;0.8604;0.8603;0.9514;0.9517;0.9514;0.9515;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8751;0.8791;0.8751;0.8751;0.9097;0.9113;0.9097;0.9096;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8673;0.8706;0.8673;0.8676;0.9444;0.9449;0.9444;0.9446;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8665;0.8699;0.8665;0.8666;0.9028;0.9062;0.9028;0.9031;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.878;0.8813;0.878;0.8782;0.9028;0.9025;0.9028;0.9018;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8626;0.8663;0.8626;0.8629;0.9375;0.9378;0.9375;0.9376;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8719;0.8742;0.8719;0.8717;0.9375;0.9383;0.9375;0.9377;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8765;0.8799;0.8765;0.8769;0.9028;0.9026;0.9028;0.9026;0.8833;0.8966;0.8833;0.8819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7815;0.7877;0.7815;0.781;0.9167;0.9174;0.9167;0.9168;0.8667;0.8788;0.8667;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.7832;0.7856;0.7832;0.7826;0.9236;0.9274;0.9236;0.9244;0.8667;0.8806;0.8667;0.8675;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
MLPClassifier;0.78;0.7832;0.78;0.7801;0.9097;0.9104;0.9097;0.9096;0.8667;0.8829;0.8667;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.7786;0.7837;0.7786;0.7786;0.9375;0.9439;0.9375;0.9384;0.8667;0.8829;0.8667;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
DecisionTreeClassifier;0.9182;0.9197;0.9182;0.9181;0.8889;0.8905;0.8889;0.8894;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.9159;0.9177;0.9159;0.9161;0.8681;0.8826;0.8681;0.8695;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
DecisionTreeClassifier;0.9236;0.9252;0.9236;0.9236;0.875;0.8745;0.875;0.8747;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.9043;0.9057;0.9043;0.9042;0.9236;0.9283;0.9236;0.9214;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
DecisionTreeClassifier;0.9136;0.9154;0.9136;0.9134;0.9375;0.9395;0.9375;0.938;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
DecisionTreeClassifier;0.9143;0.9164;0.9143;0.9145;0.9028;0.9042;0.9028;0.903;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.9174;0.9195;0.9174;0.917;0.8889;0.8893;0.8889;0.8887;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
DecisionTreeClassifier;0.9058;0.9071;0.9058;0.9058;0.8958;0.9074;0.8958;0.8969;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
DecisionTreeClassifier;0.9167;0.9183;0.9167;0.9165;0.9028;0.9116;0.9028;0.9042;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
KNeighborsClassifier;0.8788;0.8843;0.8788;0.8793;0.9167;0.9205;0.9167;0.9174;0.8667;0.8814;0.8667;0.866;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9175;0.9184;0.9175;0.9173;0.875;0.8759;0.875;0.8749;0.8667;0.8675;0.8667;0.8656;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
KNeighborsClassifier;0.8626;0.8656;0.8626;0.8629;0.8958;0.9048;0.8958;0.8956;0.8667;0.8851;0.8667;0.864;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8757;0.8783;0.8757;0.8758;0.9167;0.9209;0.9167;0.9161;0.8667;0.8851;0.8667;0.864;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8681;0.871;0.8681;0.868;0.9306;0.932;0.9306;0.93;0.8667;0.8841;0.8667;0.8637;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.7847;0.7994;0.7847;0.7843;0.9028;0.9038;0.9028;0.9032;0.85;0.8667;0.85;0.8524;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.7924;0.8073;0.7924;0.7926;0.8819;0.8838;0.8819;0.8826;0.85;0.8667;0.85;0.8524;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.7762;0.7928;0.7762;0.7771;0.9167;0.9231;0.9167;0.9176;0.85;0.8667;0.85;0.8524;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.7824;0.802;0.7824;0.7841;0.9167;0.9197;0.9167;0.9174;0.85;0.8667;0.85;0.8524;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7886;0.8044;0.7886;0.7906;0.9236;0.9234;0.9236;0.9235;0.85;0.8667;0.85;0.8524;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.797;0.8147;0.797;0.7983;0.8403;0.8511;0.8403;0.8423;0.85;0.8667;0.85;0.8524;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
MLPClassifier;0.7762;0.7811;0.7762;0.7764;0.9444;0.9444;0.9444;0.9441;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
MLPClassifier;0.7748;0.7788;0.7748;0.7747;0.8819;0.8812;0.8819;0.8814;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.777;0.784;0.777;0.7767;0.9167;0.9186;0.9167;0.9171;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.7778;0.783;0.7778;0.778;0.8542;0.8712;0.8542;0.8574;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
MLPClassifier;0.7817;0.7863;0.7817;0.7822;0.9167;0.9172;0.9167;0.9162;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.7762;0.779;0.7762;0.7757;0.9653;0.9662;0.9653;0.9653;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
MLPClassifier;0.7839;0.7869;0.7839;0.784;0.8958;0.8984;0.8958;0.8967;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.78;0.7835;0.78;0.7792;0.9306;0.9308;0.9306;0.9304;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.784;0.7881;0.784;0.7838;0.8889;0.8912;0.8889;0.8896;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.7855;0.7899;0.7855;0.7859;0.9236;0.9247;0.9236;0.924;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.7878;0.7933;0.7878;0.788;0.9236;0.9257;0.9236;0.9242;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.7824;0.7865;0.7824;0.7822;0.8889;0.8966;0.8889;0.8899;0.85;0.864;0.85;0.8518;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.7839;0.7894;0.7839;0.7837;0.9306;0.9317;0.9306;0.9307;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.767;0.7718;0.767;0.7669;0.9097;0.9095;0.9097;0.9096;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
DecisionTreeClassifier;0.9136;0.9153;0.9136;0.9135;0.8819;0.8836;0.8819;0.8814;0.85;0.8671;0.85;0.85;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
MLPClassifier;0.7879;0.7906;0.7879;0.7874;0.9375;0.9405;0.9375;0.9378;0.85;0.8671;0.85;0.85;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
DecisionTreeClassifier;0.9128;0.9143;0.9128;0.9128;0.8889;0.8891;0.8889;0.889;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.902;0.9041;0.902;0.9019;0.9028;0.9095;0.9028;0.9038;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
MLPClassifier;0.7809;0.7863;0.7809;0.7811;0.9167;0.9177;0.9167;0.9169;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
DecisionTreeClassifier;0.9059;0.9071;0.9059;0.9056;0.9306;0.9335;0.9306;0.9312;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.9074;0.9093;0.9074;0.9071;0.9167;0.9185;0.9167;0.9171;0.85;0.8524;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.899;0.9015;0.899;0.8986;0.9444;0.9444;0.9444;0.9444;0.85;0.8577;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.9082;0.9096;0.9082;0.9082;0.8611;0.8602;0.8611;0.8602;0.85;0.8514;0.85;0.8483;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.9066;0.909;0.9066;0.9067;0.9097;0.9111;0.9097;0.9099;0.85;0.8518;0.85;0.8483;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
RandomForestClassifier;0.9445;0.9455;0.9445;0.9445;0.9514;0.955;0.9514;0.952;0.85;0.8518;0.85;0.8483;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 656};RandomForestClassifier(n_estimators=10, random_state=656)
DecisionTreeClassifier;0.9028;0.9038;0.9028;0.9028;0.8472;0.8536;0.8472;0.8488;0.85;0.8528;0.85;0.8482;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
SVC;0.7847;0.7996;0.7847;0.7856;0.9028;0.9061;0.9028;0.9037;0.8333;0.854;0.8333;0.8365;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.7786;0.7943;0.7786;0.7791;0.9097;0.9099;0.9097;0.9095;0.8333;0.854;0.8333;0.8365;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.7808;0.796;0.7808;0.7812;0.8889;0.8935;0.8889;0.89;0.8333;0.854;0.8333;0.8365;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7901;0.8078;0.7901;0.792;0.875;0.879;0.875;0.876;0.8333;0.854;0.8333;0.8365;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.7886;0.8066;0.7886;0.79;0.9097;0.9166;0.9097;0.9108;0.8333;0.8532;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.7971;0.814;0.7971;0.799;0.875;0.8768;0.875;0.875;0.8333;0.8532;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.8002;0.8149;0.8002;0.8011;0.8681;0.8795;0.8681;0.8703;0.8333;0.8532;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7963;0.813;0.7963;0.7974;0.9028;0.9065;0.9028;0.9036;0.8333;0.8532;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.7894;0.8081;0.7894;0.7914;0.875;0.88;0.875;0.8761;0.8333;0.8532;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.7932;0.8083;0.7932;0.7952;0.8542;0.8532;0.8542;0.8524;0.8333;0.8532;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7956;0.8084;0.7956;0.7969;0.8819;0.889;0.8819;0.8833;0.8333;0.8532;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.7824;0.7979;0.7824;0.7831;0.8681;0.876;0.8681;0.8692;0.8333;0.8518;0.8333;0.8346;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
MLPClassifier;0.7832;0.7874;0.7832;0.783;0.9028;0.9067;0.9028;0.9036;0.8333;0.8518;0.8333;0.8346;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
MLPClassifier;0.7855;0.7913;0.7855;0.7854;0.875;0.8827;0.875;0.876;0.8333;0.8518;0.8333;0.8346;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
MLPClassifier;0.7746;0.7764;0.7746;0.7737;0.9306;0.9342;0.9306;0.931;0.8333;0.8518;0.8333;0.8346;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
MLPClassifier;0.79;0.7913;0.79;0.7897;0.9028;0.9026;0.9028;0.9026;0.8333;0.8413;0.8333;0.834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
MLPClassifier;0.7786;0.7827;0.7786;0.7783;0.8958;0.8954;0.8958;0.8943;0.8333;0.8413;0.8333;0.834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
DecisionTreeClassifier;0.9151;0.9167;0.9151;0.915;0.9375;0.9377;0.9375;0.937;0.8333;0.8413;0.8333;0.834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.9059;0.9079;0.9059;0.9061;0.8611;0.86;0.8611;0.86;0.8333;0.8465;0.8333;0.8328;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.919;0.9205;0.919;0.9189;0.875;0.8771;0.875;0.8752;0.8333;0.8431;0.8333;0.8323;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.9097;0.912;0.9097;0.9097;0.9306;0.9341;0.9306;0.9311;0.8333;0.838;0.8333;0.8317;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
DecisionTreeClassifier;0.9128;0.9145;0.9128;0.9128;0.8819;0.8816;0.8819;0.8812;0.8333;0.8361;0.8333;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.909;0.9106;0.909;0.9087;0.8889;0.8887;0.8889;0.8886;0.8333;0.8361;0.8333;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.9213;0.923;0.9213;0.9216;0.8958;0.896;0.8958;0.8945;0.8333;0.8448;0.8333;0.831;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
DecisionTreeClassifier;0.9136;0.9153;0.9136;0.9137;0.8889;0.8912;0.8889;0.8896;0.8333;0.8369;0.8333;0.8303;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 478};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=478)
SVC;0.7863;0.8038;0.7863;0.788;0.8958;0.8958;0.8958;0.8958;0.8167;0.8361;0.8167;0.8205;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
MLPClassifier;0.7724;0.7795;0.7724;0.773;0.8889;0.8983;0.8889;0.8907;0.8167;0.8373;0.8167;0.8191;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.7824;0.7863;0.7824;0.7822;0.9306;0.9316;0.9306;0.9308;0.8167;0.8373;0.8167;0.8191;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 568, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=568)
MLPClassifier;0.7754;0.7793;0.7754;0.7753;0.9167;0.9172;0.9167;0.9166;0.8167;0.84;0.8167;0.819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 910, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=910)
SVC;0.7917;0.8085;0.7917;0.7928;0.8958;0.8953;0.8958;0.8951;0.8167;0.84;0.8167;0.819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.7847;0.7995;0.7847;0.7856;0.9236;0.9252;0.9236;0.9239;0.8167;0.84;0.8167;0.819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7901;0.8074;0.7901;0.7912;0.9167;0.9194;0.9167;0.9172;0.8167;0.84;0.8167;0.819;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
MLPClassifier;0.7793;0.7836;0.7793;0.7793;0.9306;0.9319;0.9306;0.9307;0.8167;0.8292;0.8167;0.8172;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 620, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=620)
SVC;0.7878;0.8073;0.7878;0.7893;0.8958;0.9002;0.8958;0.8969;0.8167;0.8409;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.7932;0.8104;0.7932;0.7943;0.8819;0.8838;0.8819;0.8825;0.8167;0.8409;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 53};SVC(C=10, random_state=53)
SVC;0.7947;0.8104;0.7947;0.7964;0.8889;0.8912;0.8889;0.8892;0.8167;0.8409;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.8009;0.8179;0.8009;0.802;0.8819;0.8824;0.8819;0.8821;0.8167;0.8409;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7894;0.8045;0.7894;0.7909;0.8889;0.8898;0.8889;0.8892;0.8167;0.8409;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
DecisionTreeClassifier;0.9259;0.9271;0.9259;0.9257;0.8958;0.8963;0.8958;0.8958;0.8167;0.8273;0.8167;0.817;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 984};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=984)
DecisionTreeClassifier;0.9082;0.9092;0.9082;0.9079;0.8472;0.8577;0.8472;0.8482;0.8167;0.8172;0.8167;0.8155;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 696};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=696)
SVC;0.7831;0.8007;0.7831;0.7828;0.8681;0.8703;0.8681;0.8688;0.8;0.8153;0.8;0.802;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7924;0.8154;0.7924;0.7936;0.8889;0.8894;0.8889;0.8887;0.8;0.8273;0.8;0.8013;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 728};SVC(C=10, random_state=728)
SVC;0.787;0.8039;0.787;0.7887;0.875;0.8845;0.875;0.8769;0.7833;0.8119;0.7833;0.7861;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
LogisticRegression;0.703;0.7118;0.703;0.7036;0.7153;0.7278;0.7153;0.717;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.7052;0.7148;0.7052;0.7061;0.6597;0.6686;0.6597;0.6598;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.7053;0.7151;0.7053;0.7064;0.6458;0.6569;0.6458;0.647;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.6945;0.7018;0.6945;0.6952;0.7292;0.7357;0.7292;0.7304;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.7052;0.7135;0.7052;0.7058;0.6597;0.6703;0.6597;0.6597;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.7069;0.7163;0.7069;0.7074;0.625;0.6392;0.625;0.63;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.7006;0.709;0.7006;0.7018;0.7153;0.7206;0.7153;0.7157;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6951;0.7019;0.6951;0.6955;0.7153;0.7212;0.7153;0.7158;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.7021;0.7098;0.7021;0.7026;0.6944;0.7094;0.6944;0.6968;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.7022;0.7135;0.7022;0.7034;0.6806;0.6829;0.6806;0.6793;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.6991;0.7074;0.6991;0.6989;0.6597;0.6702;0.6597;0.6621;0.6333;0.6439;0.6333;0.6302;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.6905;0.6999;0.6905;0.6907;0.7292;0.7311;0.7292;0.73;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6983;0.7053;0.6983;0.6988;0.6944;0.7013;0.6944;0.6956;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.7021;0.7106;0.7021;0.7021;0.6944;0.6952;0.6944;0.6947;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.6998;0.7106;0.6998;0.7013;0.7222;0.7214;0.7222;0.719;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.7013;0.7095;0.7013;0.7013;0.6458;0.6537;0.6458;0.6477;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.6914;0.7025;0.6914;0.6913;0.7639;0.7676;0.7639;0.7625;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.6959;0.7022;0.6959;0.6965;0.7153;0.733;0.7153;0.7168;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.6929;0.7036;0.6929;0.6929;0.7083;0.708;0.7083;0.7075;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.6999;0.7091;0.6999;0.7008;0.6806;0.6954;0.6806;0.6834;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.7021;0.7075;0.7021;0.7016;0.6736;0.6823;0.6736;0.6728;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6952;0.7019;0.6952;0.6952;0.7153;0.7187;0.7153;0.7143;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6975;0.7062;0.6975;0.698;0.7153;0.7168;0.7153;0.7155;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.6943;0.7017;0.6943;0.694;0.7292;0.7334;0.7292;0.7302;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6975;0.7054;0.6975;0.6979;0.6944;0.7041;0.6944;0.6961;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.6929;0.699;0.6929;0.6931;0.7083;0.7284;0.7083;0.7098;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 722, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=722)"
LogisticRegression;0.6991;0.7061;0.6991;0.6993;0.6597;0.6588;0.6597;0.6587;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.6929;0.6989;0.6929;0.6925;0.7361;0.7454;0.7361;0.7367;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6968;0.7036;0.6968;0.6966;0.7153;0.7179;0.7153;0.7136;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
LogisticRegression;0.6882;0.696;0.6882;0.6891;0.7292;0.7358;0.7292;0.7288;0.6;0.607;0.6;0.5957;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 616, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=616)"
