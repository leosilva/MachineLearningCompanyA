Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8309;0.8385;0.8309;0.8307;0.8406;0.8446;0.8406;0.8401;0.9333;0.939;0.9333;0.9336;0.9459;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 741};RandomForestClassifier(n_estimators=20, random_state=741)
RandomForestClassifier;0.8291;0.8396;0.8291;0.8293;0.8841;0.8889;0.8841;0.8856;0.9333;0.934;0.9333;0.9333;0.9449;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 23};RandomForestClassifier(n_estimators=20, random_state=23)
RandomForestClassifier;0.8437;0.8466;0.8437;0.8437;0.8261;0.8533;0.8261;0.8245;0.9167;0.9212;0.9167;0.9174;0.9492;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 23};RandomForestClassifier(n_estimators=10, random_state=23)
KNeighborsClassifier;0.7506;0.7632;0.7506;0.7497;0.7826;0.7873;0.7826;0.7843;0.9167;0.9195;0.9167;0.917;0.9045;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8261;0.8337;0.8261;0.8264;0.8406;0.8393;0.8406;0.8391;0.9167;0.9195;0.9167;0.917;0.9438;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
KNeighborsClassifier;0.7552;0.7749;0.7552;0.7554;0.7971;0.8047;0.7971;0.7973;0.9167;0.9195;0.9167;0.917;0.9027;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7664;0.7877;0.7664;0.766;0.8406;0.857;0.8406;0.8363;0.9167;0.9195;0.9167;0.917;0.9037;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7554;0.7683;0.7554;0.7552;0.8841;0.8864;0.8841;0.8827;0.9167;0.9195;0.9167;0.917;0.8947;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7667;0.7823;0.7667;0.7662;0.7971;0.8004;0.7971;0.7911;0.9167;0.9195;0.9167;0.917;0.8963;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7552;0.7672;0.7552;0.7535;0.8261;0.8357;0.8261;0.8263;0.9167;0.9195;0.9167;0.917;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.768;0.7808;0.768;0.7683;0.8696;0.8738;0.8696;0.8699;0.9167;0.9195;0.9167;0.917;0.899;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7616;0.7769;0.7616;0.7617;0.7681;0.7746;0.7681;0.7671;0.9167;0.9195;0.9167;0.917;0.9052;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8502;0.8567;0.8502;0.8489;0.8551;0.8591;0.8551;0.8562;0.9167;0.9174;0.9167;0.9166;0.9488;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 741};RandomForestClassifier(n_estimators=20, random_state=741)
RandomForestClassifier;0.8343;0.8395;0.8343;0.834;0.913;0.9197;0.913;0.9137;0.9167;0.9174;0.9167;0.9166;0.9494;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.8309;0.8375;0.8309;0.8306;0.8406;0.8406;0.8406;0.8406;0.9167;0.9174;0.9167;0.9166;0.9481;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 760};RandomForestClassifier(n_estimators=10, random_state=760)
KNeighborsClassifier;0.7585;0.7717;0.7585;0.7576;0.8116;0.8139;0.8116;0.812;0.9;0.9069;0.9;0.901;0.8988;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7697;0.7868;0.7697;0.7694;0.8261;0.8356;0.8261;0.8284;0.9;0.9069;0.9;0.901;0.9044;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7713;0.7853;0.7713;0.7707;0.8406;0.8459;0.8406;0.8415;0.9;0.906;0.9;0.9005;0.8972;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7535;0.7678;0.7535;0.7537;0.8261;0.8414;0.8261;0.8274;0.9;0.906;0.9;0.9005;0.8992;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7665;0.7815;0.7665;0.7656;0.8261;0.8277;0.8261;0.8251;0.9;0.906;0.9;0.9005;0.8988;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7441;0.7597;0.7441;0.7446;0.8551;0.8741;0.8551;0.8562;0.9;0.906;0.9;0.9005;0.8983;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7536;0.7677;0.7536;0.7503;0.8551;0.8583;0.8551;0.8547;0.9;0.906;0.9;0.9005;0.8967;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7488;0.7644;0.7488;0.7481;0.7971;0.802;0.7971;0.7979;0.9;0.906;0.9;0.9005;0.8951;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8534;0.8659;0.8534;0.853;0.8116;0.8242;0.8116;0.8128;0.9;0.906;0.9;0.9005;0.955;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 741};RandomForestClassifier(n_estimators=10, random_state=741)
KNeighborsClassifier;0.7633;0.7728;0.7633;0.7624;0.8116;0.8134;0.8116;0.8101;0.9;0.906;0.9;0.9005;0.9028;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7505;0.7718;0.7505;0.7497;0.8551;0.8581;0.8551;0.8555;0.9;0.906;0.9;0.9005;0.8916;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8374;0.84;0.8374;0.8374;0.8406;0.8444;0.8406;0.8405;0.9;0.9015;0.9;0.9004;0.9471;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.8454;0.8503;0.8454;0.8454;0.8551;0.8625;0.8551;0.8552;0.9;0.9015;0.9;0.9004;0.9498;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 741};RandomForestClassifier(n_estimators=20, random_state=741)
RandomForestClassifier;0.8455;0.8488;0.8455;0.8451;0.8551;0.8578;0.8551;0.8544;0.9;0.9015;0.9;0.9004;0.9505;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 741};RandomForestClassifier(n_estimators=10, random_state=741)
RandomForestClassifier;0.8567;0.8613;0.8567;0.8566;0.7391;0.7563;0.7391;0.74;0.9;0.9015;0.9;0.9004;0.952;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 23};RandomForestClassifier(n_estimators=10, random_state=23)
KNeighborsClassifier;0.7568;0.7732;0.7568;0.756;0.8116;0.8116;0.8116;0.8116;0.9;0.9015;0.9;0.9004;0.8947;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7633;0.778;0.7633;0.7607;0.8406;0.8556;0.8406;0.8435;0.9;0.9015;0.9;0.9004;0.9008;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8148;0.8191;0.8148;0.8141;0.8116;0.8133;0.8116;0.8114;0.9;0.9137;0.9;0.9004;0.8612;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
KNeighborsClassifier;0.7504;0.7674;0.7504;0.7488;0.8841;0.8983;0.8841;0.8855;0.9;0.9137;0.9;0.9004;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7649;0.7784;0.7649;0.7648;0.7826;0.8066;0.7826;0.7802;0.9;0.9015;0.9;0.9004;0.8924;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7409;0.755;0.7409;0.7401;0.8406;0.8457;0.8406;0.8343;0.9;0.9015;0.9;0.9004;0.8857;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8407;0.847;0.8407;0.8399;0.8261;0.8255;0.8261;0.825;0.9;0.9019;0.9;0.8999;0.9503;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 741};RandomForestClassifier(n_estimators=10, random_state=741)
RandomForestClassifier;0.8567;0.8635;0.8567;0.8558;0.8406;0.8424;0.8406;0.8407;0.9;0.9019;0.9;0.8999;0.9492;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 741};RandomForestClassifier(n_estimators=10, random_state=741)
RandomForestClassifier;0.8359;0.8447;0.8359;0.8354;0.8696;0.8778;0.8696;0.8653;0.9;0.9074;0.9;0.8995;0.9467;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
KNeighborsClassifier;0.7632;0.7785;0.7632;0.7614;0.7826;0.801;0.7826;0.7776;0.8833;0.8875;0.8833;0.884;0.9094;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8503;0.8554;0.8503;0.8504;0.8406;0.8565;0.8406;0.8386;0.8833;0.8868;0.8833;0.884;0.9494;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 23};RandomForestClassifier(n_estimators=20, random_state=23)
RandomForestClassifier;0.8551;0.8582;0.8551;0.854;0.8116;0.8172;0.8116;0.8125;0.8833;0.8868;0.8833;0.884;0.9494;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
KNeighborsClassifier;0.7761;0.7874;0.7761;0.7759;0.7536;0.7695;0.7536;0.7516;0.8833;0.8875;0.8833;0.884;0.9085;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.802;0.8101;0.802;0.8013;0.7971;0.8094;0.7971;0.7995;0.8833;0.8934;0.8833;0.8839;0.8514;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
KNeighborsClassifier;0.7505;0.7725;0.7505;0.7486;0.8551;0.8578;0.8551;0.8544;0.8833;0.8934;0.8833;0.8839;0.9026;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8567;0.8643;0.8567;0.8566;0.7971;0.8051;0.7971;0.7994;0.8833;0.8848;0.8833;0.8837;0.952;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 23};RandomForestClassifier(n_estimators=10, random_state=23)
RandomForestClassifier;0.8341;0.8385;0.8341;0.8327;0.8986;0.9032;0.8986;0.8997;0.8833;0.8848;0.8833;0.8837;0.9462;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 23};RandomForestClassifier(n_estimators=10, random_state=23)
RandomForestClassifier;0.839;0.8452;0.839;0.839;0.8551;0.8603;0.8551;0.8559;0.8833;0.8862;0.8833;0.8836;0.9497;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.8294;0.835;0.8294;0.8299;0.9565;0.9577;0.9565;0.9568;0.8833;0.884;0.8833;0.8833;0.9488;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.8438;0.8507;0.8438;0.8431;0.7826;0.7829;0.7826;0.7825;0.8833;0.884;0.8833;0.8833;0.9509;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 23};RandomForestClassifier(n_estimators=20, random_state=23)
RandomForestClassifier;0.8357;0.8398;0.8357;0.8356;0.8406;0.8411;0.8406;0.8398;0.8833;0.884;0.8833;0.8833;0.9459;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 23};RandomForestClassifier(n_estimators=20, random_state=23)
RandomForestClassifier;0.8406;0.846;0.8406;0.8405;0.8551;0.8657;0.8551;0.8543;0.8833;0.8833;0.8833;0.8833;0.9391;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
KNeighborsClassifier;0.7601;0.7724;0.7601;0.7586;0.7536;0.7546;0.7536;0.7539;0.8833;0.884;0.8833;0.8833;0.9017;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7488;0.7624;0.7488;0.7489;0.7246;0.7492;0.7246;0.7095;0.8833;0.884;0.8833;0.8833;0.8872;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8165;0.8208;0.8165;0.8159;0.7681;0.7666;0.7681;0.7671;0.8833;0.8874;0.8833;0.883;0.8623;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
DecisionTreeClassifier;0.8228;0.8309;0.8228;0.8213;0.7536;0.774;0.7536;0.7556;0.8667;0.8749;0.8667;0.8684;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
DecisionTreeClassifier;0.7938;0.799;0.7938;0.7931;0.8116;0.8183;0.8116;0.8121;0.8667;0.8808;0.8667;0.8675;0.845;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.8212;0.8304;0.8212;0.8211;0.8261;0.8277;0.8261;0.8236;0.8667;0.8808;0.8667;0.8675;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
DecisionTreeClassifier;0.81;0.8142;0.81;0.8092;0.8261;0.8246;0.8261;0.8236;0.8667;0.8808;0.8667;0.8675;0.8575;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
DecisionTreeClassifier;0.7971;0.8036;0.7971;0.7969;0.7971;0.8024;0.7971;0.7953;0.8667;0.8808;0.8667;0.8675;0.8479;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
RandomForestClassifier;0.8389;0.8471;0.8389;0.8381;0.8696;0.8696;0.8696;0.8696;0.8667;0.869;0.8667;0.8674;0.9503;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 741};RandomForestClassifier(n_estimators=20, random_state=741)
RandomForestClassifier;0.8342;0.8437;0.8342;0.8336;0.8551;0.8576;0.8551;0.8556;0.8667;0.869;0.8667;0.8674;0.9452;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 23};RandomForestClassifier(n_estimators=20, random_state=23)
SVC;0.694;0.7424;0.694;0.6894;0.7391;0.7529;0.7391;0.7401;0.8667;0.8785;0.8667;0.8673;0.8513;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6923;0.74;0.6923;0.6889;0.7681;0.8089;0.7681;0.7677;0.8667;0.8785;0.8667;0.8673;0.8373;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6876;0.7388;0.6876;0.6835;0.7971;0.8007;0.7971;0.7956;0.8667;0.8785;0.8667;0.8673;0.8475;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
SVC;0.6891;0.7414;0.6891;0.6864;0.7971;0.8349;0.7971;0.7954;0.8667;0.8785;0.8667;0.8673;0.8488;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
RandomForestClassifier;0.8471;0.854;0.8471;0.847;0.6957;0.7031;0.6957;0.6916;0.8667;0.8692;0.8667;0.8669;0.9538;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
KNeighborsClassifier;0.755;0.7762;0.755;0.754;0.7391;0.7503;0.7391;0.7386;0.8667;0.8692;0.8667;0.8669;0.8983;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8293;0.8388;0.8293;0.8283;0.8551;0.861;0.8551;0.8563;0.8667;0.8667;0.8667;0.8667;0.9444;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 741};RandomForestClassifier(n_estimators=10, random_state=741)
SVC;0.6957;0.7483;0.6957;0.6902;0.6812;0.7415;0.6812;0.6821;0.8667;0.8821;0.8667;0.8664;0.8472;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
KNeighborsClassifier;0.765;0.778;0.765;0.765;0.7826;0.7815;0.7826;0.7811;0.8667;0.869;0.8667;0.8664;0.9033;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.7036;0.7535;0.7036;0.6986;0.7101;0.7364;0.7101;0.6959;0.8667;0.8814;0.8667;0.866;0.8423;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
RandomForestClassifier;0.8487;0.8529;0.8487;0.8489;0.8406;0.8459;0.8406;0.8415;0.8667;0.8764;0.8667;0.8657;0.9511;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 23};RandomForestClassifier(n_estimators=20, random_state=23)
DecisionTreeClassifier;0.7938;0.8014;0.7938;0.793;0.7681;0.7877;0.7681;0.7729;0.85;0.8611;0.85;0.8517;0.8453;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
RandomForestClassifier;0.8246;0.8329;0.8246;0.8234;0.913;0.913;0.913;0.913;0.85;0.8541;0.85;0.851;0.943;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 741};RandomForestClassifier(n_estimators=20, random_state=741)
SVC;0.6987;0.7516;0.6987;0.6941;0.7246;0.7492;0.7246;0.7215;0.85;0.8639;0.85;0.8508;0.8499;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6906;0.7423;0.6906;0.6849;0.7826;0.7977;0.7826;0.7791;0.85;0.8563;0.85;0.8504;0.8429;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6779;0.7256;0.6779;0.6736;0.7971;0.8071;0.7971;0.7963;0.85;0.8563;0.85;0.8504;0.8365;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
SVC;0.6957;0.7488;0.6957;0.6918;0.7101;0.7192;0.7101;0.7073;0.85;0.8563;0.85;0.8504;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
SVC;0.6827;0.7367;0.6827;0.6772;0.7536;0.7703;0.7536;0.7512;0.85;0.8663;0.85;0.8501;0.8409;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
DecisionTreeClassifier;0.8068;0.8106;0.8068;0.8063;0.7681;0.7601;0.7681;0.761;0.85;0.8544;0.85;0.8499;0.8552;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.81;0.8249;0.81;0.81;0.7971;0.798;0.7971;0.7973;0.8333;0.8413;0.8333;0.8361;0.8577;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
DecisionTreeClassifier;0.7875;0.7915;0.7875;0.7867;0.8406;0.8446;0.8406;0.8401;0.8333;0.8429;0.8333;0.8358;0.8404;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
SVC;0.6908;0.7475;0.6908;0.6871;0.7971;0.8378;0.7971;0.8008;0.8333;0.8498;0.8333;0.8342;0.8438;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6972;0.7497;0.6972;0.6937;0.7826;0.7859;0.7826;0.7793;0.8333;0.8498;0.8333;0.8342;0.8368;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
SVC;0.6957;0.7462;0.6957;0.6932;0.6522;0.7082;0.6522;0.6569;0.8333;0.8498;0.8333;0.8342;0.8582;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
MLPClassifier;0.6989;0.7164;0.6989;0.6948;0.7826;0.7823;0.7826;0.7822;0.8333;0.8483;0.8333;0.8307;0.8687;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
DecisionTreeClassifier;0.8132;0.8228;0.8132;0.8128;0.7536;0.76;0.7536;0.755;0.8167;0.8258;0.8167;0.8198;0.8599;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.8069;0.818;0.8069;0.8073;0.8696;0.8807;0.8696;0.8696;0.8167;0.8258;0.8167;0.8198;0.8551;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
DecisionTreeClassifier;0.8244;0.8315;0.8244;0.8241;0.7246;0.7261;0.7246;0.7207;0.8167;0.8214;0.8167;0.8181;0.8685;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
DecisionTreeClassifier;0.8116;0.8161;0.8116;0.8108;0.7971;0.8025;0.7971;0.797;0.8167;0.8214;0.8167;0.8181;0.8581;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
SVC;0.6955;0.744;0.6955;0.6902;0.7971;0.8248;0.7971;0.7988;0.8167;0.8401;0.8167;0.8175;0.8417;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
SVC;0.6956;0.7488;0.6956;0.689;0.7971;0.8158;0.7971;0.7948;0.8167;0.8362;0.8167;0.8173;0.8385;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
SVC;0.6925;0.7408;0.6925;0.6885;0.7826;0.8164;0.7826;0.7859;0.8167;0.8362;0.8167;0.8173;0.8486;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
SVC;0.6924;0.7414;0.6924;0.6873;0.7536;0.767;0.7536;0.7546;0.8167;0.8362;0.8167;0.8173;0.844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
SVC;0.7007;0.7471;0.7007;0.6925;0.7246;0.7784;0.7246;0.7332;0.8167;0.8362;0.8167;0.8173;0.8462;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
SVC;0.7022;0.7505;0.7022;0.6976;0.7971;0.8206;0.7971;0.7887;0.8167;0.8362;0.8167;0.8173;0.8509;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
SVC;0.6956;0.7411;0.6956;0.6892;0.7536;0.7677;0.7536;0.7564;0.8167;0.8362;0.8167;0.8173;0.8434;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
DecisionTreeClassifier;0.8133;0.8203;0.8133;0.8135;0.8406;0.8405;0.8406;0.8387;0.8167;0.8209;0.8167;0.8158;0.8599;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
MLPClassifier;0.7069;0.725;0.7069;0.7036;0.7101;0.7391;0.7101;0.7117;0.8167;0.8383;0.8167;0.8154;0.8642;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
DecisionTreeClassifier;0.8068;0.8129;0.8068;0.8061;0.7826;0.7857;0.7826;0.7834;0.8167;0.8153;0.8167;0.8147;0.8555;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
MLPClassifier;0.7005;0.727;0.7005;0.6961;0.8406;0.8435;0.8406;0.8403;0.8167;0.8289;0.8167;0.8143;0.863;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
MLPClassifier;0.7164;0.7406;0.7164;0.7115;0.6957;0.7036;0.6957;0.6929;0.8167;0.8361;0.8167;0.8125;0.8699;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.7101;0.7365;0.7101;0.705;0.7536;0.7535;0.7536;0.7526;0.8167;0.8361;0.8167;0.8125;0.8692;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.7071;0.7355;0.7071;0.7033;0.8116;0.8146;0.8116;0.812;0.8167;0.8361;0.8167;0.8125;0.8664;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.6974;0.7126;0.6974;0.6938;0.7971;0.8138;0.7971;0.7975;0.8167;0.8361;0.8167;0.8125;0.8667;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.6988;0.7221;0.6988;0.6933;0.8261;0.8349;0.8261;0.8247;0.8167;0.8361;0.8167;0.8125;0.8658;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.7006;0.7265;0.7006;0.6977;0.8261;0.8333;0.8261;0.8277;0.8167;0.8361;0.8167;0.8125;0.8598;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.7085;0.7334;0.7085;0.7061;0.7246;0.7311;0.7246;0.7247;0.8167;0.8361;0.8167;0.8125;0.873;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.6987;0.7227;0.6987;0.6961;0.7101;0.7277;0.7101;0.7075;0.8167;0.8236;0.8167;0.8096;0.8676;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
DecisionTreeClassifier;0.8004;0.8086;0.8004;0.7998;0.7826;0.7811;0.7826;0.7816;0.8;0.8108;0.8;0.8032;0.8505;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
DecisionTreeClassifier;0.794;0.7969;0.794;0.7937;0.8116;0.8172;0.8116;0.8125;0.8;0.8038;0.8;0.801;0.8453;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
DecisionTreeClassifier;0.8003;0.8059;0.8003;0.8002;0.7681;0.766;0.7681;0.7668;0.8;0.8038;0.8;0.801;0.8505;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
SVC;0.6844;0.7329;0.6844;0.6786;0.8116;0.8156;0.8116;0.8118;0.8;0.813;0.8;0.8006;0.8377;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
SVC;0.686;0.7381;0.686;0.6829;0.7971;0.8057;0.7971;0.7952;0.8;0.8225;0.8;0.8004;0.8346;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6844;0.7372;0.6844;0.6801;0.7971;0.8144;0.7971;0.794;0.8;0.8311;0.8;0.8004;0.8321;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6957;0.7531;0.6957;0.692;0.7681;0.7884;0.7681;0.7693;0.8;0.8225;0.8;0.8004;0.8355;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.6957;0.746;0.6957;0.6912;0.7681;0.8188;0.7681;0.7609;0.8;0.8311;0.8;0.8004;0.8421;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
SVC;0.7021;0.7498;0.7021;0.6965;0.7536;0.8019;0.7536;0.7494;0.8;0.8225;0.8;0.8004;0.8436;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 758};SVC(C=10, probability=True, random_state=758)
SVC;0.7069;0.7569;0.7069;0.7033;0.6957;0.7377;0.6957;0.6935;0.8;0.8225;0.8;0.8004;0.8591;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.7101;0.7573;0.7101;0.7051;0.6667;0.7144;0.6667;0.6698;0.8;0.8228;0.8;0.8;0.8544;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 150};SVC(C=10, probability=True, random_state=150)
SVC;0.7022;0.747;0.7022;0.6995;0.7246;0.7927;0.7246;0.7083;0.8;0.8269;0.8;0.7999;0.8474;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 211};SVC(C=10, probability=True, random_state=211)
MLPClassifier;0.6988;0.7122;0.6988;0.6929;0.7681;0.7965;0.7681;0.7714;0.8;0.8267;0.8;0.7974;0.8675;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.6974;0.7145;0.6974;0.6942;0.7536;0.7935;0.7536;0.751;0.8;0.8165;0.8;0.7962;0.8658;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.7118;0.7355;0.7118;0.7081;0.6667;0.6855;0.6667;0.656;0.8;0.824;0.8;0.7938;0.8694;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.702;0.7261;0.702;0.6963;0.8551;0.8675;0.8551;0.8574;0.8;0.824;0.8;0.7938;0.8619;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
MLPClassifier;0.7036;0.7323;0.7036;0.6994;0.8116;0.8133;0.8116;0.8122;0.8;0.824;0.8;0.7938;0.8613;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.707;0.726;0.707;0.7033;0.7101;0.7125;0.7101;0.7104;0.8;0.824;0.8;0.7938;0.87;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.6812;0.6986;0.6812;0.6767;0.8406;0.8456;0.8406;0.8399;0.8;0.824;0.8;0.7938;0.8597;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
MLPClassifier;0.7181;0.7414;0.7181;0.7161;0.7246;0.7248;0.7246;0.7231;0.8;0.824;0.8;0.7938;0.8724;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
DecisionTreeClassifier;0.7939;0.8031;0.7939;0.7944;0.7971;0.7985;0.7971;0.7968;0.7833;0.7831;0.7833;0.7822;0.8454;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=446)
DecisionTreeClassifier;0.818;0.827;0.818;0.8167;0.7246;0.7242;0.7246;0.7237;0.7833;0.787;0.7833;0.7815;0.8637;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
MLPClassifier;0.7102;0.7259;0.7102;0.7074;0.7971;0.8025;0.7971;0.7987;0.7833;0.7981;0.7833;0.7798;0.8713;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.7102;0.7353;0.7102;0.7082;0.6522;0.6677;0.6522;0.6525;0.7833;0.8153;0.7833;0.779;0.8676;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.6909;0.7105;0.6909;0.6882;0.8551;0.8581;0.8551;0.8528;0.7833;0.8153;0.7833;0.779;0.8581;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.6971;0.7157;0.6971;0.6938;0.6667;0.7412;0.6667;0.663;0.7833;0.8153;0.7833;0.779;0.8718;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
MLPClassifier;0.7182;0.7429;0.7182;0.7148;0.7391;0.7432;0.7391;0.7381;0.7833;0.8043;0.7833;0.7775;0.8698;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
MLPClassifier;0.7037;0.7248;0.7037;0.701;0.6812;0.683;0.6812;0.6815;0.7833;0.7964;0.7833;0.7708;0.8728;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
DecisionTreeClassifier;0.8277;0.8351;0.8277;0.8266;0.6377;0.6572;0.6377;0.6392;0.7667;0.7788;0.7667;0.7706;0.8702;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
DecisionTreeClassifier;0.8019;0.8087;0.8019;0.8021;0.8116;0.8132;0.8116;0.8122;0.7667;0.7816;0.7667;0.77;0.8513;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=250)
DecisionTreeClassifier;0.8052;0.8113;0.8052;0.8056;0.7391;0.7602;0.7391;0.7418;0.7667;0.7816;0.7667;0.77;0.8539;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=670)
DecisionTreeClassifier;0.8149;0.8195;0.8149;0.8147;0.7971;0.8023;0.7971;0.7892;0.7667;0.7711;0.7667;0.768;0.861;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=250)
DecisionTreeClassifier;0.8229;0.8282;0.8229;0.8207;0.8116;0.8179;0.8116;0.8088;0.7667;0.7829;0.7667;0.7655;0.867;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 446};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=446)
MLPClassifier;0.7182;0.74;0.7182;0.715;0.6232;0.6453;0.6232;0.612;0.7667;0.7876;0.7667;0.7609;0.8716;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
MLPClassifier;0.7085;0.7274;0.7085;0.7054;0.7536;0.7533;0.7536;0.7528;0.7667;0.7857;0.7667;0.7563;0.8681;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 312, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=312)
MLPClassifier;0.707;0.7273;0.707;0.7012;0.6812;0.6976;0.6812;0.6786;0.75;0.7574;0.75;0.7476;0.8706;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
MLPClassifier;0.7231;0.7461;0.7231;0.7196;0.6087;0.6578;0.6087;0.6066;0.7333;0.7419;0.7333;0.7322;0.8777;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
DecisionTreeClassifier;0.8358;0.8407;0.8358;0.8362;0.8116;0.8111;0.8116;0.8096;0.7333;0.7381;0.7333;0.7312;0.8772;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 670};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=670)
MLPClassifier;0.7101;0.7414;0.7101;0.7079;0.7246;0.7425;0.7246;0.7253;0.7333;0.7629;0.7333;0.7309;0.8709;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 646, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=646)
DecisionTreeClassifier;0.8293;0.8363;0.8293;0.8295;0.7681;0.7726;0.7681;0.7688;0.7333;0.7375;0.7333;0.7301;0.8718;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 250};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=250)
LogisticRegression;0.699;0.7338;0.699;0.6992;0.7391;0.7971;0.7391;0.722;0.7;0.722;0.7;0.7014;0.8426;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6939;0.7201;0.6939;0.6893;0.7681;0.7963;0.7681;0.7625;0.6833;0.7252;0.6833;0.6855;0.844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6927;0.7185;0.6927;0.6899;0.7101;0.7328;0.7101;0.7103;0.6833;0.7116;0.6833;0.6835;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6925;0.7236;0.6925;0.6881;0.6087;0.669;0.6087;0.6157;0.6833;0.7351;0.6833;0.6828;0.8543;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6844;0.7129;0.6844;0.6816;0.7246;0.7905;0.7246;0.7167;0.6833;0.7012;0.6833;0.6821;0.8444;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.6892;0.7136;0.6892;0.6852;0.6667;0.6987;0.6667;0.6612;0.6833;0.7012;0.6833;0.6821;0.853;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6814;0.711;0.6814;0.6767;0.7101;0.7607;0.7101;0.706;0.6667;0.7007;0.6667;0.6676;0.8408;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.7019;0.7436;0.7019;0.6987;0.6812;0.7076;0.6812;0.6725;0.6667;0.7007;0.6667;0.6676;0.849;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.686;0.7058;0.686;0.6792;0.7536;0.7687;0.7536;0.7533;0.6667;0.6824;0.6667;0.6662;0.8448;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.6974;0.7318;0.6974;0.6925;0.7101;0.723;0.7101;0.7127;0.6667;0.6816;0.6667;0.6649;0.8488;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6941;0.7244;0.6941;0.691;0.6522;0.6881;0.6522;0.6471;0.6667;0.6816;0.6667;0.6649;0.848;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6973;0.7311;0.6973;0.6954;0.6667;0.7354;0.6667;0.6613;0.6667;0.6816;0.6667;0.6649;0.8482;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6923;0.7104;0.6923;0.6875;0.7101;0.7451;0.7101;0.708;0.6667;0.6816;0.6667;0.6649;0.8488;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.7101;0.7431;0.7101;0.7083;0.5942;0.6633;0.5942;0.581;0.6667;0.6885;0.6667;0.6625;0.8556;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.699;0.7349;0.699;0.694;0.6812;0.6911;0.6812;0.6814;0.65;0.6812;0.65;0.6521;0.8549;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.678;0.7032;0.678;0.6728;0.6957;0.712;0.6957;0.698;0.65;0.6812;0.65;0.6521;0.8498;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6893;0.7201;0.6893;0.6853;0.7246;0.7351;0.7246;0.7195;0.65;0.6812;0.65;0.6521;0.8469;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6875;0.711;0.6875;0.6852;0.6522;0.6566;0.6522;0.6402;0.65;0.6812;0.65;0.6521;0.8483;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.7054;0.7291;0.7054;0.7025;0.5797;0.6124;0.5797;0.5701;0.65;0.6812;0.65;0.6521;0.8575;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6892;0.7159;0.6892;0.6859;0.7101;0.7321;0.7101;0.711;0.65;0.6958;0.65;0.6517;0.8495;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6812;0.7099;0.6812;0.6762;0.7246;0.7698;0.7246;0.7275;0.65;0.6891;0.65;0.6496;0.8469;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.6924;0.722;0.6924;0.6883;0.6812;0.681;0.6812;0.6772;0.65;0.6622;0.65;0.6492;0.8439;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.686;0.7173;0.686;0.6819;0.7536;0.7697;0.7536;0.7513;0.65;0.6622;0.65;0.6492;0.8385;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6843;0.7065;0.6843;0.6792;0.7391;0.7427;0.7391;0.7323;0.65;0.6622;0.65;0.6492;0.8474;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.678;0.7049;0.678;0.674;0.7536;0.7821;0.7536;0.7575;0.65;0.6622;0.65;0.6492;0.8406;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6812;0.7037;0.6812;0.6765;0.7391;0.758;0.7391;0.7365;0.65;0.6622;0.65;0.6492;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6876;0.7056;0.6876;0.6823;0.6667;0.7144;0.6667;0.6623;0.65;0.6622;0.65;0.6492;0.8513;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6796;0.7104;0.6796;0.6754;0.6812;0.6937;0.6812;0.6756;0.6333;0.6696;0.6333;0.6342;0.8492;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
LogisticRegression;0.6847;0.7096;0.6847;0.6787;0.6232;0.6448;0.6232;0.6208;0.6333;0.6696;0.6333;0.6342;0.8485;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 383, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=383)"
LogisticRegression;0.6827;0.7084;0.6827;0.675;0.6522;0.6661;0.6522;0.6524;0.6333;0.6696;0.6333;0.6342;0.8484;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 182, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=182)"
