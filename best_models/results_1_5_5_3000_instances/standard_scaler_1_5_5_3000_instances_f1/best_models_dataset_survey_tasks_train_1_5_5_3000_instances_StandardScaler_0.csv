Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9161;0.9166;0.9161;0.9162;0.9011;0.9023;0.9011;0.9012;0.85;0.8852;0.85;0.8518;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
RandomForestClassifier;0.9138;0.9143;0.9138;0.9138;0.9102;0.9102;0.9102;0.9102;0.8333;0.8524;0.8333;0.8338;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
KNeighborsClassifier;0.9035;0.9046;0.9035;0.9037;0.9011;0.902;0.9011;0.9012;0.8333;0.8655;0.8333;0.8338;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9007;0.9026;0.9007;0.9009;0.8921;0.8933;0.8921;0.8923;0.8333;0.8655;0.8333;0.8338;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9029;0.9039;0.9029;0.9031;0.9022;0.903;0.9022;0.9024;0.8333;0.8655;0.8333;0.8338;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.913;0.9134;0.913;0.9131;0.9191;0.9206;0.9191;0.9193;0.8333;0.8677;0.8333;0.833;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
RandomForestClassifier;0.9116;0.912;0.9116;0.9117;0.918;0.9184;0.918;0.918;0.8333;0.8677;0.8333;0.833;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 969};RandomForestClassifier(n_estimators=10, random_state=969)
RandomForestClassifier;0.9133;0.9135;0.9133;0.9133;0.909;0.9092;0.909;0.909;0.8333;0.8677;0.8333;0.833;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
KNeighborsClassifier;0.9017;0.9034;0.9017;0.9019;0.9101;0.9102;0.9101;0.9101;0.8333;0.8437;0.8333;0.8325;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9022;0.9033;0.9022;0.9024;0.9124;0.9127;0.9124;0.9124;0.8333;0.8437;0.8333;0.8325;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8984;0.8996;0.8984;0.8986;0.9191;0.9194;0.9191;0.9192;0.8333;0.8437;0.8333;0.8325;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9004;0.9018;0.9004;0.9006;0.9181;0.9184;0.9181;0.9182;0.8333;0.8437;0.8333;0.8325;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8982;0.9;0.8982;0.8984;0.9281;0.9281;0.9281;0.9281;0.8333;0.8437;0.8333;0.8325;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9015;0.903;0.9015;0.9018;0.9213;0.9215;0.9213;0.9214;0.8333;0.8437;0.8333;0.8325;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8997;0.9008;0.8997;0.8999;0.9202;0.9205;0.9202;0.9202;0.8333;0.8437;0.8333;0.8325;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8978;0.8995;0.8978;0.8981;0.9169;0.9171;0.9169;0.9167;0.8333;0.8535;0.8333;0.8317;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9136;0.9141;0.9136;0.9137;0.909;0.9104;0.909;0.9093;0.8333;0.8535;0.8333;0.8317;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
KNeighborsClassifier;0.8997;0.9012;0.8997;0.8999;0.9101;0.9121;0.9101;0.9102;0.8333;0.8432;0.8333;0.8313;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9;0.9012;0.9;0.9002;0.9011;0.9025;0.9011;0.9014;0.8333;0.8523;0.8333;0.8312;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9123;0.9126;0.9123;0.9123;0.9337;0.9337;0.9337;0.9337;0.8167;0.8448;0.8167;0.8201;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 969};RandomForestClassifier(n_estimators=20, random_state=969)
RandomForestClassifier;0.9123;0.9127;0.9123;0.9123;0.9135;0.9156;0.9135;0.9137;0.8167;0.8536;0.8167;0.8199;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
KNeighborsClassifier;0.8998;0.9017;0.8998;0.9;0.908;0.9084;0.908;0.9081;0.8167;0.8457;0.8167;0.8184;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9114;0.9119;0.9114;0.9115;0.9169;0.9171;0.9169;0.9169;0.8167;0.8457;0.8167;0.8184;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
KNeighborsClassifier;0.901;0.9025;0.901;0.9012;0.8989;0.8999;0.8989;0.8991;0.8167;0.8412;0.8167;0.8176;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9024;0.904;0.9024;0.9027;0.9056;0.9067;0.9056;0.9057;0.8167;0.8412;0.8167;0.8176;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.896;0.8978;0.896;0.8962;0.9248;0.9252;0.9248;0.9248;0.8167;0.8412;0.8167;0.8176;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9018;0.9032;0.9018;0.902;0.9022;0.903;0.9022;0.9024;0.8167;0.8549;0.8167;0.8171;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8985;0.9002;0.8985;0.8988;0.9136;0.9142;0.9136;0.9135;0.8167;0.8248;0.8167;0.8165;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.901;0.9026;0.901;0.9013;0.8979;0.8983;0.8979;0.8979;0.8167;0.8248;0.8167;0.8165;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.902;0.9036;0.902;0.9022;0.9034;0.9039;0.9034;0.9035;0.8167;0.8339;0.8167;0.8163;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9032;0.9043;0.9032;0.9033;0.909;0.9093;0.909;0.909;0.8167;0.8318;0.8167;0.8159;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9123;0.9127;0.9123;0.9124;0.9169;0.917;0.9169;0.9169;0.8167;0.8492;0.8167;0.8154;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
RandomForestClassifier;0.913;0.9134;0.913;0.9131;0.918;0.918;0.918;0.918;0.8167;0.8492;0.8167;0.8154;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
KNeighborsClassifier;0.8998;0.9011;0.8998;0.9;0.9091;0.9113;0.9091;0.9095;0.8167;0.8316;0.8167;0.8153;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9057;0.907;0.9057;0.9059;0.8876;0.8888;0.8876;0.8878;0.8167;0.8316;0.8167;0.8153;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.915;0.9153;0.915;0.9151;0.9202;0.9206;0.9202;0.9203;0.8167;0.8423;0.8167;0.8148;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
DecisionTreeClassifier;0.892;0.8926;0.892;0.8922;0.8753;0.8754;0.8753;0.8753;0.8167;0.8224;0.8167;0.8148;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
RandomForestClassifier;0.913;0.9133;0.913;0.913;0.9213;0.9218;0.9213;0.9215;0.8167;0.8423;0.8167;0.8148;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 969};RandomForestClassifier(n_estimators=20, random_state=969)
KNeighborsClassifier;0.8988;0.9005;0.8988;0.899;0.9213;0.9215;0.9213;0.9214;0.8167;0.8423;0.8167;0.8148;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9095;0.91;0.9095;0.9096;0.9225;0.9228;0.9225;0.9225;0.8;0.8434;0.8;0.8035;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 969};RandomForestClassifier(n_estimators=20, random_state=969)
RandomForestClassifier;0.9151;0.9157;0.9151;0.9152;0.9102;0.9106;0.9102;0.9103;0.8;0.8273;0.8;0.803;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 525};RandomForestClassifier(n_estimators=10, random_state=525)
MLPClassifier;0.8761;0.8787;0.8761;0.8766;0.8921;0.8934;0.8921;0.8924;0.8;0.842;0.8;0.8029;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
RandomForestClassifier;0.9104;0.911;0.9104;0.9105;0.9169;0.9169;0.9169;0.9168;0.8;0.821;0.8;0.8018;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
RandomForestClassifier;0.9121;0.9125;0.9121;0.9122;0.9045;0.9047;0.9045;0.9043;0.8;0.8373;0.8;0.8016;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 969};RandomForestClassifier(n_estimators=20, random_state=969)
RandomForestClassifier;0.917;0.9175;0.917;0.9171;0.9056;0.906;0.9056;0.9056;0.8;0.8314;0.8;0.8008;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
RandomForestClassifier;0.9166;0.917;0.9166;0.9167;0.9034;0.9036;0.9034;0.9034;0.8;0.8472;0.8;0.8004;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
KNeighborsClassifier;0.9013;0.9026;0.9013;0.9015;0.9012;0.9028;0.9012;0.9015;0.8;0.8472;0.8;0.8004;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9015;0.9028;0.9015;0.9017;0.9169;0.9174;0.9169;0.917;0.8;0.8444;0.8;0.8;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9;0.9013;0.9;0.9002;0.908;0.9097;0.908;0.9082;0.8;0.8124;0.8;0.7994;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.9116;0.9121;0.9116;0.9117;0.9169;0.9168;0.9169;0.9168;0.8;0.8235;0.8;0.7993;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
RandomForestClassifier;0.9129;0.9132;0.9129;0.913;0.9303;0.9307;0.9303;0.9303;0.8;0.8346;0.8;0.7988;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
DecisionTreeClassifier;0.8891;0.8894;0.8891;0.8892;0.8719;0.8758;0.8719;0.8726;0.8;0.8073;0.8;0.7965;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
RandomForestClassifier;0.9178;0.9181;0.9178;0.9178;0.9067;0.9082;0.9067;0.9068;0.8;0.8439;0.8;0.7956;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 969};RandomForestClassifier(n_estimators=10, random_state=969)
RandomForestClassifier;0.912;0.9124;0.912;0.9121;0.9146;0.9148;0.9146;0.9145;0.7833;0.8185;0.7833;0.787;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
RandomForestClassifier;0.9143;0.9148;0.9143;0.9143;0.9147;0.9162;0.9147;0.9149;0.7833;0.8187;0.7833;0.7862;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 185};RandomForestClassifier(n_estimators=20, random_state=185)
MLPClassifier;0.8733;0.8763;0.8733;0.8739;0.8911;0.8945;0.8911;0.8918;0.7833;0.8262;0.7833;0.7853;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
KNeighborsClassifier;0.8985;0.9001;0.8985;0.8988;0.9158;0.9159;0.9158;0.9157;0.7833;0.8226;0.7833;0.785;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9164;0.9168;0.9164;0.9164;0.9022;0.903;0.9022;0.9023;0.7833;0.8494;0.7833;0.7845;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
MLPClassifier;0.8782;0.8804;0.8782;0.8787;0.8933;0.8939;0.8933;0.8934;0.7833;0.8212;0.7833;0.7844;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
MLPClassifier;0.8752;0.8783;0.8752;0.8757;0.899;0.9008;0.899;0.8992;0.7833;0.8198;0.7833;0.7839;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
MLPClassifier;0.8743;0.8769;0.8743;0.8748;0.8979;0.9019;0.8979;0.8985;0.7833;0.8198;0.7833;0.7839;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8764;0.8788;0.8764;0.8769;0.8798;0.8857;0.8798;0.8805;0.7833;0.8198;0.7833;0.7839;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8732;0.8753;0.8732;0.8738;0.8989;0.9013;0.8989;0.8992;0.7833;0.8198;0.7833;0.7839;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8724;0.8748;0.8724;0.873;0.9125;0.9142;0.9125;0.9126;0.7833;0.8198;0.7833;0.7839;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8722;0.8761;0.8722;0.8729;0.8978;0.8999;0.8978;0.8979;0.7833;0.822;0.7833;0.7837;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
MLPClassifier;0.8768;0.8795;0.8768;0.8773;0.8799;0.8854;0.8799;0.8807;0.7833;0.822;0.7833;0.7837;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
MLPClassifier;0.8752;0.8782;0.8752;0.8758;0.8944;0.8953;0.8944;0.8945;0.7833;0.822;0.7833;0.7837;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
MLPClassifier;0.8777;0.88;0.8777;0.8782;0.8798;0.8815;0.8798;0.8801;0.7833;0.822;0.7833;0.7837;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
DecisionTreeClassifier;0.8893;0.8897;0.8893;0.8894;0.8685;0.8749;0.8685;0.8693;0.7833;0.792;0.7833;0.783;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
DecisionTreeClassifier;0.8912;0.8916;0.8912;0.8913;0.8753;0.8761;0.8753;0.8755;0.7833;0.792;0.7833;0.783;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
DecisionTreeClassifier;0.8928;0.8935;0.8928;0.8928;0.8775;0.88;0.8775;0.8781;0.7833;0.7876;0.7833;0.7825;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
KNeighborsClassifier;0.905;0.9068;0.905;0.9052;0.8978;0.8982;0.8978;0.8978;0.7833;0.8264;0.7833;0.7819;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9126;0.9132;0.9126;0.9127;0.908;0.9089;0.908;0.908;0.7833;0.8049;0.7833;0.7818;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 969};RandomForestClassifier(n_estimators=20, random_state=969)
DecisionTreeClassifier;0.8918;0.8921;0.8918;0.8918;0.873;0.8803;0.873;0.8731;0.7833;0.7928;0.7833;0.781;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
DecisionTreeClassifier;0.8928;0.893;0.8928;0.8929;0.8663;0.8757;0.8663;0.8663;0.7833;0.7928;0.7833;0.781;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
MLPClassifier;0.8783;0.8813;0.8783;0.8788;0.9045;0.9081;0.9045;0.9052;0.7833;0.8222;0.7833;0.781;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
DecisionTreeClassifier;0.8919;0.8924;0.8919;0.892;0.8697;0.8781;0.8697;0.8702;0.7833;0.7929;0.7833;0.7805;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
DecisionTreeClassifier;0.8934;0.894;0.8934;0.8935;0.8474;0.852;0.8474;0.8479;0.7833;0.7933;0.7833;0.7779;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
MLPClassifier;0.8782;0.8802;0.8782;0.8786;0.8865;0.8877;0.8865;0.8867;0.7667;0.8069;0.7667;0.7701;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
RandomForestClassifier;0.9143;0.9146;0.9143;0.9143;0.9113;0.9117;0.9113;0.9111;0.7667;0.8153;0.7667;0.7686;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 969};RandomForestClassifier(n_estimators=20, random_state=969)
RandomForestClassifier;0.9118;0.912;0.9118;0.9118;0.9147;0.9151;0.9147;0.9148;0.7667;0.819;0.7667;0.7682;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 525};RandomForestClassifier(n_estimators=20, random_state=525)
RandomForestClassifier;0.912;0.9124;0.912;0.9121;0.9068;0.9085;0.9068;0.907;0.7667;0.7989;0.7667;0.7654;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 969};RandomForestClassifier(n_estimators=10, random_state=969)
MLPClassifier;0.8718;0.8748;0.8718;0.8724;0.8956;0.8976;0.8956;0.896;0.7667;0.7989;0.7667;0.7654;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
MLPClassifier;0.8776;0.8803;0.8776;0.8781;0.8674;0.8692;0.8674;0.8673;0.7667;0.7989;0.7667;0.7654;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
DecisionTreeClassifier;0.8955;0.8958;0.8955;0.8956;0.8631;0.8677;0.8631;0.863;0.7667;0.7777;0.7667;0.7652;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
DecisionTreeClassifier;0.8862;0.8866;0.8862;0.8862;0.873;0.8752;0.873;0.8732;0.7667;0.7712;0.7667;0.7645;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
MLPClassifier;0.8727;0.8753;0.8727;0.8733;0.8966;0.8984;0.8966;0.8968;0.7667;0.8039;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8774;0.8798;0.8774;0.8779;0.891;0.8929;0.891;0.8914;0.7667;0.8039;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
MLPClassifier;0.8759;0.8784;0.8759;0.8765;0.8865;0.8886;0.8865;0.8868;0.7667;0.7982;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8784;0.8809;0.8784;0.8789;0.8876;0.8896;0.8876;0.8881;0.7667;0.7982;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8734;0.8763;0.8734;0.874;0.899;0.9005;0.899;0.8993;0.7667;0.7982;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 149, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=149)
MLPClassifier;0.8779;0.8805;0.8779;0.8785;0.8775;0.8808;0.8775;0.8779;0.7667;0.8039;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
MLPClassifier;0.8756;0.8779;0.8756;0.8761;0.8933;0.897;0.8933;0.8938;0.7667;0.8039;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
MLPClassifier;0.8738;0.8761;0.8738;0.8743;0.8933;0.895;0.8933;0.8937;0.7667;0.8039;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
MLPClassifier;0.8747;0.8775;0.8747;0.8753;0.8865;0.8902;0.8865;0.8871;0.7667;0.7982;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
MLPClassifier;0.8738;0.8755;0.8738;0.8742;0.9024;0.9054;0.9024;0.9029;0.7667;0.8039;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
MLPClassifier;0.8774;0.8807;0.8774;0.878;0.8777;0.883;0.8777;0.8785;0.7667;0.8039;0.7667;0.7641;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
DecisionTreeClassifier;0.8884;0.8891;0.8884;0.8885;0.8777;0.8825;0.8777;0.8781;0.7667;0.7657;0.7667;0.7639;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
DecisionTreeClassifier;0.8942;0.8947;0.8942;0.8943;0.8494;0.8521;0.8494;0.8499;0.7667;0.7924;0.7667;0.7635;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=548)
DecisionTreeClassifier;0.8912;0.8915;0.8912;0.8912;0.8732;0.8779;0.8732;0.8735;0.7667;0.7797;0.7667;0.7621;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
DecisionTreeClassifier;0.8932;0.8934;0.8932;0.8932;0.8618;0.8719;0.8618;0.8624;0.7667;0.7784;0.7667;0.7585;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
DecisionTreeClassifier;0.8922;0.8925;0.8922;0.8923;0.8664;0.8737;0.8664;0.8668;0.7667;0.7784;0.7667;0.7585;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
RandomForestClassifier;0.9155;0.9159;0.9155;0.9156;0.9135;0.9135;0.9135;0.9135;0.75;0.7995;0.75;0.7531;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 969};RandomForestClassifier(n_estimators=20, random_state=969)
DecisionTreeClassifier;0.889;0.8896;0.889;0.8891;0.8822;0.8848;0.8822;0.8822;0.75;0.7631;0.75;0.7491;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
DecisionTreeClassifier;0.8899;0.8905;0.8899;0.8901;0.8607;0.8729;0.8607;0.8611;0.75;0.7557;0.75;0.7487;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
MLPClassifier;0.8748;0.877;0.8748;0.8753;0.8809;0.885;0.8809;0.8817;0.75;0.7778;0.75;0.7485;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
DecisionTreeClassifier;0.8942;0.8944;0.8942;0.8942;0.8697;0.8744;0.8697;0.8699;0.75;0.7506;0.75;0.748;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
DecisionTreeClassifier;0.8935;0.894;0.8935;0.8936;0.8708;0.8803;0.8708;0.8718;0.75;0.7567;0.75;0.7463;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
MLPClassifier;0.8746;0.8766;0.8746;0.8749;0.8966;0.9005;0.8966;0.8971;0.75;0.7786;0.75;0.746;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 547, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=547)
MLPClassifier;0.8753;0.8778;0.8753;0.8758;0.8933;0.8939;0.8933;0.8935;0.75;0.7786;0.75;0.746;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 253, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=253)
DecisionTreeClassifier;0.8927;0.8932;0.8927;0.8927;0.8697;0.8764;0.8697;0.8699;0.7333;0.7408;0.7333;0.7327;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
DecisionTreeClassifier;0.8918;0.8922;0.8918;0.8919;0.8831;0.8879;0.8831;0.884;0.7333;0.7505;0.7333;0.731;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
DecisionTreeClassifier;0.8884;0.8888;0.8884;0.8885;0.8742;0.8799;0.8742;0.8745;0.7333;0.7491;0.7333;0.731;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
DecisionTreeClassifier;0.8897;0.8901;0.8897;0.8897;0.8708;0.874;0.8708;0.8709;0.7333;0.741;0.7333;0.7306;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=847)
DecisionTreeClassifier;0.8891;0.8895;0.8891;0.8891;0.8753;0.883;0.8753;0.8757;0.7333;0.75;0.7333;0.7279;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
DecisionTreeClassifier;0.8929;0.8932;0.8929;0.893;0.8674;0.8718;0.8674;0.8679;0.7333;0.75;0.7333;0.7279;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
LogisticRegression;0.7015;0.7049;0.7015;0.701;0.6528;0.6557;0.6528;0.6516;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6959;0.699;0.6959;0.6954;0.6831;0.6891;0.6831;0.6816;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6947;0.698;0.6947;0.6942;0.6944;0.6964;0.6944;0.6943;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6941;0.6972;0.6941;0.6935;0.697;0.7043;0.697;0.6957;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.696;0.699;0.696;0.6954;0.6921;0.6936;0.6921;0.6921;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6901;0.6927;0.6901;0.6894;0.7157;0.7187;0.7157;0.7157;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6949;0.6982;0.6949;0.6944;0.7146;0.717;0.7146;0.7135;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6957;0.6994;0.6957;0.6953;0.6944;0.6968;0.6944;0.6939;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6939;0.6968;0.6939;0.6932;0.6978;0.6993;0.6978;0.6979;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7011;0.7041;0.7011;0.7003;0.6611;0.6634;0.6611;0.6606;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6954;0.6985;0.6954;0.6949;0.7056;0.7113;0.7056;0.7046;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6944;0.6969;0.6944;0.6937;0.7067;0.7096;0.7067;0.7062;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6947;0.6978;0.6947;0.694;0.7067;0.7088;0.7067;0.7058;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6972;0.7003;0.6972;0.6966;0.682;0.6841;0.682;0.6816;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6918;0.6942;0.6918;0.6912;0.7079;0.7099;0.7079;0.7071;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6959;0.6988;0.6959;0.6953;0.6843;0.6876;0.6843;0.6836;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.693;0.6959;0.693;0.6924;0.7093;0.7105;0.7093;0.709;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6993;0.7022;0.6993;0.6988;0.6813;0.6892;0.6813;0.68;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6907;0.6932;0.6907;0.6901;0.725;0.7267;0.725;0.7251;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.695;0.6982;0.695;0.6943;0.6865;0.6881;0.6865;0.6869;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6957;0.6985;0.6957;0.695;0.6958;0.7;0.6958;0.6954;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6954;0.6984;0.6954;0.6948;0.7056;0.7095;0.7056;0.7049;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6921;0.6949;0.6921;0.6915;0.7146;0.7157;0.7146;0.7145;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6946;0.6978;0.6946;0.694;0.7082;0.7119;0.7082;0.7075;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6945;0.6975;0.6945;0.6937;0.6857;0.6862;0.6857;0.6856;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6964;0.6996;0.6964;0.696;0.6989;0.7079;0.6989;0.696;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6972;0.7;0.6972;0.6967;0.6876;0.6902;0.6876;0.6872;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6971;0.7001;0.6971;0.6965;0.6723;0.6734;0.6723;0.6715;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6925;0.6955;0.6925;0.6919;0.7011;0.7031;0.7011;0.7006;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6929;0.6957;0.6929;0.6923;0.7112;0.7126;0.7112;0.7105;0.7167;0.7209;0.7167;0.7179;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
DecisionTreeClassifier;0.8927;0.8931;0.8927;0.8928;0.8855;0.8883;0.8855;0.8858;0.7167;0.727;0.7167;0.7149;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 548};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=548)
DecisionTreeClassifier;0.8896;0.8898;0.8896;0.8897;0.8674;0.8739;0.8674;0.868;0.7167;0.7267;0.7167;0.7114;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
SVC;0.8043;0.8199;0.8043;0.8059;0.8685;0.8756;0.8685;0.8697;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8061;0.8224;0.8061;0.8076;0.8573;0.8605;0.8573;0.8581;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8093;0.8247;0.8093;0.8109;0.8507;0.8603;0.8507;0.8519;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8082;0.8243;0.8082;0.8099;0.8225;0.8311;0.8225;0.8227;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.808;0.8226;0.808;0.8096;0.8361;0.8438;0.8361;0.8377;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8078;0.8219;0.8078;0.8094;0.8575;0.8632;0.8575;0.8585;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8051;0.8207;0.8051;0.8065;0.864;0.8714;0.864;0.8651;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8077;0.8237;0.8077;0.8093;0.8315;0.8435;0.8315;0.8327;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8086;0.8233;0.8086;0.8102;0.8382;0.8517;0.8382;0.8396;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8083;0.8238;0.8083;0.8099;0.8551;0.8584;0.8551;0.856;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8059;0.8207;0.8059;0.8076;0.8528;0.8638;0.8528;0.8535;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8029;0.8185;0.8029;0.8046;0.864;0.8732;0.864;0.8651;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8067;0.8223;0.8067;0.8085;0.8461;0.8574;0.8461;0.8473;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8113;0.8267;0.8113;0.8129;0.8258;0.8411;0.8258;0.8267;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8085;0.8222;0.8085;0.8102;0.853;0.8637;0.853;0.8545;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8089;0.8245;0.8089;0.8104;0.8429;0.8581;0.8429;0.845;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8043;0.8195;0.8043;0.8059;0.853;0.8632;0.853;0.8542;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8053;0.8209;0.8053;0.807;0.8551;0.8642;0.8551;0.856;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8042;0.8198;0.8042;0.8059;0.8607;0.8703;0.8607;0.8615;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8063;0.823;0.8063;0.808;0.8539;0.8609;0.8539;0.8549;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8052;0.8215;0.8052;0.807;0.8573;0.8613;0.8573;0.858;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 138};SVC(C=10, random_state=138)
SVC;0.8069;0.8235;0.8069;0.8086;0.8461;0.8604;0.8461;0.8477;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8054;0.8213;0.8054;0.8071;0.8685;0.8745;0.8685;0.8692;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8074;0.8222;0.8074;0.8091;0.8348;0.8434;0.8348;0.8362;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8058;0.8213;0.8058;0.8074;0.8496;0.8565;0.8496;0.8505;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8133;0.8274;0.8133;0.8147;0.8328;0.8417;0.8328;0.8348;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8082;0.8236;0.8082;0.8098;0.8485;0.8574;0.8485;0.8493;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
SVC;0.8074;0.8228;0.8074;0.809;0.8539;0.8612;0.8539;0.8546;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
SVC;0.8074;0.8236;0.8074;0.8091;0.8506;0.8547;0.8506;0.8513;0.7167;0.7286;0.7167;0.7073;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 591};SVC(C=10, random_state=591)
DecisionTreeClassifier;0.8923;0.8928;0.8923;0.8924;0.8642;0.8692;0.8642;0.8648;0.7;0.7045;0.7;0.6984;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 680};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=680)
SVC;0.8066;0.8219;0.8066;0.8082;0.8607;0.8656;0.8607;0.8612;0.7;0.706;0.7;0.6925;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 171};SVC(C=10, random_state=171)
DecisionTreeClassifier;0.8893;0.8897;0.8893;0.8894;0.8833;0.8911;0.8833;0.8837;0.6833;0.6837;0.6833;0.6799;smote;3000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 847};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=847)
