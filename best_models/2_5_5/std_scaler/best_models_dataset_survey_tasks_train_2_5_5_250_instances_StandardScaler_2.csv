Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7567;0.7702;0.7567;0.7579;0.8406;0.8434;0.8406;0.841;0.8667;0.8692;0.8667;0.8669;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7602;0.7723;0.7602;0.7618;0.7826;0.807;0.7826;0.7833;0.8667;0.8692;0.8667;0.8669;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7503;0.7635;0.7503;0.7519;0.7826;0.7827;0.7826;0.7817;0.85;0.8554;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7746;0.7866;0.7746;0.7755;0.7826;0.804;0.7826;0.7869;0.85;0.8554;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7552;0.7664;0.7552;0.7557;0.7971;0.7969;0.7971;0.7967;0.85;0.8554;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.781;0.7917;0.781;0.7821;0.7681;0.7801;0.7681;0.7706;0.85;0.8524;0.85;0.8497;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8197;0.8282;0.8197;0.8211;0.7826;0.7865;0.7826;0.7813;0.85;0.8571;0.85;0.8473;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=324)
KNeighborsClassifier;0.7551;0.7708;0.7551;0.7575;0.8986;0.9028;0.8986;0.8997;0.8333;0.8426;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7744;0.7947;0.7744;0.7741;0.7246;0.7918;0.7246;0.7281;0.8333;0.8426;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7423;0.7609;0.7423;0.7444;0.7391;0.7777;0.7391;0.7383;0.8333;0.8426;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7714;0.7855;0.7714;0.7725;0.7826;0.8222;0.7826;0.7858;0.8333;0.8372;0.8333;0.8339;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7635;0.7773;0.7635;0.7646;0.8261;0.835;0.8261;0.8264;0.8333;0.8365;0.8333;0.8339;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7425;0.7658;0.7425;0.7421;0.8116;0.82;0.8116;0.8138;0.8333;0.8365;0.8333;0.8339;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7585;0.7709;0.7585;0.7592;0.7681;0.7849;0.7681;0.7723;0.8333;0.8424;0.8333;0.8336;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.744;0.7656;0.744;0.7443;0.7971;0.7974;0.7971;0.7962;0.8333;0.8424;0.8333;0.8336;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7584;0.7721;0.7584;0.7588;0.7681;0.7722;0.7681;0.7666;0.8333;0.8424;0.8333;0.8336;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.7955;0.8042;0.7955;0.795;0.8406;0.8406;0.8406;0.8406;0.8333;0.8361;0.8333;0.8315;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 59};RandomForestClassifier(n_estimators=5, random_state=59)
RandomForestClassifier;0.8003;0.8088;0.8003;0.8007;0.8261;0.83;0.8261;0.8263;0.8333;0.844;0.8333;0.8311;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 537};RandomForestClassifier(n_estimators=5, random_state=537)
KNeighborsClassifier;0.7551;0.773;0.7551;0.7562;0.7826;0.7779;0.7826;0.7781;0.8333;0.8337;0.8333;0.831;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7455;0.7627;0.7455;0.7484;0.8406;0.8474;0.8406;0.8397;0.8167;0.8304;0.8167;0.8176;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7648;0.7871;0.7648;0.7662;0.7826;0.7877;0.7826;0.7842;0.8167;0.8304;0.8167;0.8176;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7553;0.7665;0.7553;0.7566;0.8261;0.8309;0.8261;0.8278;0.8167;0.8205;0.8167;0.8172;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8309;0.8391;0.8309;0.8314;0.7826;0.7878;0.7826;0.7834;0.8167;0.831;0.8167;0.8158;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 59};RandomForestClassifier(n_estimators=20, random_state=59)
MLPClassifier;0.7922;0.8059;0.7922;0.7925;0.8406;0.8422;0.8406;0.8395;0.8167;0.8193;0.8167;0.8157;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
RandomForestClassifier;0.8099;0.8144;0.8099;0.8098;0.8261;0.8314;0.8261;0.8277;0.8167;0.829;0.8167;0.8147;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 59};RandomForestClassifier(n_estimators=10, random_state=59)
RandomForestClassifier;0.8052;0.8145;0.8052;0.8042;0.8261;0.83;0.8261;0.8263;0.8167;0.8326;0.8167;0.8114;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 891};RandomForestClassifier(n_estimators=10, random_state=891)
RandomForestClassifier;0.8357;0.8406;0.8357;0.8352;0.7246;0.7282;0.7246;0.7257;0.8167;0.8302;0.8167;0.8114;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 537};RandomForestClassifier(n_estimators=20, random_state=537)
SVC;0.7246;0.7598;0.7246;0.7231;0.7536;0.7629;0.7536;0.7521;0.8;0.819;0.8;0.8014;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
KNeighborsClassifier;0.7456;0.7543;0.7456;0.7452;0.8551;0.8629;0.8551;0.8565;0.8;0.8187;0.8;0.8008;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.76;0.7745;0.76;0.7601;0.7681;0.7721;0.7681;0.7694;0.8;0.8187;0.8;0.8008;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7633;0.7839;0.7633;0.765;0.8841;0.8981;0.8841;0.8847;0.8;0.8187;0.8;0.8008;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7746;0.7909;0.7746;0.7765;0.8261;0.8323;0.8261;0.8267;0.8;0.8187;0.8;0.8008;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7647;0.7784;0.7647;0.766;0.7246;0.7407;0.7246;0.728;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.7795;0.7922;0.7795;0.7799;0.7536;0.7532;0.7536;0.7532;0.8;0.802;0.8;0.7997;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
RandomForestClassifier;0.8067;0.812;0.8067;0.8075;0.8696;0.8731;0.8696;0.8696;0.8;0.8151;0.8;0.7996;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 891};RandomForestClassifier(n_estimators=5, random_state=891)
RandomForestClassifier;0.8405;0.8479;0.8405;0.8419;0.7391;0.7411;0.7391;0.7385;0.8;0.8158;0.8;0.7967;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 891};RandomForestClassifier(n_estimators=10, random_state=891)
RandomForestClassifier;0.8231;0.8318;0.8231;0.8238;0.6812;0.6912;0.6812;0.6837;0.7833;0.8116;0.7833;0.7861;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 59};RandomForestClassifier(n_estimators=10, random_state=59)
SVC;0.7329;0.7745;0.7329;0.7327;0.7681;0.7807;0.7681;0.7675;0.7833;0.7986;0.7833;0.7854;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
RandomForestClassifier;0.8277;0.8364;0.8277;0.8275;0.7826;0.8204;0.7826;0.7883;0.7833;0.8044;0.7833;0.7852;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 891};RandomForestClassifier(n_estimators=20, random_state=891)
RandomForestClassifier;0.8229;0.8336;0.8229;0.8233;0.7681;0.7813;0.7681;0.7721;0.7833;0.8044;0.7833;0.7852;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 537};RandomForestClassifier(n_estimators=10, random_state=537)
RandomForestClassifier;0.8035;0.8114;0.8035;0.8051;0.8261;0.83;0.8261;0.8261;0.7833;0.7905;0.7833;0.7838;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 537};RandomForestClassifier(n_estimators=5, random_state=537)
KNeighborsClassifier;0.7665;0.7808;0.7665;0.7674;0.8696;0.8849;0.8696;0.8725;0.7833;0.8074;0.7833;0.7836;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.7858;0.7966;0.7858;0.7863;0.8406;0.8649;0.8406;0.8441;0.7833;0.7857;0.7833;0.7835;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
KNeighborsClassifier;0.7858;0.7995;0.7858;0.7867;0.7101;0.727;0.7101;0.7148;0.7833;0.7944;0.7833;0.7835;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8132;0.8252;0.8132;0.8146;0.7101;0.7371;0.7101;0.7126;0.7833;0.7944;0.7833;0.7835;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=324)
KNeighborsClassifier;0.7714;0.7841;0.7714;0.7728;0.7826;0.8429;0.7826;0.7842;0.7833;0.7944;0.7833;0.7835;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8099;0.8193;0.8099;0.8116;0.8261;0.8238;0.8261;0.8239;0.7833;0.7913;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=495)
DecisionTreeClassifier;0.7955;0.8059;0.7955;0.7971;0.8116;0.8132;0.8116;0.8106;0.7833;0.7876;0.7833;0.7825;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=495)
DecisionTreeClassifier;0.8004;0.8078;0.8004;0.8007;0.7971;0.8076;0.7971;0.7939;0.7833;0.7876;0.7833;0.7825;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=163)
DecisionTreeClassifier;0.8083;0.8269;0.8083;0.8108;0.7391;0.758;0.7391;0.7381;0.7833;0.7876;0.7833;0.7825;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=495)
RandomForestClassifier;0.8115;0.816;0.8115;0.8119;0.8116;0.8207;0.8116;0.8126;0.7833;0.7948;0.7833;0.7823;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 891};RandomForestClassifier(n_estimators=20, random_state=891)
DecisionTreeClassifier;0.7939;0.8093;0.7939;0.7955;0.8406;0.8478;0.8406;0.8422;0.7833;0.7861;0.7833;0.7823;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=324)
MLPClassifier;0.8003;0.8108;0.8003;0.7996;0.7826;0.7903;0.7826;0.7831;0.7833;0.7861;0.7833;0.7823;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
DecisionTreeClassifier;0.8069;0.8216;0.8069;0.8089;0.7391;0.7635;0.7391;0.743;0.7833;0.7831;0.7833;0.7822;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=163)
RandomForestClassifier;0.8133;0.8221;0.8133;0.8139;0.8406;0.8397;0.8406;0.8399;0.7833;0.7906;0.7833;0.7822;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 59};RandomForestClassifier(n_estimators=20, random_state=59)
RandomForestClassifier;0.8083;0.818;0.8083;0.8088;0.8406;0.8466;0.8406;0.8406;0.7833;0.7906;0.7833;0.7822;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 891};RandomForestClassifier(n_estimators=20, random_state=891)
KNeighborsClassifier;0.7648;0.7863;0.7648;0.7673;0.7681;0.7704;0.7681;0.769;0.7833;0.7956;0.7833;0.781;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7986;0.8078;0.7986;0.7981;0.7101;0.7197;0.7101;0.7135;0.7833;0.7823;0.7833;0.7805;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7939;0.8081;0.7939;0.7938;0.7536;0.759;0.7536;0.7553;0.7833;0.786;0.7833;0.7804;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
RandomForestClassifier;0.8196;0.8242;0.8196;0.8199;0.7826;0.78;0.7826;0.7713;0.7833;0.7945;0.7833;0.7802;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 891};RandomForestClassifier(n_estimators=20, random_state=891)
MLPClassifier;0.7842;0.7975;0.7842;0.7857;0.8261;0.8305;0.8261;0.8272;0.7833;0.7875;0.7833;0.7801;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
SVC;0.7294;0.7696;0.7294;0.7286;0.7681;0.7697;0.7681;0.7687;0.7667;0.8069;0.7667;0.7701;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
SVC;0.7263;0.7639;0.7263;0.7272;0.7536;0.7615;0.7536;0.7542;0.7667;0.7897;0.7667;0.7698;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
SVC;0.7278;0.7668;0.7278;0.7284;0.7681;0.7825;0.7681;0.7669;0.7667;0.7897;0.7667;0.7698;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
SVC;0.7311;0.7664;0.7311;0.7304;0.7681;0.7739;0.7681;0.7692;0.7667;0.7897;0.7667;0.7698;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
SVC;0.7181;0.7603;0.7181;0.7179;0.8986;0.8997;0.8986;0.8988;0.7667;0.7922;0.7667;0.7695;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
SVC;0.7327;0.7656;0.7327;0.7343;0.8116;0.8211;0.8116;0.8126;0.7667;0.7922;0.7667;0.7695;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
SVC;0.7183;0.7534;0.7183;0.7182;0.7971;0.819;0.7971;0.7984;0.7667;0.7848;0.7667;0.7689;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
SVC;0.7197;0.7649;0.7197;0.7186;0.7536;0.7675;0.7536;0.7576;0.7667;0.7878;0.7667;0.7685;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
SVC;0.7326;0.7706;0.7326;0.7325;0.7826;0.7901;0.7826;0.7836;0.7667;0.7878;0.7667;0.7685;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
KNeighborsClassifier;0.7664;0.7786;0.7664;0.7667;0.7536;0.7701;0.7536;0.7563;0.7667;0.7851;0.7667;0.7678;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.7293;0.7673;0.7293;0.7291;0.7536;0.7791;0.7536;0.7514;0.7667;0.78;0.7667;0.7677;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
MLPClassifier;0.797;0.8082;0.797;0.7966;0.7246;0.7414;0.7246;0.7278;0.7667;0.7728;0.7667;0.7676;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
DecisionTreeClassifier;0.8132;0.8244;0.8132;0.8141;0.7101;0.7101;0.7101;0.7101;0.7667;0.7775;0.7667;0.7675;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=495)
RandomForestClassifier;0.8389;0.8498;0.8389;0.8396;0.7681;0.7663;0.7681;0.7655;0.7667;0.7765;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 537};RandomForestClassifier(n_estimators=20, random_state=537)
RandomForestClassifier;0.8084;0.8189;0.8084;0.8087;0.7971;0.8396;0.7971;0.8016;0.7667;0.7765;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 537};RandomForestClassifier(n_estimators=20, random_state=537)
RandomForestClassifier;0.8068;0.8128;0.8068;0.8072;0.8116;0.8195;0.8116;0.8131;0.7667;0.7765;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 59};RandomForestClassifier(n_estimators=20, random_state=59)
RandomForestClassifier;0.8181;0.8279;0.8181;0.8192;0.8551;0.8627;0.8551;0.8526;0.7667;0.7778;0.7667;0.7668;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 537};RandomForestClassifier(n_estimators=20, random_state=537)
SVC;0.7229;0.7583;0.7229;0.7227;0.7681;0.8104;0.7681;0.7747;0.7667;0.7778;0.7667;0.7668;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
DecisionTreeClassifier;0.7939;0.8086;0.7939;0.7946;0.8406;0.8406;0.8406;0.8398;0.7667;0.7761;0.7667;0.7667;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=163)
DecisionTreeClassifier;0.818;0.8301;0.818;0.8195;0.7536;0.7566;0.7536;0.7535;0.7667;0.7671;0.7667;0.7666;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=163)
MLPClassifier;0.7825;0.7989;0.7825;0.7828;0.8261;0.8441;0.8261;0.8271;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
RandomForestClassifier;0.8212;0.8298;0.8212;0.8221;0.8406;0.85;0.8406;0.8415;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 891};RandomForestClassifier(n_estimators=20, random_state=891)
DecisionTreeClassifier;0.7939;0.8054;0.7939;0.7952;0.8261;0.8635;0.8261;0.8268;0.7667;0.7817;0.7667;0.7657;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=495)
RandomForestClassifier;0.8389;0.8486;0.8389;0.8393;0.7246;0.7555;0.7246;0.731;0.7667;0.7817;0.7667;0.7657;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 59};RandomForestClassifier(n_estimators=20, random_state=59)
MLPClassifier;0.7776;0.7922;0.7776;0.7762;0.8551;0.8617;0.8551;0.8545;0.7667;0.7736;0.7667;0.765;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
RandomForestClassifier;0.8098;0.8245;0.8098;0.8094;0.8261;0.8258;0.8261;0.8257;0.7667;0.7794;0.7667;0.7648;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 59};RandomForestClassifier(n_estimators=5, random_state=59)
MLPClassifier;0.7922;0.8049;0.7922;0.7935;0.7826;0.7835;0.7826;0.7764;0.7667;0.7708;0.7667;0.7646;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
MLPClassifier;0.7793;0.7907;0.7793;0.7802;0.8261;0.8255;0.8261;0.825;0.7667;0.7712;0.7667;0.7645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
MLPClassifier;0.7873;0.7957;0.7873;0.7879;0.7681;0.7828;0.7681;0.7668;0.7667;0.7712;0.7667;0.7645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
MLPClassifier;0.7922;0.8052;0.7922;0.7931;0.7681;0.7779;0.7681;0.7673;0.7667;0.7712;0.7667;0.7645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
MLPClassifier;0.7907;0.8032;0.7907;0.7907;0.8406;0.8404;0.8406;0.8402;0.7667;0.7712;0.7667;0.7645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
MLPClassifier;0.7728;0.789;0.7728;0.7728;0.8551;0.866;0.8551;0.8576;0.7667;0.7712;0.7667;0.7645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
MLPClassifier;0.7985;0.8139;0.7985;0.7988;0.7246;0.7392;0.7246;0.7267;0.7667;0.7712;0.7667;0.7645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
MLPClassifier;0.7921;0.7983;0.7921;0.7922;0.7971;0.8044;0.7971;0.7989;0.7667;0.774;0.7667;0.7638;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
SVC;0.7263;0.7697;0.7263;0.7267;0.8261;0.8429;0.8261;0.8277;0.75;0.7802;0.75;0.7534;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
SVC;0.7359;0.772;0.7359;0.7353;0.7391;0.78;0.7391;0.7432;0.75;0.7761;0.75;0.7526;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
SVC;0.715;0.7519;0.715;0.7136;0.913;0.9231;0.913;0.9145;0.75;0.7747;0.75;0.7524;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
SVC;0.7327;0.7678;0.7327;0.7319;0.6812;0.744;0.6812;0.6771;0.75;0.7747;0.75;0.7524;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
SVC;0.728;0.7712;0.728;0.7287;0.8841;0.8913;0.8841;0.8842;0.75;0.7747;0.75;0.7524;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
SVC;0.7311;0.7724;0.7311;0.7303;0.7681;0.7813;0.7681;0.7721;0.75;0.7747;0.75;0.7524;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
RandomForestClassifier;0.8197;0.8265;0.8197;0.8193;0.7971;0.8104;0.7971;0.8001;0.75;0.763;0.75;0.752;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 891};RandomForestClassifier(n_estimators=10, random_state=891)
RandomForestClassifier;0.8035;0.8125;0.8035;0.803;0.8696;0.8707;0.8696;0.8698;0.75;0.763;0.75;0.752;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 537};RandomForestClassifier(n_estimators=20, random_state=537)
SVC;0.7262;0.7623;0.7262;0.7283;0.7536;0.7739;0.7536;0.7524;0.75;0.7765;0.75;0.7519;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
SVC;0.7165;0.7536;0.7165;0.7157;0.8696;0.8713;0.8696;0.8701;0.75;0.7689;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
SVC;0.7134;0.7531;0.7134;0.7118;0.8551;0.8579;0.8551;0.8555;0.75;0.7689;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
DecisionTreeClassifier;0.7922;0.8077;0.7922;0.7941;0.7826;0.8004;0.7826;0.7866;0.75;0.7689;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=163)
SVC;0.7311;0.7736;0.7311;0.7315;0.8261;0.8294;0.8261;0.8269;0.75;0.7775;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
DecisionTreeClassifier;0.789;0.8035;0.789;0.7897;0.7681;0.7879;0.7681;0.7692;0.75;0.7616;0.75;0.7512;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=324)
RandomForestClassifier;0.8276;0.8333;0.8276;0.8277;0.8406;0.8422;0.8406;0.8411;0.75;0.7558;0.75;0.7505;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 537};RandomForestClassifier(n_estimators=20, random_state=537)
DecisionTreeClassifier;0.8051;0.816;0.8051;0.8053;0.8406;0.8449;0.8406;0.8393;0.75;0.7535;0.75;0.7505;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=163)
RandomForestClassifier;0.8196;0.8291;0.8196;0.8191;0.7826;0.7818;0.7826;0.775;0.75;0.7603;0.75;0.7505;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 537};RandomForestClassifier(n_estimators=20, random_state=537)
DecisionTreeClassifier;0.8035;0.8167;0.8035;0.8041;0.7826;0.7885;0.7826;0.7805;0.75;0.7532;0.75;0.7504;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=324)
SVC;0.7214;0.7598;0.7214;0.7224;0.7826;0.8038;0.7826;0.785;0.75;0.7639;0.75;0.7504;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
SVC;0.7296;0.7686;0.7296;0.7291;0.7391;0.7496;0.7391;0.7418;0.75;0.77;0.75;0.7504;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
SVC;0.7278;0.761;0.7278;0.7297;0.7826;0.8139;0.7826;0.7803;0.75;0.7639;0.75;0.7504;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
RandomForestClassifier;0.8179;0.824;0.8179;0.8189;0.8261;0.8356;0.8261;0.8284;0.75;0.7564;0.75;0.7503;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 891};RandomForestClassifier(n_estimators=20, random_state=891)
DecisionTreeClassifier;0.8213;0.8324;0.8213;0.8228;0.7971;0.8182;0.7971;0.8013;0.75;0.7513;0.75;0.7503;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=163)
DecisionTreeClassifier;0.8004;0.8133;0.8004;0.802;0.7536;0.7506;0.7536;0.7504;0.75;0.7543;0.75;0.7501;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=495)
SVC;0.7216;0.7597;0.7216;0.7218;0.8261;0.8342;0.8261;0.8273;0.75;0.7741;0.75;0.7501;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 389};SVC(C=10, random_state=389)
SVC;0.7246;0.7605;0.7246;0.7248;0.7681;0.7746;0.7681;0.7629;0.75;0.7604;0.75;0.7497;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 785};SVC(C=10, random_state=785)
MLPClassifier;0.797;0.808;0.797;0.7976;0.8261;0.8573;0.8261;0.8303;0.75;0.7632;0.75;0.7496;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
RandomForestClassifier;0.81;0.8202;0.81;0.8113;0.7971;0.8086;0.7971;0.7959;0.75;0.7774;0.75;0.7495;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 59};RandomForestClassifier(n_estimators=10, random_state=59)
MLPClassifier;0.7891;0.8067;0.7891;0.7888;0.8116;0.8275;0.8116;0.8145;0.75;0.7593;0.75;0.7492;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
KNeighborsClassifier;0.7664;0.7772;0.7664;0.7675;0.8261;0.8365;0.8261;0.8267;0.75;0.7558;0.75;0.7492;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.7891;0.8011;0.7891;0.79;0.8261;0.8261;0.8261;0.8261;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
MLPClassifier;0.7825;0.7955;0.7825;0.7833;0.8551;0.8549;0.8551;0.8547;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7857;0.7997;0.7857;0.7856;0.7826;0.7836;0.7826;0.7824;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7938;0.8114;0.7938;0.7949;0.8261;0.8394;0.8261;0.8245;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
MLPClassifier;0.7955;0.8044;0.7955;0.7952;0.7536;0.7689;0.7536;0.7551;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
MLPClassifier;0.7794;0.7958;0.7794;0.7786;0.9275;0.928;0.9275;0.9275;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
DecisionTreeClassifier;0.7923;0.8068;0.7923;0.7941;0.8261;0.848;0.8261;0.8274;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=324)
DecisionTreeClassifier;0.8116;0.8256;0.8116;0.8123;0.8261;0.8289;0.8261;0.8236;0.75;0.7567;0.75;0.749;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=495)
MLPClassifier;0.7874;0.7995;0.7874;0.7868;0.8406;0.8463;0.8406;0.841;0.75;0.7557;0.75;0.7487;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
DecisionTreeClassifier;0.8083;0.8259;0.8083;0.8103;0.7681;0.7778;0.7681;0.7703;0.75;0.7513;0.75;0.7485;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=495)
MLPClassifier;0.7986;0.812;0.7986;0.7987;0.8551;0.8617;0.8551;0.8563;0.75;0.7569;0.75;0.7483;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 483, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=483)
MLPClassifier;0.7809;0.7944;0.7809;0.7803;0.8116;0.8292;0.8116;0.8129;0.75;0.7569;0.75;0.7483;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 366, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=366)
RandomForestClassifier;0.7954;0.8053;0.7954;0.7959;0.8406;0.8413;0.8406;0.8377;0.7333;0.7558;0.7333;0.7373;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 59};RandomForestClassifier(n_estimators=5, random_state=59)
SVC;0.7166;0.7548;0.7166;0.716;0.8116;0.8318;0.8116;0.8155;0.7333;0.7608;0.7333;0.7346;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
DecisionTreeClassifier;0.8261;0.8369;0.8261;0.8273;0.7391;0.7531;0.7391;0.7436;0.7333;0.7399;0.7333;0.7342;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=324)
DecisionTreeClassifier;0.7971;0.8113;0.7971;0.7981;0.8261;0.8418;0.8261;0.8286;0.7333;0.7423;0.7333;0.734;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=163)
SVC;0.7278;0.771;0.7278;0.7262;0.7826;0.8115;0.7826;0.7866;0.7333;0.7504;0.7333;0.7337;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 132};SVC(C=10, random_state=132)
DecisionTreeClassifier;0.8069;0.8193;0.8069;0.8075;0.7971;0.8044;0.7971;0.7991;0.7333;0.7474;0.7333;0.7329;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=163)
MLPClassifier;0.7906;0.8016;0.7906;0.7915;0.8406;0.8593;0.8406;0.8445;0.7333;0.7408;0.7333;0.7327;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 383, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=383)
DecisionTreeClassifier;0.8228;0.8363;0.8228;0.8239;0.6812;0.7982;0.6812;0.6844;0.7333;0.748;0.7333;0.7327;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=495)
DecisionTreeClassifier;0.802;0.8168;0.802;0.8037;0.8116;0.81;0.8116;0.8089;0.7167;0.7275;0.7167;0.7169;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 163};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=163)
DecisionTreeClassifier;0.7939;0.8115;0.7939;0.7939;0.7971;0.7994;0.7971;0.7964;0.7167;0.7248;0.7167;0.7169;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=324)
LogisticRegression;0.699;0.7249;0.699;0.6967;0.6522;0.658;0.6522;0.6531;0.7;0.7142;0.7;0.7021;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.6861;0.7068;0.6861;0.6861;0.7536;0.787;0.7536;0.7534;0.7;0.7142;0.7;0.7021;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
DecisionTreeClassifier;0.8116;0.8236;0.8116;0.8137;0.7826;0.8019;0.7826;0.788;0.7;0.7081;0.7;0.7017;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=324)
LogisticRegression;0.6988;0.7246;0.6988;0.6961;0.6957;0.7297;0.6957;0.6891;0.7;0.7083;0.7;0.701;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.7021;0.7291;0.7021;0.7003;0.6377;0.6627;0.6377;0.6405;0.7;0.7083;0.7;0.701;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6924;0.7179;0.6924;0.6912;0.7101;0.7118;0.7101;0.7066;0.7;0.7083;0.7;0.701;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.6973;0.7256;0.6973;0.6955;0.7246;0.7436;0.7246;0.7192;0.7;0.7083;0.7;0.701;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
DecisionTreeClassifier;0.8084;0.8258;0.8084;0.8096;0.7101;0.722;0.7101;0.714;0.7;0.7029;0.7;0.7003;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 324};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=324)
DecisionTreeClassifier;0.8067;0.8241;0.8067;0.8074;0.8696;0.8742;0.8696;0.8675;0.7;0.7029;0.7;0.7003;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 495};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=495)
LogisticRegression;0.7021;0.7222;0.7021;0.7023;0.7246;0.7598;0.7246;0.7186;0.6833;0.6902;0.6833;0.6849;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.6925;0.7217;0.6925;0.6919;0.7101;0.7173;0.7101;0.71;0.6833;0.6946;0.6833;0.6841;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6956;0.7189;0.6956;0.6953;0.6957;0.6966;0.6957;0.6953;0.6833;0.6946;0.6833;0.6841;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.6925;0.7173;0.6925;0.6926;0.6957;0.7452;0.6957;0.6957;0.6667;0.672;0.6667;0.6684;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.7006;0.7245;0.7006;0.6998;0.7536;0.775;0.7536;0.7561;0.6667;0.672;0.6667;0.6684;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.707;0.7284;0.707;0.7054;0.6522;0.6821;0.6522;0.6568;0.6667;0.672;0.6667;0.6684;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6796;0.7099;0.6796;0.677;0.8116;0.8144;0.8116;0.812;0.6667;0.672;0.6667;0.6684;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.7053;0.7295;0.7053;0.7055;0.6522;0.6676;0.6522;0.6528;0.6667;0.6707;0.6667;0.6679;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.7117;0.7308;0.7117;0.7124;0.6232;0.6508;0.6232;0.6118;0.6667;0.6678;0.6667;0.6669;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6988;0.7145;0.6988;0.6966;0.6522;0.6644;0.6522;0.6537;0.6667;0.6661;0.6667;0.6661;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.6989;0.7179;0.6989;0.6964;0.6957;0.7295;0.6957;0.701;0.65;0.6582;0.65;0.652;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.7054;0.7284;0.7054;0.7058;0.6522;0.7064;0.6522;0.6499;0.65;0.6582;0.65;0.652;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.702;0.7255;0.702;0.7027;0.6377;0.6607;0.6377;0.6396;0.65;0.6582;0.65;0.652;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.7053;0.7352;0.7053;0.704;0.6812;0.7213;0.6812;0.6829;0.65;0.652;0.65;0.6507;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.6989;0.719;0.6989;0.6979;0.7246;0.7587;0.7246;0.7227;0.65;0.65;0.65;0.65;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.6958;0.7235;0.6958;0.6942;0.7971;0.8091;0.7971;0.7988;0.65;0.6508;0.65;0.6496;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6973;0.7225;0.6973;0.6964;0.7246;0.7825;0.7246;0.7161;0.6333;0.6423;0.6333;0.6357;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.6909;0.7166;0.6909;0.6908;0.7391;0.7677;0.7391;0.7378;0.6333;0.6423;0.6333;0.6357;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.7069;0.7308;0.7069;0.707;0.6232;0.6418;0.6232;0.6219;0.6333;0.6377;0.6333;0.6344;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.7036;0.7247;0.7036;0.7021;0.6522;0.6999;0.6522;0.6553;0.6333;0.6377;0.6333;0.6344;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
LogisticRegression;0.6957;0.7217;0.6957;0.6949;0.7101;0.7271;0.7101;0.7117;0.6333;0.6377;0.6333;0.6344;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6956;0.7218;0.6956;0.6933;0.7101;0.7224;0.7101;0.7113;0.6333;0.6359;0.6333;0.6335;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 763, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=763)"
LogisticRegression;0.6925;0.7177;0.6925;0.6916;0.7246;0.7294;0.7246;0.7224;0.6333;0.6327;0.6333;0.6328;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 903, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=903)"
LogisticRegression;0.6924;0.7163;0.6924;0.6922;0.7681;0.7762;0.7681;0.7667;0.6167;0.6217;0.6167;0.6183;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 537, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=537)"
