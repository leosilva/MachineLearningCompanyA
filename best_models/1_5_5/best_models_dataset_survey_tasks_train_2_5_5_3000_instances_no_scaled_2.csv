Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8662;0.868;0.8662;0.8663;0.8574;0.8569;0.8574;0.8571;0.85;0.8505;0.85;0.8489;0.9671;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 981};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=981)
DecisionTreeClassifier;0.8697;0.8718;0.8697;0.8698;0.8507;0.8491;0.8507;0.8496;0.85;0.8505;0.85;0.8489;0.9678;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 74};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=74)
DecisionTreeClassifier;0.8655;0.8667;0.8655;0.8653;0.8596;0.865;0.8596;0.8605;0.8333;0.833;0.8333;0.8328;0.9683;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 749};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=749)
RandomForestClassifier;0.8683;0.871;0.8683;0.8683;0.8507;0.8519;0.8507;0.8509;0.8167;0.8285;0.8167;0.8184;0.9689;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 807};RandomForestClassifier(n_estimators=10, random_state=807)
KNeighborsClassifier;0.8505;0.8525;0.8505;0.8508;0.8574;0.8569;0.8574;0.857;0.8167;0.819;0.8167;0.8164;0.949;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8354;0.8404;0.8354;0.8354;0.8848;0.8877;0.8848;0.8852;0.8167;0.819;0.8167;0.8164;0.9417;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.8591;0.8608;0.8591;0.8596;0.8725;0.8719;0.8725;0.8721;0.8167;0.8252;0.8167;0.8149;0.967;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 778};RandomForestClassifier(n_estimators=5, random_state=778)
MLPClassifier;0.8283;0.8333;0.8283;0.8288;0.821;0.8256;0.821;0.8224;0.8;0.8013;0.8;0.8003;0.952;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
RandomForestClassifier;0.8698;0.8725;0.8698;0.87;0.8484;0.8518;0.8484;0.8493;0.7833;0.7912;0.7833;0.7848;0.9694;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 309};RandomForestClassifier(n_estimators=5, random_state=309)
KNeighborsClassifier;0.8365;0.841;0.8365;0.8367;0.8557;0.86;0.8557;0.8568;0.7833;0.7883;0.7833;0.7827;0.9436;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8275;0.8359;0.8275;0.8276;0.8456;0.8443;0.8456;0.8436;0.7667;0.7822;0.7667;0.7661;0.9528;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=893)
MLPClassifier;0.815;0.8206;0.815;0.8134;0.8311;0.8301;0.8311;0.8283;0.7667;0.7782;0.7667;0.7661;0.9514;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 985, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=985)
SVC;0.7308;0.7608;0.7308;0.7323;0.7908;0.7933;0.7908;0.7914;0.7333;0.7345;0.7333;0.7336;0.8797;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 66};SVC(C=10, probability=True, random_state=66)
SVC;0.7327;0.7632;0.7327;0.7341;0.7891;0.7939;0.7891;0.7903;0.7333;0.7345;0.7333;0.7336;0.8782;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 884};SVC(C=10, probability=True, random_state=884)
SVC;0.7297;0.76;0.7297;0.7313;0.7925;0.7961;0.7925;0.7933;0.7333;0.7345;0.7333;0.7336;0.8771;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, probability=True, random_state=231)
LogisticRegression;0.6988;0.7182;0.6988;0.699;0.703;0.7233;0.703;0.7027;0.65;0.6665;0.65;0.652;0.8469;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 863, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=863)"
LogisticRegression;0.7032;0.723;0.7032;0.7036;0.6935;0.7105;0.6935;0.6925;0.65;0.6665;0.65;0.652;0.8484;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 470, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=470)"
LogisticRegression;0.6997;0.7186;0.6997;0.7002;0.7064;0.7336;0.7064;0.7052;0.65;0.6665;0.65;0.652;0.8455;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
