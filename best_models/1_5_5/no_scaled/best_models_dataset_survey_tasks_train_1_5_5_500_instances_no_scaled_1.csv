Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9336;0.9366;0.9336;0.9338;0.9583;0.9589;0.9583;0.9581;0.8667;0.869;0.8667;0.8674;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9383;0.9402;0.9383;0.9382;0.9167;0.9191;0.9167;0.9173;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
RandomForestClassifier;0.9391;0.9406;0.9391;0.9391;0.8958;0.9007;0.8958;0.896;0.85;0.8505;0.85;0.8499;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
RandomForestClassifier;0.9336;0.936;0.9336;0.9336;0.9306;0.9365;0.9306;0.931;0.85;0.8505;0.85;0.8499;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
RandomForestClassifier;0.9344;0.936;0.9344;0.9343;0.9722;0.9724;0.9722;0.9722;0.85;0.8544;0.85;0.8499;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9352;0.9369;0.9352;0.9349;0.9444;0.9481;0.9444;0.9441;0.85;0.8519;0.85;0.8498;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9405;0.9421;0.9405;0.9406;0.9097;0.9133;0.9097;0.9103;0.85;0.8497;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9398;0.9419;0.9398;0.94;0.9236;0.9284;0.9236;0.9243;0.85;0.8497;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
DecisionTreeClassifier;0.9013;0.9017;0.9013;0.9011;0.8958;0.8982;0.8958;0.8962;0.85;0.8497;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
DecisionTreeClassifier;0.9082;0.9102;0.9082;0.9081;0.9167;0.9182;0.9167;0.9168;0.85;0.8497;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
DecisionTreeClassifier;0.8935;0.8955;0.8935;0.8935;0.9375;0.9391;0.9375;0.9377;0.85;0.8563;0.85;0.8487;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
RandomForestClassifier;0.9352;0.9367;0.9352;0.9351;0.9236;0.9268;0.9236;0.9243;0.8333;0.8347;0.8333;0.8337;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
RandomForestClassifier;0.9337;0.9354;0.9337;0.9336;0.9167;0.9219;0.9167;0.9176;0.8333;0.8347;0.8333;0.8337;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9398;0.942;0.9398;0.9397;0.9653;0.9657;0.9653;0.9654;0.8333;0.8379;0.8333;0.8333;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
KNeighborsClassifier;0.8403;0.8444;0.8403;0.8405;0.9236;0.9261;0.9236;0.9241;0.8333;0.8354;0.8333;0.833;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9437;0.9457;0.9437;0.9437;0.9097;0.913;0.9097;0.9087;0.8333;0.8331;0.8333;0.8329;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
RandomForestClassifier;0.9382;0.9396;0.9382;0.9381;0.9583;0.9589;0.9583;0.9583;0.8333;0.8331;0.8333;0.8329;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
DecisionTreeClassifier;0.8951;0.8966;0.8951;0.895;0.8681;0.8693;0.8681;0.8669;0.8333;0.8374;0.8333;0.8328;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
DecisionTreeClassifier;0.902;0.9052;0.902;0.9021;0.9097;0.911;0.9097;0.9091;0.8333;0.8383;0.8333;0.8327;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
DecisionTreeClassifier;0.9059;0.9074;0.9059;0.9059;0.8403;0.8415;0.8403;0.8404;0.8333;0.8383;0.8333;0.8327;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
DecisionTreeClassifier;0.9051;0.9076;0.9051;0.9054;0.875;0.881;0.875;0.8749;0.8333;0.8367;0.8333;0.8324;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.9013;0.9053;0.9013;0.9014;0.8472;0.8535;0.8472;0.8476;0.8333;0.8367;0.8333;0.8324;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
RandomForestClassifier;0.9383;0.9403;0.9383;0.9384;0.9444;0.9447;0.9444;0.9444;0.8333;0.8322;0.8333;0.8324;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
DecisionTreeClassifier;0.902;0.903;0.902;0.9018;0.9097;0.9128;0.9097;0.9092;0.8333;0.8468;0.8333;0.8321;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.9135;0.9145;0.9135;0.9136;0.875;0.8772;0.875;0.8758;0.8333;0.8383;0.8333;0.831;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
RandomForestClassifier;0.9367;0.9381;0.9367;0.9366;0.8889;0.8955;0.8889;0.8884;0.8167;0.8171;0.8167;0.8166;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 656};RandomForestClassifier(n_estimators=10, random_state=656)
DecisionTreeClassifier;0.9012;0.9038;0.9012;0.9012;0.8889;0.8908;0.8889;0.8894;0.8167;0.8215;0.8167;0.8165;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
RandomForestClassifier;0.9313;0.934;0.9313;0.9313;0.9653;0.9653;0.9653;0.9653;0.8167;0.8164;0.8167;0.8162;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
MLPClassifier;0.7831;0.7946;0.7831;0.7827;0.875;0.8785;0.875;0.8732;0.8167;0.8208;0.8167;0.8161;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
RandomForestClassifier;0.936;0.9378;0.936;0.9359;0.9097;0.9212;0.9097;0.9102;0.8167;0.8217;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9383;0.9398;0.9383;0.9383;0.9444;0.947;0.9444;0.9446;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
KNeighborsClassifier;0.8534;0.8561;0.8534;0.853;0.9236;0.9284;0.9236;0.9243;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9306;0.9326;0.9306;0.9307;0.9444;0.9455;0.9444;0.9445;0.8167;0.8217;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.9359;0.9375;0.9359;0.936;0.9306;0.9308;0.9306;0.9302;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
DecisionTreeClassifier;0.9013;0.9029;0.9013;0.9011;0.9306;0.9325;0.9306;0.9309;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
DecisionTreeClassifier;0.9043;0.9049;0.9043;0.9042;0.8472;0.8518;0.8472;0.8491;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
KNeighborsClassifier;0.8488;0.8514;0.8488;0.8485;0.9028;0.9062;0.9028;0.9031;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8488;0.8516;0.8488;0.8486;0.9514;0.9523;0.9514;0.9514;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8434;0.8493;0.8434;0.8434;0.9097;0.9119;0.9097;0.9096;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9059;0.9079;0.9059;0.9056;0.8819;0.8874;0.8819;0.8824;0.8167;0.8217;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
KNeighborsClassifier;0.8457;0.8496;0.8457;0.8454;0.9375;0.9393;0.9375;0.9375;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8434;0.8465;0.8434;0.8435;0.9514;0.9534;0.9514;0.9515;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8495;0.8527;0.8495;0.8495;0.8819;0.8824;0.8819;0.8819;0.8167;0.8209;0.8167;0.8158;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8402;0.8425;0.8402;0.8402;0.9028;0.9048;0.9028;0.903;0.8167;0.8209;0.8167;0.8158;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9383;0.94;0.9383;0.9381;0.9306;0.9351;0.9306;0.9311;0.8167;0.8155;0.8167;0.8158;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
DecisionTreeClassifier;0.8935;0.8964;0.8935;0.8935;0.8819;0.8819;0.8819;0.8819;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
RandomForestClassifier;0.9228;0.9262;0.9228;0.923;0.9861;0.9864;0.9861;0.986;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
RandomForestClassifier;0.9328;0.9349;0.9328;0.9327;0.9444;0.9459;0.9444;0.9447;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
RandomForestClassifier;0.9375;0.9393;0.9375;0.9376;0.9375;0.9374;0.9375;0.937;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
DecisionTreeClassifier;0.902;0.9044;0.902;0.9021;0.8889;0.89;0.8889;0.8884;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
DecisionTreeClassifier;0.9043;0.9072;0.9043;0.9041;0.8889;0.8905;0.8889;0.8887;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
DecisionTreeClassifier;0.8966;0.8981;0.8966;0.8965;0.8264;0.8309;0.8264;0.8269;0.8167;0.822;0.8167;0.8148;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
DecisionTreeClassifier;0.9013;0.9031;0.9013;0.9013;0.8403;0.8459;0.8403;0.8415;0.8167;0.8256;0.8167;0.8124;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
DecisionTreeClassifier;0.9113;0.9122;0.9113;0.911;0.8681;0.8777;0.8681;0.8699;0.8;0.8038;0.8;0.801;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
MLPClassifier;0.791;0.8047;0.791;0.7896;0.8333;0.837;0.8333;0.8345;0.8;0.8;0.8;0.8;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
DecisionTreeClassifier;0.9074;0.909;0.9074;0.9073;0.8889;0.893;0.8889;0.8889;0.8;0.8014;0.8;0.7998;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
KNeighborsClassifier;0.8434;0.8512;0.8434;0.8441;0.875;0.8802;0.875;0.876;0.8;0.8017;0.8;0.7996;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9383;0.9395;0.9383;0.9383;0.9375;0.9379;0.9375;0.9375;0.8;0.805;0.8;0.7993;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
DecisionTreeClassifier;0.9098;0.9116;0.9098;0.9097;0.875;0.8845;0.875;0.8754;0.8;0.7989;0.8;0.7991;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
KNeighborsClassifier;0.8572;0.8626;0.8572;0.8576;0.8889;0.8944;0.8889;0.8894;0.8;0.7989;0.8;0.7991;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8464;0.8499;0.8464;0.8462;0.9375;0.9389;0.9375;0.9379;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8472;0.8502;0.8472;0.8472;0.8889;0.8899;0.8889;0.8888;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8395;0.8439;0.8395;0.8398;0.9097;0.9104;0.9097;0.9098;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8494;0.8563;0.8494;0.8496;0.9028;0.907;0.9028;0.9029;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8518;0.8559;0.8518;0.8514;0.9167;0.9198;0.9167;0.9171;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8518;0.8563;0.8518;0.8512;0.9236;0.9243;0.9236;0.9237;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7886;0.803;0.7886;0.7885;0.8056;0.8061;0.8056;0.8051;0.8;0.8068;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
KNeighborsClassifier;0.8472;0.8501;0.8472;0.8473;0.8819;0.8851;0.8819;0.8815;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8526;0.857;0.8526;0.8521;0.9097;0.9189;0.9097;0.9101;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8442;0.8469;0.8442;0.8443;0.875;0.8825;0.875;0.8723;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8472;0.8514;0.8472;0.8474;0.9097;0.9105;0.9097;0.909;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8457;0.8514;0.8457;0.8453;0.9167;0.919;0.9167;0.9162;0.8;0.8026;0.8;0.7989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9321;0.9338;0.9321;0.9321;0.9514;0.9523;0.9514;0.9514;0.8;0.799;0.8;0.7985;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 14};RandomForestClassifier(n_estimators=10, random_state=14)
KNeighborsClassifier;0.8464;0.8487;0.8464;0.8463;0.8681;0.8701;0.8681;0.8683;0.8;0.8012;0.8;0.7981;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8388;0.8422;0.8388;0.8388;0.9097;0.9108;0.9097;0.9098;0.8;0.8012;0.8;0.7981;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.9067;0.9078;0.9067;0.9064;0.8819;0.8846;0.8819;0.8825;0.8;0.8012;0.8;0.7981;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=472)
RandomForestClassifier;0.9391;0.9401;0.9391;0.9391;0.9236;0.924;0.9236;0.9238;0.8;0.7987;0.8;0.798;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 273};RandomForestClassifier(n_estimators=20, random_state=273)
RandomForestClassifier;0.9414;0.9435;0.9414;0.9412;0.9444;0.9445;0.9444;0.9443;0.8;0.7987;0.8;0.798;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
DecisionTreeClassifier;0.8974;0.9001;0.8974;0.8974;0.8889;0.8917;0.8889;0.8891;0.7833;0.7847;0.7833;0.7837;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.9174;0.9195;0.9174;0.9176;0.8264;0.8346;0.8264;0.8279;0.7833;0.7897;0.7833;0.7836;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
DecisionTreeClassifier;0.9043;0.9065;0.9043;0.9044;0.8403;0.8463;0.8403;0.8408;0.7833;0.785;0.7833;0.7829;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 472};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=472)
DecisionTreeClassifier;0.9105;0.9124;0.9105;0.9106;0.8333;0.8379;0.8333;0.8297;0.7833;0.7868;0.7833;0.7826;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.9105;0.9119;0.9105;0.9102;0.8333;0.8376;0.8333;0.8323;0.7833;0.7831;0.7833;0.7822;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
KNeighborsClassifier;0.858;0.864;0.858;0.8581;0.9097;0.9148;0.9097;0.9103;0.7833;0.7831;0.7833;0.7822;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9375;0.9391;0.9375;0.9373;0.9097;0.9113;0.9097;0.9097;0.7833;0.7831;0.7833;0.7822;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
KNeighborsClassifier;0.8403;0.8434;0.8403;0.8405;0.9236;0.9251;0.9236;0.9238;0.7833;0.7853;0.7833;0.7819;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8318;0.8347;0.8318;0.8317;0.9306;0.9305;0.9306;0.9305;0.7833;0.7884;0.7833;0.7815;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7979;0.8076;0.7979;0.7974;0.7917;0.7918;0.7917;0.7913;0.7833;0.7815;0.7833;0.7814;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
DecisionTreeClassifier;0.9105;0.9125;0.9105;0.9103;0.8125;0.8213;0.8125;0.8155;0.7833;0.782;0.7833;0.7813;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
RandomForestClassifier;0.9291;0.9315;0.9291;0.929;0.9375;0.9381;0.9375;0.9373;0.7833;0.7833;0.7833;0.7811;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 14};RandomForestClassifier(n_estimators=20, random_state=14)
KNeighborsClassifier;0.8556;0.8572;0.8556;0.8555;0.9236;0.9234;0.9236;0.9235;0.7833;0.786;0.7833;0.7804;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8426;0.8469;0.8426;0.8426;0.875;0.8754;0.875;0.875;0.7833;0.786;0.7833;0.7804;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7885;0.8019;0.7885;0.788;0.8472;0.8481;0.8472;0.8461;0.7833;0.7816;0.7833;0.7801;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.8149;0.8213;0.8149;0.8144;0.8194;0.8241;0.8194;0.8147;0.7833;0.8071;0.7833;0.78;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.7971;0.8105;0.7971;0.796;0.7986;0.7979;0.7986;0.7975;0.7833;0.786;0.7833;0.7789;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.794;0.7979;0.794;0.793;0.7847;0.7976;0.7847;0.7807;0.7833;0.7858;0.7833;0.7779;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.8041;0.8138;0.8041;0.8035;0.7917;0.8109;0.7917;0.7877;0.7833;0.793;0.7833;0.7779;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.7901;0.7954;0.7901;0.7902;0.7708;0.7751;0.7708;0.769;0.7833;0.7845;0.7833;0.7766;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8025;0.809;0.8025;0.8017;0.8333;0.8371;0.8333;0.8334;0.7833;0.7985;0.7833;0.7758;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.7833;0.7956;0.7833;0.7825;0.7083;0.7369;0.7083;0.7094;0.7667;0.7853;0.7667;0.7681;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
SVC;0.6303;0.7075;0.6303;0.6204;0.7708;0.795;0.7708;0.7744;0.7667;0.7702;0.7667;0.7671;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6297;0.709;0.6297;0.6174;0.8056;0.8213;0.8056;0.806;0.7667;0.7702;0.7667;0.7671;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 940};SVC(C=10, kernel='linear', random_state=940)
DecisionTreeClassifier;0.8974;0.8988;0.8974;0.8974;0.8333;0.841;0.8333;0.8338;0.7667;0.7655;0.7667;0.7657;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 790};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=790)
MLPClassifier;0.7747;0.7887;0.7747;0.7742;0.8194;0.8161;0.8194;0.8143;0.7667;0.7655;0.7667;0.7657;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.794;0.803;0.794;0.7936;0.7569;0.7543;0.7569;0.7482;0.7667;0.7685;0.7667;0.764;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
KNeighborsClassifier;0.8419;0.8482;0.8419;0.8429;0.9375;0.9407;0.9375;0.937;0.7667;0.7746;0.7667;0.7637;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.7716;0.7866;0.7716;0.7711;0.8472;0.8529;0.8472;0.8476;0.7667;0.7662;0.7667;0.7622;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.7917;0.805;0.7917;0.7919;0.7361;0.732;0.7361;0.7274;0.7667;0.7693;0.7667;0.7612;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.8048;0.8099;0.8048;0.803;0.8125;0.8177;0.8125;0.8103;0.7667;0.7692;0.7667;0.7583;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.7962;0.8105;0.7962;0.7951;0.8264;0.8407;0.8264;0.8223;0.75;0.7649;0.75;0.7513;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
SVC;0.6312;0.7075;0.6312;0.6206;0.7569;0.7832;0.7569;0.761;0.75;0.754;0.75;0.751;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6382;0.7191;0.6382;0.6273;0.6944;0.716;0.6944;0.6984;0.75;0.754;0.75;0.751;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6319;0.7098;0.6319;0.6204;0.6944;0.7291;0.6944;0.7022;0.75;0.754;0.75;0.751;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 940};SVC(C=10, kernel='linear', random_state=940)
SVC;0.6235;0.7038;0.6235;0.6125;0.8125;0.8347;0.8125;0.8152;0.75;0.754;0.75;0.751;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6343;0.7113;0.6343;0.6237;0.7222;0.7351;0.7222;0.7254;0.75;0.754;0.75;0.751;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6381;0.7119;0.6381;0.6291;0.7431;0.7868;0.7431;0.7447;0.75;0.7553;0.75;0.7505;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 940};SVC(C=1, kernel='linear', random_state=940)
MLPClassifier;0.7863;0.7982;0.7863;0.7846;0.75;0.7554;0.75;0.7509;0.75;0.7574;0.75;0.7476;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.7887;0.8016;0.7887;0.7876;0.8125;0.8163;0.8125;0.8057;0.75;0.764;0.75;0.7469;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.794;0.8002;0.794;0.7938;0.8264;0.8293;0.8264;0.8258;0.75;0.7568;0.75;0.7468;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.7963;0.807;0.7963;0.7948;0.8333;0.8362;0.8333;0.8318;0.75;0.75;0.75;0.746;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.787;0.8017;0.787;0.7883;0.7361;0.7553;0.7361;0.7395;0.7333;0.7558;0.7333;0.7373;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
SVC;0.6265;0.7044;0.6265;0.6162;0.7708;0.79;0.7708;0.7753;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6265;0.7025;0.6265;0.614;0.7778;0.7972;0.7778;0.7821;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6343;0.7101;0.6343;0.627;0.75;0.7798;0.75;0.7455;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6235;0.7015;0.6235;0.6131;0.7917;0.8085;0.7917;0.7946;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.632;0.7103;0.632;0.6214;0.7222;0.766;0.7222;0.7281;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6289;0.7083;0.6289;0.6177;0.75;0.7652;0.75;0.7536;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 940};SVC(C=10, kernel='linear', random_state=940)
SVC;0.6342;0.7101;0.6342;0.6255;0.7431;0.7671;0.7431;0.7417;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 940};SVC(C=10, kernel='linear', random_state=940)
SVC;0.6219;0.7;0.6219;0.6126;0.7778;0.7935;0.7778;0.7805;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 940};SVC(C=10, kernel='linear', random_state=940)
SVC;0.6343;0.7125;0.6343;0.6232;0.7222;0.7541;0.7222;0.7277;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6312;0.711;0.6312;0.622;0.7431;0.7613;0.7431;0.7461;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6304;0.7082;0.6304;0.6211;0.7569;0.7817;0.7569;0.7616;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.625;0.7042;0.625;0.6149;0.8056;0.8122;0.8056;0.8063;0.7333;0.7384;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
MLPClassifier;0.7755;0.7879;0.7755;0.7726;0.7431;0.7803;0.7431;0.7319;0.75;0.7649;0.75;0.7329;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.7955;0.8076;0.7955;0.7956;0.7639;0.7681;0.7639;0.7621;0.7333;0.7431;0.7333;0.7294;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.7824;0.8016;0.7824;0.7812;0.7708;0.796;0.7708;0.7703;0.75;0.8182;0.75;0.7283;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
SVC;0.639;0.7115;0.639;0.6311;0.7569;0.7838;0.7569;0.7566;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6458;0.7181;0.6458;0.6355;0.7292;0.748;0.7292;0.7311;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6311;0.7069;0.6311;0.6206;0.7569;0.7924;0.7569;0.7565;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 940};SVC(C=10, kernel='linear', random_state=940)
SVC;0.6281;0.7039;0.6281;0.6166;0.7569;0.7866;0.7569;0.757;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 481};SVC(C=10, kernel='linear', random_state=481)
SVC;0.6312;0.7096;0.6312;0.6193;0.7083;0.7372;0.7083;0.7151;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6305;0.707;0.6305;0.6182;0.8125;0.83;0.8125;0.8156;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6358;0.7112;0.6358;0.6252;0.75;0.7754;0.75;0.751;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 563};SVC(C=10, kernel='linear', random_state=563)
SVC;0.6373;0.7122;0.6373;0.627;0.7847;0.8126;0.7847;0.7853;0.7167;0.7232;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 940};SVC(C=1, kernel='linear', random_state=940)
SVC;0.6281;0.7054;0.6281;0.6168;0.75;0.769;0.75;0.7552;0.7167;0.7286;0.7167;0.7174;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 940};SVC(C=10, kernel='linear', random_state=940)
MLPClassifier;0.7825;0.8024;0.7825;0.7828;0.8056;0.8044;0.8056;0.8046;0.7167;0.7206;0.7167;0.7121;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8071;0.82;0.8071;0.8041;0.7431;0.8133;0.7431;0.7371;0.7167;0.7743;0.7167;0.7088;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 612, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=612)
MLPClassifier;0.7701;0.7844;0.7701;0.77;0.7917;0.8359;0.7917;0.7954;0.7;0.7315;0.7;0.7001;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
LogisticRegression;0.7192;0.7239;0.7192;0.7194;0.7708;0.7778;0.7708;0.77;0.6833;0.6825;0.6833;0.6821;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7214;0.7257;0.7214;0.7214;0.7431;0.7719;0.7431;0.7475;0.6833;0.6825;0.6833;0.6821;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7238;0.7294;0.7238;0.724;0.7431;0.766;0.7431;0.7431;0.6833;0.6825;0.6833;0.6821;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.723;0.7279;0.723;0.7238;0.75;0.7521;0.75;0.7489;0.6833;0.6825;0.6833;0.6821;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7277;0.734;0.7277;0.7281;0.7569;0.7734;0.7569;0.754;0.6833;0.6825;0.6833;0.6821;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7191;0.7261;0.7191;0.7198;0.7708;0.7925;0.7708;0.7734;0.6833;0.6811;0.6833;0.6802;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
MLPClassifier;0.784;0.7955;0.784;0.7809;0.6875;0.7364;0.6875;0.6819;0.6667;0.7094;0.6667;0.6675;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
LogisticRegression;0.7199;0.7257;0.7199;0.7202;0.7292;0.7609;0.7292;0.7278;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7237;0.7286;0.7237;0.7237;0.7361;0.7529;0.7361;0.7395;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7237;0.7311;0.7237;0.7238;0.7431;0.7788;0.7431;0.7484;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7192;0.7254;0.7192;0.7193;0.7778;0.7912;0.7778;0.7761;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7145;0.7198;0.7145;0.7145;0.7569;0.7764;0.7569;0.7585;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7269;0.7322;0.7269;0.7265;0.6944;0.7059;0.6944;0.695;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7191;0.7243;0.7191;0.7191;0.7917;0.7994;0.7917;0.7896;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7276;0.7375;0.7276;0.7279;0.6944;0.7001;0.6944;0.6918;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7222;0.7293;0.7222;0.7225;0.7083;0.7314;0.7083;0.7121;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7199;0.7246;0.7199;0.7205;0.7014;0.713;0.7014;0.6993;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7215;0.7281;0.7215;0.7214;0.7569;0.7721;0.7569;0.7596;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7299;0.735;0.7299;0.73;0.7153;0.7376;0.7153;0.7163;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7238;0.7284;0.7238;0.7235;0.7569;0.7719;0.7569;0.7583;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7238;0.7294;0.7238;0.7241;0.6944;0.7198;0.6944;0.6934;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 443, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=443)"
LogisticRegression;0.7214;0.7271;0.7214;0.7222;0.7917;0.8065;0.7917;0.7931;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7199;0.7257;0.7199;0.7202;0.7708;0.7858;0.7708;0.7727;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7284;0.7359;0.7284;0.7284;0.6875;0.7305;0.6875;0.6889;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.723;0.7312;0.723;0.7233;0.7222;0.7483;0.7222;0.725;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7238;0.7314;0.7238;0.7241;0.7083;0.7304;0.7083;0.7097;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7237;0.7291;0.7237;0.7239;0.7292;0.7583;0.7292;0.724;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7176;0.7234;0.7176;0.7177;0.7222;0.7419;0.7222;0.7219;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7184;0.7236;0.7184;0.7187;0.7639;0.781;0.7639;0.766;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.716;0.7236;0.716;0.7162;0.7292;0.7609;0.7292;0.731;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
LogisticRegression;0.7299;0.7364;0.7299;0.7304;0.6597;0.6907;0.6597;0.6615;0.6667;0.6652;0.6667;0.6639;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 810, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=810)"
SVC;0.6319;0.7085;0.6319;0.622;0.7361;0.7587;0.7361;0.7369;0.6667;0.679;0.6667;0.663;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 940};SVC(C=0.1, kernel='linear', random_state=940)
