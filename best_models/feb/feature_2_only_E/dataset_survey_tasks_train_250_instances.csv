Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.797,0.8178,0.797,0.8003,0.7899,0.7979,0.7899,0.7917,0.75,0.7586,0.75,0.7515,0.9205,smote,250,no_scaled,"['storyPoints', 'polarity', 'E']",10,"{'n_estimators': 20, 'random_state': 209}","RandomForestClassifier(n_estimators=20, random_state=209)"
DecisionTreeClassifier,0.7918,0.8258,0.7918,0.7935,0.8188,0.8428,0.8188,0.8222,0.7333,0.7813,0.7333,0.7381,0.9199,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'E']",10,"{'max_depth': 5, 'min_samples_leaf': 10, 'random_state': 233}","DecisionTreeClassifier(max_depth=5, min_samples_leaf=10, random_state=233)"
DecisionTreeClassifier,0.8224,0.8466,0.8224,0.8244,0.7826,0.8124,0.7826,0.7868,0.7333,0.74,0.7333,0.7286,0.9273,smote,250,StandardScaler,"['storyPoints', 'polarity', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 26}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=26)"
KNeighborsClassifier,0.7987,0.8207,0.7987,0.8014,0.7971,0.8128,0.7971,0.8012,0.7167,0.7333,0.7167,0.7175,0.9217,smote,250,no_scaled,"['storyPoints', 'polarity', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC,0.7608,0.8236,0.7608,0.7604,0.8478,0.8948,0.8478,0.8503,0.7,0.7475,0.7,0.6974,0.908,smote,250,no_scaled,"['storyPoints', 'polarity', 'E']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 376}","SVC(C=1, kernel='linear', probability=True, random_state=376)"
RandomForestClassifier,0.8079,0.824,0.8079,0.8094,0.7464,0.7496,0.7464,0.7474,0.6833,0.692,0.6833,0.6717,0.9251,smote,250,StandardScaler,"['storyPoints', 'polarity', 'E']",10,"{'n_estimators': 10, 'random_state': 954}","RandomForestClassifier(n_estimators=10, random_state=954)"
DecisionTreeClassifier,0.8096,0.8422,0.8096,0.8138,0.7754,0.8474,0.7754,0.7843,0.6667,0.7258,0.6667,0.6687,0.9307,smote,250,no_scaled,"['storyPoints', 'polarity', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 827}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=827)"
RandomForestClassifier,0.797,0.8147,0.797,0.8026,0.7899,0.823,0.7899,0.7968,0.6667,0.6665,0.6667,0.6654,0.9271,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'E']",10,"{'n_estimators': 5, 'random_state': 128}","RandomForestClassifier(n_estimators=5, random_state=128)"
KNeighborsClassifier,0.8169,0.8325,0.8169,0.8194,0.7899,0.7973,0.7899,0.7925,0.6667,0.6636,0.6667,0.6576,0.9259,smote,250,StandardScaler,"['storyPoints', 'polarity', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier,0.7699,0.8139,0.7699,0.7733,0.7971,0.8313,0.7971,0.8016,0.65,0.7154,0.65,0.6559,0.9224,smote,250,no_scaled,"['storyPoints', 'polarity', 'E']",10,"{'max_iter': 100000, 'random_state': 173, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=173)"
MLPClassifier,0.741,0.8368,0.741,0.7436,0.7609,0.8307,0.7609,0.7604,0.6333,0.7057,0.6333,0.6406,0.9115,smote,250,StandardScaler,"['storyPoints', 'polarity', 'E']",10,"{'max_iter': 100000, 'random_state': 86, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=86)"
MLPClassifier,0.7735,0.8356,0.7735,0.7737,0.8261,0.8796,0.8261,0.8231,0.65,0.7068,0.65,0.6403,0.9142,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'E']",10,"{'max_iter': 100000, 'random_state': 945, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=945)"
KNeighborsClassifier,0.7825,0.8178,0.7825,0.7829,0.8116,0.8435,0.8116,0.8076,0.65,0.7052,0.65,0.6401,0.9043,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
SVC,0.7808,0.8373,0.7808,0.7745,0.7464,0.8061,0.7464,0.7473,0.65,0.7347,0.65,0.6299,0.9206,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 400}","SVC(C=10, probability=True, random_state=400)"
LogisticRegression,0.7502,0.8102,0.7502,0.75,0.6884,0.7455,0.6884,0.6814,0.6167,0.6669,0.6167,0.6225,0.8622,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'E']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 473, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=473)"
SVC,0.7536,0.8065,0.7536,0.7492,0.7464,0.8008,0.7464,0.7343,0.6167,0.7135,0.6167,0.6057,0.9149,smote,250,StandardScaler,"['storyPoints', 'polarity', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 613}","SVC(C=10, probability=True, random_state=613)"
LogisticRegression,0.7626,0.7861,0.7626,0.7643,0.7391,0.7424,0.7391,0.74,0.5833,0.6135,0.5833,0.5912,0.9193,smote,250,no_scaled,"['storyPoints', 'polarity', 'E']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 642, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=642)"
LogisticRegression,0.7225,0.8099,0.7225,0.7193,0.7609,0.831,0.7609,0.7602,0.6,0.7002,0.6,0.589,0.8521,smote,250,StandardScaler,"['storyPoints', 'polarity', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 21, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=21)"
