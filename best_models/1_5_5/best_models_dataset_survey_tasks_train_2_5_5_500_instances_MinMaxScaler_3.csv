Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8573;0.8632;0.8573;0.8579;0.8681;0.8855;0.8681;0.8696;0.9333;0.937;0.9333;0.9341;0.9671;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 780};RandomForestClassifier(n_estimators=5, random_state=780)
SVC;0.8287;0.8367;0.8287;0.8304;0.8056;0.8077;0.8056;0.8064;0.9333;0.9349;0.9333;0.9337;0.9147;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
RandomForestClassifier;0.8773;0.8832;0.8773;0.878;0.8264;0.8282;0.8264;0.8256;0.9167;0.9245;0.9167;0.9181;0.9662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 607};RandomForestClassifier(n_estimators=20, random_state=607)
RandomForestClassifier;0.8704;0.8765;0.8704;0.8714;0.875;0.8748;0.875;0.8748;0.9167;0.9235;0.9167;0.9176;0.9677;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 301};RandomForestClassifier(n_estimators=20, random_state=301)
DecisionTreeClassifier;0.8681;0.8775;0.8681;0.8693;0.8472;0.8504;0.8472;0.8479;0.9167;0.9195;0.9167;0.917;0.9528;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
DecisionTreeClassifier;0.8665;0.8755;0.8665;0.8673;0.875;0.876;0.875;0.8752;0.9167;0.9195;0.9167;0.917;0.9585;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
DecisionTreeClassifier;0.8503;0.86;0.8503;0.8517;0.8889;0.9015;0.8889;0.8907;0.9167;0.9269;0.9167;0.917;0.9516;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=248)
DecisionTreeClassifier;0.8634;0.8722;0.8634;0.8648;0.8819;0.881;0.8819;0.881;0.9167;0.9195;0.9167;0.917;0.9522;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=248)
DecisionTreeClassifier;0.8796;0.8875;0.8796;0.8808;0.8125;0.8286;0.8125;0.8146;0.9167;0.9269;0.9167;0.917;0.955;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=248)
DecisionTreeClassifier;0.8634;0.8735;0.8634;0.8646;0.8472;0.851;0.8472;0.8482;0.9167;0.9195;0.9167;0.917;0.9447;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=248)
DecisionTreeClassifier;0.8712;0.8788;0.8712;0.8724;0.8264;0.8565;0.8264;0.8219;0.9167;0.9269;0.9167;0.917;0.9515;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=511)
DecisionTreeClassifier;0.8619;0.8689;0.8619;0.863;0.875;0.8752;0.875;0.8731;0.9167;0.9269;0.9167;0.917;0.9521;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=511)
DecisionTreeClassifier;0.8611;0.8682;0.8611;0.8622;0.8889;0.8881;0.8889;0.8884;0.9167;0.9195;0.9167;0.917;0.9515;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=248)
DecisionTreeClassifier;0.8657;0.8742;0.8657;0.8669;0.8472;0.8511;0.8472;0.8471;0.9167;0.9269;0.9167;0.917;0.946;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=511)
RandomForestClassifier;0.8626;0.8681;0.8626;0.8634;0.8611;0.8628;0.8611;0.8618;0.9167;0.9194;0.9167;0.9165;0.9644;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 607};RandomForestClassifier(n_estimators=20, random_state=607)
SVC;0.8233;0.831;0.8233;0.8245;0.8333;0.8416;0.8333;0.8348;0.9;0.9043;0.9;0.9011;0.9137;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
SVC;0.8249;0.8322;0.8249;0.8265;0.8542;0.8665;0.8542;0.8558;0.9;0.9043;0.9;0.9011;0.914;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
RandomForestClassifier;0.8642;0.8685;0.8642;0.8649;0.8889;0.8889;0.8889;0.8889;0.9;0.9087;0.9;0.9009;0.9637;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 607};RandomForestClassifier(n_estimators=10, random_state=607)
DecisionTreeClassifier;0.858;0.8684;0.858;0.8594;0.8819;0.8939;0.8819;0.8835;0.9;0.9148;0.9;0.9008;0.9479;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
RandomForestClassifier;0.8688;0.8724;0.8688;0.8694;0.8472;0.8516;0.8472;0.8476;0.9;0.906;0.9;0.9005;0.9686;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 301};RandomForestClassifier(n_estimators=20, random_state=301)
DecisionTreeClassifier;0.8696;0.8755;0.8696;0.8704;0.8681;0.8737;0.8681;0.87;0.9;0.906;0.9;0.9005;0.9517;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=248)
RandomForestClassifier;0.8626;0.8672;0.8626;0.8633;0.8958;0.9009;0.8958;0.8972;0.9;0.906;0.9;0.9005;0.9634;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 607};RandomForestClassifier(n_estimators=10, random_state=607)
DecisionTreeClassifier;0.8595;0.8691;0.8595;0.8606;0.8681;0.8681;0.8681;0.8648;0.9;0.906;0.9;0.9005;0.951;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
MLPClassifier;0.8318;0.8378;0.8318;0.833;0.8056;0.8136;0.8056;0.8081;0.9;0.9015;0.9;0.9004;0.9491;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
DecisionTreeClassifier;0.8619;0.8676;0.8619;0.8627;0.8681;0.8716;0.8681;0.8693;0.9;0.9015;0.9;0.9004;0.9507;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=511)
DecisionTreeClassifier;0.8704;0.8757;0.8704;0.8712;0.875;0.8777;0.875;0.8759;0.9;0.9015;0.9;0.9004;0.9549;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=248)
DecisionTreeClassifier;0.865;0.8729;0.865;0.8662;0.8611;0.8653;0.8611;0.8607;0.9;0.9015;0.9;0.9004;0.9569;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
DecisionTreeClassifier;0.865;0.8735;0.865;0.8662;0.875;0.875;0.875;0.8746;0.9;0.9015;0.9;0.9004;0.9564;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=248)
DecisionTreeClassifier;0.8642;0.8701;0.8642;0.8649;0.8681;0.8712;0.8681;0.8692;0.9;0.9015;0.9;0.9004;0.9527;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
DecisionTreeClassifier;0.8581;0.865;0.8581;0.8592;0.8681;0.8699;0.8681;0.8688;0.9;0.9015;0.9;0.9004;0.9541;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=287)
DecisionTreeClassifier;0.8588;0.8666;0.8588;0.8593;0.8681;0.8712;0.8681;0.869;0.9;0.9015;0.9;0.9004;0.9486;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=511)
RandomForestClassifier;0.8627;0.8694;0.8627;0.8637;0.8681;0.8727;0.8681;0.8693;0.9;0.9019;0.9;0.8999;0.9656;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
RandomForestClassifier;0.8627;0.8691;0.8627;0.8633;0.8472;0.8526;0.8472;0.8483;0.9;0.9006;0.9;0.8999;0.964;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
RandomForestClassifier;0.8611;0.8666;0.8611;0.8617;0.8403;0.854;0.8403;0.8436;0.9;0.9006;0.9;0.8999;0.9661;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 607};RandomForestClassifier(n_estimators=5, random_state=607)
SVC;0.825;0.832;0.825;0.8262;0.7986;0.8036;0.7986;0.8001;0.9;0.9021;0.9;0.8999;0.9167;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.8194;0.8276;0.8194;0.8209;0.8403;0.8473;0.8403;0.8417;0.9;0.9103;0.9;0.8998;0.9132;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
RandomForestClassifier;0.8573;0.8645;0.8573;0.8584;0.8681;0.8773;0.8681;0.869;0.8833;0.8955;0.8833;0.8848;0.9653;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 780};RandomForestClassifier(n_estimators=10, random_state=780)
RandomForestClassifier;0.8619;0.8666;0.8619;0.8624;0.8889;0.8955;0.8889;0.8905;0.8833;0.8918;0.8833;0.8847;0.9631;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 607};RandomForestClassifier(n_estimators=5, random_state=607)
RandomForestClassifier;0.8611;0.8675;0.8611;0.8615;0.8403;0.8484;0.8403;0.8409;0.8833;0.8868;0.8833;0.884;0.9677;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 780};RandomForestClassifier(n_estimators=20, random_state=780)
DecisionTreeClassifier;0.8696;0.8773;0.8696;0.8705;0.8194;0.827;0.8194;0.8191;0.8833;0.8868;0.8833;0.884;0.9592;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=248)
DecisionTreeClassifier;0.8603;0.8679;0.8603;0.8613;0.8472;0.8554;0.8472;0.8494;0.8833;0.8868;0.8833;0.884;0.9567;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=511)
DecisionTreeClassifier;0.8518;0.857;0.8518;0.8527;0.9028;0.9083;0.9028;0.9038;0.8833;0.8868;0.8833;0.884;0.9516;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 248};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=248)
DecisionTreeClassifier;0.8573;0.8644;0.8573;0.858;0.8194;0.8289;0.8194;0.8198;0.8833;0.8868;0.8833;0.884;0.9473;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
DecisionTreeClassifier;0.8719;0.8766;0.8719;0.8729;0.875;0.8736;0.875;0.8741;0.8833;0.8868;0.8833;0.884;0.9524;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=511)
RandomForestClassifier;0.8573;0.8622;0.8573;0.8577;0.8681;0.8687;0.8681;0.8683;0.8833;0.8934;0.8833;0.8839;0.9653;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 780};RandomForestClassifier(n_estimators=5, random_state=780)
DecisionTreeClassifier;0.8604;0.8673;0.8604;0.8616;0.8681;0.8681;0.8681;0.8681;0.8833;0.8848;0.8833;0.8837;0.9533;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=511)
RandomForestClassifier;0.8673;0.8716;0.8673;0.8677;0.8472;0.8474;0.8472;0.8464;0.8833;0.8944;0.8833;0.8836;0.9683;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 780};RandomForestClassifier(n_estimators=20, random_state=780)
RandomForestClassifier;0.8603;0.8656;0.8603;0.8612;0.8611;0.8764;0.8611;0.862;0.8833;0.8944;0.8833;0.8836;0.9629;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 780};RandomForestClassifier(n_estimators=10, random_state=780)
KNeighborsClassifier;0.8403;0.8521;0.8403;0.8407;0.8194;0.8236;0.8194;0.8201;0.8833;0.8944;0.8833;0.8836;0.9395;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8688;0.8745;0.8688;0.8694;0.875;0.8776;0.875;0.8759;0.8833;0.8884;0.8833;0.8834;0.9643;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 780};RandomForestClassifier(n_estimators=10, random_state=780)
RandomForestClassifier;0.8619;0.8696;0.8619;0.8628;0.8889;0.8918;0.8889;0.8895;0.8833;0.8884;0.8833;0.8834;0.9623;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
RandomForestClassifier;0.8611;0.8668;0.8611;0.8619;0.8611;0.8659;0.8611;0.8622;0.8833;0.8874;0.8833;0.883;0.9642;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 780};RandomForestClassifier(n_estimators=20, random_state=780)
SVC;0.8179;0.8269;0.8179;0.8192;0.8611;0.8603;0.8611;0.8607;0.8833;0.888;0.8833;0.8829;0.9135;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.8202;0.8282;0.8202;0.8219;0.8681;0.8713;0.8681;0.8688;0.8833;0.888;0.8833;0.8829;0.9097;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
SVC;0.821;0.8288;0.821;0.8224;0.8542;0.8614;0.8542;0.8556;0.8833;0.888;0.8833;0.8829;0.9135;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
SVC;0.8326;0.8396;0.8326;0.8336;0.7778;0.7945;0.7778;0.7786;0.8833;0.888;0.8833;0.8829;0.9158;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
SVC;0.8279;0.8346;0.8279;0.8294;0.8681;0.8749;0.8681;0.8702;0.8833;0.888;0.8833;0.8829;0.9135;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
SVC;0.8318;0.839;0.8318;0.8329;0.8125;0.8234;0.8125;0.8147;0.8833;0.888;0.8833;0.8829;0.915;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
SVC;0.8226;0.8291;0.8226;0.8239;0.875;0.8778;0.875;0.8756;0.8833;0.888;0.8833;0.8829;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.8109;0.8234;0.8109;0.8119;0.9028;0.9047;0.9028;0.9033;0.8833;0.888;0.8833;0.8829;0.9104;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
SVC;0.8203;0.8307;0.8203;0.822;0.8403;0.8465;0.8403;0.8418;0.8833;0.888;0.8833;0.8829;0.9142;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
SVC;0.8226;0.8288;0.8226;0.8239;0.8472;0.8625;0.8472;0.8497;0.8833;0.888;0.8833;0.8829;0.9113;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
SVC;0.8187;0.8278;0.8187;0.8204;0.8542;0.8562;0.8542;0.8544;0.8833;0.888;0.8833;0.8829;0.9088;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
SVC;0.8233;0.8298;0.8233;0.8245;0.8611;0.8725;0.8611;0.8633;0.8833;0.888;0.8833;0.8829;0.914;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.828;0.8358;0.828;0.8295;0.8403;0.842;0.8403;0.841;0.8833;0.888;0.8833;0.8829;0.913;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
MLPClassifier;0.8241;0.8332;0.8241;0.8249;0.875;0.8745;0.875;0.8747;0.8833;0.8873;0.8833;0.8826;0.9461;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
MLPClassifier;0.8263;0.8357;0.8263;0.8278;0.8611;0.8599;0.8611;0.8597;0.8833;0.8842;0.8833;0.8823;0.9465;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
SVC;0.8257;0.8334;0.8257;0.8271;0.8264;0.8491;0.8264;0.8307;0.8833;0.8836;0.8833;0.8823;0.9168;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.8271;0.8345;0.8271;0.8287;0.8333;0.8402;0.8333;0.8352;0.8833;0.8883;0.8833;0.881;0.9154;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
MLPClassifier;0.8194;0.8272;0.8194;0.8206;0.8681;0.8712;0.8681;0.8688;0.8667;0.8775;0.8667;0.8687;0.9459;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
DecisionTreeClassifier;0.8542;0.8614;0.8542;0.8554;0.8958;0.9107;0.8958;0.8979;0.8667;0.8819;0.8667;0.868;0.9471;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=511)
DecisionTreeClassifier;0.8712;0.8765;0.8712;0.8719;0.8264;0.8373;0.8264;0.8296;0.8667;0.8819;0.8667;0.868;0.9527;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
MLPClassifier;0.8249;0.8329;0.8249;0.826;0.8403;0.8476;0.8403;0.8406;0.8667;0.8799;0.8667;0.868;0.9468;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
MLPClassifier;0.8202;0.8292;0.8202;0.821;0.8681;0.873;0.8681;0.8687;0.8667;0.8739;0.8667;0.8679;0.9466;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
MLPClassifier;0.821;0.8282;0.821;0.8223;0.875;0.8816;0.875;0.8739;0.8667;0.8788;0.8667;0.8677;0.9453;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
MLPClassifier;0.8279;0.8357;0.8279;0.8292;0.8542;0.8639;0.8542;0.8568;0.8667;0.8788;0.8667;0.8677;0.9487;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
KNeighborsClassifier;0.8379;0.8528;0.8379;0.8383;0.7917;0.812;0.7917;0.7951;0.8667;0.8788;0.8667;0.8677;0.9361;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8202;0.8276;0.8202;0.8214;0.8611;0.8604;0.8611;0.8605;0.8667;0.8806;0.8667;0.8675;0.9461;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
KNeighborsClassifier;0.8318;0.839;0.8318;0.8323;0.9375;0.9388;0.9375;0.9379;0.8667;0.8806;0.8667;0.8675;0.9406;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8202;0.8278;0.8202;0.8214;0.8889;0.8894;0.8889;0.8891;0.8667;0.8704;0.8667;0.8674;0.9444;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
MLPClassifier;0.8279;0.837;0.8279;0.829;0.8403;0.8445;0.8403;0.8405;0.8667;0.8704;0.8667;0.8674;0.9517;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
DecisionTreeClassifier;0.8596;0.8661;0.8596;0.86;0.8681;0.8811;0.8681;0.8709;0.8667;0.8709;0.8667;0.8673;0.9552;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
RandomForestClassifier;0.8619;0.8672;0.8619;0.8626;0.8889;0.8975;0.8889;0.8901;0.8667;0.875;0.8667;0.8668;0.9646;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
KNeighborsClassifier;0.8457;0.8584;0.8457;0.846;0.8194;0.8241;0.8194;0.8197;0.8667;0.875;0.8667;0.8668;0.9381;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8681;0.8722;0.8681;0.8686;0.875;0.875;0.875;0.8745;0.8667;0.875;0.8667;0.8668;0.9644;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 780};RandomForestClassifier(n_estimators=5, random_state=780)
MLPClassifier;0.8233;0.8305;0.8233;0.8247;0.8681;0.8766;0.8681;0.8677;0.8667;0.8722;0.8667;0.8667;0.9479;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
RandomForestClassifier;0.8672;0.8737;0.8672;0.8678;0.8611;0.8698;0.8611;0.8608;0.8667;0.8722;0.8667;0.8667;0.9659;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 607};RandomForestClassifier(n_estimators=5, random_state=607)
KNeighborsClassifier;0.8334;0.8428;0.8334;0.8335;0.875;0.875;0.875;0.875;0.8667;0.8724;0.8667;0.8662;0.9424;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8425;0.8535;0.8425;0.8437;0.8125;0.8206;0.8125;0.8135;0.8667;0.8724;0.8667;0.8662;0.9469;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8649;0.869;0.8649;0.8656;0.8403;0.8428;0.8403;0.841;0.8667;0.8664;0.8667;0.8662;0.9678;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 607};RandomForestClassifier(n_estimators=5, random_state=607)
KNeighborsClassifier;0.8317;0.8442;0.8317;0.8322;0.8542;0.8687;0.8542;0.854;0.8667;0.8724;0.8667;0.8662;0.9393;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8302;0.8451;0.8302;0.8304;0.8542;0.8536;0.8542;0.853;0.8667;0.8724;0.8667;0.8662;0.9424;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8287;0.8368;0.8287;0.8299;0.8056;0.81;0.8056;0.8058;0.8667;0.8677;0.8667;0.8661;0.9175;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.8171;0.8242;0.8171;0.8185;0.8681;0.8802;0.8681;0.8698;0.8667;0.8677;0.8667;0.8661;0.9107;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
SVC;0.8279;0.8348;0.8279;0.8294;0.8194;0.827;0.8194;0.8217;0.8667;0.8677;0.8667;0.8661;0.9155;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
SVC;0.8248;0.832;0.8248;0.8263;0.8264;0.8273;0.8264;0.8266;0.8667;0.8677;0.8667;0.8661;0.911;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
SVC;0.8303;0.8378;0.8303;0.8312;0.7778;0.8003;0.7778;0.7806;0.8667;0.8677;0.8667;0.8661;0.9175;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
MLPClassifier;0.8241;0.8324;0.8241;0.8258;0.8542;0.854;0.8542;0.8539;0.8667;0.8814;0.8667;0.866;0.9477;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
MLPClassifier;0.8295;0.8368;0.8295;0.8307;0.8194;0.8223;0.8194;0.8205;0.8667;0.8814;0.8667;0.866;0.9494;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
MLPClassifier;0.8233;0.8307;0.8233;0.8247;0.8611;0.865;0.8611;0.8621;0.8667;0.8814;0.8667;0.866;0.946;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
MLPClassifier;0.8241;0.8315;0.8241;0.8251;0.8403;0.8431;0.8403;0.8415;0.8667;0.8814;0.8667;0.866;0.9469;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
KNeighborsClassifier;0.8341;0.847;0.8341;0.8345;0.8472;0.8561;0.8472;0.8472;0.8667;0.8814;0.8667;0.866;0.9364;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8226;0.8332;0.8226;0.8238;0.8681;0.8692;0.8681;0.8686;0.8667;0.8814;0.8667;0.866;0.9494;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
RandomForestClassifier;0.8603;0.8645;0.8603;0.8612;0.8611;0.8679;0.8611;0.8615;0.8667;0.8699;0.8667;0.8659;0.9648;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 607};RandomForestClassifier(n_estimators=5, random_state=607)
KNeighborsClassifier;0.8372;0.8431;0.8372;0.8362;0.875;0.8815;0.875;0.8767;0.8667;0.8699;0.8667;0.8659;0.9445;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.841;0.8522;0.841;0.8418;0.9028;0.9033;0.9028;0.9028;0.8667;0.8699;0.8667;0.8659;0.9432;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8418;0.8536;0.8418;0.8426;0.9028;0.9028;0.9028;0.9028;0.8667;0.8699;0.8667;0.8659;0.9378;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8627;0.8664;0.8627;0.8635;0.8681;0.869;0.8681;0.8685;0.8667;0.8699;0.8667;0.8659;0.9642;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 301};RandomForestClassifier(n_estimators=20, random_state=301)
SVC;0.8225;0.8306;0.8225;0.8238;0.7917;0.8074;0.7917;0.7948;0.8667;0.8656;0.8667;0.8658;0.9172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
RandomForestClassifier;0.8573;0.8621;0.8573;0.858;0.8819;0.8809;0.8819;0.8814;0.8667;0.8764;0.8667;0.8657;0.9671;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 780};RandomForestClassifier(n_estimators=20, random_state=780)
MLPClassifier;0.8263;0.8346;0.8263;0.8273;0.8194;0.8224;0.8194;0.82;0.8667;0.8675;0.8667;0.8656;0.9472;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
KNeighborsClassifier;0.8427;0.8532;0.8427;0.843;0.8542;0.861;0.8542;0.8533;0.8667;0.8736;0.8667;0.865;0.938;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8619;0.8672;0.8619;0.8626;0.8194;0.8199;0.8194;0.8195;0.85;0.8523;0.85;0.8508;0.9551;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 511};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=511)
MLPClassifier;0.8156;0.825;0.8156;0.8168;0.8889;0.8924;0.8889;0.8899;0.85;0.857;0.85;0.8508;0.9456;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
MLPClassifier;0.828;0.8357;0.828;0.8291;0.8542;0.8605;0.8542;0.855;0.85;0.857;0.85;0.8508;0.9478;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
MLPClassifier;0.8317;0.8387;0.8317;0.8328;0.7708;0.7843;0.7708;0.7738;0.85;0.8579;0.85;0.8507;0.9495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
MLPClassifier;0.8294;0.8354;0.8294;0.8304;0.8333;0.8461;0.8333;0.8351;0.85;0.8579;0.85;0.8507;0.9486;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
KNeighborsClassifier;0.8465;0.8545;0.8465;0.8473;0.8542;0.8627;0.8542;0.8566;0.85;0.8579;0.85;0.8507;0.9404;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8225;0.8317;0.8225;0.8239;0.8819;0.8873;0.8819;0.8835;0.85;0.8669;0.85;0.8505;0.9482;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
SVC;0.8256;0.8324;0.8256;0.8271;0.8125;0.8182;0.8125;0.8143;0.85;0.8539;0.85;0.8505;0.9134;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, probability=True, random_state=715)
MLPClassifier;0.8249;0.8333;0.8249;0.8261;0.8264;0.8446;0.8264;0.8277;0.85;0.8669;0.85;0.8505;0.9494;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
MLPClassifier;0.8203;0.8285;0.8203;0.822;0.8958;0.8954;0.8958;0.8946;0.85;0.8669;0.85;0.8505;0.9469;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 649, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=649)
KNeighborsClassifier;0.8395;0.8547;0.8395;0.8399;0.875;0.8762;0.875;0.8754;0.85;0.8623;0.85;0.85;0.9372;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8178;0.8269;0.8178;0.8192;0.8542;0.8534;0.8542;0.8537;0.85;0.8506;0.85;0.8499;0.9466;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
KNeighborsClassifier;0.8495;0.8622;0.8495;0.8504;0.8264;0.8305;0.8264;0.8278;0.85;0.8524;0.85;0.8497;0.9431;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8318;0.8379;0.8318;0.8319;0.9167;0.9178;0.9167;0.9169;0.85;0.8583;0.85;0.8497;0.9387;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8326;0.841;0.8326;0.833;0.8472;0.8577;0.8472;0.8482;0.85;0.8583;0.85;0.8497;0.9429;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8458;0.856;0.8458;0.8465;0.8611;0.8611;0.8611;0.8611;0.85;0.8583;0.85;0.8497;0.9405;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8419;0.852;0.8419;0.8429;0.8681;0.8715;0.8681;0.8676;0.85;0.8583;0.85;0.8497;0.936;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8194;0.827;0.8194;0.8202;0.875;0.8799;0.875;0.8763;0.85;0.8524;0.85;0.8497;0.9453;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
KNeighborsClassifier;0.8534;0.8636;0.8534;0.8535;0.8472;0.8655;0.8472;0.8507;0.85;0.8583;0.85;0.8497;0.9419;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8271;0.8336;0.8271;0.8288;0.8611;0.8643;0.8611;0.862;0.85;0.8591;0.85;0.8495;0.9126;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 904};SVC(C=10, probability=True, random_state=904)
KNeighborsClassifier;0.8481;0.8595;0.8481;0.8484;0.8819;0.8812;0.8819;0.8815;0.85;0.8565;0.85;0.8493;0.9438;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8203;0.8284;0.8203;0.8215;0.8681;0.8681;0.8681;0.8679;0.85;0.8524;0.85;0.8488;0.9125;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
KNeighborsClassifier;0.8395;0.8527;0.8395;0.8401;0.8056;0.809;0.8056;0.8068;0.85;0.8577;0.85;0.8488;0.942;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8403;0.8474;0.8403;0.8409;0.8264;0.8338;0.8264;0.8289;0.85;0.8577;0.85;0.8488;0.9381;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8365;0.8482;0.8365;0.8372;0.8611;0.8659;0.8611;0.8617;0.85;0.8577;0.85;0.8488;0.937;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8209;0.829;0.8209;0.8223;0.8681;0.8709;0.8681;0.869;0.85;0.8577;0.85;0.8488;0.9452;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 328, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=328)
RandomForestClassifier;0.8704;0.8757;0.8704;0.8709;0.8403;0.8455;0.8403;0.8418;0.85;0.8524;0.85;0.8488;0.9665;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 301};RandomForestClassifier(n_estimators=10, random_state=301)
SVC;0.8249;0.8326;0.8249;0.826;0.8194;0.8335;0.8194;0.8207;0.85;0.8526;0.85;0.8487;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 840};SVC(C=10, probability=True, random_state=840)
MLPClassifier;0.821;0.8284;0.821;0.8221;0.875;0.8807;0.875;0.8765;0.8333;0.8372;0.8333;0.8339;0.9469;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
KNeighborsClassifier;0.8373;0.8449;0.8373;0.8379;0.8125;0.8192;0.8125;0.8148;0.8333;0.8428;0.8333;0.8333;0.9357;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.828;0.8347;0.828;0.8291;0.8125;0.8128;0.8125;0.8122;0.8333;0.8465;0.8333;0.8328;0.9503;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 435, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=435)
RandomForestClassifier;0.8627;0.8678;0.8627;0.8633;0.8264;0.839;0.8264;0.8301;0.8333;0.8369;0.8333;0.8328;0.9674;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
KNeighborsClassifier;0.8379;0.8482;0.8379;0.8383;0.8194;0.821;0.8194;0.8195;0.8333;0.838;0.8333;0.8317;0.9436;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8395;0.8463;0.8395;0.8397;0.8472;0.8489;0.8472;0.8474;0.8333;0.838;0.8333;0.8317;0.9408;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8264;0.8398;0.8264;0.8251;0.8472;0.8575;0.8472;0.8496;0.8333;0.8387;0.8333;0.8317;0.9396;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8311;0.8465;0.8311;0.8316;0.8125;0.8168;0.8125;0.814;0.8333;0.838;0.8333;0.8317;0.941;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8527;0.8572;0.8527;0.8534;0.8472;0.8545;0.8472;0.8495;0.8167;0.8163;0.8167;0.8162;0.9658;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 607};RandomForestClassifier(n_estimators=5, random_state=607)
RandomForestClassifier;0.865;0.8688;0.865;0.8658;0.875;0.8749;0.875;0.8739;0.8167;0.8174;0.8167;0.8125;0.9639;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
LogisticRegression;0.8117;0.8196;0.8117;0.8132;0.8056;0.8044;0.8056;0.8028;0.7833;0.7847;0.7833;0.7786;0.9266;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8125;0.8214;0.8125;0.8137;0.8056;0.8179;0.8056;0.8081;0.7833;0.7847;0.7833;0.7786;0.9279;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8125;0.8206;0.8125;0.8135;0.8056;0.8102;0.8056;0.8071;0.7833;0.7847;0.7833;0.7786;0.9291;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8125;0.8192;0.8125;0.8129;0.8056;0.8082;0.8056;0.8065;0.7833;0.7847;0.7833;0.7786;0.9272;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8093;0.8163;0.8093;0.8106;0.8056;0.8095;0.8056;0.8068;0.7833;0.7847;0.7833;0.7786;0.9256;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8071;0.815;0.8071;0.8084;0.8542;0.8656;0.8542;0.8552;0.7833;0.7847;0.7833;0.7786;0.9245;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8087;0.8174;0.8087;0.81;0.8403;0.8471;0.8403;0.8412;0.7833;0.7847;0.7833;0.7786;0.9267;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8086;0.8154;0.8086;0.8097;0.8264;0.833;0.8264;0.8281;0.7833;0.7847;0.7833;0.7786;0.9259;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8218;0.8264;0.8218;0.8226;0.7222;0.7418;0.7222;0.728;0.7833;0.7845;0.7833;0.7771;0.93;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8047;0.8139;0.8047;0.8066;0.8542;0.8562;0.8542;0.8547;0.7833;0.7845;0.7833;0.7771;0.9246;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8079;0.8162;0.8079;0.8091;0.8264;0.8379;0.8264;0.8288;0.7833;0.7845;0.7833;0.7771;0.9281;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8064;0.8153;0.8064;0.8078;0.8333;0.8371;0.8333;0.8345;0.7833;0.7845;0.7833;0.7771;0.9267;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.814;0.8218;0.814;0.8155;0.7917;0.8002;0.7917;0.794;0.7833;0.7845;0.7833;0.7771;0.9278;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8079;0.8161;0.8079;0.8095;0.8264;0.834;0.8264;0.8282;0.7833;0.7845;0.7833;0.7771;0.9265;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8055;0.8139;0.8055;0.807;0.8542;0.8647;0.8542;0.856;0.7833;0.7845;0.7833;0.7771;0.9257;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8125;0.8199;0.8125;0.8137;0.7778;0.7885;0.7778;0.78;0.7833;0.7845;0.7833;0.7771;0.9297;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8071;0.8167;0.8071;0.8087;0.8472;0.8589;0.8472;0.8502;0.7833;0.7845;0.7833;0.7771;0.9263;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8117;0.8206;0.8117;0.8129;0.8125;0.8215;0.8125;0.815;0.7667;0.7658;0.7667;0.7633;0.929;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8163;0.8226;0.8163;0.8175;0.7847;0.8054;0.7847;0.7866;0.7667;0.7658;0.7667;0.7633;0.929;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8155;0.822;0.8155;0.8171;0.7639;0.7864;0.7639;0.766;0.7667;0.7658;0.7667;0.7633;0.9304;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8117;0.8192;0.8117;0.8133;0.8125;0.8188;0.8125;0.8148;0.7667;0.7658;0.7667;0.7633;0.9261;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8101;0.8191;0.8101;0.8119;0.8194;0.8192;0.8194;0.8191;0.7667;0.7658;0.7667;0.7633;0.9268;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8095;0.8186;0.8095;0.8111;0.8264;0.827;0.8264;0.8267;0.7667;0.7687;0.7667;0.7604;0.924;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8125;0.8191;0.8125;0.8139;0.7986;0.8166;0.7986;0.7992;0.7667;0.7687;0.7667;0.7604;0.9294;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8141;0.822;0.8141;0.8154;0.7847;0.7889;0.7847;0.7849;0.7667;0.7687;0.7667;0.7604;0.9294;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8094;0.8176;0.8094;0.8106;0.8264;0.8246;0.8264;0.8251;0.7667;0.7687;0.7667;0.7604;0.9241;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8064;0.8148;0.8064;0.8081;0.8611;0.8668;0.8611;0.8622;0.7667;0.7687;0.7667;0.7604;0.9239;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 93, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=93)"
LogisticRegression;0.8157;0.8231;0.8157;0.817;0.7639;0.7772;0.7639;0.7668;0.75;0.749;0.75;0.7452;0.9288;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
LogisticRegression;0.8125;0.8188;0.8125;0.8136;0.7986;0.8055;0.7986;0.8006;0.75;0.749;0.75;0.7452;0.9289;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 807, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=807)"
LogisticRegression;0.8102;0.8183;0.8102;0.8114;0.8125;0.8199;0.8125;0.8147;0.75;0.749;0.75;0.7452;0.9286;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 44, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=44)"
