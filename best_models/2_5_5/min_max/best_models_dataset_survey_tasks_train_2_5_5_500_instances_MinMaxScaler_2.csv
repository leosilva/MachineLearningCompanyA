Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8202;0.8227;0.8202;0.8207;0.8542;0.8604;0.8542;0.8548;0.9167;0.9245;0.9167;0.9181;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 378};RandomForestClassifier(n_estimators=20, random_state=378)
RandomForestClassifier;0.8218;0.8273;0.8218;0.8231;0.8125;0.8229;0.8125;0.8149;0.9167;0.919;0.9167;0.9175;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 797};RandomForestClassifier(n_estimators=20, random_state=797)
RandomForestClassifier;0.8233;0.8264;0.8233;0.8237;0.7708;0.7801;0.7708;0.7738;0.9167;0.9194;0.9167;0.9165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 797};RandomForestClassifier(n_estimators=10, random_state=797)
KNeighborsClassifier;0.7824;0.7896;0.7824;0.7825;0.8333;0.8458;0.8333;0.8343;0.9;0.913;0.9;0.9019;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8233;0.83;0.8233;0.8248;0.8264;0.8296;0.8264;0.8263;0.9;0.9061;0.9;0.9015;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 854};RandomForestClassifier(n_estimators=20, random_state=854)
RandomForestClassifier;0.8233;0.8296;0.8233;0.8236;0.8125;0.8365;0.8125;0.8161;0.9;0.9061;0.9;0.9015;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 378};RandomForestClassifier(n_estimators=20, random_state=378)
RandomForestClassifier;0.8202;0.8303;0.8202;0.8219;0.8472;0.8458;0.8472;0.8457;0.9;0.9061;0.9;0.9015;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 378};RandomForestClassifier(n_estimators=20, random_state=378)
DecisionTreeClassifier;0.8195;0.8312;0.8195;0.8219;0.8403;0.8528;0.8403;0.8419;0.9;0.9048;0.9;0.9012;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
DecisionTreeClassifier;0.8295;0.8389;0.8295;0.8308;0.7847;0.7975;0.7847;0.7875;0.9;0.9048;0.9;0.9012;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
RandomForestClassifier;0.8248;0.8306;0.8248;0.8258;0.7986;0.8087;0.7986;0.8012;0.9;0.9048;0.9;0.9012;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 854};RandomForestClassifier(n_estimators=20, random_state=854)
DecisionTreeClassifier;0.8032;0.8135;0.8032;0.805;0.8958;0.8985;0.8958;0.8964;0.9;0.9048;0.9;0.9012;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
RandomForestClassifier;0.831;0.8357;0.831;0.832;0.8403;0.8392;0.8403;0.839;0.9;0.9069;0.9;0.9006;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 854};RandomForestClassifier(n_estimators=5, random_state=854)
DecisionTreeClassifier;0.811;0.818;0.811;0.8123;0.8611;0.8645;0.8611;0.8602;0.9;0.9019;0.9;0.8999;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
RandomForestClassifier;0.8225;0.832;0.8225;0.8239;0.8472;0.8466;0.8472;0.8468;0.8833;0.8894;0.8833;0.8848;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 797};RandomForestClassifier(n_estimators=10, random_state=797)
DecisionTreeClassifier;0.8202;0.8321;0.8202;0.8222;0.8403;0.8429;0.8403;0.841;0.8833;0.8918;0.8833;0.8847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
RandomForestClassifier;0.8179;0.8255;0.8179;0.8189;0.8472;0.8541;0.8472;0.8493;0.8833;0.8918;0.8833;0.8847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 854};RandomForestClassifier(n_estimators=20, random_state=854)
DecisionTreeClassifier;0.8302;0.8404;0.8302;0.8318;0.8056;0.8137;0.8056;0.8062;0.8833;0.8918;0.8833;0.8847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
KNeighborsClassifier;0.7901;0.8025;0.7901;0.7907;0.8264;0.8394;0.8264;0.829;0.8833;0.8972;0.8833;0.8842;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8202;0.8268;0.8202;0.8212;0.7917;0.7989;0.7917;0.7941;0.8833;0.8868;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 378};RandomForestClassifier(n_estimators=5, random_state=378)
RandomForestClassifier;0.8318;0.8407;0.8318;0.8329;0.7569;0.7662;0.7569;0.7559;0.8833;0.8868;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 854};RandomForestClassifier(n_estimators=20, random_state=854)
RandomForestClassifier;0.8264;0.8308;0.8264;0.827;0.8125;0.8183;0.8125;0.8139;0.8833;0.8868;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 378};RandomForestClassifier(n_estimators=20, random_state=378)
RandomForestClassifier;0.8164;0.8227;0.8164;0.817;0.8264;0.8303;0.8264;0.8278;0.8833;0.8868;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 854};RandomForestClassifier(n_estimators=10, random_state=854)
RandomForestClassifier;0.8326;0.8383;0.8326;0.8331;0.7986;0.8131;0.7986;0.8017;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 797};RandomForestClassifier(n_estimators=5, random_state=797)
RandomForestClassifier;0.8263;0.8325;0.8263;0.8274;0.8264;0.8358;0.8264;0.8289;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 797};RandomForestClassifier(n_estimators=10, random_state=797)
RandomForestClassifier;0.8163;0.8245;0.8163;0.8163;0.7778;0.7952;0.7778;0.7819;0.8833;0.8833;0.8833;0.8833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 854};RandomForestClassifier(n_estimators=5, random_state=854)
RandomForestClassifier;0.8271;0.8315;0.8271;0.8278;0.8125;0.8122;0.8125;0.8123;0.8833;0.8842;0.8833;0.8823;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 378};RandomForestClassifier(n_estimators=10, random_state=378)
DecisionTreeClassifier;0.8233;0.8349;0.8233;0.8253;0.7917;0.8126;0.7917;0.7955;0.8667;0.8759;0.8667;0.8684;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
KNeighborsClassifier;0.7894;0.794;0.7894;0.7893;0.8056;0.826;0.8056;0.8098;0.8667;0.8799;0.8667;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.8179;0.8291;0.8179;0.8205;0.8542;0.8563;0.8542;0.8528;0.8667;0.8788;0.8667;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
RandomForestClassifier;0.8179;0.8258;0.8179;0.8192;0.7847;0.8011;0.7847;0.7886;0.8667;0.869;0.8667;0.8674;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 378};RandomForestClassifier(n_estimators=5, random_state=378)
DecisionTreeClassifier;0.8348;0.8434;0.8348;0.8361;0.75;0.7565;0.75;0.7504;0.8667;0.869;0.8667;0.8674;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
RandomForestClassifier;0.8125;0.8193;0.8125;0.8136;0.8472;0.8543;0.8472;0.8492;0.8667;0.8709;0.8667;0.8673;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 797};RandomForestClassifier(n_estimators=20, random_state=797)
RandomForestClassifier;0.8233;0.8277;0.8233;0.8236;0.8125;0.8222;0.8125;0.8154;0.8667;0.8709;0.8667;0.8673;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 854};RandomForestClassifier(n_estimators=10, random_state=854)
RandomForestClassifier;0.8187;0.824;0.8187;0.8196;0.8611;0.8657;0.8611;0.8619;0.8667;0.8709;0.8667;0.8673;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 797};RandomForestClassifier(n_estimators=20, random_state=797)
DecisionTreeClassifier;0.821;0.8341;0.821;0.8229;0.7986;0.7981;0.7986;0.7976;0.8667;0.8709;0.8667;0.8673;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
RandomForestClassifier;0.8171;0.8234;0.8171;0.8185;0.7917;0.7925;0.7917;0.792;0.8667;0.8681;0.8667;0.867;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 797};RandomForestClassifier(n_estimators=10, random_state=797)
DecisionTreeClassifier;0.8156;0.829;0.8156;0.8174;0.8542;0.857;0.8542;0.8552;0.8667;0.8759;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
KNeighborsClassifier;0.7955;0.808;0.7955;0.7945;0.7292;0.7279;0.7292;0.7273;0.8667;0.8759;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8202;0.8269;0.8202;0.8214;0.8542;0.8604;0.8542;0.8554;0.8667;0.8759;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
RandomForestClassifier;0.8164;0.821;0.8164;0.8174;0.7917;0.7934;0.7917;0.7915;0.8667;0.8664;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 378};RandomForestClassifier(n_estimators=5, random_state=378)
RandomForestClassifier;0.8125;0.8186;0.8125;0.8131;0.8333;0.8346;0.8333;0.8337;0.8667;0.8699;0.8667;0.8659;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 797};RandomForestClassifier(n_estimators=5, random_state=797)
DecisionTreeClassifier;0.8218;0.8325;0.8218;0.8228;0.7708;0.7868;0.7708;0.7732;0.8667;0.8699;0.8667;0.8659;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
RandomForestClassifier;0.8225;0.8274;0.8225;0.823;0.7778;0.7857;0.7778;0.7706;0.8667;0.8677;0.8667;0.8645;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 854};RandomForestClassifier(n_estimators=20, random_state=854)
DecisionTreeClassifier;0.821;0.8332;0.821;0.8231;0.8125;0.8198;0.8125;0.813;0.85;0.8609;0.85;0.852;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
MLPClassifier;0.7468;0.7696;0.7468;0.746;0.8403;0.845;0.8403;0.8415;0.85;0.8636;0.85;0.8519;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
KNeighborsClassifier;0.7855;0.7937;0.7855;0.7854;0.8125;0.8332;0.8125;0.815;0.85;0.8636;0.85;0.8519;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8141;0.8202;0.8141;0.8155;0.8472;0.8549;0.8472;0.8492;0.85;0.8545;0.85;0.8511;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 797};RandomForestClassifier(n_estimators=10, random_state=797)
KNeighborsClassifier;0.7902;0.7996;0.7902;0.7907;0.8264;0.8257;0.8264;0.826;0.85;0.8579;0.85;0.8507;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7917;0.8012;0.7917;0.7921;0.8542;0.8571;0.8542;0.8552;0.85;0.8579;0.85;0.8507;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7855;0.7975;0.7855;0.7853;0.8403;0.8492;0.8403;0.8427;0.85;0.8579;0.85;0.8507;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.7361;0.7661;0.7361;0.7375;0.7778;0.7825;0.7778;0.7779;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7192;0.7522;0.7192;0.7194;0.8333;0.8426;0.8333;0.8327;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
SVC;0.7253;0.7557;0.7253;0.7263;0.8125;0.8172;0.8125;0.8109;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7253;0.7604;0.7253;0.7265;0.8194;0.8248;0.8194;0.8211;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7214;0.7564;0.7214;0.722;0.8681;0.8886;0.8681;0.8712;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7206;0.7571;0.7206;0.7204;0.8472;0.8581;0.8472;0.8482;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7299;0.7626;0.7299;0.7309;0.8333;0.8313;0.8333;0.83;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
SVC;0.723;0.7586;0.723;0.7237;0.8681;0.8695;0.8681;0.8683;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
SVC;0.7245;0.7599;0.7245;0.7257;0.8333;0.8433;0.8333;0.8347;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
SVC;0.7268;0.7611;0.7268;0.7268;0.8125;0.8164;0.8125;0.8133;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
SVC;0.7369;0.7651;0.7369;0.7377;0.7917;0.8092;0.7917;0.7898;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.7307;0.7647;0.7307;0.7301;0.7708;0.7743;0.7708;0.7722;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.7277;0.7642;0.7277;0.7279;0.8333;0.8442;0.8333;0.8339;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.733;0.7649;0.733;0.7336;0.7847;0.7951;0.7847;0.786;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.7276;0.7594;0.7276;0.729;0.8333;0.8365;0.8333;0.8335;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.7261;0.76;0.7261;0.7266;0.8472;0.8452;0.8472;0.8445;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.7277;0.7631;0.7277;0.728;0.7847;0.8231;0.7847;0.7871;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
RandomForestClassifier;0.8288;0.8368;0.8288;0.8303;0.8125;0.8168;0.8125;0.814;0.85;0.8563;0.85;0.8504;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 378};RandomForestClassifier(n_estimators=5, random_state=378)
DecisionTreeClassifier;0.8179;0.8264;0.8179;0.8194;0.8403;0.8545;0.8403;0.8427;0.85;0.85;0.85;0.85;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
DecisionTreeClassifier;0.8094;0.8157;0.8094;0.8105;0.8125;0.8331;0.8125;0.8167;0.85;0.85;0.85;0.85;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
DecisionTreeClassifier;0.811;0.8246;0.811;0.8129;0.8611;0.8594;0.8611;0.8594;0.85;0.8517;0.85;0.8498;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
DecisionTreeClassifier;0.8132;0.8226;0.8132;0.8149;0.7986;0.8192;0.7986;0.8021;0.8333;0.8465;0.8333;0.8354;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
KNeighborsClassifier;0.7978;0.8079;0.7978;0.7976;0.7778;0.8033;0.7778;0.7819;0.8333;0.8434;0.8333;0.8352;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8086;0.8186;0.8086;0.8099;0.8681;0.8841;0.8681;0.8709;0.8333;0.8391;0.8333;0.8348;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
KNeighborsClassifier;0.7994;0.8105;0.7994;0.8003;0.8194;0.8369;0.8194;0.8223;0.8333;0.8518;0.8333;0.8346;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.7292;0.7588;0.7292;0.729;0.7847;0.7992;0.7847;0.7879;0.8333;0.8518;0.8333;0.8346;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
KNeighborsClassifier;0.7831;0.7946;0.7831;0.7841;0.8264;0.8295;0.8264;0.827;0.8333;0.8458;0.8333;0.8338;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8186;0.8255;0.8186;0.8203;0.8333;0.8349;0.8333;0.8339;0.8333;0.8347;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=146)
DecisionTreeClassifier;0.8117;0.8227;0.8117;0.8135;0.8681;0.8712;0.8681;0.869;0.8333;0.8347;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=281)
DecisionTreeClassifier;0.8164;0.8252;0.8164;0.8176;0.8611;0.8628;0.8611;0.8618;0.8333;0.8348;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
SVC;0.7299;0.7653;0.7299;0.731;0.7986;0.8013;0.7986;0.7996;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
SVC;0.7315;0.7611;0.7315;0.7324;0.7708;0.7856;0.7708;0.7726;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7361;0.769;0.7361;0.7372;0.7431;0.7417;0.7431;0.7408;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
SVC;0.723;0.7598;0.723;0.7226;0.8542;0.8632;0.8542;0.8557;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
KNeighborsClassifier;0.7925;0.8006;0.7925;0.7918;0.7708;0.7732;0.7708;0.7707;0.8333;0.8379;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.7283;0.7636;0.7283;0.728;0.7986;0.8036;0.7986;0.7999;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7237;0.7602;0.7237;0.7255;0.8264;0.8408;0.8264;0.8278;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.7253;0.758;0.7253;0.726;0.8403;0.8415;0.8403;0.8404;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 757};SVC(C=10, random_state=757)
SVC;0.7292;0.763;0.7292;0.7292;0.7639;0.799;0.7639;0.7696;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
KNeighborsClassifier;0.8017;0.8084;0.8017;0.8013;0.7917;0.796;0.7917;0.7912;0.8333;0.8379;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8257;0.834;0.8257;0.8274;0.8194;0.8232;0.8194;0.8193;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
SVC;0.7321;0.7648;0.7321;0.7328;0.7431;0.7645;0.7431;0.7449;0.8333;0.8432;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
DecisionTreeClassifier;0.8202;0.8334;0.8202;0.8218;0.7778;0.7947;0.7778;0.7815;0.8333;0.8379;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
DecisionTreeClassifier;0.8248;0.8342;0.8248;0.8265;0.8194;0.8176;0.8194;0.8181;0.8333;0.8357;0.8333;0.8331;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=146)
KNeighborsClassifier;0.8017;0.8114;0.8017;0.8022;0.8194;0.8354;0.8194;0.8221;0.8333;0.8561;0.8333;0.833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
RandomForestClassifier;0.8133;0.8197;0.8133;0.8141;0.8611;0.8667;0.8611;0.8623;0.8333;0.8338;0.8333;0.8322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 378};RandomForestClassifier(n_estimators=20, random_state=378)
RandomForestClassifier;0.8149;0.8223;0.8149;0.8151;0.8819;0.8875;0.8819;0.8831;0.8333;0.8387;0.8333;0.8317;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 854};RandomForestClassifier(n_estimators=10, random_state=854)
KNeighborsClassifier;0.794;0.798;0.794;0.7939;0.7847;0.7932;0.7847;0.7862;0.8167;0.8287;0.8167;0.8178;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.7546;0.7773;0.7546;0.7553;0.8194;0.8253;0.8194;0.8203;0.8167;0.8277;0.8167;0.8175;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7531;0.7793;0.7531;0.7527;0.8056;0.808;0.8056;0.8065;0.8167;0.8201;0.8167;0.8173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
MLPClassifier;0.7654;0.7795;0.7654;0.7661;0.8403;0.8479;0.8403;0.8419;0.8167;0.8201;0.8167;0.8173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
MLPClassifier;0.7692;0.7916;0.7692;0.7692;0.7778;0.7773;0.7778;0.7775;0.8167;0.8201;0.8167;0.8173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7554;0.7746;0.7554;0.7554;0.8125;0.8185;0.8125;0.8145;0.8167;0.8201;0.8167;0.8173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
DecisionTreeClassifier;0.8279;0.8382;0.8279;0.8296;0.7917;0.7937;0.7917;0.7908;0.8167;0.8201;0.8167;0.8173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
MLPClassifier;0.7539;0.7764;0.7539;0.7535;0.8056;0.8053;0.8056;0.8043;0.8167;0.8201;0.8167;0.8173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
MLPClassifier;0.7538;0.7741;0.7538;0.7534;0.7917;0.7955;0.7917;0.7919;0.8167;0.8205;0.8167;0.8172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
KNeighborsClassifier;0.78;0.7893;0.78;0.7802;0.7986;0.8013;0.7986;0.7992;0.8167;0.8238;0.8167;0.8172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=15)
KNeighborsClassifier;0.8025;0.8082;0.8025;0.8031;0.8264;0.8381;0.8264;0.8278;0.8167;0.8406;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.7538;0.777;0.7538;0.7546;0.8056;0.8086;0.8056;0.8047;0.8167;0.8273;0.8167;0.817;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7655;0.7854;0.7655;0.7653;0.8125;0.8132;0.8125;0.8126;0.8167;0.8273;0.8167;0.817;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7508;0.7725;0.7508;0.7509;0.8194;0.8288;0.8194;0.8212;0.8167;0.8273;0.8167;0.817;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7569;0.7808;0.7569;0.757;0.8264;0.8238;0.8264;0.8242;0.8167;0.8273;0.8167;0.817;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
KNeighborsClassifier;0.801;0.8143;0.801;0.8017;0.75;0.7517;0.75;0.7503;0.8167;0.8248;0.8167;0.8165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.7338;0.7671;0.7338;0.7352;0.8056;0.8149;0.8056;0.8069;0.8167;0.8215;0.8167;0.8165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 718};SVC(C=10, random_state=718)
MLPClassifier;0.7692;0.7871;0.7692;0.7703;0.7986;0.812;0.7986;0.799;0.8167;0.8215;0.8167;0.8165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
SVC;0.7253;0.7608;0.7253;0.7272;0.8125;0.8173;0.8125;0.8129;0.8167;0.8215;0.8167;0.8165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
SVC;0.7206;0.7541;0.7206;0.7212;0.8611;0.8603;0.8611;0.8605;0.8167;0.8217;0.8167;0.816;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 394};SVC(C=10, random_state=394)
KNeighborsClassifier;0.8063;0.8154;0.8063;0.8075;0.7917;0.7969;0.7917;0.7918;0.8167;0.8193;0.8167;0.8157;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7863;0.7978;0.7863;0.7864;0.7708;0.7696;0.7708;0.7687;0.8167;0.8193;0.8167;0.8157;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8163;0.8251;0.8163;0.8183;0.8472;0.8487;0.8472;0.8477;0.8167;0.8228;0.8167;0.8156;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 146};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=146)
DecisionTreeClassifier;0.821;0.831;0.821;0.8226;0.8056;0.8032;0.8056;0.804;0.8167;0.8174;0.8167;0.8125;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=281)
MLPClassifier;0.7524;0.7744;0.7524;0.7523;0.8194;0.8187;0.8194;0.819;0.8;0.8013;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
MLPClassifier;0.7508;0.7749;0.7508;0.75;0.8264;0.8305;0.8264;0.8278;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7524;0.7708;0.7524;0.7529;0.8819;0.8819;0.8819;0.8819;0.8;0.8013;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
MLPClassifier;0.7507;0.7727;0.7507;0.7504;0.8333;0.8345;0.8333;0.8337;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7523;0.7755;0.7523;0.7523;0.8611;0.8674;0.8611;0.8627;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
MLPClassifier;0.7493;0.7721;0.7493;0.7489;0.8611;0.8613;0.8611;0.8587;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.747;0.7699;0.747;0.7463;0.8333;0.8449;0.8333;0.8353;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.7632;0.782;0.7632;0.7628;0.7708;0.779;0.7708;0.7736;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.7554;0.7786;0.7554;0.7553;0.7917;0.7981;0.7917;0.7937;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.7631;0.7867;0.7631;0.7637;0.7917;0.7909;0.7917;0.7902;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.7584;0.7777;0.7584;0.7586;0.8542;0.8734;0.8542;0.8563;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.7485;0.7714;0.7485;0.749;0.8611;0.8688;0.8611;0.8631;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
MLPClassifier;0.7531;0.775;0.7531;0.7531;0.8194;0.8214;0.8194;0.8202;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.7539;0.7768;0.7539;0.7537;0.8403;0.8412;0.8403;0.84;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 113, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=113)
KNeighborsClassifier;0.7924;0.8013;0.7924;0.7915;0.7569;0.7582;0.7569;0.7533;0.8;0.8151;0.8;0.8001;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7963;0.8025;0.7963;0.7962;0.8264;0.828;0.8264;0.825;0.8;0.8178;0.8;0.8;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8017;0.8137;0.8017;0.8029;0.7917;0.7986;0.7917;0.7936;0.8;0.8014;0.8;0.7998;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7939;0.804;0.7939;0.7933;0.8333;0.8365;0.8333;0.8335;0.8;0.8083;0.8;0.7987;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
DecisionTreeClassifier;0.8241;0.832;0.8241;0.8253;0.75;0.7495;0.75;0.7494;0.8;0.8016;0.8;0.7965;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 281};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=281)
MLPClassifier;0.7454;0.7703;0.7454;0.745;0.8333;0.8353;0.8333;0.8336;0.7833;0.7857;0.7833;0.7835;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
MLPClassifier;0.7453;0.7719;0.7453;0.7448;0.8889;0.8915;0.8889;0.8897;0.7833;0.7857;0.7833;0.7835;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 895, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=895)
KNeighborsClassifier;0.7816;0.79;0.7816;0.781;0.7014;0.7496;0.7014;0.6809;0.7833;0.8158;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.7569;0.7779;0.7569;0.7568;0.7986;0.7975;0.7986;0.798;0.7833;0.7838;0.7833;0.7832;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 510, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=510)
KNeighborsClassifier;0.7708;0.785;0.7708;0.7697;0.7639;0.7637;0.7639;0.7627;0.7833;0.792;0.7833;0.783;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7879;0.7951;0.7879;0.7861;0.7569;0.7794;0.7569;0.7597;0.7833;0.792;0.7833;0.783;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7947;0.8026;0.7947;0.7954;0.8264;0.8466;0.8264;0.8278;0.7833;0.8023;0.7833;0.782;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8133;0.8225;0.8133;0.8148;0.7917;0.7943;0.7917;0.7926;0.7833;0.7915;0.7833;0.7809;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=881)
KNeighborsClassifier;0.7963;0.8055;0.7963;0.7964;0.7639;0.7625;0.7639;0.7597;0.7667;0.7778;0.7667;0.7668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.7887;0.7954;0.7887;0.7893;0.7708;0.7723;0.7708;0.7714;0.75;0.7502;0.75;0.7488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
LogisticRegression;0.6829;0.7051;0.6829;0.6831;0.6597;0.6735;0.6597;0.6631;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6759;0.7034;0.6759;0.676;0.6875;0.7002;0.6875;0.6873;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6929;0.7154;0.6929;0.6943;0.6597;0.677;0.6597;0.657;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6898;0.7155;0.6898;0.6906;0.6319;0.6448;0.6319;0.6327;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6868;0.7083;0.6868;0.6876;0.6736;0.6954;0.6736;0.6744;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6806;0.7021;0.6806;0.682;0.7083;0.7277;0.7083;0.7058;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6744;0.6938;0.6744;0.6753;0.7153;0.7356;0.7153;0.7173;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6859;0.7081;0.6859;0.6867;0.7153;0.7503;0.7153;0.7195;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6767;0.7003;0.6767;0.6768;0.7292;0.7492;0.7292;0.7325;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6844;0.7058;0.6844;0.6853;0.6667;0.697;0.6667;0.6656;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6829;0.7022;0.6829;0.683;0.7014;0.7239;0.7014;0.7056;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6891;0.7082;0.6891;0.6899;0.6667;0.7063;0.6667;0.6637;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.686;0.7085;0.686;0.6859;0.7083;0.7202;0.7083;0.7065;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6806;0.7004;0.6806;0.6805;0.6458;0.6697;0.6458;0.6461;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6751;0.6971;0.6751;0.6743;0.7292;0.7372;0.7292;0.7295;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6844;0.7053;0.6844;0.6844;0.6875;0.7086;0.6875;0.6888;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6798;0.7045;0.6798;0.6791;0.7153;0.7376;0.7153;0.7193;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.6775;0.6996;0.6775;0.6774;0.7153;0.7343;0.7153;0.7191;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6967;0.7188;0.6967;0.6981;0.6181;0.6234;0.6181;0.6159;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 849, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=849)"
LogisticRegression;0.676;0.697;0.676;0.6765;0.7222;0.7339;0.7222;0.7235;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.689;0.711;0.689;0.6901;0.6458;0.6813;0.6458;0.6394;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6844;0.7067;0.6844;0.6837;0.6806;0.7023;0.6806;0.6822;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6828;0.7027;0.6828;0.683;0.6806;0.7092;0.6806;0.6806;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6836;0.7086;0.6836;0.6847;0.7014;0.7213;0.7014;0.7018;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6913;0.7128;0.6913;0.6916;0.6181;0.6376;0.6181;0.6137;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6783;0.7015;0.6783;0.6784;0.7083;0.7261;0.7083;0.7093;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 195, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=195)"
LogisticRegression;0.6898;0.7167;0.6898;0.6901;0.6806;0.6909;0.6806;0.6805;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6883;0.71;0.6883;0.6889;0.6528;0.6878;0.6528;0.6523;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6774;0.698;0.6774;0.6777;0.6806;0.7099;0.6806;0.6855;0.6833;0.6852;0.6833;0.6834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
LogisticRegression;0.6821;0.7049;0.6821;0.6825;0.6875;0.7219;0.6875;0.6893;0.6667;0.6695;0.6667;0.667;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 378, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=378)"
