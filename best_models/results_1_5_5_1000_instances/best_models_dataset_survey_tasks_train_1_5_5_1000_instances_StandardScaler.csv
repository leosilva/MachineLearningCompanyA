Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8829;0.8838;0.8829;0.8829;0.9069;0.9082;0.9069;0.9069;0.9167;0.9205;0.9167;0.916;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8833;0.8838;0.8833;0.8831;0.9138;0.9141;0.9138;0.9139;0.9;0.9029;0.9;0.8989;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
MLPClassifier;0.8828;0.8833;0.8828;0.883;0.9347;0.935;0.9347;0.9344;0.9;0.9029;0.9;0.8989;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.881;0.8813;0.881;0.8811;0.8931;0.8938;0.8931;0.8927;0.9;0.9036;0.9;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8798;0.8796;0.8798;0.8799;0.9107;0.9112;0.9107;0.9099;0.9;0.9036;0.9;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8779;0.8782;0.8779;0.878;0.9103;0.9108;0.9103;0.9104;0.9;0.9036;0.9;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8806;0.8811;0.8806;0.8807;0.931;0.931;0.931;0.931;0.9;0.9036;0.9;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8779;0.878;0.8779;0.878;0.931;0.9333;0.931;0.9305;0.9;0.9036;0.9;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8882;0.889;0.8882;0.8881;0.921;0.921;0.921;0.921;0.9;0.9036;0.9;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
RandomForestClassifier;0.9257;0.9264;0.9257;0.9256;0.9034;0.9039;0.9034;0.9035;0.8833;0.8942;0.8833;0.8854;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
KNeighborsClassifier;0.9017;0.9038;0.9017;0.9017;0.8931;0.8932;0.8931;0.8931;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.9082;0.9112;0.9082;0.9082;0.9034;0.9062;0.9034;0.9033;0.8833;0.9055;0.8833;0.8833;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9078;0.9104;0.9078;0.9077;0.9;0.9052;0.9;0.9007;0.8833;0.9055;0.8833;0.8833;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
MLPClassifier;0.907;0.9092;0.907;0.9068;0.9038;0.9054;0.9038;0.904;0.8833;0.9055;0.8833;0.8833;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
RandomForestClassifier;0.9288;0.9293;0.9288;0.9287;0.9244;0.9247;0.9244;0.9244;0.8833;0.8836;0.8833;0.8823;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
MLPClassifier;0.8829;0.8835;0.8829;0.8832;0.9;0.9027;0.9;0.8976;0.8833;0.8842;0.8833;0.8823;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8802;0.8808;0.8802;0.8803;0.9069;0.9073;0.9069;0.9063;0.8833;0.8844;0.8833;0.8814;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
MLPClassifier;0.8844;0.8849;0.8844;0.8844;0.931;0.931;0.931;0.9307;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8794;0.8805;0.8794;0.8795;0.9172;0.9172;0.9172;0.9169;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8859;0.8864;0.8859;0.8859;0.9072;0.9093;0.9072;0.9061;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8825;0.8829;0.8825;0.8825;0.9;0.8994;0.9;0.8991;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
MLPClassifier;0.8829;0.884;0.8829;0.8828;0.9;0.9001;0.9;0.9;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8775;0.878;0.8775;0.8773;0.9138;0.9172;0.9138;0.9128;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8806;0.8822;0.8806;0.8804;0.9313;0.9318;0.9313;0.9307;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8863;0.8865;0.8863;0.8861;0.9141;0.9143;0.9141;0.9134;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8817;0.8821;0.8817;0.8818;0.9138;0.9141;0.9138;0.9131;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8817;0.8821;0.8817;0.8817;0.9276;0.9272;0.9276;0.9267;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8794;0.8799;0.8794;0.8794;0.9241;0.9254;0.9241;0.9233;0.8833;0.8881;0.8833;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
MLPClassifier;0.9093;0.9112;0.9093;0.9093;0.9103;0.9112;0.9103;0.9101;0.8667;0.8867;0.8667;0.8672;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9039;0.9063;0.9039;0.9039;0.9244;0.9255;0.9244;0.9245;0.8667;0.8867;0.8667;0.8672;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.9089;0.9112;0.9089;0.909;0.9172;0.9245;0.9172;0.9176;0.8667;0.8867;0.8667;0.8672;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.9066;0.9088;0.9066;0.9066;0.9172;0.9205;0.9172;0.9172;0.8667;0.8867;0.8667;0.8672;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.9093;0.9112;0.9093;0.9094;0.921;0.9209;0.921;0.9209;0.8667;0.8816;0.8667;0.867;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.91;0.9122;0.91;0.91;0.8935;0.896;0.8935;0.8938;0.8667;0.8816;0.8667;0.867;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
DecisionTreeClassifier;0.9031;0.9044;0.9031;0.9032;0.9313;0.9314;0.9313;0.9312;0.8667;0.8816;0.8667;0.867;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=33)
RandomForestClassifier;0.9246;0.9253;0.9246;0.9246;0.9172;0.9191;0.9172;0.9162;0.8667;0.8692;0.8667;0.8669;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
RandomForestClassifier;0.9261;0.9264;0.9261;0.926;0.9276;0.9279;0.9276;0.9275;0.8667;0.8667;0.8667;0.8667;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
RandomForestClassifier;0.8664;0.8673;0.8664;0.8666;0.8522;0.852;0.8522;0.8519;0.8667;0.869;0.8667;0.8664;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
RandomForestClassifier;0.9223;0.9229;0.9223;0.922;0.9379;0.9378;0.9379;0.9377;0.8667;0.869;0.8667;0.8664;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
KNeighborsClassifier;0.8974;0.8991;0.8974;0.8972;0.9138;0.9155;0.9138;0.9141;0.8667;0.8664;0.8667;0.8662;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.9074;0.9094;0.9074;0.9074;0.9172;0.9193;0.9172;0.9166;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
MLPClassifier;0.9078;0.9096;0.9078;0.9077;0.8966;0.8972;0.8966;0.8966;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.9058;0.9082;0.9058;0.9058;0.9313;0.9319;0.9313;0.9313;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
MLPClassifier;0.9097;0.9119;0.9097;0.9096;0.9072;0.9078;0.9072;0.9072;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.9093;0.9112;0.9093;0.9092;0.9241;0.9262;0.9241;0.9243;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
MLPClassifier;0.9066;0.9089;0.9066;0.9067;0.9276;0.9279;0.9276;0.9276;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9135;0.9153;0.9135;0.9134;0.8966;0.898;0.8966;0.8966;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
DecisionTreeClassifier;0.8932;0.8943;0.8932;0.8933;0.7931;0.7985;0.7931;0.7925;0.8667;0.8699;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=529)
MLPClassifier;0.9101;0.9116;0.9101;0.9101;0.9034;0.9039;0.9034;0.9035;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9101;0.9131;0.9101;0.91;0.9103;0.9141;0.9103;0.9102;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.9085;0.9107;0.9085;0.9084;0.9241;0.927;0.9241;0.9242;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9062;0.9085;0.9062;0.9062;0.9347;0.9352;0.9347;0.9347;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
MLPClassifier;0.9066;0.908;0.9066;0.9065;0.9069;0.9068;0.9069;0.9065;0.8667;0.896;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
RandomForestClassifier;0.9269;0.9274;0.9269;0.9269;0.921;0.9216;0.921;0.9204;0.8667;0.8656;0.8667;0.8658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
MLPClassifier;0.8798;0.8814;0.8798;0.8794;0.9172;0.9185;0.9172;0.9175;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
MLPClassifier;0.8787;0.8798;0.8787;0.8786;0.9172;0.9173;0.9172;0.9168;0.8667;0.8675;0.8667;0.8656;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
RandomForestClassifier;0.9258;0.9268;0.9258;0.9257;0.9034;0.9036;0.9034;0.9033;0.8667;0.8675;0.8667;0.8656;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
MLPClassifier;0.8805;0.8821;0.8805;0.8806;0.9072;0.9079;0.9072;0.9073;0.8667;0.8675;0.8667;0.8656;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
MLPClassifier;0.8855;0.8859;0.8855;0.8857;0.8866;0.8865;0.8866;0.886;0.8667;0.8731;0.8667;0.8651;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
MLPClassifier;0.8825;0.8828;0.8825;0.8827;0.9141;0.9141;0.9141;0.914;0.8667;0.8731;0.8667;0.8651;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
KNeighborsClassifier;0.8492;0.8523;0.8492;0.8493;0.8832;0.8833;0.8832;0.8832;0.8667;0.8731;0.8667;0.8651;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8932;0.8956;0.8932;0.8934;0.9138;0.9155;0.9138;0.9138;0.8667;0.8731;0.8667;0.8651;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8802;0.8808;0.8802;0.8803;0.8862;0.8866;0.8862;0.8853;0.8667;0.8677;0.8667;0.8645;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8768;0.8765;0.8768;0.8766;0.9414;0.9418;0.9414;0.9411;0.8667;0.8673;0.8667;0.8637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
MLPClassifier;0.8841;0.8849;0.8841;0.8842;0.8931;0.8931;0.8931;0.8928;0.8667;0.8673;0.8667;0.8637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8802;0.8809;0.8802;0.8803;0.9107;0.9121;0.9107;0.91;0.8667;0.8673;0.8667;0.8637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
MLPClassifier;0.8806;0.8816;0.8806;0.8804;0.9138;0.9141;0.9138;0.9137;0.8667;0.8673;0.8667;0.8637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8794;0.8797;0.8794;0.8792;0.9276;0.928;0.9276;0.9276;0.8667;0.8673;0.8667;0.8637;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
KNeighborsClassifier;0.9009;0.9032;0.9009;0.9008;0.8586;0.8622;0.8586;0.8584;0.8667;0.8766;0.8667;0.8635;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8924;0.8939;0.8924;0.8922;0.9069;0.9095;0.9069;0.9072;0.8667;0.8766;0.8667;0.8635;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8901;0.8928;0.8901;0.8899;0.921;0.9212;0.921;0.9209;0.8667;0.8766;0.8667;0.8635;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8967;0.8984;0.8967;0.8968;0.9069;0.9155;0.9069;0.9077;0.8667;0.8766;0.8667;0.8635;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8925;0.8947;0.8925;0.8924;0.9034;0.9088;0.9034;0.9035;0.8667;0.8766;0.8667;0.8635;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.85;0.8537;0.85;0.8501;0.8552;0.8563;0.8552;0.855;0.8667;0.875;0.8667;0.8632;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 287};RandomForestClassifier(n_estimators=5, random_state=287)
RandomForestClassifier;0.8477;0.8509;0.8477;0.8476;0.8517;0.8557;0.8517;0.8521;0.8667;0.875;0.8667;0.8632;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 911};RandomForestClassifier(n_estimators=10, random_state=911)
MLPClassifier;0.8787;0.8797;0.8787;0.8787;0.9345;0.9366;0.9345;0.9339;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8787;0.8793;0.8787;0.8786;0.9207;0.9221;0.9207;0.9196;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8809;0.8825;0.8809;0.8807;0.9107;0.9108;0.9107;0.9107;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
MLPClassifier;0.8783;0.8781;0.8783;0.8782;0.9138;0.9137;0.9138;0.9132;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
RandomForestClassifier;0.8553;0.8592;0.8553;0.8555;0.8379;0.8412;0.8379;0.8377;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
MLPClassifier;0.8806;0.8804;0.8806;0.8806;0.9138;0.9145;0.9138;0.9131;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8844;0.8856;0.8844;0.8844;0.9069;0.9076;0.9069;0.9054;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8745;0.8751;0.8745;0.8747;0.9345;0.9355;0.9345;0.9337;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
MLPClassifier;0.8791;0.88;0.8791;0.879;0.9207;0.9208;0.9207;0.9199;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 791, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=791)
MLPClassifier;0.8813;0.8817;0.8813;0.8814;0.9345;0.9356;0.9345;0.9339;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
MLPClassifier;0.8833;0.884;0.8833;0.8832;0.9034;0.9032;0.9034;0.9029;0.8667;0.8737;0.8667;0.8625;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
DecisionTreeClassifier;0.9051;0.908;0.9051;0.9051;0.9103;0.9142;0.9103;0.9099;0.85;0.8709;0.85;0.8514;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
RandomForestClassifier;0.9269;0.9273;0.9269;0.9269;0.9172;0.9176;0.9172;0.9172;0.85;0.8557;0.85;0.8514;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
SVC;0.8622;0.8674;0.8622;0.8621;0.9207;0.9214;0.9207;0.9207;0.85;0.857;0.85;0.8508;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8679;0.8738;0.8679;0.8678;0.9103;0.9114;0.9103;0.9104;0.85;0.857;0.85;0.8508;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
MLPClassifier;0.9078;0.9112;0.9078;0.9077;0.9034;0.9032;0.9034;0.9032;0.85;0.8625;0.85;0.8505;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
SVC;0.8022;0.8132;0.8022;0.8037;0.8483;0.8526;0.8483;0.8476;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.7972;0.8081;0.7972;0.7992;0.9103;0.9099;0.9103;0.9093;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
SVC;0.8002;0.8102;0.8002;0.8022;0.8793;0.8839;0.8793;0.8778;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.8017;0.8121;0.8017;0.8034;0.8763;0.8759;0.8763;0.876;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7991;0.81;0.7991;0.8011;0.8966;0.8971;0.8966;0.896;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8005;0.8119;0.8005;0.8025;0.866;0.8685;0.866;0.8661;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7982;0.8099;0.7982;0.8004;0.8763;0.876;0.8763;0.8757;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.8018;0.812;0.8018;0.8039;0.831;0.8302;0.831;0.8301;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
SVC;0.804;0.814;0.804;0.8054;0.8828;0.8824;0.8828;0.8811;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
SVC;0.8044;0.8151;0.8044;0.8064;0.8621;0.8614;0.8621;0.861;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
SVC;0.7967;0.8084;0.7967;0.7989;0.8763;0.8773;0.8763;0.8767;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8024;0.8122;0.8024;0.8042;0.8694;0.8706;0.8694;0.8699;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
RandomForestClassifier;0.9219;0.9224;0.9219;0.9219;0.9241;0.9241;0.9241;0.9241;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
SVC;0.8067;0.8171;0.8067;0.8086;0.8655;0.8672;0.8655;0.8642;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.7995;0.8092;0.7995;0.8012;0.8586;0.8577;0.8586;0.8579;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.801;0.8116;0.801;0.8029;0.8483;0.8491;0.8483;0.8487;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
KNeighborsClassifier;0.8461;0.849;0.8461;0.8464;0.8483;0.8503;0.8483;0.8476;0.85;0.8563;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.8079;0.8175;0.8079;0.8092;0.8276;0.8256;0.8276;0.8259;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7968;0.8075;0.7968;0.7991;0.9103;0.9102;0.9103;0.9101;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7976;0.8088;0.7976;0.7996;0.8828;0.8848;0.8828;0.8827;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.8025;0.8134;0.8025;0.8042;0.8724;0.873;0.8724;0.8718;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.7983;0.8087;0.7983;0.8002;0.8759;0.8763;0.8759;0.8748;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.8045;0.8137;0.8045;0.8059;0.8655;0.8654;0.8655;0.8638;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.8024;0.8135;0.8024;0.8046;0.8454;0.8513;0.8454;0.8446;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.7999;0.8105;0.7999;0.8014;0.8724;0.8728;0.8724;0.8726;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8013;0.8115;0.8013;0.8033;0.8763;0.8755;0.8763;0.8755;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.8014;0.8135;0.8014;0.8041;0.8483;0.8505;0.8483;0.8476;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.7986;0.8104;0.7986;0.801;0.8385;0.8372;0.8385;0.837;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.7945;0.8055;0.7945;0.7959;0.9172;0.9175;0.9172;0.9165;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8033;0.8137;0.8033;0.8051;0.8931;0.8957;0.8931;0.8929;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8083;0.8181;0.8083;0.8101;0.8276;0.8286;0.8276;0.828;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8064;0.8169;0.8064;0.8084;0.8931;0.8926;0.8931;0.8923;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.7968;0.8071;0.7968;0.7985;0.8655;0.8705;0.8655;0.8641;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.801;0.8103;0.801;0.8022;0.8552;0.8559;0.8552;0.8546;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.7995;0.8107;0.7995;0.8016;0.8759;0.8752;0.8759;0.8744;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.8021;0.8118;0.8021;0.8038;0.8793;0.8796;0.8793;0.8795;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.804;0.8149;0.804;0.8058;0.8729;0.8721;0.8729;0.8723;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.8028;0.8128;0.8028;0.8047;0.8557;0.8542;0.8557;0.8543;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.801;0.8115;0.801;0.8029;0.8724;0.8724;0.8724;0.8722;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.7979;0.8085;0.7979;0.8;0.8759;0.8746;0.8759;0.8744;0.85;0.8514;0.85;0.8504;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
MLPClassifier;0.9143;0.9164;0.9143;0.9143;0.8862;0.8928;0.8862;0.8863;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
MLPClassifier;0.9078;0.91;0.9078;0.9078;0.9034;0.9038;0.9034;0.9036;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
DecisionTreeClassifier;0.907;0.9081;0.907;0.9069;0.9172;0.9189;0.9172;0.9175;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
DecisionTreeClassifier;0.9135;0.9145;0.9135;0.9134;0.9069;0.9083;0.9069;0.9073;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
MLPClassifier;0.9058;0.9082;0.9058;0.9057;0.9347;0.9363;0.9347;0.9347;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
MLPClassifier;0.9119;0.9139;0.9119;0.9118;0.8969;0.8992;0.8969;0.8967;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.9081;0.9102;0.9081;0.9081;0.9175;0.9191;0.9175;0.9175;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9073;0.9104;0.9073;0.9072;0.9038;0.9043;0.9038;0.9038;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9112;0.9129;0.9112;0.9112;0.9072;0.9108;0.9072;0.9068;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
DecisionTreeClassifier;0.9101;0.9106;0.9101;0.9099;0.9;0.9045;0.9;0.9006;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
MLPClassifier;0.9085;0.9109;0.9085;0.9083;0.9138;0.9143;0.9138;0.9138;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
MLPClassifier;0.9089;0.9117;0.9089;0.9088;0.9034;0.9053;0.9034;0.9035;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
MLPClassifier;0.9078;0.9107;0.9078;0.9078;0.9207;0.9226;0.9207;0.9206;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.9085;0.9112;0.9085;0.9084;0.9138;0.9157;0.9138;0.9138;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
DecisionTreeClassifier;0.9051;0.9058;0.9051;0.9051;0.9414;0.9416;0.9414;0.9414;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
MLPClassifier;0.9097;0.9122;0.9097;0.9095;0.9138;0.9141;0.9138;0.9137;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 979, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=979)
MLPClassifier;0.9031;0.9052;0.9031;0.9032;0.9313;0.9319;0.9313;0.9311;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
MLPClassifier;0.9116;0.9132;0.9116;0.9115;0.8969;0.8976;0.8969;0.897;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
MLPClassifier;0.9059;0.9079;0.9059;0.9057;0.9276;0.9277;0.9276;0.9276;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
MLPClassifier;0.9139;0.916;0.9139;0.9139;0.8724;0.8723;0.8724;0.8721;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
RandomForestClassifier;0.8729;0.8746;0.8729;0.873;0.8621;0.8667;0.8621;0.8625;0.85;0.8544;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
MLPClassifier;0.907;0.9091;0.907;0.9068;0.8828;0.8828;0.8828;0.8828;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
MLPClassifier;0.9101;0.9117;0.9101;0.91;0.9;0.9017;0.9;0.8997;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
MLPClassifier;0.9058;0.9083;0.9058;0.9056;0.9414;0.9421;0.9414;0.9414;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
DecisionTreeClassifier;0.9085;0.9098;0.9085;0.9083;0.9138;0.9152;0.9138;0.914;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
MLPClassifier;0.9059;0.9076;0.9059;0.9058;0.9345;0.9352;0.9345;0.9345;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.9104;0.9133;0.9104;0.9103;0.9241;0.9245;0.9241;0.9242;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
DecisionTreeClassifier;0.9054;0.9062;0.9054;0.9054;0.9141;0.9178;0.9141;0.9147;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9051;0.9065;0.9051;0.905;0.9103;0.9138;0.9103;0.9106;0.85;0.8769;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
RandomForestClassifier;0.925;0.9251;0.925;0.9249;0.9;0.9012;0.9;0.9003;0.85;0.8517;0.85;0.8498;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
KNeighborsClassifier;0.9032;0.9042;0.9032;0.903;0.9069;0.9065;0.9069;0.9065;0.85;0.8517;0.85;0.8498;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.9093;0.9113;0.9093;0.9093;0.9141;0.9146;0.9141;0.9142;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
DecisionTreeClassifier;0.9058;0.9068;0.9058;0.9058;0.8862;0.888;0.8862;0.8863;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
KNeighborsClassifier;0.8527;0.8555;0.8527;0.8527;0.8448;0.8472;0.8448;0.8448;0.85;0.8524;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9093;0.91;0.9093;0.9091;0.9175;0.9177;0.9175;0.9176;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 48};RandomForestClassifier(n_estimators=20, random_state=48)
DecisionTreeClassifier;0.907;0.9076;0.907;0.9069;0.9069;0.9114;0.9069;0.9072;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=397)
DecisionTreeClassifier;0.9043;0.9053;0.9043;0.9043;0.9381;0.938;0.9381;0.9378;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
DecisionTreeClassifier;0.9051;0.9064;0.9051;0.9051;0.8966;0.8995;0.8966;0.8969;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=574)
DecisionTreeClassifier;0.9081;0.909;0.9081;0.9081;0.9034;0.9054;0.9034;0.9038;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=330)
KNeighborsClassifier;0.858;0.8609;0.858;0.8581;0.8625;0.8628;0.8625;0.8626;0.85;0.8583;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.9123;0.9131;0.9123;0.9123;0.9;0.9053;0.9;0.9;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=252)
KNeighborsClassifier;0.85;0.8527;0.85;0.8501;0.8552;0.8552;0.8552;0.8547;0.85;0.8524;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.9051;0.9061;0.9051;0.905;0.9207;0.9215;0.9207;0.9208;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=252)
DecisionTreeClassifier;0.9031;0.9038;0.9031;0.9031;0.9278;0.93;0.9278;0.9281;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=252)
MLPClassifier;0.9104;0.9126;0.9104;0.9103;0.9103;0.9119;0.9103;0.9105;0.85;0.8705;0.85;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
RandomForestClassifier;0.8722;0.8735;0.8722;0.8722;0.8414;0.8419;0.8414;0.8413;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
RandomForestClassifier;0.9273;0.9274;0.9273;0.9272;0.9072;0.9065;0.9072;0.9065;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
KNeighborsClassifier;0.9009;0.9018;0.9009;0.9008;0.9;0.902;0.9;0.9004;0.85;0.8591;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8741;0.8762;0.8741;0.874;0.8552;0.8552;0.8552;0.8551;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
RandomForestClassifier;0.925;0.9256;0.925;0.9249;0.9038;0.9048;0.9038;0.9038;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
KNeighborsClassifier;0.8465;0.8503;0.8465;0.8467;0.8586;0.8592;0.8586;0.8586;0.85;0.8597;0.85;0.849;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9257;0.9263;0.9257;0.9257;0.9103;0.9107;0.9103;0.9104;0.85;0.8577;0.85;0.8488;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
KNeighborsClassifier;0.8473;0.85;0.8473;0.8474;0.8724;0.8729;0.8724;0.8725;0.85;0.8577;0.85;0.8488;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.9112;0.9132;0.9112;0.9112;0.8966;0.8984;0.8966;0.8962;0.85;0.8724;0.85;0.8487;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
MLPClassifier;0.9077;0.9096;0.9077;0.9078;0.921;0.9209;0.921;0.9209;0.85;0.8724;0.85;0.8487;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
MLPClassifier;0.9143;0.9159;0.9143;0.9143;0.8931;0.8952;0.8931;0.893;0.85;0.8724;0.85;0.8487;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
RandomForestClassifier;0.9238;0.924;0.9238;0.9237;0.9003;0.9013;0.9003;0.8992;0.85;0.8493;0.85;0.8486;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
KNeighborsClassifier;0.8951;0.8963;0.8951;0.895;0.931;0.9321;0.931;0.931;0.85;0.8492;0.85;0.8485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9066;0.9078;0.9066;0.9063;0.9069;0.9079;0.9069;0.9072;0.85;0.8492;0.85;0.8485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9005;0.9016;0.9005;0.9004;0.9103;0.9111;0.9103;0.9094;0.85;0.8492;0.85;0.8485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8994;0.9004;0.8994;0.8993;0.9;0.9003;0.9;0.8994;0.85;0.8492;0.85;0.8485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.928;0.9283;0.928;0.928;0.9141;0.9156;0.9141;0.9133;0.85;0.8492;0.85;0.8485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
KNeighborsClassifier;0.9012;0.9021;0.9012;0.9013;0.9207;0.9218;0.9207;0.9205;0.85;0.8492;0.85;0.8485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9036;0.9048;0.9036;0.9035;0.9172;0.9196;0.9172;0.9162;0.85;0.8492;0.85;0.8485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9051;0.9061;0.9051;0.9049;0.9207;0.9215;0.9207;0.9207;0.85;0.8518;0.85;0.8483;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8825;0.8825;0.8825;0.8823;0.9038;0.905;0.9038;0.9031;0.85;0.8518;0.85;0.8483;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8859;0.8865;0.8859;0.8862;0.89;0.891;0.89;0.8892;0.85;0.8518;0.85;0.8483;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
MLPClassifier;0.8848;0.886;0.8848;0.8846;0.8793;0.8801;0.8793;0.8795;0.85;0.8518;0.85;0.8483;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
RandomForestClassifier;0.9292;0.9297;0.9292;0.9291;0.931;0.9326;0.931;0.9314;0.85;0.8528;0.85;0.8482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
RandomForestClassifier;0.9261;0.9271;0.9261;0.926;0.9175;0.9179;0.9175;0.9176;0.85;0.8528;0.85;0.8482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
KNeighborsClassifier;0.9028;0.9039;0.9028;0.9026;0.9138;0.9137;0.9138;0.9134;0.85;0.8528;0.85;0.8482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8618;0.8621;0.8618;0.8618;0.8935;0.8944;0.8935;0.8935;0.85;0.8528;0.85;0.8482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
RandomForestClassifier;0.9119;0.9128;0.9119;0.9118;0.9175;0.9174;0.9175;0.9175;0.85;0.8644;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 69};RandomForestClassifier(n_estimators=20, random_state=69)
KNeighborsClassifier;0.9005;0.9026;0.9005;0.9006;0.8897;0.8901;0.8897;0.8898;0.85;0.8644;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8948;0.8974;0.8948;0.895;0.8931;0.8973;0.8931;0.8934;0.85;0.8644;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8829;0.8838;0.8829;0.8831;0.9241;0.9243;0.9241;0.9237;0.85;0.849;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
MLPClassifier;0.9089;0.9116;0.9089;0.9089;0.9241;0.9252;0.9241;0.9242;0.85;0.8644;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
RandomForestClassifier;0.9177;0.9183;0.9177;0.9176;0.8897;0.8896;0.8897;0.8896;0.85;0.8644;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 48};RandomForestClassifier(n_estimators=20, random_state=48)
MLPClassifier;0.8817;0.8826;0.8817;0.8818;0.9038;0.9038;0.9038;0.9033;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8821;0.883;0.8821;0.8818;0.9244;0.9257;0.9244;0.9239;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
KNeighborsClassifier;0.8886;0.8922;0.8886;0.8884;0.9038;0.905;0.9038;0.9035;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8795;0.8807;0.8795;0.8794;0.9414;0.9416;0.9414;0.9414;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
KNeighborsClassifier;0.8932;0.8949;0.8932;0.8928;0.9103;0.9126;0.9103;0.9106;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8951;0.8972;0.8951;0.8943;0.8763;0.8766;0.8763;0.8764;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8955;0.8976;0.8955;0.8955;0.8793;0.8792;0.8793;0.879;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8978;0.8997;0.8978;0.8975;0.8897;0.8911;0.8897;0.8902;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8898;0.8922;0.8898;0.8896;0.9345;0.9356;0.9345;0.9347;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8989;0.9008;0.8989;0.8987;0.8694;0.8701;0.8694;0.8696;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8959;0.8982;0.8959;0.8957;0.9072;0.9074;0.9072;0.9073;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9032;0.9048;0.9032;0.9033;0.8862;0.8888;0.8862;0.8862;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.907;0.9085;0.907;0.907;0.8966;0.8972;0.8966;0.8967;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.894;0.8959;0.894;0.8939;0.8966;0.9;0.8966;0.896;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9027;0.9044;0.9027;0.9026;0.9072;0.9089;0.9072;0.907;0.85;0.8599;0.85;0.8473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9085;0.9091;0.9085;0.9084;0.9381;0.9383;0.9381;0.938;0.85;0.8607;0.85;0.8472;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 893};RandomForestClassifier(n_estimators=20, random_state=893)
KNeighborsClassifier;0.8373;0.8398;0.8373;0.837;0.8621;0.8626;0.8621;0.8622;0.85;0.8506;0.85;0.847;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8837;0.8845;0.8837;0.8835;0.9207;0.9216;0.9207;0.9204;0.85;0.8483;0.85;0.8467;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
MLPClassifier;0.8545;0.8563;0.8545;0.8543;0.8247;0.8255;0.8247;0.8248;0.85;0.8523;0.85;0.8466;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
KNeighborsClassifier;0.8928;0.8939;0.8928;0.8929;0.9381;0.938;0.9381;0.9378;0.85;0.8523;0.85;0.8466;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8454;0.8468;0.8454;0.845;0.8931;0.8932;0.8931;0.893;0.85;0.8523;0.85;0.8466;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8523;0.8545;0.8523;0.852;0.8379;0.843;0.8379;0.8388;0.85;0.8523;0.85;0.8466;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
DecisionTreeClassifier;0.9058;0.9077;0.9058;0.9056;0.9141;0.9166;0.9141;0.9141;0.85;0.8802;0.85;0.8463;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=252)
MLPClassifier;0.9089;0.9106;0.9089;0.909;0.9207;0.9237;0.9207;0.9208;0.85;0.8802;0.85;0.8463;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
KNeighborsClassifier;0.8392;0.8412;0.8392;0.8389;0.8247;0.8288;0.8247;0.8229;0.85;0.8587;0.85;0.8461;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8537;0.8563;0.8537;0.8538;0.8144;0.8166;0.8144;0.8136;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8488;0.8513;0.8488;0.849;0.8207;0.8271;0.8207;0.8195;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8415;0.8446;0.8415;0.8416;0.8517;0.8554;0.8517;0.8519;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=578)
DecisionTreeClassifier;0.8553;0.8579;0.8553;0.8555;0.8172;0.8206;0.8172;0.815;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8549;0.8577;0.8549;0.855;0.8488;0.8507;0.8488;0.849;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
MLPClassifier;0.8783;0.8795;0.8783;0.8783;0.9345;0.9341;0.9345;0.9341;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
MLPClassifier;0.8802;0.8806;0.8802;0.8801;0.9345;0.9347;0.9345;0.9341;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
DecisionTreeClassifier;0.8457;0.8487;0.8457;0.8458;0.8351;0.8379;0.8351;0.8341;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=406)
DecisionTreeClassifier;0.8427;0.8461;0.8427;0.8426;0.8345;0.8337;0.8345;0.8335;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
DecisionTreeClassifier;0.8465;0.85;0.8465;0.8466;0.8213;0.8209;0.8213;0.8202;0.85;0.8514;0.85;0.8458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=578)
RandomForestClassifier;0.8439;0.8472;0.8439;0.8439;0.8862;0.8862;0.8862;0.8861;0.85;0.8644;0.85;0.8453;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 643};RandomForestClassifier(n_estimators=20, random_state=643)
RandomForestClassifier;0.8588;0.8631;0.8588;0.8588;0.8103;0.8142;0.8103;0.8101;0.85;0.8644;0.85;0.8453;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
KNeighborsClassifier;0.8939;0.8957;0.8939;0.8936;0.9038;0.9062;0.9038;0.9034;0.85;0.8644;0.85;0.8453;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.9055;0.9064;0.9055;0.9054;0.9172;0.9172;0.9172;0.9172;0.85;0.8755;0.85;0.8452;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 893};RandomForestClassifier(n_estimators=20, random_state=893)
KNeighborsClassifier;0.8978;0.8995;0.8978;0.8978;0.8966;0.8979;0.8966;0.8964;0.85;0.8613;0.85;0.8444;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8925;0.8941;0.8925;0.8922;0.9138;0.9147;0.9138;0.9139;0.85;0.8613;0.85;0.8444;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8871;0.8876;0.8871;0.8873;0.8931;0.8944;0.8931;0.8918;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
MLPClassifier;0.8806;0.8819;0.8806;0.8806;0.931;0.9323;0.931;0.9311;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
KNeighborsClassifier;0.8381;0.8408;0.8381;0.8377;0.8552;0.8629;0.8552;0.8546;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8369;0.8401;0.8369;0.8364;0.831;0.8316;0.831;0.8308;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8553;0.8594;0.8553;0.8553;0.8345;0.8403;0.8345;0.8347;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 911};RandomForestClassifier(n_estimators=20, random_state=911)
KNeighborsClassifier;0.8259;0.8286;0.8259;0.8251;0.8552;0.8554;0.8552;0.8552;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8369;0.8403;0.8369;0.8368;0.8586;0.8586;0.8586;0.8583;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8301;0.8355;0.8301;0.8297;0.8414;0.8452;0.8414;0.8409;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8557;0.8597;0.8557;0.8558;0.8379;0.8401;0.8379;0.8378;0.85;0.8602;0.85;0.844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.8606;0.8642;0.8606;0.8607;0.8144;0.816;0.8144;0.8139;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 911};RandomForestClassifier(n_estimators=20, random_state=911)
RandomForestClassifier;0.8561;0.8594;0.8561;0.856;0.8207;0.8213;0.8207;0.8209;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 911};RandomForestClassifier(n_estimators=10, random_state=911)
DecisionTreeClassifier;0.8435;0.8476;0.8435;0.8435;0.8069;0.8209;0.8069;0.8054;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=406)
RandomForestClassifier;0.853;0.857;0.853;0.8531;0.8419;0.8504;0.8419;0.8422;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 34};RandomForestClassifier(n_estimators=20, random_state=34)
RandomForestClassifier;0.8526;0.8568;0.8526;0.8526;0.8729;0.8783;0.8729;0.8733;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
RandomForestClassifier;0.8485;0.8529;0.8485;0.8482;0.8793;0.8852;0.8793;0.8793;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 643};RandomForestClassifier(n_estimators=20, random_state=643)
RandomForestClassifier;0.8515;0.8552;0.8515;0.8515;0.8793;0.8889;0.8793;0.8797;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 34};RandomForestClassifier(n_estimators=10, random_state=34)
RandomForestClassifier;0.8485;0.8532;0.8485;0.8484;0.8586;0.8642;0.8586;0.8583;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 643};RandomForestClassifier(n_estimators=20, random_state=643)
RandomForestClassifier;0.8462;0.8505;0.8462;0.8464;0.8621;0.8623;0.8621;0.8619;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 643};RandomForestClassifier(n_estimators=20, random_state=643)
RandomForestClassifier;0.8534;0.8577;0.8534;0.8536;0.8586;0.8657;0.8586;0.8579;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 34};RandomForestClassifier(n_estimators=20, random_state=34)
RandomForestClassifier;0.8592;0.8628;0.8592;0.8592;0.8345;0.8412;0.8345;0.835;0.85;0.86;0.85;0.8436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 643};RandomForestClassifier(n_estimators=10, random_state=643)
DecisionTreeClassifier;0.9055;0.9065;0.9055;0.9056;0.8655;0.874;0.8655;0.865;0.8333;0.8706;0.8333;0.8369;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.8316;0.8331;0.8316;0.8318;0.8385;0.839;0.8385;0.8385;0.8333;0.8434;0.8333;0.8352;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=676)
SVC;0.8676;0.8715;0.8676;0.8673;0.8897;0.8905;0.8897;0.8895;0.8333;0.8507;0.8333;0.835;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8718;0.8753;0.8718;0.8713;0.9003;0.9028;0.9003;0.9007;0.8333;0.8409;0.8333;0.8349;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
KNeighborsClassifier;0.8335;0.8368;0.8335;0.8329;0.8759;0.8765;0.8759;0.8754;0.8333;0.8399;0.8333;0.8344;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.814;0.8157;0.814;0.8137;0.869;0.8714;0.869;0.8689;0.8333;0.8399;0.8333;0.8344;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
RandomForestClassifier;0.9215;0.9227;0.9215;0.9215;0.9381;0.9385;0.9381;0.938;0.8333;0.8355;0.8333;0.8341;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
RandomForestClassifier;0.9281;0.9292;0.9281;0.9281;0.9379;0.9384;0.9379;0.938;0.8333;0.8355;0.8333;0.8341;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
SVC;0.866;0.8712;0.866;0.8657;0.9278;0.9289;0.9278;0.9278;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8699;0.8763;0.8699;0.8698;0.8897;0.8913;0.8897;0.8899;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.876;0.8791;0.876;0.8758;0.8862;0.8889;0.8862;0.8863;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8729;0.8775;0.8729;0.8729;0.9241;0.9253;0.9241;0.924;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8683;0.8737;0.8683;0.8683;0.9138;0.9149;0.9138;0.9135;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.8698;0.8746;0.8698;0.8698;0.9175;0.9182;0.9175;0.9175;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8718;0.8777;0.8718;0.8715;0.9;0.9017;0.9;0.9001;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.871;0.8752;0.871;0.8709;0.9244;0.9267;0.9244;0.924;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8687;0.8738;0.8687;0.8685;0.921;0.9226;0.921;0.921;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8729;0.8784;0.8729;0.873;0.8828;0.884;0.8828;0.8827;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.8687;0.8739;0.8687;0.8686;0.9276;0.9278;0.9276;0.9276;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.871;0.8762;0.871;0.8709;0.9172;0.9181;0.9172;0.9173;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8691;0.8739;0.8691;0.8687;0.8931;0.8976;0.8931;0.8932;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8683;0.874;0.8683;0.8681;0.9207;0.9235;0.9207;0.9206;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8706;0.8755;0.8706;0.8704;0.9103;0.9104;0.9103;0.9103;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8675;0.8741;0.8675;0.8673;0.9072;0.9097;0.9072;0.9073;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8687;0.8724;0.8687;0.8684;0.9103;0.9108;0.9103;0.9104;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8687;0.8722;0.8687;0.8685;0.9175;0.9209;0.9175;0.9178;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8683;0.8739;0.8683;0.8682;0.9244;0.927;0.9244;0.9245;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8642;0.8713;0.8642;0.864;0.9276;0.9277;0.9276;0.9275;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8726;0.8787;0.8726;0.8725;0.8759;0.8788;0.8759;0.8754;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8726;0.8767;0.8726;0.8723;0.9103;0.9121;0.9103;0.9101;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8695;0.8745;0.8695;0.8692;0.9069;0.9093;0.9069;0.907;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.871;0.8766;0.871;0.8709;0.8897;0.8922;0.8897;0.8895;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8646;0.8698;0.8646;0.8639;0.9207;0.9221;0.9207;0.9209;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8691;0.874;0.8691;0.8689;0.8931;0.896;0.8931;0.8929;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8699;0.8764;0.8699;0.8698;0.9103;0.9123;0.9103;0.9103;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8653;0.8705;0.8653;0.8652;0.931;0.9314;0.931;0.9311;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.8687;0.8736;0.8687;0.8682;0.9072;0.9139;0.9072;0.9076;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.8668;0.8734;0.8668;0.8668;0.89;0.8939;0.89;0.8901;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.8714;0.876;0.8714;0.8711;0.9072;0.9077;0.9072;0.907;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8703;0.8773;0.8703;0.8702;0.8862;0.8886;0.8862;0.8863;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8718;0.8769;0.8718;0.8716;0.9069;0.9077;0.9069;0.9068;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.871;0.8764;0.871;0.871;0.9103;0.9106;0.9103;0.9104;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.8702;0.8748;0.8702;0.87;0.9072;0.909;0.9072;0.9071;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.8611;0.8666;0.8611;0.8608;0.9448;0.9449;0.9448;0.9446;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.868;0.8745;0.868;0.8678;0.9;0.8999;0.9;0.8998;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.868;0.8722;0.868;0.8677;0.9034;0.9044;0.9034;0.9032;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8748;0.8791;0.8748;0.8747;0.9034;0.9038;0.9034;0.9035;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.8691;0.8749;0.8691;0.869;0.9034;0.9051;0.9034;0.9031;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8687;0.874;0.8687;0.8686;0.9038;0.9044;0.9038;0.9037;0.8333;0.8446;0.8333;0.834;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.8657;0.8727;0.8657;0.8658;0.9;0.902;0.9;0.9001;0.8333;0.859;0.8333;0.8339;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.8653;0.8716;0.8653;0.8651;0.9141;0.9143;0.9141;0.9141;0.8333;0.859;0.8333;0.8339;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 916};SVC(C=10, random_state=916)
SVC;0.8676;0.8747;0.8676;0.8675;0.8793;0.8833;0.8793;0.879;0.8333;0.859;0.8333;0.8339;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8745;0.8799;0.8745;0.8743;0.869;0.8717;0.869;0.8693;0.8333;0.859;0.8333;0.8339;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8683;0.8746;0.8683;0.8682;0.8862;0.889;0.8862;0.8863;0.8333;0.859;0.8333;0.8339;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
RandomForestClassifier;0.9215;0.922;0.9215;0.9215;0.9517;0.9521;0.9517;0.9516;0.8333;0.836;0.8333;0.8335;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
SVC;0.8029;0.8134;0.8029;0.8049;0.8759;0.8753;0.8759;0.8748;0.8333;0.836;0.8333;0.8335;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.7987;0.809;0.7987;0.8008;0.8759;0.8771;0.8759;0.8733;0.8333;0.836;0.8333;0.8335;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.7986;0.809;0.7986;0.8008;0.8763;0.8762;0.8763;0.8758;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
SVC;0.7991;0.8091;0.7991;0.8008;0.8655;0.8654;0.8655;0.8624;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8009;0.8109;0.8009;0.8031;0.8797;0.8796;0.8797;0.8796;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
SVC;0.8048;0.8154;0.8048;0.8063;0.8414;0.8407;0.8414;0.8371;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
SVC;0.7976;0.8078;0.7976;0.7993;0.869;0.8692;0.869;0.8667;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.8033;0.8132;0.8033;0.8053;0.8897;0.8896;0.8897;0.889;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
SVC;0.799;0.8106;0.799;0.8002;0.8694;0.8701;0.8694;0.8689;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8009;0.8111;0.8009;0.8027;0.8488;0.8497;0.8488;0.8462;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8025;0.8128;0.8025;0.8044;0.8586;0.87;0.8586;0.855;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 715};SVC(C=10, random_state=715)
LogisticRegression;0.7719;0.7905;0.7719;0.7739;0.769;0.7838;0.769;0.7716;0.8333;0.8432;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
SVC;0.7998;0.8109;0.7998;0.8019;0.89;0.8921;0.89;0.8896;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
LogisticRegression;0.7864;0.8021;0.7864;0.7885;0.7966;0.8064;0.7966;0.7988;0.8333;0.8432;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
SVC;0.8025;0.8123;0.8025;0.8041;0.8897;0.8905;0.8897;0.8892;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
LogisticRegression;0.7868;0.8027;0.7868;0.789;0.831;0.8389;0.831;0.8328;0.8333;0.8432;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
MLPClassifier;0.9078;0.9092;0.9078;0.9077;0.9034;0.9034;0.9034;0.9034;0.8333;0.8511;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
SVC;0.7972;0.808;0.7972;0.799;0.8655;0.8686;0.8655;0.8626;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
MLPClassifier;0.9074;0.9093;0.9074;0.9073;0.9207;0.922;0.9207;0.9208;0.8333;0.8511;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 344, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=344)
KNeighborsClassifier;0.9012;0.9021;0.9012;0.9009;0.9347;0.9357;0.9347;0.9347;0.8333;0.8379;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.7944;0.8088;0.7944;0.7964;0.7766;0.7969;0.7766;0.7807;0.8333;0.8432;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
SVC;0.8033;0.8125;0.8033;0.805;0.8828;0.8833;0.8828;0.881;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.8025;0.8132;0.8025;0.8044;0.8557;0.8545;0.8557;0.8543;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.7983;0.8095;0.7983;0.8002;0.8724;0.8722;0.8724;0.8717;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 642};SVC(C=10, random_state=642)
SVC;0.7941;0.8049;0.7941;0.7961;0.8793;0.8803;0.8793;0.8797;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
LogisticRegression;0.7864;0.8009;0.7864;0.7887;0.7793;0.8058;0.7793;0.782;0.8333;0.8432;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
RandomForestClassifier;0.9261;0.9267;0.9261;0.926;0.9276;0.9277;0.9276;0.9276;0.8333;0.8357;0.8333;0.8331;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.9254;0.9264;0.9254;0.9252;0.9414;0.9415;0.9414;0.9414;0.8333;0.8357;0.8333;0.8331;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
RandomForestClassifier;0.9257;0.9261;0.9257;0.9257;0.9519;0.9522;0.9519;0.952;0.8333;0.8357;0.8333;0.8331;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
MLPClassifier;0.9085;0.9109;0.9085;0.9084;0.9175;0.9199;0.9175;0.9176;0.8333;0.8561;0.8333;0.833;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.912;0.9138;0.912;0.912;0.9069;0.9083;0.9069;0.9071;0.8333;0.8561;0.8333;0.833;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
RandomForestClassifier;0.8703;0.8711;0.8703;0.8702;0.8655;0.8656;0.8655;0.8646;0.8333;0.8331;0.8333;0.8329;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
RandomForestClassifier;0.8779;0.8791;0.8779;0.8779;0.8729;0.8731;0.8729;0.8729;0.8333;0.8331;0.8333;0.8329;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
RandomForestClassifier;0.8603;0.8608;0.8603;0.8604;0.8862;0.8913;0.8862;0.8866;0.8333;0.8331;0.8333;0.8329;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 306};RandomForestClassifier(n_estimators=10, random_state=306)
RandomForestClassifier;0.9223;0.9225;0.9223;0.9222;0.9313;0.9311;0.9313;0.9311;0.8333;0.8331;0.8333;0.8329;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
RandomForestClassifier;0.8703;0.8713;0.8703;0.87;0.8552;0.8567;0.8552;0.855;0.8333;0.8465;0.8333;0.8328;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
KNeighborsClassifier;0.8439;0.8475;0.8439;0.844;0.8862;0.8861;0.8862;0.886;0.8333;0.8374;0.8333;0.8328;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9123;0.9138;0.9123;0.9123;0.8832;0.8871;0.8832;0.8839;0.8333;0.8374;0.8333;0.8328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 274};RandomForestClassifier(n_estimators=5, random_state=274)
KNeighborsClassifier;0.8457;0.8493;0.8457;0.8461;0.8625;0.8635;0.8625;0.8624;0.8333;0.8374;0.8333;0.8328;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9235;0.9236;0.9235;0.9234;0.9379;0.9385;0.9379;0.938;0.8333;0.8341;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
KNeighborsClassifier;0.8484;0.8515;0.8484;0.8487;0.8557;0.8563;0.8557;0.8558;0.8333;0.8383;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9196;0.9201;0.9196;0.9195;0.9485;0.9502;0.9485;0.9481;0.8333;0.8383;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8695;0.8705;0.8695;0.8695;0.8655;0.8659;0.8655;0.8657;0.8333;0.8341;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 53};RandomForestClassifier(n_estimators=10, random_state=53)
KNeighborsClassifier;0.845;0.8481;0.845;0.8451;0.8897;0.8907;0.8897;0.8895;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8534;0.8563;0.8534;0.8537;0.8488;0.8515;0.8488;0.8488;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8496;0.8518;0.8496;0.8495;0.8552;0.8553;0.8552;0.855;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8526;0.8557;0.8526;0.8529;0.8694;0.8724;0.8694;0.8693;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8477;0.8508;0.8477;0.8482;0.8655;0.8656;0.8655;0.8654;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8508;0.8541;0.8508;0.851;0.8483;0.8506;0.8483;0.8486;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8557;0.8603;0.8557;0.856;0.8655;0.866;0.8655;0.8646;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8481;0.8511;0.8481;0.8483;0.8655;0.8662;0.8655;0.8656;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8499;0.8533;0.8499;0.85;0.8522;0.8527;0.8522;0.8519;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8526;0.8551;0.8526;0.8529;0.8966;0.8994;0.8966;0.897;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.84;0.8426;0.84;0.8402;0.89;0.8915;0.89;0.8901;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8542;0.857;0.8542;0.8544;0.8729;0.8733;0.8729;0.8725;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8519;0.8555;0.8519;0.852;0.8448;0.8445;0.8448;0.8438;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8534;0.8552;0.8534;0.8536;0.8454;0.8528;0.8454;0.8451;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8331;0.8343;0.8331;0.8331;0.8379;0.84;0.8379;0.8376;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
KNeighborsClassifier;0.8477;0.8507;0.8477;0.8479;0.8793;0.8797;0.8793;0.8789;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8491;0.8513;0.8491;0.8495;0.8832;0.8857;0.8832;0.8835;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8561;0.8585;0.8561;0.8563;0.8655;0.8652;0.8655;0.8652;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8481;0.8519;0.8481;0.8482;0.869;0.8695;0.869;0.8691;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8461;0.849;0.8461;0.8464;0.8454;0.8482;0.8454;0.8453;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8462;0.8495;0.8462;0.8466;0.8793;0.8812;0.8793;0.879;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8465;0.8495;0.8465;0.8468;0.8621;0.8654;0.8621;0.8624;0.8333;0.8367;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8305;0.8337;0.8305;0.8302;0.8448;0.8457;0.8448;0.845;0.8333;0.8333;0.8333;0.8323;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
MLPClassifier;0.8848;0.8855;0.8848;0.8846;0.8862;0.8859;0.8862;0.8854;0.8333;0.8333;0.8333;0.8323;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
KNeighborsClassifier;0.8974;0.8991;0.8974;0.8973;0.9347;0.9346;0.9347;0.9346;0.8333;0.8333;0.8333;0.8323;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8982;0.8993;0.8982;0.898;0.9241;0.9246;0.9241;0.9236;0.8333;0.8333;0.8333;0.8323;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8312;0.8349;0.8312;0.8309;0.8655;0.8664;0.8655;0.8652;0.8333;0.8333;0.8333;0.8323;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.9032;0.9043;0.9032;0.903;0.9103;0.9102;0.9103;0.9102;0.8333;0.8338;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9055;0.9069;0.9055;0.9053;0.9207;0.9211;0.9207;0.9207;0.8333;0.8338;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9032;0.9042;0.9032;0.9031;0.9207;0.9208;0.9207;0.9207;0.8333;0.8338;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8959;0.8969;0.8959;0.8959;0.9345;0.9342;0.9345;0.9342;0.8333;0.8338;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8997;0.9014;0.8997;0.8994;0.9;0.8998;0.9;0.8998;0.8333;0.8338;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.7784;0.7961;0.7784;0.7797;0.7759;0.7887;0.7759;0.7793;0.8333;0.8548;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7811;0.7975;0.7811;0.7832;0.8034;0.8176;0.8034;0.8061;0.8333;0.8548;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.7849;0.7997;0.7849;0.787;0.7897;0.8168;0.7897;0.7936;0.8333;0.8548;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.7868;0.8027;0.7868;0.7891;0.8;0.812;0.8;0.8015;0.8333;0.8548;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7891;0.8056;0.7891;0.7908;0.7801;0.7918;0.7801;0.7827;0.8333;0.8548;0.8333;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
DecisionTreeClassifier;0.9162;0.9172;0.9162;0.9161;0.9003;0.9025;0.9003;0.9005;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
DecisionTreeClassifier;0.907;0.9078;0.907;0.9068;0.9241;0.9248;0.9241;0.924;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9054;0.9059;0.9054;0.9055;0.921;0.922;0.921;0.9211;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9028;0.9037;0.9028;0.9026;0.9448;0.9468;0.9448;0.9447;0.8333;0.8599;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=330)
MLPClassifier;0.907;0.9096;0.907;0.9069;0.921;0.9215;0.921;0.9209;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 231, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=231)
DecisionTreeClassifier;0.912;0.9132;0.912;0.9119;0.9;0.9006;0.9;0.8995;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
DecisionTreeClassifier;0.9093;0.9103;0.9093;0.9092;0.9241;0.9254;0.9241;0.9239;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
DecisionTreeClassifier;0.9005;0.9024;0.9005;0.9005;0.9276;0.928;0.9276;0.9277;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
DecisionTreeClassifier;0.9043;0.9049;0.9043;0.9043;0.9034;0.9044;0.9034;0.9036;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
DecisionTreeClassifier;0.9093;0.9105;0.9093;0.9093;0.9207;0.9238;0.9207;0.9209;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.9085;0.9092;0.9085;0.9084;0.8966;0.8964;0.8966;0.8963;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.9085;0.9094;0.9085;0.9084;0.9278;0.928;0.9278;0.9278;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
RandomForestClassifier;0.9131;0.9137;0.9131;0.913;0.9103;0.9114;0.9103;0.9098;0.8333;0.8468;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 893};RandomForestClassifier(n_estimators=10, random_state=893)
MLPClassifier;0.9158;0.9177;0.9158;0.9159;0.8724;0.8783;0.8724;0.8726;0.8333;0.8468;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
DecisionTreeClassifier;0.8997;0.901;0.8997;0.8996;0.8935;0.8949;0.8935;0.8936;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=252)
KNeighborsClassifier;0.8886;0.8919;0.8886;0.8884;0.8862;0.8887;0.8862;0.8863;0.8333;0.8468;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.9032;0.9045;0.9032;0.9032;0.9103;0.9108;0.9103;0.9103;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=252)
DecisionTreeClassifier;0.91;0.911;0.91;0.91;0.9313;0.9317;0.9313;0.9312;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.905;0.9059;0.905;0.9049;0.9381;0.9385;0.9381;0.938;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
DecisionTreeClassifier;0.9074;0.9085;0.9074;0.9073;0.8931;0.8954;0.8931;0.893;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
DecisionTreeClassifier;0.9097;0.9106;0.9097;0.9096;0.8931;0.8954;0.8931;0.893;0.8333;0.8679;0.8333;0.8321;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
KNeighborsClassifier;0.8309;0.8346;0.8309;0.8302;0.8759;0.877;0.8759;0.8757;0.8333;0.836;0.8333;0.832;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.8228;0.8268;0.8228;0.8222;0.8552;0.8585;0.8552;0.8548;0.8333;0.836;0.8333;0.832;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
RandomForestClassifier;0.8725;0.8733;0.8725;0.8725;0.8454;0.8446;0.8454;0.8442;0.8333;0.838;0.8333;0.8317;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 951};RandomForestClassifier(n_estimators=20, random_state=951)
RandomForestClassifier;0.9216;0.922;0.9216;0.9215;0.9241;0.9256;0.9241;0.9244;0.8333;0.8387;0.8333;0.8317;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
RandomForestClassifier;0.8648;0.8662;0.8648;0.8649;0.8866;0.8869;0.8866;0.886;0.8333;0.838;0.8333;0.8317;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
KNeighborsClassifier;0.8974;0.8986;0.8974;0.8972;0.9276;0.9275;0.9276;0.9274;0.8333;0.8354;0.8333;0.8313;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8848;0.8865;0.8848;0.8849;0.9069;0.9067;0.9069;0.9065;0.8333;0.8383;0.8333;0.831;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 809, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=809)
KNeighborsClassifier;0.8289;0.8326;0.8289;0.8285;0.8379;0.8371;0.8379;0.8369;0.8333;0.8371;0.8333;0.8307;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.9101;0.9108;0.9101;0.9101;0.8931;0.8946;0.8931;0.8927;0.8333;0.8626;0.8333;0.8307;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
DecisionTreeClassifier;0.9062;0.9078;0.9062;0.9063;0.9038;0.904;0.9038;0.9038;0.8333;0.8626;0.8333;0.8307;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
KNeighborsClassifier;0.9028;0.9046;0.9028;0.9028;0.9175;0.9177;0.9175;0.9173;0.8333;0.8371;0.8333;0.8307;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8786;0.8794;0.8786;0.8786;0.9141;0.9137;0.9141;0.9138;0.8333;0.8371;0.8333;0.8307;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
KNeighborsClassifier;0.9001;0.9013;0.9001;0.8999;0.8931;0.895;0.8931;0.8928;0.8333;0.833;0.8333;0.8306;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8986;0.9005;0.8986;0.8984;0.9241;0.9247;0.9241;0.9243;0.8333;0.833;0.8333;0.8306;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.902;0.9035;0.902;0.9019;0.9207;0.9212;0.9207;0.9208;0.8333;0.833;0.8333;0.8306;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.902;0.9029;0.902;0.9018;0.9276;0.9275;0.9276;0.9272;0.8333;0.833;0.8333;0.8306;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9097;0.9112;0.9097;0.9096;0.9034;0.9036;0.9034;0.9035;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
DecisionTreeClassifier;0.907;0.9076;0.907;0.907;0.9345;0.9349;0.9345;0.9345;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=252)
RandomForestClassifier;0.912;0.9129;0.912;0.912;0.9172;0.9179;0.9172;0.9169;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 274};RandomForestClassifier(n_estimators=10, random_state=274)
RandomForestClassifier;0.9135;0.9141;0.9135;0.9135;0.8966;0.8977;0.8966;0.8966;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.9165;0.9179;0.9165;0.9164;0.9038;0.9043;0.9038;0.9039;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
KNeighborsClassifier;0.9036;0.9045;0.9036;0.9032;0.9069;0.9069;0.9069;0.9069;0.8333;0.8369;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9085;0.9103;0.9085;0.9085;0.9069;0.907;0.9069;0.9069;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
RandomForestClassifier;0.9135;0.9147;0.9135;0.9133;0.9241;0.9241;0.9241;0.9241;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.9108;0.9113;0.9108;0.9108;0.9103;0.9121;0.9103;0.9108;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 893};RandomForestClassifier(n_estimators=20, random_state=893)
DecisionTreeClassifier;0.9074;0.9095;0.9074;0.9075;0.9207;0.9212;0.9207;0.9206;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.9074;0.9093;0.9074;0.9073;0.9034;0.9046;0.9034;0.9035;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
RandomForestClassifier;0.9108;0.912;0.9108;0.9108;0.9207;0.9207;0.9207;0.9201;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 893};RandomForestClassifier(n_estimators=20, random_state=893)
RandomForestClassifier;0.9093;0.9101;0.9093;0.9093;0.8897;0.8922;0.8897;0.8899;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 69};RandomForestClassifier(n_estimators=20, random_state=69)
DecisionTreeClassifier;0.9051;0.9059;0.9051;0.905;0.9345;0.9352;0.9345;0.9346;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9108;0.9124;0.9108;0.9108;0.9;0.9003;0.9;0.9001;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9047;0.9056;0.9047;0.9047;0.9;0.9003;0.9;0.9001;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
DecisionTreeClassifier;0.9119;0.9128;0.9119;0.912;0.89;0.8938;0.89;0.8902;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
DecisionTreeClassifier;0.9089;0.9097;0.9089;0.9089;0.9207;0.9216;0.9207;0.9207;0.8333;0.8531;0.8333;0.8303;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=209)
MLPClassifier;0.8481;0.8495;0.8481;0.8478;0.8793;0.8813;0.8793;0.8786;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8423;0.8432;0.8423;0.842;0.8966;0.8968;0.8966;0.8966;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.8542;0.8554;0.8542;0.8542;0.8586;0.859;0.8586;0.858;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8473;0.8488;0.8473;0.8471;0.8621;0.8621;0.8621;0.862;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.845;0.8477;0.845;0.8447;0.8793;0.8801;0.8793;0.8795;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.8561;0.8575;0.8561;0.8557;0.8034;0.8036;0.8034;0.8024;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.8465;0.8473;0.8465;0.846;0.8655;0.8657;0.8655;0.8655;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
KNeighborsClassifier;0.8274;0.8307;0.8274;0.8275;0.8655;0.8677;0.8655;0.8651;0.8333;0.8429;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8492;0.8515;0.8492;0.8489;0.8522;0.853;0.8522;0.8522;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8519;0.8531;0.8519;0.8515;0.8655;0.8672;0.8655;0.8652;0.8333;0.8315;0.8333;0.8299;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8507;0.8522;0.8507;0.8506;0.8414;0.8427;0.8414;0.8409;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.85;0.8506;0.85;0.8498;0.8379;0.8379;0.8379;0.8379;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.8473;0.8486;0.8473;0.8471;0.8552;0.8572;0.8552;0.8546;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.8492;0.8502;0.8492;0.849;0.8621;0.8639;0.8621;0.8617;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8503;0.8515;0.8503;0.85;0.8488;0.8487;0.8488;0.8482;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.85;0.851;0.85;0.8496;0.8586;0.8587;0.8586;0.8586;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.8515;0.8524;0.8515;0.8514;0.8621;0.8629;0.8621;0.8619;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.8472;0.8482;0.8472;0.8469;0.8763;0.8781;0.8763;0.8764;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8504;0.8515;0.8504;0.85;0.8517;0.854;0.8517;0.8504;0.8333;0.8355;0.8333;0.8295;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
KNeighborsClassifier;0.8894;0.8921;0.8894;0.889;0.89;0.89;0.89;0.89;0.8333;0.8474;0.8333;0.8292;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8481;0.8508;0.8481;0.8481;0.8724;0.8772;0.8724;0.8726;0.8333;0.8474;0.8333;0.8292;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 34};RandomForestClassifier(n_estimators=20, random_state=34)
KNeighborsClassifier;0.8925;0.8939;0.8925;0.8924;0.9034;0.9036;0.9034;0.9035;0.8333;0.8474;0.8333;0.8292;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8347;0.8377;0.8347;0.8345;0.8621;0.8621;0.8621;0.862;0.8333;0.8474;0.8333;0.8292;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8859;0.8875;0.8859;0.8858;0.9207;0.9232;0.9207;0.9211;0.8333;0.8474;0.8333;0.8292;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8947;0.8961;0.8947;0.8947;0.9072;0.9103;0.9072;0.9075;0.8333;0.8474;0.8333;0.8292;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9105;0.9112;0.9105;0.9104;0.9034;0.904;0.9034;0.9027;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 610};RandomForestClassifier(n_estimators=20, random_state=610)
RandomForestClassifier;0.9089;0.9101;0.9089;0.9089;0.8966;0.8988;0.8966;0.8964;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 69};RandomForestClassifier(n_estimators=20, random_state=69)
RandomForestClassifier;0.9135;0.9152;0.9135;0.9135;0.9;0.9003;0.9;0.8998;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 893};RandomForestClassifier(n_estimators=10, random_state=893)
RandomForestClassifier;0.9097;0.9107;0.9097;0.9097;0.9207;0.9226;0.9207;0.9203;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 69};RandomForestClassifier(n_estimators=20, random_state=69)
RandomForestClassifier;0.9078;0.9086;0.9078;0.9077;0.9;0.8999;0.9;0.8998;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.9074;0.9087;0.9074;0.9074;0.9;0.9001;0.9;0.8999;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 274};RandomForestClassifier(n_estimators=5, random_state=274)
RandomForestClassifier;0.9127;0.9133;0.9127;0.9125;0.9207;0.9211;0.9207;0.9209;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 610};RandomForestClassifier(n_estimators=20, random_state=610)
RandomForestClassifier;0.9059;0.9071;0.9059;0.9058;0.9207;0.9219;0.9207;0.921;0.8333;0.8486;0.8333;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
DecisionTreeClassifier;0.848;0.8505;0.848;0.8481;0.8282;0.8312;0.8282;0.8282;0.8333;0.831;0.8333;0.829;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8504;0.8524;0.8504;0.8503;0.8172;0.8189;0.8172;0.8157;0.8333;0.831;0.8333;0.829;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8469;0.8493;0.8469;0.8469;0.8103;0.8125;0.8103;0.8106;0.8333;0.831;0.8333;0.829;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=215)
DecisionTreeClassifier;0.8477;0.8511;0.8477;0.8476;0.7862;0.7919;0.7862;0.7822;0.8333;0.833;0.8333;0.8288;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
KNeighborsClassifier;0.8894;0.8911;0.8894;0.8892;0.921;0.923;0.921;0.9212;0.8333;0.8458;0.8333;0.8285;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8978;0.8998;0.8978;0.8978;0.9069;0.9091;0.9069;0.9072;0.8333;0.8458;0.8333;0.8285;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8859;0.8879;0.8859;0.8858;0.8759;0.8793;0.8759;0.8759;0.8333;0.8458;0.8333;0.8285;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8978;0.9006;0.8978;0.8979;0.8897;0.8937;0.8897;0.8897;0.8333;0.8461;0.8333;0.8285;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.832;0.8348;0.832;0.8313;0.8034;0.8033;0.8034;0.8028;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.835;0.8391;0.835;0.8347;0.8419;0.8439;0.8419;0.842;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8305;0.8325;0.8305;0.8301;0.8621;0.8626;0.8621;0.8614;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8297;0.8355;0.8297;0.8289;0.8488;0.8499;0.8488;0.8488;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8312;0.8344;0.8312;0.8311;0.8414;0.8425;0.8414;0.8409;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8366;0.8388;0.8366;0.8363;0.8241;0.8245;0.8241;0.8236;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8301;0.8329;0.8301;0.8302;0.8448;0.8463;0.8448;0.8441;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8224;0.8287;0.8224;0.8219;0.8517;0.8538;0.8517;0.8518;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8324;0.8372;0.8324;0.8321;0.8655;0.8734;0.8655;0.8659;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8281;0.8324;0.8281;0.828;0.8454;0.8503;0.8454;0.8451;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8186;0.8225;0.8186;0.8183;0.8621;0.8652;0.8621;0.8618;0.8333;0.8449;0.8333;0.8278;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8484;0.8531;0.8484;0.8486;0.8694;0.8696;0.8694;0.8689;0.8333;0.846;0.8333;0.8276;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 287};RandomForestClassifier(n_estimators=10, random_state=287)
KNeighborsClassifier;0.8312;0.8342;0.8312;0.8308;0.8557;0.857;0.8557;0.8559;0.8333;0.8363;0.8333;0.8275;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8259;0.8277;0.8259;0.8257;0.8586;0.86;0.8586;0.8582;0.8333;0.8363;0.8333;0.8275;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8527;0.8562;0.8527;0.8527;0.8655;0.8672;0.8655;0.8656;0.8333;0.8363;0.8333;0.8275;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 911};RandomForestClassifier(n_estimators=20, random_state=911)
DecisionTreeClassifier;0.8882;0.8889;0.8882;0.8881;0.8419;0.8418;0.8419;0.8416;0.8333;0.8389;0.8333;0.8272;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=529)
DecisionTreeClassifier;0.8396;0.8424;0.8396;0.8395;0.89;0.8917;0.89;0.8904;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
DecisionTreeClassifier;0.8588;0.8619;0.8588;0.8589;0.8241;0.8293;0.8241;0.8238;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=961)
RandomForestClassifier;0.8458;0.8482;0.8458;0.8456;0.8655;0.8659;0.8655;0.8655;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 34};RandomForestClassifier(n_estimators=20, random_state=34)
RandomForestClassifier;0.8519;0.855;0.8519;0.852;0.8207;0.8321;0.8207;0.82;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
DecisionTreeClassifier;0.8557;0.8583;0.8557;0.8557;0.7973;0.8065;0.7973;0.7974;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
RandomForestClassifier;0.8419;0.8447;0.8419;0.8419;0.8862;0.8881;0.8862;0.8867;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
DecisionTreeClassifier;0.8481;0.8502;0.8481;0.8481;0.8;0.8044;0.8;0.7992;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8561;0.8587;0.8561;0.8562;0.7931;0.7966;0.7931;0.7933;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=961)
DecisionTreeClassifier;0.8442;0.847;0.8442;0.8442;0.9;0.9067;0.9;0.9008;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8404;0.8442;0.8404;0.8405;0.8655;0.8709;0.8655;0.8656;0.8333;0.8365;0.8333;0.8271;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
RandomForestClassifier;0.8526;0.8566;0.8526;0.8525;0.8729;0.8763;0.8729;0.8731;0.8333;0.8648;0.8333;0.8269;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 911};RandomForestClassifier(n_estimators=20, random_state=911)
DecisionTreeClassifier;0.9032;0.904;0.9032;0.9031;0.9069;0.9068;0.9069;0.9068;0.8333;0.866;0.8333;0.8264;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=252)
DecisionTreeClassifier;0.9078;0.908;0.9078;0.9076;0.9207;0.9218;0.9207;0.9204;0.8333;0.866;0.8333;0.8264;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
DecisionTreeClassifier;0.9116;0.9123;0.9116;0.9116;0.9069;0.9075;0.9069;0.9064;0.8333;0.866;0.8333;0.8264;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
RandomForestClassifier;0.8503;0.8536;0.8503;0.8503;0.8625;0.8633;0.8625;0.8627;0.8333;0.8611;0.8333;0.8258;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 34};RandomForestClassifier(n_estimators=20, random_state=34)
RandomForestClassifier;0.8553;0.8591;0.8553;0.8554;0.8552;0.8637;0.8552;0.8559;0.8333;0.8611;0.8333;0.8258;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.8495;0.8523;0.8495;0.8493;0.866;0.8688;0.866;0.8663;0.8333;0.8625;0.8333;0.8256;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 760};RandomForestClassifier(n_estimators=10, random_state=760)
RandomForestClassifier;0.8538;0.8578;0.8538;0.8539;0.8759;0.8762;0.8759;0.8753;0.8333;0.8625;0.8333;0.8256;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 911};RandomForestClassifier(n_estimators=10, random_state=911)
KNeighborsClassifier;0.8932;0.8952;0.8932;0.8933;0.8724;0.8762;0.8724;0.8728;0.8333;0.8489;0.8333;0.8255;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9001;0.9018;0.9001;0.8997;0.9003;0.902;0.9003;0.9001;0.8333;0.8489;0.8333;0.8255;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8308;0.8353;0.8308;0.8306;0.8797;0.8822;0.8797;0.8798;0.8333;0.8475;0.8333;0.8252;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8304;0.8314;0.8304;0.8299;0.8729;0.8729;0.8729;0.8729;0.8333;0.8463;0.8333;0.8245;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8549;0.8586;0.8549;0.8548;0.8316;0.8323;0.8316;0.8319;0.8333;0.8463;0.8333;0.8245;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 643};RandomForestClassifier(n_estimators=20, random_state=643)
RandomForestClassifier;0.8458;0.8494;0.8458;0.8457;0.8759;0.8763;0.8759;0.8758;0.8333;0.8463;0.8333;0.8245;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 896};RandomForestClassifier(n_estimators=10, random_state=896)
RandomForestClassifier;0.8538;0.857;0.8538;0.8538;0.8483;0.8545;0.8483;0.849;0.8333;0.8471;0.8333;0.8244;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 643};RandomForestClassifier(n_estimators=20, random_state=643)
RandomForestClassifier;0.8527;0.8557;0.8527;0.8528;0.8621;0.865;0.8621;0.8626;0.8333;0.8471;0.8333;0.8244;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
RandomForestClassifier;0.8553;0.8585;0.8553;0.8553;0.8414;0.8504;0.8414;0.8412;0.8333;0.8471;0.8333;0.8244;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 643};RandomForestClassifier(n_estimators=20, random_state=643)
RandomForestClassifier;0.8549;0.8589;0.8549;0.855;0.8552;0.857;0.8552;0.8542;0.8333;0.8681;0.8333;0.8218;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 760};RandomForestClassifier(n_estimators=10, random_state=760)
RandomForestClassifier;0.8534;0.8574;0.8534;0.8535;0.8586;0.8599;0.8586;0.8588;0.8333;0.8651;0.8333;0.821;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 34};RandomForestClassifier(n_estimators=10, random_state=34)
RandomForestClassifier;0.9242;0.9248;0.9242;0.9243;0.931;0.9309;0.931;0.9306;0.8167;0.8221;0.8167;0.818;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
KNeighborsClassifier;0.8132;0.8161;0.8132;0.8121;0.8144;0.819;0.8144;0.8144;0.8167;0.8221;0.8167;0.818;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8301;0.8316;0.8301;0.8304;0.869;0.8696;0.869;0.869;0.8167;0.8221;0.8167;0.818;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=676)
RandomForestClassifier;0.9265;0.9268;0.9265;0.9263;0.8966;0.8966;0.8966;0.8961;0.8167;0.8221;0.8167;0.818;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
KNeighborsClassifier;0.8936;0.8951;0.8936;0.8935;0.8931;0.8971;0.8931;0.8932;0.8167;0.8332;0.8167;0.8179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8362;0.8379;0.8362;0.8367;0.811;0.8238;0.811;0.8114;0.8167;0.8234;0.8167;0.8178;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=676)
SVC;0.8725;0.877;0.8725;0.8723;0.9103;0.9138;0.9103;0.9101;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.8733;0.8782;0.8733;0.8731;0.8862;0.8878;0.8862;0.8864;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.874;0.8783;0.874;0.8738;0.8832;0.8868;0.8832;0.8831;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, random_state=413)
SVC;0.8668;0.8726;0.8668;0.8667;0.9103;0.9118;0.9103;0.9103;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8733;0.878;0.8733;0.8731;0.9038;0.9049;0.9038;0.9037;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
SVC;0.8691;0.8758;0.8691;0.8688;0.9072;0.9079;0.9072;0.9074;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
DecisionTreeClassifier;0.8389;0.8401;0.8389;0.839;0.8655;0.8655;0.8655;0.8654;0.8167;0.8201;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
SVC;0.8668;0.8708;0.8668;0.8665;0.9038;0.9105;0.9038;0.9037;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 885};SVC(C=10, random_state=885)
SVC;0.8707;0.8766;0.8707;0.8706;0.9069;0.9109;0.9069;0.9072;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 608};SVC(C=10, random_state=608)
SVC;0.8683;0.8735;0.8683;0.8681;0.8966;0.8986;0.8966;0.8968;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 272};SVC(C=10, random_state=272)
SVC;0.8672;0.8728;0.8672;0.8669;0.9034;0.9035;0.9034;0.9034;0.8167;0.8224;0.8167;0.8173;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 887};SVC(C=10, random_state=887)
DecisionTreeClassifier;0.8316;0.8338;0.8316;0.8321;0.8448;0.8464;0.8448;0.8449;0.8167;0.818;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
RandomForestClassifier;0.9238;0.9245;0.9238;0.9237;0.9241;0.9246;0.9241;0.9243;0.8167;0.818;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
DecisionTreeClassifier;0.8426;0.8438;0.8426;0.8426;0.8522;0.8524;0.8522;0.8522;0.8167;0.818;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=309)
DecisionTreeClassifier;0.8408;0.8421;0.8408;0.8411;0.8138;0.814;0.8138;0.813;0.8167;0.8181;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=676)
KNeighborsClassifier;0.8519;0.8555;0.8519;0.8522;0.8345;0.8357;0.8345;0.8345;0.8167;0.8273;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9273;0.9278;0.9273;0.9272;0.9138;0.9146;0.9138;0.914;0.8167;0.8181;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
RandomForestClassifier;0.8676;0.8685;0.8676;0.8678;0.869;0.8695;0.869;0.8689;0.8167;0.819;0.8167;0.8168;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 306};RandomForestClassifier(n_estimators=10, random_state=306)
RandomForestClassifier;0.9265;0.9267;0.9265;0.9265;0.9241;0.9241;0.9241;0.9237;0.8167;0.8167;0.8167;0.8167;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
KNeighborsClassifier;0.9032;0.905;0.9032;0.9032;0.8724;0.8731;0.8724;0.8715;0.8167;0.8344;0.8167;0.8167;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.8909;0.8914;0.8909;0.891;0.866;0.8654;0.866;0.8651;0.8167;0.8241;0.8167;0.8166;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=741)
RandomForestClassifier;0.8691;0.8706;0.8691;0.8693;0.8655;0.8662;0.8655;0.8654;0.8167;0.8172;0.8167;0.8166;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
KNeighborsClassifier;0.8561;0.8589;0.8561;0.8562;0.8655;0.867;0.8655;0.8647;0.8167;0.8172;0.8167;0.8166;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8316;0.8329;0.8316;0.832;0.8276;0.8273;0.8276;0.8269;0.8167;0.8172;0.8167;0.8166;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
KNeighborsClassifier;0.848;0.8513;0.848;0.8484;0.89;0.8904;0.89;0.8901;0.8167;0.8215;0.8167;0.8165;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.848;0.8515;0.848;0.8484;0.8625;0.8633;0.8625;0.8628;0.8167;0.8215;0.8167;0.8165;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9261;0.9264;0.9261;0.926;0.9172;0.9185;0.9172;0.9174;0.8167;0.819;0.8167;0.8164;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
SVC;0.7987;0.8086;0.7987;0.8002;0.8828;0.8821;0.8828;0.881;0.8167;0.8163;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
RandomForestClassifier;0.9269;0.9272;0.9269;0.9268;0.9072;0.9118;0.9072;0.9057;0.8167;0.8203;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.8656;0.8661;0.8656;0.8656;0.8729;0.8733;0.8729;0.8723;0.8167;0.8163;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
SVC;0.8006;0.8115;0.8006;0.8025;0.8483;0.8475;0.8483;0.8473;0.8167;0.8163;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 582};SVC(C=10, random_state=582)
MLPClassifier;0.84;0.8436;0.84;0.8407;0.8724;0.8725;0.8724;0.8724;0.8167;0.8203;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8472;0.8504;0.8472;0.8479;0.8488;0.8488;0.8488;0.8482;0.8167;0.8203;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8365;0.8396;0.8365;0.8374;0.8625;0.8626;0.8625;0.8624;0.8167;0.8203;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
SVC;0.7998;0.8103;0.7998;0.8018;0.8729;0.8741;0.8729;0.8695;0.8167;0.8163;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
RandomForestClassifier;0.8607;0.8614;0.8607;0.8605;0.8935;0.8937;0.8935;0.8933;0.8167;0.8203;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
SVC;0.8005;0.8113;0.8005;0.8026;0.8591;0.8593;0.8591;0.858;0.8167;0.8163;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 616};SVC(C=10, random_state=616)
MLPClassifier;0.8377;0.8406;0.8377;0.8385;0.8552;0.857;0.8552;0.8537;0.8167;0.8203;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8362;0.8392;0.8362;0.8368;0.8729;0.8726;0.8729;0.8726;0.8167;0.8203;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8416;0.8444;0.8416;0.8419;0.8655;0.869;0.8655;0.8662;0.8167;0.8208;0.8167;0.8161;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
KNeighborsClassifier;0.8431;0.8461;0.8431;0.843;0.8759;0.8759;0.8759;0.8757;0.8167;0.8175;0.8167;0.816;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8503;0.8541;0.8503;0.8502;0.89;0.8931;0.89;0.8897;0.8167;0.8175;0.8167;0.816;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8442;0.8465;0.8442;0.8443;0.8179;0.8181;0.8179;0.8152;0.8167;0.8175;0.8167;0.816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=578)
MLPClassifier;0.9082;0.9106;0.9082;0.9082;0.9241;0.9268;0.9241;0.9243;0.8167;0.8302;0.8167;0.8159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.9081;0.9099;0.9081;0.9081;0.9172;0.9193;0.9172;0.9173;0.8167;0.8302;0.8167;0.8159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 130, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=130)
MLPClassifier;0.912;0.9138;0.912;0.9119;0.9069;0.9071;0.9069;0.9068;0.8167;0.8302;0.8167;0.8159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
MLPClassifier;0.9093;0.9107;0.9093;0.9093;0.9103;0.9112;0.9103;0.9105;0.8167;0.8302;0.8167;0.8159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 195, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=195)
DecisionTreeClassifier;0.8492;0.8528;0.8492;0.849;0.7828;0.7978;0.7828;0.7833;0.8167;0.8209;0.8167;0.8158;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=578)
RandomForestClassifier;0.9269;0.9274;0.9269;0.9269;0.9276;0.9275;0.9276;0.9273;0.8167;0.8193;0.8167;0.8157;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
RandomForestClassifier;0.9238;0.9245;0.9238;0.9238;0.9241;0.9263;0.9241;0.9244;0.8167;0.8193;0.8167;0.8157;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
KNeighborsClassifier;0.8492;0.8528;0.8492;0.8494;0.8828;0.8828;0.8828;0.8823;0.8167;0.8193;0.8167;0.8157;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.7879;0.8041;0.7879;0.7901;0.7904;0.8046;0.7904;0.7936;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.781;0.7971;0.781;0.783;0.7904;0.808;0.7904;0.7936;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7749;0.792;0.7749;0.7771;0.7904;0.7977;0.7904;0.7921;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7834;0.8005;0.7834;0.7855;0.7448;0.7595;0.7448;0.7488;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
RandomForestClassifier;0.8707;0.8715;0.8707;0.8708;0.8448;0.8465;0.8448;0.845;0.8167;0.8166;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
LogisticRegression;0.7872;0.803;0.7872;0.7894;0.7586;0.774;0.7586;0.7624;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7715;0.7888;0.7715;0.7736;0.7862;0.8012;0.7862;0.7891;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7822;0.7999;0.7822;0.7845;0.7759;0.7887;0.7759;0.7793;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7815;0.7981;0.7815;0.7837;0.7793;0.7939;0.7793;0.7826;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7876;0.803;0.7876;0.7895;0.7621;0.7819;0.7621;0.7669;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7788;0.7945;0.7788;0.7807;0.8034;0.8209;0.8034;0.8075;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7811;0.7984;0.7811;0.7831;0.7862;0.8039;0.7862;0.7893;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7926;0.8082;0.7926;0.7947;0.7552;0.7719;0.7552;0.7585;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7807;0.7978;0.7807;0.7829;0.8103;0.8169;0.8103;0.8121;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7746;0.792;0.7746;0.7769;0.8;0.8165;0.8;0.8021;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7707;0.7905;0.7707;0.773;0.8276;0.8309;0.8276;0.8282;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7765;0.7935;0.7765;0.7788;0.7966;0.8235;0.7966;0.7972;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7768;0.7925;0.7768;0.7789;0.8179;0.8315;0.8179;0.8213;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.789;0.8033;0.789;0.7914;0.7182;0.7444;0.7182;0.7246;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 187, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=187)"
LogisticRegression;0.7799;0.7959;0.7799;0.7821;0.7828;0.806;0.7828;0.7875;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.778;0.7958;0.778;0.7803;0.7966;0.8134;0.7966;0.7992;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7811;0.7992;0.7811;0.7834;0.7655;0.7715;0.7655;0.7661;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7865;0.8023;0.7865;0.7886;0.8069;0.8148;0.8069;0.8091;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7857;0.8027;0.7857;0.7876;0.7793;0.7911;0.7793;0.7828;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7718;0.7893;0.7718;0.7741;0.8144;0.8277;0.8144;0.8165;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7856;0.802;0.7856;0.7877;0.8007;0.8145;0.8007;0.8035;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7864;0.8027;0.7864;0.788;0.7285;0.7562;0.7285;0.733;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 404, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=404)"
LogisticRegression;0.7815;0.7985;0.7815;0.7836;0.7897;0.8039;0.7897;0.7907;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7903;0.8052;0.7903;0.7923;0.7793;0.8011;0.7793;0.7819;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7834;0.7994;0.7834;0.7858;0.7448;0.7621;0.7448;0.7494;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
LogisticRegression;0.7875;0.8042;0.7875;0.7897;0.7595;0.7701;0.7595;0.7626;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
RandomForestClassifier;0.9253;0.9255;0.9253;0.9253;0.9038;0.904;0.9038;0.9037;0.8167;0.8228;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
LogisticRegression;0.7776;0.7954;0.7776;0.7799;0.8034;0.816;0.8034;0.806;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7772;0.7935;0.7772;0.7798;0.811;0.8221;0.811;0.8122;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
LogisticRegression;0.7815;0.7974;0.7815;0.783;0.7793;0.8027;0.7793;0.7816;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7799;0.7969;0.7799;0.782;0.7904;0.8045;0.7904;0.7948;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
RandomForestClassifier;0.928;0.9281;0.928;0.9279;0.9175;0.9188;0.9175;0.9178;0.8167;0.8166;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
LogisticRegression;0.7818;0.7968;0.7818;0.7838;0.7835;0.8072;0.7835;0.786;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
LogisticRegression;0.7864;0.8029;0.7864;0.7885;0.7448;0.7637;0.7448;0.7482;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7899;0.8064;0.7899;0.7921;0.7621;0.7767;0.7621;0.7657;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
LogisticRegression;0.7857;0.8009;0.7857;0.7877;0.8172;0.8291;0.8172;0.8201;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
LogisticRegression;0.788;0.8036;0.788;0.7899;0.7621;0.7864;0.7621;0.7667;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
LogisticRegression;0.7844;0.7997;0.7844;0.7868;0.7973;0.8102;0.7973;0.7999;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.7891;0.8059;0.7891;0.7914;0.7285;0.7492;0.7285;0.7332;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.783;0.7993;0.783;0.7855;0.8103;0.8203;0.8103;0.812;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 310, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=310)"
LogisticRegression;0.7876;0.8054;0.7876;0.7896;0.7931;0.7968;0.7931;0.7943;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.7818;0.7983;0.7818;0.7838;0.8034;0.8162;0.8034;0.8063;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.788;0.8037;0.788;0.7901;0.7862;0.8098;0.7862;0.789;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 356, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=356)"
LogisticRegression;0.7917;0.8071;0.7917;0.7936;0.8041;0.8151;0.8041;0.8063;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.7803;0.7968;0.7803;0.7826;0.8007;0.8128;0.8007;0.8027;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 484, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=484)"
LogisticRegression;0.788;0.8038;0.788;0.7902;0.7483;0.7658;0.7483;0.7524;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.778;0.7952;0.778;0.78;0.7931;0.8129;0.7931;0.7965;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
LogisticRegression;0.7696;0.7871;0.7696;0.7719;0.8276;0.8441;0.8276;0.8292;0.8167;0.8296;0.8167;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 835, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=835)"
RandomForestClassifier;0.8653;0.8663;0.8653;0.8652;0.8793;0.8795;0.8793;0.8793;0.8167;0.8172;0.8167;0.8155;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 951};RandomForestClassifier(n_estimators=5, random_state=951)
KNeighborsClassifier;0.8997;0.9018;0.8997;0.8994;0.9345;0.9345;0.9345;0.9344;0.8167;0.8172;0.8167;0.8155;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8542;0.8575;0.8542;0.8542;0.7379;0.7492;0.7379;0.7359;0.8167;0.8238;0.8167;0.8155;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=961)
KNeighborsClassifier;0.902;0.9031;0.902;0.902;0.8935;0.8936;0.8935;0.8932;0.8167;0.8172;0.8167;0.8155;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8852;0.8863;0.8852;0.8853;0.8828;0.8829;0.8828;0.8822;0.8167;0.8316;0.8167;0.8153;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
KNeighborsClassifier;0.9012;0.9023;0.9012;0.9011;0.9175;0.9177;0.9175;0.9169;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.853;0.8561;0.853;0.8534;0.8483;0.8495;0.8483;0.8479;0.8167;0.8224;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8975;0.8995;0.8975;0.8971;0.9345;0.9343;0.9345;0.9343;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8997;0.9007;0.8997;0.8996;0.9345;0.9345;0.9345;0.9343;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8503;0.8528;0.8503;0.8503;0.8517;0.8519;0.8517;0.8515;0.8167;0.8224;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8507;0.8535;0.8507;0.851;0.8625;0.8628;0.8625;0.8626;0.8167;0.8224;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9024;0.903;0.9024;0.9023;0.9241;0.9239;0.9241;0.9238;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9073;0.9079;0.9073;0.9072;0.9072;0.9086;0.9072;0.9064;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8955;0.8967;0.8955;0.8955;0.9313;0.9323;0.9313;0.931;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8978;0.8983;0.8978;0.8976;0.9276;0.929;0.9276;0.9279;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8469;0.8496;0.8469;0.847;0.869;0.8709;0.869;0.8694;0.8167;0.8224;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8488;0.8523;0.8488;0.8492;0.8621;0.8684;0.8621;0.8619;0.8167;0.8224;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9035;0.9044;0.9035;0.9035;0.9347;0.935;0.9347;0.9342;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8672;0.868;0.8672;0.8672;0.9069;0.9067;0.9069;0.9064;0.8167;0.8195;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
RandomForestClassifier;0.8657;0.8661;0.8657;0.8658;0.8655;0.8663;0.8655;0.8653;0.8167;0.8224;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 306};RandomForestClassifier(n_estimators=10, random_state=306)
KNeighborsClassifier;0.9043;0.9049;0.9043;0.9041;0.9072;0.908;0.9072;0.9066;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.879;0.8793;0.879;0.8788;0.9313;0.9322;0.9313;0.9313;0.8167;0.8148;0.8167;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 678, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=678)
RandomForestClassifier;0.8726;0.8742;0.8726;0.8727;0.8724;0.8733;0.8724;0.8724;0.8167;0.8153;0.8167;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
RandomForestClassifier;0.9273;0.9278;0.9273;0.9273;0.9107;0.9106;0.9107;0.9096;0.8167;0.8187;0.8167;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
MLPClassifier;0.8373;0.8403;0.8373;0.8381;0.8655;0.8677;0.8655;0.8656;0.8167;0.8212;0.8167;0.8146;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
MLPClassifier;0.8361;0.8399;0.8361;0.8368;0.8625;0.8642;0.8625;0.8605;0.8167;0.8212;0.8167;0.8146;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
KNeighborsClassifier;0.8982;0.899;0.8982;0.8981;0.8897;0.8903;0.8897;0.8885;0.8167;0.8171;0.8167;0.8144;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.876;0.8767;0.876;0.876;0.8207;0.8203;0.8207;0.8204;0.8167;0.8171;0.8167;0.8144;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 306};RandomForestClassifier(n_estimators=20, random_state=306)
KNeighborsClassifier;0.8993;0.9006;0.8993;0.8992;0.9276;0.9276;0.9276;0.9275;0.8167;0.8171;0.8167;0.8144;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9021;0.9005;0.9001;0.8935;0.894;0.8935;0.8934;0.8167;0.8352;0.8167;0.8143;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9016;0.9031;0.9016;0.9016;0.9103;0.9109;0.9103;0.9105;0.8167;0.8352;0.8167;0.8143;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8997;0.9029;0.8997;0.9;0.9;0.9014;0.9;0.9;0.8167;0.8352;0.8167;0.8143;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8886;0.89;0.8886;0.8887;0.8797;0.8847;0.8797;0.8775;0.8167;0.8257;0.8167;0.8142;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=367)
DecisionTreeClassifier;0.8921;0.8933;0.8921;0.8918;0.869;0.8769;0.869;0.8688;0.8167;0.8257;0.8167;0.8142;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
KNeighborsClassifier;0.8293;0.8319;0.8293;0.8292;0.8454;0.8464;0.8454;0.8452;0.8167;0.8164;0.8167;0.814;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9001;0.9014;0.9001;0.8999;0.9241;0.9243;0.9241;0.9237;0.8167;0.821;0.8167;0.814;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9276;0.9282;0.9276;0.9275;0.9175;0.9187;0.9175;0.9171;0.8167;0.8191;0.8167;0.8136;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
RandomForestClassifier;0.85;0.8526;0.85;0.8497;0.8621;0.8635;0.8621;0.8623;0.8167;0.8364;0.8167;0.8136;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 896};RandomForestClassifier(n_estimators=10, random_state=896)
RandomForestClassifier;0.8572;0.861;0.8572;0.8575;0.8345;0.836;0.8345;0.8346;0.8167;0.8364;0.8167;0.8136;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 760};RandomForestClassifier(n_estimators=10, random_state=760)
RandomForestClassifier;0.9101;0.9108;0.9101;0.91;0.9276;0.9279;0.9276;0.9275;0.8167;0.8323;0.8167;0.8133;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 48};RandomForestClassifier(n_estimators=20, random_state=48)
RandomForestClassifier;0.85;0.8535;0.85;0.8502;0.8414;0.8435;0.8414;0.8418;0.8167;0.8323;0.8167;0.8133;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 911};RandomForestClassifier(n_estimators=10, random_state=911)
RandomForestClassifier;0.9055;0.9068;0.9055;0.9053;0.9276;0.9282;0.9276;0.9278;0.8167;0.8323;0.8167;0.8133;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 69};RandomForestClassifier(n_estimators=20, random_state=69)
KNeighborsClassifier;0.8967;0.8978;0.8967;0.8967;0.9034;0.9034;0.9034;0.9034;0.8167;0.8323;0.8167;0.8133;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.8412;0.8439;0.8412;0.8415;0.8345;0.8353;0.8345;0.8346;0.8167;0.8246;0.8167;0.813;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=961)
RandomForestClassifier;0.8511;0.8542;0.8511;0.8513;0.869;0.8743;0.869;0.8684;0.8167;0.8313;0.8167;0.813;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 911};RandomForestClassifier(n_estimators=20, random_state=911)
KNeighborsClassifier;0.8947;0.8968;0.8947;0.8948;0.9416;0.9415;0.9416;0.9415;0.8167;0.8313;0.8167;0.813;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8993;0.8998;0.8993;0.8993;0.9069;0.9068;0.9069;0.9068;0.8167;0.8313;0.8167;0.813;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8476;0.85;0.8476;0.8475;0.866;0.868;0.866;0.8656;0.8167;0.8307;0.8167;0.8129;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=961)
MLPClassifier;0.8733;0.8746;0.8733;0.8734;0.9278;0.9279;0.9278;0.9272;0.8167;0.8231;0.8167;0.8128;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 775, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=775)
KNeighborsClassifier;0.8366;0.8402;0.8366;0.8363;0.8379;0.8456;0.8379;0.8384;0.8167;0.8231;0.8167;0.8128;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9043;0.9056;0.9043;0.9042;0.9072;0.9074;0.9072;0.9067;0.8167;0.8174;0.8167;0.8125;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9231;0.9236;0.9231;0.9231;0.9345;0.9344;0.9345;0.9344;0.8167;0.8256;0.8167;0.8124;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
KNeighborsClassifier;0.8966;0.8991;0.8966;0.8964;0.9141;0.9149;0.9141;0.9139;0.8167;0.8225;0.8167;0.8124;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8492;0.8503;0.8492;0.8489;0.8793;0.8793;0.8793;0.8787;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.85;0.8521;0.85;0.8496;0.8483;0.8482;0.8483;0.8482;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8507;0.8518;0.8507;0.8502;0.8522;0.8524;0.8522;0.8523;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.8496;0.8513;0.8496;0.8493;0.8552;0.8578;0.8552;0.8538;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.8537;0.8556;0.8537;0.8534;0.8454;0.8457;0.8454;0.8446;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.8523;0.8531;0.8523;0.852;0.8345;0.8364;0.8345;0.8337;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8511;0.8532;0.8511;0.8507;0.8247;0.8257;0.8247;0.8249;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8527;0.8535;0.8527;0.8524;0.8379;0.8382;0.8379;0.8379;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.8522;0.8536;0.8522;0.8519;0.8488;0.8503;0.8488;0.8486;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8519;0.8532;0.8519;0.8518;0.8552;0.8581;0.8552;0.8542;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8503;0.8518;0.8503;0.8501;0.8207;0.8211;0.8207;0.8203;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8462;0.847;0.8462;0.8459;0.869;0.8735;0.869;0.869;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8504;0.8515;0.8504;0.8499;0.8621;0.8651;0.8621;0.8618;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8522;0.8532;0.8522;0.8521;0.8351;0.8394;0.8351;0.8349;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.8468;0.848;0.8468;0.8466;0.8797;0.8836;0.8797;0.8794;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.8504;0.8524;0.8504;0.8501;0.8379;0.8398;0.8379;0.8375;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
MLPClassifier;0.8484;0.8498;0.8484;0.8482;0.8763;0.8765;0.8763;0.8758;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8496;0.8514;0.8496;0.8494;0.8448;0.8463;0.8448;0.8444;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8511;0.852;0.8511;0.8508;0.8488;0.8492;0.8488;0.848;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8511;0.8524;0.8511;0.8506;0.8591;0.8612;0.8591;0.858;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.8546;0.8561;0.8546;0.8541;0.831;0.8302;0.831;0.8299;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.8534;0.8555;0.8534;0.8535;0.8483;0.849;0.8483;0.8472;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
MLPClassifier;0.8492;0.8505;0.8492;0.8488;0.8763;0.8767;0.8763;0.8759;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.8481;0.849;0.8481;0.8477;0.8414;0.8416;0.8414;0.841;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.8484;0.8499;0.8484;0.8484;0.869;0.8713;0.869;0.8677;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.8523;0.8532;0.8523;0.8521;0.8379;0.8393;0.8379;0.8366;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
MLPClassifier;0.8492;0.8503;0.8492;0.849;0.8522;0.854;0.8522;0.8519;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8434;0.8455;0.8434;0.8431;0.8832;0.8833;0.8832;0.8826;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8504;0.8509;0.8504;0.8502;0.8655;0.8654;0.8655;0.8653;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8484;0.8493;0.8484;0.8481;0.8931;0.8952;0.8931;0.8929;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.85;0.8511;0.85;0.8497;0.8586;0.8606;0.8586;0.8589;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8538;0.8552;0.8538;0.8536;0.8138;0.8136;0.8138;0.8134;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8523;0.8531;0.8523;0.8521;0.8103;0.8125;0.8103;0.81;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8546;0.8554;0.8546;0.8543;0.8552;0.8547;0.8552;0.8546;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 322, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=322)
MLPClassifier;0.8541;0.8549;0.8541;0.8538;0.8351;0.8364;0.8351;0.8345;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8477;0.8489;0.8477;0.8474;0.8759;0.8764;0.8759;0.8758;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
MLPClassifier;0.8527;0.8537;0.8527;0.8524;0.8517;0.8543;0.8517;0.8517;0.8167;0.8144;0.8167;0.8123;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 472, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=472)
DecisionTreeClassifier;0.8431;0.8444;0.8431;0.843;0.831;0.8315;0.831;0.8307;0.8167;0.8123;0.8167;0.8121;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=75)
KNeighborsClassifier;0.9039;0.905;0.9039;0.9037;0.9072;0.9095;0.9072;0.9074;0.8167;0.8218;0.8167;0.812;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8913;0.8919;0.8913;0.8914;0.8621;0.8619;0.8621;0.8616;0.8167;0.8226;0.8167;0.8119;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.9112;0.9121;0.9112;0.9111;0.8862;0.8868;0.8862;0.8862;0.8167;0.8423;0.8167;0.8119;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=252)
DecisionTreeClassifier;0.8837;0.8849;0.8837;0.8837;0.8759;0.875;0.8759;0.8751;0.8167;0.8226;0.8167;0.8119;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=881)
DecisionTreeClassifier;0.8465;0.8498;0.8465;0.8466;0.8621;0.8642;0.8621;0.8622;0.8167;0.8154;0.8167;0.8117;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8469;0.8512;0.8469;0.8472;0.8448;0.845;0.8448;0.8449;0.8167;0.8154;0.8167;0.8117;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=578)
RandomForestClassifier;0.8553;0.8595;0.8553;0.8556;0.8488;0.8498;0.8488;0.8488;0.8167;0.8302;0.8167;0.8114;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.8488;0.8526;0.8488;0.849;0.8517;0.8561;0.8517;0.8511;0.8167;0.8326;0.8167;0.8114;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
MLPClassifier;0.8462;0.8473;0.8462;0.846;0.8897;0.8925;0.8897;0.8895;0.8167;0.8302;0.8167;0.8114;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
RandomForestClassifier;0.9097;0.9107;0.9097;0.9096;0.8931;0.8931;0.8931;0.8929;0.8167;0.8497;0.8167;0.8111;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
DecisionTreeClassifier;0.8833;0.8838;0.8833;0.8832;0.8828;0.8889;0.8828;0.8821;0.8167;0.826;0.8167;0.811;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=741)
DecisionTreeClassifier;0.8859;0.8866;0.8859;0.8859;0.8797;0.8798;0.8797;0.8793;0.8167;0.826;0.8167;0.811;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=529)
KNeighborsClassifier;0.8361;0.8389;0.8361;0.8359;0.8454;0.8468;0.8454;0.8456;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8328;0.8349;0.8328;0.8326;0.831;0.8325;0.831;0.8306;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8419;0.8469;0.8419;0.8417;0.8213;0.8221;0.8213;0.8214;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8316;0.8338;0.8316;0.8314;0.8483;0.8523;0.8483;0.8479;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.83;0.8321;0.83;0.8297;0.8419;0.844;0.8419;0.8424;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8167;0.8236;0.8167;0.8162;0.831;0.8316;0.831;0.8312;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8377;0.8413;0.8377;0.8374;0.8454;0.8454;0.8454;0.8452;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8374;0.8407;0.8374;0.837;0.8241;0.8273;0.8241;0.8244;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8301;0.8336;0.8301;0.83;0.8138;0.816;0.8138;0.8133;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8355;0.8371;0.8355;0.8347;0.8345;0.839;0.8345;0.8347;0.8167;0.8206;0.8167;0.8108;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8534;0.8565;0.8534;0.8533;0.8488;0.8502;0.8488;0.8488;0.8167;0.8222;0.8167;0.8106;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 643};RandomForestClassifier(n_estimators=10, random_state=643)
RandomForestClassifier;0.8534;0.858;0.8534;0.8532;0.8414;0.8443;0.8414;0.8416;0.8167;0.8475;0.8167;0.8106;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 34};RandomForestClassifier(n_estimators=20, random_state=34)
RandomForestClassifier;0.9116;0.9128;0.9116;0.9113;0.9103;0.911;0.9103;0.9098;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 48};RandomForestClassifier(n_estimators=20, random_state=48)
RandomForestClassifier;0.9024;0.9035;0.9024;0.9022;0.9172;0.9174;0.9172;0.9165;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
RandomForestClassifier;0.9081;0.9092;0.9081;0.9081;0.9345;0.9357;0.9345;0.9344;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
RandomForestClassifier;0.9055;0.9069;0.9055;0.9054;0.931;0.9312;0.931;0.9309;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 274};RandomForestClassifier(n_estimators=10, random_state=274)
RandomForestClassifier;0.9139;0.9145;0.9139;0.9137;0.9038;0.9063;0.9038;0.903;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.9055;0.9065;0.9055;0.9054;0.931;0.9336;0.931;0.9304;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
RandomForestClassifier;0.9086;0.9087;0.9086;0.9085;0.8793;0.8801;0.8793;0.879;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
DecisionTreeClassifier;0.9116;0.9122;0.9116;0.9114;0.9034;0.9042;0.9034;0.9035;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 252};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=252)
RandomForestClassifier;0.9051;0.9058;0.9051;0.9051;0.9103;0.9116;0.9103;0.9106;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 48};RandomForestClassifier(n_estimators=10, random_state=48)
RandomForestClassifier;0.9085;0.9097;0.9085;0.9082;0.9138;0.9142;0.9138;0.9137;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 893};RandomForestClassifier(n_estimators=20, random_state=893)
DecisionTreeClassifier;0.9074;0.9077;0.9074;0.9073;0.9107;0.9105;0.9107;0.9103;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
RandomForestClassifier;0.9097;0.9103;0.9097;0.9094;0.8969;0.8973;0.8969;0.8969;0.8167;0.837;0.8167;0.8105;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 69};RandomForestClassifier(n_estimators=10, random_state=69)
DecisionTreeClassifier;0.8495;0.8524;0.8495;0.8495;0.811;0.8229;0.811;0.8114;0.8167;0.8153;0.8167;0.8104;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
KNeighborsClassifier;0.8932;0.8949;0.8932;0.8931;0.9072;0.9094;0.9072;0.9062;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8966;0.8974;0.8966;0.8965;0.8557;0.8562;0.8557;0.8553;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8997;0.9024;0.8997;0.8998;0.9103;0.9173;0.9103;0.9101;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9017;0.9028;0.9017;0.9015;0.9;0.8999;0.9;0.8997;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.897;0.8988;0.897;0.8966;0.8935;0.8943;0.8935;0.8932;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.899;0.9001;0.899;0.899;0.9172;0.9179;0.9172;0.9175;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8879;0.889;0.8879;0.8877;0.9172;0.9182;0.9172;0.9175;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8959;0.8986;0.8959;0.8959;0.8828;0.8842;0.8828;0.8829;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8576;0.8619;0.8576;0.8579;0.8419;0.8428;0.8419;0.842;0.8167;0.8331;0.8167;0.8097;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 34};RandomForestClassifier(n_estimators=5, random_state=34)
RandomForestClassifier;0.9089;0.9107;0.9089;0.9087;0.9038;0.9041;0.9038;0.9039;0.8167;0.8338;0.8167;0.8096;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 69};RandomForestClassifier(n_estimators=20, random_state=69)
RandomForestClassifier;0.9043;0.9059;0.9043;0.9043;0.9345;0.9346;0.9345;0.9344;0.8167;0.8338;0.8167;0.8096;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 69};RandomForestClassifier(n_estimators=10, random_state=69)
RandomForestClassifier;0.9169;0.9182;0.9169;0.9169;0.8931;0.8936;0.8931;0.893;0.8167;0.8338;0.8167;0.8096;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 893};RandomForestClassifier(n_estimators=10, random_state=893)
RandomForestClassifier;0.9054;0.9066;0.9054;0.9053;0.9003;0.9032;0.9003;0.9008;0.8167;0.8248;0.8167;0.8095;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 610};RandomForestClassifier(n_estimators=5, random_state=610)
RandomForestClassifier;0.9062;0.9074;0.9062;0.9062;0.9345;0.9343;0.9345;0.9341;0.8167;0.8325;0.8167;0.8094;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 69};RandomForestClassifier(n_estimators=10, random_state=69)
RandomForestClassifier;0.8573;0.8609;0.8573;0.8573;0.8276;0.8304;0.8276;0.828;0.8167;0.8319;0.8167;0.8086;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 896};RandomForestClassifier(n_estimators=10, random_state=896)
KNeighborsClassifier;0.8362;0.8394;0.8362;0.8361;0.8414;0.8451;0.8414;0.8417;0.8167;0.8319;0.8167;0.8086;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8259;0.8291;0.8259;0.8253;0.8552;0.8561;0.8552;0.8552;0.8167;0.8319;0.8167;0.8086;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.84;0.8418;0.84;0.8393;0.8419;0.8452;0.8419;0.8414;0.8167;0.8319;0.8167;0.8086;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8477;0.8505;0.8477;0.8476;0.8517;0.854;0.8517;0.8514;0.8167;0.8222;0.8167;0.808;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
RandomForestClassifier;0.8595;0.8635;0.8595;0.8594;0.831;0.8371;0.831;0.8316;0.8167;0.853;0.8167;0.806;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 34};RandomForestClassifier(n_estimators=10, random_state=34)
RandomForestClassifier;0.9104;0.9117;0.9104;0.9104;0.8862;0.8863;0.8862;0.8855;0.8167;0.853;0.8167;0.806;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
DecisionTreeClassifier;0.8388;0.8396;0.8388;0.8389;0.8557;0.8556;0.8557;0.8553;0.8;0.8093;0.8;0.8017;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=599)
DecisionTreeClassifier;0.8392;0.8401;0.8392;0.8393;0.8694;0.8726;0.8694;0.8687;0.8;0.8093;0.8;0.8017;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=309)
DecisionTreeClassifier;0.8327;0.8356;0.8327;0.833;0.811;0.8195;0.811;0.8123;0.8;0.8093;0.8;0.8017;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=95)
DecisionTreeClassifier;0.8477;0.8493;0.8477;0.8477;0.8241;0.824;0.8241;0.8236;0.8;0.8128;0.8;0.8015;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
DecisionTreeClassifier;0.8324;0.8346;0.8324;0.8326;0.8483;0.8476;0.8483;0.8471;0.8;0.8054;0.8;0.8013;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
DecisionTreeClassifier;0.8362;0.8378;0.8362;0.8363;0.8586;0.8599;0.8586;0.8583;0.8;0.8042;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=309)
DecisionTreeClassifier;0.84;0.8407;0.84;0.8402;0.8241;0.8245;0.8241;0.8239;0.8;0.8042;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
DecisionTreeClassifier;0.8304;0.8313;0.8304;0.8306;0.8385;0.8456;0.8385;0.8374;0.8;0.8038;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=138)
DecisionTreeClassifier;0.8293;0.8308;0.8293;0.8295;0.8586;0.8586;0.8586;0.8586;0.8;0.8038;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.8408;0.8418;0.8408;0.8411;0.8172;0.8189;0.8172;0.8176;0.8;0.8042;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
RandomForestClassifier;0.8596;0.8609;0.8596;0.8597;0.8793;0.8813;0.8793;0.8795;0.8;0.8058;0.8;0.8007;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 53};RandomForestClassifier(n_estimators=10, random_state=53)
KNeighborsClassifier;0.8324;0.8365;0.8324;0.832;0.7862;0.7926;0.7862;0.7862;0.8;0.8171;0.8;0.8007;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9281;0.9292;0.9281;0.928;0.9379;0.9399;0.9379;0.9381;0.8;0.8021;0.8;0.8007;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
RandomForestClassifier;0.9242;0.9247;0.9242;0.9242;0.9276;0.9283;0.9276;0.9269;0.8;0.8021;0.8;0.8007;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
RandomForestClassifier;0.9265;0.9267;0.9265;0.9263;0.9241;0.9241;0.9241;0.9241;0.8;0.8057;0.8;0.8003;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
DecisionTreeClassifier;0.8404;0.8413;0.8404;0.8407;0.8724;0.875;0.8724;0.8723;0.8;0.8057;0.8;0.8003;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
SVC;0.8098;0.8287;0.8098;0.8076;0.8379;0.8379;0.8379;0.8379;0.8;0.8111;0.8;0.8002;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
SVC;0.8047;0.825;0.8047;0.8026;0.8419;0.8422;0.8419;0.8418;0.8;0.8111;0.8;0.8002;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
DecisionTreeClassifier;0.8347;0.836;0.8347;0.8351;0.869;0.8688;0.869;0.8688;0.8;0.8;0.8;0.8;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
DecisionTreeClassifier;0.84;0.8406;0.84;0.8401;0.8351;0.8351;0.8351;0.8351;0.8;0.8;0.8;0.8;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
RandomForestClassifier;0.8756;0.8768;0.8756;0.8757;0.8832;0.8844;0.8832;0.8834;0.8;0.8005;0.8;0.7999;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 306};RandomForestClassifier(n_estimators=20, random_state=306)
RandomForestClassifier;0.9261;0.9263;0.9261;0.926;0.9483;0.9507;0.9483;0.9478;0.8;0.8005;0.8;0.7999;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
MLPClassifier;0.8427;0.8449;0.8427;0.8433;0.8793;0.8806;0.8793;0.8795;0.8;0.8014;0.8;0.7998;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8308;0.8345;0.8308;0.8316;0.8797;0.8798;0.8797;0.8798;0.8;0.8014;0.8;0.7998;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
MLPClassifier;0.84;0.8437;0.84;0.8408;0.866;0.8672;0.866;0.8662;0.8;0.8016;0.8;0.7997;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
KNeighborsClassifier;0.85;0.8528;0.85;0.8502;0.8172;0.8184;0.8172;0.8163;0.8;0.802;0.8;0.7997;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8675;0.8686;0.8675;0.8676;0.8385;0.8384;0.8385;0.8383;0.8;0.802;0.8;0.7997;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 306};RandomForestClassifier(n_estimators=20, random_state=306)
RandomForestClassifier;0.8637;0.8646;0.8637;0.8638;0.8832;0.883;0.8832;0.883;0.8;0.802;0.8;0.7997;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 951};RandomForestClassifier(n_estimators=20, random_state=951)
MLPClassifier;0.8389;0.842;0.8389;0.8392;0.8759;0.8815;0.8759;0.8767;0.8;0.8073;0.8;0.7994;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.8408;0.8435;0.8408;0.8411;0.8414;0.8446;0.8414;0.8412;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8435;0.8459;0.8435;0.844;0.8414;0.8478;0.8414;0.8425;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8366;0.8401;0.8366;0.8372;0.8345;0.8351;0.8345;0.8347;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.8362;0.839;0.8362;0.8369;0.8793;0.8801;0.8793;0.8795;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8388;0.8422;0.8388;0.8393;0.8557;0.8569;0.8557;0.8546;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.8462;0.8483;0.8462;0.8467;0.831;0.8328;0.831;0.8314;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.8392;0.8418;0.8392;0.8396;0.8591;0.8633;0.8591;0.8595;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
MLPClassifier;0.84;0.8443;0.84;0.8406;0.8351;0.8351;0.8351;0.8351;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
MLPClassifier;0.8358;0.8395;0.8358;0.8368;0.8862;0.8868;0.8862;0.8854;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
DecisionTreeClassifier;0.8913;0.892;0.8913;0.8912;0.8448;0.8486;0.8448;0.8446;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=367)
MLPClassifier;0.8374;0.841;0.8374;0.8383;0.8552;0.8551;0.8552;0.854;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
MLPClassifier;0.8427;0.8455;0.8427;0.843;0.8621;0.8629;0.8621;0.8623;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8404;0.8434;0.8404;0.841;0.8276;0.8342;0.8276;0.8282;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8412;0.844;0.8412;0.8418;0.8621;0.8615;0.8621;0.8617;0.8;0.805;0.8;0.7993;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
KNeighborsClassifier;0.8496;0.8532;0.8496;0.8497;0.8483;0.8548;0.8483;0.8484;0.8;0.8079;0.8;0.7992;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.8066;0.8249;0.8066;0.8043;0.8866;0.8874;0.8866;0.8864;0.8;0.8079;0.8;0.7992;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
KNeighborsClassifier;0.8335;0.8375;0.8335;0.8328;0.8276;0.8276;0.8276;0.8273;0.8;0.8236;0.8;0.7991;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8347;0.8358;0.8347;0.835;0.8241;0.826;0.8241;0.8237;0.8;0.7988;0.8;0.7991;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=138)
RandomForestClassifier;0.9212;0.9228;0.9212;0.9212;0.9448;0.945;0.9448;0.9449;0.8;0.7989;0.8;0.7991;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.868;0.8699;0.868;0.8679;0.8793;0.8815;0.8793;0.8797;0.8;0.8028;0.8;0.7991;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 798};RandomForestClassifier(n_estimators=10, random_state=798)
RandomForestClassifier;0.8637;0.8651;0.8637;0.8634;0.8729;0.8745;0.8729;0.8731;0.8;0.8056;0.8;0.799;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.9261;0.9266;0.9261;0.9261;0.931;0.9331;0.931;0.9315;0.8;0.8056;0.8;0.799;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
RandomForestClassifier;0.9242;0.9248;0.9242;0.9242;0.9379;0.9386;0.9379;0.9381;0.8;0.8056;0.8;0.799;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
DecisionTreeClassifier;0.8403;0.8434;0.8403;0.8403;0.8591;0.8604;0.8591;0.8591;0.8;0.8026;0.8;0.7989;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=75)
DecisionTreeClassifier;0.8458;0.8485;0.8458;0.8456;0.7966;0.7964;0.7966;0.7954;0.8;0.8026;0.8;0.7989;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=578)
KNeighborsClassifier;0.8519;0.8551;0.8519;0.8517;0.869;0.87;0.869;0.8689;0.8;0.8068;0.8;0.7989;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8634;0.8643;0.8634;0.8634;0.8759;0.8778;0.8759;0.8758;0.8;0.8002;0.8;0.7988;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 951};RandomForestClassifier(n_estimators=10, random_state=951)
RandomForestClassifier;0.8706;0.8717;0.8706;0.8707;0.8621;0.862;0.8621;0.8616;0.8;0.8018;0.8;0.7986;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 951};RandomForestClassifier(n_estimators=20, random_state=951)
RandomForestClassifier;0.928;0.9285;0.928;0.928;0.9172;0.9188;0.9172;0.9169;0.8;0.8018;0.8;0.7986;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
RandomForestClassifier;0.9193;0.92;0.9193;0.9191;0.9138;0.9147;0.9138;0.9129;0.8;0.8018;0.8;0.7986;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
MLPClassifier;0.8389;0.8416;0.8389;0.8396;0.8828;0.8839;0.8828;0.8829;0.8;0.8018;0.8;0.7986;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
KNeighborsClassifier;0.845;0.8478;0.845;0.8452;0.8655;0.8666;0.8655;0.8656;0.8;0.8019;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.853;0.8554;0.853;0.853;0.8694;0.8712;0.8694;0.8698;0.8;0.8019;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8687;0.8702;0.8687;0.869;0.8488;0.8494;0.8488;0.8487;0.8;0.8052;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.8676;0.8682;0.8676;0.8678;0.8448;0.8457;0.8448;0.8449;0.8;0.8065;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 951};RandomForestClassifier(n_estimators=10, random_state=951)
KNeighborsClassifier;0.8557;0.8591;0.8557;0.8558;0.8655;0.8662;0.8655;0.8652;0.8;0.8065;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8741;0.8751;0.8741;0.8741;0.869;0.871;0.869;0.8684;0.8;0.8052;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 932};RandomForestClassifier(n_estimators=10, random_state=932)
DecisionTreeClassifier;0.8354;0.8371;0.8354;0.8355;0.8247;0.825;0.8247;0.8248;0.8;0.7989;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=309)
KNeighborsClassifier;0.853;0.8566;0.853;0.8535;0.8419;0.842;0.8419;0.8419;0.8;0.8065;0.8;0.7985;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8756;0.8776;0.8756;0.8758;0.8828;0.8825;0.8828;0.8814;0.8;0.8008;0.8;0.7982;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=529)
KNeighborsClassifier;0.8955;0.8967;0.8955;0.8954;0.9241;0.9245;0.9241;0.9238;0.8;0.8012;0.8;0.7981;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9051;0.9064;0.9051;0.905;0.9172;0.9173;0.9172;0.9169;0.8;0.8012;0.8;0.7981;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8971;0.8985;0.8971;0.8969;0.9207;0.9209;0.9207;0.9205;0.8;0.8012;0.8;0.7981;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9013;0.9005;0.9002;0.9207;0.9213;0.9207;0.9207;0.8;0.8012;0.8;0.7981;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.897;0.8992;0.897;0.8968;0.9175;0.9174;0.9175;0.9173;0.8;0.8012;0.8;0.7981;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.902;0.9031;0.902;0.9017;0.9381;0.9384;0.9381;0.9381;0.8;0.8012;0.8;0.7981;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9273;0.9277;0.9273;0.9272;0.931;0.9318;0.931;0.9312;0.8;0.7987;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
KNeighborsClassifier;0.9024;0.9031;0.9024;0.9022;0.9207;0.921;0.9207;0.9205;0.8;0.802;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9047;0.9028;0.9026;0.9138;0.9137;0.9138;0.9137;0.8;0.802;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9238;0.9247;0.9238;0.924;0.9069;0.9095;0.9069;0.9063;0.8;0.8091;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 373};RandomForestClassifier(n_estimators=20, random_state=373)
RandomForestClassifier;0.8573;0.8591;0.8573;0.8575;0.8897;0.8902;0.8897;0.8896;0.8;0.7987;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
RandomForestClassifier;0.8706;0.8719;0.8706;0.8706;0.8729;0.8727;0.8729;0.8724;0.8;0.802;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
RandomForestClassifier;0.871;0.8726;0.871;0.8712;0.8655;0.8667;0.8655;0.8653;0.8;0.802;0.8;0.798;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 951};RandomForestClassifier(n_estimators=20, random_state=951)
KNeighborsClassifier;0.8485;0.8511;0.8485;0.8487;0.8621;0.8631;0.8621;0.8616;0.8;0.813;0.8;0.7978;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9016;0.9028;0.9016;0.9015;0.9172;0.9175;0.9172;0.9167;0.8;0.8029;0.8;0.797;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9024;0.9028;0.9024;0.9023;0.931;0.9312;0.931;0.931;0.8;0.8029;0.8;0.797;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8618;0.8645;0.8618;0.8619;0.8207;0.8215;0.8207;0.82;0.8;0.8198;0.8;0.7969;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8837;0.8861;0.8837;0.884;0.8793;0.8798;0.8793;0.8795;0.8;0.8107;0.8;0.7968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=367)
RandomForestClassifier;0.925;0.9253;0.925;0.925;0.9172;0.917;0.9172;0.9171;0.8;0.8042;0.8;0.7968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.925;0.9257;0.925;0.9249;0.9313;0.9314;0.9313;0.9307;0.8;0.8042;0.8;0.7968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
DecisionTreeClassifier;0.8829;0.8836;0.8829;0.8828;0.8591;0.8585;0.8591;0.8583;0.8;0.8107;0.8;0.7968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
DecisionTreeClassifier;0.8871;0.8878;0.8871;0.8871;0.8414;0.8406;0.8414;0.84;0.8;0.8042;0.8;0.7968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
KNeighborsClassifier;0.8577;0.861;0.8577;0.8578;0.8621;0.8693;0.8621;0.8621;0.8;0.8073;0.8;0.7965;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9265;0.9273;0.9265;0.9265;0.9207;0.9207;0.9207;0.9205;0.8;0.8132;0.8;0.7965;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
RandomForestClassifier;0.8488;0.8518;0.8488;0.8487;0.8586;0.8621;0.8586;0.8588;0.8;0.8168;0.8;0.7965;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
DecisionTreeClassifier;0.8852;0.8863;0.8852;0.8853;0.8552;0.8547;0.8552;0.8544;0.8;0.8132;0.8;0.7965;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
RandomForestClassifier;0.9235;0.9243;0.9235;0.9235;0.9276;0.9299;0.9276;0.9267;0.8;0.8015;0.8;0.7962;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
KNeighborsClassifier;0.8989;0.8998;0.8989;0.8987;0.9347;0.9346;0.9347;0.9345;0.8;0.8015;0.8;0.7962;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8844;0.8854;0.8844;0.8846;0.8379;0.8384;0.8379;0.8371;0.8;0.8089;0.8;0.7958;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
DecisionTreeClassifier;0.8898;0.8913;0.8898;0.8899;0.8034;0.8109;0.8034;0.8041;0.8;0.8089;0.8;0.7958;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=367)
DecisionTreeClassifier;0.8875;0.8886;0.8875;0.8877;0.8379;0.8378;0.8379;0.8376;0.8;0.8089;0.8;0.7958;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=529)
DecisionTreeClassifier;0.8802;0.881;0.8802;0.8804;0.8138;0.8125;0.8138;0.8126;0.8;0.8049;0.8;0.7957;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=529)
DecisionTreeClassifier;0.8825;0.8833;0.8825;0.8827;0.8763;0.8782;0.8763;0.8763;0.8;0.8049;0.8;0.7957;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
DecisionTreeClassifier;0.9146;0.9155;0.9146;0.9145;0.89;0.89;0.89;0.89;0.8;0.8439;0.8;0.7956;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
RandomForestClassifier;0.9085;0.9094;0.9085;0.9083;0.9103;0.912;0.9103;0.91;0.8;0.8256;0.8;0.7953;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 48};RandomForestClassifier(n_estimators=20, random_state=48)
DecisionTreeClassifier;0.8917;0.8929;0.8917;0.8919;0.8552;0.8554;0.8552;0.8553;0.8;0.8014;0.8;0.7953;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=341)
RandomForestClassifier;0.85;0.8526;0.85;0.8501;0.7931;0.7963;0.7931;0.7928;0.8;0.8345;0.8;0.7952;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 896};RandomForestClassifier(n_estimators=5, random_state=896)
DecisionTreeClassifier;0.845;0.8476;0.845;0.8451;0.8345;0.8364;0.8345;0.8345;0.8;0.7947;0.8;0.795;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=958)
DecisionTreeClassifier;0.8523;0.8557;0.8523;0.8525;0.8276;0.8295;0.8276;0.8269;0.8;0.7947;0.8;0.795;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
RandomForestClassifier;0.8492;0.853;0.8492;0.8494;0.8621;0.8641;0.8621;0.8608;0.8;0.8196;0.8;0.795;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.8569;0.8606;0.8569;0.8571;0.8517;0.8563;0.8517;0.8523;0.8;0.8196;0.8;0.795;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.9112;0.9122;0.9112;0.9112;0.9138;0.9143;0.9138;0.9138;0.8;0.8204;0.8;0.7948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 48};RandomForestClassifier(n_estimators=10, random_state=48)
KNeighborsClassifier;0.8963;0.8986;0.8963;0.8963;0.9138;0.9147;0.9138;0.9138;0.8;0.8204;0.8;0.7948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8921;0.8934;0.8921;0.8921;0.9138;0.9137;0.9138;0.9136;0.8;0.8204;0.8;0.7948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9142;0.915;0.9142;0.9141;0.8969;0.8975;0.8969;0.8967;0.8;0.8204;0.8;0.7948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 610};RandomForestClassifier(n_estimators=20, random_state=610)
RandomForestClassifier;0.9104;0.9109;0.9104;0.9102;0.9313;0.9324;0.9313;0.9313;0.8;0.8204;0.8;0.7948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.9108;0.9114;0.9108;0.9105;0.921;0.9218;0.921;0.921;0.8;0.8204;0.8;0.7948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
RandomForestClassifier;0.9112;0.9123;0.9112;0.9111;0.8797;0.8809;0.8797;0.8795;0.8;0.8186;0.8;0.7942;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 893};RandomForestClassifier(n_estimators=10, random_state=893)
RandomForestClassifier;0.9073;0.9082;0.9073;0.9073;0.9107;0.9134;0.9107;0.9107;0.8;0.8186;0.8;0.7942;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.9105;0.9111;0.9105;0.9104;0.9103;0.9104;0.9103;0.9099;0.8;0.8186;0.8;0.7942;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
MLPClassifier;0.8522;0.8536;0.8522;0.852;0.8454;0.847;0.8454;0.8453;0.8;0.8056;0.8;0.7939;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 938, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=938)
RandomForestClassifier;0.8541;0.8569;0.8541;0.8542;0.8488;0.8542;0.8488;0.8492;0.8;0.8085;0.8;0.7939;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
DecisionTreeClassifier;0.8484;0.8509;0.8484;0.8484;0.8345;0.8351;0.8345;0.8336;0.8;0.8085;0.8;0.7939;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=75)
RandomForestClassifier;0.8473;0.8515;0.8473;0.8475;0.8345;0.8354;0.8345;0.8346;0.8;0.8186;0.8;0.7937;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
DecisionTreeClassifier;0.8507;0.8533;0.8507;0.8509;0.8138;0.8157;0.8138;0.8132;0.8;0.7958;0.8;0.7937;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=406)
DecisionTreeClassifier;0.85;0.853;0.85;0.85;0.8379;0.846;0.8379;0.8382;0.8;0.7958;0.8;0.7937;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=215)
DecisionTreeClassifier;0.8469;0.8495;0.8469;0.847;0.8207;0.8284;0.8207;0.819;0.8;0.8007;0.8;0.7934;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=961)
DecisionTreeClassifier;0.8488;0.8512;0.8488;0.8488;0.8385;0.849;0.8385;0.8386;0.8;0.8007;0.8;0.7934;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=75)
DecisionTreeClassifier;0.8813;0.8824;0.8813;0.8815;0.8557;0.8588;0.8557;0.8559;0.8;0.8089;0.8;0.7932;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8817;0.8826;0.8817;0.882;0.8759;0.8776;0.8759;0.8754;0.8;0.8072;0.8;0.793;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=529)
DecisionTreeClassifier;0.8783;0.8791;0.8783;0.8782;0.8517;0.8526;0.8517;0.8514;0.8;0.8004;0.8;0.7929;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
RandomForestClassifier;0.8538;0.8587;0.8538;0.854;0.869;0.8709;0.869;0.8692;0.8;0.8213;0.8;0.7928;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.8572;0.862;0.8572;0.8573;0.8454;0.847;0.8454;0.8453;0.8;0.8213;0.8;0.7928;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 643};RandomForestClassifier(n_estimators=10, random_state=643)
DecisionTreeClassifier;0.905;0.9058;0.905;0.9049;0.921;0.9232;0.921;0.9202;0.8;0.8406;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
KNeighborsClassifier;0.84;0.8427;0.84;0.8395;0.8385;0.84;0.8385;0.8377;0.8;0.8063;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8374;0.8386;0.8374;0.8369;0.8483;0.8506;0.8483;0.8478;0.8;0.8063;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.9059;0.9072;0.9059;0.9057;0.9103;0.9111;0.9103;0.9094;0.8;0.8406;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.8867;0.8873;0.8867;0.8867;0.8591;0.861;0.8591;0.8575;0.8;0.8088;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=341)
KNeighborsClassifier;0.8354;0.8394;0.8354;0.8348;0.8385;0.8392;0.8385;0.8384;0.8;0.8063;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.9066;0.9075;0.9066;0.9066;0.9;0.8999;0.9;0.8996;0.8;0.8406;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.8775;0.8782;0.8775;0.8775;0.8414;0.8414;0.8414;0.8413;0.8;0.8088;0.8;0.7918;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=341)
DecisionTreeClassifier;0.8488;0.8516;0.8488;0.8489;0.7966;0.7976;0.7966;0.7939;0.8;0.8;0.8;0.7915;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=406)
DecisionTreeClassifier;0.8407;0.8441;0.8407;0.8407;0.8454;0.8468;0.8454;0.8445;0.8;0.8;0.8;0.7915;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
RandomForestClassifier;0.8472;0.8504;0.8472;0.8472;0.8625;0.8642;0.8625;0.8628;0.8;0.8413;0.8;0.7908;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 911};RandomForestClassifier(n_estimators=10, random_state=911)
RandomForestClassifier;0.9081;0.909;0.9081;0.908;0.9207;0.9208;0.9207;0.9204;0.8;0.8219;0.8;0.7902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 610};RandomForestClassifier(n_estimators=20, random_state=610)
DecisionTreeClassifier;0.9108;0.9116;0.9108;0.9107;0.9003;0.9007;0.9003;0.8997;0.8;0.8219;0.8;0.7902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 397};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=397)
DecisionTreeClassifier;0.912;0.9126;0.912;0.9118;0.9034;0.9052;0.9034;0.9031;0.8;0.8219;0.8;0.7902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 33};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=33)
RandomForestClassifier;0.9112;0.9117;0.9112;0.911;0.9207;0.9207;0.9207;0.9207;0.8;0.8219;0.8;0.7902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.9081;0.909;0.9081;0.9079;0.9414;0.9422;0.9414;0.9412;0.8;0.8219;0.8;0.7902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.9096;0.9107;0.9096;0.9095;0.9003;0.9015;0.9003;0.9002;0.8;0.8219;0.8;0.7902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 48};RandomForestClassifier(n_estimators=5, random_state=48)
RandomForestClassifier;0.9077;0.909;0.9077;0.9076;0.8763;0.8769;0.8763;0.8759;0.8;0.8198;0.8;0.7897;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 610};RandomForestClassifier(n_estimators=20, random_state=610)
KNeighborsClassifier;0.8289;0.8316;0.8289;0.8286;0.7862;0.7885;0.7862;0.7861;0.7833;0.7963;0.7833;0.7863;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8293;0.83;0.8293;0.8295;0.8172;0.818;0.8172;0.8168;0.7833;0.7912;0.7833;0.7848;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=138)
DecisionTreeClassifier;0.8381;0.8395;0.8381;0.8384;0.8448;0.8468;0.8448;0.8454;0.7833;0.7904;0.7833;0.7847;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=309)
DecisionTreeClassifier;0.8427;0.8433;0.8427;0.8426;0.8345;0.8413;0.8345;0.8349;0.7833;0.7904;0.7833;0.7847;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=138)
DecisionTreeClassifier;0.8423;0.8436;0.8423;0.8426;0.8241;0.8266;0.8241;0.8231;0.7833;0.7904;0.7833;0.7847;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=138)
DecisionTreeClassifier;0.8347;0.8362;0.8347;0.8349;0.8483;0.8485;0.8483;0.8479;0.7833;0.7855;0.7833;0.7841;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=138)
DecisionTreeClassifier;0.8361;0.8375;0.8361;0.8362;0.8385;0.8392;0.8385;0.8385;0.7833;0.7855;0.7833;0.7841;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
DecisionTreeClassifier;0.8377;0.8389;0.8377;0.8382;0.8694;0.8712;0.8694;0.8697;0.7833;0.7855;0.7833;0.7841;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=676)
DecisionTreeClassifier;0.8347;0.8364;0.8347;0.8349;0.8724;0.8774;0.8724;0.8722;0.7833;0.7855;0.7833;0.7841;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.8377;0.8388;0.8377;0.8377;0.8517;0.8511;0.8517;0.8509;0.7833;0.7872;0.7833;0.7839;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=138)
DecisionTreeClassifier;0.8347;0.8371;0.8347;0.8348;0.7931;0.7938;0.7931;0.7934;0.7833;0.7869;0.7833;0.7838;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=309)
DecisionTreeClassifier;0.837;0.8396;0.837;0.837;0.8517;0.8519;0.8517;0.8506;0.7833;0.7869;0.7833;0.7838;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.8293;0.8313;0.8293;0.8295;0.8276;0.8308;0.8276;0.8276;0.7833;0.7869;0.7833;0.7838;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=95)
SVC;0.8129;0.8312;0.8129;0.8114;0.8483;0.8478;0.8483;0.8473;0.7833;0.7934;0.7833;0.7837;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8102;0.8292;0.8102;0.8083;0.8276;0.8285;0.8276;0.8268;0.7833;0.7934;0.7833;0.7837;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.8083;0.8267;0.8083;0.8059;0.8448;0.8449;0.8448;0.8448;0.7833;0.7934;0.7833;0.7837;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.8144;0.8324;0.8144;0.8121;0.8172;0.8166;0.8172;0.8168;0.7833;0.7934;0.7833;0.7837;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
SVC;0.8113;0.8315;0.8113;0.8088;0.8316;0.8337;0.8316;0.832;0.7833;0.7934;0.7833;0.7837;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.8121;0.8296;0.8121;0.8094;0.8276;0.8284;0.8276;0.8279;0.7833;0.7934;0.7833;0.7837;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.8121;0.8291;0.8121;0.8097;0.8379;0.8378;0.8379;0.8378;0.7833;0.7897;0.7833;0.7836;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
SVC;0.8128;0.8295;0.8128;0.8108;0.8454;0.85;0.8454;0.8439;0.7833;0.7897;0.7833;0.7836;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
SVC;0.8129;0.829;0.8129;0.8105;0.8448;0.8461;0.8448;0.8449;0.7833;0.7897;0.7833;0.7836;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
SVC;0.8094;0.8281;0.8094;0.8072;0.8414;0.8408;0.8414;0.841;0.7833;0.7897;0.7833;0.7836;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
DecisionTreeClassifier;0.8263;0.8268;0.8263;0.8264;0.8724;0.8765;0.8724;0.8731;0.7833;0.7857;0.7833;0.7835;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=309)
SVC;0.8087;0.8256;0.8087;0.8062;0.8724;0.8732;0.8724;0.8725;0.7833;0.7857;0.7833;0.7835;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
DecisionTreeClassifier;0.8462;0.8474;0.8462;0.8464;0.8345;0.8347;0.8345;0.8345;0.7833;0.7857;0.7833;0.7835;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=138)
RandomForestClassifier;0.868;0.8686;0.868;0.868;0.8621;0.8619;0.8621;0.8619;0.7833;0.8002;0.7833;0.7833;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
KNeighborsClassifier;0.84;0.8421;0.84;0.8393;0.8414;0.8442;0.8414;0.8417;0.7833;0.806;0.7833;0.7832;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8266;0.8303;0.8266;0.8263;0.866;0.872;0.866;0.8673;0.7833;0.806;0.7833;0.7832;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.7375;0.7684;0.7375;0.736;0.7931;0.8141;0.7931;0.7961;0.7833;0.7838;0.7833;0.7832;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7454;0.7761;0.7454;0.7444;0.8007;0.8062;0.8007;0.8004;0.7833;0.7838;0.7833;0.7832;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
SVC;0.8101;0.8288;0.8101;0.8077;0.8213;0.824;0.8213;0.8214;0.7833;0.7917;0.7833;0.7831;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.8074;0.8266;0.8074;0.8053;0.8385;0.8382;0.8385;0.8383;0.7833;0.7917;0.7833;0.7831;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
MLPClassifier;0.8324;0.8347;0.8324;0.833;0.9103;0.9105;0.9103;0.9101;0.7833;0.7873;0.7833;0.7831;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
SVC;0.8075;0.8263;0.8075;0.8053;0.8759;0.8763;0.8759;0.8751;0.7833;0.7917;0.7833;0.7831;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.806;0.8246;0.806;0.8034;0.9034;0.9047;0.9034;0.9031;0.7833;0.7917;0.7833;0.7831;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
MLPClassifier;0.8393;0.8439;0.8393;0.84;0.8483;0.848;0.8483;0.8478;0.7833;0.7873;0.7833;0.7831;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.8369;0.8407;0.8369;0.8376;0.8832;0.8831;0.8832;0.8829;0.7833;0.7873;0.7833;0.7831;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.842;0.8445;0.842;0.8425;0.8655;0.8654;0.8655;0.8649;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
MLPClassifier;0.8431;0.846;0.8431;0.8438;0.8448;0.8456;0.8448;0.8449;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
MLPClassifier;0.8374;0.8403;0.8374;0.8376;0.8897;0.8894;0.8897;0.8894;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8381;0.8417;0.8381;0.8389;0.8793;0.8811;0.8793;0.8797;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.8431;0.8457;0.8431;0.8436;0.8345;0.8356;0.8345;0.8348;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.8354;0.8386;0.8354;0.8358;0.8832;0.8831;0.8832;0.8828;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.8426;0.8455;0.8426;0.8433;0.8419;0.8474;0.8419;0.8426;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
MLPClassifier;0.8397;0.8426;0.8397;0.8403;0.8759;0.8786;0.8759;0.8764;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 302, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=302)
MLPClassifier;0.8354;0.8382;0.8354;0.8363;0.8655;0.8664;0.8655;0.8653;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
MLPClassifier;0.8392;0.8414;0.8392;0.8397;0.8419;0.8424;0.8419;0.8421;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
RandomForestClassifier;0.8649;0.8665;0.8649;0.8651;0.8483;0.8535;0.8483;0.8482;0.7833;0.7854;0.7833;0.783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
KNeighborsClassifier;0.8331;0.8368;0.8331;0.8326;0.8552;0.8571;0.8552;0.8554;0.7833;0.7989;0.7833;0.7828;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.739;0.7707;0.739;0.7381;0.8379;0.8381;0.8379;0.8376;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
RandomForestClassifier;0.8665;0.8677;0.8665;0.8666;0.8552;0.8571;0.8552;0.8549;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
SVC;0.7367;0.7698;0.7367;0.7359;0.8621;0.8637;0.8621;0.8626;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
SVC;0.7362;0.7705;0.7362;0.7356;0.8351;0.8408;0.8351;0.8352;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
DecisionTreeClassifier;0.8297;0.8311;0.8297;0.8296;0.869;0.8711;0.869;0.8695;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
RandomForestClassifier;0.8699;0.8709;0.8699;0.8699;0.8483;0.8554;0.8483;0.8477;0.7833;0.7863;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
SVC;0.7416;0.7731;0.7416;0.7411;0.7835;0.7977;0.7835;0.7854;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.7394;0.7723;0.7394;0.738;0.7966;0.8;0.7966;0.7975;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.7397;0.7742;0.7397;0.7385;0.8179;0.8211;0.8179;0.8185;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7401;0.7706;0.7401;0.7395;0.7931;0.8054;0.7931;0.7942;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7409;0.771;0.7409;0.7408;0.8379;0.8416;0.8379;0.8385;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.734;0.7662;0.734;0.7335;0.8241;0.8282;0.8241;0.8244;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
RandomForestClassifier;0.8695;0.8714;0.8695;0.8697;0.8517;0.8515;0.8517;0.8508;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
SVC;0.7381;0.7707;0.7381;0.7367;0.7904;0.7917;0.7904;0.7906;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7291;0.7635;0.7291;0.7283;0.8483;0.8488;0.8483;0.8482;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7401;0.7701;0.7401;0.7389;0.8103;0.8183;0.8103;0.8114;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7317;0.7651;0.7317;0.7311;0.8448;0.8456;0.8448;0.8448;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7413;0.7724;0.7413;0.7408;0.8103;0.8166;0.8103;0.809;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7381;0.7697;0.7381;0.7382;0.8247;0.8366;0.8247;0.8259;0.7833;0.7839;0.7833;0.7827;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
KNeighborsClassifier;0.8454;0.8487;0.8454;0.8456;0.8931;0.8931;0.8931;0.8927;0.7833;0.7876;0.7833;0.7825;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8416;0.8431;0.8416;0.8418;0.8172;0.8172;0.8172;0.8172;0.7833;0.7821;0.7833;0.7824;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=676)
KNeighborsClassifier;0.9047;0.9068;0.9047;0.9047;0.8621;0.8631;0.8621;0.8614;0.7833;0.807;0.7833;0.7824;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.835;0.8384;0.835;0.8357;0.8862;0.8862;0.8862;0.8852;0.7833;0.7861;0.7833;0.7823;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
MLPClassifier;0.8389;0.8422;0.8389;0.8396;0.8552;0.8569;0.8552;0.8554;0.7833;0.7906;0.7833;0.7822;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
DecisionTreeClassifier;0.8446;0.8462;0.8446;0.8447;0.8586;0.861;0.8586;0.8586;0.7833;0.7831;0.7833;0.7822;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=961)
RandomForestClassifier;0.871;0.8723;0.871;0.8712;0.8828;0.8831;0.8828;0.8825;0.7833;0.7831;0.7833;0.7822;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 306};RandomForestClassifier(n_estimators=20, random_state=306)
MLPClassifier;0.8365;0.8392;0.8365;0.8372;0.8729;0.873;0.8729;0.8725;0.7833;0.7906;0.7833;0.7822;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
RandomForestClassifier;0.8721;0.8736;0.8721;0.872;0.8522;0.8522;0.8522;0.8522;0.7833;0.7835;0.7833;0.7821;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
RandomForestClassifier;0.868;0.8691;0.868;0.868;0.869;0.8695;0.869;0.8691;0.7833;0.7835;0.7833;0.7821;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
SVC;0.8071;0.8261;0.8071;0.8047;0.8517;0.8526;0.8517;0.8514;0.7833;0.8023;0.7833;0.782;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
MLPClassifier;0.8477;0.8503;0.8477;0.8484;0.8414;0.843;0.8414;0.8416;0.7833;0.7917;0.7833;0.782;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
MLPClassifier;0.8431;0.846;0.8431;0.8438;0.869;0.8693;0.869;0.8691;0.7833;0.7917;0.7833;0.782;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.8366;0.8385;0.8366;0.837;0.9;0.9004;0.9;0.8999;0.7833;0.7917;0.7833;0.782;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
MLPClassifier;0.8426;0.8459;0.8426;0.8432;0.8729;0.8735;0.8729;0.873;0.7833;0.7917;0.7833;0.782;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
DecisionTreeClassifier;0.8416;0.8437;0.8416;0.8416;0.8828;0.8872;0.8828;0.8828;0.7833;0.7853;0.7833;0.7819;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=406)
DecisionTreeClassifier;0.884;0.8846;0.884;0.8839;0.8557;0.857;0.8557;0.8551;0.7833;0.7912;0.7833;0.7816;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
SVC;0.8056;0.8241;0.8056;0.8028;0.8828;0.8845;0.8828;0.8832;0.7833;0.8019;0.7833;0.7816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
DecisionTreeClassifier;0.8887;0.889;0.8887;0.8885;0.8207;0.82;0.8207;0.8203;0.7833;0.7843;0.7833;0.7815;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
MLPClassifier;0.8366;0.8387;0.8366;0.8371;0.8586;0.8587;0.8586;0.8587;0.7833;0.7843;0.7833;0.7815;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
RandomForestClassifier;0.8756;0.8772;0.8756;0.8758;0.8655;0.8666;0.8655;0.8645;0.7833;0.787;0.7833;0.7815;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
MLPClassifier;0.8477;0.8495;0.8477;0.8483;0.8517;0.852;0.8517;0.8518;0.7833;0.7843;0.7833;0.7815;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
RandomForestClassifier;0.9223;0.9224;0.9223;0.9222;0.9241;0.9243;0.9241;0.9242;0.7833;0.7854;0.7833;0.7813;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 290};RandomForestClassifier(n_estimators=20, random_state=290)
RandomForestClassifier;0.8706;0.8721;0.8706;0.871;0.8517;0.8521;0.8517;0.8505;0.7833;0.7854;0.7833;0.7813;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
RandomForestClassifier;0.8676;0.869;0.8676;0.8677;0.8759;0.8762;0.8759;0.8759;0.7833;0.7833;0.7833;0.7811;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 798};RandomForestClassifier(n_estimators=20, random_state=798)
KNeighborsClassifier;0.8527;0.8555;0.8527;0.8526;0.8862;0.8881;0.8862;0.886;0.7833;0.7928;0.7833;0.781;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8465;0.8504;0.8465;0.8468;0.8966;0.8967;0.8966;0.8966;0.7833;0.7956;0.7833;0.781;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.853;0.8553;0.853;0.8532;0.869;0.8705;0.869;0.8693;0.7833;0.8072;0.7833;0.7808;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8549;0.8579;0.8549;0.8551;0.8241;0.829;0.8241;0.8238;0.7833;0.7871;0.7833;0.7807;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.8102;0.8283;0.8102;0.8077;0.8759;0.8787;0.8759;0.876;0.7833;0.7922;0.7833;0.7807;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
DecisionTreeClassifier;0.889;0.8898;0.889;0.8892;0.8517;0.8543;0.8517;0.8526;0.7833;0.7801;0.7833;0.7805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=341)
KNeighborsClassifier;0.9047;0.9059;0.9047;0.9044;0.9347;0.9351;0.9347;0.9346;0.7833;0.786;0.7833;0.7804;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8967;0.8977;0.8967;0.8966;0.9207;0.922;0.9207;0.9203;0.7833;0.786;0.7833;0.7804;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8657;0.8667;0.8657;0.8658;0.869;0.8686;0.869;0.8685;0.7833;0.7875;0.7833;0.7801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 306};RandomForestClassifier(n_estimators=20, random_state=306)
DecisionTreeClassifier;0.889;0.8899;0.889;0.8889;0.8724;0.8723;0.8724;0.8716;0.7833;0.7875;0.7833;0.7801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
DecisionTreeClassifier;0.8836;0.8842;0.8836;0.8838;0.869;0.8686;0.869;0.8682;0.7833;0.7875;0.7833;0.7801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=741)
DecisionTreeClassifier;0.889;0.8899;0.889;0.889;0.8552;0.8569;0.8552;0.855;0.7833;0.7875;0.7833;0.7801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
KNeighborsClassifier;0.9039;0.9052;0.9039;0.9037;0.9107;0.9111;0.9107;0.9108;0.7833;0.7857;0.7833;0.78;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9033;0.9028;0.9027;0.9038;0.9046;0.9038;0.9038;0.7833;0.7857;0.7833;0.78;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9062;0.9073;0.9062;0.9062;0.9138;0.9138;0.9138;0.9131;0.7833;0.7857;0.7833;0.78;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9024;0.9029;0.9024;0.9021;0.9138;0.9138;0.9138;0.9137;0.7833;0.7857;0.7833;0.78;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8997;0.9007;0.8997;0.8998;0.9379;0.938;0.9379;0.9378;0.7833;0.7857;0.7833;0.78;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.889;0.8898;0.889;0.889;0.8483;0.8499;0.8483;0.8481;0.7833;0.7926;0.7833;0.7799;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=881)
KNeighborsClassifier;0.8366;0.8398;0.8366;0.8362;0.8207;0.8274;0.8207;0.8217;0.7833;0.8083;0.7833;0.7797;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.853;0.8568;0.853;0.8531;0.8351;0.8372;0.8351;0.8354;0.7833;0.8083;0.7833;0.7797;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 896};RandomForestClassifier(n_estimators=5, random_state=896)
RandomForestClassifier;0.8618;0.8624;0.8618;0.8618;0.8862;0.8866;0.8862;0.8862;0.7833;0.7871;0.7833;0.7793;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 951};RandomForestClassifier(n_estimators=20, random_state=951)
RandomForestClassifier;0.8703;0.8712;0.8703;0.8703;0.8655;0.8655;0.8655;0.8655;0.7833;0.7871;0.7833;0.7793;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.9112;0.9121;0.9112;0.911;0.9141;0.9164;0.9141;0.9143;0.7833;0.8041;0.7833;0.7787;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 893};RandomForestClassifier(n_estimators=5, random_state=893)
RandomForestClassifier;0.9273;0.9276;0.9273;0.9273;0.9276;0.9277;0.9276;0.9276;0.7833;0.79;0.7833;0.7786;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 767};RandomForestClassifier(n_estimators=20, random_state=767)
DecisionTreeClassifier;0.8844;0.886;0.8844;0.8846;0.8103;0.8226;0.8103;0.8079;0.7833;0.7873;0.7833;0.7786;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
RandomForestClassifier;0.9265;0.9274;0.9265;0.9266;0.9038;0.9047;0.9038;0.9024;0.7833;0.7847;0.7833;0.7786;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 386};RandomForestClassifier(n_estimators=20, random_state=386)
DecisionTreeClassifier;0.8764;0.8771;0.8764;0.8765;0.8591;0.8596;0.8591;0.8574;0.7833;0.7819;0.7833;0.7785;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=881)
DecisionTreeClassifier;0.8798;0.8806;0.8798;0.8799;0.8625;0.8636;0.8625;0.8629;0.7833;0.7819;0.7833;0.7785;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=741)
DecisionTreeClassifier;0.8833;0.8848;0.8833;0.8836;0.8552;0.8559;0.8552;0.8555;0.7833;0.801;0.7833;0.7783;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
KNeighborsClassifier;0.8407;0.8438;0.8407;0.8402;0.8454;0.8465;0.8454;0.8452;0.7833;0.793;0.7833;0.7779;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.884;0.8846;0.884;0.8842;0.8522;0.8621;0.8522;0.8526;0.7833;0.8097;0.7833;0.7777;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=529)
DecisionTreeClassifier;0.85;0.8528;0.85;0.8502;0.7966;0.8071;0.7966;0.795;0.7833;0.792;0.7833;0.7771;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=406)
DecisionTreeClassifier;0.8511;0.8536;0.8511;0.8512;0.8517;0.8559;0.8517;0.851;0.7833;0.7778;0.7833;0.7767;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8848;0.8857;0.8848;0.8848;0.8448;0.8478;0.8448;0.8455;0.7833;0.7867;0.7833;0.7767;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=741)
DecisionTreeClassifier;0.8879;0.8891;0.8879;0.888;0.8448;0.8446;0.8448;0.8435;0.7833;0.7867;0.7833;0.7767;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=367)
DecisionTreeClassifier;0.8477;0.8496;0.8477;0.8476;0.8517;0.8523;0.8517;0.851;0.7833;0.8089;0.7833;0.7766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=406)
RandomForestClassifier;0.853;0.8568;0.853;0.853;0.8557;0.8645;0.8557;0.8563;0.7833;0.8089;0.7833;0.7766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 760};RandomForestClassifier(n_estimators=20, random_state=760)
RandomForestClassifier;0.855;0.8582;0.855;0.8549;0.8207;0.8251;0.8207;0.8203;0.7833;0.8089;0.7833;0.7766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
DecisionTreeClassifier;0.8909;0.8922;0.8909;0.8911;0.831;0.8307;0.831;0.8309;0.7833;0.7845;0.7833;0.7766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=741)
DecisionTreeClassifier;0.8898;0.891;0.8898;0.89;0.8517;0.8521;0.8517;0.8519;0.7833;0.7845;0.7833;0.7766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=529)
DecisionTreeClassifier;0.8863;0.8877;0.8863;0.8866;0.8552;0.8565;0.8552;0.8544;0.7833;0.7845;0.7833;0.7766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=741)
DecisionTreeClassifier;0.842;0.844;0.842;0.842;0.831;0.8343;0.831;0.8303;0.7833;0.7858;0.7833;0.7763;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=578)
DecisionTreeClassifier;0.8886;0.8894;0.8886;0.8884;0.8591;0.859;0.8591;0.8586;0.7833;0.8016;0.7833;0.7762;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=741)
RandomForestClassifier;0.8526;0.8567;0.8526;0.8526;0.8729;0.8778;0.8729;0.8727;0.7833;0.8046;0.7833;0.7761;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 896};RandomForestClassifier(n_estimators=5, random_state=896)
DecisionTreeClassifier;0.9089;0.9099;0.9089;0.9088;0.8862;0.8862;0.8862;0.886;0.7833;0.8091;0.7833;0.7758;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
DecisionTreeClassifier;0.8772;0.8782;0.8772;0.8771;0.8621;0.8623;0.8621;0.8619;0.7833;0.7914;0.7833;0.7754;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=367)
DecisionTreeClassifier;0.8446;0.8477;0.8446;0.8447;0.8454;0.8452;0.8454;0.8453;0.7833;0.7958;0.7833;0.7754;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=406)
DecisionTreeClassifier;0.8465;0.8487;0.8465;0.8463;0.8557;0.8631;0.8557;0.8556;0.7833;0.7958;0.7833;0.7754;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=961)
DecisionTreeClassifier;0.8852;0.8866;0.8852;0.8855;0.8591;0.8596;0.8591;0.8586;0.7833;0.7914;0.7833;0.7754;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=367)
DecisionTreeClassifier;0.8458;0.8488;0.8458;0.8459;0.8138;0.8149;0.8138;0.8141;0.7833;0.7798;0.7833;0.7749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=578)
RandomForestClassifier;0.907;0.9084;0.907;0.9068;0.9207;0.9214;0.9207;0.9204;0.7833;0.8064;0.7833;0.7749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 48};RandomForestClassifier(n_estimators=5, random_state=48)
RandomForestClassifier;0.9101;0.9121;0.9101;0.9101;0.8931;0.8933;0.8931;0.8926;0.7833;0.8064;0.7833;0.7749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 69};RandomForestClassifier(n_estimators=20, random_state=69)
DecisionTreeClassifier;0.8462;0.8476;0.8462;0.846;0.7724;0.7742;0.7724;0.772;0.7833;0.7798;0.7833;0.7749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=406)
RandomForestClassifier;0.907;0.9079;0.907;0.9069;0.9244;0.9255;0.9244;0.9244;0.7833;0.8064;0.7833;0.7749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 48};RandomForestClassifier(n_estimators=10, random_state=48)
KNeighborsClassifier;0.9009;0.9021;0.9009;0.901;0.8828;0.8875;0.8828;0.8829;0.7833;0.8064;0.7833;0.7749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.848;0.8518;0.848;0.848;0.8625;0.8682;0.8625;0.8626;0.7833;0.8056;0.7833;0.7746;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 287};RandomForestClassifier(n_estimators=20, random_state=287)
DecisionTreeClassifier;0.9039;0.905;0.9039;0.9038;0.9175;0.918;0.9175;0.9171;0.7833;0.7948;0.7833;0.7746;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 574};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=574)
LogisticRegression;0.6866;0.6952;0.6866;0.6854;0.6759;0.6864;0.6759;0.6711;0.7667;0.818;0.7667;0.7707;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6912;0.6998;0.6912;0.6892;0.669;0.6735;0.669;0.666;0.7667;0.818;0.7667;0.7707;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.7038;0.708;0.7038;0.7046;0.7207;0.7309;0.7207;0.7208;0.7667;0.7873;0.7667;0.7693;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
KNeighborsClassifier;0.8335;0.8388;0.8335;0.8333;0.8276;0.8404;0.8276;0.8282;0.7667;0.7774;0.7667;0.7682;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8408;0.8413;0.8408;0.8408;0.8448;0.8446;0.8448;0.8445;0.7667;0.7711;0.7667;0.768;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=95)
DecisionTreeClassifier;0.8308;0.8332;0.8308;0.8312;0.7966;0.8035;0.7966;0.7933;0.7667;0.7775;0.7667;0.7675;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=309)
DecisionTreeClassifier;0.8481;0.8491;0.8481;0.8484;0.8103;0.8104;0.8103;0.8098;0.7667;0.7698;0.7667;0.7672;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=682)
DecisionTreeClassifier;0.8427;0.8439;0.8427;0.843;0.8448;0.845;0.8448;0.8449;0.7667;0.7702;0.7667;0.7671;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.8389;0.8405;0.8389;0.8389;0.8103;0.8099;0.8103;0.8101;0.7667;0.768;0.7667;0.767;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=676)
SVC;0.8075;0.8269;0.8075;0.8047;0.8517;0.8516;0.8517;0.8506;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
DecisionTreeClassifier;0.8431;0.8439;0.8431;0.8433;0.8655;0.8664;0.8655;0.865;0.7667;0.7687;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
SVC;0.8033;0.8241;0.8033;0.8012;0.8655;0.866;0.8655;0.8657;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
SVC;0.8102;0.8289;0.8102;0.8081;0.8655;0.8666;0.8655;0.8656;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
SVC;0.8071;0.8269;0.8071;0.8049;0.8241;0.8272;0.8241;0.8232;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
SVC;0.8128;0.8307;0.8128;0.8104;0.8517;0.8512;0.8517;0.8508;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.8075;0.8266;0.8075;0.805;0.8862;0.888;0.8862;0.8862;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.8097;0.8286;0.8097;0.8079;0.8522;0.8532;0.8522;0.8519;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.8094;0.8278;0.8094;0.807;0.8552;0.8553;0.8552;0.8551;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8083;0.827;0.8083;0.8061;0.8759;0.8775;0.8759;0.8755;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8059;0.8247;0.8059;0.8035;0.8557;0.855;0.8557;0.8552;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
SVC;0.8071;0.8257;0.8071;0.8052;0.8414;0.8469;0.8414;0.8405;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8098;0.8304;0.8098;0.8079;0.8241;0.8263;0.8241;0.824;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
SVC;0.8117;0.8291;0.8117;0.81;0.8448;0.8457;0.8448;0.8449;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
SVC;0.8128;0.8297;0.8128;0.8107;0.8207;0.8228;0.8207;0.8194;0.7667;0.7716;0.7667;0.7668;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
DecisionTreeClassifier;0.8388;0.8394;0.8388;0.839;0.8625;0.8628;0.8625;0.8624;0.7667;0.7667;0.7667;0.7667;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.835;0.8361;0.835;0.8353;0.8213;0.8242;0.8213;0.8205;0.7667;0.7667;0.7667;0.7667;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
SVC;0.7351;0.7692;0.7351;0.7345;0.8041;0.8169;0.8041;0.8054;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
SVC;0.7425;0.7735;0.7425;0.7415;0.8241;0.8307;0.8241;0.8245;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
RandomForestClassifier;0.8664;0.8671;0.8664;0.8666;0.8897;0.8918;0.8897;0.8894;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
SVC;0.7443;0.7763;0.7443;0.7433;0.7759;0.793;0.7759;0.7769;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
RandomForestClassifier;0.8668;0.8683;0.8668;0.8669;0.8552;0.856;0.8552;0.8553;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 932};RandomForestClassifier(n_estimators=20, random_state=932)
SVC;0.7367;0.7703;0.7367;0.7361;0.7897;0.7935;0.7897;0.7892;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7443;0.7753;0.7443;0.7433;0.7793;0.7864;0.7793;0.7799;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7381;0.7753;0.7381;0.7372;0.8076;0.8094;0.8076;0.8076;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7424;0.7745;0.7424;0.741;0.8207;0.831;0.8207;0.8219;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.7363;0.7693;0.7363;0.7357;0.8345;0.8433;0.8345;0.8336;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7371;0.7703;0.7371;0.7363;0.7931;0.8004;0.7931;0.7942;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7382;0.7722;0.7382;0.7364;0.7931;0.8051;0.7931;0.7932;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7409;0.7721;0.7409;0.7394;0.7931;0.7944;0.7931;0.7932;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7398;0.7703;0.7398;0.7392;0.8207;0.8239;0.8207;0.8199;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7348;0.767;0.7348;0.7337;0.8034;0.8084;0.8034;0.8047;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7329;0.7663;0.7329;0.7323;0.8241;0.8267;0.8241;0.8244;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7398;0.7704;0.7398;0.7395;0.7966;0.8053;0.7966;0.7976;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7294;0.7628;0.7294;0.7289;0.8448;0.8568;0.8448;0.8461;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.7428;0.7754;0.7428;0.7414;0.7828;0.7951;0.7828;0.7845;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.731;0.7647;0.731;0.7301;0.8241;0.8301;0.8241;0.8255;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
SVC;0.7344;0.7659;0.7344;0.733;0.869;0.8732;0.869;0.8703;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7371;0.7697;0.7371;0.7361;0.7931;0.798;0.7931;0.7928;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7336;0.7683;0.7336;0.7329;0.8517;0.8521;0.8517;0.8518;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7401;0.7708;0.7401;0.7393;0.8069;0.8108;0.8069;0.8069;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7381;0.7705;0.7381;0.7374;0.8179;0.8266;0.8179;0.819;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7352;0.7684;0.7352;0.7341;0.8069;0.8181;0.8069;0.8092;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7333;0.7688;0.7333;0.7327;0.8483;0.8486;0.8483;0.8482;0.7667;0.7671;0.7667;0.7666;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
DecisionTreeClassifier;0.8324;0.8337;0.8324;0.8328;0.8483;0.851;0.8483;0.8479;0.7667;0.7709;0.7667;0.7664;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
DecisionTreeClassifier;0.8374;0.8389;0.8374;0.8378;0.8483;0.848;0.8483;0.8479;0.7667;0.7709;0.7667;0.7664;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=309)
LogisticRegression;0.6765;0.6875;0.6765;0.6742;0.7182;0.7304;0.7182;0.7195;0.7667;0.8089;0.7667;0.7662;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
RandomForestClassifier;0.8633;0.8645;0.8633;0.8633;0.866;0.8669;0.866;0.8663;0.7667;0.7662;0.7667;0.7661;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
SVC;0.8082;0.8277;0.8082;0.806;0.8213;0.8217;0.8213;0.8204;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
SVC;0.8136;0.8313;0.8136;0.8116;0.8862;0.8877;0.8862;0.8862;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
DecisionTreeClassifier;0.8277;0.8285;0.8277;0.828;0.8385;0.8408;0.8385;0.8388;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
MLPClassifier;0.8427;0.8454;0.8427;0.8434;0.8724;0.8769;0.8724;0.8732;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.84;0.8447;0.84;0.841;0.831;0.836;0.831;0.83;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
SVC;0.8067;0.8248;0.8067;0.8041;0.8213;0.8218;0.8213;0.821;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, random_state=424)
SVC;0.8117;0.8298;0.8117;0.8098;0.831;0.8337;0.831;0.83;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.812;0.8302;0.812;0.8095;0.8522;0.8525;0.8522;0.8523;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8094;0.8283;0.8094;0.8067;0.8625;0.8639;0.8625;0.8629;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
SVC;0.8148;0.8313;0.8148;0.8124;0.8207;0.8265;0.8207;0.8205;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.8113;0.83;0.8113;0.8086;0.8517;0.8511;0.8517;0.8512;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
SVC;0.8098;0.8281;0.8098;0.8076;0.8345;0.8368;0.8345;0.8338;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
SVC;0.8094;0.8286;0.8094;0.807;0.8552;0.856;0.8552;0.855;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.8109;0.8307;0.8109;0.8088;0.8138;0.8139;0.8138;0.8131;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
SVC;0.8109;0.8282;0.8109;0.8078;0.831;0.8305;0.831;0.8296;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8094;0.8276;0.8094;0.8075;0.8379;0.8382;0.8379;0.8376;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
SVC;0.8051;0.8259;0.8051;0.8032;0.8247;0.8265;0.8247;0.8239;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8113;0.8294;0.8113;0.809;0.8316;0.8314;0.8316;0.8315;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 558};SVC(C=10, random_state=558)
SVC;0.8116;0.8287;0.8116;0.8093;0.8247;0.827;0.8247;0.8246;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.8067;0.8241;0.8067;0.8041;0.8759;0.8758;0.8759;0.8758;0.7667;0.7702;0.7667;0.766;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
RandomForestClassifier;0.8684;0.8696;0.8684;0.8685;0.9034;0.9051;0.9034;0.9036;0.7667;0.7672;0.7667;0.7659;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 306};RandomForestClassifier(n_estimators=20, random_state=306)
MLPClassifier;0.8431;0.8471;0.8431;0.8438;0.8552;0.856;0.8552;0.8554;0.7667;0.7709;0.7667;0.7658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.8454;0.8487;0.8454;0.8458;0.8586;0.8641;0.8586;0.8593;0.7667;0.7709;0.7667;0.7658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8362;0.8383;0.8362;0.8364;0.8759;0.8777;0.8759;0.8761;0.7667;0.7709;0.7667;0.7658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.8362;0.8396;0.8362;0.837;0.8379;0.8402;0.8379;0.838;0.7667;0.7709;0.7667;0.7658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.8427;0.8458;0.8427;0.8435;0.8414;0.8449;0.8414;0.8425;0.7667;0.7709;0.7667;0.7658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 460, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=460)
MLPClassifier;0.8488;0.8517;0.8488;0.8495;0.8522;0.852;0.8522;0.852;0.7667;0.7663;0.7667;0.7656;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 605, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=605)
MLPClassifier;0.8404;0.8446;0.8404;0.8409;0.8759;0.8758;0.8759;0.8758;0.7667;0.7688;0.7667;0.7656;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
RandomForestClassifier;0.871;0.8721;0.871;0.871;0.8557;0.858;0.8557;0.8559;0.7667;0.7663;0.7667;0.7656;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 951};RandomForestClassifier(n_estimators=10, random_state=951)
MLPClassifier;0.8357;0.838;0.8357;0.8364;0.8763;0.8763;0.8763;0.8763;0.7667;0.7663;0.7667;0.7656;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
RandomForestClassifier;0.8702;0.8715;0.8702;0.8704;0.8591;0.8588;0.8591;0.8588;0.7667;0.7668;0.7667;0.7655;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 348};RandomForestClassifier(n_estimators=20, random_state=348)
DecisionTreeClassifier;0.8454;0.8484;0.8454;0.8454;0.8414;0.8416;0.8414;0.8413;0.7667;0.7647;0.7667;0.7653;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=958)
SVC;0.8044;0.8235;0.8044;0.802;0.8935;0.8937;0.8935;0.8931;0.7667;0.777;0.7667;0.7648;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.809;0.827;0.809;0.8067;0.8517;0.8542;0.8517;0.8519;0.7667;0.777;0.7667;0.7648;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
SVC;0.809;0.8268;0.809;0.8067;0.8828;0.8895;0.8828;0.8836;0.7667;0.777;0.7667;0.7648;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
SVC;0.8102;0.8272;0.8102;0.8082;0.8345;0.8369;0.8345;0.8332;0.7667;0.777;0.7667;0.7648;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.8109;0.8301;0.8109;0.8094;0.8282;0.8276;0.8282;0.8276;0.7667;0.777;0.7667;0.7648;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 345};SVC(C=10, random_state=345)
MLPClassifier;0.8396;0.8419;0.8396;0.8402;0.8488;0.8488;0.8488;0.8475;0.7667;0.7687;0.7667;0.7647;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
DecisionTreeClassifier;0.8328;0.8337;0.8328;0.833;0.8862;0.8897;0.8862;0.8864;0.7667;0.7708;0.7667;0.7646;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 309};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=309)
RandomForestClassifier;0.8721;0.8728;0.8721;0.8721;0.8591;0.8613;0.8591;0.8592;0.7667;0.765;0.7667;0.7646;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 306};RandomForestClassifier(n_estimators=20, random_state=306)
MLPClassifier;0.8381;0.8411;0.8381;0.8389;0.8655;0.8665;0.8655;0.8655;0.7667;0.7701;0.7667;0.7643;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
DecisionTreeClassifier;0.8457;0.8478;0.8457;0.8457;0.8144;0.8197;0.8144;0.814;0.7667;0.777;0.7667;0.7642;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=578)
LogisticRegression;0.67;0.6743;0.67;0.6694;0.6598;0.6648;0.6598;0.6601;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6663;0.6691;0.6663;0.666;0.6724;0.6745;0.6724;0.6714;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6766;0.6797;0.6766;0.6759;0.6552;0.6633;0.6552;0.6555;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6762;0.6804;0.6762;0.6757;0.6379;0.6466;0.6379;0.6393;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6781;0.6826;0.6781;0.6779;0.6483;0.6646;0.6483;0.6461;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6717;0.6762;0.6717;0.6715;0.6862;0.6909;0.6862;0.685;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6716;0.6763;0.6716;0.6712;0.7;0.7168;0.7;0.6992;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6715;0.6766;0.6715;0.6712;0.6735;0.681;0.6735;0.6731;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6731;0.6772;0.6731;0.6721;0.6598;0.6602;0.6598;0.6596;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6747;0.6791;0.6747;0.6739;0.6345;0.6412;0.6345;0.6353;0.7667;0.7924;0.7667;0.7635;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
RandomForestClassifier;0.8756;0.8762;0.8756;0.8755;0.8655;0.8662;0.8655;0.8653;0.7667;0.7681;0.7667;0.7634;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
DecisionTreeClassifier;0.8836;0.8845;0.8836;0.8836;0.8591;0.8632;0.8591;0.8581;0.7667;0.787;0.7667;0.7627;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
KNeighborsClassifier;0.8484;0.8508;0.8484;0.8488;0.8621;0.8623;0.8621;0.8618;0.7667;0.7827;0.7667;0.7627;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8469;0.8494;0.8469;0.8466;0.7828;0.7927;0.7828;0.7821;0.7667;0.7726;0.7667;0.7626;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.9315;0.9319;0.9315;0.9314;0.9034;0.9047;0.9034;0.9033;0.7667;0.7707;0.7667;0.7624;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
KNeighborsClassifier;0.8469;0.8501;0.8469;0.8473;0.8655;0.8681;0.8655;0.8647;0.7667;0.7797;0.7667;0.7621;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8813;0.882;0.8813;0.8812;0.8419;0.844;0.8419;0.842;0.7667;0.7733;0.7667;0.7619;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=367)
DecisionTreeClassifier;0.8817;0.8824;0.8817;0.8817;0.89;0.8905;0.89;0.8898;0.7667;0.7686;0.7667;0.7618;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8783;0.8801;0.8783;0.8784;0.8517;0.8524;0.8517;0.852;0.7667;0.7639;0.7667;0.7616;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=741)
DecisionTreeClassifier;0.8837;0.8843;0.8837;0.8835;0.8793;0.8824;0.8793;0.8799;0.7667;0.7667;0.7667;0.7616;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 529};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=529)
RandomForestClassifier;0.8576;0.8588;0.8576;0.8576;0.8897;0.8892;0.8897;0.8888;0.7667;0.7706;0.7667;0.7615;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 932};RandomForestClassifier(n_estimators=10, random_state=932)
DecisionTreeClassifier;0.8879;0.8892;0.8879;0.8881;0.8517;0.8576;0.8517;0.8489;0.7667;0.7644;0.7667;0.7614;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=367)
DecisionTreeClassifier;0.8817;0.8822;0.8817;0.8815;0.8522;0.8509;0.8522;0.8508;0.7667;0.779;0.7667;0.7612;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=315)
DecisionTreeClassifier;0.894;0.8946;0.894;0.894;0.831;0.8352;0.831;0.8306;0.7667;0.7665;0.7667;0.7601;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 741};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=741)
DecisionTreeClassifier;0.8821;0.8835;0.8821;0.8822;0.8448;0.8526;0.8448;0.8446;0.7667;0.7665;0.7667;0.7601;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=315)
DecisionTreeClassifier;0.8859;0.8876;0.8859;0.886;0.8345;0.8383;0.8345;0.8349;0.7667;0.77;0.7667;0.7601;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 315};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=315)
DecisionTreeClassifier;0.8408;0.8434;0.8408;0.8409;0.869;0.8692;0.869;0.8688;0.7667;0.7831;0.7667;0.7587;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=75)
DecisionTreeClassifier;0.8829;0.8838;0.8829;0.8829;0.8517;0.8542;0.8517;0.852;0.7667;0.7695;0.7667;0.7583;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=881)
DecisionTreeClassifier;0.8377;0.8409;0.8377;0.8379;0.8213;0.823;0.8213;0.8194;0.7667;0.7728;0.7667;0.7579;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=961)
LogisticRegression;0.6877;0.6985;0.6877;0.6861;0.669;0.6827;0.669;0.6681;0.75;0.7989;0.75;0.7551;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
KNeighborsClassifier;0.889;0.8903;0.889;0.8888;0.8793;0.8852;0.8793;0.8786;0.7667;0.793;0.7667;0.7544;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
LogisticRegression;0.7057;0.7096;0.7057;0.7067;0.6897;0.692;0.6897;0.69;0.75;0.7709;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6735;0.681;0.6735;0.672;0.7207;0.7427;0.7207;0.7177;0.75;0.8111;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.7099;0.7133;0.7099;0.7104;0.6897;0.6939;0.6897;0.6897;0.75;0.7709;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.6873;0.6964;0.6873;0.6857;0.7148;0.7318;0.7148;0.7134;0.75;0.8111;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.6866;0.6959;0.6866;0.6843;0.6759;0.6981;0.6759;0.6777;0.75;0.8111;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.7072;0.7104;0.7072;0.7078;0.6724;0.6739;0.6724;0.673;0.75;0.7709;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.7022;0.7068;0.7022;0.7034;0.7113;0.7197;0.7113;0.7127;0.75;0.7709;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7088;0.7137;0.7088;0.7098;0.7241;0.7297;0.7241;0.7238;0.75;0.7709;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7022;0.7064;0.7022;0.703;0.731;0.7386;0.731;0.7326;0.75;0.7709;0.75;0.7532;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7098;0.713;0.7098;0.7108;0.6564;0.6609;0.6564;0.6576;0.75;0.7703;0.75;0.7528;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7099;0.714;0.7099;0.711;0.7138;0.7171;0.7138;0.714;0.75;0.7703;0.75;0.7528;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7103;0.7142;0.7103;0.7111;0.6828;0.6891;0.6828;0.6845;0.75;0.7703;0.75;0.7528;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7041;0.7081;0.7041;0.705;0.7354;0.7412;0.7354;0.7328;0.75;0.7703;0.75;0.7528;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7065;0.7117;0.7065;0.707;0.7172;0.723;0.7172;0.7186;0.75;0.7639;0.75;0.7517;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7068;0.709;0.7068;0.7072;0.6966;0.6988;0.6966;0.6948;0.75;0.7639;0.75;0.7517;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7133;0.7164;0.7133;0.7145;0.6862;0.691;0.6862;0.6876;0.75;0.7639;0.75;0.7517;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7049;0.7082;0.7049;0.7055;0.7103;0.7089;0.7103;0.7095;0.75;0.7639;0.75;0.7517;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.6739;0.6841;0.6739;0.6729;0.6621;0.6787;0.6621;0.658;0.75;0.7972;0.75;0.7513;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
SVC;0.8079;0.826;0.8079;0.8052;0.869;0.8695;0.869;0.869;0.75;0.7671;0.75;0.7513;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 121};SVC(C=10, random_state=121)
SVC;0.8063;0.8266;0.8063;0.8039;0.8694;0.8698;0.8694;0.869;0.75;0.7671;0.75;0.7513;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 52};SVC(C=10, random_state=52)
LogisticRegression;0.6854;0.6926;0.6854;0.683;0.6586;0.6694;0.6586;0.6561;0.75;0.7972;0.75;0.7513;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6728;0.6827;0.6728;0.6711;0.6517;0.6668;0.6517;0.6504;0.75;0.8034;0.75;0.7513;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
DecisionTreeClassifier;0.8388;0.8397;0.8388;0.8392;0.866;0.8663;0.866;0.8659;0.75;0.752;0.75;0.7507;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=138)
SVC;0.7351;0.7685;0.7351;0.7354;0.8144;0.8268;0.8144;0.8156;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7359;0.7684;0.7359;0.7347;0.7931;0.808;0.7931;0.7939;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
SVC;0.7393;0.7712;0.7393;0.7385;0.7938;0.8006;0.7938;0.7947;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
SVC;0.7371;0.771;0.7371;0.7364;0.8414;0.8532;0.8414;0.8423;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7347;0.7681;0.7347;0.7342;0.8488;0.8546;0.8488;0.85;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.739;0.7731;0.739;0.7378;0.8207;0.8245;0.8207;0.8212;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 359};SVC(C=10, random_state=359)
SVC;0.7336;0.7652;0.7336;0.7319;0.8241;0.8339;0.8241;0.825;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7347;0.7671;0.7347;0.7338;0.8247;0.8295;0.8247;0.8257;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7344;0.7681;0.7344;0.734;0.8069;0.8242;0.8069;0.8088;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7382;0.7705;0.7382;0.7379;0.8034;0.8197;0.8034;0.8045;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
SVC;0.7325;0.7674;0.7325;0.7317;0.8241;0.8284;0.8241;0.8245;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.7329;0.7668;0.7329;0.7325;0.8138;0.8249;0.8138;0.8141;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.7417;0.7732;0.7417;0.7413;0.7931;0.8095;0.7931;0.7962;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
DecisionTreeClassifier;0.8293;0.8311;0.8293;0.8298;0.8483;0.8515;0.8483;0.8477;0.75;0.7564;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
SVC;0.7385;0.7718;0.7385;0.737;0.8351;0.8392;0.8351;0.8352;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7362;0.7671;0.7362;0.7351;0.8041;0.8128;0.8041;0.8037;0.75;0.7513;0.75;0.7503;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 500};SVC(C=10, random_state=500)
SVC;0.8117;0.8307;0.8117;0.8097;0.8345;0.8375;0.8345;0.8342;0.75;0.7639;0.75;0.75;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 299};SVC(C=10, random_state=299)
RandomForestClassifier;0.8668;0.868;0.8668;0.8667;0.8862;0.8873;0.8862;0.8864;0.75;0.75;0.75;0.75;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 951};RandomForestClassifier(n_estimators=20, random_state=951)
DecisionTreeClassifier;0.8297;0.8306;0.8297;0.8298;0.8793;0.8809;0.8793;0.8798;0.75;0.7496;0.75;0.7495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=676)
DecisionTreeClassifier;0.835;0.8367;0.835;0.8352;0.8763;0.8763;0.8763;0.8762;0.75;0.7631;0.75;0.7491;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 138};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=138)
LogisticRegression;0.6759;0.6802;0.6759;0.6754;0.6552;0.6588;0.6552;0.6548;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6696;0.6743;0.6696;0.6689;0.6495;0.6541;0.6495;0.6493;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6678;0.6719;0.6678;0.6667;0.7034;0.709;0.7034;0.7038;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6685;0.6738;0.6685;0.6676;0.7285;0.7367;0.7285;0.7271;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6747;0.6785;0.6747;0.6738;0.6345;0.6434;0.6345;0.636;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6698;0.6747;0.6698;0.6696;0.6966;0.7011;0.6966;0.6961;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6716;0.6764;0.6716;0.6712;0.6552;0.6616;0.6552;0.6559;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6731;0.6771;0.6731;0.6724;0.6735;0.6769;0.6735;0.6723;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6746;0.6792;0.6746;0.6739;0.6426;0.6494;0.6426;0.6418;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6716;0.6753;0.6716;0.6709;0.6207;0.6208;0.6207;0.6205;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6663;0.6703;0.6663;0.6654;0.6897;0.6921;0.6897;0.6905;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6644;0.6694;0.6644;0.664;0.7;0.7067;0.7;0.6966;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6717;0.6754;0.6717;0.6709;0.6517;0.6583;0.6517;0.653;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6677;0.6715;0.6677;0.6671;0.6632;0.6654;0.6632;0.6622;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6602;0.6674;0.6602;0.6598;0.7414;0.7436;0.7414;0.7419;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6697;0.6749;0.6697;0.6697;0.6897;0.6924;0.6897;0.689;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6766;0.6813;0.6766;0.6759;0.6483;0.6507;0.6483;0.6476;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6686;0.6733;0.6686;0.6685;0.7034;0.719;0.7034;0.7024;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6762;0.681;0.6762;0.6757;0.631;0.6378;0.631;0.6294;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6793;0.6828;0.6793;0.6787;0.6862;0.7025;0.6862;0.6859;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6678;0.6725;0.6678;0.6676;0.6931;0.6952;0.6931;0.6926;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.67;0.6739;0.67;0.6696;0.6117;0.6146;0.6117;0.6086;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6697;0.6732;0.6697;0.6689;0.669;0.6717;0.669;0.6682;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6776;0.6813;0.6776;0.6769;0.6598;0.6734;0.6598;0.6598;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6708;0.6751;0.6708;0.6704;0.6804;0.6893;0.6804;0.6784;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6774;0.6823;0.6774;0.6767;0.6759;0.6917;0.6759;0.6756;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.678;0.6824;0.678;0.6775;0.6667;0.6724;0.6667;0.6662;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6659;0.6693;0.6659;0.6647;0.7276;0.734;0.7276;0.7282;0.75;0.7768;0.75;0.7482;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6807;0.6912;0.6807;0.6791;0.6735;0.7105;0.6735;0.6681;0.75;0.8069;0.75;0.7481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.677;0.6873;0.677;0.6756;0.7448;0.781;0.7448;0.7456;0.75;0.8069;0.75;0.7481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.6755;0.6802;0.6755;0.6751;0.6345;0.6357;0.6345;0.634;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6688;0.6718;0.6688;0.6682;0.6907;0.6917;0.6907;0.6907;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6709;0.6746;0.6709;0.6702;0.6966;0.7022;0.6966;0.6969;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6727;0.6766;0.6727;0.6721;0.6667;0.6732;0.6667;0.6666;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6808;0.6844;0.6808;0.6802;0.6414;0.6554;0.6414;0.6423;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6797;0.6842;0.6797;0.6791;0.6207;0.6224;0.6207;0.62;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 185, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=185)"
LogisticRegression;0.6716;0.6764;0.6716;0.6714;0.7034;0.7103;0.7034;0.7035;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6694;0.6731;0.6694;0.6681;0.7;0.7026;0.7;0.7001;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
LogisticRegression;0.6797;0.6846;0.6797;0.6794;0.631;0.6384;0.631;0.6286;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6751;0.6796;0.6751;0.6747;0.6586;0.6621;0.6586;0.659;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6732;0.6792;0.6732;0.6726;0.6724;0.6725;0.6724;0.6724;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
LogisticRegression;0.6759;0.6801;0.6759;0.6753;0.6448;0.645;0.6448;0.6448;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6746;0.678;0.6746;0.6744;0.6254;0.6259;0.6254;0.6245;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6705;0.6746;0.6705;0.6697;0.6621;0.6634;0.6621;0.6625;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6747;0.6784;0.6747;0.6743;0.6724;0.6772;0.6724;0.6717;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6648;0.6702;0.6648;0.6643;0.7414;0.7465;0.7414;0.7418;0.75;0.7799;0.75;0.7477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6826;0.6916;0.6826;0.6811;0.6907;0.7099;0.6907;0.6902;0.75;0.8008;0.75;0.7475;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.6669;0.6706;0.6669;0.6663;0.7113;0.7115;0.7113;0.7092;0.75;0.7663;0.75;0.7473;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
DecisionTreeClassifier;0.8389;0.8419;0.8389;0.8389;0.8621;0.8633;0.8621;0.8617;0.75;0.7464;0.75;0.7473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 961};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=961)
DecisionTreeClassifier;0.8875;0.8884;0.8875;0.8874;0.8241;0.8258;0.8241;0.8244;0.75;0.7531;0.75;0.746;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 367};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=367)
DecisionTreeClassifier;0.8841;0.8848;0.8841;0.8842;0.869;0.8692;0.869;0.869;0.75;0.749;0.75;0.7438;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 881};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=881)
DecisionTreeClassifier;0.8511;0.8545;0.8511;0.8514;0.8448;0.8521;0.8448;0.8445;0.75;0.7518;0.75;0.7401;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 578};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=578)
KNeighborsClassifier;0.8985;0.9015;0.8985;0.8984;0.8625;0.8685;0.8625;0.8624;0.75;0.7802;0.75;0.7395;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
LogisticRegression;0.6812;0.693;0.6812;0.6802;0.669;0.6918;0.669;0.6683;0.7333;0.7919;0.7333;0.7377;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.7048;0.7068;0.7048;0.7047;0.7079;0.7153;0.7079;0.7091;0.7333;0.7556;0.7333;0.7367;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7056;0.7079;0.7056;0.7061;0.7216;0.7304;0.7216;0.7232;0.7333;0.7556;0.7333;0.7367;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.701;0.7038;0.701;0.7017;0.7079;0.7133;0.7079;0.7091;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7067;0.7098;0.7067;0.7075;0.7423;0.7421;0.7423;0.7407;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7041;0.7065;0.7041;0.7049;0.7354;0.7385;0.7354;0.7361;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7083;0.7128;0.7083;0.7092;0.7045;0.712;0.7045;0.7062;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7041;0.7087;0.7041;0.7052;0.7138;0.725;0.7138;0.7168;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7118;0.7143;0.7118;0.7129;0.6931;0.7058;0.6931;0.6948;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.6987;0.7026;0.6987;0.6995;0.7869;0.7883;0.7869;0.7874;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7099;0.7128;0.7099;0.7107;0.6655;0.6678;0.6655;0.666;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7122;0.7161;0.7122;0.7135;0.7;0.6999;0.7;0.6996;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7068;0.7114;0.7068;0.7079;0.7138;0.7184;0.7138;0.7147;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7011;0.7052;0.7011;0.7022;0.7138;0.7126;0.7138;0.7129;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7057;0.7105;0.7057;0.7066;0.6931;0.6952;0.6931;0.6936;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7073;0.7105;0.7073;0.7073;0.7103;0.7114;0.7103;0.7107;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.708;0.7119;0.708;0.709;0.7103;0.7082;0.7103;0.7089;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7057;0.7094;0.7057;0.7065;0.6966;0.7008;0.6966;0.6977;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7115;0.7155;0.7115;0.7125;0.6828;0.685;0.6828;0.6835;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.716;0.7202;0.716;0.7173;0.6621;0.6617;0.6621;0.6615;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7057;0.7092;0.7057;0.7065;0.7207;0.7245;0.7207;0.7199;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7084;0.7112;0.7084;0.7085;0.6552;0.6678;0.6552;0.6591;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7033;0.7065;0.7033;0.704;0.7216;0.7211;0.7216;0.7211;0.7333;0.7472;0.7333;0.7357;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7018;0.7054;0.7018;0.7027;0.7216;0.7222;0.7216;0.7207;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.6988;0.7025;0.6988;0.6998;0.7552;0.7549;0.7552;0.7549;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7034;0.7064;0.7034;0.7045;0.731;0.7343;0.731;0.7306;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 63, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=63)"
LogisticRegression;0.7042;0.7068;0.7042;0.7047;0.6966;0.6972;0.6966;0.6954;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.7079;0.7134;0.7079;0.7093;0.6873;0.69;0.6873;0.6878;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.7102;0.714;0.7102;0.7111;0.677;0.6837;0.677;0.6761;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.6976;0.701;0.6976;0.6984;0.7207;0.7233;0.7207;0.7212;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7065;0.7103;0.7065;0.7075;0.7069;0.7109;0.7069;0.7082;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.703;0.7064;0.703;0.7035;0.6966;0.7002;0.6966;0.6967;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7096;0.7141;0.7096;0.7109;0.6448;0.6514;0.6448;0.6471;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7061;0.71;0.7061;0.7074;0.731;0.7323;0.731;0.7296;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7068;0.7102;0.7068;0.7075;0.7345;0.7382;0.7345;0.7358;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7003;0.7043;0.7003;0.701;0.7069;0.7108;0.7069;0.7073;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7038;0.7061;0.7038;0.7044;0.7241;0.7252;0.7241;0.7246;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7117;0.7154;0.7117;0.7126;0.7182;0.7223;0.7182;0.7194;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7071;0.7105;0.7071;0.7078;0.732;0.7332;0.732;0.7318;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.7038;0.7072;0.7038;0.7046;0.7;0.7024;0.7;0.7;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7103;0.7146;0.7103;0.7109;0.7138;0.7215;0.7138;0.7159;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.7007;0.7043;0.7007;0.7016;0.7448;0.744;0.7448;0.7428;0.7333;0.7462;0.7333;0.7354;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
SVC;0.74;0.7729;0.74;0.739;0.8213;0.8248;0.8213;0.8215;0.7333;0.736;0.7333;0.7338;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 498};SVC(C=10, random_state=498)
SVC;0.7305;0.7647;0.7305;0.7298;0.8557;0.8617;0.8557;0.8566;0.7333;0.736;0.7333;0.7338;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 601};SVC(C=10, random_state=601)
SVC;0.7397;0.7731;0.7397;0.7392;0.811;0.8243;0.811;0.8128;0.7333;0.736;0.7333;0.7338;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 79};SVC(C=10, random_state=79)
DecisionTreeClassifier;0.8388;0.8405;0.8388;0.839;0.8419;0.8453;0.8419;0.8427;0.7333;0.7365;0.7333;0.7337;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 95};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=95)
KNeighborsClassifier;0.9005;0.9026;0.9005;0.9005;0.8552;0.8637;0.8552;0.853;0.75;0.78;0.75;0.7333;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.6826;0.6921;0.6826;0.681;0.677;0.7066;0.677;0.6782;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.672;0.6799;0.672;0.6698;0.7241;0.7476;0.7241;0.7209;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.6804;0.6891;0.6804;0.6777;0.669;0.6754;0.669;0.6649;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.682;0.6906;0.682;0.6799;0.7069;0.7259;0.7069;0.7077;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.6812;0.6898;0.6812;0.6796;0.669;0.6937;0.669;0.6694;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.6804;0.6894;0.6804;0.6788;0.6655;0.6861;0.6655;0.6622;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.672;0.681;0.672;0.6696;0.7379;0.7461;0.7379;0.7371;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6785;0.6888;0.6785;0.6766;0.7207;0.737;0.7207;0.7214;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6838;0.6939;0.6838;0.681;0.6392;0.6531;0.6392;0.641;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.6799;0.6918;0.6799;0.6787;0.6838;0.6974;0.6838;0.6826;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6823;0.6922;0.6823;0.6812;0.6897;0.7069;0.6897;0.688;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.685;0.6958;0.685;0.6838;0.6897;0.7043;0.6897;0.6847;0.7333;0.7965;0.7333;0.733;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
DecisionTreeClassifier;0.8381;0.8393;0.8381;0.8383;0.8797;0.8818;0.8797;0.8792;0.7333;0.7405;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 599};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=599)
LogisticRegression;0.6759;0.6867;0.6759;0.675;0.6759;0.69;0.6759;0.6726;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6715;0.6827;0.6715;0.6697;0.677;0.6887;0.677;0.6769;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.6778;0.6863;0.6778;0.6758;0.7;0.7088;0.7;0.7004;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.6755;0.6856;0.6755;0.6742;0.669;0.6908;0.669;0.6686;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6865;0.7;0.6865;0.6851;0.6117;0.6373;0.6117;0.6124;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6819;0.6929;0.6819;0.6812;0.6495;0.6744;0.6495;0.6499;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.673;0.6857;0.673;0.6717;0.6838;0.6956;0.6838;0.682;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.6849;0.6989;0.6849;0.6837;0.6289;0.6527;0.6289;0.6299;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6704;0.6834;0.6704;0.6685;0.6942;0.7134;0.6942;0.6972;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6782;0.6891;0.6782;0.6759;0.6828;0.6979;0.6828;0.6852;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6839;0.6955;0.6839;0.6822;0.6655;0.6836;0.6655;0.6663;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.6717;0.6867;0.6717;0.6708;0.7;0.7217;0.7;0.6996;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.6689;0.68;0.6689;0.6674;0.7182;0.7208;0.7182;0.7152;0.7333;0.7897;0.7333;0.7328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.6734;0.6792;0.6734;0.6728;0.6392;0.6436;0.6392;0.64;0.7333;0.7637;0.7333;0.7327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 727, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=727)"
DecisionTreeClassifier;0.8343;0.8359;0.8343;0.8344;0.8448;0.8494;0.8448;0.8444;0.7333;0.7408;0.7333;0.7327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=676)
LogisticRegression;0.6709;0.6748;0.6709;0.6707;0.669;0.6677;0.669;0.6664;0.7333;0.7537;0.7333;0.7317;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
LogisticRegression;0.6724;0.6769;0.6724;0.6716;0.6552;0.6576;0.6552;0.6545;0.7333;0.7537;0.7333;0.7317;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 106, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=106)"
LogisticRegression;0.6704;0.6751;0.6704;0.6701;0.677;0.6792;0.677;0.6763;0.7333;0.7537;0.7333;0.7317;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
DecisionTreeClassifier;0.8388;0.8415;0.8388;0.8387;0.8591;0.8603;0.8591;0.8583;0.7333;0.7372;0.7333;0.7312;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 406};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=406)
DecisionTreeClassifier;0.8466;0.8489;0.8466;0.8467;0.8276;0.8277;0.8276;0.8261;0.7333;0.74;0.7333;0.7263;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 215};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=215)
DecisionTreeClassifier;0.8469;0.85;0.8469;0.8469;0.831;0.8321;0.831;0.8308;0.7333;0.7325;0.7333;0.7262;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=958)
LogisticRegression;0.7052;0.7086;0.7052;0.7063;0.732;0.7303;0.732;0.7298;0.7167;0.7311;0.7167;0.7196;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
LogisticRegression;0.7111;0.7153;0.7111;0.712;0.6931;0.6977;0.6931;0.6936;0.7167;0.7313;0.7167;0.7195;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 389, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=389)"
LogisticRegression;0.7067;0.7095;0.7067;0.7075;0.7388;0.7442;0.7388;0.7377;0.7167;0.7313;0.7167;0.7195;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 334, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=334)"
LogisticRegression;0.7011;0.7047;0.7011;0.702;0.7414;0.7425;0.7414;0.741;0.7167;0.7313;0.7167;0.7195;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 781, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=781)"
LogisticRegression;0.6873;0.6963;0.6873;0.6855;0.6897;0.6994;0.6897;0.6883;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 100, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=100)"
LogisticRegression;0.677;0.688;0.677;0.6757;0.6862;0.6987;0.6862;0.6821;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.6835;0.6923;0.6835;0.6816;0.6759;0.6856;0.6759;0.6754;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6816;0.6914;0.6816;0.6799;0.7034;0.7205;0.7034;0.7037;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.687;0.6955;0.687;0.6842;0.6897;0.6964;0.6897;0.6885;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6753;0.6855;0.6753;0.673;0.6701;0.6913;0.6701;0.6675;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6854;0.697;0.6854;0.6845;0.669;0.703;0.669;0.6644;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6728;0.681;0.6728;0.6709;0.7172;0.7335;0.7172;0.7171;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6778;0.692;0.6778;0.6765;0.7034;0.7168;0.7034;0.701;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6778;0.6873;0.6778;0.6759;0.7069;0.7171;0.7069;0.7049;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 226, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=226)"
LogisticRegression;0.6762;0.6859;0.6762;0.6739;0.7207;0.7347;0.7207;0.7208;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6728;0.6822;0.6728;0.6711;0.6966;0.7103;0.6966;0.6974;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6841;0.6945;0.6841;0.6823;0.6735;0.6912;0.6735;0.6715;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 586, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=586)"
LogisticRegression;0.6789;0.6889;0.6789;0.6767;0.6793;0.7009;0.6793;0.68;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6797;0.6924;0.6797;0.6781;0.7;0.7147;0.7;0.7001;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6747;0.6858;0.6747;0.6732;0.731;0.7338;0.731;0.7281;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6826;0.6929;0.6826;0.6804;0.646;0.6689;0.646;0.64;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 266, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=266)"
LogisticRegression;0.6866;0.6968;0.6866;0.6852;0.6724;0.6938;0.6724;0.6724;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.68;0.6907;0.68;0.6782;0.6759;0.6886;0.6759;0.6746;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.6755;0.6852;0.6755;0.6743;0.7172;0.7342;0.7172;0.7158;0.7167;0.7787;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
LogisticRegression;0.6686;0.6723;0.6686;0.6683;0.6724;0.6729;0.6724;0.6725;0.7167;0.7371;0.7167;0.7162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 725, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=725)"
DecisionTreeClassifier;0.8423;0.8431;0.8423;0.8426;0.8241;0.8253;0.8241;0.8245;0.7167;0.7195;0.7167;0.7158;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 676};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=676)
LogisticRegression;0.6799;0.689;0.6799;0.6777;0.6735;0.6755;0.6735;0.6716;0.7167;0.7833;0.7167;0.7122;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
