Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8695;0.8732;0.8695;0.87;0.8517;0.8578;0.8517;0.8523;0.8667;0.8833;0.8667;0.869;0.9528;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 933};RandomForestClassifier(n_estimators=10, random_state=933)
SVC;0.8205;0.8255;0.8205;0.8213;0.8488;0.8563;0.8488;0.8497;0.85;0.8696;0.85;0.8537;0.8986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
RandomForestClassifier;0.8641;0.868;0.8641;0.8646;0.8763;0.8805;0.8763;0.877;0.85;0.8654;0.85;0.8525;0.9532;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 725};RandomForestClassifier(n_estimators=10, random_state=725)
RandomForestClassifier;0.8729;0.8768;0.8729;0.8733;0.8454;0.8473;0.8454;0.8457;0.85;0.8557;0.85;0.8514;0.9517;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 725};RandomForestClassifier(n_estimators=20, random_state=725)
SVC;0.827;0.8314;0.827;0.8279;0.8;0.8094;0.8;0.8014;0.8333;0.8581;0.8333;0.8369;0.9015;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8224;0.8275;0.8224;0.8233;0.8379;0.8423;0.8379;0.8388;0.8333;0.8581;0.8333;0.8369;0.9017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8198;0.8246;0.8198;0.8207;0.8483;0.8573;0.8483;0.8495;0.8333;0.8581;0.8333;0.8369;0.901;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8189;0.8233;0.8189;0.8198;0.8454;0.8601;0.8454;0.8462;0.8333;0.8581;0.8333;0.8369;0.8975;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8232;0.8272;0.8232;0.8239;0.8345;0.8521;0.8345;0.8371;0.8333;0.8581;0.8333;0.8369;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8216;0.8274;0.8216;0.8225;0.8655;0.8707;0.8655;0.8663;0.8333;0.8706;0.8333;0.8369;0.8986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8216;0.8266;0.8216;0.8224;0.8247;0.8444;0.8247;0.8268;0.8333;0.8581;0.8333;0.8369;0.9001;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8243;0.8305;0.8243;0.8251;0.831;0.8331;0.831;0.8314;0.8333;0.8581;0.8333;0.8369;0.8991;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.824;0.829;0.824;0.8249;0.8241;0.8426;0.8241;0.8268;0.8333;0.8581;0.8333;0.8369;0.9;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.8208;0.826;0.8208;0.8217;0.8522;0.8567;0.8522;0.8532;0.8333;0.8581;0.8333;0.8369;0.8996;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.827;0.8314;0.827;0.8278;0.8179;0.8237;0.8179;0.8191;0.8333;0.8472;0.8333;0.8365;0.9009;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
RandomForestClassifier;0.8638;0.8668;0.8638;0.864;0.8724;0.8824;0.8724;0.8737;0.8333;0.8434;0.8333;0.8352;0.952;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8699;0.873;0.8699;0.8703;0.8517;0.8551;0.8517;0.8517;0.8333;0.8434;0.8333;0.8352;0.9539;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8679;0.8735;0.8679;0.8681;0.8729;0.8734;0.8729;0.873;0.8333;0.8434;0.8333;0.8352;0.9525;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8653;0.8695;0.8653;0.8656;0.8724;0.8754;0.8724;0.873;0.8333;0.8389;0.8333;0.8352;0.9521;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 725};RandomForestClassifier(n_estimators=20, random_state=725)
RandomForestClassifier;0.8641;0.8674;0.8641;0.8642;0.8724;0.8767;0.8724;0.8732;0.8333;0.8409;0.8333;0.8349;0.9517;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 940};RandomForestClassifier(n_estimators=20, random_state=940)
RandomForestClassifier;0.8645;0.8687;0.8645;0.8647;0.8621;0.8665;0.8621;0.863;0.8333;0.8419;0.8333;0.8349;0.9549;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8706;0.8742;0.8706;0.8709;0.8448;0.8488;0.8448;0.8449;0.8333;0.8355;0.8333;0.8341;0.9536;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 940};RandomForestClassifier(n_estimators=20, random_state=940)
RandomForestClassifier;0.8676;0.8719;0.8676;0.868;0.8552;0.8589;0.8552;0.8542;0.8333;0.8355;0.8333;0.8341;0.952;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 940};RandomForestClassifier(n_estimators=20, random_state=940)
RandomForestClassifier;0.8688;0.8723;0.8688;0.869;0.8517;0.8544;0.8517;0.8525;0.8333;0.8355;0.8333;0.8341;0.9503;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 725};RandomForestClassifier(n_estimators=20, random_state=725)
RandomForestClassifier;0.8661;0.8701;0.8661;0.8663;0.8552;0.861;0.8552;0.8559;0.8333;0.8355;0.8333;0.8341;0.9531;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 725};RandomForestClassifier(n_estimators=20, random_state=725)
RandomForestClassifier;0.8664;0.8703;0.8664;0.8665;0.8793;0.8811;0.8793;0.8798;0.8333;0.8355;0.8333;0.8341;0.9566;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8668;0.8709;0.8668;0.8673;0.8724;0.8717;0.8724;0.872;0.8333;0.8355;0.8333;0.8341;0.9534;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 725};RandomForestClassifier(n_estimators=20, random_state=725)
MLPClassifier;0.8255;0.8311;0.8255;0.8263;0.8345;0.8352;0.8345;0.8347;0.8333;0.8405;0.8333;0.8338;0.9393;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
MLPClassifier;0.8227;0.8283;0.8227;0.8235;0.811;0.8166;0.811;0.8122;0.8333;0.8405;0.8333;0.8338;0.9398;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
MLPClassifier;0.8243;0.8287;0.8243;0.8251;0.8179;0.8242;0.8179;0.8198;0.8333;0.8405;0.8333;0.8338;0.9402;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8278;0.8343;0.8278;0.8285;0.8138;0.8202;0.8138;0.8146;0.8333;0.8405;0.8333;0.8338;0.9418;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
MLPClassifier;0.8224;0.8271;0.8224;0.8231;0.8522;0.8557;0.8522;0.8531;0.8333;0.8405;0.8333;0.8338;0.9393;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
SVC;0.8224;0.827;0.8224;0.8232;0.8207;0.8317;0.8207;0.8211;0.8167;0.8628;0.8167;0.8215;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.8213;0.8267;0.8213;0.8223;0.8483;0.8529;0.8483;0.8493;0.8167;0.8356;0.8167;0.8204;0.8969;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8217;0.8265;0.8217;0.8225;0.831;0.8476;0.831;0.8331;0.8167;0.8356;0.8167;0.8204;0.8983;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.8239;0.8282;0.8239;0.8247;0.8282;0.8409;0.8282;0.8291;0.8167;0.8481;0.8167;0.8202;0.9001;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.824;0.8294;0.824;0.825;0.8241;0.8334;0.8241;0.8256;0.8167;0.8481;0.8167;0.8202;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8186;0.8236;0.8186;0.8194;0.8517;0.859;0.8517;0.8525;0.8167;0.8481;0.8167;0.8202;0.8983;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8194;0.8244;0.8194;0.8204;0.8586;0.8675;0.8586;0.8594;0.8167;0.8481;0.8167;0.8202;0.8987;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8186;0.8244;0.8186;0.8195;0.8379;0.8489;0.8379;0.8384;0.8167;0.8481;0.8167;0.8202;0.8987;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8221;0.8269;0.8221;0.8227;0.8517;0.8604;0.8517;0.8527;0.8167;0.8481;0.8167;0.8202;0.8986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8136;0.8181;0.8136;0.8146;0.8897;0.9037;0.8897;0.8903;0.8167;0.8481;0.8167;0.8202;0.8948;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8197;0.8243;0.8197;0.8206;0.8557;0.863;0.8557;0.8566;0.8167;0.8481;0.8167;0.8202;0.8991;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8223;0.8274;0.8223;0.8232;0.8316;0.8497;0.8316;0.8336;0.8167;0.8481;0.8167;0.8202;0.9013;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.8205;0.8247;0.8205;0.8213;0.869;0.881;0.869;0.8694;0.8167;0.8481;0.8167;0.8202;0.8966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.819;0.8246;0.819;0.8199;0.8586;0.8643;0.8586;0.8593;0.8167;0.8481;0.8167;0.8202;0.8975;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
DecisionTreeClassifier;0.8569;0.862;0.8569;0.857;0.8793;0.8828;0.8793;0.8798;0.8167;0.8386;0.8167;0.8194;0.9434;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8633;0.8687;0.8633;0.8638;0.8488;0.8489;0.8488;0.8489;0.8167;0.8386;0.8167;0.8194;0.9461;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8619;0.8672;0.8619;0.8621;0.8724;0.8761;0.8724;0.8731;0.8167;0.8396;0.8167;0.8193;0.9435;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8641;0.8688;0.8641;0.8644;0.8419;0.8432;0.8419;0.8423;0.8167;0.8396;0.8167;0.8193;0.9461;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8622;0.8672;0.8622;0.8628;0.8655;0.8739;0.8655;0.8658;0.8167;0.8396;0.8167;0.8193;0.9459;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.863;0.8673;0.863;0.8634;0.8483;0.855;0.8483;0.8495;0.8167;0.8396;0.8167;0.8193;0.9445;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
RandomForestClassifier;0.8684;0.8724;0.8684;0.8686;0.8586;0.8628;0.8586;0.8596;0.8167;0.8287;0.8167;0.819;0.952;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 933};RandomForestClassifier(n_estimators=10, random_state=933)
RandomForestClassifier;0.8637;0.8674;0.8637;0.8638;0.8763;0.8811;0.8763;0.8773;0.8167;0.8287;0.8167;0.819;0.9528;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 940};RandomForestClassifier(n_estimators=20, random_state=940)
RandomForestClassifier;0.8638;0.8677;0.8638;0.8642;0.8897;0.8916;0.8897;0.8895;0.8167;0.826;0.8167;0.8187;0.9516;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 725};RandomForestClassifier(n_estimators=20, random_state=725)
MLPClassifier;0.8251;0.8305;0.8251;0.826;0.8241;0.8273;0.8241;0.825;0.8167;0.8285;0.8167;0.8184;0.94;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
MLPClassifier;0.8239;0.8299;0.8239;0.8246;0.8763;0.8776;0.8763;0.8766;0.8167;0.8285;0.8167;0.8184;0.9381;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
MLPClassifier;0.8315;0.8379;0.8315;0.8324;0.8282;0.8286;0.8282;0.8282;0.8167;0.8285;0.8167;0.8184;0.9421;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
MLPClassifier;0.8316;0.8362;0.8316;0.8323;0.8172;0.8243;0.8172;0.8194;0.8167;0.8285;0.8167;0.8184;0.9416;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
MLPClassifier;0.8262;0.8311;0.8262;0.8269;0.8419;0.8487;0.8419;0.8435;0.8167;0.8285;0.8167;0.8184;0.9398;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
MLPClassifier;0.8282;0.8335;0.8282;0.8289;0.8448;0.8474;0.8448;0.8458;0.8167;0.8285;0.8167;0.8184;0.9401;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
MLPClassifier;0.8247;0.8303;0.8247;0.8256;0.8414;0.8444;0.8414;0.8423;0.8167;0.8285;0.8167;0.8184;0.9394;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
KNeighborsClassifier;0.8385;0.8444;0.8385;0.838;0.8724;0.8775;0.8724;0.8727;0.8167;0.8214;0.8167;0.8181;0.9286;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8224;0.8273;0.8224;0.8233;0.8759;0.8794;0.8759;0.8764;0.8167;0.8401;0.8167;0.8181;0.938;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
KNeighborsClassifier;0.8442;0.8476;0.8442;0.8438;0.8935;0.8932;0.8935;0.8933;0.8167;0.8214;0.8167;0.8181;0.9311;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8485;0.8555;0.8485;0.8481;0.8414;0.8453;0.8414;0.8414;0.8167;0.8214;0.8167;0.8181;0.9314;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8388;0.8484;0.8388;0.839;0.8729;0.8737;0.8729;0.873;0.8167;0.8214;0.8167;0.8181;0.9253;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8684;0.8719;0.8684;0.8686;0.8621;0.8667;0.8621;0.863;0.8167;0.8221;0.8167;0.818;0.953;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 725};RandomForestClassifier(n_estimators=10, random_state=725)
RandomForestClassifier;0.8615;0.866;0.8615;0.8618;0.9;0.9007;0.9;0.9001;0.8167;0.8221;0.8167;0.818;0.9505;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 940};RandomForestClassifier(n_estimators=20, random_state=940)
RandomForestClassifier;0.8615;0.8644;0.8615;0.8617;0.8586;0.86;0.8586;0.8588;0.8167;0.8221;0.8167;0.818;0.9525;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 940};RandomForestClassifier(n_estimators=10, random_state=940)
RandomForestClassifier;0.8652;0.869;0.8652;0.8653;0.8797;0.8823;0.8797;0.8805;0.8167;0.8221;0.8167;0.818;0.953;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.8679;0.8722;0.8679;0.8683;0.8969;0.898;0.8969;0.8973;0.8167;0.8221;0.8167;0.818;0.9521;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
RandomForestClassifier;0.866;0.8694;0.866;0.8662;0.866;0.8683;0.866;0.8666;0.8167;0.8221;0.8167;0.818;0.9519;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 940};RandomForestClassifier(n_estimators=20, random_state=940)
KNeighborsClassifier;0.8461;0.8496;0.8461;0.846;0.811;0.8123;0.811;0.8115;0.8167;0.8181;0.8167;0.817;0.9342;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8718;0.8757;0.8718;0.8721;0.8552;0.8592;0.8552;0.8561;0.8167;0.819;0.8167;0.8168;0.9536;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 940};RandomForestClassifier(n_estimators=5, random_state=940)
RandomForestClassifier;0.8634;0.8679;0.8634;0.8637;0.8759;0.8756;0.8759;0.8757;0.8167;0.8167;0.8167;0.8167;0.9494;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 940};RandomForestClassifier(n_estimators=5, random_state=940)
RandomForestClassifier;0.8664;0.8704;0.8664;0.8666;0.8797;0.8827;0.8797;0.8801;0.8167;0.8167;0.8167;0.8167;0.9513;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 940};RandomForestClassifier(n_estimators=20, random_state=940)
RandomForestClassifier;0.8645;0.8686;0.8645;0.8649;0.8655;0.8752;0.8655;0.8657;0.8167;0.8167;0.8167;0.8167;0.9521;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 725};RandomForestClassifier(n_estimators=20, random_state=725)
MLPClassifier;0.8243;0.8288;0.8243;0.8251;0.8379;0.8429;0.8379;0.8396;0.8167;0.8217;0.8167;0.816;0.9378;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
KNeighborsClassifier;0.8511;0.8544;0.8511;0.8511;0.8172;0.8416;0.8172;0.8176;0.8167;0.8184;0.8167;0.8153;0.9341;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8228;0.8273;0.8228;0.8236;0.8345;0.8454;0.8345;0.8358;0.8;0.8391;0.8;0.805;0.8977;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8259;0.8307;0.8259;0.8265;0.8;0.8103;0.8;0.8018;0.8;0.8391;0.8;0.805;0.9031;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
SVC;0.8194;0.8245;0.8194;0.8204;0.8586;0.8635;0.8586;0.8589;0.8;0.8244;0.8;0.8039;0.8957;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 115};SVC(C=10, probability=True, random_state=115)
SVC;0.8204;0.826;0.8204;0.8212;0.8385;0.8476;0.8385;0.8397;0.8;0.8244;0.8;0.8039;0.897;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 951};SVC(C=10, probability=True, random_state=951)
DecisionTreeClassifier;0.863;0.8678;0.863;0.8632;0.8694;0.8767;0.8694;0.8702;0.8;0.8288;0.8;0.8034;0.9444;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8572;0.8627;0.8572;0.8577;0.8935;0.8963;0.8935;0.894;0.8;0.8288;0.8;0.8034;0.9442;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.8572;0.8625;0.8572;0.8573;0.8866;0.8877;0.8866;0.8868;0.8;0.8288;0.8;0.8034;0.9413;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.866;0.8708;0.866;0.8665;0.8448;0.8505;0.8448;0.8462;0.8;0.8288;0.8;0.8034;0.947;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.8561;0.8611;0.8561;0.8564;0.8759;0.8784;0.8759;0.8756;0.8;0.8288;0.8;0.8034;0.9408;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8611;0.8667;0.8611;0.8615;0.8759;0.8778;0.8759;0.8758;0.8;0.8288;0.8;0.8034;0.9501;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.8576;0.8626;0.8576;0.858;0.8793;0.8831;0.8793;0.88;0.8;0.8288;0.8;0.8034;0.9426;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.8657;0.8698;0.8657;0.8661;0.8586;0.8619;0.8586;0.8587;0.8;0.8288;0.8;0.8034;0.9454;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8508;0.8575;0.8508;0.851;0.8828;0.884;0.8828;0.8822;0.8;0.8288;0.8;0.8034;0.9428;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8637;0.8686;0.8637;0.8641;0.8591;0.8615;0.8591;0.8599;0.8;0.8288;0.8;0.8034;0.948;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8603;0.8645;0.8603;0.8605;0.8862;0.8916;0.8862;0.8867;0.8;0.8288;0.8;0.8034;0.9417;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.8538;0.8589;0.8538;0.854;0.8828;0.8877;0.8828;0.8836;0.8;0.8288;0.8;0.8034;0.9439;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.8607;0.8647;0.8607;0.8609;0.8448;0.8556;0.8448;0.8459;0.8;0.8288;0.8;0.8034;0.9427;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
DecisionTreeClassifier;0.8599;0.8647;0.8599;0.8604;0.9034;0.9049;0.9034;0.9037;0.8;0.8288;0.8;0.8034;0.9458;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8568;0.8619;0.8568;0.8573;0.8586;0.8672;0.8586;0.8598;0.8;0.8288;0.8;0.8034;0.9456;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8615;0.8665;0.8615;0.862;0.9069;0.9074;0.9069;0.9068;0.8;0.8288;0.8;0.8034;0.9462;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8623;0.8677;0.8623;0.8628;0.8552;0.8617;0.8552;0.8569;0.8;0.8288;0.8;0.8034;0.9457;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8641;0.8679;0.8641;0.8644;0.8586;0.8682;0.8586;0.8591;0.8;0.8288;0.8;0.8034;0.9465;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8602;0.8652;0.8602;0.8606;0.8729;0.8734;0.8729;0.8727;0.8;0.8288;0.8;0.8034;0.9437;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8545;0.86;0.8545;0.8551;0.8866;0.8907;0.8866;0.8868;0.8;0.8288;0.8;0.8034;0.9435;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 932};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=932)
DecisionTreeClassifier;0.8649;0.8689;0.8649;0.8652;0.8621;0.8638;0.8621;0.8622;0.8;0.8288;0.8;0.8034;0.9473;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=137)
MLPClassifier;0.8289;0.8358;0.8289;0.83;0.8069;0.8092;0.8069;0.8077;0.8;0.8171;0.8;0.8028;0.943;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8259;0.8319;0.8259;0.8268;0.8276;0.8361;0.8276;0.8291;0.8;0.8171;0.8;0.8028;0.9392;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8282;0.8336;0.8282;0.8289;0.8414;0.8521;0.8414;0.8425;0.8;0.8171;0.8;0.8028;0.9415;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
MLPClassifier;0.8247;0.8291;0.8247;0.8255;0.8276;0.8307;0.8276;0.8283;0.8;0.8171;0.8;0.8028;0.9393;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
DecisionTreeClassifier;0.8618;0.8678;0.8618;0.8623;0.8488;0.8513;0.8488;0.8493;0.8;0.8416;0.8;0.8017;0.9446;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 137};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=137)
MLPClassifier;0.8239;0.8309;0.8239;0.8249;0.8247;0.8255;0.8247;0.8248;0.8;0.8093;0.8;0.8017;0.9406;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
RandomForestClassifier;0.8676;0.8717;0.8676;0.8681;0.869;0.8732;0.869;0.8689;0.8;0.8093;0.8;0.8017;0.9513;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 933};RandomForestClassifier(n_estimators=20, random_state=933)
MLPClassifier;0.8201;0.8248;0.8201;0.8208;0.8522;0.8569;0.8522;0.8535;0.8;0.8093;0.8;0.8017;0.9396;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8274;0.8329;0.8274;0.8281;0.8103;0.8156;0.8103;0.8104;0.8;0.8093;0.8;0.8017;0.9406;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
MLPClassifier;0.824;0.8297;0.824;0.8249;0.8138;0.8147;0.8138;0.8142;0.8;0.8093;0.8;0.8017;0.9385;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
MLPClassifier;0.8247;0.8305;0.8247;0.8253;0.8069;0.8106;0.8069;0.808;0.8;0.8166;0.8;0.8017;0.9405;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
RandomForestClassifier;0.8633;0.8683;0.8633;0.8637;0.8832;0.8846;0.8832;0.8833;0.8;0.8109;0.8;0.8014;0.9514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 725};RandomForestClassifier(n_estimators=10, random_state=725)
KNeighborsClassifier;0.8335;0.8371;0.8335;0.8329;0.8793;0.887;0.8793;0.8803;0.8;0.8042;0.8;0.801;0.9327;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8415;0.845;0.8415;0.8415;0.8694;0.8741;0.8694;0.869;0.8;0.8039;0.8;0.8005;0.9268;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8335;0.8382;0.8335;0.8342;0.7828;0.7939;0.7828;0.7841;0.8;0.8057;0.8;0.8003;0.945;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8251;0.8311;0.8251;0.8262;0.8517;0.855;0.8517;0.8525;0.8;0.8057;0.8;0.8003;0.9399;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 546, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=546)
MLPClassifier;0.8232;0.8295;0.8232;0.8239;0.8552;0.8612;0.8552;0.8563;0.8;0.8073;0.8;0.7994;0.939;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8262;0.8316;0.8262;0.8272;0.8379;0.8449;0.8379;0.8392;0.8;0.8073;0.8;0.7994;0.9387;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
MLPClassifier;0.8273;0.8334;0.8273;0.8281;0.8419;0.843;0.8419;0.8422;0.8;0.8073;0.8;0.7994;0.9401;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 338, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=338)
KNeighborsClassifier;0.8293;0.835;0.8293;0.829;0.8448;0.8549;0.8448;0.8468;0.8;0.7988;0.8;0.7991;0.9263;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.845;0.8504;0.845;0.8448;0.8379;0.8388;0.8379;0.8382;0.8;0.7988;0.8;0.7991;0.9301;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8584;0.8624;0.8584;0.8586;0.8655;0.8666;0.8655;0.8653;0.7833;0.8082;0.7833;0.7873;0.9469;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8607;0.8651;0.8607;0.8611;0.8793;0.8854;0.8793;0.8805;0.7833;0.8082;0.7833;0.7873;0.944;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
KNeighborsClassifier;0.8328;0.8363;0.8328;0.8317;0.8379;0.8382;0.8379;0.838;0.7833;0.8098;0.7833;0.7865;0.9301;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
KNeighborsClassifier;0.8381;0.8424;0.8381;0.838;0.8414;0.8417;0.8414;0.8408;0.7833;0.797;0.7833;0.7862;0.9269;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8228;0.8281;0.8228;0.8239;0.8552;0.8579;0.8552;0.8559;0.7833;0.797;0.7833;0.7862;0.9392;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
MLPClassifier;0.8263;0.8328;0.8263;0.8271;0.831;0.8345;0.831;0.8315;0.7833;0.797;0.7833;0.7862;0.9411;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 883, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=883)
KNeighborsClassifier;0.8331;0.8373;0.8331;0.833;0.8694;0.8701;0.8694;0.8696;0.7833;0.7902;0.7833;0.7855;0.9288;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8408;0.8462;0.8408;0.8408;0.8034;0.8168;0.8034;0.8059;0.7833;0.7887;0.7833;0.7851;0.9281;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.7976;0.8022;0.7976;0.7981;0.8034;0.8105;0.8034;0.8052;0.7833;0.7912;0.7833;0.7848;0.9068;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
KNeighborsClassifier;0.8496;0.8536;0.8496;0.8497;0.8483;0.8506;0.8483;0.8473;0.7833;0.7857;0.7833;0.7835;0.928;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8389;0.8428;0.8389;0.8388;0.8621;0.8706;0.8621;0.8636;0.7833;0.7839;0.7833;0.7833;0.9296;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8431;0.8471;0.8431;0.8431;0.869;0.8704;0.869;0.8689;0.7833;0.7833;0.7833;0.7833;0.9309;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.7972;0.8017;0.7972;0.7974;0.7828;0.7899;0.7828;0.7848;0.7833;0.7934;0.7833;0.7826;0.9076;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7945;0.7993;0.7945;0.7952;0.8034;0.8062;0.8034;0.8043;0.7833;0.7934;0.7833;0.7826;0.9062;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
KNeighborsClassifier;0.84;0.8445;0.84;0.8394;0.8351;0.836;0.8351;0.8351;0.7833;0.7821;0.7833;0.7824;0.9299;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8557;0.8612;0.8557;0.8555;0.8282;0.8345;0.8282;0.8289;0.7667;0.7852;0.7667;0.7705;0.9363;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8462;0.8504;0.8462;0.8459;0.8655;0.8662;0.8655;0.8658;0.7667;0.8001;0.7667;0.7695;0.9357;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8331;0.8365;0.8331;0.8325;0.8138;0.8435;0.8138;0.8137;0.7667;0.7778;0.7667;0.7687;0.9302;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8507;0.8565;0.8507;0.8507;0.8419;0.8406;0.8419;0.8404;0.7667;0.7778;0.7667;0.7687;0.933;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
LogisticRegression;0.7917;0.7965;0.7917;0.7927;0.811;0.8114;0.811;0.8112;0.7667;0.7758;0.7667;0.7672;0.9046;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.7959;0.8005;0.7959;0.7967;0.8007;0.8116;0.8007;0.803;0.7667;0.7758;0.7667;0.7672;0.9082;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.7884;0.7933;0.7884;0.7892;0.8586;0.8614;0.8586;0.8595;0.7667;0.7758;0.7667;0.7672;0.905;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.7972;0.8018;0.7972;0.798;0.8034;0.8097;0.8034;0.8051;0.7667;0.7758;0.7667;0.7672;0.9062;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.7953;0.8011;0.7953;0.796;0.8;0.8025;0.8;0.8005;0.7667;0.7758;0.7667;0.7672;0.9078;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.7983;0.8039;0.7983;0.7992;0.8069;0.8117;0.8069;0.8079;0.7667;0.7758;0.7667;0.7672;0.91;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.7964;0.8014;0.7964;0.7973;0.7862;0.7974;0.7862;0.7876;0.7667;0.7758;0.7667;0.7672;0.9068;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.7929;0.7974;0.7929;0.7936;0.8213;0.8262;0.8213;0.8231;0.7667;0.7758;0.7667;0.7672;0.9057;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7925;0.798;0.7925;0.7933;0.8316;0.8307;0.8316;0.831;0.7667;0.7758;0.7667;0.7672;0.9055;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7948;0.7988;0.7948;0.7956;0.8041;0.8171;0.8041;0.8054;0.7667;0.7758;0.7667;0.7672;0.9067;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7979;0.8027;0.7979;0.7988;0.8;0.8049;0.8;0.8015;0.7667;0.7758;0.7667;0.7672;0.9079;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7968;0.8012;0.7968;0.7974;0.8;0.8034;0.8;0.801;0.7667;0.7758;0.7667;0.7672;0.9083;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7976;0.8026;0.7976;0.7983;0.7862;0.7844;0.7862;0.785;0.7667;0.7758;0.7667;0.7672;0.9063;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7995;0.8043;0.7995;0.8002;0.769;0.7729;0.769;0.7696;0.7667;0.7758;0.7667;0.7672;0.9108;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7995;0.8037;0.7995;0.8001;0.7655;0.774;0.7655;0.7671;0.7667;0.7758;0.7667;0.7672;0.9094;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 736, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=736)"
LogisticRegression;0.7936;0.7986;0.7936;0.7945;0.8213;0.8238;0.8213;0.822;0.7667;0.7758;0.7667;0.7672;0.9067;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.8032;0.8075;0.8032;0.8038;0.7388;0.7466;0.7388;0.741;0.7667;0.7758;0.7667;0.7672;0.9104;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.7968;0.8009;0.7968;0.7977;0.7862;0.7873;0.7862;0.7864;0.7667;0.7758;0.7667;0.7672;0.9078;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.8037;0.8088;0.8037;0.8045;0.7586;0.7665;0.7586;0.7606;0.7667;0.7758;0.7667;0.7672;0.9108;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.8056;0.8108;0.8056;0.8064;0.7103;0.7202;0.7103;0.7137;0.7667;0.7758;0.7667;0.7672;0.9134;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.7914;0.796;0.7914;0.7921;0.8414;0.8433;0.8414;0.842;0.7667;0.7758;0.7667;0.7672;0.9058;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.8002;0.8049;0.8002;0.8009;0.7586;0.7627;0.7586;0.7599;0.7667;0.7758;0.7667;0.7672;0.9103;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.7926;0.7976;0.7926;0.7933;0.8207;0.8219;0.8207;0.8211;0.7667;0.7758;0.7667;0.7672;0.9057;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.7945;0.7986;0.7945;0.7952;0.8103;0.8125;0.8103;0.8113;0.7667;0.7758;0.7667;0.7672;0.9045;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.7933;0.7976;0.7933;0.7941;0.8276;0.8324;0.8276;0.8287;0.7667;0.7758;0.7667;0.7672;0.904;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 649, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=649)"
LogisticRegression;0.8005;0.8048;0.8005;0.8012;0.7491;0.7584;0.7491;0.7509;0.7667;0.7758;0.7667;0.7672;0.9108;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.7925;0.7974;0.7925;0.7934;0.8316;0.8366;0.8316;0.8329;0.7667;0.7758;0.7667;0.7672;0.907;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
KNeighborsClassifier;0.853;0.8577;0.853;0.8531;0.8517;0.8541;0.8517;0.8525;0.7667;0.7679;0.7667;0.767;0.9307;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.832;0.8364;0.832;0.8311;0.8448;0.8524;0.8448;0.8459;0.75;0.7746;0.75;0.7543;0.9318;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8366;0.8436;0.8366;0.8366;0.8759;0.877;0.8759;0.8756;0.75;0.7746;0.75;0.7543;0.9284;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8588;0.8611;0.8588;0.8589;0.8517;0.8591;0.8517;0.8525;0.75;0.7897;0.75;0.7542;0.9344;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8504;0.854;0.8504;0.85;0.7966;0.7959;0.7966;0.7957;0.7333;0.7325;0.7333;0.7293;0.9345;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8473;0.8506;0.8473;0.8467;0.8414;0.8406;0.8414;0.8409;0.7333;0.7335;0.7333;0.728;0.9331;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.855;0.8572;0.855;0.8548;0.8414;0.8408;0.8414;0.84;0.7167;0.7163;0.7167;0.7145;0.9316;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8522;0.8557;0.8522;0.8519;0.8351;0.8353;0.8351;0.833;0.7;0.7026;0.7;0.6993;0.9309;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
