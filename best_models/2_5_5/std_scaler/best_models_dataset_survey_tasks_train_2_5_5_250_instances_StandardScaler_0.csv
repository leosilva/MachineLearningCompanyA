Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8228;0.8252;0.8228;0.8216;0.8406;0.8594;0.8406;0.8377;0.8333;0.8333;0.8333;0.8323;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
RandomForestClassifier;0.8195;0.8295;0.8195;0.8205;0.8406;0.8413;0.8406;0.8401;0.8167;0.8367;0.8167;0.8208;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 662};RandomForestClassifier(n_estimators=10, random_state=662)
RandomForestClassifier;0.8405;0.8531;0.8405;0.8414;0.8406;0.8428;0.8406;0.8384;0.8167;0.8305;0.8167;0.8194;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
RandomForestClassifier;0.8405;0.8479;0.8405;0.841;0.8696;0.8681;0.8696;0.8686;0.8167;0.8319;0.8167;0.8187;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 503};RandomForestClassifier(n_estimators=10, random_state=503)
SVC;0.6778;0.7118;0.6778;0.6742;0.7391;0.746;0.7391;0.7418;0.8167;0.8234;0.8167;0.8178;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
RandomForestClassifier;0.8536;0.8629;0.8536;0.8536;0.8551;0.8551;0.8551;0.8551;0.8167;0.8246;0.8167;0.8174;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 503};RandomForestClassifier(n_estimators=10, random_state=503)
KNeighborsClassifier;0.773;0.7879;0.773;0.7746;0.8406;0.8516;0.8406;0.8415;0.8167;0.8512;0.8167;0.8155;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.6586;0.7091;0.6586;0.6573;0.8551;0.8747;0.8551;0.8584;0.8;0.8182;0.8;0.8033;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
KNeighborsClassifier;0.7231;0.7392;0.7231;0.725;0.8696;0.8767;0.8696;0.8693;0.8;0.8093;0.8;0.8017;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8326;0.8381;0.8326;0.8327;0.8986;0.9071;0.8986;0.8981;0.8;0.8128;0.8;0.8015;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 662};RandomForestClassifier(n_estimators=20, random_state=662)
KNeighborsClassifier;0.7617;0.7753;0.7617;0.7631;0.7971;0.8132;0.7971;0.799;0.8;0.8402;0.8;0.8;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8326;0.8383;0.8326;0.8323;0.7536;0.7988;0.7536;0.7564;0.8;0.8124;0.8;0.7994;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
KNeighborsClassifier;0.7648;0.781;0.7648;0.7666;0.7536;0.7706;0.7536;0.7582;0.8;0.8194;0.8;0.798;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7262;0.7413;0.7262;0.7273;0.7971;0.805;0.7971;0.8;0.8;0.7988;0.8;0.797;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
DecisionTreeClassifier;0.8228;0.8276;0.8228;0.8223;0.7971;0.8069;0.7971;0.7942;0.8;0.8029;0.8;0.797;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
MLPClassifier;0.7423;0.751;0.7423;0.7414;0.7826;0.7906;0.7826;0.7847;0.8;0.7969;0.8;0.7955;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
KNeighborsClassifier;0.7616;0.7738;0.7616;0.7618;0.8551;0.855;0.8551;0.8531;0.7833;0.7944;0.7833;0.7868;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6875;0.7253;0.6875;0.685;0.7681;0.7892;0.7681;0.7726;0.7833;0.7963;0.7833;0.7863;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
KNeighborsClassifier;0.7455;0.7597;0.7455;0.7476;0.8261;0.8334;0.8261;0.8274;0.7833;0.797;0.7833;0.7862;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7585;0.7747;0.7585;0.7582;0.8261;0.8502;0.8261;0.8249;0.7833;0.797;0.7833;0.7862;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7438;0.7632;0.7438;0.7444;0.8406;0.8522;0.8406;0.8381;0.7833;0.8044;0.7833;0.7852;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6876;0.7136;0.6876;0.6863;0.7536;0.7736;0.7536;0.7579;0.7833;0.7887;0.7833;0.7851;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
SVC;0.6956;0.723;0.6956;0.6912;0.6812;0.706;0.6812;0.6861;0.7833;0.7884;0.7833;0.7846;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
DecisionTreeClassifier;0.8083;0.8187;0.8083;0.8084;0.8986;0.908;0.8986;0.8997;0.7833;0.7905;0.7833;0.7844;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8277;0.8359;0.8277;0.8283;0.7826;0.7937;0.7826;0.7855;0.7833;0.7863;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
DecisionTreeClassifier;0.826;0.8311;0.826;0.8264;0.8696;0.8701;0.8696;0.8695;0.7833;0.7917;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
DecisionTreeClassifier;0.8308;0.8362;0.8308;0.8291;0.8116;0.813;0.8116;0.8048;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8196;0.8251;0.8196;0.8188;0.8696;0.8877;0.8696;0.8715;0.7833;0.7873;0.7833;0.7831;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
DecisionTreeClassifier;0.818;0.8232;0.818;0.8174;0.9275;0.9342;0.9275;0.9282;0.7833;0.7854;0.7833;0.783;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.8341;0.8428;0.8341;0.8345;0.8261;0.8578;0.8261;0.8206;0.7833;0.807;0.7833;0.7824;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 191};RandomForestClassifier(n_estimators=10, random_state=191)
RandomForestClassifier;0.8374;0.8434;0.8374;0.8374;0.9275;0.9296;0.9275;0.9274;0.7833;0.807;0.7833;0.7824;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 662};RandomForestClassifier(n_estimators=10, random_state=662)
RandomForestClassifier;0.8486;0.8582;0.8486;0.8486;0.8116;0.8113;0.8116;0.8085;0.7833;0.7838;0.7833;0.7822;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 503};RandomForestClassifier(n_estimators=10, random_state=503)
KNeighborsClassifier;0.7648;0.7727;0.7648;0.7665;0.7536;0.7654;0.7536;0.757;0.7833;0.7922;0.7833;0.7807;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7296;0.7437;0.7296;0.7298;0.7391;0.7347;0.7391;0.7341;0.7833;0.7801;0.7833;0.7805;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
MLPClassifier;0.7263;0.732;0.7263;0.7271;0.7971;0.8;0.7971;0.7983;0.7833;0.7801;0.7833;0.7805;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
SVC;0.6989;0.7267;0.6989;0.698;0.6957;0.7233;0.6957;0.7013;0.7667;0.7852;0.7667;0.7705;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
RandomForestClassifier;0.8357;0.8438;0.8357;0.8363;0.8986;0.8997;0.8986;0.8988;0.7667;0.7911;0.7667;0.7704;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
RandomForestClassifier;0.8405;0.8462;0.8405;0.8407;0.8116;0.8121;0.8116;0.8108;0.7667;0.7806;0.7667;0.7684;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 503};RandomForestClassifier(n_estimators=20, random_state=503)
SVC;0.6924;0.7295;0.6924;0.6925;0.7681;0.7651;0.7681;0.7622;0.7667;0.7696;0.7667;0.7678;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
KNeighborsClassifier;0.7392;0.7586;0.7392;0.7416;0.8841;0.896;0.8841;0.8852;0.7667;0.7875;0.7667;0.7675;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8099;0.8198;0.8099;0.809;0.8116;0.8195;0.8116;0.8139;0.7667;0.7698;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
KNeighborsClassifier;0.76;0.7724;0.76;0.7595;0.7971;0.804;0.7971;0.7983;0.7667;0.7902;0.7667;0.7669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7472;0.759;0.7472;0.7483;0.8406;0.8424;0.8406;0.8407;0.7667;0.7902;0.7667;0.7669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7503;0.7674;0.7503;0.7505;0.8261;0.8331;0.8261;0.8279;0.7667;0.7902;0.7667;0.7669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7682;0.7869;0.7682;0.7689;0.7391;0.7549;0.7391;0.7434;0.7667;0.7902;0.7667;0.7669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7794;0.7934;0.7794;0.7793;0.7536;0.7839;0.7536;0.7583;0.7667;0.7902;0.7667;0.7669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7778;0.7978;0.7778;0.7801;0.8551;0.8651;0.8551;0.8568;0.7667;0.7902;0.7667;0.7669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.752;0.7683;0.752;0.7537;0.7826;0.8026;0.7826;0.7852;0.7667;0.7902;0.7667;0.7669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8164;0.8229;0.8164;0.8162;0.7536;0.7713;0.7536;0.754;0.7667;0.7671;0.7667;0.7666;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.8421;0.8487;0.8421;0.8425;0.8406;0.8423;0.8406;0.8412;0.7667;0.7878;0.7667;0.7665;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
RandomForestClassifier;0.8358;0.8422;0.8358;0.8358;0.8551;0.8874;0.8551;0.858;0.7667;0.7881;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 191};RandomForestClassifier(n_estimators=10, random_state=191)
DecisionTreeClassifier;0.8212;0.8283;0.8212;0.8206;0.7971;0.8199;0.7971;0.802;0.7667;0.7782;0.7667;0.7661;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
SVC;0.6958;0.7281;0.6958;0.6953;0.7826;0.7924;0.7826;0.7794;0.7667;0.7654;0.7667;0.7657;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
KNeighborsClassifier;0.7519;0.7639;0.7519;0.7522;0.7391;0.7493;0.7391;0.7421;0.7667;0.7783;0.7667;0.7655;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7602;0.7757;0.7602;0.7624;0.8116;0.8309;0.8116;0.8146;0.7667;0.7726;0.7667;0.7652;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8035;0.8094;0.8035;0.8027;0.8261;0.8364;0.8261;0.8251;0.7667;0.795;0.7667;0.7644;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
MLPClassifier;0.7248;0.7365;0.7248;0.7254;0.7971;0.8068;0.7971;0.7984;0.7667;0.764;0.7667;0.7643;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
MLPClassifier;0.7197;0.7292;0.7197;0.7207;0.8841;0.8839;0.8841;0.8837;0.7667;0.764;0.7667;0.7643;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
MLPClassifier;0.7232;0.7319;0.7232;0.7218;0.7681;0.7703;0.7681;0.769;0.7667;0.7648;0.7667;0.7636;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
SVC;0.6794;0.7156;0.6794;0.6764;0.8696;0.8701;0.8696;0.8687;0.7667;0.765;0.7667;0.7631;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
MLPClassifier;0.7246;0.7384;0.7246;0.7268;0.8116;0.8108;0.8116;0.809;0.7667;0.762;0.7667;0.7621;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7312;0.7353;0.7312;0.7316;0.8261;0.8265;0.8261;0.826;0.7667;0.762;0.7667;0.7621;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7278;0.7327;0.7278;0.727;0.8261;0.8268;0.8261;0.8224;0.7667;0.762;0.7667;0.7621;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
MLPClassifier;0.7247;0.7337;0.7247;0.7254;0.8116;0.8138;0.8116;0.8125;0.7667;0.7648;0.7667;0.7615;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
MLPClassifier;0.7294;0.7442;0.7294;0.7292;0.8406;0.8532;0.8406;0.8422;0.7667;0.7648;0.7667;0.7615;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
MLPClassifier;0.7407;0.75;0.7407;0.7414;0.8261;0.835;0.8261;0.8267;0.7667;0.7648;0.7667;0.7615;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
MLPClassifier;0.7327;0.7397;0.7327;0.7323;0.7971;0.8211;0.7971;0.8015;0.7667;0.7648;0.7667;0.7615;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
MLPClassifier;0.7102;0.7191;0.7102;0.7089;0.7681;0.7829;0.7681;0.7707;0.7667;0.7648;0.7667;0.7615;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
SVC;0.6811;0.716;0.6811;0.6791;0.7681;0.8147;0.7681;0.7716;0.75;0.7656;0.75;0.754;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
RandomForestClassifier;0.8341;0.8454;0.8341;0.8347;0.8261;0.8377;0.8261;0.8291;0.75;0.7703;0.75;0.7528;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
SVC;0.6923;0.7209;0.6923;0.689;0.7101;0.7119;0.7101;0.7068;0.75;0.7602;0.75;0.7527;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
SVC;0.6941;0.7278;0.6941;0.6942;0.8261;0.8369;0.8261;0.8257;0.75;0.7602;0.75;0.7527;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
SVC;0.6893;0.7168;0.6893;0.6887;0.7681;0.7841;0.7681;0.7719;0.75;0.763;0.75;0.752;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
RandomForestClassifier;0.8454;0.8535;0.8454;0.8463;0.7681;0.7825;0.7681;0.7712;0.75;0.7742;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 662};RandomForestClassifier(n_estimators=10, random_state=662)
RandomForestClassifier;0.8325;0.8409;0.8325;0.8334;0.8406;0.8646;0.8406;0.8424;0.75;0.7742;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 662};RandomForestClassifier(n_estimators=20, random_state=662)
KNeighborsClassifier;0.7504;0.7717;0.7504;0.7539;0.8406;0.8456;0.8406;0.8399;0.75;0.7775;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.686;0.7155;0.686;0.6839;0.7971;0.7994;0.7971;0.7964;0.75;0.7554;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
SVC;0.673;0.7152;0.673;0.6738;0.8116;0.8256;0.8116;0.813;0.75;0.7614;0.75;0.7513;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
RandomForestClassifier;0.8211;0.8292;0.8211;0.8196;0.8841;0.8879;0.8841;0.8852;0.75;0.7729;0.75;0.7506;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 191};RandomForestClassifier(n_estimators=10, random_state=191)
SVC;0.6891;0.7279;0.6891;0.6879;0.6812;0.689;0.6812;0.6803;0.75;0.7572;0.75;0.7505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
RandomForestClassifier;0.8517;0.8616;0.8517;0.8533;0.7536;0.7542;0.7536;0.7522;0.75;0.7535;0.75;0.7505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 662};RandomForestClassifier(n_estimators=20, random_state=662)
KNeighborsClassifier;0.7634;0.7783;0.7634;0.7653;0.7391;0.7467;0.7391;0.7411;0.75;0.77;0.75;0.7504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7665;0.7851;0.7665;0.7689;0.8551;0.8574;0.8551;0.856;0.75;0.77;0.75;0.7504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.847;0.8552;0.847;0.8461;0.8406;0.871;0.8406;0.842;0.75;0.7513;0.75;0.7503;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8244;0.8307;0.8244;0.8227;0.7971;0.8595;0.7971;0.7997;0.75;0.7564;0.75;0.7503;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
RandomForestClassifier;0.818;0.8247;0.818;0.818;0.8986;0.9018;0.8986;0.899;0.75;0.7842;0.75;0.7502;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 503};RandomForestClassifier(n_estimators=20, random_state=503)
KNeighborsClassifier;0.739;0.756;0.739;0.7398;0.8551;0.861;0.8551;0.8563;0.75;0.7651;0.75;0.7502;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7455;0.7539;0.7455;0.7464;0.7101;0.7187;0.7101;0.7111;0.75;0.75;0.75;0.75;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
KNeighborsClassifier;0.76;0.777;0.76;0.7601;0.8696;0.8691;0.8696;0.8685;0.75;0.7639;0.75;0.75;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8309;0.8373;0.8309;0.8315;0.8841;0.8885;0.8841;0.8852;0.75;0.7632;0.75;0.7496;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 662};RandomForestClassifier(n_estimators=10, random_state=662)
DecisionTreeClassifier;0.8214;0.8271;0.8214;0.8216;0.8986;0.9056;0.8986;0.9002;0.75;0.7517;0.75;0.7496;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
RandomForestClassifier;0.8245;0.8329;0.8245;0.8253;0.7826;0.8101;0.7826;0.7833;0.75;0.7656;0.75;0.7495;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 503};RandomForestClassifier(n_estimators=10, random_state=503)
DecisionTreeClassifier;0.8179;0.8241;0.8179;0.8169;0.7971;0.806;0.7971;0.7983;0.75;0.7496;0.75;0.7495;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.8424;0.8462;0.8424;0.8421;0.8261;0.8254;0.8261;0.825;0.75;0.7763;0.75;0.7484;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 503};RandomForestClassifier(n_estimators=20, random_state=503)
RandomForestClassifier;0.8276;0.8323;0.8276;0.8272;0.8116;0.8449;0.8116;0.8153;0.75;0.7763;0.75;0.7484;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 662};RandomForestClassifier(n_estimators=20, random_state=662)
DecisionTreeClassifier;0.8308;0.8397;0.8308;0.8308;0.8116;0.8168;0.8116;0.8109;0.75;0.7553;0.75;0.7482;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
KNeighborsClassifier;0.7503;0.7634;0.7503;0.7523;0.8261;0.8258;0.8261;0.8184;0.75;0.7499;0.75;0.7476;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.7312;0.7384;0.7312;0.7309;0.8696;0.8797;0.8696;0.8661;0.75;0.746;0.75;0.7471;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
MLPClassifier;0.7359;0.7437;0.7359;0.736;0.7536;0.7544;0.7536;0.7524;0.75;0.7443;0.75;0.7434;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7344;0.7468;0.7344;0.7347;0.8116;0.8299;0.8116;0.8156;0.75;0.7443;0.75;0.7434;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7506;0.7596;0.7506;0.7512;0.7826;0.7915;0.7826;0.7855;0.75;0.7443;0.75;0.7434;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7392;0.7432;0.7392;0.7384;0.8841;0.8829;0.8841;0.8827;0.75;0.7443;0.75;0.7434;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7327;0.7435;0.7327;0.732;0.7681;0.7614;0.7681;0.7619;0.75;0.7443;0.75;0.7434;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7294;0.7388;0.7294;0.7293;0.8696;0.8796;0.8696;0.872;0.75;0.7443;0.75;0.7434;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7198;0.7297;0.7198;0.7188;0.8116;0.8146;0.8116;0.812;0.75;0.7477;0.75;0.7426;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
SVC;0.7054;0.7494;0.7054;0.7066;0.6957;0.735;0.6957;0.7008;0.7333;0.7637;0.7333;0.7385;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
SVC;0.6795;0.7096;0.6795;0.6795;0.8261;0.85;0.8261;0.8262;0.7333;0.7534;0.7333;0.7381;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
SVC;0.6715;0.7032;0.6715;0.672;0.7681;0.7721;0.7681;0.7694;0.7333;0.7548;0.7333;0.7379;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
SVC;0.678;0.7112;0.678;0.6774;0.8696;0.8841;0.8696;0.8721;0.7333;0.7548;0.7333;0.7379;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
MLPClassifier;0.7212;0.7309;0.7212;0.7197;0.7971;0.7923;0.7971;0.7937;0.75;0.7444;0.75;0.7379;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
SVC;0.6651;0.7023;0.6651;0.6643;0.8116;0.839;0.8116;0.8145;0.7333;0.7485;0.7333;0.7365;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
RandomForestClassifier;0.8389;0.8486;0.8389;0.8392;0.8116;0.8323;0.8116;0.8166;0.7333;0.7603;0.7333;0.7361;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 503};RandomForestClassifier(n_estimators=20, random_state=503)
DecisionTreeClassifier;0.8373;0.8448;0.8373;0.8369;0.7681;0.8019;0.7681;0.772;0.7333;0.7572;0.7333;0.7359;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.8341;0.8427;0.8341;0.8352;0.8261;0.8261;0.8261;0.8261;0.7333;0.761;0.7333;0.7358;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
SVC;0.6972;0.7317;0.6972;0.6938;0.6812;0.6928;0.6812;0.6844;0.7333;0.7462;0.7333;0.7354;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
RandomForestClassifier;0.8438;0.85;0.8438;0.8427;0.8116;0.8179;0.8116;0.813;0.7333;0.7458;0.7333;0.735;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
RandomForestClassifier;0.8407;0.8473;0.8407;0.8412;0.8406;0.8406;0.8406;0.8406;0.7333;0.7458;0.7333;0.735;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 662};RandomForestClassifier(n_estimators=10, random_state=662)
KNeighborsClassifier;0.7471;0.7634;0.7471;0.7495;0.8116;0.8173;0.8116;0.812;0.7333;0.7522;0.7333;0.7347;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7697;0.7887;0.7697;0.7713;0.7826;0.8045;0.7826;0.7871;0.7333;0.7458;0.7333;0.7347;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7489;0.7635;0.7489;0.751;0.8696;0.8722;0.8696;0.8689;0.7333;0.7522;0.7333;0.7347;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8373;0.8447;0.8373;0.8376;0.8116;0.8133;0.8116;0.8114;0.7333;0.7354;0.7333;0.7334;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
DecisionTreeClassifier;0.8166;0.8209;0.8166;0.8154;0.8841;0.8879;0.8841;0.8852;0.7333;0.7337;0.7333;0.7332;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
KNeighborsClassifier;0.7778;0.7891;0.7778;0.7787;0.8116;0.8278;0.8116;0.8153;0.7333;0.7405;0.7333;0.7328;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8229;0.8288;0.8229;0.8225;0.8261;0.825;0.8261;0.8245;0.7333;0.7329;0.7333;0.7328;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.834;0.8413;0.834;0.8351;0.7971;0.8389;0.7971;0.799;0.7333;0.7637;0.7333;0.7327;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8181;0.8206;0.8181;0.8174;0.7101;0.7309;0.7101;0.7101;0.7333;0.7358;0.7333;0.7325;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
KNeighborsClassifier;0.7488;0.7727;0.7488;0.7502;0.8551;0.8726;0.8551;0.855;0.7333;0.7448;0.7333;0.7323;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8503;0.8572;0.8503;0.8499;0.7681;0.7789;0.7681;0.7715;0.7333;0.7387;0.7333;0.7321;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 191};RandomForestClassifier(n_estimators=10, random_state=191)
DecisionTreeClassifier;0.8243;0.8281;0.8243;0.8247;0.7101;0.7661;0.7101;0.7174;0.7333;0.7409;0.7333;0.73;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
SVC;0.686;0.7214;0.686;0.6834;0.7101;0.7214;0.7101;0.7107;0.7333;0.7325;0.7333;0.7293;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
MLPClassifier;0.7278;0.7349;0.7278;0.7272;0.8261;0.8246;0.8261;0.8251;0.7333;0.728;0.7333;0.7286;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 465, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=465)
MLPClassifier;0.7342;0.7438;0.7342;0.7348;0.8696;0.8689;0.8696;0.8681;0.7333;0.7255;0.7333;0.7235;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
MLPClassifier;0.7438;0.7504;0.7438;0.7438;0.7101;0.7063;0.7101;0.7076;0.7333;0.7255;0.7333;0.7235;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 746, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=746)
MLPClassifier;0.7133;0.7168;0.7133;0.7115;0.8406;0.8554;0.8406;0.8285;0.7333;0.7305;0.7333;0.7228;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
SVC;0.6924;0.7375;0.6924;0.6932;0.7391;0.7432;0.7391;0.7381;0.7167;0.7432;0.7167;0.7223;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
RandomForestClassifier;0.8406;0.8489;0.8406;0.8407;0.8551;0.8606;0.8551;0.8568;0.7167;0.7373;0.7167;0.7199;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 503};RandomForestClassifier(n_estimators=20, random_state=503)
SVC;0.6908;0.7335;0.6908;0.6924;0.7826;0.7844;0.7826;0.7812;0.7167;0.726;0.7167;0.7183;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 960};SVC(C=10, random_state=960)
SVC;0.6941;0.7201;0.6941;0.6914;0.7246;0.7371;0.7246;0.721;0.7167;0.726;0.7167;0.7183;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
DecisionTreeClassifier;0.8261;0.8318;0.8261;0.826;0.7826;0.7996;0.7826;0.7859;0.7167;0.7352;0.7167;0.7182;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
RandomForestClassifier;0.8599;0.8668;0.8599;0.8604;0.7826;0.8132;0.7826;0.7869;0.7167;0.7397;0.7167;0.7177;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 503};RandomForestClassifier(n_estimators=10, random_state=503)
SVC;0.7005;0.745;0.7005;0.6998;0.7826;0.7843;0.7826;0.7824;0.7167;0.7171;0.7167;0.7166;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
RandomForestClassifier;0.8389;0.8454;0.8389;0.8393;0.7826;0.8019;0.7826;0.7857;0.7167;0.7371;0.7167;0.7162;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 662};RandomForestClassifier(n_estimators=10, random_state=662)
SVC;0.6941;0.7241;0.6941;0.6933;0.6957;0.7111;0.6957;0.6996;0.7167;0.7163;0.7167;0.7145;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
SVC;0.6893;0.7234;0.6893;0.6885;0.7391;0.7432;0.7391;0.7381;0.7167;0.7176;0.7167;0.7137;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 407};SVC(C=10, random_state=407)
MLPClassifier;0.7504;0.7582;0.7504;0.7497;0.7101;0.7105;0.7101;0.7101;0.7167;0.7083;0.7167;0.709;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 7, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=7)
LogisticRegression;0.6117;0.6222;0.6117;0.6119;0.5942;0.6275;0.5942;0.6016;0.7;0.7258;0.7;0.7053;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.5973;0.6014;0.5973;0.5961;0.6812;0.6947;0.6812;0.6845;0.7;0.7258;0.7;0.7053;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.615;0.6307;0.615;0.6169;0.6232;0.6624;0.6232;0.6202;0.7;0.7258;0.7;0.7053;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
SVC;0.6892;0.7308;0.6892;0.689;0.6522;0.675;0.6522;0.6512;0.7;0.714;0.7;0.7024;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 768};SVC(C=10, random_state=768)
DecisionTreeClassifier;0.8197;0.8245;0.8197;0.8196;0.8696;0.8936;0.8696;0.8725;0.7;0.7221;0.7;0.7017;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8214;0.8223;0.8214;0.8191;0.8116;0.8101;0.8116;0.8106;0.7;0.7044;0.7;0.7;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8373;0.8402;0.8373;0.8379;0.7681;0.7739;0.7681;0.7692;0.7;0.7097;0.7;0.6998;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
LogisticRegression;0.6007;0.608;0.6007;0.6003;0.6667;0.669;0.6667;0.6653;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6264;0.6347;0.6264;0.6267;0.5362;0.5659;0.5362;0.5398;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6166;0.6302;0.6166;0.616;0.5797;0.6329;0.5797;0.5782;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6214;0.6335;0.6214;0.622;0.5362;0.5422;0.5362;0.534;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.6102;0.6192;0.6102;0.6094;0.5942;0.624;0.5942;0.593;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6166;0.6228;0.6166;0.6161;0.6087;0.6021;0.6087;0.6032;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6199;0.6262;0.6199;0.6193;0.5507;0.6061;0.5507;0.5482;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6103;0.6227;0.6103;0.6076;0.6377;0.6392;0.6377;0.6382;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6119;0.622;0.6119;0.6114;0.6232;0.6493;0.6232;0.6249;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.586;0.5907;0.586;0.585;0.7681;0.782;0.7681;0.7701;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.6168;0.6279;0.6168;0.6168;0.5797;0.611;0.5797;0.5829;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6151;0.6256;0.6151;0.6156;0.6087;0.6118;0.6087;0.6095;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.5974;0.6073;0.5974;0.5969;0.7101;0.7143;0.7101;0.7108;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.5942;0.6015;0.5942;0.5921;0.6232;0.6261;0.6232;0.6224;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6264;0.6384;0.6264;0.6256;0.5507;0.5582;0.5507;0.5483;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.5911;0.5972;0.5911;0.5903;0.6812;0.6905;0.6812;0.6827;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6135;0.6247;0.6135;0.6122;0.5652;0.5841;0.5652;0.5682;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6087;0.6153;0.6087;0.6075;0.6377;0.641;0.6377;0.6385;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.6119;0.6265;0.6119;0.6096;0.5362;0.5803;0.5362;0.54;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.6121;0.6212;0.6121;0.6118;0.5797;0.6025;0.5797;0.5796;0.6833;0.711;0.6833;0.6901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.5991;0.6074;0.5991;0.5975;0.7101;0.7137;0.7101;0.711;0.6667;0.6965;0.6667;0.6746;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.6119;0.6176;0.6119;0.6107;0.6087;0.5992;0.6087;0.6004;0.6667;0.6965;0.6667;0.6746;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6039;0.6117;0.6039;0.6046;0.6957;0.6933;0.6957;0.693;0.6667;0.6965;0.6667;0.6746;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6183;0.6316;0.6183;0.6193;0.5507;0.5508;0.5507;0.5474;0.6667;0.6965;0.6667;0.6746;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
DecisionTreeClassifier;0.8229;0.8269;0.8229;0.8225;0.7826;0.7844;0.7826;0.7812;0.6667;0.6774;0.6667;0.6646;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
LogisticRegression;0.6103;0.6188;0.6103;0.6099;0.6522;0.6505;0.6522;0.6488;0.6333;0.6591;0.6333;0.6396;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
LogisticRegression;0.6103;0.6192;0.6103;0.6104;0.6667;0.6667;0.6667;0.6667;0.6333;0.6401;0.6333;0.6319;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 717, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=717)"
LogisticRegression;0.6135;0.6217;0.6135;0.6132;0.6087;0.6183;0.6087;0.6104;0.6;0.6019;0.6;0.5981;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 317, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=317)"
