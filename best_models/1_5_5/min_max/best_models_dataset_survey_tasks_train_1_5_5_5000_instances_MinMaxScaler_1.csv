Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9796;0.9796;0.9796;0.9796;0.9752;0.9752;0.9752;0.9752;0.9667;0.9697;0.9667;0.9666;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9786;0.9786;0.9786;0.9786;0.9792;0.9792;0.9792;0.9792;0.95;0.9565;0.95;0.9507;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9791;0.9792;0.9791;0.9791;0.9752;0.9752;0.9752;0.9751;0.95;0.9565;0.95;0.9507;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9789;0.9789;0.9789;0.9789;0.9812;0.9812;0.9812;0.9812;0.95;0.9565;0.95;0.9507;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9782;0.9783;0.9782;0.9782;0.9819;0.9819;0.9819;0.9819;0.95;0.9565;0.95;0.9507;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
RandomForestClassifier;0.9796;0.9796;0.9796;0.9796;0.9758;0.976;0.9758;0.9758;0.95;0.9565;0.95;0.9507;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
RandomForestClassifier;0.9793;0.9794;0.9793;0.9793;0.9785;0.9785;0.9785;0.9785;0.95;0.9565;0.95;0.9507;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9786;0.9787;0.9786;0.9786;0.9846;0.9846;0.9846;0.9846;0.95;0.953;0.95;0.9499;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9785;0.9786;0.9785;0.9785;0.9805;0.9805;0.9805;0.9805;0.95;0.9499;0.95;0.9496;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9791;0.9791;0.9791;0.979;0.9799;0.9799;0.9799;0.9799;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9787;0.9787;0.9787;0.9787;0.9698;0.97;0.9698;0.9698;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.978;0.9781;0.978;0.978;0.9832;0.9832;0.9832;0.9832;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
RandomForestClassifier;0.9783;0.9783;0.9783;0.9783;0.9819;0.9819;0.9819;0.9819;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9788;0.9788;0.9788;0.9788;0.9819;0.9819;0.9819;0.9819;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
KNeighborsClassifier;0.9659;0.966;0.9659;0.9659;0.9718;0.9718;0.9718;0.9718;0.9333;0.9444;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9644;0.9646;0.9644;0.9644;0.9698;0.9698;0.9698;0.9698;0.9333;0.9444;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9782;0.9783;0.9782;0.9782;0.9785;0.9786;0.9785;0.9785;0.9333;0.9349;0.9333;0.9337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9786;0.9786;0.9786;0.9786;0.9812;0.9812;0.9812;0.9812;0.9333;0.939;0.9333;0.9336;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9787;0.9787;0.9787;0.9787;0.9759;0.9759;0.9759;0.9758;0.9333;0.939;0.9333;0.9336;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
RandomForestClassifier;0.9785;0.9786;0.9785;0.9785;0.9819;0.9819;0.9819;0.9819;0.9333;0.939;0.9333;0.9336;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
RandomForestClassifier;0.9801;0.9801;0.9801;0.9801;0.9792;0.9792;0.9792;0.9792;0.9333;0.934;0.9333;0.9333;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9783;0.9783;0.9783;0.9783;0.9819;0.9819;0.9819;0.9819;0.9333;0.934;0.9333;0.9333;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9795;0.9795;0.9795;0.9795;0.9812;0.9812;0.9812;0.9812;0.9333;0.934;0.9333;0.9333;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
KNeighborsClassifier;0.9651;0.9653;0.9651;0.965;0.9745;0.9745;0.9745;0.9745;0.9333;0.9399;0.9333;0.9331;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9788;0.9789;0.9788;0.9788;0.9785;0.9786;0.9785;0.9786;0.9333;0.9346;0.9333;0.9328;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
RandomForestClassifier;0.9803;0.9804;0.9803;0.9803;0.9805;0.9806;0.9805;0.9805;0.9333;0.9346;0.9333;0.9328;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
KNeighborsClassifier;0.9644;0.9645;0.9644;0.9643;0.9785;0.9787;0.9785;0.9785;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9656;0.9658;0.9656;0.9656;0.9745;0.9745;0.9745;0.9745;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.967;0.9671;0.967;0.9669;0.9698;0.9698;0.9698;0.9698;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9641;0.9642;0.9641;0.964;0.9785;0.9785;0.9785;0.9785;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9631;0.9633;0.9631;0.963;0.9873;0.9873;0.9873;0.9872;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9648;0.965;0.9648;0.9648;0.9772;0.9772;0.9772;0.9771;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9653;0.9655;0.9653;0.9653;0.9738;0.9738;0.9738;0.9738;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9647;0.9649;0.9647;0.9647;0.9879;0.9879;0.9879;0.9879;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9641;0.9643;0.9641;0.9641;0.9758;0.9759;0.9758;0.9758;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9649;0.965;0.9649;0.9648;0.9765;0.9766;0.9765;0.9765;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.965;0.9651;0.965;0.9649;0.9779;0.9779;0.9779;0.9778;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9673;0.9674;0.9673;0.9672;0.9732;0.9732;0.9732;0.9732;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9646;0.9647;0.9646;0.9645;0.9785;0.9786;0.9785;0.9785;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9654;0.9656;0.9654;0.9653;0.9779;0.9779;0.9779;0.9778;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9658;0.966;0.9658;0.9657;0.9792;0.9792;0.9792;0.9792;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9659;0.966;0.9659;0.9658;0.9819;0.9819;0.9819;0.9819;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9639;0.9641;0.9639;0.9639;0.9738;0.9739;0.9738;0.9738;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9661;0.9662;0.9661;0.966;0.9711;0.9714;0.9711;0.9711;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9792;0.9792;0.9792;0.9792;0.9765;0.9765;0.9765;0.9765;0.9167;0.9206;0.9167;0.9174;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9799;0.9799;0.9799;0.9799;0.9812;0.9813;0.9812;0.9812;0.9167;0.9212;0.9167;0.9174;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9787;0.9787;0.9787;0.9787;0.9819;0.9819;0.9819;0.9819;0.9167;0.9212;0.9167;0.9174;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.9799;0.98;0.9799;0.9799;0.9758;0.9761;0.9758;0.9759;0.9167;0.9212;0.9167;0.9174;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
MLPClassifier;0.8872;0.8879;0.8872;0.887;0.945;0.9456;0.945;0.9451;0.9167;0.9259;0.9167;0.9171;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8885;0.8896;0.8885;0.8881;0.9221;0.9221;0.9221;0.9221;0.9167;0.9259;0.9167;0.9171;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
RandomForestClassifier;0.9785;0.9785;0.9785;0.9784;0.9718;0.9718;0.9718;0.9718;0.9167;0.9174;0.9167;0.9166;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
RandomForestClassifier;0.98;0.98;0.98;0.98;0.9691;0.9691;0.9691;0.9691;0.9167;0.9174;0.9167;0.9166;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 703};RandomForestClassifier(n_estimators=20, random_state=703)
RandomForestClassifier;0.9779;0.9779;0.9779;0.9779;0.9779;0.978;0.9779;0.9779;0.9167;0.9174;0.9167;0.9166;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 411};RandomForestClassifier(n_estimators=20, random_state=411)
KNeighborsClassifier;0.9673;0.9675;0.9673;0.9673;0.9745;0.9746;0.9745;0.9745;0.9167;0.9194;0.9167;0.9165;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9646;0.9647;0.9646;0.9645;0.9758;0.9758;0.9758;0.9758;0.9167;0.9194;0.9167;0.9165;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9663;0.9665;0.9663;0.9663;0.9792;0.9792;0.9792;0.9792;0.9167;0.9194;0.9167;0.9165;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9645;0.9647;0.9645;0.9644;0.9765;0.9765;0.9765;0.9765;0.9167;0.9194;0.9167;0.9165;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9643;0.9644;0.9643;0.9642;0.9732;0.9731;0.9732;0.9731;0.9167;0.9194;0.9167;0.9165;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9642;0.9643;0.9642;0.9642;0.9812;0.9812;0.9812;0.9812;0.9167;0.9194;0.9167;0.9165;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8939;0.8945;0.8939;0.8937;0.9262;0.9271;0.9262;0.9263;0.9;0.9048;0.9;0.9012;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
KNeighborsClassifier;0.9661;0.9662;0.9661;0.966;0.9799;0.98;0.9799;0.9798;0.9;0.9069;0.9;0.901;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8888;0.8895;0.8888;0.8884;0.9161;0.9169;0.9161;0.9164;0.9;0.9069;0.9;0.901;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
KNeighborsClassifier;0.965;0.9651;0.965;0.9649;0.9785;0.9786;0.9785;0.9785;0.9;0.9069;0.9;0.901;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9665;0.9666;0.9665;0.9665;0.9296;0.9328;0.9296;0.9295;0.9;0.9076;0.9;0.901;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
MLPClassifier;0.8843;0.8847;0.8843;0.884;0.9376;0.9379;0.9376;0.9374;0.9;0.9015;0.9;0.9004;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
MLPClassifier;0.8853;0.886;0.8853;0.8848;0.9282;0.9286;0.9282;0.9278;0.9;0.9;0.9;0.9;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8877;0.8877;0.8877;0.8873;0.9242;0.9253;0.9242;0.9236;0.9;0.9;0.9;0.9;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
MLPClassifier;0.8945;0.8954;0.8945;0.8942;0.9262;0.9263;0.9262;0.926;0.9;0.9;0.9;0.9;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
KNeighborsClassifier;0.9644;0.9646;0.9644;0.9644;0.9745;0.9745;0.9745;0.9745;0.9;0.9019;0.9;0.8999;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8829;0.8841;0.8829;0.8824;0.9208;0.9214;0.9208;0.9206;0.9;0.9019;0.9;0.8999;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8871;0.8878;0.8871;0.887;0.9201;0.9205;0.9201;0.92;0.9;0.9019;0.9;0.8999;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8849;0.8856;0.8849;0.8845;0.9268;0.9267;0.9268;0.9267;0.9;0.9019;0.9;0.8999;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8966;0.8968;0.8966;0.8965;0.9221;0.9269;0.9221;0.9217;0.9;0.9021;0.9;0.8999;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8915;0.8919;0.8915;0.8911;0.9087;0.9083;0.9087;0.9083;0.9;0.9027;0.9;0.8998;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
SVC;0.8566;0.8585;0.8566;0.8561;0.9;0.8997;0.9;0.8998;0.9;0.9027;0.9;0.8998;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.8572;0.8589;0.8572;0.8567;0.9054;0.9049;0.9054;0.905;0.9;0.9027;0.9;0.8998;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
MLPClassifier;0.8894;0.8898;0.8894;0.8891;0.9295;0.9294;0.9295;0.9294;0.9;0.9027;0.9;0.8998;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
MLPClassifier;0.8921;0.8926;0.8921;0.8917;0.9275;0.9285;0.9275;0.9278;0.9;0.9073;0.9;0.899;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8915;0.8928;0.8915;0.8908;0.9369;0.937;0.9369;0.9368;0.9;0.9073;0.9;0.899;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8836;0.8841;0.8836;0.883;0.9356;0.9357;0.9356;0.9356;0.8833;0.8935;0.8833;0.8844;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8906;0.8915;0.8906;0.8902;0.9034;0.9046;0.9034;0.9038;0.8833;0.892;0.8833;0.8842;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8862;0.8878;0.8862;0.8855;0.9436;0.9436;0.9436;0.9435;0.8833;0.8868;0.8833;0.884;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8902;0.8908;0.8902;0.8899;0.9598;0.9597;0.9598;0.9598;0.8833;0.9022;0.8833;0.8834;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8938;0.8939;0.8938;0.8938;0.9309;0.9309;0.9309;0.9309;0.8833;0.9022;0.8833;0.8834;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8902;0.8911;0.8902;0.8899;0.9289;0.9289;0.9289;0.9289;0.8833;0.8874;0.8833;0.883;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8912;0.8917;0.8912;0.8908;0.9282;0.9291;0.9282;0.9277;0.8833;0.8874;0.8833;0.883;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8947;0.8954;0.8947;0.8944;0.9215;0.9223;0.9215;0.9214;0.8833;0.8874;0.8833;0.883;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
MLPClassifier;0.8847;0.8853;0.8847;0.8842;0.9342;0.9341;0.9342;0.9341;0.8833;0.8891;0.8833;0.8829;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
MLPClassifier;0.8923;0.893;0.8923;0.892;0.9336;0.9341;0.9336;0.9336;0.8833;0.8891;0.8833;0.8829;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
MLPClassifier;0.8882;0.8884;0.8882;0.8879;0.9256;0.9262;0.9256;0.9253;0.8833;0.8844;0.8833;0.8828;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
DecisionTreeClassifier;0.9653;0.9653;0.9653;0.9653;0.9215;0.9217;0.9215;0.9216;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9653;0.9653;0.9653;0.9653;0.9161;0.9168;0.9161;0.9163;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9656;0.9656;0.9656;0.9655;0.9242;0.9245;0.9242;0.9243;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9668;0.9669;0.9668;0.9668;0.9249;0.9254;0.9249;0.925;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9662;0.9662;0.9662;0.9662;0.9221;0.9224;0.9221;0.9222;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9644;0.9644;0.9644;0.9643;0.9289;0.9297;0.9289;0.9291;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9685;0.9685;0.9685;0.9685;0.9201;0.9204;0.9201;0.9202;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9673;0.9674;0.9673;0.9673;0.9248;0.9253;0.9248;0.9249;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9666;0.9666;0.9666;0.9666;0.9262;0.9265;0.9262;0.9263;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9656;0.9657;0.9656;0.9656;0.9295;0.9294;0.9295;0.9295;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9665;0.9666;0.9665;0.9665;0.9081;0.9088;0.9081;0.9084;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9685;0.9685;0.9685;0.9684;0.9282;0.9286;0.9282;0.9283;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9676;0.9676;0.9676;0.9676;0.9248;0.9257;0.9248;0.9251;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9665;0.9666;0.9665;0.9665;0.9443;0.9446;0.9443;0.9444;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9673;0.9673;0.9673;0.9672;0.9282;0.9285;0.9282;0.9283;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9658;0.9658;0.9658;0.9658;0.9174;0.9174;0.9174;0.9174;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9668;0.9669;0.9668;0.9668;0.9201;0.9217;0.9201;0.9203;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9676;0.9677;0.9676;0.9676;0.9302;0.9306;0.9302;0.9304;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9679;0.9679;0.9679;0.9679;0.9289;0.929;0.9289;0.9289;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9665;0.9666;0.9665;0.9665;0.9242;0.9241;0.9242;0.9241;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9658;0.9658;0.9658;0.9658;0.9228;0.9233;0.9228;0.923;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9667;0.9667;0.9667;0.9667;0.9229;0.923;0.9229;0.9229;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9664;0.9664;0.9664;0.9664;0.9228;0.924;0.9228;0.9231;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
DecisionTreeClassifier;0.9676;0.9676;0.9676;0.9676;0.9228;0.9234;0.9228;0.923;0.8667;0.8754;0.8667;0.8675;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
SVC;0.8609;0.8627;0.8609;0.8605;0.8691;0.8684;0.8691;0.8682;0.8667;0.869;0.8667;0.8674;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8572;0.8596;0.8572;0.8566;0.8772;0.8798;0.8772;0.876;0.8667;0.869;0.8667;0.8674;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8583;0.8605;0.8583;0.8577;0.8919;0.8917;0.8919;0.8918;0.8667;0.869;0.8667;0.8674;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.8564;0.8586;0.8564;0.8558;0.8806;0.8802;0.8806;0.8804;0.8667;0.869;0.8667;0.8674;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
MLPClassifier;0.8866;0.8877;0.8866;0.8861;0.9483;0.9483;0.9483;0.9483;0.8667;0.8746;0.8667;0.8674;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 61, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=61)
SVC;0.8574;0.8593;0.8574;0.8569;0.888;0.8889;0.888;0.8872;0.8667;0.869;0.8667;0.8674;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8575;0.8596;0.8575;0.857;0.896;0.8958;0.896;0.895;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8577;0.859;0.8577;0.8573;0.896;0.8955;0.896;0.8957;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8555;0.8581;0.8555;0.8548;0.8981;0.898;0.8981;0.8975;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.8571;0.8589;0.8571;0.8566;0.896;0.8955;0.896;0.8957;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8577;0.8596;0.8577;0.8572;0.8926;0.8921;0.8926;0.8923;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8568;0.8589;0.8568;0.8562;0.8893;0.8894;0.8893;0.889;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8576;0.8596;0.8576;0.857;0.8893;0.8891;0.8893;0.8889;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8589;0.8609;0.8589;0.8585;0.8826;0.8814;0.8826;0.8815;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.8572;0.8586;0.8572;0.8569;0.8879;0.8871;0.8879;0.8873;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8563;0.8583;0.8563;0.8558;0.8919;0.8922;0.8919;0.8915;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.8589;0.861;0.8589;0.8583;0.8725;0.8734;0.8725;0.8724;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.8592;0.861;0.8592;0.8586;0.8739;0.8769;0.8739;0.8731;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.8568;0.8589;0.8568;0.8562;0.886;0.8857;0.886;0.8854;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
SVC;0.857;0.8591;0.857;0.8565;0.8946;0.8942;0.8946;0.894;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8551;0.8575;0.8551;0.8545;0.904;0.9048;0.904;0.9036;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8624;0.8637;0.8624;0.8619;0.8772;0.8776;0.8772;0.8768;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8551;0.8569;0.8551;0.8547;0.9081;0.9076;0.9081;0.9074;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.856;0.8582;0.856;0.8554;0.8893;0.8903;0.8893;0.889;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8578;0.8598;0.8578;0.8572;0.8705;0.8709;0.8705;0.8701;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
SVC;0.8584;0.8607;0.8584;0.8578;0.8872;0.8871;0.8872;0.8862;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8559;0.8576;0.8559;0.8554;0.8974;0.8984;0.8974;0.8978;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 574};SVC(C=10, random_state=574)
SVC;0.8572;0.859;0.8572;0.8567;0.8893;0.8893;0.8893;0.8892;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 68};SVC(C=10, random_state=68)
MLPClassifier;0.8915;0.8917;0.8915;0.8914;0.9067;0.9074;0.9067;0.9062;0.8667;0.8677;0.8667;0.8661;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 123, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=123)
DecisionTreeClassifier;0.9673;0.9674;0.9673;0.9674;0.9315;0.932;0.9315;0.9316;0.85;0.8639;0.85;0.8508;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9665;0.9666;0.9665;0.9665;0.9289;0.9295;0.9289;0.9291;0.85;0.8639;0.85;0.8508;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
DecisionTreeClassifier;0.9654;0.9655;0.9654;0.9654;0.9215;0.9216;0.9215;0.9215;0.85;0.8639;0.85;0.8508;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 186};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=186)
DecisionTreeClassifier;0.9656;0.9657;0.9656;0.9656;0.9336;0.9341;0.9336;0.9337;0.85;0.8639;0.85;0.8508;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 996};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=996)
SVC;0.8581;0.8598;0.8581;0.8577;0.8913;0.8913;0.8913;0.891;0.85;0.8505;0.85;0.8499;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 489};SVC(C=10, random_state=489)
MLPClassifier;0.8841;0.8846;0.8841;0.8839;0.8773;0.8768;0.8773;0.877;0.85;0.8505;0.85;0.8499;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 829, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=829)
DecisionTreeClassifier;0.966;0.966;0.966;0.966;0.9154;0.9157;0.9154;0.9155;0.8333;0.8348;0.8333;0.8337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 610};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=610)
LogisticRegression;0.7278;0.732;0.7278;0.7288;0.7094;0.7248;0.7094;0.7114;0.7167;0.7264;0.7167;0.7179;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7251;0.7288;0.7251;0.726;0.7282;0.74;0.7282;0.73;0.7;0.7142;0.7;0.7021;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7224;0.7261;0.7224;0.7232;0.7451;0.7573;0.7451;0.7472;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7238;0.7274;0.7238;0.7245;0.7317;0.7388;0.7317;0.7331;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7263;0.7297;0.7263;0.7271;0.7121;0.7249;0.7121;0.714;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7232;0.7265;0.7232;0.7239;0.7503;0.7628;0.7503;0.7525;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7237;0.7273;0.7237;0.7245;0.723;0.7335;0.723;0.7245;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7244;0.7281;0.7244;0.7253;0.7237;0.7333;0.7237;0.7249;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7244;0.7283;0.7244;0.7253;0.7336;0.7441;0.7336;0.7355;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7249;0.7286;0.7249;0.7258;0.729;0.743;0.729;0.7307;0.7;0.7068;0.7;0.7015;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.725;0.7287;0.725;0.7259;0.7201;0.7299;0.7201;0.7217;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7244;0.7281;0.7244;0.7253;0.7195;0.7381;0.7195;0.7224;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.724;0.7278;0.724;0.7249;0.7302;0.7453;0.7302;0.7327;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7236;0.727;0.7236;0.7244;0.7342;0.7422;0.7342;0.7359;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7203;0.7242;0.7203;0.7212;0.7344;0.7417;0.7344;0.7356;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7234;0.727;0.7234;0.7242;0.7268;0.7387;0.7268;0.7289;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7256;0.7293;0.7256;0.7265;0.7141;0.7246;0.7141;0.7164;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7227;0.7264;0.7227;0.7236;0.7356;0.7441;0.7356;0.7372;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.723;0.7268;0.723;0.7238;0.7336;0.7427;0.7336;0.7356;0.6833;0.6944;0.6833;0.6858;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7235;0.7272;0.7235;0.7244;0.7418;0.7486;0.7418;0.7433;0.6833;0.6902;0.6833;0.6849;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7226;0.7263;0.7226;0.7234;0.7315;0.744;0.7315;0.7335;0.6833;0.6902;0.6833;0.6849;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7241;0.7278;0.7241;0.725;0.7282;0.7389;0.7282;0.73;0.6833;0.6902;0.6833;0.6849;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7243;0.7283;0.7243;0.7251;0.7201;0.7299;0.7201;0.7219;0.6833;0.6929;0.6833;0.6847;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7252;0.7293;0.7252;0.7261;0.7264;0.7401;0.7264;0.7289;0.6833;0.6956;0.6833;0.6845;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7251;0.7289;0.7251;0.7261;0.7317;0.7446;0.7317;0.7337;0.6833;0.6956;0.6833;0.6845;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7244;0.7279;0.7244;0.7252;0.7302;0.7433;0.7302;0.7324;0.6667;0.6812;0.6667;0.6692;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7221;0.7258;0.7221;0.723;0.7396;0.7503;0.7396;0.7412;0.6667;0.6812;0.6667;0.6692;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7233;0.7273;0.7233;0.7242;0.7248;0.7411;0.7248;0.726;0.6667;0.6812;0.6667;0.6692;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 466, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=466)"
LogisticRegression;0.7245;0.7282;0.7245;0.7255;0.7161;0.7295;0.7161;0.7179;0.6667;0.6774;0.6667;0.6686;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
LogisticRegression;0.7187;0.722;0.7187;0.7196;0.7638;0.7754;0.7638;0.7655;0.6667;0.6774;0.6667;0.6686;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 412, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=412)"
