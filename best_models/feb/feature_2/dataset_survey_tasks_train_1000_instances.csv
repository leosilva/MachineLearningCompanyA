Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.8287,0.8391,0.8287,0.8312,0.8384,0.8461,0.8384,0.8408,0.8167,0.8201,0.8167,0.8173,0.9429,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 5, 'random_state': 41}","RandomForestClassifier(n_estimators=5, random_state=41)"
DecisionTreeClassifier,0.8257,0.8385,0.8257,0.8279,0.8384,0.8473,0.8384,0.8412,0.7833,0.7898,0.7833,0.784,0.9443,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 559}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=559)"
KNeighborsClassifier,0.8206,0.8419,0.8206,0.8224,0.8112,0.8365,0.8112,0.8129,0.7833,0.8045,0.7833,0.783,0.9367,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
LogisticRegression,0.7895,0.7993,0.7895,0.7909,0.7908,0.7962,0.7908,0.7909,0.7667,0.7731,0.7667,0.763,0.9292,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
RandomForestClassifier,0.8291,0.8393,0.8291,0.832,0.8265,0.8361,0.8265,0.8294,0.75,0.7542,0.75,0.7482,0.9439,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 933}","RandomForestClassifier(n_estimators=20, random_state=933)"
DecisionTreeClassifier,0.8329,0.8448,0.8329,0.8359,0.8248,0.8373,0.8248,0.8282,0.75,0.7642,0.75,0.7468,0.9471,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 952}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=952)"
SVC,0.7781,0.7856,0.7781,0.7784,0.8299,0.83,0.8299,0.8298,0.75,0.75,0.75,0.7464,0.8689,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 670}","SVC(C=10, kernel='linear', probability=True, random_state=670)"
LogisticRegression,0.7755,0.782,0.7755,0.7774,0.7857,0.7917,0.7857,0.7879,0.7167,0.7467,0.7167,0.7171,0.9263,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
MLPClassifier,0.7815,0.7949,0.7815,0.7824,0.7942,0.8454,0.7942,0.794,0.7167,0.7447,0.7167,0.7154,0.931,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 178, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=178)"
MLPClassifier,0.7942,0.8146,0.7942,0.7937,0.8027,0.8123,0.8027,0.8051,0.7167,0.717,0.7167,0.7131,0.9369,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=279)"
RandomForestClassifier,0.8397,0.8484,0.8397,0.8422,0.7925,0.8084,0.7925,0.7965,0.7167,0.7351,0.7167,0.713,0.9469,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 5, 'random_state': 872}","RandomForestClassifier(n_estimators=5, random_state=872)"
DecisionTreeClassifier,0.8346,0.8457,0.8346,0.838,0.8316,0.8441,0.8316,0.8348,0.7167,0.7359,0.7167,0.7128,0.9461,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 444}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=444)"
MLPClassifier,0.7874,0.8064,0.7874,0.7868,0.8061,0.8209,0.8061,0.8077,0.7167,0.7233,0.7167,0.7119,0.937,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=466)"
SVC,0.7857,0.7928,0.7857,0.7877,0.7602,0.7628,0.7602,0.7612,0.7,0.7064,0.7,0.6957,0.8773,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 111}","SVC(C=10, kernel='linear', probability=True, random_state=111)"
LogisticRegression,0.7802,0.7866,0.7802,0.7814,0.7687,0.7722,0.7687,0.77,0.7,0.7162,0.7,0.6948,0.9286,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 753, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=753)"
KNeighborsClassifier,0.8172,0.8279,0.8172,0.8194,0.818,0.8217,0.818,0.8188,0.7,0.7075,0.7,0.6938,0.9362,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=13, weights='distance')"
KNeighborsClassifier,0.8163,0.8279,0.8163,0.8179,0.8027,0.8399,0.8027,0.804,0.6667,0.721,0.6667,0.6623,0.9393,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
SVC,0.7793,0.8328,0.7793,0.7791,0.801,0.8422,0.801,0.799,0.6333,0.7284,0.6333,0.6077,0.9175,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 896}","SVC(C=10, probability=True, random_state=896)"
