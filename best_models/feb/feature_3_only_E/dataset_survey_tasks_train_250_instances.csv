Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
MLPClassifier,0.7934,0.8565,0.7934,0.7934,0.7464,0.8103,0.7464,0.7573,0.7333,0.7525,0.7333,0.7333,0.9342,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_iter': 100000, 'random_state': 56, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=56)"
DecisionTreeClassifier,0.8006,0.8252,0.8006,0.8044,0.8333,0.8548,0.8333,0.8367,0.7333,0.74,0.7333,0.7286,0.9275,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 625}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=625)"
KNeighborsClassifier,0.8059,0.8318,0.8059,0.8074,0.8116,0.832,0.8116,0.8149,0.7167,0.7333,0.7167,0.7175,0.9206,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
RandomForestClassifier,0.8188,0.8427,0.8188,0.818,0.7899,0.8104,0.7899,0.7941,0.7167,0.7337,0.7167,0.7142,0.9349,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'n_estimators': 20, 'random_state': 108}","RandomForestClassifier(n_estimators=20, random_state=108)"
RandomForestClassifier,0.8027,0.8182,0.8027,0.8075,0.8551,0.8588,0.8551,0.8567,0.7167,0.7222,0.7167,0.705,0.9311,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'n_estimators': 20, 'random_state': 423}","RandomForestClassifier(n_estimators=20, random_state=423)"
LogisticRegression,0.759,0.829,0.759,0.7591,0.7826,0.8412,0.7826,0.7817,0.7,0.7754,0.7,0.7044,0.9114,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 743, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=743)"
DecisionTreeClassifier,0.8065,0.8292,0.8065,0.8079,0.8478,0.8641,0.8478,0.8508,0.7,0.7217,0.7,0.7039,0.9266,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 227}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=227)"
LogisticRegression,0.7609,0.8282,0.7609,0.7583,0.7609,0.8198,0.7609,0.7601,0.7,0.712,0.7,0.7011,0.8949,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 848, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=848)"
MLPClassifier,0.7646,0.8174,0.7646,0.7637,0.8188,0.8741,0.8188,0.8209,0.6833,0.7251,0.6833,0.6847,0.919,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_iter': 100000, 'random_state': 553, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=553)"
RandomForestClassifier,0.8263,0.8413,0.8263,0.8272,0.7391,0.7536,0.7391,0.7431,0.6833,0.6778,0.6833,0.6761,0.9423,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'n_estimators': 10, 'random_state': 73}","RandomForestClassifier(n_estimators=10, random_state=73)"
KNeighborsClassifier,0.8188,0.8332,0.8188,0.8216,0.7826,0.8103,0.7826,0.7904,0.6833,0.6935,0.6833,0.6743,0.9183,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
LogisticRegression,0.7953,0.8154,0.7953,0.7969,0.8261,0.8407,0.8261,0.8268,0.6667,0.7062,0.6667,0.6699,0.9192,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 511, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=511)"
SVC,0.7626,0.8192,0.7626,0.7589,0.8188,0.843,0.8188,0.8186,0.6667,0.7155,0.6667,0.6659,0.9167,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 81}","SVC(C=10, probability=True, random_state=81)"
KNeighborsClassifier,0.8045,0.8263,0.8045,0.8078,0.8188,0.8247,0.8188,0.816,0.6667,0.662,0.6667,0.6611,0.9155,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=7, weights='distance')"
SVC,0.7607,0.8089,0.7607,0.7588,0.7971,0.8493,0.7971,0.7914,0.6667,0.7455,0.6667,0.6527,0.9183,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 33}","SVC(C=10, probability=True, random_state=33)"
MLPClassifier,0.7664,0.8196,0.7664,0.7672,0.8116,0.8312,0.8116,0.8132,0.65,0.6708,0.65,0.6507,0.9222,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_iter': 100000, 'random_state': 893, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=893)"
DecisionTreeClassifier,0.8007,0.8739,0.8007,0.7995,0.8478,0.8941,0.8478,0.8504,0.6667,0.7476,0.6667,0.6451,0.9251,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 337}","DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=337)"
SVC,0.7953,0.8567,0.7953,0.7886,0.8116,0.8578,0.8116,0.8151,0.65,0.7347,0.65,0.6299,0.9195,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 416}","SVC(C=10, probability=True, random_state=416)"
