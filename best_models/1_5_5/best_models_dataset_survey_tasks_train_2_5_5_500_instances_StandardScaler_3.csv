Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8696;0.8744;0.8696;0.8701;0.8403;0.8398;0.8403;0.8398;0.9;0.906;0.9;0.9005;0.9649;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
DecisionTreeClassifier;0.8711;0.8783;0.8711;0.8721;0.8611;0.8658;0.8611;0.8623;0.8667;0.8722;0.8667;0.8667;0.9559;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=272)
DecisionTreeClassifier;0.8665;0.8745;0.8665;0.8674;0.8611;0.8704;0.8611;0.8628;0.8667;0.8675;0.8667;0.8656;0.9545;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
RandomForestClassifier;0.8665;0.8716;0.8665;0.8671;0.8958;0.9011;0.8958;0.8967;0.85;0.8564;0.85;0.8508;0.9681;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 146};RandomForestClassifier(n_estimators=10, random_state=146)
RandomForestClassifier;0.8727;0.8779;0.8727;0.8733;0.8264;0.8362;0.8264;0.8297;0.85;0.8554;0.85;0.8504;0.9686;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
RandomForestClassifier;0.8642;0.869;0.8642;0.8649;0.8819;0.8906;0.8819;0.8818;0.85;0.8565;0.85;0.8493;0.9661;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
RandomForestClassifier;0.8612;0.8668;0.8612;0.8622;0.875;0.8805;0.875;0.8752;0.85;0.8565;0.85;0.8493;0.9651;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 641};RandomForestClassifier(n_estimators=10, random_state=641)
DecisionTreeClassifier;0.8557;0.8657;0.8557;0.8571;0.8542;0.853;0.8542;0.8535;0.85;0.8577;0.85;0.8488;0.9576;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=366)
DecisionTreeClassifier;0.855;0.8622;0.855;0.856;0.8681;0.8892;0.8681;0.8678;0.85;0.8518;0.85;0.8483;0.95;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=272)
MLPClassifier;0.8504;0.8587;0.8504;0.8517;0.8264;0.833;0.8264;0.8286;0.8333;0.8365;0.8333;0.8339;0.9609;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
DecisionTreeClassifier;0.8704;0.8754;0.8704;0.8709;0.8333;0.8405;0.8333;0.8354;0.8333;0.8458;0.8333;0.8338;0.9568;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
MLPClassifier;0.848;0.8577;0.848;0.8491;0.8472;0.8459;0.8472;0.8464;0.8333;0.8524;0.8333;0.8338;0.9591;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
DecisionTreeClassifier;0.8634;0.8715;0.8634;0.8645;0.8958;0.9071;0.8958;0.8963;0.8333;0.8357;0.8333;0.8331;0.9486;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8634;0.8721;0.8634;0.8643;0.8958;0.9037;0.8958;0.8975;0.8333;0.8367;0.8333;0.8324;0.9512;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8704;0.8787;0.8704;0.8714;0.875;0.8752;0.875;0.8738;0.8333;0.8333;0.8333;0.8323;0.9504;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=943)
DecisionTreeClassifier;0.8572;0.8655;0.8572;0.8582;0.875;0.8754;0.875;0.8751;0.8333;0.8333;0.8333;0.8323;0.9505;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=366)
DecisionTreeClassifier;0.8642;0.8727;0.8642;0.865;0.8333;0.8319;0.8333;0.8324;0.8333;0.8333;0.8333;0.8323;0.9534;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=272)
MLPClassifier;0.8465;0.855;0.8465;0.8473;0.8403;0.8456;0.8403;0.8419;0.8167;0.8234;0.8167;0.8178;0.959;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
RandomForestClassifier;0.8674;0.8715;0.8674;0.8681;0.8819;0.9029;0.8819;0.8826;0.8167;0.8304;0.8167;0.8176;0.9673;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 641};RandomForestClassifier(n_estimators=10, random_state=641)
MLPClassifier;0.8418;0.8526;0.8418;0.8429;0.9028;0.9107;0.9028;0.9029;0.8167;0.8224;0.8167;0.8173;0.9595;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8426;0.8504;0.8426;0.8438;0.8611;0.8616;0.8611;0.8612;0.8167;0.8224;0.8167;0.8173;0.9597;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
RandomForestClassifier;0.8696;0.8752;0.8696;0.8705;0.8542;0.8586;0.8542;0.8552;0.8167;0.842;0.8167;0.8169;0.9678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 146};RandomForestClassifier(n_estimators=20, random_state=146)
DecisionTreeClassifier;0.8726;0.879;0.8726;0.8734;0.8264;0.837;0.8264;0.827;0.8167;0.8163;0.8167;0.8162;0.9502;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8658;0.8742;0.8658;0.8669;0.9097;0.9198;0.9097;0.9109;0.8167;0.8163;0.8167;0.8162;0.9492;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.858;0.8683;0.858;0.859;0.875;0.8777;0.875;0.8745;0.8167;0.8163;0.8167;0.8162;0.9482;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=272)
DecisionTreeClassifier;0.8572;0.8645;0.8572;0.8584;0.9028;0.9079;0.9028;0.9034;0.8167;0.8175;0.8167;0.816;0.9508;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=366)
KNeighborsClassifier;0.851;0.8591;0.851;0.851;0.8264;0.8247;0.8264;0.8253;0.8167;0.825;0.8167;0.8153;0.9433;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8727;0.8812;0.8727;0.8737;0.875;0.8788;0.875;0.8756;0.8167;0.8171;0.8167;0.8144;0.9519;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8634;0.8697;0.8634;0.8644;0.9028;0.9028;0.9028;0.9023;0.8167;0.8171;0.8167;0.8144;0.9497;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8781;0.8892;0.8781;0.8794;0.8472;0.8513;0.8472;0.8471;0.8167;0.8171;0.8167;0.8144;0.9545;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=366)
DecisionTreeClassifier;0.8611;0.8672;0.8611;0.8621;0.9028;0.9079;0.9028;0.9034;0.8167;0.8171;0.8167;0.8144;0.9515;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8642;0.8718;0.8642;0.8652;0.8611;0.8711;0.8611;0.8622;0.8167;0.8171;0.8167;0.8144;0.9496;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8657;0.8714;0.8657;0.8663;0.8403;0.8447;0.8403;0.8419;0.8167;0.8171;0.8167;0.8144;0.9508;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=272)
RandomForestClassifier;0.8712;0.8794;0.8712;0.8719;0.8542;0.857;0.8542;0.8531;0.8;0.8123;0.8;0.803;0.9669;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
RandomForestClassifier;0.8673;0.873;0.8673;0.8675;0.875;0.8798;0.875;0.8763;0.8;0.8406;0.8;0.8024;0.9661;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 146};RandomForestClassifier(n_estimators=10, random_state=146)
MLPClassifier;0.8395;0.8488;0.8395;0.841;0.8819;0.8828;0.8819;0.8811;0.8;0.8089;0.8;0.8023;0.9599;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8403;0.8494;0.8403;0.8417;0.8681;0.8715;0.8681;0.8691;0.8;0.8089;0.8;0.8023;0.9587;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
MLPClassifier;0.8426;0.8525;0.8426;0.844;0.8819;0.8829;0.8819;0.8824;0.8;0.8089;0.8;0.8023;0.9596;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
DecisionTreeClassifier;0.8673;0.8747;0.8673;0.8686;0.8542;0.8565;0.8542;0.8541;0.8;0.8579;0.8;0.8021;0.9545;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=366)
RandomForestClassifier;0.8826;0.8874;0.8826;0.8834;0.8264;0.8276;0.8264;0.827;0.8;0.8102;0.8;0.8014;0.9689;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 146};RandomForestClassifier(n_estimators=20, random_state=146)
MLPClassifier;0.8411;0.8511;0.8411;0.8422;0.8611;0.8661;0.8611;0.8618;0.8;0.8102;0.8;0.8014;0.9597;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8365;0.847;0.8365;0.8375;0.9167;0.9175;0.9167;0.9166;0.8;0.8102;0.8;0.8014;0.9548;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8441;0.8521;0.8441;0.8452;0.875;0.8788;0.875;0.8762;0.8;0.8102;0.8;0.8014;0.9597;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.848;0.8548;0.848;0.8487;0.875;0.8847;0.875;0.8771;0.8;0.8102;0.8;0.8014;0.9597;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8403;0.8497;0.8403;0.8416;0.8472;0.8489;0.8472;0.8475;0.8;0.8102;0.8;0.8014;0.9591;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8464;0.8537;0.8464;0.8473;0.8194;0.8304;0.8194;0.8223;0.8;0.8102;0.8;0.8014;0.9614;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8433;0.8533;0.8433;0.8442;0.8958;0.8958;0.8958;0.8958;0.8;0.8102;0.8;0.8014;0.9582;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
MLPClassifier;0.8434;0.8519;0.8434;0.8445;0.8681;0.8698;0.8681;0.8684;0.8;0.8102;0.8;0.8014;0.9571;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
MLPClassifier;0.8434;0.8515;0.8434;0.8445;0.9028;0.9039;0.9028;0.9025;0.8;0.8102;0.8;0.8014;0.9576;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
MLPClassifier;0.8511;0.8582;0.8511;0.8523;0.8542;0.8573;0.8542;0.8553;0.8;0.8102;0.8;0.8014;0.9617;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
MLPClassifier;0.8434;0.8527;0.8434;0.8445;0.8403;0.8391;0.8403;0.8395;0.8;0.8102;0.8;0.8014;0.9613;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
MLPClassifier;0.8449;0.8544;0.8449;0.8463;0.8542;0.866;0.8542;0.8535;0.8;0.8038;0.8;0.801;0.96;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
MLPClassifier;0.8387;0.8478;0.8387;0.8397;0.9167;0.9212;0.9167;0.917;0.8;0.8038;0.8;0.801;0.9565;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
RandomForestClassifier;0.8643;0.8698;0.8643;0.8651;0.8889;0.8905;0.8889;0.8894;0.8;0.8038;0.8;0.801;0.9666;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
KNeighborsClassifier;0.845;0.849;0.845;0.8451;0.8056;0.8233;0.8056;0.8077;0.8;0.8013;0.8;0.8003;0.9389;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8642;0.8705;0.8642;0.8652;0.8819;0.8893;0.8819;0.883;0.8;0.8005;0.8;0.7999;0.9526;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8727;0.8803;0.8727;0.8735;0.8194;0.823;0.8194;0.8203;0.8;0.8005;0.8;0.7999;0.9537;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8657;0.8729;0.8657;0.8669;0.8472;0.8565;0.8472;0.848;0.8;0.8005;0.8;0.7999;0.955;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=366)
DecisionTreeClassifier;0.8634;0.8689;0.8634;0.8644;0.8819;0.8839;0.8819;0.8821;0.8;0.8005;0.8;0.7999;0.9525;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=366)
DecisionTreeClassifier;0.8688;0.879;0.8688;0.8695;0.8542;0.8548;0.8542;0.8543;0.8;0.8005;0.8;0.7999;0.9504;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=366)
KNeighborsClassifier;0.8396;0.8516;0.8396;0.8402;0.8681;0.8727;0.8681;0.8688;0.8;0.8014;0.8;0.7998;0.937;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8696;0.8764;0.8696;0.87;0.8958;0.8985;0.8958;0.8967;0.8;0.8179;0.8;0.7991;0.9647;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 146};RandomForestClassifier(n_estimators=10, random_state=146)
DecisionTreeClassifier;0.8704;0.8767;0.8704;0.8711;0.8194;0.8434;0.8194;0.823;0.8;0.8019;0.8;0.7985;0.9515;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=366)
RandomForestClassifier;0.8665;0.8728;0.8665;0.8675;0.9028;0.9028;0.9028;0.9028;0.7833;0.8105;0.7833;0.7883;0.9648;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
RandomForestClassifier;0.8634;0.8698;0.8634;0.8643;0.8333;0.8327;0.8333;0.8323;0.7833;0.8062;0.7833;0.7869;0.9674;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
RandomForestClassifier;0.8619;0.8671;0.8619;0.8627;0.8889;0.8911;0.8889;0.889;0.7833;0.8059;0.7833;0.7863;0.9638;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 641};RandomForestClassifier(n_estimators=5, random_state=641)
RandomForestClassifier;0.8711;0.8766;0.8711;0.8718;0.8958;0.9016;0.8958;0.8943;0.7833;0.7913;0.7833;0.7852;0.9653;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
MLPClassifier;0.8488;0.8565;0.8488;0.85;0.8542;0.8591;0.8542;0.8548;0.7833;0.7975;0.7833;0.7848;0.9609;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
MLPClassifier;0.8419;0.8493;0.8419;0.8431;0.8264;0.8302;0.8264;0.8259;0.7833;0.7975;0.7833;0.7848;0.9601;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
MLPClassifier;0.8434;0.8509;0.8434;0.8444;0.8819;0.886;0.8819;0.8834;0.7833;0.7904;0.7833;0.7847;0.959;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
MLPClassifier;0.8465;0.8544;0.8465;0.8479;0.8611;0.863;0.8611;0.8608;0.7833;0.7904;0.7833;0.7847;0.9597;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
MLPClassifier;0.8418;0.8504;0.8418;0.8428;0.875;0.8893;0.875;0.876;0.7833;0.7863;0.7833;0.7845;0.9594;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
RandomForestClassifier;0.872;0.8776;0.872;0.8725;0.875;0.875;0.875;0.8749;0.7833;0.7863;0.7833;0.7845;0.9662;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
RandomForestClassifier;0.8588;0.8655;0.8588;0.8594;0.8819;0.8877;0.8819;0.8832;0.7833;0.8068;0.7833;0.7843;0.9654;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
KNeighborsClassifier;0.8465;0.8531;0.8465;0.8469;0.8472;0.8442;0.8472;0.8449;0.7833;0.7944;0.7833;0.7835;0.9405;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8711;0.8779;0.8711;0.8718;0.8819;0.8885;0.8819;0.8829;0.7833;0.7957;0.7833;0.7832;0.9645;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 146};RandomForestClassifier(n_estimators=5, random_state=146)
RandomForestClassifier;0.8711;0.8762;0.8711;0.8716;0.8403;0.8477;0.8403;0.8424;0.7833;0.7989;0.7833;0.7828;0.966;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 146};RandomForestClassifier(n_estimators=10, random_state=146)
KNeighborsClassifier;0.8511;0.8557;0.8511;0.8515;0.8194;0.8336;0.8194;0.8177;0.7833;0.7829;0.7833;0.7828;0.9433;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8819;0.8849;0.8819;0.8821;0.8056;0.8308;0.8056;0.8095;0.7833;0.8178;0.7833;0.7821;0.9719;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
RandomForestClassifier;0.8642;0.8705;0.8642;0.8647;0.8958;0.8958;0.8958;0.8958;0.7833;0.7903;0.7833;0.7816;0.9638;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 641};RandomForestClassifier(n_estimators=5, random_state=641)
DecisionTreeClassifier;0.8626;0.8716;0.8626;0.8638;0.8542;0.8572;0.8542;0.8532;0.7667;0.7847;0.7667;0.7702;0.9541;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=272)
SVC;0.8317;0.8387;0.8317;0.8329;0.8819;0.8883;0.8819;0.8837;0.7667;0.7754;0.7667;0.7697;0.9175;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.8326;0.841;0.8326;0.8338;0.8611;0.8743;0.8611;0.8623;0.7667;0.7754;0.7667;0.7697;0.9161;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8318;0.8381;0.8318;0.8331;0.8889;0.8947;0.8889;0.8903;0.7667;0.7736;0.7667;0.7688;0.9151;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
MLPClassifier;0.8441;0.8533;0.8441;0.8454;0.8403;0.8403;0.8403;0.8395;0.7667;0.7778;0.7667;0.7687;0.9574;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
RandomForestClassifier;0.8627;0.8678;0.8627;0.8635;0.9028;0.907;0.9028;0.9038;0.7667;0.7778;0.7667;0.7687;0.9643;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
MLPClassifier;0.8357;0.8458;0.8357;0.837;0.875;0.8757;0.875;0.874;0.7667;0.7778;0.7667;0.7687;0.9577;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
RandomForestClassifier;0.8703;0.8743;0.8703;0.8712;0.8889;0.8894;0.8889;0.8889;0.7667;0.7725;0.7667;0.7685;0.9676;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 146};RandomForestClassifier(n_estimators=5, random_state=146)
SVC;0.8318;0.8401;0.8318;0.8332;0.8264;0.8318;0.8264;0.827;0.7667;0.7725;0.7667;0.7685;0.9218;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
MLPClassifier;0.8433;0.8515;0.8433;0.8443;0.875;0.8836;0.875;0.8763;0.7667;0.7774;0.7667;0.7682;0.9613;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 570, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=570)
SVC;0.8395;0.8467;0.8395;0.841;0.8472;0.8487;0.8472;0.8467;0.7667;0.7711;0.7667;0.768;0.9228;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8365;0.8433;0.8365;0.8375;0.8542;0.8596;0.8542;0.8553;0.7667;0.7711;0.7667;0.768;0.9229;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
SVC;0.8333;0.8403;0.8333;0.8348;0.8542;0.8687;0.8542;0.854;0.7667;0.7697;0.7667;0.7678;0.9219;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8433;0.8488;0.8433;0.8444;0.7986;0.8214;0.7986;0.8012;0.7667;0.7697;0.7667;0.7678;0.9189;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8379;0.8442;0.8379;0.839;0.7986;0.8118;0.7986;0.8023;0.7667;0.7697;0.7667;0.7678;0.9243;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8334;0.8414;0.8334;0.8352;0.8542;0.8632;0.8542;0.8523;0.7667;0.7697;0.7667;0.7678;0.9183;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8341;0.8435;0.8341;0.8359;0.875;0.8782;0.875;0.8746;0.7667;0.7697;0.7667;0.7678;0.918;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.8379;0.8447;0.8379;0.8391;0.8125;0.8263;0.8125;0.8151;0.7667;0.7697;0.7667;0.7678;0.92;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.834;0.842;0.834;0.8356;0.875;0.8799;0.875;0.8763;0.7667;0.7697;0.7667;0.7678;0.9176;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.8372;0.8436;0.8372;0.8384;0.8472;0.8524;0.8472;0.849;0.7667;0.7697;0.7667;0.7678;0.9203;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.8318;0.841;0.8318;0.8329;0.8472;0.8518;0.8472;0.8487;0.7667;0.7697;0.7667;0.7678;0.9168;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
SVC;0.831;0.8401;0.831;0.8324;0.875;0.8869;0.875;0.8759;0.7667;0.7697;0.7667;0.7678;0.9172;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
SVC;0.8434;0.8488;0.8434;0.8447;0.8056;0.8146;0.8056;0.8079;0.7667;0.7697;0.7667;0.7678;0.9193;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
SVC;0.8333;0.8417;0.8333;0.8351;0.8889;0.8915;0.8889;0.8894;0.7667;0.7697;0.7667;0.7678;0.9165;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
SVC;0.8364;0.8432;0.8364;0.8376;0.8611;0.8628;0.8611;0.8618;0.7667;0.7697;0.7667;0.7678;0.915;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
KNeighborsClassifier;0.8441;0.8517;0.8441;0.8453;0.8333;0.8396;0.8333;0.8347;0.7667;0.7687;0.7667;0.7668;0.9437;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8302;0.8385;0.8302;0.8316;0.8889;0.9003;0.8889;0.8896;0.7667;0.7687;0.7667;0.7668;0.9311;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.848;0.8523;0.848;0.8485;0.8611;0.8644;0.8611;0.8618;0.7667;0.7687;0.7667;0.7668;0.9433;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8395;0.8471;0.8395;0.8394;0.9306;0.939;0.9306;0.9317;0.7667;0.7687;0.7667;0.7668;0.9426;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8442;0.8468;0.8442;0.8444;0.8819;0.8846;0.8819;0.8827;0.7667;0.7687;0.7667;0.7668;0.9418;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8342;0.8375;0.8342;0.834;0.8819;0.8873;0.8819;0.8835;0.7667;0.7687;0.7667;0.7668;0.9384;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8302;0.8377;0.8302;0.8316;0.875;0.8831;0.875;0.8763;0.7667;0.767;0.7667;0.7666;0.9164;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
KNeighborsClassifier;0.8386;0.8454;0.8386;0.8393;0.9306;0.9393;0.9306;0.9312;0.7667;0.7684;0.7667;0.7662;0.9391;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8357;0.8405;0.8357;0.8364;0.8958;0.8982;0.8958;0.8962;0.7667;0.7663;0.7667;0.7656;0.9389;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8372;0.8417;0.8372;0.8377;0.8542;0.8797;0.8542;0.8575;0.7667;0.7717;0.7667;0.7653;0.937;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8689;0.8744;0.8689;0.8694;0.8333;0.8322;0.8333;0.8326;0.7667;0.7736;0.7667;0.765;0.9677;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
DecisionTreeClassifier;0.8634;0.8701;0.8634;0.8643;0.8542;0.8543;0.8542;0.8518;0.7667;0.7646;0.7667;0.7647;0.9513;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 272};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=272)
DecisionTreeClassifier;0.8711;0.8773;0.8711;0.8719;0.8403;0.8427;0.8403;0.8413;0.7667;0.7662;0.7667;0.7622;0.9504;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 366};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=366)
SVC;0.8395;0.8466;0.8395;0.8406;0.8333;0.8408;0.8333;0.8342;0.75;0.7677;0.75;0.7549;0.9174;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
SVC;0.8317;0.8413;0.8317;0.8332;0.8611;0.8678;0.8611;0.8621;0.75;0.7593;0.75;0.7526;0.9193;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
SVC;0.8418;0.848;0.8418;0.8427;0.8056;0.8174;0.8056;0.8073;0.75;0.7593;0.75;0.7526;0.9212;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.8418;0.8491;0.8418;0.8432;0.8056;0.8152;0.8056;0.8084;0.75;0.7566;0.75;0.7522;0.9236;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.8349;0.8438;0.8349;0.8364;0.8542;0.8617;0.8542;0.8534;0.75;0.7566;0.75;0.7522;0.9202;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8395;0.8461;0.8395;0.8405;0.8194;0.8325;0.8194;0.822;0.75;0.7569;0.75;0.7521;0.922;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8357;0.842;0.8357;0.8372;0.8472;0.8487;0.8472;0.8478;0.75;0.7569;0.75;0.7521;0.9172;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 675};SVC(C=10, probability=True, random_state=675)
SVC;0.838;0.8447;0.838;0.8392;0.8333;0.8497;0.8333;0.8365;0.75;0.7569;0.75;0.7521;0.9239;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
RandomForestClassifier;0.8627;0.8669;0.8627;0.8633;0.8472;0.8646;0.8472;0.8498;0.75;0.7645;0.75;0.752;0.966;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 61};RandomForestClassifier(n_estimators=5, random_state=61)
SVC;0.8349;0.8433;0.8349;0.8363;0.8819;0.8984;0.8819;0.884;0.75;0.7521;0.75;0.7507;0.917;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 561};SVC(C=10, probability=True, random_state=561)
SVC;0.8356;0.842;0.8356;0.8369;0.8125;0.8245;0.8125;0.8121;0.75;0.7521;0.75;0.7507;0.92;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 411};SVC(C=10, probability=True, random_state=411)
KNeighborsClassifier;0.851;0.8578;0.851;0.8516;0.8264;0.8271;0.8264;0.8219;0.75;0.7532;0.75;0.7504;0.9445;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8727;0.8789;0.8727;0.8733;0.8889;0.8922;0.8889;0.889;0.75;0.7768;0.75;0.75;0.9664;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 146};RandomForestClassifier(n_estimators=20, random_state=146)
KNeighborsClassifier;0.8465;0.851;0.8465;0.8463;0.8194;0.8376;0.8194;0.8226;0.75;0.7504;0.75;0.7499;0.9402;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8379;0.8429;0.8379;0.8383;0.8681;0.8821;0.8681;0.8691;0.75;0.7504;0.75;0.7499;0.9389;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8495;0.8531;0.8495;0.8494;0.875;0.8763;0.875;0.8754;0.75;0.7533;0.75;0.7496;0.9422;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8395;0.8481;0.8395;0.8397;0.8264;0.8301;0.8264;0.8278;0.75;0.7574;0.75;0.7476;0.9361;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8472;0.8506;0.8472;0.8472;0.8681;0.8692;0.8681;0.8686;0.75;0.7503;0.75;0.746;0.9456;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.8649;0.87;0.8649;0.8657;0.8819;0.8921;0.8819;0.8834;0.7333;0.7577;0.7333;0.7351;0.9644;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
MLPClassifier;0.8495;0.8593;0.8495;0.8507;0.8194;0.8284;0.8194;0.8224;0.7333;0.7525;0.7333;0.734;0.9597;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 778, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=778)
KNeighborsClassifier;0.8503;0.8575;0.8503;0.8507;0.8889;0.8945;0.8889;0.89;0.7333;0.739;0.7333;0.7335;0.9455;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8473;0.8532;0.8473;0.848;0.8681;0.8712;0.8681;0.8692;0.7333;0.7347;0.7333;0.7328;0.944;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8473;0.854;0.8473;0.8478;0.8403;0.8418;0.8403;0.841;0.7333;0.7347;0.7333;0.7328;0.9424;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8395;0.8431;0.8395;0.84;0.75;0.7662;0.75;0.7547;0.7333;0.7347;0.7333;0.7328;0.9393;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8448;0.8525;0.8448;0.8458;0.8194;0.819;0.8194;0.8188;0.7333;0.7328;0.7333;0.7321;0.939;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8688;0.8742;0.8688;0.8696;0.8542;0.8529;0.8542;0.8531;0.7167;0.7383;0.7167;0.7172;0.9644;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 146};RandomForestClassifier(n_estimators=20, random_state=146)
RandomForestClassifier;0.8673;0.8721;0.8673;0.8679;0.8889;0.8951;0.8889;0.8904;0.7167;0.7383;0.7167;0.7172;0.9676;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 61};RandomForestClassifier(n_estimators=20, random_state=61)
KNeighborsClassifier;0.8418;0.8491;0.8418;0.8425;0.7917;0.7932;0.7917;0.7924;0.7167;0.7203;0.7167;0.7166;0.9348;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8364;0.8466;0.8364;0.837;0.8403;0.8506;0.8403;0.8413;0.7167;0.7203;0.7167;0.7166;0.9408;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8441;0.8511;0.8441;0.8448;0.8264;0.8276;0.8264;0.8268;0.7167;0.7181;0.7167;0.7128;0.9461;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8379;0.847;0.8379;0.8378;0.8333;0.8336;0.8333;0.8328;0.7167;0.7244;0.7167;0.7077;0.9395;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
LogisticRegression;0.8148;0.8237;0.8148;0.8156;0.8333;0.8386;0.8333;0.8354;0.7;0.701;0.7;0.6996;0.934;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8141;0.8247;0.8141;0.8153;0.8542;0.8629;0.8542;0.8563;0.7;0.6994;0.7;0.6994;0.9356;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8148;0.8226;0.8148;0.8165;0.8056;0.8112;0.8056;0.8053;0.7;0.6994;0.7;0.6994;0.9339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8147;0.8229;0.8147;0.8161;0.8125;0.8209;0.8125;0.8151;0.7;0.6994;0.7;0.6994;0.937;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8187;0.8262;0.8187;0.82;0.8056;0.809;0.8056;0.8069;0.7;0.6994;0.7;0.6994;0.9344;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
KNeighborsClassifier;0.838;0.8478;0.838;0.839;0.8611;0.8594;0.8611;0.8595;0.7;0.7018;0.7;0.699;0.938;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
LogisticRegression;0.8164;0.8247;0.8164;0.8181;0.7986;0.8114;0.7986;0.7997;0.6833;0.6854;0.6833;0.6841;0.9337;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8117;0.821;0.8117;0.8138;0.8681;0.8715;0.8681;0.8691;0.6833;0.6854;0.6833;0.6841;0.9308;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8133;0.8223;0.8133;0.8149;0.8194;0.8274;0.8194;0.8212;0.6833;0.6854;0.6833;0.6841;0.9356;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8171;0.8266;0.8171;0.8182;0.8264;0.8313;0.8264;0.828;0.6833;0.6854;0.6833;0.6841;0.9353;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8156;0.8227;0.8156;0.8166;0.8194;0.8286;0.8194;0.8214;0.6833;0.6854;0.6833;0.6841;0.9367;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8094;0.8185;0.8094;0.8105;0.8333;0.8401;0.8333;0.8355;0.6833;0.6854;0.6833;0.6841;0.9351;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8102;0.8167;0.8102;0.8115;0.8472;0.8608;0.8472;0.8497;0.6833;0.6854;0.6833;0.6841;0.9315;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8163;0.8252;0.8163;0.8178;0.8056;0.8055;0.8056;0.8044;0.6833;0.6854;0.6833;0.6841;0.936;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.811;0.82;0.811;0.8129;0.8403;0.85;0.8403;0.8395;0.6833;0.6854;0.6833;0.6841;0.9338;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8148;0.8229;0.8148;0.8158;0.8403;0.8435;0.8403;0.8408;0.6833;0.6854;0.6833;0.6841;0.9344;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.814;0.8215;0.814;0.8151;0.8194;0.8267;0.8194;0.8203;0.6833;0.6854;0.6833;0.6841;0.9352;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8209;0.8275;0.8209;0.8226;0.7986;0.8225;0.7986;0.8005;0.6833;0.6854;0.6833;0.6841;0.9355;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8133;0.8218;0.8133;0.815;0.8264;0.8321;0.8264;0.8282;0.6833;0.6854;0.6833;0.6841;0.9341;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8171;0.825;0.8171;0.8182;0.8056;0.821;0.8056;0.8058;0.6833;0.6854;0.6833;0.6841;0.9358;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8148;0.8232;0.8148;0.8162;0.8403;0.8419;0.8403;0.8406;0.6833;0.6854;0.6833;0.6841;0.9353;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8241;0.831;0.8241;0.8255;0.7361;0.748;0.7361;0.7392;0.6833;0.6854;0.6833;0.6841;0.9385;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8117;0.8202;0.8117;0.8135;0.8611;0.8662;0.8611;0.862;0.6833;0.6854;0.6833;0.6841;0.9349;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.821;0.8288;0.821;0.8224;0.7639;0.7735;0.7639;0.7663;0.6833;0.6854;0.6833;0.6841;0.9361;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8188;0.827;0.8188;0.8201;0.7917;0.8002;0.7917;0.794;0.6833;0.6854;0.6833;0.6841;0.9367;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8194;0.8257;0.8194;0.8203;0.7708;0.789;0.7708;0.7757;0.6833;0.6854;0.6833;0.6841;0.9379;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8133;0.8231;0.8133;0.8149;0.8542;0.8549;0.8542;0.8544;0.6833;0.6854;0.6833;0.6841;0.9329;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8233;0.8314;0.8233;0.8247;0.75;0.7598;0.75;0.753;0.6833;0.6854;0.6833;0.6841;0.939;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
LogisticRegression;0.8218;0.8307;0.8218;0.8231;0.7708;0.7742;0.7708;0.7722;0.6833;0.6825;0.6833;0.6821;0.9359;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 504, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=504)"
LogisticRegression;0.8133;0.8214;0.8133;0.8149;0.8403;0.8406;0.8403;0.8404;0.6833;0.6825;0.6833;0.6821;0.9359;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.8149;0.8232;0.8149;0.8161;0.8333;0.8348;0.8333;0.8334;0.6833;0.6825;0.6833;0.6821;0.9331;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 645, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=645)"
