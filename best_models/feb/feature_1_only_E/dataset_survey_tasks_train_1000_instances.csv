Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
KNeighborsClassifier,0.9477,0.9488,0.9477,0.9475,0.9456,0.9456,0.9456,0.9455,0.8833,0.8891,0.8833,0.8829,0.9831,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
KNeighborsClassifier,0.9456,0.9468,0.9456,0.9454,0.9439,0.9445,0.9439,0.9438,0.8667,0.8722,0.8667,0.8667,0.9835,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
RandomForestClassifier,0.952,0.9532,0.952,0.9519,0.9422,0.9433,0.9422,0.9418,0.8667,0.8699,0.8667,0.8659,0.9898,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 784}","RandomForestClassifier(n_estimators=20, random_state=784)"
MLPClassifier,0.8401,0.8427,0.8401,0.8407,0.818,0.8179,0.818,0.8173,0.85,0.8508,0.85,0.849,0.952,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 847, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=847)"
DecisionTreeClassifier,0.9124,0.9147,0.9124,0.9123,0.9303,0.9326,0.9303,0.9302,0.8333,0.8444,0.8333,0.8345,0.9724,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 667}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=667)"
DecisionTreeClassifier,0.9201,0.9222,0.9201,0.9202,0.9354,0.9363,0.9354,0.9354,0.8,0.8417,0.8,0.806,0.97,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 14}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=14)"
RandomForestClassifier,0.9422,0.943,0.9422,0.9421,0.9303,0.9334,0.9303,0.9299,0.8,0.8013,0.8,0.8003,0.9833,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 10, 'random_state': 139}","RandomForestClassifier(n_estimators=10, random_state=139)"
RandomForestClassifier,0.9435,0.9452,0.9435,0.9433,0.9235,0.924,0.9235,0.9234,0.7833,0.8254,0.7833,0.7877,0.9886,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 830}","RandomForestClassifier(n_estimators=20, random_state=830)"
KNeighborsClassifier,0.9447,0.9467,0.9447,0.9448,0.9303,0.9315,0.9303,0.9301,0.7833,0.8002,0.7833,0.7833,0.9817,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
SVC,0.7777,0.7887,0.7777,0.7781,0.801,0.8164,0.801,0.8031,0.7667,0.8424,0.7667,0.7729,0.8975,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 439}","SVC(C=10, kernel='linear', probability=True, random_state=439)"
MLPClassifier,0.8325,0.8354,0.8325,0.8324,0.8418,0.8416,0.8418,0.8416,0.7833,0.7981,0.7833,0.7705,0.9484,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 715, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=715)"
SVC,0.7883,0.8006,0.7883,0.7891,0.7721,0.7707,0.7721,0.771,0.7667,0.8627,0.7667,0.7692,0.901,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 675}","SVC(C=10, kernel='linear', probability=True, random_state=675)"
LogisticRegression,0.7751,0.7832,0.7751,0.7761,0.7738,0.7764,0.7738,0.7742,0.7667,0.8627,0.7667,0.7692,0.9123,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 636, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=636)"
LogisticRegression,0.764,0.7715,0.764,0.7653,0.7551,0.7632,0.7551,0.7569,0.75,0.8012,0.75,0.7542,0.911,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 148, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=148)"
MLPClassifier,0.8533,0.8571,0.8533,0.8535,0.8622,0.8632,0.8622,0.8621,0.75,0.7667,0.75,0.7529,0.9554,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 67, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=67)"
DecisionTreeClassifier,0.9213,0.9236,0.9213,0.9212,0.9082,0.9085,0.9082,0.9081,0.75,0.7521,0.75,0.7507,0.9748,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 219}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=219)"
SVC,0.7997,0.8073,0.7997,0.8014,0.8044,0.8128,0.8044,0.8057,0.7167,0.7139,0.7167,0.7109,0.904,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 149}","SVC(C=10, kernel='linear', probability=True, random_state=149)"
LogisticRegression,0.7895,0.7924,0.7895,0.7903,0.7874,0.7918,0.7874,0.7885,0.7,0.7027,0.7,0.6917,0.9183,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 831, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=831)"
