Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8695;0.8733;0.8695;0.8697;0.8621;0.8694;0.8621;0.8627;0.8667;0.8739;0.8667;0.8679;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
SVC;0.8285;0.8327;0.8285;0.8293;0.7801;0.7936;0.7801;0.7817;0.85;0.8804;0.85;0.8536;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
RandomForestClassifier;0.8699;0.8725;0.8699;0.8699;0.8414;0.8516;0.8414;0.8431;0.85;0.862;0.85;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
RandomForestClassifier;0.8684;0.872;0.8684;0.8688;0.8759;0.8769;0.8759;0.8759;0.85;0.862;0.85;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 7};RandomForestClassifier(n_estimators=10, random_state=7)
RandomForestClassifier;0.8592;0.8632;0.8592;0.8596;0.9207;0.9207;0.9207;0.9207;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
RandomForestClassifier;0.8714;0.8753;0.8714;0.8717;0.8213;0.8227;0.8213;0.8218;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 739};RandomForestClassifier(n_estimators=10, random_state=739)
RandomForestClassifier;0.8652;0.8692;0.8652;0.8658;0.8694;0.8711;0.8694;0.8693;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
RandomForestClassifier;0.8661;0.8696;0.8661;0.8664;0.8552;0.8607;0.8552;0.8566;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 983};RandomForestClassifier(n_estimators=10, random_state=983)
RandomForestClassifier;0.868;0.8721;0.868;0.8682;0.8586;0.8604;0.8586;0.8591;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
RandomForestClassifier;0.8626;0.8669;0.8626;0.863;0.9;0.9027;0.9;0.8999;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
RandomForestClassifier;0.8695;0.874;0.8695;0.8699;0.866;0.8707;0.866;0.8665;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 983};RandomForestClassifier(n_estimators=10, random_state=983)
RandomForestClassifier;0.8652;0.8693;0.8652;0.8655;0.8729;0.8733;0.8729;0.8726;0.85;0.8557;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 7};RandomForestClassifier(n_estimators=10, random_state=7)
SVC;0.8244;0.8295;0.8244;0.8253;0.8138;0.8268;0.8138;0.8156;0.8333;0.8706;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8182;0.8228;0.8182;0.8189;0.8724;0.8786;0.8724;0.8736;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
SVC;0.8186;0.8243;0.8186;0.8196;0.8897;0.895;0.8897;0.8899;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
SVC;0.8205;0.825;0.8205;0.8214;0.8586;0.8745;0.8586;0.8601;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
SVC;0.8259;0.8318;0.8259;0.8269;0.7931;0.8057;0.7931;0.793;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.8235;0.8284;0.8235;0.8242;0.8282;0.8373;0.8282;0.8291;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.819;0.8238;0.819;0.8198;0.8586;0.8637;0.8586;0.8596;0.8333;0.8706;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.8243;0.8298;0.8243;0.8253;0.8069;0.8176;0.8069;0.8071;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.8254;0.8299;0.8254;0.8262;0.8041;0.8216;0.8041;0.8061;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
SVC;0.8205;0.8251;0.8205;0.8213;0.8655;0.8699;0.8655;0.8665;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8232;0.8278;0.8232;0.8241;0.8276;0.8343;0.8276;0.8285;0.8333;0.8581;0.8333;0.8369;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
RandomForestClassifier;0.861;0.8649;0.861;0.8612;0.8866;0.893;0.8866;0.8878;0.8333;0.8434;0.8333;0.8352;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
RandomForestClassifier;0.863;0.8667;0.863;0.8632;0.8724;0.8759;0.8724;0.8722;0.8333;0.8419;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
RandomForestClassifier;0.8661;0.8703;0.8661;0.8664;0.8793;0.8799;0.8793;0.8794;0.8333;0.8419;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
RandomForestClassifier;0.8611;0.8641;0.8611;0.8614;0.8759;0.8776;0.8759;0.8763;0.8333;0.8355;0.8333;0.8341;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
RandomForestClassifier;0.8653;0.868;0.8653;0.8654;0.8828;0.8858;0.8828;0.8835;0.8333;0.8355;0.8333;0.8341;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
RandomForestClassifier;0.8646;0.8692;0.8646;0.8648;0.8793;0.8804;0.8793;0.8796;0.8333;0.8355;0.8333;0.8341;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
RandomForestClassifier;0.8725;0.8764;0.8725;0.8728;0.8483;0.8508;0.8483;0.8487;0.8333;0.8355;0.8333;0.8341;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
MLPClassifier;0.8244;0.8289;0.8244;0.8252;0.8379;0.8434;0.8379;0.8382;0.8333;0.8405;0.8333;0.8338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
KNeighborsClassifier;0.8385;0.845;0.8385;0.8379;0.8345;0.8347;0.8345;0.8345;0.8333;0.8348;0.8333;0.8337;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8331;0.8355;0.8331;0.8325;0.8591;0.8609;0.8591;0.8586;0.8333;0.8369;0.8333;0.8328;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8186;0.8238;0.8186;0.8194;0.8621;0.8696;0.8621;0.8627;0.8167;0.8484;0.8167;0.8214;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8254;0.8304;0.8254;0.8263;0.811;0.8175;0.811;0.8128;0.8167;0.8367;0.8167;0.8208;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.822;0.8274;0.822;0.823;0.8517;0.8543;0.8517;0.8526;0.8167;0.8356;0.8167;0.8204;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.8205;0.8254;0.8205;0.8214;0.8345;0.8485;0.8345;0.8356;0.8167;0.8356;0.8167;0.8204;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8227;0.8271;0.8227;0.8233;0.8179;0.8397;0.8179;0.8199;0.8167;0.8356;0.8167;0.8204;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8197;0.8247;0.8197;0.8206;0.8621;0.8689;0.8621;0.8626;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8186;0.824;0.8186;0.8195;0.8621;0.8647;0.8621;0.8629;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8216;0.8262;0.8216;0.8224;0.8454;0.8556;0.8454;0.8463;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
SVC;0.8216;0.8258;0.8216;0.8222;0.8385;0.8522;0.8385;0.8404;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.8189;0.8239;0.8189;0.8201;0.8625;0.864;0.8625;0.8626;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.8228;0.8287;0.8228;0.8238;0.8379;0.842;0.8379;0.8388;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
SVC;0.8178;0.8229;0.8178;0.8187;0.8625;0.8692;0.8625;0.8633;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
SVC;0.8167;0.8216;0.8167;0.8176;0.8724;0.8785;0.8724;0.8733;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
SVC;0.8217;0.8264;0.8217;0.8225;0.8414;0.8587;0.8414;0.8427;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
RandomForestClassifier;0.8672;0.8704;0.8672;0.8674;0.8655;0.8696;0.8655;0.8659;0.8167;0.8374;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
SVC;0.819;0.8227;0.819;0.8197;0.869;0.8848;0.869;0.8707;0.8167;0.8481;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
DecisionTreeClassifier;0.8565;0.8616;0.8565;0.8566;0.8793;0.8828;0.8793;0.8798;0.8167;0.8386;0.8167;0.8194;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8576;0.8638;0.8576;0.858;0.8483;0.8522;0.8483;0.8486;0.8167;0.8386;0.8167;0.8194;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8652;0.8698;0.8652;0.8656;0.8419;0.8432;0.8419;0.8423;0.8167;0.8396;0.8167;0.8193;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8641;0.8685;0.8641;0.8646;0.8483;0.855;0.8483;0.8495;0.8167;0.8396;0.8167;0.8193;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8622;0.8676;0.8622;0.8625;0.8724;0.8761;0.8724;0.8731;0.8167;0.8396;0.8167;0.8193;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8634;0.8676;0.8634;0.8638;0.8448;0.8508;0.8448;0.8447;0.8167;0.8396;0.8167;0.8193;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
RandomForestClassifier;0.8695;0.8736;0.8695;0.8699;0.8763;0.8801;0.8763;0.8765;0.8167;0.8287;0.8167;0.819;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
KNeighborsClassifier;0.8465;0.8478;0.8465;0.8462;0.8241;0.8437;0.8241;0.8238;0.8167;0.8287;0.8167;0.819;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8622;0.8671;0.8622;0.8623;0.8591;0.8631;0.8591;0.8602;0.8167;0.8319;0.8167;0.8187;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
SVC;0.8232;0.8271;0.8232;0.824;0.8241;0.8416;0.8241;0.8248;0.8167;0.8378;0.8167;0.8185;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 322};SVC(C=10, random_state=322)
MLPClassifier;0.8224;0.8282;0.8224;0.8232;0.8621;0.8679;0.8621;0.8631;0.8167;0.8285;0.8167;0.8184;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8197;0.8257;0.8197;0.8207;0.8966;0.8994;0.8966;0.8973;0.8167;0.8285;0.8167;0.8184;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
MLPClassifier;0.819;0.8245;0.819;0.8197;0.831;0.8323;0.831;0.8315;0.8167;0.8285;0.8167;0.8184;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8263;0.8322;0.8263;0.8273;0.8138;0.8168;0.8138;0.8149;0.8167;0.8285;0.8167;0.8184;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
SVC;0.819;0.8241;0.819;0.8197;0.831;0.835;0.831;0.8319;0.8167;0.8401;0.8167;0.8181;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 210};SVC(C=10, random_state=210)
KNeighborsClassifier;0.8434;0.8457;0.8434;0.8432;0.8763;0.8803;0.8763;0.8768;0.8167;0.8214;0.8167;0.8181;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8427;0.8485;0.8427;0.8424;0.8448;0.8499;0.8448;0.8451;0.8167;0.8214;0.8167;0.8181;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8645;0.8683;0.8645;0.8651;0.8483;0.8498;0.8483;0.8488;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
KNeighborsClassifier;0.8427;0.8477;0.8427;0.8425;0.8379;0.8399;0.8379;0.8383;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8695;0.8734;0.8695;0.8696;0.8522;0.8541;0.8522;0.8527;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
RandomForestClassifier;0.8691;0.8736;0.8691;0.8694;0.8897;0.8908;0.8897;0.8895;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 983};RandomForestClassifier(n_estimators=20, random_state=983)
RandomForestClassifier;0.8649;0.8684;0.8649;0.865;0.8793;0.882;0.8793;0.8799;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
RandomForestClassifier;0.8691;0.8724;0.8691;0.8695;0.869;0.8794;0.869;0.8693;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
RandomForestClassifier;0.8703;0.8739;0.8703;0.8703;0.8586;0.8615;0.8586;0.8594;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
RandomForestClassifier;0.8664;0.8698;0.8664;0.8666;0.8517;0.8551;0.8517;0.8524;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
RandomForestClassifier;0.8714;0.8745;0.8714;0.8715;0.8448;0.85;0.8448;0.8451;0.8167;0.8181;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 739};RandomForestClassifier(n_estimators=20, random_state=739)
KNeighborsClassifier;0.8431;0.848;0.8431;0.8422;0.8345;0.838;0.8345;0.8354;0.8167;0.8153;0.8167;0.8147;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.824;0.8287;0.824;0.8248;0.8276;0.8351;0.8276;0.828;0.8;0.8258;0.8;0.8049;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 912};SVC(C=10, random_state=912)
DecisionTreeClassifier;0.8584;0.8638;0.8584;0.859;0.8724;0.8776;0.8724;0.8731;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8572;0.8615;0.8572;0.8578;0.8935;0.8963;0.8935;0.8934;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8695;0.8737;0.8695;0.8699;0.8586;0.8626;0.8586;0.859;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8607;0.8665;0.8607;0.861;0.8586;0.86;0.8586;0.859;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8592;0.8643;0.8592;0.8595;0.8931;0.8935;0.8931;0.8932;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8595;0.8634;0.8595;0.8594;0.8625;0.8677;0.8625;0.8636;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8626;0.8674;0.8626;0.8628;0.8694;0.8767;0.8694;0.8702;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8511;0.8581;0.8511;0.8514;0.8828;0.884;0.8828;0.8822;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8614;0.8652;0.8614;0.8618;0.8483;0.8595;0.8483;0.8495;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8595;0.8647;0.8595;0.8599;0.8797;0.8843;0.8797;0.8802;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8584;0.8626;0.8584;0.8587;0.8724;0.8742;0.8724;0.8729;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 515};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=515)
DecisionTreeClassifier;0.8625;0.8676;0.8625;0.8629;0.8591;0.8615;0.8591;0.8599;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8652;0.8698;0.8652;0.8656;0.8454;0.8481;0.8454;0.8458;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8545;0.8598;0.8545;0.8549;0.8969;0.9013;0.8969;0.8975;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8572;0.8617;0.8572;0.8576;0.8866;0.887;0.8866;0.8863;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8573;0.8629;0.8573;0.8576;0.8897;0.8955;0.8897;0.8906;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8519;0.8563;0.8519;0.8523;0.8793;0.8801;0.8793;0.8794;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8599;0.8648;0.8599;0.8598;0.8586;0.8637;0.8586;0.8594;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8576;0.8625;0.8576;0.8582;0.8655;0.8678;0.8655;0.8661;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.863;0.8683;0.863;0.8633;0.8517;0.8579;0.8517;0.853;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8557;0.8607;0.8557;0.856;0.8759;0.8784;0.8759;0.8756;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
KNeighborsClassifier;0.8492;0.8531;0.8492;0.8493;0.8897;0.8918;0.8897;0.8903;0.8;0.8089;0.8;0.8023;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
MLPClassifier;0.8281;0.8333;0.8281;0.8288;0.8316;0.8356;0.8316;0.8326;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8228;0.8281;0.8228;0.8236;0.8793;0.882;0.8793;0.8795;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8285;0.8336;0.8285;0.8295;0.831;0.8388;0.831;0.8322;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8243;0.8308;0.8243;0.8252;0.8247;0.8386;0.8247;0.8257;0.8;0.8166;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8216;0.8272;0.8216;0.8226;0.8282;0.8295;0.8282;0.8287;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8247;0.8308;0.8247;0.8255;0.831;0.8357;0.831;0.8324;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
MLPClassifier;0.8193;0.824;0.8193;0.8201;0.8625;0.8636;0.8625;0.863;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
MLPClassifier;0.8224;0.8284;0.8224;0.8232;0.8655;0.8719;0.8655;0.8664;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
DecisionTreeClassifier;0.8572;0.8619;0.8572;0.8576;0.8862;0.8908;0.8862;0.8867;0.8;0.8416;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=328)
RandomForestClassifier;0.8721;0.8758;0.8721;0.8725;0.8316;0.8365;0.8316;0.8325;0.8;0.8109;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 7};RandomForestClassifier(n_estimators=20, random_state=7)
MLPClassifier;0.824;0.8302;0.824;0.8249;0.8345;0.8354;0.8345;0.8348;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
MLPClassifier;0.8262;0.8316;0.8262;0.8269;0.8488;0.8517;0.8488;0.8494;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8293;0.8347;0.8293;0.8302;0.7931;0.8058;0.7931;0.7956;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
KNeighborsClassifier;0.8507;0.855;0.8507;0.8499;0.8345;0.8371;0.8345;0.8342;0.8;0.8005;0.8;0.7999;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8293;0.8343;0.8293;0.83;0.8385;0.8447;0.8385;0.8399;0.8;0.8073;0.8;0.7994;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
KNeighborsClassifier;0.8465;0.8485;0.8465;0.8467;0.8144;0.8153;0.8144;0.8146;0.8;0.8028;0.8;0.7991;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.8576;0.8617;0.8576;0.8578;0.8655;0.8666;0.8655;0.8653;0.7833;0.8082;0.7833;0.7873;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8611;0.8654;0.8611;0.8615;0.8793;0.8854;0.8793;0.8805;0.7833;0.8082;0.7833;0.7873;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
KNeighborsClassifier;0.832;0.8341;0.832;0.8309;0.8724;0.8792;0.8724;0.8737;0.7833;0.7963;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8434;0.8462;0.8434;0.843;0.8763;0.8788;0.8763;0.8762;0.7833;0.8283;0.7833;0.7861;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8514;0.8539;0.8514;0.8513;0.8213;0.8292;0.8213;0.8226;0.7833;0.7887;0.7833;0.7851;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8561;0.8576;0.8561;0.8561;0.8138;0.8249;0.8138;0.816;0.7833;0.7887;0.7833;0.7851;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8266;0.8322;0.8266;0.8273;0.8241;0.8311;0.8241;0.825;0.7833;0.7972;0.7833;0.785;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8213;0.8259;0.8213;0.8222;0.8345;0.8388;0.8345;0.8358;0.7833;0.7972;0.7833;0.785;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8239;0.8294;0.8239;0.8248;0.8213;0.8277;0.8213;0.8224;0.7833;0.7972;0.7833;0.785;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
LogisticRegression;0.7921;0.7961;0.7921;0.7928;0.8247;0.8359;0.8247;0.8269;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
KNeighborsClassifier;0.8411;0.8447;0.8411;0.841;0.8454;0.8451;0.8454;0.8452;0.7833;0.7904;0.7833;0.7847;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.85;0.8551;0.85;0.8501;0.8655;0.8647;0.8655;0.8648;0.7833;0.799;0.7833;0.7846;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8247;0.8296;0.8247;0.8255;0.8034;0.8104;0.8034;0.805;0.7833;0.7905;0.7833;0.7838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8323;0.8383;0.8323;0.8333;0.7973;0.8023;0.7973;0.7983;0.7833;0.7905;0.7833;0.7838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
MLPClassifier;0.8255;0.831;0.8255;0.8265;0.8172;0.8241;0.8172;0.8183;0.7833;0.7905;0.7833;0.7838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8236;0.8303;0.8236;0.8243;0.8483;0.8479;0.8483;0.8481;0.7833;0.7905;0.7833;0.7838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8221;0.8275;0.8221;0.8227;0.8379;0.8471;0.8379;0.839;0.7833;0.7905;0.7833;0.7838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8316;0.8367;0.8316;0.8324;0.8034;0.8051;0.8034;0.804;0.7833;0.7905;0.7833;0.7838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8278;0.8319;0.8278;0.8285;0.8069;0.8205;0.8069;0.8095;0.7833;0.7917;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
MLPClassifier;0.8259;0.8315;0.8259;0.8268;0.8345;0.8391;0.8345;0.8358;0.7833;0.7917;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
KNeighborsClassifier;0.8423;0.8468;0.8423;0.8419;0.811;0.8107;0.811;0.8104;0.7833;0.7829;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8289;0.8318;0.8289;0.8279;0.8385;0.8402;0.8385;0.8386;0.7833;0.7829;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
LogisticRegression;0.7976;0.803;0.7976;0.7981;0.7897;0.7925;0.7897;0.7908;0.7833;0.7934;0.7833;0.7826;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.796;0.8011;0.796;0.7967;0.8103;0.8186;0.8103;0.8124;0.7833;0.7934;0.7833;0.7826;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
MLPClassifier;0.822;0.8273;0.822;0.8229;0.8419;0.8468;0.8419;0.8431;0.7833;0.7917;0.7833;0.782;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
KNeighborsClassifier;0.8354;0.8417;0.8354;0.8346;0.8655;0.8696;0.8655;0.8667;0.7667;0.818;0.7667;0.7707;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8542;0.8591;0.8542;0.8544;0.8414;0.8439;0.8414;0.8421;0.7667;0.7782;0.7667;0.7695;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8274;0.828;0.8274;0.826;0.8586;0.8618;0.8586;0.8593;0.7667;0.8001;0.7667;0.7695;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8365;0.8407;0.8365;0.8363;0.8144;0.8137;0.8144;0.814;0.7667;0.7759;0.7667;0.7692;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8534;0.8576;0.8534;0.8537;0.8586;0.8586;0.8586;0.8584;0.7667;0.7759;0.7667;0.7692;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8477;0.8496;0.8477;0.8474;0.831;0.8362;0.831;0.8322;0.7667;0.7874;0.7667;0.7688;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8481;0.852;0.8481;0.8475;0.8759;0.8802;0.8759;0.8759;0.7667;0.7696;0.7667;0.7678;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
LogisticRegression;0.7944;0.8;0.7944;0.7951;0.811;0.8186;0.811;0.8123;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7971;0.8021;0.7971;0.7978;0.8076;0.816;0.8076;0.8092;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.794;0.798;0.794;0.7949;0.8041;0.8132;0.8041;0.8054;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7987;0.8031;0.7987;0.7993;0.7862;0.7911;0.7862;0.7878;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.8017;0.8068;0.8017;0.8024;0.7517;0.7528;0.7517;0.7519;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7922;0.7961;0.7922;0.7925;0.8276;0.8333;0.8276;0.8295;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
KNeighborsClassifier;0.8454;0.8512;0.8454;0.8454;0.8724;0.8723;0.8724;0.8722;0.7667;0.7698;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
LogisticRegression;0.7907;0.7946;0.7907;0.7914;0.8414;0.843;0.8414;0.8419;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.8022;0.8068;0.8022;0.8029;0.7552;0.7638;0.7552;0.7577;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7945;0.7987;0.7945;0.7951;0.7828;0.7808;0.7828;0.7815;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7987;0.8041;0.7987;0.7997;0.7793;0.7789;0.7793;0.7791;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.793;0.7978;0.793;0.794;0.8172;0.8203;0.8172;0.8174;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7964;0.8018;0.7964;0.7975;0.7931;0.7933;0.7931;0.7931;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7949;0.8001;0.7949;0.7957;0.8241;0.8241;0.8241;0.8239;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7964;0.8012;0.7964;0.7974;0.8;0.8085;0.8;0.8013;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7949;0.8003;0.7949;0.7953;0.7931;0.7942;0.7931;0.7936;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7955;0.7998;0.7955;0.7962;0.8041;0.8156;0.8041;0.806;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7963;0.8017;0.7963;0.7972;0.8007;0.8026;0.8007;0.8014;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.8009;0.806;0.8009;0.8012;0.7457;0.7567;0.7457;0.7483;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 339, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=339)"
LogisticRegression;0.7991;0.8045;0.7991;0.7995;0.7793;0.7855;0.7793;0.7811;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.796;0.8011;0.796;0.7968;0.8069;0.8097;0.8069;0.808;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.7929;0.7976;0.7929;0.7938;0.8241;0.8277;0.8241;0.8251;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.801;0.8059;0.801;0.8018;0.7517;0.7571;0.7517;0.7526;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.7949;0.8001;0.7949;0.7957;0.8172;0.8183;0.8172;0.8175;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.7956;0.8004;0.7956;0.7964;0.7904;0.7957;0.7904;0.7918;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.799;0.8035;0.799;0.7998;0.7835;0.7856;0.7835;0.7842;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 827, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=827)"
LogisticRegression;0.7979;0.8032;0.7979;0.7989;0.7897;0.7909;0.7897;0.7902;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
LogisticRegression;0.7972;0.8017;0.7972;0.798;0.7759;0.7817;0.7759;0.7771;0.7667;0.7758;0.7667;0.7672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 588, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=588)"
MLPClassifier;0.8266;0.8326;0.8266;0.8273;0.8207;0.8246;0.8207;0.8219;0.7667;0.7761;0.7667;0.7667;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 608, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=608)
KNeighborsClassifier;0.8465;0.8503;0.8465;0.8466;0.8517;0.8605;0.8517;0.8534;0.75;0.7897;0.75;0.7542;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8393;0.8463;0.8393;0.8385;0.8448;0.8469;0.8448;0.8448;0.75;0.7583;0.75;0.7521;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8485;0.8545;0.8485;0.848;0.8414;0.8424;0.8414;0.841;0.7167;0.7163;0.7167;0.7145;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.8557;0.8595;0.8557;0.8555;0.7931;0.8072;0.7931;0.7874;0.6833;0.6953;0.6833;0.6823;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
