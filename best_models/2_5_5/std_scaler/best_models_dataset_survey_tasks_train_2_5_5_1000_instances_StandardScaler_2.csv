Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7872;0.7906;0.7872;0.7862;0.8345;0.8349;0.8345;0.8338;0.8;0.8296;0.8;0.8027;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8064;0.8178;0.8064;0.807;0.8414;0.8413;0.8414;0.8413;0.8;0.8109;0.8;0.8014;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8022;0.8045;0.8022;0.8021;0.8276;0.8269;0.8276;0.827;0.7833;0.8305;0.7833;0.7893;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=15)
KNeighborsClassifier;0.8037;0.8099;0.8037;0.8038;0.8172;0.8227;0.8172;0.8183;0.7833;0.7986;0.7833;0.7853;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8022;0.8058;0.8022;0.8021;0.8;0.8029;0.8;0.8004;0.7833;0.7986;0.7833;0.7853;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8002;0.8071;0.8002;0.8007;0.8076;0.8085;0.8076;0.8076;0.7833;0.8044;0.7833;0.7852;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8098;0.8119;0.8098;0.8098;0.7931;0.8044;0.7931;0.7939;0.7833;0.8212;0.7833;0.7844;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8128;0.8179;0.8128;0.8124;0.8316;0.8472;0.8316;0.8339;0.7667;0.8105;0.7667;0.7701;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7979;0.807;0.7979;0.7975;0.8345;0.8398;0.8345;0.8358;0.7667;0.7922;0.7667;0.7695;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8087;0.8121;0.8087;0.8086;0.8414;0.8439;0.8414;0.842;0.7667;0.7866;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7978;0.8044;0.7978;0.7972;0.811;0.8175;0.811;0.8128;0.7667;0.7999;0.7667;0.7689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8002;0.8029;0.8002;0.8004;0.8172;0.8177;0.8172;0.8174;0.7667;0.776;0.7667;0.7683;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7983;0.8061;0.7983;0.7991;0.8448;0.8505;0.8448;0.8461;0.75;0.788;0.75;0.755;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8139;0.8213;0.8139;0.814;0.8351;0.8359;0.8351;0.8351;0.75;0.8;0.75;0.7543;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8071;0.8112;0.8071;0.8073;0.8241;0.8342;0.8241;0.8252;0.75;0.7748;0.75;0.7521;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7978;0.8024;0.7978;0.798;0.8247;0.8255;0.8247;0.824;0.75;0.7748;0.75;0.7521;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8343;0.8392;0.8343;0.8351;0.8448;0.8443;0.8448;0.8444;0.75;0.7694;0.75;0.7519;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 615};RandomForestClassifier(n_estimators=10, random_state=615)
RandomForestClassifier;0.8404;0.8448;0.8404;0.841;0.8069;0.8096;0.8069;0.8078;0.75;0.7583;0.75;0.7501;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 601};RandomForestClassifier(n_estimators=10, random_state=601)
RandomForestClassifier;0.8366;0.8411;0.8366;0.8374;0.8345;0.8414;0.8345;0.8361;0.75;0.7583;0.75;0.7501;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 615};RandomForestClassifier(n_estimators=20, random_state=615)
MLPClassifier;0.8312;0.8353;0.8312;0.8318;0.8793;0.8874;0.8793;0.8809;0.75;0.7796;0.75;0.749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
KNeighborsClassifier;0.7937;0.8038;0.7937;0.7941;0.8172;0.8247;0.8172;0.8193;0.7333;0.7735;0.7333;0.7401;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7879;0.7912;0.7879;0.7878;0.8694;0.8789;0.8694;0.8707;0.7333;0.7907;0.7333;0.7394;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8048;0.8091;0.8048;0.805;0.8034;0.816;0.8034;0.8059;0.7333;0.7625;0.7333;0.738;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8117;0.8168;0.8117;0.8122;0.7931;0.8046;0.7931;0.795;0.7333;0.7684;0.7333;0.737;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8005;0.8058;0.8005;0.7997;0.8385;0.8442;0.8385;0.8401;0.7333;0.7684;0.7333;0.737;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8351;0.8404;0.8351;0.8362;0.8069;0.8096;0.8069;0.8078;0.7333;0.7551;0.7333;0.737;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 601};RandomForestClassifier(n_estimators=5, random_state=601)
RandomForestClassifier;0.8381;0.8429;0.8381;0.8389;0.8213;0.8236;0.8213;0.822;0.7333;0.7487;0.7333;0.7341;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 896};RandomForestClassifier(n_estimators=10, random_state=896)
MLPClassifier;0.8289;0.8339;0.8289;0.8292;0.8552;0.8655;0.8552;0.8568;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8347;0.8373;0.8347;0.8351;0.8172;0.8186;0.8172;0.8177;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8235;0.8294;0.8235;0.8239;0.8832;0.8839;0.8832;0.883;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8305;0.834;0.8305;0.831;0.8483;0.8503;0.8483;0.8485;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8392;0.8433;0.8392;0.8398;0.7835;0.7898;0.7835;0.7842;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8297;0.8336;0.8297;0.8303;0.8448;0.8457;0.8448;0.8449;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8311;0.8347;0.8311;0.8315;0.8316;0.8373;0.8316;0.833;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8327;0.837;0.8327;0.8334;0.8247;0.8257;0.8247;0.824;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8282;0.833;0.8282;0.8288;0.8621;0.8684;0.8621;0.8633;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8297;0.8353;0.8297;0.8306;0.831;0.8322;0.831;0.8314;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8293;0.8316;0.8293;0.8295;0.8414;0.8545;0.8414;0.8436;0.7333;0.7676;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
KNeighborsClassifier;0.7972;0.8037;0.7972;0.7972;0.8;0.8259;0.8;0.8011;0.7333;0.754;0.7333;0.7336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8289;0.8333;0.8289;0.8297;0.869;0.8687;0.869;0.8686;0.7333;0.7634;0.7333;0.7334;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
RandomForestClassifier;0.832;0.8385;0.832;0.8332;0.8517;0.8521;0.8517;0.8513;0.7333;0.7474;0.7333;0.7334;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 615};RandomForestClassifier(n_estimators=20, random_state=615)
MLPClassifier;0.8351;0.8395;0.8351;0.8358;0.8276;0.8303;0.8276;0.8277;0.7333;0.7616;0.7333;0.7324;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8327;0.8366;0.8327;0.8329;0.8379;0.8404;0.8379;0.8386;0.7333;0.7616;0.7333;0.7324;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8366;0.8409;0.8366;0.8371;0.8276;0.8345;0.8276;0.8291;0.7333;0.7616;0.7333;0.7324;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
KNeighborsClassifier;0.7999;0.8034;0.7999;0.7994;0.8172;0.8283;0.8172;0.8171;0.7167;0.7667;0.7167;0.7219;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
RandomForestClassifier;0.8358;0.8401;0.8358;0.8369;0.8276;0.8294;0.8276;0.8282;0.7167;0.7389;0.7167;0.7198;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 615};RandomForestClassifier(n_estimators=5, random_state=615)
RandomForestClassifier;0.8323;0.8368;0.8323;0.8331;0.8351;0.8403;0.8351;0.8363;0.7167;0.7552;0.7167;0.7194;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 615};RandomForestClassifier(n_estimators=20, random_state=615)
RandomForestClassifier;0.8305;0.8352;0.8305;0.8312;0.8759;0.8801;0.8759;0.8767;0.7167;0.7501;0.7167;0.7186;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.8354;0.8383;0.8354;0.8361;0.8241;0.8321;0.8241;0.8244;0.7167;0.7342;0.7167;0.7186;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
MLPClassifier;0.832;0.8361;0.832;0.8326;0.8276;0.8301;0.8276;0.8283;0.7167;0.7509;0.7167;0.7182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8305;0.8359;0.8305;0.8312;0.8276;0.8366;0.8276;0.8279;0.7167;0.7509;0.7167;0.7182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8228;0.8275;0.8228;0.8234;0.8862;0.8863;0.8862;0.8862;0.7167;0.7509;0.7167;0.7182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8346;0.8386;0.8346;0.8354;0.8144;0.8165;0.8144;0.8152;0.7167;0.7509;0.7167;0.7182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8339;0.8376;0.8339;0.8345;0.8517;0.8573;0.8517;0.8519;0.7167;0.7509;0.7167;0.7182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 124, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=124)
MLPClassifier;0.8347;0.8393;0.8347;0.8353;0.8483;0.851;0.8483;0.8482;0.7167;0.7509;0.7167;0.7182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
DecisionTreeClassifier;0.8171;0.8242;0.8171;0.8182;0.8793;0.8798;0.8793;0.8794;0.7167;0.724;0.7167;0.718;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
MLPClassifier;0.8312;0.8339;0.8312;0.8315;0.8345;0.8375;0.8345;0.835;0.7167;0.7557;0.7167;0.7179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
KNeighborsClassifier;0.8208;0.8247;0.8208;0.8212;0.7766;0.781;0.7766;0.778;0.7167;0.7666;0.7167;0.7176;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8338;0.8367;0.8338;0.8344;0.8076;0.8215;0.8076;0.8091;0.7167;0.7473;0.7167;0.7174;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8397;0.844;0.8397;0.8405;0.7828;0.7872;0.7828;0.7835;0.7167;0.7473;0.7167;0.7174;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
MLPClassifier;0.8289;0.8317;0.8289;0.8293;0.8488;0.853;0.8488;0.8494;0.7167;0.7473;0.7167;0.7174;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.8273;0.8297;0.8273;0.8277;0.8454;0.8445;0.8454;0.8447;0.7167;0.7473;0.7167;0.7174;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
MLPClassifier;0.832;0.8363;0.832;0.8326;0.8345;0.8366;0.8345;0.8341;0.7167;0.7408;0.7167;0.7172;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
KNeighborsClassifier;0.7933;0.7993;0.7933;0.7929;0.831;0.8393;0.831;0.8325;0.7167;0.7514;0.7167;0.7172;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8292;0.833;0.8292;0.8301;0.8729;0.8758;0.8729;0.8734;0.7167;0.7313;0.7167;0.7166;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.8385;0.8429;0.8385;0.8393;0.8103;0.8151;0.8103;0.8114;0.7167;0.7313;0.7167;0.7166;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.8277;0.833;0.8277;0.829;0.8729;0.8742;0.8729;0.8732;0.7167;0.7313;0.7167;0.7166;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.8389;0.8437;0.8389;0.8399;0.831;0.832;0.831;0.8313;0.7167;0.7349;0.7167;0.7162;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 615};RandomForestClassifier(n_estimators=20, random_state=615)
KNeighborsClassifier;0.8186;0.8232;0.8186;0.8193;0.8;0.8019;0.8;0.8006;0.7167;0.7409;0.7167;0.7159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.83;0.834;0.83;0.8305;0.8522;0.8577;0.8522;0.853;0.7167;0.7352;0.7167;0.7158;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 462, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=462)
DecisionTreeClassifier;0.8285;0.8337;0.8285;0.8296;0.8454;0.8483;0.8454;0.8454;0.7;0.7115;0.7;0.7028;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
RandomForestClassifier;0.8342;0.8377;0.8342;0.8351;0.8522;0.8579;0.8522;0.8534;0.7;0.7194;0.7;0.7025;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 615};RandomForestClassifier(n_estimators=5, random_state=615)
DecisionTreeClassifier;0.8339;0.84;0.8339;0.8349;0.7966;0.8095;0.7966;0.7987;0.7;0.7184;0.7;0.7024;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
RandomForestClassifier;0.8304;0.8344;0.8304;0.8314;0.8483;0.8551;0.8483;0.8484;0.7;0.7177;0.7;0.702;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.8393;0.843;0.8393;0.8399;0.8103;0.8183;0.8103;0.8111;0.7;0.7177;0.7;0.702;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
DecisionTreeClassifier;0.8293;0.8345;0.8293;0.8304;0.8103;0.8192;0.8103;0.8117;0.7;0.7328;0.7;0.7019;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
RandomForestClassifier;0.8308;0.8341;0.8308;0.8317;0.8276;0.8292;0.8276;0.8279;0.7;0.7221;0.7;0.7017;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.8361;0.8401;0.8361;0.8369;0.8247;0.8314;0.8247;0.826;0.7;0.7331;0.7;0.7017;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 896};RandomForestClassifier(n_estimators=10, random_state=896)
DecisionTreeClassifier;0.8304;0.8371;0.8304;0.832;0.8488;0.8507;0.8488;0.8483;0.7;0.7118;0.7;0.7017;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
RandomForestClassifier;0.8384;0.8435;0.8384;0.8393;0.8316;0.8361;0.8316;0.832;0.7;0.7221;0.7;0.7017;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 615};RandomForestClassifier(n_estimators=20, random_state=615)
MLPClassifier;0.8335;0.8375;0.8335;0.8341;0.8103;0.818;0.8103;0.8113;0.7;0.7289;0.7;0.7016;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 998, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=998)
RandomForestClassifier;0.8312;0.8356;0.8312;0.8323;0.831;0.8355;0.831;0.8318;0.7;0.7189;0.7;0.7013;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 615};RandomForestClassifier(n_estimators=20, random_state=615)
KNeighborsClassifier;0.8113;0.8181;0.8113;0.8117;0.8034;0.8116;0.8034;0.8044;0.7;0.7208;0.7;0.7009;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8205;0.8269;0.8205;0.8215;0.7862;0.795;0.7862;0.7861;0.7;0.7547;0.7;0.7008;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7994;0.8053;0.7994;0.7993;0.7698;0.799;0.7698;0.7679;0.7;0.7547;0.7;0.7008;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8347;0.8377;0.8347;0.8351;0.8241;0.8251;0.8241;0.8244;0.7;0.721;0.7;0.6993;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 896};RandomForestClassifier(n_estimators=10, random_state=896)
RandomForestClassifier;0.8335;0.8389;0.8335;0.8347;0.8241;0.8396;0.8241;0.8266;0.6833;0.7262;0.6833;0.6885;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 615};RandomForestClassifier(n_estimators=10, random_state=615)
RandomForestClassifier;0.8312;0.836;0.8312;0.832;0.8483;0.8483;0.8483;0.8483;0.6833;0.7075;0.6833;0.6885;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 896};RandomForestClassifier(n_estimators=10, random_state=896)
DecisionTreeClassifier;0.8293;0.8361;0.8293;0.8304;0.8138;0.8135;0.8138;0.8133;0.6833;0.7036;0.6833;0.6863;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
DecisionTreeClassifier;0.8266;0.8328;0.8266;0.8275;0.8552;0.8572;0.8552;0.8556;0.6833;0.7036;0.6833;0.6863;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
DecisionTreeClassifier;0.8231;0.83;0.8231;0.8247;0.8522;0.8543;0.8522;0.8525;0.6833;0.7036;0.6833;0.6863;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=223)
DecisionTreeClassifier;0.8308;0.8363;0.8308;0.8315;0.8454;0.847;0.8454;0.8459;0.6833;0.7036;0.6833;0.6863;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=223)
DecisionTreeClassifier;0.8289;0.8354;0.8289;0.8301;0.7869;0.7917;0.7869;0.7866;0.6833;0.7036;0.6833;0.6863;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=381)
DecisionTreeClassifier;0.8243;0.8303;0.8243;0.8254;0.8724;0.8776;0.8724;0.8727;0.6833;0.7036;0.6833;0.6863;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
DecisionTreeClassifier;0.8239;0.8309;0.8239;0.8252;0.8069;0.8129;0.8069;0.8078;0.6833;0.6899;0.6833;0.6854;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=223)
RandomForestClassifier;0.8312;0.8357;0.8312;0.8323;0.8414;0.8417;0.8414;0.8415;0.6833;0.7016;0.6833;0.6852;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
DecisionTreeClassifier;0.8244;0.831;0.8244;0.8255;0.8207;0.8261;0.8207;0.8208;0.6833;0.7045;0.6833;0.6846;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=223)
KNeighborsClassifier;0.8075;0.8129;0.8075;0.807;0.7759;0.777;0.7759;0.7761;0.6833;0.6993;0.6833;0.6843;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
SVC;0.7837;0.794;0.7837;0.785;0.8797;0.8815;0.8797;0.8798;0.6833;0.7012;0.6833;0.6829;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7913;0.802;0.7913;0.7927;0.8488;0.8516;0.8488;0.8484;0.6833;0.7012;0.6833;0.6829;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
RandomForestClassifier;0.8342;0.8381;0.8342;0.8349;0.8316;0.8366;0.8316;0.833;0.6667;0.7065;0.6667;0.6721;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.8335;0.8379;0.8335;0.8344;0.8448;0.8465;0.8448;0.8452;0.6667;0.6901;0.6667;0.6718;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 601};RandomForestClassifier(n_estimators=20, random_state=601)
RandomForestClassifier;0.8293;0.8343;0.8293;0.8302;0.8345;0.8452;0.8345;0.8353;0.6667;0.6894;0.6667;0.6714;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.837;0.8424;0.837;0.8379;0.8241;0.8307;0.8241;0.825;0.6667;0.6917;0.6667;0.6701;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 601};RandomForestClassifier(n_estimators=10, random_state=601)
DecisionTreeClassifier;0.8278;0.8355;0.8278;0.829;0.8069;0.8082;0.8069;0.807;0.6667;0.6889;0.6667;0.6698;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
DecisionTreeClassifier;0.8281;0.8345;0.8281;0.8295;0.831;0.8344;0.831;0.832;0.6667;0.6889;0.6667;0.6698;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=279)
DecisionTreeClassifier;0.8255;0.832;0.8255;0.8265;0.8517;0.857;0.8517;0.8525;0.6667;0.6889;0.6667;0.6698;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=381)
DecisionTreeClassifier;0.8213;0.8286;0.8213;0.8226;0.8655;0.8668;0.8655;0.8654;0.6667;0.6889;0.6667;0.6698;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=381)
DecisionTreeClassifier;0.8274;0.8336;0.8274;0.8286;0.8345;0.8373;0.8345;0.835;0.6667;0.6889;0.6667;0.6698;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=223)
DecisionTreeClassifier;0.8213;0.8264;0.8213;0.8221;0.8552;0.8567;0.8552;0.8555;0.6667;0.6889;0.6667;0.6698;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=223)
DecisionTreeClassifier;0.8228;0.8296;0.8228;0.8241;0.8621;0.862;0.8621;0.862;0.6667;0.6801;0.6667;0.6692;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=381)
SVC;0.7871;0.7973;0.7871;0.7878;0.8454;0.8476;0.8454;0.846;0.6667;0.6938;0.6667;0.6674;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7949;0.8066;0.7949;0.7961;0.8379;0.8426;0.8379;0.8388;0.6667;0.6938;0.6667;0.6674;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
DecisionTreeClassifier;0.8301;0.8357;0.8301;0.831;0.8241;0.8283;0.8241;0.8251;0.6667;0.6924;0.6667;0.667;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=223)
DecisionTreeClassifier;0.8258;0.8327;0.8258;0.8269;0.8282;0.8329;0.8282;0.8288;0.65;0.6743;0.65;0.6555;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=223)
RandomForestClassifier;0.8316;0.8355;0.8316;0.8326;0.8213;0.8231;0.8213;0.8219;0.65;0.6756;0.65;0.655;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
DecisionTreeClassifier;0.8246;0.8301;0.8246;0.8257;0.8316;0.8324;0.8316;0.8318;0.65;0.6738;0.65;0.6549;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=279)
DecisionTreeClassifier;0.8282;0.8347;0.8282;0.8295;0.8241;0.8258;0.8241;0.8243;0.65;0.6738;0.65;0.6549;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=223)
DecisionTreeClassifier;0.8347;0.8404;0.8347;0.8356;0.8241;0.825;0.8241;0.8245;0.65;0.6742;0.65;0.653;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=381)
DecisionTreeClassifier;0.8236;0.8302;0.8236;0.8247;0.8379;0.8374;0.8379;0.8374;0.65;0.6578;0.65;0.6513;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 223};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=223)
SVC;0.7922;0.8031;0.7922;0.7934;0.8138;0.8231;0.8138;0.8149;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7852;0.795;0.7852;0.7864;0.8213;0.8249;0.8213;0.8208;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7872;0.8015;0.7872;0.7883;0.8034;0.81;0.8034;0.8032;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7837;0.796;0.7837;0.7842;0.8282;0.8419;0.8282;0.8294;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7869;0.7986;0.7869;0.7883;0.8379;0.8384;0.8379;0.8381;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7917;0.8015;0.7917;0.7927;0.811;0.823;0.811;0.8128;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7922;0.8017;0.7922;0.7935;0.8034;0.8131;0.8034;0.8051;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7898;0.8011;0.7898;0.7908;0.8488;0.8537;0.8488;0.8497;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
SVC;0.7895;0.7988;0.7895;0.7907;0.831;0.8398;0.831;0.8323;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7933;0.8043;0.7933;0.7948;0.8034;0.8104;0.8034;0.8041;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7918;0.803;0.7918;0.793;0.8276;0.8332;0.8276;0.828;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7972;0.8072;0.7972;0.7986;0.8103;0.8256;0.8103;0.8107;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.783;0.7951;0.783;0.7839;0.8759;0.884;0.8759;0.8768;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7911;0.7999;0.7911;0.7919;0.8172;0.827;0.8172;0.8173;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7902;0.7995;0.7902;0.7913;0.8179;0.8334;0.8179;0.8181;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7872;0.7984;0.7872;0.7881;0.8517;0.8522;0.8517;0.8519;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7933;0.8039;0.7933;0.7947;0.8103;0.8139;0.8103;0.8112;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
SVC;0.791;0.8022;0.791;0.7923;0.8552;0.8635;0.8552;0.8567;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
SVC;0.7903;0.8008;0.7903;0.7913;0.8138;0.8237;0.8138;0.8146;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
SVC;0.7926;0.8024;0.7926;0.7934;0.8172;0.8206;0.8172;0.8169;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
SVC;0.788;0.797;0.788;0.7895;0.8586;0.8653;0.8586;0.858;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
SVC;0.7876;0.797;0.7876;0.7888;0.8172;0.8287;0.8172;0.818;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
SVC;0.7777;0.7937;0.7777;0.777;0.8241;0.8313;0.8241;0.8256;0.65;0.6679;0.65;0.6485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
DecisionTreeClassifier;0.8243;0.8303;0.8243;0.8252;0.8488;0.8499;0.8488;0.849;0.6333;0.6767;0.6333;0.6409;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 279};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=279)
DecisionTreeClassifier;0.8285;0.8348;0.8285;0.8296;0.8179;0.8334;0.8179;0.8206;0.6333;0.6806;0.6333;0.6381;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
DecisionTreeClassifier;0.8324;0.8386;0.8324;0.8337;0.7862;0.7917;0.7862;0.7873;0.6333;0.6433;0.6333;0.6358;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
DecisionTreeClassifier;0.8362;0.8426;0.8362;0.8377;0.8069;0.8086;0.8069;0.8065;0.6333;0.6423;0.6333;0.6344;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=381)
SVC;0.7819;0.793;0.7819;0.7831;0.869;0.872;0.869;0.8692;0.6333;0.6532;0.6333;0.631;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 161};SVC(C=10, random_state=161)
SVC;0.7861;0.7967;0.7861;0.787;0.8552;0.8583;0.8552;0.8552;0.6167;0.6367;0.6167;0.6193;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 522};SVC(C=10, random_state=522)
SVC;0.7902;0.8003;0.7902;0.7913;0.8316;0.8407;0.8316;0.832;0.6167;0.6367;0.6167;0.6193;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 647};SVC(C=10, random_state=647)
LogisticRegression;0.7042;0.7228;0.7042;0.7038;0.669;0.6847;0.669;0.668;0.5833;0.6046;0.5833;0.5831;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.6931;0.7122;0.6931;0.6926;0.7379;0.7494;0.7379;0.7369;0.5833;0.6046;0.5833;0.5831;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.7015;0.7198;0.7015;0.7009;0.6966;0.7184;0.6966;0.6966;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.6988;0.7173;0.6988;0.6984;0.7034;0.7239;0.7034;0.7035;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.6975;0.7162;0.6975;0.697;0.732;0.7528;0.732;0.7317;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.7065;0.7231;0.7065;0.7052;0.6517;0.679;0.6517;0.6542;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7004;0.7187;0.7004;0.6994;0.6828;0.7118;0.6828;0.6805;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.703;0.7217;0.703;0.703;0.6759;0.6939;0.6759;0.6689;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.7018;0.72;0.7018;0.7019;0.6942;0.722;0.6942;0.6881;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7026;0.7236;0.7026;0.7019;0.6931;0.7011;0.6931;0.6932;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.7;0.7197;0.7;0.6993;0.7483;0.7553;0.7483;0.748;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7018;0.7177;0.7018;0.701;0.6942;0.716;0.6942;0.6913;0.5833;0.5988;0.5833;0.582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.6977;0.718;0.6977;0.6974;0.7069;0.7173;0.7069;0.705;0.5667;0.5864;0.5667;0.5679;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.6933;0.7139;0.6933;0.6928;0.7251;0.745;0.7251;0.724;0.5667;0.5864;0.5667;0.5679;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.701;0.7189;0.701;0.7004;0.7079;0.7296;0.7079;0.7093;0.5667;0.5864;0.5667;0.5679;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.6991;0.7171;0.6991;0.6985;0.7216;0.7433;0.7216;0.7228;0.5667;0.5864;0.5667;0.5679;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7038;0.7241;0.7038;0.7035;0.6552;0.6698;0.6552;0.6527;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.6957;0.7144;0.6957;0.6947;0.731;0.7492;0.731;0.7336;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.7023;0.7223;0.7023;0.701;0.6724;0.6834;0.6724;0.6744;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.6965;0.7163;0.6965;0.6962;0.6828;0.713;0.6828;0.6853;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.6996;0.7192;0.6996;0.6987;0.7103;0.7282;0.7103;0.7117;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.701;0.7197;0.701;0.7007;0.7079;0.7293;0.7079;0.7063;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 336, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=336)"
LogisticRegression;0.7002;0.7179;0.7002;0.6999;0.7045;0.7266;0.7045;0.7006;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.6958;0.7154;0.6958;0.6956;0.7103;0.7238;0.7103;0.7066;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.6989;0.7197;0.6989;0.6977;0.7103;0.731;0.7103;0.7093;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7023;0.7209;0.7023;0.7013;0.6897;0.7165;0.6897;0.6869;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.6973;0.7174;0.6973;0.6966;0.6828;0.6972;0.6828;0.6846;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7;0.7212;0.7;0.6994;0.6759;0.6897;0.6759;0.6746;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.6996;0.7174;0.6996;0.6984;0.7034;0.7226;0.7034;0.7064;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
LogisticRegression;0.6952;0.7138;0.6952;0.6943;0.7182;0.7363;0.7182;0.7196;0.5667;0.5819;0.5667;0.5669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 749, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=749)"
