Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9198;0.9233;0.9198;0.9197;0.9444;0.9498;0.9444;0.9447;0.85;0.8591;0.85;0.8495;0.9697;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.9243;0.9278;0.9243;0.9244;0.9375;0.9377;0.9375;0.9373;0.85;0.8591;0.85;0.8495;0.9734;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9228;0.926;0.9228;0.9229;0.9236;0.9259;0.9236;0.9228;0.85;0.8591;0.85;0.8495;0.9722;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9313;0.9324;0.9313;0.9312;0.9167;0.9165;0.9167;0.9161;0.85;0.858;0.85;0.8492;0.974;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
RandomForestClassifier;0.9243;0.9254;0.9243;0.9244;0.9653;0.9668;0.9653;0.9651;0.85;0.8724;0.85;0.8487;0.9852;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 493};RandomForestClassifier(n_estimators=10, random_state=493)
RandomForestClassifier;0.9259;0.929;0.9259;0.9259;0.9167;0.9204;0.9167;0.9158;0.85;0.8644;0.85;0.8481;0.9869;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 544};RandomForestClassifier(n_estimators=20, random_state=544)
RandomForestClassifier;0.9352;0.9365;0.9352;0.9352;0.9306;0.9304;0.9306;0.9304;0.85;0.8644;0.85;0.8481;0.9873;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 493};RandomForestClassifier(n_estimators=5, random_state=493)
DecisionTreeClassifier;0.9306;0.9323;0.9306;0.9305;0.9375;0.9371;0.9375;0.9371;0.8333;0.8446;0.8333;0.834;0.9731;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.9282;0.9291;0.9282;0.928;0.9236;0.9242;0.9236;0.9234;0.8333;0.8446;0.8333;0.834;0.9726;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.932;0.9344;0.932;0.9322;0.8958;0.8964;0.8958;0.8943;0.8333;0.8446;0.8333;0.834;0.9727;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9298;0.9315;0.9298;0.9299;0.9653;0.9651;0.9653;0.9651;0.8333;0.8458;0.8333;0.8338;0.9731;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9275;0.9311;0.9275;0.9273;0.9236;0.9242;0.9236;0.9234;0.8333;0.8458;0.8333;0.8338;0.972;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.9221;0.924;0.9221;0.9222;0.9444;0.945;0.9444;0.9443;0.8333;0.8458;0.8333;0.8338;0.9734;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.9259;0.9305;0.9259;0.9262;0.9097;0.9157;0.9097;0.91;0.8333;0.8458;0.8333;0.8338;0.9751;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9182;0.9215;0.9182;0.9183;0.9167;0.9172;0.9167;0.9166;0.8333;0.8383;0.8333;0.8327;0.9685;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.9251;0.9272;0.9251;0.9252;0.9375;0.9394;0.9375;0.937;0.8333;0.8383;0.8333;0.8327;0.9712;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
RandomForestClassifier;0.9313;0.9331;0.9313;0.9313;0.9444;0.9449;0.9444;0.9444;0.8333;0.8468;0.8333;0.8321;0.9867;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 493};RandomForestClassifier(n_estimators=10, random_state=493)
RandomForestClassifier;0.9329;0.934;0.9329;0.9327;0.9167;0.9188;0.9167;0.9161;0.8333;0.8468;0.8333;0.8321;0.987;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 544};RandomForestClassifier(n_estimators=5, random_state=544)
RandomForestClassifier;0.9291;0.9312;0.9291;0.9291;0.9028;0.9049;0.9028;0.9034;0.8333;0.8468;0.8333;0.8321;0.985;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 345};RandomForestClassifier(n_estimators=20, random_state=345)
RandomForestClassifier;0.9244;0.9276;0.9244;0.9245;0.9236;0.9263;0.9236;0.9225;0.8333;0.8417;0.8333;0.832;0.9875;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 345};RandomForestClassifier(n_estimators=5, random_state=345)
DecisionTreeClassifier;0.9298;0.9319;0.9298;0.9296;0.9514;0.9534;0.9514;0.9513;0.8333;0.8447;0.8333;0.8315;0.9732;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.9267;0.9295;0.9267;0.9265;0.9028;0.9143;0.9028;0.9016;0.8167;0.8234;0.8167;0.8178;0.9709;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.9228;0.9262;0.9228;0.9225;0.9306;0.937;0.9306;0.9308;0.8167;0.8238;0.8167;0.8172;0.9743;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.9267;0.9298;0.9267;0.9267;0.9167;0.9196;0.9167;0.9167;0.8167;0.8238;0.8167;0.8172;0.9733;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9298;0.9302;0.9298;0.9296;0.9375;0.9444;0.9375;0.9381;0.8167;0.8238;0.8167;0.8172;0.9723;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9251;0.9309;0.9251;0.9255;0.9167;0.9222;0.9167;0.9167;0.8167;0.8238;0.8167;0.8172;0.971;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.9236;0.9274;0.9236;0.9234;0.9167;0.9179;0.9167;0.9164;0.8167;0.8238;0.8167;0.8172;0.9725;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
DecisionTreeClassifier;0.9205;0.9237;0.9205;0.9203;0.9444;0.9456;0.9444;0.9444;0.8167;0.8223;0.8167;0.8169;0.9713;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
RandomForestClassifier;0.9221;0.9262;0.9221;0.9222;0.9444;0.9447;0.9444;0.9444;0.8167;0.8344;0.8167;0.8167;0.9868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 345};RandomForestClassifier(n_estimators=20, random_state=345)
DecisionTreeClassifier;0.919;0.9226;0.919;0.9187;0.9306;0.9358;0.9306;0.9312;0.8167;0.8187;0.8167;0.8163;0.9688;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 550};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=550)
RandomForestClassifier;0.926;0.9268;0.926;0.926;0.9375;0.9391;0.9375;0.9374;0.8167;0.8302;0.8167;0.8159;0.9879;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 345};RandomForestClassifier(n_estimators=20, random_state=345)
RandomForestClassifier;0.9267;0.9285;0.9267;0.9268;0.9375;0.9386;0.9375;0.9375;0.8167;0.8302;0.8167;0.8159;0.9865;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 345};RandomForestClassifier(n_estimators=20, random_state=345)
RandomForestClassifier;0.929;0.9305;0.929;0.929;0.9653;0.9655;0.9653;0.9651;0.8167;0.8302;0.8167;0.8159;0.9855;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 544};RandomForestClassifier(n_estimators=10, random_state=544)
RandomForestClassifier;0.9337;0.9356;0.9337;0.9337;0.9097;0.9115;0.9097;0.9102;0.8167;0.8238;0.8167;0.8155;0.9873;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 544};RandomForestClassifier(n_estimators=20, random_state=544)
RandomForestClassifier;0.9252;0.9266;0.9252;0.9251;0.9444;0.9452;0.9444;0.9442;0.8167;0.8354;0.8167;0.8155;0.9857;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 544};RandomForestClassifier(n_estimators=20, random_state=544)
MLPClassifier;0.8665;0.874;0.8665;0.867;0.9236;0.9279;0.9236;0.9238;0.8167;0.8172;0.8167;0.8155;0.973;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
DecisionTreeClassifier;0.9306;0.9332;0.9306;0.9307;0.9514;0.9537;0.9514;0.9516;0.8167;0.822;0.8167;0.8148;0.9671;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.9259;0.9291;0.9259;0.9259;0.9028;0.9118;0.9028;0.9044;0.8167;0.822;0.8167;0.8148;0.9738;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
RandomForestClassifier;0.9282;0.9292;0.9282;0.928;0.9375;0.9374;0.9375;0.9373;0.8167;0.822;0.8167;0.8148;0.987;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 493};RandomForestClassifier(n_estimators=5, random_state=493)
RandomForestClassifier;0.9313;0.9328;0.9313;0.9314;0.8958;0.8973;0.8958;0.8957;0.8167;0.829;0.8167;0.8147;0.9875;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 493};RandomForestClassifier(n_estimators=20, random_state=493)
DecisionTreeClassifier;0.9298;0.9326;0.9298;0.9298;0.9167;0.9198;0.9167;0.9158;0.8;0.8093;0.8;0.8017;0.9709;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
DecisionTreeClassifier;0.9213;0.923;0.9213;0.9213;0.9375;0.9419;0.9375;0.9369;0.8;0.8109;0.8;0.8014;0.9713;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
RandomForestClassifier;0.9275;0.9287;0.9275;0.9274;0.9306;0.9301;0.9306;0.9303;0.8;0.8022;0.8;0.8008;0.9872;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 345};RandomForestClassifier(n_estimators=5, random_state=345)
DecisionTreeClassifier;0.9336;0.9355;0.9336;0.9338;0.9236;0.9234;0.9236;0.9235;0.8;0.8171;0.8;0.8007;0.9783;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
RandomForestClassifier;0.9267;0.9291;0.9267;0.927;0.9306;0.931;0.9306;0.9307;0.8;0.8111;0.8;0.8002;0.9869;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 345};RandomForestClassifier(n_estimators=20, random_state=345)
KNeighborsClassifier;0.9235;0.9264;0.9235;0.9234;0.8819;0.8848;0.8819;0.8829;0.8;0.8144;0.8;0.7997;0.9776;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.9283;0.9299;0.9283;0.9281;0.9306;0.9326;0.9306;0.9302;0.8;0.8151;0.8;0.7996;0.9881;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 345};RandomForestClassifier(n_estimators=10, random_state=345)
RandomForestClassifier;0.9267;0.9291;0.9267;0.927;0.8889;0.9057;0.8889;0.8893;0.8;0.8079;0.8;0.7992;0.9862;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 544};RandomForestClassifier(n_estimators=20, random_state=544)
DecisionTreeClassifier;0.9259;0.9286;0.9259;0.9259;0.9236;0.9253;0.9236;0.9226;0.8;0.8079;0.8;0.7992;0.9731;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
RandomForestClassifier;0.9297;0.9317;0.9297;0.9299;0.9306;0.9311;0.9306;0.9305;0.8;0.8068;0.8;0.7989;0.9881;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 493};RandomForestClassifier(n_estimators=5, random_state=493)
RandomForestClassifier;0.9259;0.9277;0.9259;0.9254;0.9236;0.9252;0.9236;0.9239;0.8;0.8068;0.8;0.7989;0.9845;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 493};RandomForestClassifier(n_estimators=20, random_state=493)
KNeighborsClassifier;0.9212;0.9239;0.9212;0.9211;0.8958;0.8967;0.8958;0.8962;0.8;0.8026;0.8;0.7989;0.9733;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9283;0.9297;0.9283;0.9284;0.9375;0.9379;0.9375;0.9376;0.8;0.8068;0.8;0.7989;0.9866;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 345};RandomForestClassifier(n_estimators=20, random_state=345)
MLPClassifier;0.8651;0.8726;0.8651;0.8654;0.9514;0.9553;0.9514;0.9516;0.8;0.8018;0.8;0.7986;0.9719;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
KNeighborsClassifier;0.9105;0.9146;0.9105;0.9103;0.9236;0.9232;0.9236;0.9233;0.8;0.8019;0.8;0.7985;0.9786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9251;0.9265;0.9251;0.925;0.9236;0.9242;0.9236;0.9234;0.8;0.8065;0.8;0.7985;0.9852;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 345};RandomForestClassifier(n_estimators=10, random_state=345)
KNeighborsClassifier;0.9112;0.9145;0.9112;0.911;0.9167;0.9174;0.9167;0.9169;0.8;0.8012;0.8;0.7981;0.9692;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9259;0.9278;0.9259;0.9259;0.9514;0.9519;0.9514;0.9515;0.8;0.8012;0.8;0.7981;0.9871;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 493};RandomForestClassifier(n_estimators=20, random_state=493)
RandomForestClassifier;0.9251;0.9279;0.9251;0.9252;0.8958;0.9107;0.8958;0.8962;0.8;0.8122;0.8;0.7979;0.9888;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 493};RandomForestClassifier(n_estimators=10, random_state=493)
MLPClassifier;0.8704;0.8784;0.8704;0.8711;0.9306;0.9404;0.9306;0.93;0.8;0.813;0.8;0.7978;0.9747;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
DecisionTreeClassifier;0.9259;0.9278;0.9259;0.9258;0.9097;0.9094;0.9097;0.9083;0.7833;0.7904;0.7833;0.7847;0.9734;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
MLPClassifier;0.868;0.8757;0.868;0.869;0.9306;0.9358;0.9306;0.9315;0.7833;0.7887;0.7833;0.7847;0.9741;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
RandomForestClassifier;0.926;0.9278;0.926;0.9261;0.9375;0.9412;0.9375;0.9374;0.7833;0.7934;0.7833;0.7837;0.9878;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 544};RandomForestClassifier(n_estimators=20, random_state=544)
MLPClassifier;0.8673;0.8747;0.8673;0.868;0.9306;0.9334;0.9306;0.9305;0.7833;0.7944;0.7833;0.7835;0.9725;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
DecisionTreeClassifier;0.9259;0.9275;0.9259;0.9259;0.9653;0.9658;0.9653;0.965;0.7833;0.7944;0.7833;0.7835;0.9718;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 362};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=362)
KNeighborsClassifier;0.9144;0.9174;0.9144;0.9144;0.9097;0.9106;0.9097;0.9093;0.7833;0.8011;0.7833;0.7833;0.9751;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8673;0.8772;0.8673;0.8682;0.9097;0.9162;0.9097;0.9108;0.7833;0.7873;0.7833;0.7831;0.9755;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
KNeighborsClassifier;0.9075;0.9086;0.9075;0.9069;0.9375;0.9394;0.9375;0.938;0.7833;0.7829;0.7833;0.7828;0.9756;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.905;0.9091;0.905;0.9051;0.9375;0.9402;0.9375;0.9374;0.7833;0.7829;0.7833;0.7828;0.9736;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9074;0.9108;0.9074;0.9071;0.9097;0.9142;0.9097;0.9108;0.7833;0.7829;0.7833;0.7828;0.9757;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9151;0.9176;0.9151;0.9146;0.9028;0.9033;0.9028;0.9028;0.7833;0.7829;0.7833;0.7828;0.9746;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.919;0.922;0.919;0.9188;0.9028;0.9054;0.9028;0.9027;0.7833;0.7829;0.7833;0.7828;0.9738;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9174;0.9203;0.9174;0.9171;0.9028;0.9064;0.9028;0.9032;0.7833;0.7829;0.7833;0.7828;0.9752;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9074;0.9125;0.9074;0.9065;0.9306;0.933;0.9306;0.9305;0.7833;0.7829;0.7833;0.7828;0.9746;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9143;0.9175;0.9143;0.9141;0.9236;0.9298;0.9236;0.9236;0.7833;0.7829;0.7833;0.7828;0.9732;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9051;0.9083;0.9051;0.9051;0.9167;0.9184;0.9167;0.9162;0.7833;0.7829;0.7833;0.7828;0.9749;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.9267;0.9296;0.9267;0.9266;0.9097;0.9102;0.9097;0.9097;0.7833;0.783;0.7833;0.7828;0.988;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 544};RandomForestClassifier(n_estimators=5, random_state=544)
KNeighborsClassifier;0.9182;0.9211;0.9182;0.9173;0.9236;0.9284;0.9236;0.9243;0.7833;0.7829;0.7833;0.7828;0.975;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.8757;0.8824;0.8757;0.8767;0.9028;0.9025;0.9028;0.9025;0.7833;0.7868;0.7833;0.7826;0.9757;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
RandomForestClassifier;0.9221;0.9243;0.9221;0.922;0.9167;0.9164;0.9167;0.9164;0.7833;0.7868;0.7833;0.7826;0.9866;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 544};RandomForestClassifier(n_estimators=20, random_state=544)
KNeighborsClassifier;0.9058;0.9093;0.9058;0.9059;0.9236;0.9245;0.9236;0.9236;0.7833;0.7868;0.7833;0.7826;0.9758;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8704;0.8768;0.8704;0.8711;0.9306;0.9324;0.9306;0.9306;0.7833;0.7861;0.7833;0.7823;0.9739;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
KNeighborsClassifier;0.9144;0.9191;0.9144;0.9142;0.9375;0.9376;0.9375;0.9371;0.7833;0.7906;0.7833;0.7822;0.9748;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9205;0.9221;0.9205;0.9205;0.9514;0.9518;0.9514;0.9515;0.7833;0.7853;0.7833;0.7819;0.9858;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 544};RandomForestClassifier(n_estimators=20, random_state=544)
MLPClassifier;0.8742;0.8829;0.8742;0.8752;0.9097;0.9226;0.9097;0.9102;0.7667;0.776;0.7667;0.7683;0.9738;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
MLPClassifier;0.872;0.8796;0.872;0.8725;0.8958;0.9032;0.8958;0.8941;0.7667;0.7711;0.7667;0.768;0.9749;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.8673;0.8741;0.8673;0.8681;0.9444;0.9497;0.9444;0.945;0.7667;0.7718;0.7667;0.7672;0.973;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.8688;0.8771;0.8688;0.8696;0.9028;0.9066;0.9028;0.9034;0.7667;0.7718;0.7667;0.7672;0.9738;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.8619;0.87;0.8619;0.8627;0.9653;0.9655;0.9653;0.9652;0.7667;0.7718;0.7667;0.7672;0.9726;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.8642;0.8728;0.8642;0.8649;0.9583;0.9591;0.9583;0.9585;0.7667;0.7702;0.7667;0.7671;0.9733;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
KNeighborsClassifier;0.9112;0.9155;0.9112;0.911;0.9167;0.9228;0.9167;0.9161;0.7667;0.768;0.7667;0.767;0.9748;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9097;0.9138;0.9097;0.9092;0.8958;0.9127;0.8958;0.8962;0.7667;0.768;0.7667;0.767;0.9783;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
SVC;0.875;0.8832;0.875;0.8755;0.8681;0.8681;0.8681;0.8676;0.7667;0.7679;0.7667;0.767;0.9471;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
MLPClassifier;0.865;0.8745;0.865;0.8653;0.9167;0.9203;0.9167;0.9172;0.7667;0.7667;0.7667;0.7667;0.9739;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
KNeighborsClassifier;0.9174;0.9216;0.9174;0.9171;0.9028;0.9086;0.9028;0.9041;0.7667;0.7667;0.7667;0.7667;0.9781;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8672;0.876;0.8672;0.8677;0.9097;0.9122;0.9097;0.9091;0.7667;0.7709;0.7667;0.7664;0.9739;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
MLPClassifier;0.8619;0.8695;0.8619;0.8624;0.9722;0.9728;0.9722;0.9722;0.7667;0.7684;0.7667;0.7662;0.9735;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
KNeighborsClassifier;0.9081;0.9119;0.9081;0.908;0.9653;0.9654;0.9653;0.9651;0.7667;0.7702;0.7667;0.766;0.977;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9097;0.9122;0.9097;0.9093;0.8681;0.8875;0.8681;0.8683;0.7667;0.7672;0.7667;0.7659;0.9768;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8781;0.8841;0.8781;0.8784;0.8889;0.8905;0.8889;0.8887;0.7667;0.7672;0.7667;0.7659;0.9746;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
KNeighborsClassifier;0.912;0.9164;0.912;0.9116;0.9167;0.9246;0.9167;0.9174;0.7667;0.7709;0.7667;0.7658;0.972;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9097;0.9133;0.9097;0.9092;0.9514;0.9537;0.9514;0.9516;0.7667;0.7709;0.7667;0.7658;0.9773;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9143;0.9165;0.9143;0.914;0.9444;0.947;0.9444;0.945;0.7667;0.7655;0.7667;0.7657;0.9746;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9136;0.9171;0.9136;0.9132;0.8958;0.9061;0.8958;0.8962;0.7667;0.7655;0.7667;0.7657;0.9758;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8642;0.8734;0.8642;0.8646;0.9514;0.954;0.9514;0.9513;0.7667;0.7688;0.7667;0.7656;0.9735;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
KNeighborsClassifier;0.9089;0.9104;0.9089;0.9087;0.9375;0.9391;0.9375;0.9374;0.7667;0.7668;0.7667;0.7655;0.9736;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8681;0.875;0.8681;0.8692;0.9583;0.9611;0.9583;0.9585;0.7667;0.7668;0.7667;0.7655;0.9739;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.8704;0.8773;0.8704;0.871;0.8819;0.8836;0.8819;0.8818;0.7667;0.7701;0.7667;0.7643;0.9737;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
MLPClassifier;0.8765;0.8829;0.8765;0.877;0.9236;0.928;0.9236;0.9223;0.75;0.7551;0.75;0.7513;0.9748;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
MLPClassifier;0.8688;0.876;0.8688;0.8692;0.9444;0.9456;0.9444;0.9441;0.75;0.7564;0.75;0.7503;0.974;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
MLPClassifier;0.8719;0.8778;0.8719;0.8727;0.9097;0.9146;0.9097;0.9085;0.75;0.7543;0.75;0.7501;0.9728;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 606, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=606)
MLPClassifier;0.8665;0.8731;0.8665;0.8673;0.9306;0.9326;0.9306;0.9302;0.75;0.75;0.75;0.75;0.9746;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
MLPClassifier;0.8688;0.8772;0.8688;0.8697;0.9306;0.931;0.9306;0.9299;0.75;0.7512;0.75;0.7497;0.9727;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
RandomForestClassifier;0.9259;0.928;0.9259;0.9257;0.9097;0.9141;0.9097;0.9107;0.75;0.7513;0.75;0.7497;0.9887;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 493};RandomForestClassifier(n_estimators=20, random_state=493)
MLPClassifier;0.8666;0.8732;0.8666;0.8675;0.9514;0.9517;0.9514;0.9511;0.75;0.7517;0.75;0.7496;0.9745;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
SVC;0.8734;0.8827;0.8734;0.8742;0.8889;0.895;0.8889;0.8891;0.75;0.7517;0.75;0.7496;0.9528;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
KNeighborsClassifier;0.9144;0.9177;0.9144;0.914;0.8819;0.8857;0.8819;0.8827;0.75;0.7562;0.75;0.7491;0.9774;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9105;0.9141;0.9105;0.9105;0.9167;0.9232;0.9167;0.9175;0.75;0.7513;0.75;0.7485;0.9791;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9213;0.924;0.9213;0.9211;0.8889;0.889;0.8889;0.8889;0.75;0.7569;0.75;0.7483;0.974;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8666;0.8739;0.8666;0.8675;0.9167;0.9208;0.9167;0.9166;0.7333;0.7365;0.7333;0.7337;0.9722;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
MLPClassifier;0.8696;0.8761;0.8696;0.8701;0.9236;0.9253;0.9236;0.9231;0.7333;0.7365;0.7333;0.7337;0.9724;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 544, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=544)
SVC;0.8874;0.8953;0.8874;0.8882;0.8472;0.8503;0.8472;0.8475;0.7333;0.732;0.7333;0.7324;0.9465;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8796;0.8878;0.8796;0.8802;0.8889;0.8968;0.8889;0.8891;0.7167;0.7264;0.7167;0.7179;0.9477;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.878;0.8861;0.878;0.8786;0.8681;0.8751;0.8681;0.869;0.7167;0.7264;0.7167;0.7179;0.9512;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
SVC;0.8742;0.8843;0.8742;0.8749;0.9236;0.9247;0.9236;0.924;0.7167;0.7232;0.7167;0.7179;0.9488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8742;0.8826;0.8742;0.8746;0.875;0.8786;0.875;0.8751;0.7167;0.7232;0.7167;0.7179;0.9451;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
SVC;0.8735;0.8824;0.8735;0.8739;0.8681;0.8719;0.8681;0.8668;0.7167;0.7329;0.7167;0.7173;0.9488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8766;0.8841;0.8766;0.8775;0.9097;0.9143;0.9097;0.9106;0.7167;0.7213;0.7167;0.717;0.9454;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
SVC;0.8711;0.8812;0.8711;0.8719;0.9167;0.9177;0.9167;0.9167;0.7167;0.7213;0.7167;0.717;0.9512;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8703;0.8795;0.8703;0.8709;0.9167;0.92;0.9167;0.917;0.7167;0.7213;0.7167;0.717;0.9498;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
SVC;0.8689;0.8788;0.8689;0.8695;0.9306;0.9339;0.9306;0.9308;0.7167;0.7213;0.7167;0.717;0.9438;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8827;0.8902;0.8827;0.8835;0.8611;0.87;0.8611;0.8621;0.7167;0.7213;0.7167;0.717;0.9495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8773;0.8857;0.8773;0.8778;0.875;0.8911;0.875;0.8759;0.7167;0.7213;0.7167;0.717;0.9462;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8696;0.8786;0.8696;0.8705;0.9028;0.9054;0.9028;0.9018;0.7167;0.7167;0.7167;0.7167;0.9486;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
SVC;0.8657;0.8746;0.8657;0.8666;0.8889;0.8929;0.8889;0.8877;0.7167;0.717;0.7167;0.7165;0.9473;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8712;0.8827;0.8712;0.8725;0.9167;0.9228;0.9167;0.9166;0.7167;0.718;0.7167;0.7162;0.9451;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8727;0.8834;0.8727;0.8732;0.9097;0.9098;0.9097;0.9097;0.7167;0.7162;0.7167;0.7161;0.9496;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
LogisticRegression;0.7917;0.8166;0.7917;0.7949;0.7431;0.7753;0.7431;0.7462;0.7;0.7107;0.7;0.7026;0.9215;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7809;0.8062;0.7809;0.7836;0.7986;0.837;0.7986;0.8023;0.7;0.7107;0.7;0.7026;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7847;0.8122;0.7847;0.7872;0.7986;0.8193;0.7986;0.8014;0.7;0.7107;0.7;0.7026;0.9152;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
SVC;0.875;0.8845;0.875;0.8755;0.9028;0.9051;0.9028;0.9027;0.7;0.7066;0.7;0.702;0.9499;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8735;0.8815;0.8735;0.8746;0.8819;0.8885;0.8819;0.8816;0.7;0.7132;0.7;0.7009;0.9436;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8719;0.8808;0.8719;0.8724;0.875;0.8767;0.875;0.8748;0.7;0.7033;0.7;0.7009;0.9498;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8727;0.8816;0.8727;0.8733;0.8819;0.8866;0.8819;0.8811;0.7;0.7033;0.7;0.7009;0.946;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
SVC;0.8782;0.8871;0.8782;0.8785;0.9097;0.9121;0.9097;0.9103;0.7;0.7033;0.7;0.7009;0.9482;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
SVC;0.8704;0.8802;0.8704;0.8707;0.9097;0.915;0.9097;0.9099;0.7;0.7033;0.7;0.7009;0.9444;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
MLPClassifier;0.8696;0.8761;0.8696;0.8702;0.875;0.8816;0.875;0.8762;0.7;0.702;0.7;0.7007;0.9731;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 841, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=841)
SVC;0.8696;0.8785;0.8696;0.8702;0.9236;0.929;0.9236;0.924;0.7;0.7003;0.7;0.6999;0.9492;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8772;0.8872;0.8772;0.878;0.8819;0.8871;0.8819;0.8821;0.7;0.7198;0.7;0.6996;0.9468;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
SVC;0.8757;0.885;0.8757;0.8766;0.8611;0.8729;0.8611;0.8606;0.7;0.7028;0.7;0.6995;0.9532;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 725};SVC(C=10, probability=True, random_state=725)
LogisticRegression;0.7847;0.8096;0.7847;0.7872;0.7778;0.796;0.7778;0.7806;0.6833;0.6944;0.6833;0.6858;0.9161;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7855;0.8061;0.7855;0.7875;0.7847;0.8256;0.7847;0.7913;0.6833;0.6896;0.6833;0.6853;0.9166;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7816;0.8034;0.7816;0.7838;0.7778;0.8231;0.7778;0.7836;0.6833;0.6896;0.6833;0.6853;0.9156;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.7832;0.8083;0.7832;0.7857;0.7639;0.7883;0.7639;0.7695;0.6833;0.6896;0.6833;0.6853;0.9169;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7855;0.8088;0.7855;0.7883;0.7986;0.8317;0.7986;0.7997;0.6833;0.6896;0.6833;0.6853;0.9171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7724;0.8;0.7724;0.7749;0.875;0.8885;0.875;0.8761;0.6833;0.6896;0.6833;0.6853;0.9125;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7823;0.806;0.7823;0.7849;0.7986;0.8172;0.7986;0.8018;0.6833;0.6896;0.6833;0.6853;0.9127;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.797;0.8191;0.797;0.7998;0.7778;0.8209;0.7778;0.7805;0.6833;0.6877;0.6833;0.6844;0.9151;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7901;0.8168;0.7901;0.7929;0.7708;0.7883;0.7708;0.775;0.6833;0.6877;0.6833;0.6844;0.9147;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
SVC;0.8751;0.8828;0.8751;0.8757;0.8958;0.8988;0.8958;0.8957;0.6833;0.6883;0.6833;0.684;0.9493;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8703;0.8792;0.8703;0.8713;0.9097;0.9142;0.9097;0.9091;0.6833;0.6883;0.6833;0.684;0.9451;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 505};SVC(C=10, probability=True, random_state=505)
SVC;0.8751;0.8829;0.8751;0.8759;0.8542;0.8637;0.8542;0.8531;0.6833;0.6843;0.6833;0.6827;0.9504;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 821};SVC(C=10, probability=True, random_state=821)
LogisticRegression;0.7994;0.8206;0.7994;0.8011;0.7361;0.7987;0.7361;0.7436;0.6667;0.6748;0.6667;0.6689;0.9209;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.7917;0.8179;0.7917;0.7942;0.7431;0.7627;0.7431;0.7478;0.6667;0.6748;0.6667;0.6689;0.9173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7878;0.8124;0.7878;0.7905;0.7986;0.8311;0.7986;0.8018;0.6667;0.6774;0.6667;0.6686;0.9162;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7878;0.8129;0.7878;0.791;0.7639;0.787;0.7639;0.7646;0.65;0.6544;0.65;0.6511;0.9162;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7785;0.8016;0.7785;0.7804;0.7917;0.8069;0.7917;0.7959;0.65;0.6544;0.65;0.6511;0.9173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7832;0.809;0.7832;0.7861;0.7917;0.8044;0.7917;0.7929;0.65;0.6544;0.65;0.6511;0.9167;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7878;0.8108;0.7878;0.7906;0.7986;0.8114;0.7986;0.8003;0.65;0.6544;0.65;0.6511;0.9194;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7863;0.8124;0.7863;0.789;0.7847;0.7913;0.7847;0.7832;0.65;0.6544;0.65;0.6511;0.9188;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.7723;0.7986;0.7723;0.7748;0.8333;0.8446;0.8333;0.8364;0.65;0.6544;0.65;0.6511;0.9146;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.7878;0.8124;0.7878;0.791;0.7847;0.812;0.7847;0.786;0.65;0.6544;0.65;0.6511;0.9128;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.7901;0.8156;0.7901;0.7929;0.7083;0.7403;0.7083;0.7135;0.65;0.6544;0.65;0.6511;0.9172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7823;0.8072;0.7823;0.7845;0.8611;0.867;0.8611;0.8619;0.6333;0.6376;0.6333;0.6346;0.9131;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7854;0.8104;0.7854;0.7879;0.8056;0.8161;0.8056;0.8088;0.6333;0.6376;0.6333;0.6346;0.9154;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.7862;0.8098;0.7862;0.7887;0.8472;0.8566;0.8472;0.849;0.6333;0.6376;0.6333;0.6346;0.9133;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 154, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=154)"
LogisticRegression;0.7909;0.8141;0.7909;0.7941;0.75;0.7688;0.75;0.754;0.6333;0.6376;0.6333;0.6346;0.9179;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7862;0.8108;0.7862;0.789;0.7986;0.8135;0.7986;0.799;0.6333;0.6376;0.6333;0.6346;0.9154;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.7855;0.8101;0.7855;0.7881;0.8403;0.8434;0.8403;0.8407;0.6333;0.6376;0.6333;0.6346;0.914;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 50, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=50)"
LogisticRegression;0.7893;0.8124;0.7893;0.7913;0.7847;0.7943;0.7847;0.7864;0.6333;0.6376;0.6333;0.6346;0.9183;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
