Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8667;0.8702;0.8667;0.8664;0.8675;0.871;0.8675;0.8674;0.8333;0.8417;0.8333;0.832;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
RandomForestClassifier;0.8883;0.8888;0.8883;0.8882;0.8956;0.8958;0.8956;0.8956;0.8333;0.8447;0.8333;0.8315;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
KNeighborsClassifier;0.8524;0.8564;0.8524;0.8522;0.8614;0.87;0.8614;0.8616;0.8333;0.8482;0.8333;0.83;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8596;0.8645;0.8596;0.8591;0.8447;0.8575;0.8447;0.8445;0.8167;0.8189;0.8167;0.8174;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
MLPClassifier;0.8718;0.8741;0.8718;0.8717;0.8748;0.8762;0.8748;0.8747;0.8167;0.8189;0.8167;0.8174;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
MLPClassifier;0.8614;0.8656;0.8614;0.8615;0.8367;0.8451;0.8367;0.8354;0.8167;0.8189;0.8167;0.8174;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.8672;0.8699;0.8672;0.8673;0.8701;0.871;0.8701;0.87;0.8167;0.8189;0.8167;0.8174;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.865;0.8676;0.865;0.865;0.8514;0.8597;0.8514;0.8514;0.8167;0.8189;0.8167;0.8174;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
MLPClassifier;0.8654;0.8703;0.8654;0.8649;0.8775;0.8804;0.8775;0.8775;0.8167;0.819;0.8167;0.8168;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.8604;0.8678;0.8604;0.8598;0.8862;0.8883;0.8862;0.8859;0.8167;0.819;0.8167;0.8168;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
MLPClassifier;0.8675;0.8697;0.8675;0.8673;0.8728;0.8754;0.8728;0.8728;0.8167;0.8299;0.8167;0.8165;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.8646;0.8677;0.8646;0.8644;0.8755;0.8767;0.8755;0.8755;0.8167;0.8228;0.8167;0.8156;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
MLPClassifier;0.8683;0.8714;0.8683;0.8681;0.8768;0.8784;0.8768;0.8769;0.8167;0.8228;0.8167;0.8156;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
RandomForestClassifier;0.891;0.8915;0.891;0.891;0.8775;0.8778;0.8775;0.8774;0.8167;0.8238;0.8167;0.8155;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 803};RandomForestClassifier(n_estimators=10, random_state=803)
RandomForestClassifier;0.8902;0.8906;0.8902;0.8901;0.8829;0.8831;0.8829;0.8829;0.8167;0.8238;0.8167;0.8155;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
RandomForestClassifier;0.8864;0.8869;0.8864;0.8864;0.9003;0.9007;0.9003;0.9002;0.8167;0.8238;0.8167;0.8155;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
RandomForestClassifier;0.8885;0.8892;0.8885;0.8885;0.8916;0.8918;0.8916;0.8916;0.8167;0.8238;0.8167;0.8155;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 915};RandomForestClassifier(n_estimators=5, random_state=915)
RandomForestClassifier;0.8902;0.8908;0.8902;0.8902;0.8809;0.8815;0.8809;0.8807;0.8167;0.8238;0.8167;0.8155;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8891;0.8895;0.8891;0.889;0.8876;0.8885;0.8876;0.8873;0.8167;0.8238;0.8167;0.8155;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 343};RandomForestClassifier(n_estimators=20, random_state=343)
RandomForestClassifier;0.8879;0.8884;0.8879;0.8879;0.8976;0.8981;0.8976;0.8975;0.8167;0.8238;0.8167;0.8155;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 343};RandomForestClassifier(n_estimators=20, random_state=343)
RandomForestClassifier;0.8899;0.8904;0.8899;0.8898;0.8882;0.8884;0.8882;0.8882;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8872;0.8876;0.8872;0.8871;0.8989;0.8994;0.8989;0.8989;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 915};RandomForestClassifier(n_estimators=10, random_state=915)
RandomForestClassifier;0.8891;0.8896;0.8891;0.889;0.8882;0.8888;0.8882;0.8881;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8896;0.8904;0.8896;0.8895;0.8869;0.887;0.8869;0.8869;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 915};RandomForestClassifier(n_estimators=10, random_state=915)
RandomForestClassifier;0.8895;0.8899;0.8895;0.8894;0.8882;0.8889;0.8882;0.8881;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 343};RandomForestClassifier(n_estimators=10, random_state=343)
RandomForestClassifier;0.888;0.8885;0.888;0.8879;0.8896;0.8898;0.8896;0.8895;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 343};RandomForestClassifier(n_estimators=20, random_state=343)
RandomForestClassifier;0.8885;0.8892;0.8885;0.8885;0.8909;0.8917;0.8909;0.8906;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
RandomForestClassifier;0.8884;0.889;0.8884;0.8884;0.8936;0.8936;0.8936;0.8936;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 803};RandomForestClassifier(n_estimators=10, random_state=803)
RandomForestClassifier;0.8894;0.8899;0.8894;0.8894;0.8862;0.8865;0.8862;0.8862;0.8167;0.822;0.8167;0.8148;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 343};RandomForestClassifier(n_estimators=10, random_state=343)
KNeighborsClassifier;0.848;0.8526;0.848;0.8475;0.8608;0.8688;0.8608;0.8604;0.8167;0.8257;0.8167;0.8142;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8583;0.8641;0.8583;0.8576;0.8521;0.8579;0.8521;0.8515;0.8167;0.8326;0.8167;0.8114;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8635;0.8684;0.8635;0.8634;0.8635;0.8634;0.8635;0.8632;0.8;0.8022;0.8;0.8008;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
MLPClassifier;0.8615;0.8666;0.8615;0.8614;0.8748;0.8784;0.8748;0.8747;0.8;0.8022;0.8;0.8008;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
MLPClassifier;0.8638;0.8702;0.8638;0.8636;0.8762;0.8768;0.8762;0.8761;0.8;0.8022;0.8;0.8008;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.8656;0.8701;0.8656;0.8653;0.8695;0.8715;0.8695;0.869;0.8;0.8022;0.8;0.8008;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.8692;0.8706;0.8692;0.869;0.8802;0.8819;0.8802;0.8801;0.8;0.8022;0.8;0.8008;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
MLPClassifier;0.8684;0.8712;0.8684;0.8683;0.8762;0.8782;0.8762;0.8759;0.8;0.8022;0.8;0.8008;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
RandomForestClassifier;0.8906;0.8911;0.8906;0.8905;0.8815;0.8821;0.8815;0.8814;0.8;0.8111;0.8;0.8002;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 915};RandomForestClassifier(n_estimators=5, random_state=915)
MLPClassifier;0.8639;0.8692;0.8639;0.8638;0.8655;0.869;0.8655;0.8651;0.8;0.8014;0.8;0.7998;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
MLPClassifier;0.865;0.8686;0.865;0.8647;0.8681;0.8703;0.8681;0.8682;0.8;0.8039;0.8;0.7998;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 524, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=524)
RandomForestClassifier;0.8897;0.8902;0.8897;0.8896;0.8842;0.8848;0.8842;0.8842;0.8;0.8042;0.8;0.7992;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 803};RandomForestClassifier(n_estimators=5, random_state=803)
MLPClassifier;0.8671;0.8689;0.8671;0.8669;0.8755;0.8797;0.8755;0.8756;0.8;0.8056;0.8;0.799;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
KNeighborsClassifier;0.854;0.8603;0.854;0.8536;0.8681;0.8723;0.8681;0.8683;0.8;0.8052;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8878;0.8882;0.8878;0.8878;0.8956;0.8971;0.8956;0.8955;0.8;0.8019;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 343};RandomForestClassifier(n_estimators=10, random_state=343)
RandomForestClassifier;0.8907;0.8912;0.8907;0.8907;0.8829;0.8836;0.8829;0.8828;0.8;0.8019;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 343};RandomForestClassifier(n_estimators=20, random_state=343)
RandomForestClassifier;0.8887;0.8892;0.8887;0.8886;0.8882;0.8887;0.8882;0.8881;0.8;0.8019;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 803};RandomForestClassifier(n_estimators=5, random_state=803)
RandomForestClassifier;0.8896;0.8901;0.8896;0.8896;0.8909;0.891;0.8909;0.8909;0.8;0.8019;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 343};RandomForestClassifier(n_estimators=20, random_state=343)
MLPClassifier;0.8687;0.8702;0.8687;0.8686;0.8648;0.8675;0.8648;0.8647;0.8;0.8019;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
DecisionTreeClassifier;0.8896;0.8901;0.8896;0.8896;0.8688;0.8689;0.8688;0.8686;0.8;0.8019;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
RandomForestClassifier;0.8883;0.8887;0.8883;0.8882;0.8989;0.9001;0.8989;0.899;0.8;0.8019;0.8;0.7985;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 803};RandomForestClassifier(n_estimators=10, random_state=803)
RandomForestClassifier;0.8902;0.8907;0.8902;0.8902;0.8869;0.887;0.8869;0.8869;0.8;0.7987;0.8;0.798;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 343};RandomForestClassifier(n_estimators=5, random_state=343)
RandomForestClassifier;0.8883;0.8887;0.8883;0.8883;0.8842;0.8847;0.8842;0.884;0.8;0.7987;0.8;0.798;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 915};RandomForestClassifier(n_estimators=5, random_state=915)
KNeighborsClassifier;0.8555;0.8596;0.8555;0.8553;0.8594;0.8658;0.8594;0.8589;0.8;0.8132;0.8;0.7965;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.853;0.8575;0.853;0.8526;0.8548;0.8619;0.8548;0.8537;0.8;0.8089;0.8;0.7958;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8559;0.8613;0.8559;0.8553;0.8601;0.8682;0.8601;0.8591;0.8;0.8089;0.8;0.7958;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8514;0.8575;0.8514;0.8508;0.8648;0.8706;0.8648;0.864;0.8;0.8089;0.8;0.7958;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8476;0.8521;0.8476;0.8469;0.8722;0.8807;0.8722;0.8707;0.8;0.8089;0.8;0.7958;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8476;0.856;0.8476;0.8468;0.8521;0.8638;0.8521;0.8497;0.8;0.8089;0.8;0.7958;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8515;0.8577;0.8515;0.851;0.8447;0.8527;0.8447;0.8438;0.8;0.8089;0.8;0.7958;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8568;0.8619;0.8568;0.8564;0.8548;0.8636;0.8548;0.854;0.8;0.8213;0.8;0.7928;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8492;0.856;0.8492;0.8486;0.8628;0.8741;0.8628;0.8631;0.8;0.8213;0.8;0.7928;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8501;0.8592;0.8501;0.8491;0.8574;0.862;0.8574;0.8569;0.8;0.8181;0.8;0.7924;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8591;0.8661;0.8591;0.8588;0.8621;0.8665;0.8621;0.862;0.7833;0.7927;0.7833;0.785;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 948, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=948)
MLPClassifier;0.8672;0.8702;0.8672;0.8671;0.8728;0.8733;0.8728;0.8727;0.7833;0.7884;0.7833;0.7848;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
MLPClassifier;0.8567;0.8633;0.8567;0.8563;0.8574;0.8592;0.8574;0.8575;0.7833;0.7884;0.7833;0.7848;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
MLPClassifier;0.8686;0.8709;0.8686;0.8684;0.8755;0.8762;0.8755;0.8755;0.7833;0.7884;0.7833;0.7848;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
DecisionTreeClassifier;0.8898;0.8903;0.8898;0.8897;0.8849;0.8852;0.8849;0.8847;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.8897;0.8902;0.8897;0.8897;0.8876;0.8878;0.8876;0.8875;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8882;0.8887;0.8882;0.8881;0.8869;0.8873;0.8869;0.8869;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8896;0.8901;0.8896;0.8895;0.8842;0.8847;0.8842;0.8842;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8878;0.8883;0.8878;0.8877;0.8829;0.8836;0.8829;0.8825;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8874;0.8881;0.8874;0.8874;0.8963;0.8967;0.8963;0.8962;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8867;0.8872;0.8867;0.8866;0.8889;0.889;0.8889;0.8889;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8887;0.8893;0.8887;0.8887;0.8795;0.8804;0.8795;0.8794;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8907;0.8914;0.8907;0.8906;0.8668;0.8671;0.8668;0.8666;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8899;0.8904;0.8899;0.8899;0.8849;0.8853;0.8849;0.8848;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8899;0.8903;0.8899;0.8898;0.8869;0.887;0.8869;0.8869;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.8899;0.8903;0.8899;0.8898;0.8849;0.8868;0.8849;0.885;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.8875;0.888;0.8875;0.8874;0.8929;0.8932;0.8929;0.8928;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.8887;0.889;0.8887;0.8886;0.8916;0.8921;0.8916;0.8916;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.89;0.8905;0.89;0.8899;0.8795;0.8799;0.8795;0.8794;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.8879;0.8884;0.8879;0.8879;0.8929;0.8933;0.8929;0.8928;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.8883;0.8887;0.8883;0.8882;0.8916;0.8919;0.8916;0.8915;0.7833;0.7944;0.7833;0.7835;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
RandomForestClassifier;0.8907;0.8912;0.8907;0.8907;0.8768;0.8773;0.8768;0.8767;0.7833;0.7863;0.7833;0.7827;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 803};RandomForestClassifier(n_estimators=10, random_state=803)
DecisionTreeClassifier;0.8898;0.8902;0.8898;0.8897;0.8788;0.8792;0.8788;0.8789;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8897;0.8901;0.8897;0.8896;0.8942;0.8946;0.8942;0.8943;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8905;0.891;0.8905;0.8905;0.8735;0.8741;0.8735;0.8735;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.891;0.8915;0.891;0.891;0.8735;0.8741;0.8735;0.8733;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 768};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=768)
DecisionTreeClassifier;0.8864;0.8869;0.8864;0.8863;0.8922;0.8926;0.8922;0.892;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8883;0.8889;0.8883;0.8882;0.8996;0.9003;0.8996;0.8994;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8896;0.89;0.8896;0.8895;0.8628;0.863;0.8628;0.8626;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8895;0.8898;0.8895;0.8894;0.8909;0.8912;0.8909;0.8909;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
DecisionTreeClassifier;0.8905;0.891;0.8905;0.8904;0.8809;0.8811;0.8809;0.8809;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8884;0.8889;0.8884;0.8883;0.8869;0.8883;0.8869;0.8868;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8887;0.8891;0.8887;0.8886;0.8768;0.8779;0.8768;0.8765;0.7833;0.7876;0.7833;0.7825;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
RandomForestClassifier;0.8877;0.8882;0.8877;0.8877;0.8976;0.898;0.8976;0.8975;0.7833;0.7835;0.7833;0.7821;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 915};RandomForestClassifier(n_estimators=5, random_state=915)
RandomForestClassifier;0.889;0.8896;0.889;0.8889;0.8876;0.8878;0.8876;0.8875;0.7833;0.7835;0.7833;0.7821;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8895;0.8901;0.8895;0.8895;0.8829;0.8829;0.8829;0.8828;0.7833;0.7835;0.7833;0.7821;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 343};RandomForestClassifier(n_estimators=20, random_state=343)
KNeighborsClassifier;0.8545;0.8623;0.8545;0.854;0.8561;0.8612;0.8561;0.8557;0.7833;0.7875;0.7833;0.7801;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8526;0.8567;0.8526;0.8522;0.8561;0.8669;0.8561;0.8542;0.7833;0.7875;0.7833;0.7801;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8517;0.8587;0.8517;0.8507;0.8708;0.8716;0.8708;0.871;0.7833;0.7824;0.7833;0.78;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8503;0.8571;0.8503;0.8495;0.8701;0.8748;0.8701;0.8698;0.7833;0.796;0.7833;0.7773;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8565;0.8616;0.8565;0.8559;0.8487;0.8548;0.8487;0.8479;0.7833;0.796;0.7833;0.7773;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8876;0.8883;0.8876;0.8876;0.8896;0.8902;0.8896;0.8894;0.7667;0.7822;0.7667;0.7661;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 355};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=355)
MLPClassifier;0.8673;0.8714;0.8673;0.8672;0.8728;0.8747;0.8728;0.8728;0.7667;0.7662;0.7667;0.7661;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
MLPClassifier;0.8638;0.8674;0.8638;0.8637;0.8594;0.8646;0.8594;0.8594;0.7667;0.7662;0.7667;0.7661;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
MLPClassifier;0.8684;0.8699;0.8684;0.8683;0.8668;0.8706;0.8668;0.867;0.7667;0.7664;0.7667;0.7642;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
MLPClassifier;0.8656;0.8684;0.8656;0.8655;0.8742;0.8754;0.8742;0.8738;0.7667;0.7706;0.7667;0.762;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
KNeighborsClassifier;0.8527;0.8586;0.8527;0.8522;0.8394;0.843;0.8394;0.8387;0.7667;0.7733;0.7667;0.7619;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8535;0.8592;0.8535;0.8529;0.8461;0.8516;0.8461;0.8443;0.7667;0.7733;0.7667;0.7619;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8472;0.8519;0.8472;0.8465;0.8648;0.868;0.8648;0.8648;0.7667;0.7733;0.7667;0.7619;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8481;0.8551;0.8481;0.8474;0.842;0.8474;0.842;0.841;0.7667;0.7706;0.7667;0.7615;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8588;0.8634;0.8588;0.8583;0.8414;0.8507;0.8414;0.8395;0.7667;0.7941;0.7667;0.7588;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8507;0.8557;0.8507;0.8497;0.8655;0.8763;0.8655;0.8645;0.7667;0.7916;0.7667;0.7585;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8583;0.8634;0.8583;0.8581;0.8407;0.8515;0.8407;0.8398;0.7667;0.7796;0.7667;0.7577;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8513;0.8568;0.8513;0.8507;0.8534;0.8587;0.8534;0.8518;0.7667;0.7796;0.7667;0.7577;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8484;0.854;0.8484;0.8477;0.8574;0.8636;0.8574;0.8568;0.7667;0.7796;0.7667;0.7577;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8556;0.8633;0.8556;0.8549;0.8521;0.8567;0.8521;0.8501;0.7667;0.7796;0.7667;0.7577;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8706;0.8716;0.8706;0.8705;0.8661;0.8666;0.8661;0.8662;0.75;0.7487;0.75;0.7484;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 959, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=959)
KNeighborsClassifier;0.8503;0.8556;0.8503;0.8495;0.8601;0.8621;0.8601;0.8591;0.75;0.7559;0.75;0.7425;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.7506;0.7799;0.7506;0.7489;0.8159;0.8225;0.8159;0.8166;0.7;0.7087;0.7;0.6967;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7477;0.7792;0.7477;0.7456;0.8293;0.8349;0.8293;0.8301;0.7;0.7087;0.7;0.6967;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.748;0.7799;0.748;0.7459;0.8273;0.8321;0.8273;0.8281;0.7;0.7087;0.7;0.6967;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
LogisticRegression;0.7042;0.7102;0.7042;0.7015;0.7095;0.7169;0.7095;0.7069;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.6996;0.7059;0.6996;0.6968;0.7282;0.7327;0.7282;0.725;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.7036;0.7099;0.7036;0.7007;0.7028;0.708;0.7028;0.7008;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.7022;0.7085;0.7022;0.6994;0.7021;0.7097;0.7021;0.7002;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.7033;0.7095;0.7033;0.7006;0.6961;0.7035;0.6961;0.6931;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.7042;0.7104;0.7042;0.7015;0.6921;0.6949;0.6921;0.6887;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.7021;0.7082;0.7021;0.6995;0.6988;0.7077;0.6988;0.6964;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.7008;0.7068;0.7008;0.6981;0.7122;0.7195;0.7122;0.7094;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.7012;0.7077;0.7012;0.6984;0.7195;0.7233;0.7195;0.7171;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.7059;0.7121;0.7059;0.7032;0.6988;0.7056;0.6988;0.6945;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.7059;0.7119;0.7059;0.7032;0.6901;0.6957;0.6901;0.6853;0.7;0.7162;0.7;0.6948;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
SVC;0.7459;0.7779;0.7459;0.7435;0.8333;0.8384;0.8333;0.8338;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7481;0.7803;0.7481;0.7463;0.8153;0.8222;0.8153;0.8159;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7478;0.7784;0.7478;0.7457;0.8206;0.828;0.8206;0.8218;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7465;0.7793;0.7465;0.7445;0.8333;0.8401;0.8333;0.8343;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7471;0.7777;0.7471;0.7451;0.8253;0.8304;0.8253;0.8259;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7483;0.7795;0.7483;0.7462;0.826;0.8315;0.826;0.8266;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7538;0.7843;0.7538;0.7521;0.8146;0.82;0.8146;0.8157;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7487;0.78;0.7487;0.7468;0.8012;0.8072;0.8012;0.8019;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7487;0.7804;0.7487;0.7466;0.8179;0.821;0.8179;0.8185;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7483;0.7795;0.7483;0.7465;0.8199;0.8258;0.8199;0.8204;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7485;0.7786;0.7485;0.7463;0.8099;0.816;0.8099;0.8106;0.7;0.7044;0.7;0.6947;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
LogisticRegression;0.7027;0.7086;0.7027;0.6999;0.6975;0.7065;0.6975;0.6947;0.6833;0.6988;0.6833;0.6802;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.702;0.7083;0.702;0.6993;0.7015;0.7047;0.7015;0.6991;0.6833;0.6988;0.6833;0.6802;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.6995;0.706;0.6995;0.6969;0.6995;0.7059;0.6995;0.698;0.6833;0.6988;0.6833;0.6802;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.7015;0.7079;0.7015;0.699;0.6901;0.6982;0.6901;0.6874;0.6833;0.6988;0.6833;0.6802;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.7024;0.7087;0.7024;0.6997;0.7088;0.7152;0.7088;0.7059;0.6833;0.6988;0.6833;0.6802;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
SVC;0.7488;0.7792;0.7488;0.7469;0.824;0.8298;0.824;0.8245;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7475;0.7795;0.7475;0.7456;0.8333;0.8407;0.8333;0.8342;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7483;0.7797;0.7483;0.7462;0.8186;0.8237;0.8186;0.8191;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.748;0.7786;0.748;0.7459;0.8206;0.8282;0.8206;0.8215;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7497;0.7814;0.7497;0.7477;0.822;0.8305;0.822;0.8231;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7472;0.7786;0.7472;0.7453;0.822;0.8262;0.822;0.8222;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 178};SVC(C=10, random_state=178)
SVC;0.7468;0.7786;0.7468;0.7445;0.8307;0.8351;0.8307;0.8312;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7503;0.7811;0.7503;0.7481;0.8072;0.8148;0.8072;0.8082;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7503;0.7807;0.7503;0.749;0.8146;0.8196;0.8146;0.8144;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.748;0.7799;0.748;0.746;0.8347;0.8404;0.8347;0.8353;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7478;0.7777;0.7478;0.7458;0.8307;0.8373;0.8307;0.8309;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7515;0.7811;0.7515;0.75;0.8032;0.8132;0.8032;0.8042;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7465;0.7779;0.7465;0.7446;0.8313;0.8367;0.8313;0.8319;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 604};SVC(C=10, random_state=604)
SVC;0.7499;0.7803;0.7499;0.7481;0.8133;0.8187;0.8133;0.8135;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7486;0.7788;0.7486;0.7468;0.8206;0.8263;0.8206;0.8211;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
SVC;0.7481;0.7804;0.7481;0.7461;0.8313;0.8347;0.8313;0.8317;0.6833;0.6951;0.6833;0.6787;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 393};SVC(C=10, random_state=393)
LogisticRegression;0.7031;0.7094;0.7031;0.7004;0.6908;0.6959;0.6908;0.6876;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.6981;0.7047;0.6981;0.6956;0.7041;0.7109;0.7041;0.7017;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.7007;0.7068;0.7007;0.698;0.7008;0.7097;0.7008;0.6976;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.6981;0.7046;0.6981;0.6958;0.7008;0.7095;0.7008;0.6976;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.6999;0.7065;0.6999;0.6973;0.7048;0.7093;0.7048;0.702;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.7;0.7061;0.7;0.6973;0.7015;0.7101;0.7015;0.6985;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.7006;0.7072;0.7006;0.6979;0.6995;0.7044;0.6995;0.6973;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.701;0.7076;0.701;0.6984;0.6827;0.6893;0.6827;0.6801;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.6997;0.7067;0.6997;0.6971;0.6948;0.6991;0.6948;0.6917;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
LogisticRegression;0.6995;0.7061;0.6995;0.6967;0.7142;0.7182;0.7142;0.7123;0.6833;0.7027;0.6833;0.6772;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.6992;0.7061;0.6992;0.6967;0.7021;0.7053;0.7021;0.6983;0.6667;0.6847;0.6667;0.6629;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.6983;0.7048;0.6983;0.6958;0.7015;0.7126;0.7015;0.7001;0.6667;0.6847;0.6667;0.6629;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.7004;0.7072;0.7004;0.6978;0.7028;0.7068;0.7028;0.7002;0.6667;0.6847;0.6667;0.6629;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 335, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=335)"
LogisticRegression;0.7;0.7067;0.7;0.6973;0.7068;0.713;0.7068;0.7051;0.6667;0.6847;0.6667;0.6629;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 45, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=45)"
