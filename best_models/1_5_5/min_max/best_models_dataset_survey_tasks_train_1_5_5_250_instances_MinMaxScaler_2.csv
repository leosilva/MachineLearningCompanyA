Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8166;0.8221;0.8166;0.8148;0.7971;0.7952;0.7971;0.7954;0.8667;0.8681;0.8667;0.867;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8084;0.8163;0.8084;0.8061;0.8696;0.8906;0.8696;0.8697;0.8667;0.8681;0.8667;0.867;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8019;0.8252;0.8019;0.7996;0.8261;0.8531;0.8261;0.8256;0.8667;0.8774;0.8667;0.8647;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
RandomForestClassifier;0.8535;0.8561;0.8535;0.852;0.8551;0.8628;0.8551;0.8551;0.85;0.8557;0.85;0.8514;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 973};RandomForestClassifier(n_estimators=20, random_state=973)
MLPClassifier;0.8035;0.824;0.8035;0.8024;0.8696;0.879;0.8696;0.8709;0.85;0.8541;0.85;0.851;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
RandomForestClassifier;0.8437;0.8514;0.8437;0.8432;0.8406;0.8594;0.8406;0.8411;0.85;0.8541;0.85;0.851;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 975};RandomForestClassifier(n_estimators=20, random_state=975)
RandomForestClassifier;0.8389;0.8462;0.8389;0.8385;0.8696;0.8769;0.8696;0.8714;0.85;0.8541;0.85;0.851;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 975};RandomForestClassifier(n_estimators=10, random_state=975)
RandomForestClassifier;0.8713;0.8768;0.8713;0.8712;0.7971;0.7996;0.7971;0.7975;0.85;0.8541;0.85;0.851;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 644};RandomForestClassifier(n_estimators=20, random_state=644)
RandomForestClassifier;0.8358;0.8444;0.8358;0.8353;0.8406;0.8406;0.8406;0.8406;0.85;0.8579;0.85;0.8507;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 973};RandomForestClassifier(n_estimators=10, random_state=973)
KNeighborsClassifier;0.8132;0.8181;0.8132;0.81;0.8406;0.8456;0.8406;0.8399;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8149;0.8212;0.8149;0.8136;0.8696;0.884;0.8696;0.8678;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7971;0.8059;0.7971;0.7937;0.913;0.9156;0.913;0.9122;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8214;0.8334;0.8214;0.8197;0.7681;0.7745;0.7681;0.7632;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8648;0.8664;0.8648;0.8643;0.8116;0.8148;0.8116;0.8103;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 644};RandomForestClassifier(n_estimators=20, random_state=644)
RandomForestClassifier;0.8341;0.8392;0.8341;0.8317;0.8841;0.8942;0.8841;0.8861;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 973};RandomForestClassifier(n_estimators=20, random_state=973)
KNeighborsClassifier;0.8149;0.8265;0.8149;0.8121;0.8116;0.8224;0.8116;0.8074;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.7906;0.8166;0.7906;0.7891;0.8696;0.8876;0.8696;0.8681;0.85;0.8765;0.85;0.8501;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
RandomForestClassifier;0.8504;0.8555;0.8504;0.8493;0.8551;0.8551;0.8551;0.8551;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 644};RandomForestClassifier(n_estimators=20, random_state=644)
MLPClassifier;0.7955;0.8182;0.7955;0.792;0.8261;0.8258;0.8261;0.8257;0.85;0.8517;0.85;0.8498;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.789;0.8053;0.789;0.787;0.8696;0.8696;0.8696;0.8696;0.85;0.8517;0.85;0.8498;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
KNeighborsClassifier;0.8358;0.84;0.8358;0.8343;0.7391;0.7421;0.7391;0.7398;0.85;0.8505;0.85;0.8489;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.7972;0.8173;0.7972;0.7956;0.7971;0.8078;0.7971;0.7917;0.85;0.8563;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.8004;0.8252;0.8004;0.7995;0.8696;0.887;0.8696;0.8662;0.85;0.8563;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.7939;0.8146;0.7939;0.7914;0.8551;0.8726;0.8551;0.855;0.85;0.8652;0.85;0.8483;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
MLPClassifier;0.8035;0.8266;0.8035;0.8011;0.7971;0.808;0.7971;0.794;0.85;0.8658;0.85;0.8471;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
RandomForestClassifier;0.8454;0.8522;0.8454;0.8446;0.8551;0.8562;0.8551;0.8553;0.8333;0.8409;0.8333;0.8349;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 644};RandomForestClassifier(n_estimators=20, random_state=644)
RandomForestClassifier;0.8584;0.8639;0.8584;0.8582;0.8406;0.8466;0.8406;0.8406;0.8333;0.8409;0.8333;0.8349;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 975};RandomForestClassifier(n_estimators=20, random_state=975)
RandomForestClassifier;0.8504;0.8552;0.8504;0.8498;0.8696;0.8762;0.8696;0.8694;0.8333;0.8409;0.8333;0.8349;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 973};RandomForestClassifier(n_estimators=20, random_state=973)
RandomForestClassifier;0.8632;0.8688;0.8632;0.8626;0.8406;0.8466;0.8406;0.8381;0.8333;0.8365;0.8333;0.8339;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 973};RandomForestClassifier(n_estimators=10, random_state=973)
KNeighborsClassifier;0.8037;0.8113;0.8037;0.8022;0.8116;0.8121;0.8116;0.8111;0.8333;0.8372;0.8333;0.8339;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8228;0.8283;0.8228;0.8225;0.8841;0.8932;0.8841;0.8846;0.8333;0.8372;0.8333;0.8339;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
KNeighborsClassifier;0.8196;0.8251;0.8196;0.8182;0.8261;0.8252;0.8261;0.8246;0.8333;0.8372;0.8333;0.8339;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7954;0.8161;0.7954;0.7929;0.8261;0.8274;0.8261;0.8259;0.8333;0.8524;0.8333;0.8338;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.794;0.8201;0.794;0.7933;0.8696;0.8794;0.8696;0.8701;0.8333;0.8348;0.8333;0.8337;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.7891;0.8139;0.7891;0.7864;0.7681;0.782;0.7681;0.7672;0.8333;0.8348;0.8333;0.8337;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
MLPClassifier;0.7875;0.8085;0.7875;0.7855;0.8551;0.8568;0.8551;0.8557;0.8333;0.8348;0.8333;0.8337;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
RandomForestClassifier;0.8567;0.8623;0.8567;0.8557;0.8116;0.8148;0.8116;0.8103;0.8333;0.8348;0.8333;0.8337;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 644};RandomForestClassifier(n_estimators=20, random_state=644)
MLPClassifier;0.7971;0.8184;0.7971;0.7961;0.7971;0.8091;0.7971;0.7848;0.8333;0.8424;0.8333;0.8336;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
KNeighborsClassifier;0.8213;0.8262;0.8213;0.8192;0.8116;0.8449;0.8116;0.8153;0.8333;0.836;0.8333;0.8335;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8132;0.8202;0.8132;0.8115;0.8406;0.8474;0.8406;0.8397;0.8333;0.836;0.8333;0.8335;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.818;0.8271;0.818;0.8154;0.8406;0.8535;0.8406;0.8369;0.8333;0.836;0.8333;0.8335;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8342;0.8437;0.8342;0.8326;0.7971;0.808;0.7971;0.794;0.8333;0.836;0.8333;0.8335;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8343;0.8385;0.8343;0.8338;0.7826;0.798;0.7826;0.7795;0.8333;0.8339;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
RandomForestClassifier;0.8502;0.8584;0.8502;0.8486;0.7971;0.7974;0.7971;0.7962;0.8333;0.8339;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 973};RandomForestClassifier(n_estimators=10, random_state=973)
KNeighborsClassifier;0.8359;0.841;0.8359;0.8345;0.8116;0.8139;0.8116;0.812;0.8333;0.8379;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.802;0.8145;0.802;0.7999;0.8261;0.8444;0.8261;0.8277;0.8333;0.8339;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7907;0.8095;0.7907;0.7902;0.8406;0.841;0.8406;0.8405;0.8333;0.8379;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
DecisionTreeClassifier;0.8342;0.8411;0.8342;0.8325;0.7536;0.754;0.7536;0.7531;0.8333;0.8357;0.8333;0.8331;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
MLPClassifier;0.8004;0.8226;0.8004;0.7995;0.8406;0.8527;0.8406;0.8398;0.8333;0.8369;0.8333;0.8328;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
SVC;0.7858;0.8146;0.7858;0.7839;0.8406;0.8547;0.8406;0.8408;0.8333;0.8529;0.8333;0.8326;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.8068;0.8274;0.8068;0.8055;0.7246;0.7867;0.7246;0.7099;0.8333;0.8529;0.8333;0.8326;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.7858;0.8181;0.7858;0.7812;0.7681;0.7722;0.7681;0.7683;0.8333;0.8529;0.8333;0.8326;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
MLPClassifier;0.8051;0.825;0.8051;0.8031;0.7971;0.8109;0.7971;0.7946;0.8333;0.8437;0.8333;0.8325;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.7938;0.8185;0.7938;0.7918;0.8406;0.8519;0.8406;0.8401;0.8333;0.838;0.8333;0.8317;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
SVC;0.7746;0.8058;0.7746;0.7721;0.8406;0.8453;0.8406;0.8392;0.8333;0.8478;0.8333;0.8315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.794;0.8222;0.794;0.7892;0.8551;0.8642;0.8551;0.8534;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.7744;0.8056;0.7744;0.7704;0.8261;0.8531;0.8261;0.8256;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.7777;0.8069;0.7777;0.7767;0.8406;0.8645;0.8406;0.8365;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
MLPClassifier;0.7922;0.8174;0.7922;0.7922;0.7826;0.7938;0.7826;0.7821;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
SVC;0.7891;0.815;0.7891;0.7879;0.8841;0.8988;0.8841;0.8819;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.7905;0.8206;0.7905;0.7884;0.8406;0.8647;0.8406;0.8394;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.7923;0.8245;0.7923;0.7882;0.7536;0.7658;0.7536;0.749;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.789;0.8189;0.789;0.7842;0.8116;0.8269;0.8116;0.8066;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.7971;0.8252;0.7971;0.7961;0.8116;0.8294;0.8116;0.8053;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.7923;0.8166;0.7923;0.7888;0.7971;0.8445;0.7971;0.794;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.7906;0.8176;0.7906;0.7889;0.7971;0.8239;0.7971;0.7895;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.7955;0.8196;0.7955;0.7922;0.7971;0.8278;0.7971;0.7967;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.7923;0.8197;0.7923;0.7883;0.7826;0.8159;0.7826;0.7836;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.7988;0.8247;0.7988;0.7954;0.7971;0.8271;0.7971;0.7994;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.7971;0.8242;0.7971;0.7954;0.7536;0.7858;0.7536;0.7403;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.7923;0.8206;0.7923;0.7898;0.8841;0.8902;0.8841;0.8813;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.7889;0.8183;0.7889;0.7859;0.8116;0.8367;0.8116;0.8119;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.7843;0.8117;0.7843;0.782;0.8261;0.8502;0.8261;0.8249;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.7939;0.8188;0.7939;0.7915;0.7826;0.8006;0.7826;0.7833;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.7858;0.8185;0.7858;0.7816;0.7971;0.8137;0.7971;0.7973;0.8333;0.8432;0.8333;0.8313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
MLPClassifier;0.7907;0.8128;0.7907;0.7898;0.8116;0.8217;0.8116;0.81;0.8333;0.8543;0.8333;0.8311;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
RandomForestClassifier;0.8341;0.841;0.8341;0.833;0.8261;0.8303;0.8261;0.8271;0.8167;0.8268;0.8167;0.8185;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 975};RandomForestClassifier(n_estimators=5, random_state=975)
RandomForestClassifier;0.8454;0.8486;0.8454;0.8452;0.8261;0.8296;0.8261;0.8255;0.8167;0.8268;0.8167;0.8185;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 973};RandomForestClassifier(n_estimators=20, random_state=973)
RandomForestClassifier;0.8374;0.8415;0.8374;0.8362;0.8406;0.8547;0.8406;0.8408;0.8167;0.8221;0.8167;0.818;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 973};RandomForestClassifier(n_estimators=20, random_state=973)
MLPClassifier;0.8004;0.8244;0.8004;0.7977;0.8116;0.815;0.8116;0.8068;0.8167;0.8234;0.8167;0.8178;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
MLPClassifier;0.7923;0.8144;0.7923;0.79;0.9275;0.9285;0.9275;0.9268;0.8167;0.8189;0.8167;0.8174;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
RandomForestClassifier;0.8293;0.8345;0.8293;0.8288;0.9855;0.9861;0.9855;0.9855;0.8167;0.8189;0.8167;0.8174;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 644};RandomForestClassifier(n_estimators=10, random_state=644)
RandomForestClassifier;0.8534;0.861;0.8534;0.853;0.7971;0.7972;0.7971;0.7953;0.8167;0.8189;0.8167;0.8174;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 975};RandomForestClassifier(n_estimators=20, random_state=975)
RandomForestClassifier;0.8502;0.8556;0.8502;0.8497;0.7971;0.797;0.7971;0.7963;0.8167;0.8201;0.8167;0.8173;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 975};RandomForestClassifier(n_estimators=5, random_state=975)
KNeighborsClassifier;0.8228;0.8338;0.8228;0.8222;0.8551;0.8589;0.8551;0.8539;0.8167;0.8201;0.8167;0.8173;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.7987;0.8232;0.7987;0.7978;0.8551;0.8549;0.8551;0.8547;0.8167;0.8205;0.8167;0.8172;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
MLPClassifier;0.8052;0.8287;0.8052;0.8026;0.7681;0.7742;0.7681;0.7606;0.8167;0.8205;0.8167;0.8172;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
RandomForestClassifier;0.8357;0.8436;0.8357;0.8345;0.8261;0.8374;0.8261;0.826;0.8167;0.8238;0.8167;0.8172;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 973};RandomForestClassifier(n_estimators=20, random_state=973)
DecisionTreeClassifier;0.8487;0.8539;0.8487;0.847;0.8406;0.856;0.8406;0.8412;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
DecisionTreeClassifier;0.8437;0.8495;0.8437;0.8435;0.8261;0.8291;0.8261;0.8269;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
DecisionTreeClassifier;0.8326;0.839;0.8326;0.832;0.8696;0.8709;0.8696;0.8694;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
DecisionTreeClassifier;0.8245;0.8331;0.8245;0.8229;0.8116;0.8173;0.8116;0.812;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
DecisionTreeClassifier;0.8293;0.8359;0.8293;0.8266;0.8406;0.8676;0.8406;0.8401;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
MLPClassifier;0.7971;0.8181;0.7971;0.7953;0.8116;0.8185;0.8116;0.8115;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
DecisionTreeClassifier;0.8486;0.8545;0.8486;0.8482;0.7826;0.7904;0.7826;0.7785;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
MLPClassifier;0.8036;0.8291;0.8036;0.8027;0.7246;0.7351;0.7246;0.7242;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
DecisionTreeClassifier;0.8276;0.8358;0.8276;0.8254;0.8696;0.8707;0.8696;0.8698;0.8167;0.8167;0.8167;0.8167;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
DecisionTreeClassifier;0.8309;0.8363;0.8309;0.8299;0.8551;0.8551;0.8551;0.8551;0.8167;0.8167;0.8167;0.8167;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
DecisionTreeClassifier;0.8342;0.838;0.8342;0.8327;0.9275;0.9286;0.9275;0.9271;0.8167;0.8167;0.8167;0.8167;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
DecisionTreeClassifier;0.8374;0.8407;0.8374;0.8365;0.913;0.9189;0.913;0.9127;0.8167;0.8167;0.8167;0.8167;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
KNeighborsClassifier;0.8293;0.8411;0.8293;0.8279;0.8406;0.843;0.8406;0.8388;0.8167;0.8172;0.8167;0.8166;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8149;0.8262;0.8149;0.8133;0.8551;0.864;0.8551;0.8538;0.8167;0.8172;0.8167;0.8166;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8083;0.8145;0.8083;0.8059;0.8406;0.8504;0.8406;0.84;0.8167;0.8175;0.8167;0.816;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8503;0.8532;0.8503;0.85;0.8841;0.8842;0.8841;0.8833;0.8167;0.8175;0.8167;0.816;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 975};RandomForestClassifier(n_estimators=20, random_state=975)
KNeighborsClassifier;0.8052;0.8142;0.8052;0.8043;0.8551;0.8821;0.8551;0.8546;0.8167;0.8175;0.8167;0.816;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.7859;0.8167;0.7859;0.7843;0.7681;0.7819;0.7681;0.7656;0.8167;0.825;0.8167;0.8153;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.7827;0.8115;0.7827;0.7781;0.8116;0.8382;0.8116;0.8093;0.8167;0.825;0.8167;0.8153;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
MLPClassifier;0.8003;0.8238;0.8003;0.7982;0.7536;0.7632;0.7536;0.7503;0.8167;0.8241;0.8167;0.8144;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
MLPClassifier;0.7971;0.8201;0.7971;0.7947;0.7971;0.7946;0.7971;0.7949;0.8167;0.8241;0.8167;0.8144;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
MLPClassifier;0.7907;0.815;0.7907;0.7894;0.8696;0.8889;0.8696;0.8632;0.8167;0.8241;0.8167;0.8144;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 352, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=352)
RandomForestClassifier;0.8583;0.8661;0.8583;0.858;0.8406;0.8491;0.8406;0.8413;0.8;0.8101;0.8;0.8024;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 644};RandomForestClassifier(n_estimators=20, random_state=644)
KNeighborsClassifier;0.8245;0.8332;0.8245;0.823;0.8986;0.9022;0.8986;0.8983;0.8;0.8054;0.8;0.8013;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.7842;0.8081;0.7842;0.7839;0.8406;0.8435;0.8406;0.8403;0.8;0.8038;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 836, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=836)
RandomForestClassifier;0.8374;0.8444;0.8374;0.8359;0.8696;0.8754;0.8696;0.8713;0.8;0.8038;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 975};RandomForestClassifier(n_estimators=20, random_state=975)
DecisionTreeClassifier;0.8535;0.8601;0.8535;0.8534;0.8551;0.8551;0.8551;0.8551;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
DecisionTreeClassifier;0.8455;0.8537;0.8455;0.8455;0.8261;0.8273;0.8261;0.8259;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
DecisionTreeClassifier;0.8179;0.8244;0.8179;0.8177;0.913;0.9142;0.913;0.9133;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
DecisionTreeClassifier;0.8453;0.8499;0.8453;0.8453;0.8986;0.8997;0.8986;0.8988;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
DecisionTreeClassifier;0.8406;0.8461;0.8406;0.8397;0.8261;0.8368;0.8261;0.8219;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
RandomForestClassifier;0.8262;0.8288;0.8262;0.825;0.8406;0.841;0.8406;0.8405;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 644};RandomForestClassifier(n_estimators=5, random_state=644)
DecisionTreeClassifier;0.8583;0.8681;0.8583;0.8574;0.7971;0.7999;0.7971;0.7946;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
KNeighborsClassifier;0.8244;0.8335;0.8244;0.8227;0.913;0.9177;0.913;0.9135;0.8;0.8013;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8534;0.8579;0.8534;0.853;0.8551;0.8613;0.8551;0.8557;0.8;0.8;0.8;0.8;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
KNeighborsClassifier;0.8326;0.8389;0.8326;0.8306;0.7681;0.7693;0.7681;0.7678;0.8;0.8;0.8;0.8;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8277;0.8356;0.8277;0.8259;0.8116;0.8139;0.8116;0.8108;0.8;0.8;0.8;0.8;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8696;0.8753;0.8696;0.8691;0.6957;0.7006;0.6957;0.6934;0.8;0.8;0.8;0.8;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
SVC;0.7987;0.8268;0.7987;0.7977;0.7681;0.7831;0.7681;0.7577;0.8;0.8039;0.8;0.7998;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 551};SVC(C=10, random_state=551)
SVC;0.7665;0.7961;0.7665;0.7634;0.913;0.9177;0.913;0.9135;0.8;0.8039;0.8;0.7998;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.7876;0.8131;0.7876;0.7841;0.8261;0.8502;0.8261;0.8249;0.8;0.8039;0.8;0.7998;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 836};SVC(C=10, random_state=836)
SVC;0.7729;0.8035;0.7729;0.7679;0.7971;0.8238;0.7971;0.7997;0.8;0.8039;0.8;0.7998;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
KNeighborsClassifier;0.8116;0.8188;0.8116;0.8108;0.8116;0.8182;0.8116;0.8069;0.8;0.802;0.8;0.7997;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8085;0.8173;0.8085;0.805;0.8986;0.903;0.8986;0.8976;0.8;0.7997;0.8;0.7995;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8148;0.8197;0.8148;0.8127;0.8261;0.8379;0.8261;0.8263;0.8;0.7997;0.8;0.7995;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.7906;0.8188;0.7906;0.7869;0.7681;0.8006;0.7681;0.7674;0.8;0.8042;0.8;0.7992;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
RandomForestClassifier;0.8342;0.8401;0.8342;0.8341;0.8841;0.9005;0.8841;0.8797;0.8;0.8042;0.8;0.7992;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 644};RandomForestClassifier(n_estimators=20, random_state=644)
RandomForestClassifier;0.8486;0.8532;0.8486;0.8481;0.8986;0.903;0.8986;0.8949;0.8;0.8079;0.8;0.7992;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 975};RandomForestClassifier(n_estimators=10, random_state=975)
KNeighborsClassifier;0.8325;0.8399;0.8325;0.8304;0.6522;0.679;0.6522;0.6541;0.8;0.8083;0.8;0.7987;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8486;0.8556;0.8486;0.8474;0.8551;0.8562;0.8551;0.8553;0.7833;0.7863;0.7833;0.7839;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 975};RandomForestClassifier(n_estimators=10, random_state=975)
DecisionTreeClassifier;0.8261;0.8347;0.8261;0.8261;0.913;0.9129;0.913;0.9127;0.7833;0.785;0.7833;0.7829;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
DecisionTreeClassifier;0.8358;0.8394;0.8358;0.8361;0.8696;0.8794;0.8696;0.8697;0.7833;0.785;0.7833;0.7829;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
DecisionTreeClassifier;0.8535;0.8571;0.8535;0.8528;0.7536;0.7528;0.7536;0.7515;0.7833;0.785;0.7833;0.7829;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
DecisionTreeClassifier;0.8421;0.8504;0.8421;0.8415;0.7971;0.7996;0.7971;0.7975;0.7833;0.7861;0.7833;0.7823;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
RandomForestClassifier;0.8341;0.8385;0.8341;0.8326;0.7971;0.7963;0.7971;0.7945;0.7667;0.7736;0.7667;0.7688;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 973};RandomForestClassifier(n_estimators=5, random_state=973)
DecisionTreeClassifier;0.8262;0.8343;0.8262;0.8251;0.8261;0.8336;0.8261;0.8231;0.7667;0.776;0.7667;0.7683;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
RandomForestClassifier;0.8519;0.8549;0.8519;0.8499;0.8406;0.8463;0.8406;0.841;0.7667;0.7688;0.7667;0.7674;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 644};RandomForestClassifier(n_estimators=5, random_state=644)
DecisionTreeClassifier;0.8389;0.8457;0.8389;0.8384;0.8696;0.8719;0.8696;0.8682;0.7667;0.7718;0.7667;0.7672;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
DecisionTreeClassifier;0.8325;0.8402;0.8325;0.831;0.7536;0.7689;0.7536;0.7551;0.7667;0.7718;0.7667;0.7672;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 743};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=743)
DecisionTreeClassifier;0.831;0.8414;0.831;0.8306;0.8696;0.8727;0.8696;0.8704;0.7667;0.7718;0.7667;0.7672;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 658};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=658)
LogisticRegression;0.7134;0.7339;0.7134;0.7104;0.6957;0.7277;0.6957;0.6969;0.7667;0.7794;0.7667;0.7648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7151;0.7336;0.7151;0.7139;0.7536;0.7853;0.7536;0.7566;0.7667;0.7794;0.7667;0.7648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7165;0.7348;0.7165;0.7154;0.6232;0.6828;0.6232;0.6184;0.7667;0.7794;0.7667;0.7648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7053;0.7355;0.7053;0.7046;0.7536;0.7763;0.7536;0.752;0.7667;0.7794;0.7667;0.7648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
KNeighborsClassifier;0.8084;0.8215;0.8084;0.807;0.8551;0.8629;0.8551;0.8565;0.75;0.7714;0.75;0.753;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8343;0.8389;0.8343;0.8339;0.8116;0.8247;0.8116;0.8064;0.75;0.7578;0.75;0.7502;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 853};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=853)
LogisticRegression;0.7086;0.7319;0.7086;0.7085;0.7391;0.7467;0.7391;0.7359;0.75;0.7607;0.75;0.749;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7134;0.7292;0.7134;0.7116;0.6232;0.6545;0.6232;0.6174;0.75;0.7607;0.75;0.749;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.7087;0.73;0.7087;0.7072;0.7681;0.776;0.7681;0.7656;0.75;0.7607;0.75;0.749;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7101;0.7298;0.7101;0.7102;0.6377;0.6379;0.6377;0.6351;0.75;0.7607;0.75;0.749;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7101;0.7286;0.7101;0.7083;0.7536;0.7523;0.7536;0.7509;0.75;0.7667;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.7197;0.7375;0.7197;0.7161;0.6232;0.6566;0.6232;0.6293;0.75;0.7667;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.702;0.7237;0.702;0.7002;0.7246;0.7275;0.7246;0.723;0.75;0.7667;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7071;0.7326;0.7071;0.7041;0.6812;0.6871;0.6812;0.6814;0.75;0.7667;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.712;0.735;0.712;0.7111;0.7536;0.7893;0.7536;0.748;0.75;0.7667;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7117;0.7342;0.7117;0.7109;0.6957;0.7075;0.6957;0.6891;0.75;0.7667;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7212;0.7429;0.7212;0.7192;0.6377;0.6647;0.6377;0.6374;0.75;0.7667;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.7165;0.7355;0.7165;0.7142;0.6522;0.6851;0.6522;0.6316;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7151;0.7344;0.7151;0.7126;0.6667;0.7156;0.6667;0.6609;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7135;0.7317;0.7135;0.7125;0.7101;0.7224;0.7101;0.7113;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.6972;0.7204;0.6972;0.6949;0.8116;0.8132;0.8116;0.8082;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7068;0.727;0.7068;0.7065;0.6957;0.7162;0.6957;0.6928;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7084;0.7265;0.7084;0.7059;0.6957;0.6977;0.6957;0.6953;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.7054;0.7327;0.7054;0.7018;0.7101;0.7441;0.7101;0.7132;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.7021;0.7232;0.7021;0.7019;0.7536;0.7632;0.7536;0.7525;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.71;0.735;0.71;0.7085;0.7101;0.7268;0.7101;0.7112;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.6972;0.7187;0.6972;0.6951;0.8116;0.82;0.8116;0.8078;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7037;0.7218;0.7037;0.7023;0.7101;0.7328;0.7101;0.7103;0.75;0.7606;0.75;0.7459;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.694;0.7086;0.694;0.6904;0.7826;0.8117;0.7826;0.7775;0.7333;0.756;0.7333;0.7315;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.7278;0.7457;0.7278;0.7262;0.6957;0.7167;0.6957;0.6923;0.7333;0.7478;0.7333;0.7314;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 1, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=1)"
LogisticRegression;0.7054;0.7272;0.7054;0.704;0.7536;0.7609;0.7536;0.7521;0.7333;0.7433;0.7333;0.7304;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.6924;0.7084;0.6924;0.6898;0.8116;0.8107;0.8116;0.8101;0.7333;0.7427;0.7333;0.7266;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
