Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8187;0.8328;0.8187;0.82;0.875;0.881;0.875;0.8761;0.85;0.8563;0.85;0.8487;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8217;0.8297;0.8217;0.8223;0.8333;0.84;0.8333;0.8349;0.8333;0.8413;0.8333;0.834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8881;0.8911;0.8881;0.8883;0.8958;0.9044;0.8958;0.8965;0.8333;0.8339;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
KNeighborsClassifier;0.8171;0.8264;0.8171;0.8178;0.875;0.8752;0.875;0.8751;0.8333;0.8369;0.8333;0.8328;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8234;0.8356;0.8234;0.8243;0.875;0.8746;0.875;0.8744;0.8333;0.8369;0.8333;0.8328;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8202;0.8281;0.8202;0.8213;0.8403;0.8447;0.8403;0.8407;0.8333;0.8408;0.8333;0.8326;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8271;0.8366;0.8271;0.828;0.8056;0.816;0.8056;0.8055;0.8333;0.8369;0.8333;0.8303;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.824;0.8349;0.824;0.8241;0.8681;0.875;0.8681;0.8687;0.8167;0.8189;0.8167;0.8174;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8774;0.8799;0.8774;0.8773;0.875;0.8749;0.875;0.8745;0.8167;0.8172;0.8167;0.8166;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 360};RandomForestClassifier(n_estimators=5, random_state=360)
KNeighborsClassifier;0.8133;0.8221;0.8133;0.8146;0.8889;0.8997;0.8889;0.8893;0.8167;0.8241;0.8167;0.8166;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8789;0.8826;0.8789;0.8791;0.9097;0.9128;0.9097;0.9096;0.8167;0.8172;0.8167;0.8166;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
KNeighborsClassifier;0.8318;0.8406;0.8318;0.8324;0.8958;0.8978;0.8958;0.8964;0.8167;0.8203;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8317;0.8407;0.8317;0.8324;0.8889;0.8904;0.8889;0.8888;0.8167;0.8203;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8187;0.8295;0.8187;0.8194;0.875;0.875;0.875;0.875;0.8167;0.8203;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8186;0.8286;0.8186;0.8194;0.8819;0.883;0.8819;0.8822;0.8167;0.8203;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.814;0.8244;0.814;0.815;0.9028;0.9064;0.9028;0.9034;0.8167;0.8203;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8333;0.8435;0.8333;0.8344;0.9097;0.9177;0.9097;0.9104;0.8167;0.8203;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8395;0.8465;0.8395;0.84;0.8542;0.8758;0.8542;0.8555;0.8167;0.8166;0.8167;0.8156;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8125;0.821;0.8125;0.8133;0.8819;0.8838;0.8819;0.8823;0.8167;0.8166;0.8167;0.8156;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8588;0.8616;0.8588;0.8588;0.8264;0.8317;0.8264;0.8275;0.8;0.8054;0.8;0.8013;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=694)
DecisionTreeClassifier;0.8719;0.875;0.8719;0.8722;0.8056;0.8051;0.8056;0.8051;0.8;0.8022;0.8;0.8008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=983)
RandomForestClassifier;0.8804;0.8852;0.8804;0.881;0.8611;0.8671;0.8611;0.8578;0.8;0.8;0.8;0.8;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 360};RandomForestClassifier(n_estimators=10, random_state=360)
RandomForestClassifier;0.8858;0.8895;0.8858;0.8857;0.8333;0.8449;0.8333;0.8358;0.8;0.8;0.8;0.8;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 360};RandomForestClassifier(n_estimators=10, random_state=360)
KNeighborsClassifier;0.8379;0.8459;0.8379;0.8389;0.8889;0.8899;0.8889;0.8888;0.8;0.8;0.8;0.8;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8264;0.835;0.8264;0.8273;0.8264;0.8282;0.8264;0.8254;0.8;0.8005;0.8;0.7999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8612;0.8631;0.8612;0.8606;0.8542;0.856;0.8542;0.8549;0.8;0.8005;0.8;0.7999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
RandomForestClassifier;0.8842;0.8869;0.8842;0.8841;0.8403;0.8395;0.8403;0.8395;0.8;0.8005;0.8;0.7999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.8819;0.8845;0.8819;0.8822;0.8889;0.8934;0.8889;0.8885;0.8;0.8005;0.8;0.7999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
KNeighborsClassifier;0.8279;0.8357;0.8279;0.8291;0.8264;0.8265;0.8264;0.826;0.8;0.8005;0.8;0.7999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8789;0.8816;0.8789;0.879;0.875;0.8828;0.875;0.8766;0.8;0.8014;0.8;0.7998;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
KNeighborsClassifier;0.8349;0.8445;0.8349;0.8359;0.8472;0.8525;0.8472;0.8477;0.8;0.8014;0.8;0.7998;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8819;0.885;0.8819;0.882;0.8611;0.8604;0.8611;0.8605;0.8;0.8016;0.8;0.7997;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 360};RandomForestClassifier(n_estimators=5, random_state=360)
KNeighborsClassifier;0.8272;0.8361;0.8272;0.8283;0.8681;0.8713;0.8681;0.8671;0.8;0.7997;0.8;0.7995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8202;0.8291;0.8202;0.8216;0.8958;0.8993;0.8958;0.8956;0.8;0.8002;0.8;0.7988;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8812;0.8844;0.8812;0.8816;0.8681;0.8701;0.8681;0.8683;0.8;0.7989;0.8;0.7985;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 219};RandomForestClassifier(n_estimators=10, random_state=219)
MLPClassifier;0.7183;0.7316;0.7183;0.7177;0.8333;0.8336;0.8333;0.8333;0.7833;0.7887;0.7833;0.7851;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
DecisionTreeClassifier;0.8658;0.8683;0.8658;0.8654;0.8264;0.8392;0.8264;0.8277;0.7833;0.7855;0.7833;0.7841;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=983)
KNeighborsClassifier;0.8256;0.8354;0.8256;0.8265;0.8472;0.8634;0.8472;0.8489;0.7833;0.7898;0.7833;0.784;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8565;0.859;0.8565;0.8567;0.8194;0.8207;0.8194;0.8199;0.7833;0.7863;0.7833;0.7839;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
KNeighborsClassifier;0.8356;0.8458;0.8356;0.8366;0.8125;0.8205;0.8125;0.8132;0.7833;0.7863;0.7833;0.7839;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8226;0.8299;0.8226;0.8236;0.8542;0.8665;0.8542;0.8563;0.7833;0.7847;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8681;0.8704;0.8681;0.8679;0.8403;0.8445;0.8403;0.8411;0.7833;0.7833;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
KNeighborsClassifier;0.8257;0.8347;0.8257;0.8266;0.8472;0.8568;0.8472;0.8486;0.7833;0.7833;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8148;0.8217;0.8148;0.8148;0.9375;0.9387;0.9375;0.9376;0.7833;0.7833;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8681;0.8718;0.8681;0.8682;0.8958;0.8972;0.8958;0.8957;0.7833;0.7854;0.7833;0.783;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 360};RandomForestClassifier(n_estimators=5, random_state=360)
KNeighborsClassifier;0.824;0.8338;0.824;0.824;0.8889;0.8906;0.8889;0.8889;0.7833;0.785;0.7833;0.7829;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8827;0.8869;0.8827;0.8829;0.8611;0.8704;0.8611;0.8623;0.7833;0.785;0.7833;0.7829;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
KNeighborsClassifier;0.8333;0.8432;0.8333;0.8342;0.8125;0.8235;0.8125;0.8137;0.7833;0.783;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8797;0.8841;0.8797;0.8801;0.8819;0.8839;0.8819;0.8816;0.7833;0.783;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 795};RandomForestClassifier(n_estimators=10, random_state=795)
RandomForestClassifier;0.8796;0.8825;0.8796;0.8798;0.9028;0.9075;0.9028;0.9025;0.7833;0.783;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
RandomForestClassifier;0.8889;0.892;0.8889;0.8892;0.8403;0.84;0.8403;0.84;0.7833;0.7863;0.7833;0.7827;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
RandomForestClassifier;0.8835;0.8866;0.8835;0.8839;0.8472;0.8494;0.8472;0.8478;0.7833;0.7831;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.875;0.8789;0.875;0.8753;0.8958;0.8966;0.8958;0.8958;0.7833;0.7831;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 795};RandomForestClassifier(n_estimators=10, random_state=795)
RandomForestClassifier;0.875;0.877;0.875;0.8751;0.9028;0.9062;0.9028;0.9031;0.7833;0.7831;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.875;0.8786;0.875;0.8754;0.9236;0.9303;0.9236;0.9247;0.7833;0.7835;0.7833;0.7821;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
RandomForestClassifier;0.8834;0.8866;0.8834;0.8832;0.8403;0.8442;0.8403;0.8407;0.7833;0.7835;0.7833;0.7821;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
KNeighborsClassifier;0.8349;0.8448;0.8349;0.8357;0.8194;0.8231;0.8194;0.8198;0.7833;0.7856;0.7833;0.7805;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.7315;0.7736;0.7315;0.7301;0.8542;0.8623;0.8542;0.8548;0.7667;0.7857;0.7667;0.7698;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
DecisionTreeClassifier;0.875;0.8768;0.875;0.8753;0.8472;0.8515;0.8472;0.8486;0.7667;0.7754;0.7667;0.7685;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
SVC;0.7292;0.7735;0.7292;0.7283;0.8403;0.8589;0.8403;0.8434;0.7667;0.7856;0.7667;0.768;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
DecisionTreeClassifier;0.8619;0.8656;0.8619;0.8619;0.8889;0.89;0.8889;0.889;0.7667;0.7728;0.7667;0.7676;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.8542;0.8576;0.8542;0.8544;0.8611;0.8668;0.8611;0.8627;0.7667;0.7698;0.7667;0.7672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
DecisionTreeClassifier;0.8573;0.8593;0.8573;0.8572;0.8403;0.8422;0.8403;0.8408;0.7667;0.768;0.7667;0.767;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
DecisionTreeClassifier;0.8603;0.863;0.8603;0.8605;0.875;0.8763;0.875;0.8754;0.7667;0.7687;0.7667;0.7668;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
DecisionTreeClassifier;0.862;0.8642;0.862;0.8617;0.8542;0.8631;0.8542;0.855;0.7667;0.767;0.7667;0.7666;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
DecisionTreeClassifier;0.8527;0.8539;0.8527;0.8528;0.8819;0.8835;0.8819;0.8825;0.7667;0.767;0.7667;0.7666;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.8587;0.8612;0.8587;0.8587;0.875;0.8772;0.875;0.8756;0.7667;0.7671;0.7667;0.7666;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
RandomForestClassifier;0.8796;0.8823;0.8796;0.8798;0.8889;0.8949;0.8889;0.8895;0.7667;0.7672;0.7667;0.7659;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8711;0.8758;0.8711;0.8715;0.9097;0.9116;0.9097;0.9099;0.7667;0.7672;0.7667;0.7659;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
RandomForestClassifier;0.8804;0.8826;0.8804;0.8805;0.8819;0.8823;0.8819;0.8821;0.7667;0.7655;0.7667;0.7657;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
RandomForestClassifier;0.8766;0.8799;0.8766;0.8766;0.9167;0.9264;0.9167;0.9178;0.7667;0.7663;0.7667;0.7656;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.8781;0.8827;0.8781;0.8787;0.8958;0.8968;0.8958;0.8959;0.7667;0.7663;0.7667;0.7656;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.8796;0.8845;0.8796;0.8798;0.9028;0.911;0.9028;0.9031;0.7667;0.7679;0.7667;0.7645;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
SVC;0.7238;0.7657;0.7238;0.7223;0.8264;0.8289;0.8264;0.8272;0.75;0.7746;0.75;0.7543;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
SVC;0.736;0.7722;0.736;0.7341;0.8056;0.819;0.8056;0.8083;0.75;0.7667;0.75;0.7532;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
MLPClassifier;0.7114;0.7276;0.7114;0.7101;0.7917;0.7965;0.7917;0.7931;0.75;0.7583;0.75;0.7521;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
MLPClassifier;0.7207;0.7359;0.7207;0.7203;0.8194;0.8208;0.8194;0.816;0.75;0.7574;0.75;0.7517;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
DecisionTreeClassifier;0.8557;0.8589;0.8557;0.8558;0.8681;0.8715;0.8681;0.8691;0.75;0.7551;0.75;0.7513;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
DecisionTreeClassifier;0.8619;0.8656;0.8619;0.8618;0.8472;0.8518;0.8472;0.8482;0.75;0.7521;0.75;0.7507;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.8711;0.8735;0.8711;0.8711;0.8333;0.8396;0.8333;0.8352;0.75;0.7564;0.75;0.7503;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
MLPClassifier;0.7239;0.7421;0.7239;0.7229;0.7917;0.7941;0.7917;0.7899;0.75;0.7513;0.75;0.7497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.7138;0.7255;0.7138;0.7133;0.8333;0.8385;0.8333;0.8327;0.75;0.7513;0.75;0.7497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
RandomForestClassifier;0.8874;0.8909;0.8874;0.8873;0.9097;0.9161;0.9097;0.9096;0.75;0.7503;0.75;0.748;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8867;0.8896;0.8867;0.887;0.8819;0.8846;0.8819;0.8825;0.75;0.7503;0.75;0.748;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 219};RandomForestClassifier(n_estimators=20, random_state=219)
RandomForestClassifier;0.8758;0.8782;0.8758;0.8761;0.9028;0.9026;0.9028;0.9026;0.75;0.7503;0.75;0.748;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 795};RandomForestClassifier(n_estimators=5, random_state=795)
RandomForestClassifier;0.875;0.8777;0.875;0.8753;0.9097;0.9111;0.9097;0.9101;0.75;0.7503;0.75;0.746;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
SVC;0.723;0.7672;0.723;0.7204;0.8611;0.8661;0.8611;0.8606;0.7333;0.7637;0.7333;0.7385;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
MLPClassifier;0.7145;0.7251;0.7145;0.7125;0.7778;0.7822;0.7778;0.7783;0.7333;0.7534;0.7333;0.7381;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
SVC;0.7253;0.7601;0.7253;0.7235;0.7639;0.7978;0.7639;0.7661;0.7333;0.7642;0.7333;0.7377;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
SVC;0.7368;0.7758;0.7368;0.7357;0.7708;0.7843;0.7708;0.7706;0.7333;0.7642;0.7333;0.7377;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
SVC;0.7314;0.7743;0.7314;0.7297;0.8056;0.8144;0.8056;0.8066;0.7333;0.7642;0.7333;0.7377;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
SVC;0.7269;0.7668;0.7269;0.7261;0.8125;0.8422;0.8125;0.8146;0.7333;0.7642;0.7333;0.7377;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
MLPClassifier;0.716;0.733;0.716;0.7162;0.7847;0.7982;0.7847;0.7865;0.7333;0.747;0.7333;0.7373;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
MLPClassifier;0.7207;0.7333;0.7207;0.7199;0.7708;0.7779;0.7708;0.772;0.7333;0.7438;0.7333;0.7366;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
SVC;0.7377;0.7782;0.7377;0.7355;0.7292;0.755;0.7292;0.7322;0.7333;0.7556;0.7333;0.7365;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
MLPClassifier;0.7138;0.7272;0.7138;0.7126;0.8125;0.8187;0.8125;0.8138;0.7333;0.7454;0.7333;0.736;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.7237;0.7382;0.7237;0.7223;0.8264;0.8258;0.8264;0.825;0.7333;0.7454;0.7333;0.736;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.7206;0.7385;0.7206;0.7202;0.7708;0.7765;0.7708;0.7716;0.7333;0.7454;0.7333;0.736;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
DecisionTreeClassifier;0.8557;0.8597;0.8557;0.8557;0.8611;0.8622;0.8611;0.8613;0.7333;0.7408;0.7333;0.735;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.8665;0.8683;0.8665;0.8665;0.7778;0.7767;0.7778;0.7768;0.7333;0.7408;0.7333;0.735;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
DecisionTreeClassifier;0.8619;0.8651;0.8619;0.8619;0.8681;0.8691;0.8681;0.8684;0.7333;0.7408;0.7333;0.735;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.8565;0.8601;0.8565;0.8568;0.8542;0.8566;0.8542;0.8546;0.7333;0.7408;0.7333;0.735;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
DecisionTreeClassifier;0.8527;0.8547;0.8527;0.8523;0.875;0.88;0.875;0.8758;0.7333;0.7381;0.7333;0.7347;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
MLPClassifier;0.7314;0.7504;0.7314;0.7308;0.7778;0.7815;0.7778;0.779;0.7333;0.738;0.7333;0.7345;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
MLPClassifier;0.7222;0.7351;0.7222;0.7217;0.7986;0.807;0.7986;0.7996;0.7333;0.738;0.7333;0.7345;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
MLPClassifier;0.7168;0.7333;0.7168;0.7154;0.8889;0.8893;0.8889;0.889;0.7333;0.738;0.7333;0.7345;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.7176;0.733;0.7176;0.7169;0.7986;0.8008;0.7986;0.7993;0.7333;0.738;0.7333;0.7345;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
DecisionTreeClassifier;0.8665;0.8683;0.8665;0.8666;0.8889;0.8933;0.8889;0.8894;0.7333;0.7354;0.7333;0.7341;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
DecisionTreeClassifier;0.8573;0.8591;0.8573;0.8574;0.875;0.8977;0.875;0.878;0.7333;0.7388;0.7333;0.7341;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
DecisionTreeClassifier;0.8643;0.8681;0.8643;0.8644;0.7778;0.7782;0.7778;0.7778;0.7333;0.7354;0.7333;0.7341;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
DecisionTreeClassifier;0.8642;0.8669;0.8642;0.8643;0.7847;0.7856;0.7847;0.7848;0.7333;0.7345;0.7333;0.7336;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
SVC;0.7361;0.7752;0.7361;0.7362;0.7708;0.787;0.7708;0.7723;0.7167;0.749;0.7167;0.7234;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
SVC;0.7299;0.7736;0.7299;0.729;0.7778;0.7896;0.7778;0.777;0.7167;0.7539;0.7167;0.7221;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7338;0.7756;0.7338;0.7326;0.7778;0.7875;0.7778;0.779;0.7167;0.7539;0.7167;0.7221;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7307;0.7726;0.7307;0.7289;0.7778;0.7991;0.7778;0.7797;0.7167;0.7539;0.7167;0.7221;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
SVC;0.726;0.7693;0.726;0.725;0.8403;0.852;0.8403;0.8394;0.7167;0.7539;0.7167;0.7221;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
MLPClassifier;0.7153;0.7298;0.7153;0.7153;0.8472;0.8522;0.8472;0.8476;0.7167;0.7413;0.7167;0.7219;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
MLPClassifier;0.7098;0.7255;0.7098;0.7092;0.8542;0.8576;0.8542;0.8549;0.7167;0.7413;0.7167;0.7219;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
MLPClassifier;0.7191;0.7336;0.7191;0.7188;0.7431;0.7576;0.7431;0.7472;0.7167;0.7413;0.7167;0.7219;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
MLPClassifier;0.7176;0.7307;0.7176;0.7166;0.7708;0.7898;0.7708;0.7702;0.7167;0.7342;0.7167;0.7217;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
SVC;0.7323;0.7757;0.7323;0.7304;0.8264;0.8476;0.8264;0.8295;0.7167;0.7444;0.7167;0.7214;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7261;0.7686;0.7261;0.7258;0.8056;0.844;0.8056;0.8075;0.7167;0.7444;0.7167;0.7214;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7315;0.7741;0.7315;0.7304;0.8125;0.8435;0.8125;0.8163;0.7167;0.7444;0.7167;0.7214;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
MLPClassifier;0.7153;0.7296;0.7153;0.7147;0.8125;0.8187;0.8125;0.8138;0.7167;0.7263;0.7167;0.7195;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.7083;0.7235;0.7083;0.707;0.8056;0.808;0.8056;0.8065;0.7167;0.7247;0.7167;0.7195;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
MLPClassifier;0.7183;0.7361;0.7183;0.7181;0.8194;0.826;0.8194;0.8186;0.7167;0.7247;0.7167;0.7195;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
MLPClassifier;0.7199;0.7319;0.7199;0.7196;0.8264;0.8313;0.8264;0.8239;0.7167;0.7253;0.7167;0.7191;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
MLPClassifier;0.7175;0.73;0.7175;0.717;0.8681;0.8693;0.8681;0.8683;0.7167;0.7253;0.7167;0.7191;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
MLPClassifier;0.723;0.7416;0.723;0.7227;0.8333;0.8338;0.8333;0.8326;0.7167;0.7253;0.7167;0.7191;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
DecisionTreeClassifier;0.8595;0.8622;0.8595;0.8594;0.875;0.8815;0.875;0.8767;0.7167;0.7269;0.7167;0.7185;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
LogisticRegression;0.7029;0.7173;0.7029;0.7019;0.75;0.7585;0.75;0.7486;0.7167;0.7247;0.7167;0.7184;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.7115;0.7321;0.7115;0.7106;0.7222;0.7275;0.7222;0.721;0.7167;0.7247;0.7167;0.7184;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
DecisionTreeClassifier;0.8751;0.8764;0.8751;0.875;0.8333;0.8388;0.8333;0.8327;0.7167;0.7209;0.7167;0.7179;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 312};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=312)
DecisionTreeClassifier;0.8565;0.859;0.8565;0.8564;0.8333;0.834;0.8333;0.8319;0.7167;0.7167;0.7167;0.7167;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 983};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=983)
SVC;0.7283;0.7707;0.7283;0.7267;0.7778;0.7922;0.7778;0.7775;0.7;0.7403;0.7;0.707;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7314;0.7726;0.7314;0.7311;0.7986;0.814;0.7986;0.7983;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7307;0.7728;0.7307;0.7286;0.875;0.881;0.875;0.8749;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7291;0.7698;0.7291;0.7277;0.8056;0.8473;0.8056;0.811;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 403};SVC(C=10, random_state=403)
SVC;0.7353;0.7769;0.7353;0.7339;0.8125;0.8363;0.8125;0.8155;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
SVC;0.7338;0.7759;0.7338;0.7326;0.8403;0.8631;0.8403;0.8413;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
SVC;0.7392;0.7795;0.7392;0.7387;0.7778;0.8201;0.7778;0.779;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
SVC;0.7299;0.7729;0.7299;0.7289;0.7986;0.8101;0.7986;0.8006;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
SVC;0.7354;0.7763;0.7354;0.7344;0.7708;0.7988;0.7708;0.7726;0.7;0.7333;0.7;0.706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
MLPClassifier;0.7122;0.7242;0.7122;0.7107;0.7986;0.7976;0.7986;0.7977;0.7;0.7201;0.7;0.7028;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
MLPClassifier;0.7292;0.7452;0.7292;0.7283;0.7361;0.7492;0.7361;0.7365;0.7;0.7201;0.7;0.7028;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
LogisticRegression;0.7083;0.7211;0.7083;0.7063;0.7431;0.7745;0.7431;0.7469;0.7;0.7107;0.7;0.7026;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.7084;0.7245;0.7084;0.7063;0.7222;0.73;0.7222;0.7179;0.7;0.7081;0.7;0.7017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7083;0.7246;0.7083;0.7071;0.6944;0.7127;0.6944;0.6915;0.7;0.7081;0.7;0.7017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.6991;0.7151;0.6991;0.6984;0.7639;0.7665;0.7639;0.7635;0.7;0.7081;0.7;0.7017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.713;0.733;0.713;0.7112;0.7014;0.7062;0.7014;0.6998;0.7;0.7081;0.7;0.7017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.7099;0.7277;0.7099;0.7092;0.6875;0.7031;0.6875;0.6826;0.7;0.7081;0.7;0.7017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.7091;0.7233;0.7091;0.7067;0.6944;0.7021;0.6944;0.6939;0.7;0.7081;0.7;0.7017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
MLPClassifier;0.7175;0.7352;0.7175;0.717;0.875;0.8774;0.875;0.875;0.7;0.7111;0.7;0.701;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 793, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=793)
MLPClassifier;0.7076;0.7195;0.7076;0.7072;0.8611;0.8645;0.8611;0.8608;0.7;0.7111;0.7;0.701;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
DecisionTreeClassifier;0.8673;0.8692;0.8673;0.8672;0.8333;0.8364;0.8333;0.8341;0.7;0.6986;0.7;0.6984;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 694};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=694)
SVC;0.7261;0.7695;0.7261;0.7258;0.8542;0.8785;0.8542;0.8556;0.6833;0.7224;0.6833;0.6902;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
SVC;0.7369;0.7756;0.7369;0.7356;0.7986;0.8235;0.7986;0.8011;0.6833;0.7224;0.6833;0.6902;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, random_state=902)
MLPClassifier;0.7268;0.745;0.7268;0.7266;0.7708;0.7792;0.7708;0.7726;0.6833;0.6991;0.6833;0.6882;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 563, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=563)
LogisticRegression;0.7107;0.7288;0.7107;0.7086;0.7083;0.7368;0.7083;0.7059;0.6833;0.697;0.6833;0.6866;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7045;0.722;0.7045;0.7038;0.6944;0.7045;0.6944;0.6921;0.6833;0.6937;0.6833;0.6862;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.706;0.7245;0.706;0.705;0.6667;0.6854;0.6667;0.6657;0.6833;0.6937;0.6833;0.6862;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7076;0.7234;0.7076;0.7069;0.6389;0.6624;0.6389;0.6367;0.6833;0.6937;0.6833;0.6862;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.7136;0.7313;0.7136;0.7134;0.6667;0.6827;0.6667;0.6602;0.6833;0.6937;0.6833;0.6862;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.706;0.7232;0.706;0.7054;0.6736;0.6981;0.6736;0.6709;0.6833;0.6937;0.6833;0.6862;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.7114;0.7262;0.7114;0.7111;0.7014;0.7291;0.7014;0.6976;0.6833;0.6937;0.6833;0.6862;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.703;0.7181;0.703;0.7018;0.6944;0.7214;0.6944;0.6938;0.6833;0.6937;0.6833;0.6862;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6998;0.7126;0.6998;0.6974;0.75;0.7574;0.75;0.7516;0.6833;0.6878;0.6833;0.6846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
SVC;0.7315;0.7755;0.7315;0.7312;0.7847;0.8258;0.7847;0.7868;0.6667;0.7113;0.6667;0.6739;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 977};SVC(C=10, random_state=977)
LogisticRegression;0.7045;0.7213;0.7045;0.7048;0.7569;0.787;0.7569;0.7583;0.6667;0.6796;0.6667;0.6705;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7076;0.7233;0.7076;0.7057;0.6597;0.6796;0.6597;0.6568;0.6667;0.6686;0.6667;0.6674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6953;0.7116;0.6953;0.6938;0.7569;0.7582;0.7569;0.7565;0.6667;0.6686;0.6667;0.6674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.7076;0.7242;0.7076;0.7052;0.7292;0.7407;0.7292;0.7289;0.6667;0.6686;0.6667;0.6674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.7053;0.7208;0.7053;0.703;0.6944;0.6985;0.6944;0.6905;0.6667;0.6686;0.6667;0.6674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.6929;0.7066;0.6929;0.6917;0.7222;0.727;0.7222;0.7192;0.6667;0.6686;0.6667;0.6674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7084;0.7268;0.7084;0.7072;0.6736;0.682;0.6736;0.6727;0.65;0.6681;0.65;0.6544;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6968;0.7143;0.6968;0.6949;0.7083;0.7185;0.7083;0.709;0.65;0.6531;0.65;0.6508;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.6944;0.7082;0.6944;0.6936;0.7431;0.755;0.7431;0.7451;0.6333;0.6377;0.6333;0.6338;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 302, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=302)"
LogisticRegression;0.6983;0.7146;0.6983;0.6978;0.6597;0.6769;0.6597;0.6596;0.6333;0.6377;0.6333;0.6338;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.7006;0.7197;0.7006;0.6981;0.7014;0.7071;0.7014;0.7015;0.6333;0.6377;0.6333;0.6338;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 575, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=575)"
LogisticRegression;0.7052;0.7206;0.7052;0.7049;0.6597;0.6669;0.6597;0.6604;0.6167;0.625;0.6167;0.618;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
