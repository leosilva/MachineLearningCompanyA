Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.7986;0.8054;0.7986;0.7981;0.8696;0.873;0.8696;0.8704;0.95;0.953;0.95;0.9499;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
RandomForestClassifier;0.8422;0.8466;0.8422;0.8419;0.8406;0.8416;0.8406;0.8376;0.9333;0.9365;0.9333;0.9337;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 656};RandomForestClassifier(n_estimators=10, random_state=656)
RandomForestClassifier;0.8486;0.8549;0.8486;0.8481;0.8261;0.8261;0.8261;0.8261;0.9333;0.9365;0.9333;0.9337;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
KNeighborsClassifier;0.7664;0.7915;0.7664;0.7632;0.8116;0.8126;0.8116;0.8119;0.9333;0.939;0.9333;0.9336;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7489;0.7584;0.7489;0.7476;0.8406;0.8484;0.8406;0.842;0.9333;0.939;0.9333;0.9336;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8422;0.8467;0.8422;0.8413;0.8551;0.8591;0.8551;0.8534;0.9333;0.934;0.9333;0.9333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
RandomForestClassifier;0.855;0.8619;0.855;0.8549;0.7971;0.8071;0.7971;0.7977;0.9333;0.934;0.9333;0.9333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
KNeighborsClassifier;0.7697;0.7861;0.7697;0.7688;0.8261;0.8323;0.8261;0.8267;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7617;0.7784;0.7617;0.7607;0.7101;0.7239;0.7101;0.7111;0.9167;0.9269;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7584;0.7755;0.7584;0.759;0.7826;0.7817;0.7826;0.7819;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7601;0.7765;0.7601;0.7591;0.8406;0.8406;0.8406;0.8398;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7746;0.7891;0.7746;0.7745;0.7681;0.7697;0.7681;0.7687;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7602;0.7744;0.7602;0.7577;0.8841;0.8896;0.8841;0.8822;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.765;0.7789;0.765;0.7649;0.8696;0.8701;0.8696;0.8695;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.76;0.7732;0.76;0.7604;0.7101;0.7143;0.7101;0.7043;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8453;0.8506;0.8453;0.8444;0.8116;0.8297;0.8116;0.8141;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
RandomForestClassifier;0.8582;0.8614;0.8582;0.8579;0.8261;0.8277;0.8261;0.8251;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.8311;0.8383;0.8311;0.8314;0.8986;0.9017;0.8986;0.898;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.8244;0.8271;0.8244;0.8239;0.942;0.9444;0.942;0.9423;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
KNeighborsClassifier;0.7553;0.7698;0.7553;0.7546;0.8406;0.845;0.8406;0.8408;0.9167;0.9195;0.9167;0.917;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8374;0.8417;0.8374;0.8371;0.8116;0.8182;0.8116;0.8069;0.9167;0.9174;0.9167;0.9166;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
RandomForestClassifier;0.847;0.8551;0.847;0.847;0.8406;0.8536;0.8406;0.8432;0.9167;0.9194;0.9167;0.9165;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.847;0.8547;0.847;0.8465;0.7681;0.7738;0.7681;0.7686;0.9;0.9069;0.9;0.9006;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
KNeighborsClassifier;0.7681;0.7803;0.7681;0.7684;0.8406;0.8433;0.8406;0.8411;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8342;0.84;0.8342;0.8334;0.8551;0.8564;0.8551;0.8539;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
KNeighborsClassifier;0.7263;0.7463;0.7263;0.7271;0.942;0.942;0.942;0.942;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7392;0.755;0.7392;0.7385;0.7681;0.79;0.7681;0.7726;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7777;0.7936;0.7777;0.7776;0.7681;0.7888;0.7681;0.7675;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7377;0.7549;0.7377;0.7373;0.942;0.9426;0.942;0.942;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7457;0.7549;0.7457;0.7448;0.913;0.9197;0.913;0.9137;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7486;0.764;0.7486;0.7484;0.8406;0.8428;0.8406;0.8399;0.9;0.906;0.9;0.9005;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8389;0.8436;0.8389;0.8391;0.8841;0.8878;0.8841;0.8838;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
RandomForestClassifier;0.8276;0.8339;0.8276;0.8273;0.8116;0.8102;0.8116;0.8075;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
RandomForestClassifier;0.8486;0.8547;0.8486;0.8488;0.7681;0.7905;0.7681;0.7708;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 656};RandomForestClassifier(n_estimators=10, random_state=656)
RandomForestClassifier;0.8518;0.8562;0.8518;0.8516;0.8696;0.8748;0.8696;0.8691;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
RandomForestClassifier;0.8357;0.8402;0.8357;0.835;0.8986;0.9017;0.8986;0.898;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
RandomForestClassifier;0.8407;0.8447;0.8407;0.8398;0.8406;0.8406;0.8406;0.8406;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
KNeighborsClassifier;0.7746;0.7947;0.7746;0.7736;0.8261;0.8303;0.8261;0.8271;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7214;0.7376;0.7214;0.7208;0.8261;0.8348;0.8261;0.8272;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7762;0.7918;0.7762;0.7753;0.8116;0.8331;0.8116;0.8156;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7392;0.7522;0.7392;0.7398;0.8696;0.8812;0.8696;0.8663;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8551;0.8621;0.8551;0.8551;0.8696;0.8696;0.8696;0.8696;0.9;0.9;0.9;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
RandomForestClassifier;0.8308;0.8376;0.8308;0.8308;0.8696;0.8716;0.8696;0.8671;0.9;0.9027;0.9;0.8998;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
KNeighborsClassifier;0.7617;0.7808;0.7617;0.7583;0.8261;0.8306;0.8261;0.8264;0.9;0.9027;0.9;0.8998;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7682;0.7867;0.7682;0.7689;0.8406;0.8501;0.8406;0.8429;0.9;0.9027;0.9;0.8998;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7537;0.7731;0.7537;0.7524;0.8116;0.8153;0.8116;0.8093;0.8833;0.8935;0.8833;0.8844;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7587;0.7697;0.7587;0.7557;0.8406;0.8416;0.8406;0.8408;0.8833;0.8868;0.8833;0.884;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7715;0.7897;0.7715;0.7707;0.7246;0.723;0.7246;0.7236;0.8833;0.8868;0.8833;0.884;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7649;0.7816;0.7649;0.765;0.7391;0.7468;0.7391;0.7389;0.8833;0.8875;0.8833;0.884;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8342;0.8391;0.8342;0.8339;0.8841;0.8841;0.8841;0.8841;0.8833;0.8848;0.8833;0.8837;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
SVC;0.6893;0.7442;0.6893;0.684;0.8406;0.841;0.8406;0.8405;0.8833;0.8939;0.8833;0.8836;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
SVC;0.6781;0.7332;0.6781;0.6755;0.8116;0.8573;0.8116;0.8003;0.8833;0.8939;0.8833;0.8836;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
DecisionTreeClassifier;0.8084;0.8115;0.8084;0.8076;0.8261;0.8313;0.8261;0.8264;0.8833;0.9022;0.8833;0.8834;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
RandomForestClassifier;0.842;0.8457;0.842;0.8414;0.8261;0.8274;0.8261;0.8259;0.8833;0.884;0.8833;0.8833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
KNeighborsClassifier;0.7602;0.7754;0.7602;0.7592;0.7681;0.7809;0.7681;0.7688;0.8833;0.884;0.8833;0.8833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8342;0.8415;0.8342;0.833;0.7971;0.8006;0.7971;0.7981;0.8833;0.8833;0.8833;0.8833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 497};RandomForestClassifier(n_estimators=10, random_state=497)
RandomForestClassifier;0.8486;0.8559;0.8486;0.8476;0.7826;0.79;0.7826;0.7844;0.8833;0.884;0.8833;0.8833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
RandomForestClassifier;0.8535;0.8587;0.8535;0.853;0.7391;0.7375;0.7391;0.7381;0.8833;0.884;0.8833;0.8833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
DecisionTreeClassifier;0.8197;0.8267;0.8197;0.8191;0.7246;0.7315;0.7246;0.723;0.8833;0.895;0.8833;0.8818;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
DecisionTreeClassifier;0.7955;0.8012;0.7955;0.7942;0.8406;0.8529;0.8406;0.8352;0.8667;0.8749;0.8667;0.8684;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.8244;0.8291;0.8244;0.8245;0.8261;0.8362;0.8261;0.8247;0.8667;0.8749;0.8667;0.8684;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
SVC;0.6891;0.7401;0.6891;0.6836;0.7536;0.7964;0.7536;0.7587;0.8667;0.8785;0.8667;0.8673;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6909;0.7418;0.6909;0.6852;0.8406;0.864;0.8406;0.8392;0.8667;0.8785;0.8667;0.8673;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6875;0.7306;0.6875;0.6812;0.8841;0.8983;0.8841;0.8855;0.8667;0.8785;0.8667;0.8673;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6972;0.7513;0.6972;0.6915;0.7101;0.7433;0.7101;0.7122;0.8667;0.8785;0.8667;0.8673;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.686;0.7395;0.686;0.6827;0.7101;0.7403;0.7101;0.7144;0.8667;0.8785;0.8667;0.8673;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6941;0.7389;0.6941;0.6884;0.7971;0.8137;0.7971;0.7973;0.8667;0.8785;0.8667;0.8673;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
RandomForestClassifier;0.8422;0.8485;0.8422;0.8425;0.8696;0.8707;0.8696;0.8698;0.8667;0.8681;0.8667;0.867;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
DecisionTreeClassifier;0.8149;0.8182;0.8149;0.8142;0.7681;0.7648;0.7681;0.7657;0.8667;0.8692;0.8667;0.8669;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=897)
RandomForestClassifier;0.8358;0.8415;0.8358;0.8355;0.8986;0.8994;0.8986;0.8981;0.8667;0.8673;0.8667;0.8666;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 656};RandomForestClassifier(n_estimators=10, random_state=656)
RandomForestClassifier;0.8503;0.8569;0.8503;0.8502;0.7391;0.7381;0.7391;0.7384;0.8667;0.869;0.8667;0.8664;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 497};RandomForestClassifier(n_estimators=20, random_state=497)
KNeighborsClassifier;0.7616;0.7772;0.7616;0.7602;0.7826;0.8029;0.7826;0.7846;0.8667;0.8764;0.8667;0.8657;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8117;0.8182;0.8117;0.8118;0.8261;0.8249;0.8261;0.8221;0.85;0.8611;0.85;0.8517;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.8148;0.8216;0.8148;0.8154;0.7681;0.7726;0.7681;0.7688;0.85;0.8541;0.85;0.851;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
SVC;0.7005;0.7518;0.7005;0.6943;0.6232;0.6779;0.6232;0.6249;0.85;0.8639;0.85;0.8508;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
RandomForestClassifier;0.8486;0.8547;0.8486;0.8479;0.8551;0.8549;0.8551;0.8547;0.85;0.8599;0.85;0.8507;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 656};RandomForestClassifier(n_estimators=20, random_state=656)
RandomForestClassifier;0.86;0.8661;0.86;0.8597;0.7681;0.7703;0.7681;0.7676;0.85;0.8539;0.85;0.8505;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 371};RandomForestClassifier(n_estimators=20, random_state=371)
DecisionTreeClassifier;0.8067;0.8126;0.8067;0.8057;0.7391;0.739;0.7391;0.7381;0.85;0.855;0.85;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
DecisionTreeClassifier;0.8099;0.8186;0.8099;0.809;0.8406;0.8385;0.8406;0.8393;0.8333;0.8478;0.8333;0.8347;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
DecisionTreeClassifier;0.8149;0.8205;0.8149;0.8144;0.7971;0.8036;0.7971;0.7995;0.8333;0.8364;0.8333;0.8345;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
DecisionTreeClassifier;0.8131;0.8201;0.8131;0.813;0.8261;0.8333;0.8261;0.8265;0.8333;0.8364;0.8333;0.8345;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.8099;0.8159;0.8099;0.8095;0.8406;0.8413;0.8406;0.8401;0.8333;0.8399;0.8333;0.8344;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
DecisionTreeClassifier;0.8149;0.8214;0.8149;0.8154;0.7971;0.8055;0.7971;0.7959;0.8333;0.8399;0.8333;0.8344;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.8164;0.8247;0.8164;0.8161;0.7971;0.7994;0.7971;0.798;0.8333;0.8399;0.8333;0.8344;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
SVC;0.7004;0.7492;0.7004;0.6957;0.7391;0.7629;0.7391;0.7344;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6924;0.747;0.6924;0.6879;0.8261;0.8597;0.8261;0.8246;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
SVC;0.7006;0.7492;0.7006;0.6961;0.7246;0.7742;0.7246;0.7271;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
SVC;0.6763;0.7283;0.6763;0.671;0.913;0.9246;0.913;0.9138;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6907;0.7358;0.6907;0.6862;0.7391;0.7601;0.7391;0.7382;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.6941;0.7402;0.6941;0.6873;0.6812;0.7125;0.6812;0.6784;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.6924;0.7416;0.6924;0.6884;0.7826;0.82;0.7826;0.7803;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.6973;0.7465;0.6973;0.6911;0.7536;0.7845;0.7536;0.7453;0.8333;0.8498;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6957;0.7441;0.6957;0.6926;0.6812;0.6969;0.6812;0.6793;0.8333;0.8413;0.8333;0.834;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
DecisionTreeClassifier;0.7939;0.8037;0.7939;0.7933;0.7971;0.7985;0.7971;0.7968;0.8333;0.8424;0.8333;0.8336;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=897)
DecisionTreeClassifier;0.8116;0.816;0.8116;0.8119;0.7536;0.7528;0.7536;0.7516;0.8167;0.8287;0.8167;0.819;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.8101;0.8141;0.8101;0.8091;0.7391;0.7382;0.7391;0.7384;0.8167;0.8214;0.8167;0.8181;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
SVC;0.7005;0.7511;0.7005;0.6955;0.7971;0.8278;0.7971;0.7967;0.8167;0.8401;0.8167;0.8175;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.6939;0.7412;0.6939;0.6879;0.6812;0.7062;0.6812;0.6749;0.8167;0.8401;0.8167;0.8175;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.6942;0.7472;0.6942;0.6881;0.7391;0.7747;0.7391;0.7352;0.8167;0.8362;0.8167;0.8173;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
SVC;0.6891;0.737;0.6891;0.6843;0.8841;0.8977;0.8841;0.884;0.8167;0.8362;0.8167;0.8173;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7023;0.7515;0.7023;0.6964;0.7971;0.8202;0.7971;0.7965;0.8167;0.8362;0.8167;0.8173;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
SVC;0.7053;0.7533;0.7053;0.6987;0.7536;0.7917;0.7536;0.7559;0.8167;0.8362;0.8167;0.8173;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6911;0.7417;0.6911;0.6879;0.8696;0.8919;0.8696;0.8689;0.8167;0.8362;0.8167;0.8173;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
DecisionTreeClassifier;0.8004;0.8033;0.8004;0.8003;0.7681;0.7698;0.7681;0.7659;0.8167;0.819;0.8167;0.8164;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
DecisionTreeClassifier;0.8244;0.8308;0.8244;0.8237;0.7971;0.8001;0.7971;0.7964;0.8167;0.8153;0.8167;0.8147;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
MLPClassifier;0.6956;0.7177;0.6956;0.6918;0.7536;0.7593;0.7536;0.7513;0.8167;0.8246;0.8167;0.813;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
MLPClassifier;0.6908;0.7134;0.6908;0.6865;0.6812;0.6852;0.6812;0.6767;0.8167;0.8361;0.8167;0.8125;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
DecisionTreeClassifier;0.8068;0.8113;0.8068;0.8066;0.8116;0.8138;0.8116;0.8092;0.8167;0.837;0.8167;0.8105;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
DecisionTreeClassifier;0.8212;0.8246;0.8212;0.8204;0.7536;0.7616;0.7536;0.7547;0.8;0.8039;0.8;0.8016;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
DecisionTreeClassifier;0.8278;0.8296;0.8278;0.8271;0.7681;0.764;0.7681;0.7629;0.8;0.8039;0.8;0.8016;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
SVC;0.7134;0.7567;0.7134;0.7099;0.7101;0.7739;0.7101;0.6972;0.8;0.8272;0.8;0.8008;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
SVC;0.6892;0.7423;0.6892;0.6864;0.8406;0.8668;0.8406;0.8332;0.8;0.8225;0.8;0.8004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 72};SVC(C=10, random_state=72)
SVC;0.7054;0.7543;0.7054;0.6986;0.7246;0.7462;0.7246;0.724;0.8;0.8311;0.8;0.8004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
SVC;0.6943;0.743;0.6943;0.6908;0.7536;0.7698;0.7536;0.7531;0.8;0.8225;0.8;0.8004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, random_state=430)
SVC;0.7004;0.7523;0.7004;0.6934;0.6812;0.7349;0.6812;0.6693;0.8;0.8225;0.8;0.8004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 764};SVC(C=10, random_state=764)
DecisionTreeClassifier;0.8067;0.8105;0.8067;0.8061;0.8406;0.8472;0.8406;0.838;0.8;0.799;0.8;0.7985;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
MLPClassifier;0.7117;0.7371;0.7117;0.708;0.7391;0.7538;0.7391;0.7378;0.8;0.8191;0.8;0.7985;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
MLPClassifier;0.7085;0.7297;0.7085;0.7041;0.7826;0.7929;0.7826;0.7842;0.8;0.8165;0.8;0.7962;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
MLPClassifier;0.6891;0.7063;0.6891;0.6844;0.8261;0.8436;0.8261;0.826;0.8;0.8067;0.8;0.7952;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.7054;0.7238;0.7054;0.7022;0.7101;0.7104;0.7101;0.7101;0.8;0.824;0.8;0.7938;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.7102;0.7334;0.7102;0.7062;0.7826;0.7861;0.7826;0.7821;0.8;0.824;0.8;0.7938;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
DecisionTreeClassifier;0.8068;0.8155;0.8068;0.807;0.7536;0.754;0.7536;0.7536;0.7833;0.7872;0.7833;0.7849;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
DecisionTreeClassifier;0.8229;0.8305;0.8229;0.8235;0.7391;0.7415;0.7391;0.7308;0.7833;0.7894;0.7833;0.7843;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=897)
DecisionTreeClassifier;0.8035;0.8114;0.8035;0.8032;0.7826;0.8211;0.7826;0.7871;0.7833;0.7869;0.7833;0.7838;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
DecisionTreeClassifier;0.8117;0.8184;0.8117;0.812;0.8261;0.8253;0.8261;0.8254;0.7833;0.7837;0.7833;0.7832;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
MLPClassifier;0.7004;0.7151;0.7004;0.6974;0.7246;0.7361;0.7246;0.7158;0.7833;0.8178;0.7833;0.7821;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
DecisionTreeClassifier;0.8196;0.8249;0.8196;0.8187;0.7391;0.7386;0.7391;0.7288;0.7833;0.787;0.7833;0.7815;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 65};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=65)
MLPClassifier;0.7165;0.7395;0.7165;0.7145;0.7101;0.7199;0.7101;0.7093;0.7833;0.8062;0.7833;0.7812;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
MLPClassifier;0.7148;0.7356;0.7148;0.7107;0.5797;0.58;0.5797;0.5792;0.7833;0.7981;0.7833;0.7798;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.6988;0.722;0.6988;0.6953;0.8261;0.8277;0.8261;0.8259;0.7833;0.8043;0.7833;0.7775;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
MLPClassifier;0.7101;0.7311;0.7101;0.7069;0.7391;0.7394;0.7391;0.7376;0.7667;0.781;0.7667;0.7665;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.7181;0.7431;0.7181;0.7158;0.6812;0.7056;0.6812;0.6554;0.7667;0.7976;0.7667;0.7649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.7038;0.7203;0.7038;0.6974;0.6957;0.6959;0.6957;0.6956;0.7667;0.7876;0.7667;0.7609;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.7132;0.7402;0.7132;0.7104;0.6522;0.6729;0.6522;0.6514;0.7667;0.7857;0.7667;0.7563;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
MLPClassifier;0.7101;0.7353;0.7101;0.7084;0.6812;0.7278;0.6812;0.6759;0.75;0.7632;0.75;0.7482;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.6988;0.7253;0.6988;0.6948;0.7826;0.8009;0.7826;0.7837;0.75;0.7663;0.75;0.7478;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.7101;0.7339;0.7101;0.706;0.6957;0.7028;0.6957;0.6934;0.75;0.7828;0.75;0.7476;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.7134;0.7371;0.7134;0.7083;0.6522;0.679;0.6522;0.6508;0.75;0.7753;0.75;0.7458;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.6988;0.7196;0.6988;0.6967;0.6957;0.6992;0.6957;0.6959;0.75;0.7651;0.75;0.7437;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.7085;0.731;0.7085;0.704;0.6232;0.6226;0.6232;0.6221;0.75;0.7639;0.75;0.7386;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.6973;0.7195;0.6973;0.6947;0.7391;0.7715;0.7391;0.7363;0.7333;0.7419;0.7333;0.7322;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.7038;0.7229;0.7038;0.6991;0.7246;0.7361;0.7246;0.725;0.7333;0.7387;0.7333;0.7321;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.7069;0.7295;0.7069;0.7041;0.7826;0.7934;0.7826;0.78;0.7333;0.7651;0.7333;0.7318;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.707;0.7318;0.707;0.7017;0.7536;0.7756;0.7536;0.7466;0.7333;0.7429;0.7333;0.7312;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.6973;0.7166;0.6973;0.6931;0.7971;0.8025;0.7971;0.7987;0.7333;0.7456;0.7333;0.731;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
DecisionTreeClassifier;0.8247;0.8285;0.8247;0.8245;0.6957;0.6927;0.6957;0.6933;0.7333;0.7389;0.7333;0.7296;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 386};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=386)
MLPClassifier;0.6973;0.7161;0.6973;0.6919;0.6957;0.696;0.6957;0.6908;0.7167;0.7278;0.7167;0.7148;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.7037;0.7294;0.7037;0.7003;0.7246;0.7473;0.7246;0.7242;0.7167;0.7385;0.7167;0.7138;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 820, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=820)
MLPClassifier;0.7102;0.7299;0.7102;0.7052;0.6667;0.6758;0.6667;0.6558;0.7167;0.7302;0.7167;0.7136;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 877, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=877)
MLPClassifier;0.7134;0.7317;0.7134;0.7105;0.6667;0.6749;0.6667;0.6644;0.7167;0.741;0.7167;0.7037;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 891, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=891)
LogisticRegression;0.6778;0.7054;0.6778;0.6737;0.6377;0.6388;0.6377;0.6323;0.7;0.7083;0.7;0.6995;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.6942;0.7317;0.6942;0.6902;0.6812;0.7027;0.6812;0.6805;0.6833;0.7214;0.6833;0.687;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6957;0.7286;0.6957;0.6929;0.6522;0.6913;0.6522;0.6482;0.6833;0.7252;0.6833;0.6855;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.7086;0.7401;0.7086;0.7065;0.5797;0.6142;0.5797;0.5815;0.6833;0.7037;0.6833;0.6839;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.6954;0.7287;0.6954;0.6908;0.6522;0.7267;0.6522;0.6532;0.6833;0.7216;0.6833;0.6831;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.6781;0.7024;0.6781;0.6719;0.6667;0.6799;0.6667;0.6606;0.6833;0.6892;0.6833;0.6828;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6861;0.7135;0.6861;0.6827;0.6522;0.6919;0.6522;0.6436;0.6833;0.7351;0.6833;0.6828;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6955;0.726;0.6955;0.6917;0.7246;0.7356;0.7246;0.7198;0.6833;0.7012;0.6833;0.6821;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6796;0.7096;0.6796;0.6753;0.6232;0.633;0.6232;0.6238;0.6833;0.6944;0.6833;0.6817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6892;0.718;0.6892;0.6844;0.7246;0.7218;0.7246;0.7216;0.6667;0.7062;0.6667;0.6699;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.6924;0.7258;0.6924;0.6875;0.7391;0.7611;0.7391;0.7337;0.6667;0.7007;0.6667;0.6676;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6956;0.7289;0.6956;0.6899;0.7246;0.7686;0.7246;0.7247;0.6667;0.7007;0.6667;0.6676;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6987;0.7319;0.6987;0.695;0.6957;0.7139;0.6957;0.6907;0.6667;0.7007;0.6667;0.6676;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.7023;0.7362;0.7023;0.6983;0.6667;0.6945;0.6667;0.6659;0.6667;0.7007;0.6667;0.6676;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6926;0.7127;0.6926;0.6884;0.6957;0.6998;0.6957;0.6957;0.6667;0.6824;0.6667;0.6662;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6893;0.7216;0.6893;0.6852;0.6087;0.6138;0.6087;0.6084;0.6667;0.6748;0.6667;0.6652;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6861;0.7137;0.6861;0.6837;0.6522;0.7021;0.6522;0.6534;0.6667;0.6816;0.6667;0.6649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6877;0.7147;0.6877;0.684;0.6957;0.7138;0.6957;0.6931;0.6667;0.6816;0.6667;0.6649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6924;0.7203;0.6924;0.6903;0.7246;0.7666;0.7246;0.7106;0.6667;0.6816;0.6667;0.6649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6892;0.7108;0.6892;0.6851;0.6522;0.7038;0.6522;0.64;0.6667;0.6816;0.6667;0.6649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.6891;0.7258;0.6891;0.6865;0.7246;0.7377;0.7246;0.7239;0.6667;0.6816;0.6667;0.6649;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.6893;0.7156;0.6893;0.6828;0.6667;0.6835;0.6667;0.6609;0.65;0.6812;0.65;0.6521;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6844;0.709;0.6844;0.6803;0.6667;0.6747;0.6667;0.6615;0.65;0.6704;0.65;0.6504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6925;0.7284;0.6925;0.6889;0.6232;0.6371;0.6232;0.6109;0.65;0.6704;0.65;0.6504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6715;0.6982;0.6715;0.6669;0.7826;0.8179;0.7826;0.7801;0.65;0.6704;0.65;0.6504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6811;0.7101;0.6811;0.6783;0.7536;0.7994;0.7536;0.7556;0.65;0.6891;0.65;0.6496;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.6973;0.7302;0.6973;0.6949;0.6377;0.6881;0.6377;0.632;0.65;0.6622;0.65;0.6492;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
LogisticRegression;0.6781;0.7001;0.6781;0.6712;0.7246;0.7438;0.7246;0.7227;0.65;0.6622;0.65;0.6492;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6715;0.6953;0.6715;0.6665;0.7681;0.7874;0.7681;0.7704;0.65;0.6622;0.65;0.6492;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 960, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=960)"
LogisticRegression;0.678;0.7034;0.678;0.6745;0.7391;0.7607;0.7391;0.7369;0.65;0.6676;0.65;0.6469;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 48, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=48)"
