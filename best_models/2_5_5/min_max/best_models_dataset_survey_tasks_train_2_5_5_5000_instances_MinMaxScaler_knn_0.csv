Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9138;0.9147;0.9138;0.914;0.9248;0.9264;0.9248;0.9252;0.95;0.9516;0.95;0.9504;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9146;0.9153;0.9146;0.9148;0.9161;0.9175;0.9161;0.9165;0.95;0.9516;0.95;0.9504;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.914;0.915;0.914;0.9142;0.9188;0.9187;0.9188;0.9187;0.95;0.9516;0.95;0.9504;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9132;0.9143;0.9132;0.9135;0.9248;0.9259;0.9248;0.9251;0.95;0.9516;0.95;0.9504;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9145;0.9153;0.9145;0.9147;0.9289;0.9291;0.9289;0.929;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9153;0.916;0.9153;0.9155;0.9007;0.9026;0.9007;0.9011;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9149;0.9158;0.9149;0.9151;0.9201;0.9203;0.9201;0.9201;0.9333;0.937;0.9333;0.9341;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9151;0.9161;0.9151;0.9153;0.9275;0.928;0.9275;0.9277;0.9333;0.9349;0.9333;0.9337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9149;0.9158;0.9149;0.9151;0.9249;0.9257;0.9249;0.9251;0.9333;0.9349;0.9333;0.9337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9157;0.9165;0.9157;0.9159;0.9107;0.911;0.9107;0.9108;0.9333;0.9349;0.9333;0.9337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9167;0.9174;0.9167;0.9169;0.9162;0.9169;0.9162;0.9164;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9159;0.9166;0.9159;0.9161;0.9161;0.9166;0.9161;0.9163;0.9167;0.9235;0.9167;0.9176;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9167;0.9177;0.9167;0.9169;0.9081;0.9094;0.9081;0.9085;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.912;0.9129;0.912;0.9122;0.9248;0.925;0.9248;0.9249;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9143;0.9154;0.9143;0.9146;0.9202;0.921;0.9202;0.9205;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9166;0.9175;0.9166;0.9169;0.9121;0.913;0.9121;0.9124;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9137;0.9146;0.9137;0.914;0.9269;0.9281;0.9269;0.9272;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9166;0.9175;0.9166;0.9169;0.9148;0.9158;0.9148;0.9151;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9135;0.9143;0.9135;0.9137;0.9302;0.9307;0.9302;0.9304;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.917;0.9176;0.917;0.9172;0.9235;0.924;0.9235;0.9236;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9151;0.9159;0.9151;0.9153;0.9114;0.9118;0.9114;0.9115;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9153;0.9161;0.9153;0.9155;0.9115;0.9114;0.9115;0.9114;0.9167;0.919;0.9167;0.9175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9149;0.9159;0.9149;0.9152;0.9221;0.9232;0.9221;0.9224;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9164;0.9174;0.9164;0.9166;0.9195;0.9201;0.9195;0.9197;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9127;0.9133;0.9127;0.9129;0.9188;0.9195;0.9188;0.9191;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
KNeighborsClassifier;0.9166;0.9172;0.9166;0.9167;0.9289;0.9291;0.9289;0.9289;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9169;0.9174;0.9169;0.917;0.9128;0.9142;0.9128;0.9131;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9133;0.9142;0.9133;0.9135;0.9195;0.9194;0.9195;0.9195;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
KNeighborsClassifier;0.9185;0.9191;0.9185;0.9187;0.9107;0.9136;0.9107;0.9114;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9149;0.9158;0.9149;0.9151;0.9268;0.9274;0.9268;0.927;0.9;0.9043;0.9;0.9011;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
