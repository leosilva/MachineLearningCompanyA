Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9373;0.9385;0.9373;0.9373;0.9388;0.9427;0.9388;0.939;0.9333;0.9406;0.9333;0.9316;0.985;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.929;0.9312;0.929;0.929;0.9524;0.9544;0.9524;0.9523;0.9333;0.9406;0.9333;0.9316;0.9863;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9361;0.9375;0.9361;0.936;0.949;0.9496;0.949;0.9491;0.9333;0.9406;0.9333;0.9316;0.9862;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
DecisionTreeClassifier;0.9305;0.933;0.9305;0.9306;0.9388;0.9463;0.9388;0.939;0.9333;0.9406;0.9333;0.9316;0.9829;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
DecisionTreeClassifier;0.9384;0.9394;0.9384;0.9384;0.9048;0.9142;0.9048;0.9043;0.9167;0.9214;0.9167;0.9165;0.986;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.938;0.9383;0.938;0.9379;0.9286;0.9312;0.9286;0.9285;0.9167;0.9214;0.9167;0.9165;0.9853;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.935;0.9368;0.935;0.9351;0.9218;0.926;0.9218;0.9217;0.9167;0.9214;0.9167;0.9165;0.9845;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
DecisionTreeClassifier;0.932;0.9343;0.932;0.9319;0.9422;0.9474;0.9422;0.9416;0.9167;0.9214;0.9167;0.9165;0.9849;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.9354;0.9359;0.9354;0.9353;0.9286;0.931;0.9286;0.9283;0.9167;0.9214;0.9167;0.9165;0.9836;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.9354;0.9366;0.9354;0.9353;0.9388;0.9422;0.9388;0.9384;0.9167;0.9214;0.9167;0.9165;0.9848;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.9346;0.9376;0.9346;0.9349;0.9116;0.9132;0.9116;0.9111;0.9167;0.9278;0.9167;0.916;0.9856;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.9316;0.9328;0.9316;0.9316;0.9422;0.9458;0.9422;0.9423;0.9167;0.9278;0.9167;0.916;0.9866;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
MLPClassifier;0.9153;0.9222;0.9153;0.916;0.932;0.939;0.932;0.9328;0.9167;0.9278;0.9167;0.916;0.985;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
RandomForestClassifier;0.938;0.9392;0.938;0.9379;0.9184;0.9217;0.9184;0.9182;0.9167;0.9286;0.9167;0.9139;0.991;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 859};RandomForestClassifier(n_estimators=20, random_state=859)
DecisionTreeClassifier;0.935;0.9369;0.935;0.935;0.949;0.9504;0.949;0.949;0.9167;0.9286;0.9167;0.9139;0.9854;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.9358;0.9368;0.9358;0.9357;0.9184;0.9259;0.9184;0.9177;0.9167;0.9286;0.9167;0.9139;0.991;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 46};RandomForestClassifier(n_estimators=10, random_state=46)
DecisionTreeClassifier;0.9422;0.9432;0.9422;0.9422;0.9184;0.919;0.9184;0.9186;0.9167;0.9262;0.9167;0.9133;0.9875;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9376;0.9388;0.9376;0.9376;0.932;0.932;0.932;0.9314;0.9167;0.9262;0.9167;0.9133;0.9845;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.9316;0.9328;0.9316;0.9316;0.9626;0.9629;0.9626;0.9625;0.9167;0.9262;0.9167;0.9133;0.9856;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9297;0.9327;0.9297;0.9297;0.9116;0.9154;0.9116;0.9121;0.9167;0.9262;0.9167;0.9133;0.9847;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.9369;0.9373;0.9369;0.9368;0.9388;0.9388;0.9388;0.9387;0.9167;0.9262;0.9167;0.9133;0.9904;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 46};RandomForestClassifier(n_estimators=10, random_state=46)
DecisionTreeClassifier;0.9384;0.9391;0.9384;0.9383;0.9354;0.9356;0.9354;0.9355;0.9167;0.9262;0.9167;0.9133;0.9858;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9346;0.9354;0.9346;0.9346;0.9456;0.9457;0.9456;0.9455;0.9167;0.9262;0.9167;0.9133;0.9837;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.938;0.9388;0.938;0.938;0.9218;0.9248;0.9218;0.9218;0.9;0.9094;0.9;0.8999;0.9867;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
MLPClassifier;0.9127;0.917;0.9127;0.9131;0.9082;0.917;0.9082;0.909;0.9;0.9058;0.9;0.8995;0.9822;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
KNeighborsClassifier;0.9123;0.915;0.9123;0.9122;0.949;0.9531;0.949;0.9496;0.9;0.9167;0.9;0.8987;0.9745;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.901;0.903;0.901;0.9009;0.9218;0.9286;0.9218;0.9224;0.9;0.9167;0.9;0.8987;0.9709;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8987;0.9018;0.8987;0.8987;0.932;0.9326;0.932;0.9321;0.9;0.9167;0.9;0.8987;0.9745;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9093;0.9116;0.9093;0.9093;0.9354;0.941;0.9354;0.9358;0.9;0.9167;0.9;0.8987;0.9747;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9048;0.9086;0.9048;0.905;0.915;0.9255;0.915;0.9157;0.9;0.9167;0.9;0.8987;0.9747;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9116;0.9127;0.9116;0.9117;0.9014;0.9119;0.9014;0.9026;0.9;0.9167;0.9;0.8987;0.9726;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9074;0.9093;0.9074;0.9075;0.9184;0.9258;0.9184;0.9188;0.9;0.9167;0.9;0.8987;0.9773;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9033;0.9051;0.9033;0.9032;0.9558;0.957;0.9558;0.956;0.9;0.9167;0.9;0.8987;0.9715;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9033;0.906;0.9033;0.903;0.9184;0.9259;0.9184;0.9193;0.9;0.9167;0.9;0.8987;0.9748;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8972;0.8999;0.8972;0.8973;0.9286;0.9379;0.9286;0.9294;0.9;0.9167;0.9;0.8987;0.975;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.91;0.9117;0.91;0.9101;0.9014;0.9118;0.9014;0.9019;0.9;0.9167;0.9;0.8987;0.9716;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.935;0.936;0.935;0.935;0.932;0.9362;0.932;0.932;0.9;0.9167;0.9;0.8987;0.9913;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 263};RandomForestClassifier(n_estimators=5, random_state=263)
KNeighborsClassifier;0.9093;0.9109;0.9093;0.9093;0.9184;0.9216;0.9184;0.919;0.9;0.9167;0.9;0.8987;0.9771;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8968;0.8986;0.8968;0.8968;0.9592;0.9604;0.9592;0.9593;0.9;0.9167;0.9;0.8987;0.9734;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.9369;0.9376;0.9369;0.9368;0.9388;0.9395;0.9388;0.9385;0.9;0.9019;0.9;0.8985;0.9859;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
DecisionTreeClassifier;0.938;0.9386;0.938;0.9379;0.9286;0.929;0.9286;0.9282;0.9;0.9019;0.9;0.8985;0.9851;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
DecisionTreeClassifier;0.9357;0.937;0.9357;0.9358;0.9524;0.9527;0.9524;0.9524;0.9;0.9019;0.9;0.8985;0.985;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
DecisionTreeClassifier;0.9343;0.9352;0.9343;0.9344;0.9286;0.9283;0.9286;0.9284;0.9;0.9127;0.9;0.8977;0.9848;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
MLPClassifier;0.9199;0.9241;0.9199;0.9201;0.9218;0.9315;0.9218;0.9225;0.9;0.9127;0.9;0.8977;0.9858;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
MLPClassifier;0.9157;0.9196;0.9157;0.9152;0.9456;0.949;0.9456;0.9461;0.9;0.9127;0.9;0.8977;0.9859;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
MLPClassifier;0.9214;0.9241;0.9214;0.9214;0.915;0.9199;0.915;0.9151;0.9;0.9127;0.9;0.8977;0.9863;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
MLPClassifier;0.9199;0.9244;0.9199;0.9199;0.9558;0.9564;0.9558;0.9558;0.9;0.9127;0.9;0.8977;0.9851;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
DecisionTreeClassifier;0.9335;0.9349;0.9335;0.9336;0.9558;0.9559;0.9558;0.9557;0.9;0.9127;0.9;0.8977;0.984;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
MLPClassifier;0.9116;0.9168;0.9116;0.9119;0.9456;0.9493;0.9456;0.9458;0.9;0.9111;0.9;0.8974;0.9826;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
RandomForestClassifier;0.9395;0.9406;0.9395;0.9395;0.9354;0.9358;0.9354;0.9355;0.9;0.9039;0.9;0.8968;0.9905;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 263};RandomForestClassifier(n_estimators=5, random_state=263)
RandomForestClassifier;0.9357;0.9364;0.9357;0.9357;0.932;0.9321;0.932;0.932;0.9;0.9141;0.9;0.895;0.991;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 46};RandomForestClassifier(n_estimators=20, random_state=46)
RandomForestClassifier;0.9376;0.939;0.9376;0.9376;0.9388;0.9392;0.9388;0.9385;0.9;0.9141;0.9;0.895;0.9904;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 263};RandomForestClassifier(n_estimators=20, random_state=263)
RandomForestClassifier;0.932;0.9327;0.932;0.932;0.9456;0.9454;0.9456;0.9454;0.9;0.9141;0.9;0.895;0.9896;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 263};RandomForestClassifier(n_estimators=20, random_state=263)
RandomForestClassifier;0.9335;0.9343;0.9335;0.9334;0.9558;0.956;0.9558;0.9557;0.9;0.9141;0.9;0.895;0.9906;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 46};RandomForestClassifier(n_estimators=10, random_state=46)
RandomForestClassifier;0.9418;0.9423;0.9418;0.9417;0.915;0.9155;0.915;0.9146;0.9;0.9141;0.9;0.895;0.9908;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 46};RandomForestClassifier(n_estimators=20, random_state=46)
RandomForestClassifier;0.941;0.9413;0.941;0.9409;0.9184;0.9195;0.9184;0.9188;0.9;0.9141;0.9;0.895;0.9909;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 46};RandomForestClassifier(n_estimators=10, random_state=46)
RandomForestClassifier;0.9376;0.9387;0.9376;0.9375;0.932;0.9331;0.932;0.9317;0.9;0.9141;0.9;0.895;0.991;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 46};RandomForestClassifier(n_estimators=10, random_state=46)
RandomForestClassifier;0.9338;0.9344;0.9338;0.9336;0.9354;0.9354;0.9354;0.9349;0.9;0.9141;0.9;0.895;0.9912;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 46};RandomForestClassifier(n_estimators=10, random_state=46)
RandomForestClassifier;0.9358;0.9361;0.9358;0.9356;0.949;0.9506;0.949;0.949;0.9;0.9141;0.9;0.895;0.9903;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 46};RandomForestClassifier(n_estimators=20, random_state=46)
RandomForestClassifier;0.9335;0.9353;0.9335;0.9333;0.9524;0.9522;0.9524;0.9522;0.9;0.9141;0.9;0.895;0.9905;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 263};RandomForestClassifier(n_estimators=10, random_state=263)
DecisionTreeClassifier;0.9422;0.9426;0.9422;0.9421;0.9014;0.9013;0.9014;0.8998;0.9;0.9141;0.9;0.895;0.9848;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.9384;0.9386;0.9384;0.9384;0.9218;0.9212;0.9218;0.9213;0.9;0.9141;0.9;0.895;0.9907;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 263};RandomForestClassifier(n_estimators=20, random_state=263)
RandomForestClassifier;0.9342;0.9352;0.9342;0.9342;0.9422;0.9427;0.9422;0.9421;0.9;0.9141;0.9;0.895;0.9905;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 859};RandomForestClassifier(n_estimators=20, random_state=859)
RandomForestClassifier;0.935;0.9354;0.935;0.9348;0.9388;0.9387;0.9388;0.9385;0.9;0.9141;0.9;0.895;0.9896;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 859};RandomForestClassifier(n_estimators=20, random_state=859)
RandomForestClassifier;0.9331;0.9344;0.9331;0.9331;0.9524;0.9527;0.9524;0.9525;0.9;0.9141;0.9;0.895;0.9908;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 859};RandomForestClassifier(n_estimators=10, random_state=859)
DecisionTreeClassifier;0.9392;0.9401;0.9392;0.9392;0.932;0.9345;0.932;0.9316;0.9;0.913;0.9;0.8947;0.9856;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 815};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=815)
MLPClassifier;0.9165;0.9224;0.9165;0.9168;0.898;0.9041;0.898;0.8973;0.8833;0.8982;0.8833;0.8832;0.986;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
MLPClassifier;0.9157;0.9204;0.9157;0.9153;0.9252;0.9269;0.9252;0.925;0.8833;0.9;0.8833;0.882;0.9848;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
DecisionTreeClassifier;0.9297;0.9308;0.9297;0.9298;0.9354;0.9375;0.9354;0.9356;0.8833;0.8889;0.8833;0.882;0.9847;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 153};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=153)
MLPClassifier;0.921;0.9258;0.921;0.9215;0.9082;0.918;0.9082;0.9096;0.8833;0.8836;0.8833;0.8808;0.9885;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
RandomForestClassifier;0.9357;0.9361;0.9357;0.9356;0.932;0.9316;0.932;0.9317;0.8833;0.9016;0.8833;0.8797;0.9897;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 263};RandomForestClassifier(n_estimators=20, random_state=263)
RandomForestClassifier;0.9365;0.9369;0.9365;0.9364;0.9354;0.936;0.9354;0.9348;0.8833;0.9016;0.8833;0.8797;0.9911;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 263};RandomForestClassifier(n_estimators=20, random_state=263)
RandomForestClassifier;0.9358;0.9363;0.9358;0.9357;0.9252;0.9319;0.9252;0.9258;0.8833;0.9016;0.8833;0.8797;0.9899;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 859};RandomForestClassifier(n_estimators=5, random_state=859)
DecisionTreeClassifier;0.9358;0.9368;0.9358;0.9356;0.9558;0.9558;0.9558;0.9555;0.8833;0.9016;0.8833;0.8797;0.9859;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=30)
RandomForestClassifier;0.9376;0.9384;0.9376;0.9376;0.9422;0.9424;0.9422;0.9422;0.8833;0.9016;0.8833;0.8797;0.9902;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 46};RandomForestClassifier(n_estimators=20, random_state=46)
RandomForestClassifier;0.9358;0.9361;0.9358;0.9357;0.9388;0.9386;0.9388;0.9386;0.8833;0.9016;0.8833;0.8797;0.9907;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 859};RandomForestClassifier(n_estimators=20, random_state=859)
RandomForestClassifier;0.9369;0.9374;0.9369;0.9368;0.915;0.9142;0.915;0.9139;0.8833;0.9016;0.8833;0.8797;0.9914;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 859};RandomForestClassifier(n_estimators=20, random_state=859)
RandomForestClassifier;0.9376;0.9378;0.9376;0.9375;0.9354;0.9353;0.9354;0.9349;0.8833;0.9016;0.8833;0.8797;0.9912;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 859};RandomForestClassifier(n_estimators=10, random_state=859)
KNeighborsClassifier;0.9097;0.9122;0.9097;0.9098;0.9116;0.9168;0.9116;0.9119;0.8833;0.9016;0.8833;0.8797;0.976;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9327;0.9345;0.9327;0.9327;0.9388;0.9385;0.9388;0.9385;0.8833;0.9016;0.8833;0.8797;0.9912;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 263};RandomForestClassifier(n_estimators=20, random_state=263)
KNeighborsClassifier;0.9052;0.9074;0.9052;0.9053;0.9354;0.9374;0.9354;0.9357;0.8833;0.9016;0.8833;0.8797;0.9736;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9168;0.9178;0.9168;0.9168;0.9082;0.9185;0.9082;0.9088;0.8833;0.9016;0.8833;0.8797;0.9756;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9044;0.9063;0.9044;0.9045;0.9388;0.9402;0.9388;0.9391;0.8833;0.9016;0.8833;0.8797;0.9734;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9085;0.9113;0.9085;0.9086;0.9456;0.9458;0.9456;0.9456;0.8833;0.9016;0.8833;0.8797;0.9762;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9048;0.9073;0.9048;0.9048;0.9286;0.9334;0.9286;0.9287;0.8833;0.9016;0.8833;0.8797;0.9734;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9044;0.9059;0.9044;0.9044;0.9048;0.9093;0.9048;0.9052;0.8833;0.9016;0.8833;0.8797;0.9751;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9017;0.9051;0.9017;0.9016;0.9252;0.927;0.9252;0.9252;0.8833;0.9016;0.8833;0.8797;0.9732;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9059;0.907;0.9059;0.9059;0.9286;0.9343;0.9286;0.9295;0.8833;0.9016;0.8833;0.8797;0.9709;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.904;0.9059;0.904;0.9041;0.9286;0.9326;0.9286;0.9289;0.8833;0.9016;0.8833;0.8797;0.9748;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9101;0.9116;0.9101;0.9101;0.9252;0.9297;0.9252;0.9254;0.8833;0.9016;0.8833;0.8797;0.9767;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8987;0.9015;0.8987;0.8988;0.9422;0.9439;0.9422;0.9422;0.8833;0.9016;0.8833;0.8797;0.9762;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9135;0.9159;0.9135;0.9136;0.898;0.906;0.898;0.8985;0.8833;0.9016;0.8833;0.8797;0.9764;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.9146;0.92;0.9146;0.9145;0.932;0.935;0.932;0.9325;0.8833;0.899;0.8833;0.8791;0.9865;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
MLPClassifier;0.9214;0.925;0.9214;0.9216;0.9252;0.9316;0.9252;0.9251;0.8833;0.899;0.8833;0.8791;0.9867;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
MLPClassifier;0.9259;0.9315;0.9259;0.9263;0.915;0.9161;0.915;0.9151;0.8833;0.899;0.8833;0.8791;0.9872;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
MLPClassifier;0.9233;0.9262;0.9233;0.9232;0.9014;0.9018;0.9014;0.9004;0.8833;0.899;0.8833;0.8791;0.9857;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
MLPClassifier;0.9153;0.9211;0.9153;0.9158;0.9354;0.9375;0.9354;0.9355;0.8833;0.899;0.8833;0.8791;0.9858;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
RandomForestClassifier;0.9339;0.9346;0.9339;0.9337;0.949;0.9499;0.949;0.9489;0.8833;0.8905;0.8833;0.8786;0.9909;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 263};RandomForestClassifier(n_estimators=5, random_state=263)
KNeighborsClassifier;0.901;0.9036;0.901;0.9012;0.9388;0.939;0.9388;0.9388;0.8667;0.8841;0.8667;0.8637;0.9746;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9059;0.9083;0.9059;0.9057;0.9422;0.9461;0.9422;0.9425;0.8667;0.8766;0.8667;0.8635;0.9734;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.9097;0.915;0.9097;0.91;0.9354;0.9368;0.9354;0.935;0.8667;0.8857;0.8667;0.8635;0.9828;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
RandomForestClassifier;0.9335;0.9345;0.9335;0.9335;0.9286;0.9294;0.9286;0.9288;0.8667;0.8778;0.8667;0.863;0.9911;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 859};RandomForestClassifier(n_estimators=5, random_state=859)
RandomForestClassifier;0.9357;0.9364;0.9357;0.9356;0.9592;0.9592;0.9592;0.9592;0.8667;0.8778;0.8667;0.863;0.9901;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 859};RandomForestClassifier(n_estimators=10, random_state=859)
MLPClassifier;0.9172;0.9222;0.9172;0.9174;0.9116;0.922;0.9116;0.9128;0.8667;0.8744;0.8667;0.8628;0.985;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
MLPClassifier;0.9146;0.9213;0.9146;0.9152;0.8946;0.9066;0.8946;0.8963;0.8667;0.8744;0.8667;0.8628;0.9869;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
DecisionTreeClassifier;0.9365;0.9372;0.9365;0.9365;0.915;0.9147;0.915;0.9148;0.8667;0.8672;0.8667;0.862;0.9838;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 30};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=30)
MLPClassifier;0.9214;0.926;0.9214;0.9217;0.9354;0.9368;0.9354;0.9352;0.8667;0.8871;0.8667;0.8606;0.9855;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
KNeighborsClassifier;0.9116;0.9134;0.9116;0.9116;0.9252;0.9276;0.9252;0.9256;0.8667;0.8879;0.8667;0.8605;0.9744;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.9195;0.9239;0.9195;0.9196;0.9422;0.9444;0.9422;0.942;0.8667;0.8865;0.8667;0.8602;0.9853;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
MLPClassifier;0.9195;0.9232;0.9195;0.9196;0.9014;0.9035;0.9014;0.9013;0.8667;0.8865;0.8667;0.8602;0.9859;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
MLPClassifier;0.9222;0.9259;0.9222;0.9223;0.915;0.9153;0.915;0.9147;0.8667;0.8865;0.8667;0.8602;0.9875;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
MLPClassifier;0.9142;0.9175;0.9142;0.914;0.9184;0.9245;0.9184;0.9185;0.85;0.8755;0.85;0.8452;0.9856;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
KNeighborsClassifier;0.9067;0.908;0.9067;0.9065;0.9422;0.9422;0.9422;0.9421;0.85;0.8726;0.85;0.8451;0.9752;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.9184;0.923;0.9184;0.9185;0.9354;0.9368;0.9354;0.9356;0.85;0.875;0.85;0.8409;0.9864;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
MLPClassifier;0.9214;0.9271;0.9214;0.9216;0.9218;0.9219;0.9218;0.9216;0.85;0.875;0.85;0.8409;0.9854;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
MLPClassifier;0.9082;0.9166;0.9082;0.909;0.932;0.932;0.932;0.9314;0.85;0.875;0.85;0.8409;0.9858;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
SVC;0.664;0.7375;0.664;0.6442;0.8435;0.8571;0.8435;0.8455;0.8333;0.8333;0.8333;0.8333;0.8243;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
MLPClassifier;0.9134;0.92;0.9134;0.9139;0.9184;0.9206;0.9184;0.9179;0.8333;0.8625;0.8333;0.8256;0.9847;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
MLPClassifier;0.9184;0.923;0.9184;0.9184;0.9048;0.9063;0.9048;0.9049;0.8333;0.8644;0.8333;0.8211;0.9858;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 908, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=908)
MLPClassifier;0.9187;0.923;0.9187;0.9186;0.898;0.8978;0.898;0.8969;0.8333;0.8644;0.8333;0.8211;0.9867;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 279, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=279)
SVC;0.6557;0.7314;0.6557;0.6378;0.8163;0.8366;0.8163;0.8177;0.8167;0.8164;0.8167;0.8162;0.8249;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6595;0.7327;0.6595;0.6406;0.8503;0.863;0.8503;0.852;0.8167;0.8164;0.8167;0.8162;0.8239;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6561;0.7289;0.6561;0.6399;0.8673;0.8819;0.8673;0.8676;0.8167;0.8164;0.8167;0.8162;0.8234;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.655;0.7323;0.655;0.6373;0.7993;0.8186;0.7993;0.8022;0.8167;0.8164;0.8167;0.8162;0.8232;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.658;0.7312;0.658;0.6395;0.8265;0.8432;0.8265;0.8283;0.8167;0.8164;0.8167;0.8162;0.8244;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6557;0.7315;0.6557;0.6367;0.8129;0.8264;0.8129;0.8146;0.8167;0.8164;0.8167;0.8162;0.8208;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6546;0.7306;0.6546;0.6366;0.8333;0.8477;0.8333;0.8361;0.8167;0.8164;0.8167;0.8162;0.8194;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6599;0.733;0.6599;0.6419;0.8537;0.8604;0.8537;0.8555;0.8167;0.8164;0.8167;0.8162;0.8201;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6553;0.7279;0.6553;0.6392;0.8265;0.8445;0.8265;0.8278;0.8167;0.8164;0.8167;0.8162;0.8222;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6629;0.736;0.6629;0.6459;0.7993;0.8224;0.7993;0.8014;0.8167;0.8164;0.8167;0.8162;0.8266;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.661;0.7334;0.661;0.645;0.7959;0.8201;0.7959;0.8;0.8167;0.8164;0.8167;0.8162;0.8246;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6599;0.7325;0.6599;0.6436;0.8265;0.8451;0.8265;0.8293;0.8167;0.8164;0.8167;0.8162;0.8222;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6568;0.7325;0.6568;0.6409;0.7823;0.8005;0.7823;0.7835;0.8167;0.8164;0.8167;0.8162;0.8262;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6515;0.7282;0.6515;0.6332;0.8435;0.8555;0.8435;0.8449;0.8167;0.8164;0.8167;0.8162;0.8216;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6512;0.7266;0.6512;0.6341;0.8639;0.8722;0.8639;0.8652;0.8167;0.8164;0.8167;0.8162;0.8168;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6602;0.7345;0.6602;0.6404;0.7687;0.7933;0.7687;0.774;0.8167;0.8164;0.8167;0.8162;0.824;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6565;0.7317;0.6565;0.6396;0.8435;0.8568;0.8435;0.8452;0.8167;0.8164;0.8167;0.8162;0.8236;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6595;0.7319;0.6595;0.6406;0.8367;0.8538;0.8367;0.8368;0.8167;0.8164;0.8167;0.8162;0.8251;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6591;0.7328;0.6591;0.6404;0.8503;0.8659;0.8503;0.8512;0.8167;0.8164;0.8167;0.8162;0.8226;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6591;0.7333;0.6591;0.6406;0.8333;0.8499;0.8333;0.8359;0.8167;0.8164;0.8167;0.8162;0.8223;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6561;0.7297;0.6561;0.6396;0.8469;0.8556;0.8469;0.8482;0.8167;0.8164;0.8167;0.8162;0.8199;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
SVC;0.6542;0.7281;0.6542;0.6369;0.8129;0.8249;0.8129;0.8158;0.8167;0.8164;0.8167;0.8162;0.8208;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6549;0.7322;0.6549;0.6375;0.8299;0.8459;0.8299;0.8315;0.8167;0.8164;0.8167;0.8162;0.8249;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6587;0.7317;0.6587;0.6416;0.8197;0.8327;0.8197;0.8208;0.8167;0.8164;0.8167;0.8162;0.8256;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6652;0.7387;0.6652;0.6457;0.8639;0.8786;0.8639;0.8659;0.8167;0.8164;0.8167;0.8162;0.8212;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6546;0.7302;0.6546;0.6369;0.8469;0.8587;0.8469;0.848;0.8167;0.8164;0.8167;0.8162;0.8206;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6625;0.7372;0.6625;0.6456;0.8333;0.8401;0.8333;0.8341;0.8167;0.8166;0.8167;0.8156;0.8254;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 609};SVC(C=10, probability=True, random_state=609)
SVC;0.6557;0.7328;0.6557;0.6386;0.8163;0.8189;0.8163;0.8168;0.8167;0.8166;0.8167;0.8156;0.8226;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 476};SVC(C=10, probability=True, random_state=476)
SVC;0.6576;0.7316;0.6576;0.6396;0.8503;0.8618;0.8503;0.8512;0.8167;0.8166;0.8167;0.8156;0.8201;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 930};SVC(C=10, probability=True, random_state=930)
LogisticRegression;0.8054;0.8191;0.8054;0.8081;0.8061;0.8159;0.8061;0.8093;0.8167;0.8148;0.8167;0.8147;0.9232;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.7929;0.8083;0.7929;0.7963;0.8299;0.8333;0.8299;0.8312;0.8167;0.8148;0.8167;0.8147;0.9219;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.808;0.8233;0.808;0.8104;0.8197;0.8325;0.8197;0.8217;0.8167;0.8148;0.8167;0.8147;0.924;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
MLPClassifier;0.9161;0.921;0.9161;0.9162;0.8912;0.8911;0.8912;0.8896;0.8167;0.8506;0.8167;0.8055;0.9869;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 516, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=516)
LogisticRegression;0.8103;0.8226;0.8103;0.8127;0.7959;0.8126;0.7959;0.7996;0.8;0.7988;0.8;0.7991;0.9235;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.8061;0.8208;0.8061;0.8088;0.8163;0.8384;0.8163;0.817;0.8;0.7988;0.8;0.7991;0.9252;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8092;0.8238;0.8092;0.8115;0.8061;0.8328;0.8061;0.8098;0.8;0.7988;0.8;0.7991;0.9236;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.805;0.819;0.805;0.8077;0.8333;0.8449;0.8333;0.8354;0.8;0.7988;0.8;0.7991;0.9223;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8065;0.8212;0.8065;0.8091;0.8129;0.8292;0.8129;0.8159;0.8;0.7982;0.8;0.7968;0.9225;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8186;0.8323;0.8186;0.8208;0.7823;0.7916;0.7823;0.7828;0.8;0.7982;0.8;0.7968;0.9271;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8171;0.8299;0.8171;0.8195;0.7857;0.7905;0.7857;0.7862;0.8;0.8087;0.8;0.7968;0.9274;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.8054;0.8192;0.8054;0.8082;0.8265;0.8345;0.8265;0.8283;0.8;0.8087;0.8;0.7968;0.9227;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.808;0.8222;0.808;0.8106;0.8027;0.817;0.8027;0.8068;0.8;0.7982;0.8;0.7968;0.9244;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8061;0.8216;0.8061;0.8088;0.8469;0.8516;0.8469;0.8471;0.8;0.7982;0.8;0.7968;0.9242;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.8027;0.817;0.8027;0.8054;0.8231;0.8348;0.8231;0.8261;0.8;0.7982;0.8;0.7968;0.9229;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8042;0.8186;0.8042;0.807;0.8367;0.8466;0.8367;0.8388;0.8;0.7982;0.8;0.7968;0.9226;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.8114;0.826;0.8114;0.8135;0.8129;0.8255;0.8129;0.8153;0.8;0.7982;0.8;0.7968;0.9251;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.8095;0.8228;0.8095;0.8122;0.7959;0.8095;0.7959;0.8001;0.7833;0.7816;0.7833;0.7812;0.9242;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.8156;0.8302;0.8156;0.8179;0.7891;0.8116;0.7891;0.7935;0.7833;0.7816;0.7833;0.7812;0.9247;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.8073;0.8213;0.8073;0.8097;0.8095;0.8262;0.8095;0.8125;0.7833;0.7816;0.7833;0.7812;0.9222;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.8122;0.826;0.8122;0.8143;0.7721;0.7868;0.7721;0.7768;0.7833;0.7816;0.7833;0.7812;0.9239;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.8092;0.8234;0.8092;0.8114;0.8129;0.8249;0.8129;0.8151;0.7833;0.7816;0.7833;0.7812;0.9233;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7952;0.8105;0.7952;0.7982;0.8333;0.8479;0.8333;0.8362;0.7833;0.7816;0.7833;0.7812;0.9212;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8103;0.825;0.8103;0.8129;0.7721;0.7901;0.7721;0.7755;0.7833;0.7816;0.7833;0.7812;0.9263;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7982;0.8127;0.7982;0.8008;0.8265;0.839;0.8265;0.8289;0.7833;0.7816;0.7833;0.7812;0.9231;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.808;0.8208;0.808;0.8105;0.8163;0.8295;0.8163;0.8198;0.7833;0.7804;0.7833;0.7809;0.9238;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.8057;0.8194;0.8057;0.8086;0.8095;0.8194;0.8095;0.8116;0.7833;0.7933;0.7833;0.7779;0.9241;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.8088;0.8247;0.8088;0.8116;0.7891;0.7945;0.7891;0.7903;0.7833;0.7933;0.7833;0.7779;0.9269;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
LogisticRegression;0.8073;0.8212;0.8073;0.8098;0.8299;0.8381;0.8299;0.8305;0.7833;0.7933;0.7833;0.7779;0.9247;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7993;0.8143;0.7993;0.8023;0.8061;0.8268;0.8061;0.8076;0.75;0.75;0.75;0.75;0.9234;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 987, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=987)"
LogisticRegression;0.8035;0.819;0.8035;0.8062;0.7891;0.7982;0.7891;0.7903;0.75;0.75;0.75;0.75;0.9242;smote;1000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 838, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=838)"
