Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Model
MLPClassifier,0.9205,0.926,0.9205,0.9207,0.9065,0.9113,0.9065,0.906,0.9167,0.9278,0.9167,0.916,0.9852,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
RandomForestClassifier,0.9225,0.923,0.9225,0.9224,0.926,0.9259,0.926,0.9258,0.9,0.913,0.9,0.9019,0.9755,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
DecisionTreeClassifier,0.9328,0.9339,0.9328,0.9328,0.9405,0.9404,0.9405,0.9403,0.9,0.9141,0.9,0.895,0.9855,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
KNeighborsClassifier,0.8828,0.8865,0.8828,0.8825,0.9002,0.9015,0.9002,0.9003,0.8833,0.8935,0.8833,0.8844,0.9556,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
RandomForestClassifier,0.9579,0.9587,0.9579,0.9579,0.9609,0.9611,0.9609,0.9609,0.8833,0.8884,0.8833,0.8834,0.9947,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
RandomForestClassifier,0.9379,0.9386,0.9379,0.9375,0.9167,0.9167,0.9167,0.9157,0.8833,0.9016,0.8833,0.8797,0.9913,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
KNeighborsClassifier,0.8949,0.8964,0.8949,0.8947,0.9036,0.9063,0.9036,0.9037,0.8667,0.8677,0.8667,0.8645,0.9584,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
RandomForestClassifier,0.8805,0.883,0.8805,0.8804,0.8469,0.8493,0.8469,0.8466,0.85,0.8752,0.85,0.8517,0.9726,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
SVC,0.7726,0.7911,0.7726,0.776,0.7556,0.7756,0.7556,0.7592,0.85,0.8545,0.85,0.8511,0.9074,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
MLPClassifier,0.8915,0.8962,0.8915,0.8917,0.9277,0.9282,0.9277,0.9278,0.85,0.8769,0.85,0.8499,0.9686,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
KNeighborsClassifier,0.8424,0.8453,0.8424,0.8425,0.8503,0.852,0.8503,0.8499,0.85,0.8524,0.85,0.8497,0.944,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
MLPClassifier,0.8036,0.8093,0.8036,0.8049,0.7952,0.7941,0.7952,0.7943,0.85,0.8489,0.85,0.8491,0.9337,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
MLPClassifier,0.8781,0.8789,0.8781,0.8781,0.8812,0.8814,0.8812,0.8808,0.85,0.8627,0.85,0.8483,0.965,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
RandomForestClassifier,0.9126,0.9134,0.9126,0.9125,0.9105,0.9108,0.9105,0.9103,0.85,0.8644,0.85,0.8481,0.9749,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
KNeighborsClassifier,0.9014,0.9024,0.9014,0.9013,0.8946,0.8953,0.8946,0.8944,0.85,0.8755,0.85,0.8452,0.9724,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
KNeighborsClassifier,0.8949,0.8978,0.8949,0.8953,0.9053,0.9057,0.9053,0.9055,0.8333,0.8489,0.8333,0.8352,0.9569,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
DecisionTreeClassifier,0.8949,0.8961,0.8949,0.8949,0.8847,0.8865,0.8847,0.8848,0.8333,0.8489,0.8333,0.8352,0.9213,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
KNeighborsClassifier,0.8389,0.8431,0.8389,0.8393,0.8003,0.8089,0.8003,0.801,0.8333,0.8372,0.8333,0.8339,0.9362,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
SVC,0.8686,0.8752,0.8686,0.8684,0.852,0.8612,0.852,0.8524,0.8333,0.8432,0.8333,0.8333,0.9437,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
DecisionTreeClassifier,0.8682,0.8707,0.8682,0.8682,0.8878,0.8888,0.8878,0.8878,0.8333,0.8468,0.8333,0.8321,0.9635,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
DecisionTreeClassifier,0.9324,0.9332,0.9324,0.9323,0.932,0.9321,0.932,0.932,0.8167,0.8315,0.8167,0.8181,0.9493,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
KNeighborsClassifier,0.8886,0.8926,0.8886,0.8886,0.8724,0.8739,0.8724,0.8715,0.8167,0.8172,0.8167,0.8166,0.9679,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
LogisticRegression,0.6856,0.6991,0.6856,0.6884,0.6954,0.703,0.6954,0.6971,0.8167,0.8155,0.8167,0.8157,0.8756,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
RandomForestClassifier,0.9259,0.9265,0.9259,0.9259,0.9243,0.9248,0.9243,0.9234,0.8167,0.8228,0.8167,0.8156,0.9768,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
LogisticRegression,0.7847,0.7997,0.7847,0.7876,0.778,0.7963,0.778,0.7812,0.8167,0.8296,0.8167,0.8156,0.9016,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
MLPClassifier,0.8273,0.8361,0.8273,0.8265,0.7797,0.8002,0.7797,0.7786,0.8167,0.8327,0.8167,0.8128,0.9488,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
MLPClassifier,0.8454,0.8461,0.8454,0.845,0.8623,0.8624,0.8623,0.8623,0.8167,0.8144,0.8167,0.8123,0.9549,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
SVC,0.8023,0.8124,0.8023,0.8039,0.7762,0.793,0.7762,0.7785,0.8,0.8298,0.8,0.8028,0.9192,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
RandomForestClassifier,0.8652,0.8666,0.8652,0.8653,0.8623,0.8631,0.8623,0.8621,0.8,0.8314,0.8,0.8008,0.9568,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
SVC,0.7269,0.762,0.7269,0.7257,0.7418,0.7718,0.7418,0.7423,0.8,0.8151,0.8,0.8001,0.8655,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
KNeighborsClassifier,0.8559,0.8594,0.8559,0.8556,0.8469,0.8483,0.8469,0.8467,0.8,0.8178,0.8,0.8,0.9516,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
RandomForestClassifier,0.9156,0.9163,0.9156,0.9156,0.8795,0.8829,0.8795,0.8795,0.8,0.8073,0.8,0.7994,0.9762,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
DecisionTreeClassifier,0.913,0.9139,0.913,0.9127,0.8916,0.8915,0.8916,0.8914,0.8,0.8236,0.8,0.7991,0.9693,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
SVC,0.8574,0.8637,0.8574,0.8576,0.8847,0.8905,0.8847,0.8857,0.8,0.8068,0.8,0.7989,0.9393,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
MLPClassifier,0.8491,0.8559,0.8491,0.8489,0.8486,0.8537,0.8486,0.8487,0.8,0.8065,0.8,0.7985,0.9614,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
LogisticRegression,0.8082,0.8211,0.8082,0.8108,0.8095,0.8165,0.8095,0.8121,0.8,0.7982,0.8,0.7968,0.9236,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
RandomForestClassifier,0.8527,0.8565,0.8527,0.8524,0.8382,0.8418,0.8382,0.838,0.8,0.8196,0.8,0.795,0.9541,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
DecisionTreeClassifier,0.8518,0.8532,0.8518,0.8518,0.8193,0.8196,0.8193,0.8193,0.8,0.8085,0.8,0.7939,0.9446,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
DecisionTreeClassifier,0.8355,0.8363,0.8355,0.8356,0.8262,0.8262,0.8262,0.8258,0.7833,0.7986,0.7833,0.7853,0.8762,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
KNeighborsClassifier,0.8264,0.8288,0.8264,0.8254,0.7986,0.8028,0.7986,0.7978,0.7833,0.7865,0.7833,0.7837,0.9339,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
MLPClassifier,0.727,0.7416,0.727,0.7278,0.7797,0.7906,0.7797,0.7815,0.7833,0.7831,0.7833,0.7822,0.8997,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
MLPClassifier,0.8407,0.844,0.8407,0.8414,0.8107,0.8139,0.8107,0.8118,0.7833,0.7854,0.7833,0.7813,0.9441,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
RandomForestClassifier,0.8566,0.8577,0.8566,0.8567,0.8657,0.8684,0.8657,0.8664,0.7833,0.7854,0.7833,0.7813,0.953,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
MLPClassifier,0.8609,0.867,0.8609,0.8614,0.8675,0.8716,0.8675,0.8679,0.7667,0.7765,0.7667,0.7672,0.9603,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
RandomForestClassifier,0.8975,0.8992,0.8975,0.8976,0.9235,0.924,0.9235,0.9236,0.7667,0.7663,0.7667,0.7662,0.9771,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
SVC,0.8066,0.8258,0.8066,0.8045,0.7917,0.8176,0.7917,0.7896,0.7667,0.7738,0.7667,0.7662,0.9082,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
KNeighborsClassifier,0.8316,0.8353,0.8316,0.8312,0.7986,0.8033,0.7986,0.7968,0.7667,0.7662,0.7667,0.7661,0.9337,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
DecisionTreeClassifier,0.8251,0.8273,0.8251,0.826,0.8348,0.8352,0.8348,0.8349,0.7667,0.7709,0.7667,0.7658,0.8691,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
KNeighborsClassifier,0.894,0.8968,0.894,0.8942,0.9053,0.9053,0.9053,0.9052,0.7667,0.7736,0.7667,0.765,0.9577,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
SVC,0.7283,0.7636,0.7283,0.7281,0.7384,0.7716,0.7384,0.7357,0.75,0.7553,0.75,0.7482,0.8766,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
DecisionTreeClassifier,0.8837,0.8849,0.8837,0.8841,0.8812,0.8819,0.8812,0.8814,0.75,0.7478,0.75,0.741,0.9128,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
LogisticRegression,0.7228,0.7272,0.7228,0.723,0.7041,0.707,0.7041,0.7048,0.7333,0.7448,0.7333,0.7362,0.8977,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
LogisticRegression,0.7106,0.7148,0.7106,0.7115,0.6609,0.6602,0.6609,0.6606,0.7333,0.7472,0.7333,0.7357,0.8849,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
LogisticRegression,0.6921,0.7048,0.6921,0.691,0.685,0.7038,0.685,0.6842,0.7333,0.7368,0.7333,0.7323,0.8484,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
SVC,0.8036,0.8216,0.8036,0.8003,0.8348,0.8498,0.8348,0.8345,0.7167,0.7501,0.7167,0.7238,0.9199,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
MLPClassifier,0.8184,0.8221,0.8184,0.8177,0.8435,0.8451,0.8435,0.8434,0.7333,0.7388,0.7333,0.7227,0.9482,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
DecisionTreeClassifier,0.8652,0.8664,0.8652,0.8651,0.8878,0.8879,0.8878,0.8877,0.7167,0.7373,0.7167,0.7208,0.8991,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
RandomForestClassifier,0.8467,0.8497,0.8467,0.8468,0.8554,0.8594,0.8554,0.8556,0.7167,0.7397,0.7167,0.7177,0.9544,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,RandomForestClassifier()
LogisticRegression,0.6723,0.6769,0.6723,0.6723,0.6609,0.6619,0.6609,0.6603,0.7167,0.7371,0.7167,0.7162,0.8571,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
LogisticRegression,0.6727,0.6799,0.6727,0.6701,0.7022,0.7089,0.7022,0.7009,0.7167,0.7833,0.7167,0.7122,0.8092,smote,1000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
DecisionTreeClassifier,0.907,0.9097,0.907,0.9071,0.8967,0.898,0.8967,0.8969,0.7,0.7131,0.7,0.6997,0.9695,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
LogisticRegression,0.758,0.7803,0.758,0.758,0.7694,0.7854,0.7694,0.7675,0.7,0.7014,0.7,0.6986,0.8969,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
KNeighborsClassifier,0.8588,0.8622,0.8588,0.8587,0.852,0.8554,0.852,0.8526,0.7,0.7038,0.7,0.6966,0.9539,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,KNeighborsClassifier()
LogisticRegression,0.6765,0.6865,0.6765,0.6744,0.6888,0.6947,0.6888,0.6876,0.7,0.708,0.7,0.6946,0.8318,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
LogisticRegression,0.6891,0.7058,0.6891,0.6878,0.654,0.6722,0.654,0.6564,0.6667,0.6646,0.6667,0.6637,0.8168,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
MLPClassifier,0.7776,0.7903,0.7776,0.7785,0.7636,0.7873,0.7636,0.7655,0.65,0.6601,0.65,0.6492,0.9193,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,MLPClassifier()
DecisionTreeClassifier,0.8531,0.8566,0.8531,0.8528,0.8417,0.8434,0.8417,0.8417,0.6333,0.6403,0.6333,0.6335,0.944,smote,1000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,DecisionTreeClassifier()
SVC,0.6509,0.7296,0.6509,0.6349,0.6565,0.7233,0.6565,0.6419,0.6333,0.7163,0.6333,0.6236,0.8191,smote,1000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
SVC,0.6446,0.7201,0.6446,0.6252,0.6565,0.7278,0.6565,0.642,0.6333,0.7152,0.6333,0.621,0.7992,smote,1000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
LogisticRegression,0.6824,0.6856,0.6824,0.681,0.6939,0.6939,0.6939,0.6922,0.6,0.6028,0.6,0.5933,0.8687,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"LogisticRegression(max_iter=100000, multi_class='multinomial')"
SVC,0.6233,0.7054,0.6233,0.6122,0.6156,0.7075,0.6156,0.5962,0.5833,0.6785,0.5833,0.581,0.7977,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
SVC,0.6221,0.7032,0.6221,0.6107,0.6088,0.7007,0.6088,0.5917,0.5833,0.6785,0.5833,0.581,0.7908,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,SVC(probability=True)
