Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9367;0.9389;0.9367;0.9366;0.9583;0.9597;0.9583;0.9585;0.9167;0.9235;0.9167;0.9176;0.9892;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 275};RandomForestClassifier(n_estimators=10, random_state=275)
KNeighborsClassifier;0.8573;0.8634;0.8573;0.8578;0.9514;0.9559;0.9514;0.9516;0.9167;0.9333;0.9167;0.9174;0.9606;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8673;0.8751;0.8673;0.8678;0.9167;0.9202;0.9167;0.9161;0.9167;0.9333;0.9167;0.9174;0.9626;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9336;0.935;0.9336;0.9337;0.9306;0.9334;0.9306;0.9306;0.9167;0.9333;0.9167;0.9174;0.9889;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
KNeighborsClassifier;0.8634;0.8693;0.8634;0.8639;0.9236;0.9266;0.9236;0.9236;0.9167;0.9333;0.9167;0.9174;0.9608;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8673;0.8731;0.8673;0.8678;0.9097;0.9099;0.9097;0.9092;0.9167;0.9333;0.9167;0.9174;0.9598;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8557;0.8624;0.8557;0.8555;0.9583;0.9592;0.9583;0.9579;0.9167;0.9333;0.9167;0.9174;0.9588;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9406;0.9424;0.9406;0.9405;0.9236;0.9241;0.9236;0.9236;0.9167;0.9278;0.9167;0.916;0.9888;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 619};RandomForestClassifier(n_estimators=10, random_state=619)
KNeighborsClassifier;0.865;0.8702;0.865;0.8651;0.9306;0.9306;0.9306;0.9306;0.9167;0.9278;0.9167;0.916;0.9565;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9298;0.9323;0.9298;0.9297;0.9444;0.9473;0.9444;0.9444;0.9167;0.9278;0.9167;0.916;0.9863;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
RandomForestClassifier;0.9452;0.9467;0.9452;0.9452;0.9236;0.9267;0.9236;0.9235;0.9;0.9076;0.9;0.901;0.9902;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
RandomForestClassifier;0.9368;0.9395;0.9368;0.9367;0.9236;0.9245;0.9236;0.9236;0.9;0.9109;0.9;0.901;0.9899;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
RandomForestClassifier;0.9305;0.9331;0.9305;0.9307;0.9236;0.9253;0.9236;0.9237;0.9;0.9109;0.9;0.901;0.9866;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
KNeighborsClassifier;0.8673;0.8736;0.8673;0.8677;0.9097;0.9161;0.9097;0.9109;0.9;0.9139;0.9;0.9008;0.9591;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8773;0.8837;0.8773;0.8776;0.9444;0.945;0.9444;0.9445;0.9;0.9139;0.9;0.9008;0.9629;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9321;0.934;0.9321;0.9323;0.9514;0.9525;0.9514;0.9517;0.9;0.9139;0.9;0.9008;0.9878;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
KNeighborsClassifier;0.8634;0.8719;0.8634;0.8641;0.8889;0.8927;0.8889;0.8884;0.9;0.9139;0.9;0.9008;0.9586;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8581;0.8649;0.8581;0.8579;0.9306;0.9335;0.9306;0.9312;0.9;0.9139;0.9;0.9008;0.9582;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8657;0.8708;0.8657;0.8663;0.9306;0.9322;0.9306;0.9305;0.9;0.9139;0.9;0.9008;0.9608;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8619;0.8678;0.8619;0.8625;0.9306;0.931;0.9306;0.9305;0.9;0.9139;0.9;0.9008;0.9623;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8658;0.8733;0.8658;0.8662;0.8958;0.8973;0.8958;0.896;0.9;0.9139;0.9;0.9008;0.9587;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8658;0.8717;0.8658;0.8664;0.9583;0.963;0.9583;0.9586;0.9;0.9139;0.9;0.9008;0.9569;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8634;0.8696;0.8634;0.8639;0.9097;0.9145;0.9097;0.9091;0.9;0.9139;0.9;0.9008;0.9601;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8627;0.869;0.8627;0.8635;0.9167;0.9209;0.9167;0.9164;0.9;0.9139;0.9;0.9008;0.9596;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8511;0.86;0.8511;0.852;0.9167;0.9195;0.9167;0.9168;0.9;0.9139;0.9;0.9008;0.9565;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8735;0.8788;0.8735;0.8734;0.9375;0.9451;0.9375;0.938;0.9;0.9139;0.9;0.9008;0.9575;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9328;0.9345;0.9328;0.9329;0.9583;0.9615;0.9583;0.9585;0.9;0.9231;0.9;0.9004;0.9872;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
KNeighborsClassifier;0.8666;0.8724;0.8666;0.8672;0.8889;0.8927;0.8889;0.8884;0.9;0.9231;0.9;0.9004;0.9616;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9352;0.9367;0.9352;0.9353;0.9097;0.9108;0.9097;0.91;0.9;0.9103;0.9;0.8998;0.9888;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
KNeighborsClassifier;0.8719;0.8779;0.8719;0.8725;0.9444;0.9457;0.9444;0.9442;0.9;0.9103;0.9;0.8998;0.9601;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8596;0.8671;0.8596;0.8602;0.9236;0.9247;0.9236;0.9239;0.9;0.9103;0.9;0.8998;0.9556;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8587;0.8659;0.8587;0.8592;0.9028;0.9107;0.9028;0.903;0.8833;0.8905;0.8833;0.8846;0.9557;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7964;0.8056;0.7964;0.7979;0.8125;0.8224;0.8125;0.8138;0.8833;0.8905;0.8833;0.8846;0.9331;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
RandomForestClassifier;0.9313;0.933;0.9313;0.9313;0.9375;0.9397;0.9375;0.9372;0.8833;0.8958;0.8833;0.8843;0.9876;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
RandomForestClassifier;0.9329;0.9352;0.9329;0.9331;0.9375;0.938;0.9375;0.9375;0.8833;0.8958;0.8833;0.8843;0.9888;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 377};RandomForestClassifier(n_estimators=10, random_state=377)
RandomForestClassifier;0.9275;0.9292;0.9275;0.9276;0.9444;0.9448;0.9444;0.9441;0.8833;0.8958;0.8833;0.8843;0.9877;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
RandomForestClassifier;0.9314;0.9337;0.9314;0.9315;0.9653;0.9658;0.9653;0.9653;0.8833;0.8958;0.8833;0.8843;0.9887;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9267;0.9293;0.9267;0.9267;0.9444;0.945;0.9444;0.9445;0.8833;0.8958;0.8833;0.8843;0.9883;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
KNeighborsClassifier;0.8634;0.871;0.8634;0.8639;0.9514;0.9526;0.9514;0.9507;0.8833;0.8958;0.8833;0.8843;0.959;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9367;0.9386;0.9367;0.9368;0.9236;0.9275;0.9236;0.9228;0.8833;0.8958;0.8833;0.8843;0.9874;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
RandomForestClassifier;0.9321;0.9346;0.9321;0.9318;0.9444;0.9476;0.9444;0.9448;0.8833;0.8958;0.8833;0.8843;0.9876;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
KNeighborsClassifier;0.8642;0.8717;0.8642;0.8647;0.8889;0.8985;0.8889;0.8892;0.8833;0.8913;0.8833;0.884;0.9572;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.865;0.8735;0.865;0.8652;0.9236;0.9238;0.9236;0.9234;0.8833;0.8913;0.8833;0.884;0.9636;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8649;0.8706;0.8649;0.8653;0.9028;0.9072;0.9028;0.903;0.8833;0.9033;0.8833;0.8839;0.9602;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9321;0.9333;0.9321;0.9322;0.9444;0.9445;0.9444;0.9443;0.8833;0.8939;0.8833;0.8836;0.9886;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
RandomForestClassifier;0.9244;0.9262;0.9244;0.9245;0.9375;0.9402;0.9375;0.9376;0.8833;0.8939;0.8833;0.8836;0.9873;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
KNeighborsClassifier;0.8812;0.8876;0.8812;0.8815;0.9028;0.9062;0.9028;0.9019;0.8833;0.888;0.8833;0.8829;0.9622;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8765;0.8819;0.8765;0.8767;0.9167;0.9191;0.9167;0.9167;0.8667;0.8796;0.8667;0.8692;0.9586;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7886;0.8006;0.7886;0.7899;0.8819;0.8813;0.8819;0.8816;0.8667;0.8716;0.8667;0.8681;0.934;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
MLPClassifier;0.7856;0.7953;0.7856;0.7873;0.875;0.8753;0.875;0.875;0.8667;0.8716;0.8667;0.8681;0.932;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.7855;0.7981;0.7855;0.7868;0.8958;0.8967;0.8958;0.8948;0.8667;0.8716;0.8667;0.8681;0.9296;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
DecisionTreeClassifier;0.9036;0.906;0.9036;0.9035;0.8958;0.8991;0.8958;0.8969;0.8667;0.8775;0.8667;0.8678;0.9277;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
RandomForestClassifier;0.9275;0.9294;0.9275;0.9275;0.9306;0.9299;0.9306;0.93;0.8667;0.8705;0.8667;0.8672;0.9871;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
KNeighborsClassifier;0.8581;0.8656;0.8581;0.8589;0.9028;0.9065;0.9028;0.9029;0.8667;0.8705;0.8667;0.8672;0.9563;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9328;0.9347;0.9328;0.933;0.9444;0.9451;0.9444;0.9446;0.8667;0.8792;0.8667;0.8672;0.9885;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.939;0.9401;0.939;0.9391;0.9306;0.9367;0.9306;0.9312;0.8667;0.8729;0.8667;0.8671;0.9869;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
RandomForestClassifier;0.9375;0.94;0.9375;0.9376;0.9236;0.9283;0.9236;0.923;0.8667;0.8729;0.8667;0.8671;0.9889;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9321;0.934;0.9321;0.9321;0.9514;0.9576;0.9514;0.9519;0.8667;0.8729;0.8667;0.8671;0.9869;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 619};RandomForestClassifier(n_estimators=10, random_state=619)
RandomForestClassifier;0.9344;0.9367;0.9344;0.9345;0.9236;0.9248;0.9236;0.9237;0.8667;0.8821;0.8667;0.8664;0.9869;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
KNeighborsClassifier;0.8557;0.8642;0.8557;0.856;0.9236;0.9239;0.9236;0.9229;0.8667;0.8821;0.8667;0.8664;0.9583;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9329;0.9347;0.9329;0.9329;0.9236;0.9294;0.9236;0.9237;0.8667;0.8714;0.8667;0.8663;0.9901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9398;0.9409;0.9398;0.94;0.9167;0.9189;0.9167;0.917;0.8667;0.8714;0.8667;0.8663;0.9872;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9352;0.9375;0.9352;0.9354;0.9236;0.9233;0.9236;0.9234;0.8667;0.8714;0.8667;0.8663;0.9884;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 377};RandomForestClassifier(n_estimators=20, random_state=377)
RandomForestClassifier;0.9336;0.9355;0.9336;0.9336;0.8958;0.8966;0.8958;0.896;0.8667;0.8714;0.8667;0.8663;0.9893;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
MLPClassifier;0.7917;0.8018;0.7917;0.7932;0.8819;0.887;0.8819;0.8828;0.85;0.854;0.85;0.8516;0.9348;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
MLPClassifier;0.7894;0.798;0.7894;0.7909;0.8819;0.8839;0.8819;0.8826;0.85;0.854;0.85;0.8516;0.9362;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
MLPClassifier;0.784;0.7948;0.784;0.7851;0.8542;0.8554;0.8542;0.8535;0.85;0.854;0.85;0.8516;0.933;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
SVC;0.7816;0.805;0.7816;0.784;0.9028;0.9029;0.9028;0.9028;0.85;0.854;0.85;0.8516;0.9031;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
MLPClassifier;0.7787;0.7899;0.7787;0.7789;0.9028;0.9025;0.9028;0.9025;0.85;0.854;0.85;0.8516;0.9324;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
MLPClassifier;0.7809;0.7926;0.7809;0.7827;0.9097;0.9125;0.9097;0.9104;0.85;0.854;0.85;0.8516;0.9318;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
MLPClassifier;0.787;0.7952;0.787;0.7885;0.8889;0.8909;0.8889;0.8895;0.85;0.854;0.85;0.8516;0.9325;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.7878;0.7974;0.7878;0.7893;0.9236;0.9244;0.9236;0.9237;0.85;0.8575;0.85;0.8515;0.93;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
RandomForestClassifier;0.9275;0.9298;0.9275;0.9275;0.9236;0.9245;0.9236;0.9236;0.85;0.8605;0.85;0.8503;0.9881;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 275};RandomForestClassifier(n_estimators=20, random_state=275)
SVC;0.7762;0.802;0.7762;0.7786;0.8889;0.889;0.8889;0.8877;0.85;0.85;0.85;0.85;0.9001;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
SVC;0.7685;0.7961;0.7685;0.771;0.8681;0.8697;0.8681;0.8679;0.85;0.85;0.85;0.85;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
DecisionTreeClassifier;0.9082;0.9097;0.9082;0.908;0.8403;0.8463;0.8403;0.8419;0.85;0.852;0.85;0.8497;0.9311;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.9074;0.909;0.9074;0.9071;0.8958;0.8983;0.8958;0.8966;0.85;0.8608;0.85;0.8484;0.9305;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
MLPClassifier;0.7855;0.7979;0.7855;0.7871;0.9028;0.9138;0.9028;0.9024;0.8333;0.8413;0.8333;0.8361;0.9316;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
MLPClassifier;0.794;0.8063;0.794;0.7959;0.8472;0.8537;0.8472;0.8472;0.8333;0.8413;0.8333;0.8361;0.9348;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
SVC;0.78;0.8069;0.78;0.7833;0.8889;0.8958;0.8889;0.8902;0.8333;0.8389;0.8333;0.8352;0.9034;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
MLPClassifier;0.7863;0.7965;0.7863;0.7875;0.8472;0.8452;0.8472;0.8454;0.8333;0.8373;0.8333;0.8349;0.9322;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
SVC;0.7886;0.8124;0.7886;0.7912;0.8403;0.8479;0.8403;0.8412;0.8333;0.8373;0.8333;0.8349;0.9044;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
SVC;0.7863;0.8125;0.7863;0.7889;0.9097;0.9137;0.9097;0.9094;0.8333;0.8373;0.8333;0.8349;0.9076;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
MLPClassifier;0.7871;0.7953;0.7871;0.7881;0.8819;0.8832;0.8819;0.8825;0.8333;0.8373;0.8333;0.8349;0.9339;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
DecisionTreeClassifier;0.902;0.9039;0.902;0.902;0.8681;0.8728;0.8681;0.8694;0.8333;0.8444;0.8333;0.8335;0.9265;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
DecisionTreeClassifier;0.9066;0.9073;0.9066;0.9065;0.9028;0.9067;0.9028;0.9025;0.8333;0.8381;0.8333;0.8332;0.93;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.9035;0.9045;0.9035;0.9035;0.875;0.8808;0.875;0.8756;0.8333;0.8374;0.8333;0.8328;0.9277;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
DecisionTreeClassifier;0.9051;0.9072;0.9051;0.905;0.9097;0.9123;0.9097;0.9098;0.8333;0.8374;0.8333;0.8328;0.9288;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.9043;0.9051;0.9043;0.9042;0.8611;0.8616;0.8611;0.8604;0.8333;0.8333;0.8333;0.8323;0.9282;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
DecisionTreeClassifier;0.9028;0.9046;0.9028;0.903;0.8681;0.8746;0.8681;0.8694;0.8333;0.836;0.8333;0.832;0.9271;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.9012;0.9032;0.9012;0.9013;0.9167;0.9166;0.9167;0.9162;0.8333;0.8396;0.8333;0.8318;0.9259;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
MLPClassifier;0.7817;0.7927;0.7817;0.7832;0.8889;0.8925;0.8889;0.8895;0.8167;0.8258;0.8167;0.8198;0.932;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 999, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=999)
MLPClassifier;0.7916;0.8044;0.7916;0.7924;0.8611;0.8684;0.8611;0.862;0.8167;0.8258;0.8167;0.8198;0.9327;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
SVC;0.7763;0.7997;0.7763;0.7795;0.8819;0.8839;0.8819;0.8797;0.8167;0.8214;0.8167;0.8187;0.9032;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
MLPClassifier;0.7924;0.8016;0.7924;0.7939;0.8611;0.8635;0.8611;0.8615;0.8167;0.8214;0.8167;0.8187;0.9356;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.7855;0.7947;0.7855;0.7871;0.8611;0.8688;0.8611;0.8626;0.8167;0.8214;0.8167;0.8187;0.9322;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
MLPClassifier;0.7886;0.798;0.7886;0.7896;0.8472;0.8481;0.8472;0.8473;0.8167;0.8214;0.8167;0.8187;0.9355;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
SVC;0.7824;0.8063;0.7824;0.7861;0.8125;0.8413;0.8125;0.8143;0.8167;0.8214;0.8167;0.8181;0.907;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
SVC;0.7847;0.8113;0.7847;0.7879;0.8542;0.8567;0.8542;0.8552;0.8167;0.8214;0.8167;0.8181;0.9029;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
SVC;0.7855;0.81;0.7855;0.7884;0.875;0.8777;0.875;0.8752;0.8167;0.8167;0.8167;0.8167;0.9044;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
DecisionTreeClassifier;0.909;0.91;0.909;0.9086;0.8542;0.8563;0.8542;0.8534;0.8167;0.8251;0.8167;0.8163;0.9317;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
SVC;0.7878;0.8095;0.7878;0.7905;0.8264;0.8374;0.8264;0.8266;0.8167;0.8184;0.8167;0.8162;0.9063;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
SVC;0.7886;0.8119;0.7886;0.7911;0.8194;0.8233;0.8194;0.8204;0.8167;0.8184;0.8167;0.8162;0.9029;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
DecisionTreeClassifier;0.9059;0.9081;0.9059;0.9056;0.8889;0.8938;0.8889;0.8897;0.8167;0.8238;0.8167;0.8155;0.9294;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
DecisionTreeClassifier;0.8974;0.8989;0.8974;0.8974;0.8889;0.8886;0.8889;0.8887;0.8167;0.822;0.8167;0.8148;0.923;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.9198;0.9208;0.9198;0.9198;0.875;0.8762;0.875;0.8752;0.8167;0.822;0.8167;0.8148;0.9399;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.9089;0.9101;0.9089;0.9089;0.8125;0.8285;0.8125;0.8156;0.8167;0.8157;0.8167;0.8147;0.9317;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.9012;0.9028;0.9012;0.9011;0.9306;0.9347;0.9306;0.9308;0.8167;0.8335;0.8167;0.8141;0.926;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
SVC;0.7809;0.8051;0.7809;0.7841;0.8472;0.8584;0.8472;0.8502;0.8;0.8091;0.8;0.8031;0.9016;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
MLPClassifier;0.7877;0.7974;0.7877;0.7884;0.8472;0.8538;0.8472;0.848;0.8;0.8062;0.8;0.8022;0.9307;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
SVC;0.7747;0.8006;0.7747;0.7767;0.9028;0.9035;0.9028;0.9031;0.8;0.8048;0.8;0.802;0.9022;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
MLPClassifier;0.7832;0.7903;0.7832;0.7844;0.8611;0.8629;0.8611;0.8616;0.8;0.8048;0.8;0.802;0.9325;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
DecisionTreeClassifier;0.8912;0.8931;0.8912;0.8912;0.8611;0.8664;0.8611;0.8627;0.8;0.8069;0.8;0.8014;0.9184;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
MLPClassifier;0.7916;0.8029;0.7916;0.7927;0.8472;0.8501;0.8472;0.8446;0.8;0.8038;0.8;0.801;0.932;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.7901;0.7996;0.7901;0.7913;0.8542;0.868;0.8542;0.8532;0.8;0.806;0.8;0.8009;0.9323;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
SVC;0.7677;0.7933;0.7677;0.771;0.875;0.877;0.875;0.8741;0.8;0.806;0.8;0.8009;0.9;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
MLPClassifier;0.7955;0.8046;0.7955;0.797;0.8542;0.8567;0.8542;0.8552;0.8;0.806;0.8;0.8009;0.9352;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
SVC;0.7824;0.8069;0.7824;0.7859;0.8542;0.8727;0.8542;0.8552;0.8;0.806;0.8;0.8009;0.9044;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
DecisionTreeClassifier;0.8989;0.8999;0.8989;0.8987;0.8819;0.888;0.8819;0.8828;0.8;0.8013;0.8;0.8003;0.9241;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
SVC;0.7732;0.7989;0.7732;0.7765;0.8472;0.8514;0.8472;0.8477;0.8;0.8004;0.8;0.7999;0.9006;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
DecisionTreeClassifier;0.9097;0.9117;0.9097;0.91;0.8542;0.8604;0.8542;0.8551;0.8;0.8156;0.8;0.7995;0.9323;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.8974;0.9002;0.8974;0.8975;0.9097;0.9139;0.9097;0.9107;0.8;0.8034;0.8;0.7993;0.923;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.9089;0.9094;0.9089;0.9087;0.875;0.8801;0.875;0.8764;0.8;0.8034;0.8;0.7993;0.9317;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
DecisionTreeClassifier;0.9051;0.9082;0.9051;0.905;0.9028;0.906;0.9028;0.9031;0.8;0.7989;0.8;0.7991;0.9288;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
SVC;0.7816;0.807;0.7816;0.7848;0.8542;0.8534;0.8542;0.853;0.8;0.8035;0.8;0.799;0.9038;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
SVC;0.7702;0.797;0.7702;0.7735;0.8333;0.8334;0.8333;0.8315;0.8;0.8035;0.8;0.799;0.8975;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
SVC;0.7878;0.8142;0.7878;0.7903;0.875;0.8956;0.875;0.8737;0.8;0.8035;0.8;0.799;0.9048;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
SVC;0.7831;0.8081;0.7831;0.7864;0.8125;0.8107;0.8125;0.8111;0.8;0.8035;0.8;0.799;0.9021;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
DecisionTreeClassifier;0.9013;0.9025;0.9013;0.901;0.8681;0.8679;0.8681;0.8675;0.8;0.8005;0.8;0.7977;0.9259;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.902;0.9031;0.902;0.9019;0.8333;0.8395;0.8333;0.8332;0.8;0.8087;0.8;0.7973;0.9265;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
DecisionTreeClassifier;0.912;0.9134;0.912;0.9119;0.8472;0.8565;0.8472;0.8484;0.8;0.8067;0.8;0.7962;0.934;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.9035;0.9052;0.9035;0.9033;0.8819;0.8824;0.8819;0.882;0.8;0.8067;0.8;0.7962;0.9276;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.9097;0.9116;0.9097;0.9097;0.9028;0.9029;0.9028;0.9015;0.8;0.8222;0.8;0.7959;0.9323;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
SVC;0.7878;0.8099;0.7878;0.7907;0.8472;0.8574;0.8472;0.8492;0.7833;0.7937;0.7833;0.7873;0.905;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
MLPClassifier;0.7893;0.8009;0.7893;0.7907;0.8681;0.8715;0.8681;0.8686;0.7833;0.7939;0.7833;0.7872;0.9328;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 802, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=802)
MLPClassifier;0.7785;0.788;0.7785;0.7802;0.8958;0.8958;0.8958;0.8958;0.7833;0.7939;0.7833;0.7872;0.9327;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
SVC;0.777;0.8025;0.777;0.7802;0.8472;0.8598;0.8472;0.8463;0.7833;0.7887;0.7833;0.7851;0.9003;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
SVC;0.7823;0.8071;0.7823;0.7852;0.8611;0.8658;0.8611;0.8605;0.7833;0.7887;0.7833;0.7851;0.9064;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
SVC;0.7809;0.8049;0.7809;0.7844;0.9167;0.9191;0.9167;0.9167;0.7833;0.7887;0.7833;0.7851;0.9029;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 744};SVC(C=10, probability=True, random_state=744)
SVC;0.7755;0.7984;0.7755;0.7778;0.8819;0.8948;0.8819;0.8831;0.7833;0.7887;0.7833;0.7851;0.9016;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
LogisticRegression;0.7322;0.7484;0.7322;0.7343;0.7569;0.7718;0.7569;0.7561;0.7833;0.7972;0.7833;0.785;0.8922;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7261;0.7369;0.7261;0.728;0.7778;0.7914;0.7778;0.7794;0.7833;0.7884;0.7833;0.7846;0.8888;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7192;0.7327;0.7192;0.7208;0.8056;0.8089;0.8056;0.8062;0.7833;0.7884;0.7833;0.7846;0.8883;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7376;0.7524;0.7376;0.7391;0.7361;0.7459;0.7361;0.7371;0.7833;0.7884;0.7833;0.7846;0.8919;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.7322;0.7488;0.7322;0.7334;0.75;0.7511;0.75;0.7504;0.7833;0.7884;0.7833;0.7846;0.8889;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
SVC;0.7801;0.8023;0.7801;0.7831;0.8542;0.8615;0.8542;0.8543;0.7833;0.7847;0.7833;0.7828;0.9012;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
SVC;0.7871;0.8074;0.7871;0.7903;0.8125;0.8192;0.8125;0.8084;0.7833;0.7847;0.7833;0.7828;0.9022;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 383};SVC(C=10, probability=True, random_state=383)
SVC;0.7786;0.8044;0.7786;0.7811;0.8611;0.8706;0.8611;0.861;0.7833;0.7847;0.7833;0.7828;0.9014;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
SVC;0.7716;0.7988;0.7716;0.7748;0.9028;0.9096;0.9028;0.9039;0.7833;0.7847;0.7833;0.7828;0.9006;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, probability=True, random_state=826)
MLPClassifier;0.7886;0.7995;0.7886;0.7902;0.8958;0.8975;0.8958;0.8959;0.7833;0.7847;0.7833;0.7828;0.9349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
DecisionTreeClassifier;0.9074;0.9092;0.9074;0.9073;0.8403;0.8464;0.8403;0.8407;0.7833;0.7831;0.7833;0.7822;0.9306;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.9128;0.9139;0.9128;0.9127;0.8958;0.9012;0.8958;0.8969;0.7833;0.7884;0.7833;0.7815;0.9346;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 630};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=630)
DecisionTreeClassifier;0.9112;0.9141;0.9112;0.9111;0.8889;0.8905;0.8889;0.8887;0.7833;0.783;0.7833;0.7809;0.9334;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
MLPClassifier;0.787;0.7978;0.787;0.7884;0.8958;0.8957;0.8958;0.8956;0.7667;0.7788;0.7667;0.7706;0.9342;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
LogisticRegression;0.7377;0.7593;0.7377;0.7393;0.6944;0.7195;0.6944;0.6947;0.7667;0.7857;0.7667;0.7698;0.8955;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7231;0.7413;0.7231;0.7243;0.7292;0.737;0.7292;0.7306;0.7667;0.7759;0.7667;0.7692;0.893;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7416;0.7583;0.7416;0.7438;0.7222;0.7638;0.7222;0.7249;0.7667;0.7759;0.7667;0.7692;0.8895;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7376;0.7547;0.7376;0.7394;0.6806;0.7158;0.6806;0.6857;0.7667;0.7759;0.7667;0.7692;0.8932;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7331;0.7497;0.7331;0.7343;0.7083;0.7146;0.7083;0.7078;0.7667;0.7759;0.7667;0.7692;0.8904;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7238;0.7455;0.7238;0.7253;0.7639;0.7687;0.7639;0.7649;0.7667;0.7759;0.7667;0.7692;0.8922;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7284;0.7468;0.7284;0.7285;0.7986;0.8037;0.7986;0.7994;0.7667;0.7759;0.7667;0.7692;0.8918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7239;0.7374;0.7239;0.7253;0.7222;0.7399;0.7222;0.7247;0.7667;0.7759;0.7667;0.7692;0.8911;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7346;0.7558;0.7346;0.7364;0.7153;0.7222;0.7153;0.7158;0.7667;0.7759;0.7667;0.7692;0.8933;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.733;0.7515;0.733;0.7341;0.7222;0.7429;0.7222;0.7241;0.7667;0.7759;0.7667;0.7692;0.8926;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7338;0.745;0.7338;0.7347;0.7153;0.7235;0.7153;0.7173;0.7667;0.7759;0.7667;0.7692;0.8906;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.7307;0.7454;0.7307;0.732;0.7014;0.7017;0.7014;0.7015;0.7667;0.7759;0.7667;0.7692;0.8923;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.7261;0.7412;0.7261;0.7273;0.6806;0.6896;0.6806;0.6804;0.7667;0.7759;0.7667;0.7692;0.8937;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.7246;0.7387;0.7246;0.7261;0.7708;0.7954;0.7708;0.7743;0.7667;0.7759;0.7667;0.7692;0.8926;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.7298;0.7432;0.7298;0.7311;0.7431;0.754;0.7431;0.7432;0.7667;0.7759;0.7667;0.7692;0.8892;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.7221;0.7368;0.7221;0.7242;0.7986;0.8099;0.7986;0.7985;0.7667;0.7759;0.7667;0.7692;0.8886;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
MLPClassifier;0.7917;0.8006;0.7917;0.7931;0.8611;0.8658;0.8611;0.8626;0.7667;0.7722;0.7667;0.7691;0.9328;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 764, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=764)
LogisticRegression;0.7253;0.7414;0.7253;0.7277;0.7222;0.7326;0.7222;0.7206;0.7667;0.7752;0.7667;0.7681;0.8896;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7284;0.7474;0.7284;0.7301;0.7361;0.7517;0.7361;0.7376;0.75;0.7635;0.75;0.753;0.8936;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7346;0.752;0.7346;0.7361;0.7014;0.7197;0.7014;0.7032;0.75;0.7635;0.75;0.753;0.8922;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.733;0.7493;0.733;0.734;0.6736;0.7094;0.6736;0.6781;0.75;0.7656;0.75;0.7524;0.8948;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7337;0.7496;0.7337;0.7353;0.75;0.7697;0.75;0.7537;0.75;0.7583;0.75;0.7521;0.8903;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
LogisticRegression;0.7237;0.7378;0.7237;0.7249;0.7014;0.7181;0.7014;0.7034;0.75;0.7583;0.75;0.7521;0.8922;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 25, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=25)"
LogisticRegression;0.7416;0.7603;0.7416;0.7437;0.6736;0.6965;0.6736;0.6732;0.75;0.7583;0.75;0.7521;0.8925;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7269;0.7462;0.7269;0.7291;0.7292;0.756;0.7292;0.7349;0.7333;0.746;0.7333;0.7359;0.8891;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 905, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=905)"
LogisticRegression;0.7308;0.7526;0.7308;0.7319;0.7361;0.7765;0.7361;0.7422;0.7333;0.746;0.7333;0.7359;0.8914;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 984, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=984)"
