Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8989;0.8996;0.8989;0.8991;0.9175;0.9217;0.9175;0.9179;0.95;0.9499;0.95;0.9496;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8955;0.8967;0.8955;0.8959;0.8862;0.8873;0.8862;0.8863;0.95;0.9499;0.95;0.9496;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9315;0.9322;0.9315;0.9314;0.9416;0.9422;0.9416;0.9417;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
RandomForestClassifier;0.9284;0.9289;0.9284;0.9284;0.9448;0.9451;0.9448;0.9449;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
RandomForestClassifier;0.9346;0.9353;0.9346;0.9345;0.9276;0.9275;0.9276;0.9275;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
RandomForestClassifier;0.9269;0.9276;0.9269;0.927;0.931;0.9327;0.931;0.9307;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
RandomForestClassifier;0.9273;0.9276;0.9273;0.9274;0.9656;0.9659;0.9656;0.9655;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9357;0.936;0.9357;0.9358;0.9276;0.9281;0.9276;0.9274;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9361;0.9365;0.9361;0.9361;0.9241;0.9249;0.9241;0.9241;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
RandomForestClassifier;0.9357;0.9362;0.9357;0.9358;0.9138;0.9146;0.9138;0.9135;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
RandomForestClassifier;0.9273;0.9285;0.9273;0.9273;0.9414;0.9422;0.9414;0.9413;0.9333;0.934;0.9333;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
KNeighborsClassifier;0.8917;0.8934;0.8917;0.892;0.931;0.9318;0.931;0.9309;0.9333;0.9339;0.9333;0.9324;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.894;0.895;0.894;0.8942;0.9414;0.9422;0.9414;0.9413;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9346;0.935;0.9346;0.9346;0.9379;0.9383;0.9379;0.938;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9258;0.9265;0.9258;0.9259;0.9345;0.9354;0.9345;0.9343;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
RandomForestClassifier;0.9258;0.9264;0.9258;0.9258;0.9483;0.9492;0.9483;0.9485;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
RandomForestClassifier;0.9338;0.9344;0.9338;0.9339;0.9141;0.915;0.9141;0.9135;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
DecisionTreeClassifier;0.9059;0.9072;0.9059;0.906;0.8931;0.8936;0.8931;0.8932;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.8879;0.8891;0.8879;0.888;0.8931;0.8931;0.8931;0.8931;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
DecisionTreeClassifier;0.8917;0.8934;0.8917;0.8919;0.9034;0.9037;0.9034;0.9035;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
RandomForestClassifier;0.9326;0.9333;0.9326;0.9327;0.9207;0.921;0.9207;0.9207;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
KNeighborsClassifier;0.8917;0.893;0.8917;0.892;0.9379;0.9391;0.9379;0.9376;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8978;0.898;0.8978;0.898;0.9138;0.9149;0.9138;0.9141;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8943;0.8956;0.8943;0.8946;0.9107;0.9107;0.9107;0.9107;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9345;0.9355;0.9345;0.9346;0.945;0.9465;0.945;0.9452;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
KNeighborsClassifier;0.9013;0.9026;0.9013;0.9015;0.8966;0.8988;0.8966;0.8968;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8947;0.8961;0.8947;0.8952;0.9244;0.9243;0.9244;0.9243;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8959;0.8967;0.8959;0.8961;0.9175;0.9208;0.9175;0.9178;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8967;0.8973;0.8967;0.8967;0.9103;0.9119;0.9103;0.9105;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8944;0.8955;0.8944;0.8945;0.9448;0.946;0.9448;0.9451;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8928;0.8946;0.8928;0.8931;0.9172;0.9187;0.9172;0.9173;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8905;0.8919;0.8905;0.8907;0.9553;0.9554;0.9553;0.9552;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8971;0.8983;0.8971;0.8972;0.9034;0.9043;0.9034;0.9031;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8974;0.8979;0.8974;0.8976;0.9034;0.9053;0.9034;0.9034;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8951;0.8961;0.8951;0.8954;0.9069;0.9076;0.9069;0.9069;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8985;0.8997;0.8985;0.8988;0.89;0.8904;0.89;0.8902;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8947;0.8964;0.8947;0.895;0.9244;0.9246;0.9244;0.9243;0.9167;0.9174;0.9167;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9315;0.9325;0.9315;0.9315;0.9448;0.9449;0.9448;0.9447;0.9167;0.9194;0.9167;0.9165;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9311;0.9314;0.9311;0.9311;0.921;0.9225;0.921;0.9209;0.9167;0.918;0.9167;0.9161;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9307;0.9313;0.9307;0.9308;0.931;0.9321;0.931;0.9311;0.9;0.906;0.9;0.9005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
DecisionTreeClassifier;0.8944;0.896;0.8944;0.8947;0.8897;0.8919;0.8897;0.8902;0.9;0.906;0.9;0.9005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
RandomForestClassifier;0.9349;0.9361;0.9349;0.935;0.921;0.9212;0.921;0.9209;0.9;0.9;0.9;0.9;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
RandomForestClassifier;0.9273;0.9276;0.9273;0.9274;0.9141;0.9162;0.9141;0.9142;0.9;0.9021;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
RandomForestClassifier;0.9261;0.927;0.9261;0.9262;0.9207;0.9207;0.9207;0.9207;0.9;0.9019;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
KNeighborsClassifier;0.8997;0.9006;0.8997;0.8999;0.9276;0.9276;0.9276;0.9275;0.9;0.9019;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9001;0.9012;0.9001;0.9002;0.9069;0.9082;0.9069;0.9071;0.9;0.9019;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9303;0.9313;0.9303;0.9304;0.9034;0.9046;0.9034;0.9034;0.9;0.9021;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
KNeighborsClassifier;0.894;0.8951;0.894;0.8943;0.9138;0.9161;0.9138;0.9136;0.9;0.9021;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9261;0.9267;0.9261;0.9262;0.9276;0.9275;0.9276;0.9275;0.9;0.9019;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
KNeighborsClassifier;0.8936;0.8949;0.8936;0.8937;0.9069;0.9082;0.9069;0.9059;0.9;0.9021;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8963;0.8971;0.8963;0.8965;0.8966;0.9;0.8966;0.8966;0.9;0.9027;0.9;0.8998;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8994;0.9005;0.8994;0.8996;0.931;0.9311;0.931;0.9311;0.9;0.9027;0.9;0.8998;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9296;0.9302;0.9296;0.9297;0.9276;0.9288;0.9276;0.9276;0.9;0.9027;0.9;0.8998;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9288;0.9296;0.9288;0.9289;0.9207;0.9225;0.9207;0.921;0.9;0.9027;0.9;0.8998;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
RandomForestClassifier;0.9261;0.9272;0.9261;0.9263;0.9448;0.9455;0.9448;0.9448;0.9;0.9058;0.9;0.8995;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9372;0.9375;0.9372;0.9373;0.9103;0.911;0.9103;0.9106;0.9;0.9058;0.9;0.8995;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
KNeighborsClassifier;0.9005;0.9017;0.9005;0.9008;0.8897;0.8907;0.8897;0.8899;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9269;0.9275;0.9269;0.9269;0.9244;0.9244;0.9244;0.9242;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 298};RandomForestClassifier(n_estimators=20, random_state=298)
KNeighborsClassifier;0.8982;0.8999;0.8982;0.8983;0.8969;0.8985;0.8969;0.8971;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.9024;0.9035;0.9024;0.9025;0.8694;0.869;0.8694;0.8689;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
KNeighborsClassifier;0.8928;0.8939;0.8928;0.8931;0.9138;0.914;0.9138;0.9138;0.8833;0.886;0.8833;0.8832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9318;0.933;0.9318;0.9319;0.921;0.9214;0.921;0.921;0.8833;0.886;0.8833;0.8832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
RandomForestClassifier;0.9254;0.9264;0.9254;0.9254;0.9552;0.9554;0.9552;0.9552;0.8833;0.886;0.8833;0.8832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 252};RandomForestClassifier(n_estimators=20, random_state=252)
KNeighborsClassifier;0.897;0.8979;0.897;0.8973;0.8935;0.8948;0.8935;0.8934;0.8833;0.888;0.8833;0.8829;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8967;0.8975;0.8967;0.897;0.9172;0.9186;0.9172;0.9175;0.8833;0.8873;0.8833;0.8826;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8446;0.8463;0.8446;0.8448;0.8724;0.8781;0.8724;0.8734;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
MLPClassifier;0.8312;0.8334;0.8312;0.8314;0.8966;0.8969;0.8966;0.8966;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.8354;0.8368;0.8354;0.8358;0.8552;0.858;0.8552;0.8554;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.8369;0.8387;0.8369;0.8374;0.8931;0.8952;0.8931;0.8934;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.8358;0.837;0.8358;0.8361;0.9141;0.9153;0.9141;0.9141;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.8384;0.84;0.8384;0.8388;0.9003;0.9003;0.9003;0.9003;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
MLPClassifier;0.8346;0.8359;0.8346;0.835;0.8763;0.8797;0.8763;0.8772;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
MLPClassifier;0.8324;0.8329;0.8324;0.8326;0.8931;0.895;0.8931;0.8925;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
MLPClassifier;0.8362;0.8376;0.8362;0.8364;0.9034;0.9072;0.9034;0.9039;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
MLPClassifier;0.8304;0.8309;0.8304;0.8303;0.8832;0.8851;0.8832;0.8834;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
MLPClassifier;0.8415;0.8428;0.8415;0.8417;0.8793;0.8795;0.8793;0.8791;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
MLPClassifier;0.8442;0.8456;0.8442;0.8446;0.8966;0.8991;0.8966;0.8967;0.85;0.8752;0.85;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
DecisionTreeClassifier;0.8936;0.8949;0.8936;0.8936;0.9175;0.9176;0.9175;0.9175;0.85;0.857;0.85;0.8508;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
DecisionTreeClassifier;0.8928;0.8946;0.8928;0.8928;0.9107;0.912;0.9107;0.911;0.85;0.857;0.85;0.8508;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8944;0.8955;0.8944;0.8946;0.9241;0.9285;0.9241;0.9243;0.85;0.8579;0.85;0.8507;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
MLPClassifier;0.8319;0.833;0.8319;0.832;0.89;0.8907;0.89;0.8896;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.84;0.8414;0.84;0.8403;0.8897;0.8919;0.8897;0.8897;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.8297;0.8307;0.8297;0.8298;0.8862;0.8881;0.8862;0.8847;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
MLPClassifier;0.8377;0.8397;0.8377;0.8381;0.8828;0.8835;0.8828;0.8823;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.8327;0.8346;0.8327;0.8329;0.8966;0.8977;0.8966;0.8959;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
MLPClassifier;0.8377;0.8388;0.8377;0.8383;0.9138;0.9145;0.9138;0.914;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
MLPClassifier;0.8346;0.8364;0.8346;0.8349;0.8969;0.9014;0.8969;0.8974;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
MLPClassifier;0.8427;0.8439;0.8427;0.8428;0.8621;0.8737;0.8621;0.8624;0.85;0.8641;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
DecisionTreeClassifier;0.8978;0.8986;0.8978;0.8977;0.8866;0.8869;0.8866;0.8866;0.85;0.8505;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
DecisionTreeClassifier;0.8917;0.8928;0.8917;0.8918;0.9172;0.918;0.9172;0.9173;0.85;0.8544;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
SVC;0.8171;0.818;0.8171;0.8169;0.9207;0.922;0.9207;0.9207;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
MLPClassifier;0.835;0.8366;0.835;0.8353;0.8552;0.8579;0.8552;0.8558;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
DecisionTreeClassifier;0.8932;0.8941;0.8932;0.8932;0.9;0.9012;0.9;0.9003;0.8333;0.8404;0.8333;0.8342;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8879;0.8892;0.8879;0.888;0.9138;0.914;0.9138;0.9139;0.8333;0.8404;0.8333;0.8342;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.8925;0.8936;0.8925;0.8926;0.9034;0.9046;0.9034;0.9037;0.8333;0.8404;0.8333;0.8342;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
DecisionTreeClassifier;0.8863;0.888;0.8863;0.8865;0.9;0.9015;0.9;0.9002;0.8333;0.8426;0.8333;0.8341;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
SVC;0.8162;0.8167;0.8162;0.8161;0.8935;0.894;0.8935;0.8934;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.8105;0.8138;0.8105;0.8104;0.9244;0.93;0.9244;0.9249;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8125;0.813;0.8125;0.8123;0.9103;0.9168;0.9103;0.9105;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8183;0.8192;0.8183;0.8183;0.8862;0.8863;0.8862;0.8861;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8201;0.8206;0.8201;0.8202;0.8724;0.8784;0.8724;0.8724;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8155;0.8167;0.8155;0.8158;0.9138;0.9147;0.9138;0.914;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
SVC;0.8193;0.8199;0.8193;0.8195;0.9038;0.9069;0.9038;0.9043;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8224;0.8224;0.8224;0.8224;0.9276;0.9285;0.9276;0.9276;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
MLPClassifier;0.8403;0.841;0.8403;0.8407;0.9107;0.9105;0.9107;0.9105;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
SVC;0.8159;0.8169;0.8159;0.8161;0.9172;0.9182;0.9172;0.9169;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8125;0.8143;0.8125;0.8126;0.931;0.9322;0.931;0.9308;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.8194;0.8198;0.8194;0.8194;0.9138;0.9163;0.9138;0.9139;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
MLPClassifier;0.84;0.8411;0.84;0.8403;0.8759;0.8783;0.8759;0.8746;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
SVC;0.8178;0.8176;0.8178;0.8178;0.8966;0.8994;0.8966;0.8965;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
MLPClassifier;0.8374;0.8384;0.8374;0.8377;0.8793;0.8799;0.8793;0.8788;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
MLPClassifier;0.8282;0.8291;0.8282;0.8282;0.9241;0.9252;0.9241;0.9243;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 951, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=951)
SVC;0.8185;0.8198;0.8185;0.8185;0.8832;0.8938;0.8832;0.8837;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.8239;0.8244;0.8239;0.8237;0.8591;0.8604;0.8591;0.8591;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
SVC;0.8194;0.8206;0.8194;0.8196;0.8448;0.8523;0.8448;0.8448;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8102;0.8129;0.8102;0.8105;0.9069;0.9083;0.9069;0.9071;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
MLPClassifier;0.8358;0.8381;0.8358;0.8361;0.8797;0.8794;0.8797;0.879;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
SVC;0.8186;0.8197;0.8186;0.8186;0.8931;0.8944;0.8931;0.8932;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.8135;0.8136;0.8135;0.8133;0.9107;0.9166;0.9107;0.9111;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
SVC;0.8144;0.8159;0.8144;0.8146;0.8793;0.8827;0.8793;0.8799;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.8228;0.8233;0.8228;0.8229;0.8655;0.8723;0.8655;0.8655;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.819;0.8203;0.819;0.8188;0.8897;0.8917;0.8897;0.8897;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
SVC;0.8162;0.817;0.8162;0.8163;0.9347;0.9389;0.9347;0.935;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.8132;0.8142;0.8132;0.8134;0.8759;0.884;0.8759;0.8761;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 140};SVC(C=10, random_state=140)
SVC;0.8185;0.8199;0.8185;0.8187;0.8763;0.883;0.8763;0.8767;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 499};SVC(C=10, random_state=499)
SVC;0.8213;0.8223;0.8213;0.8211;0.8966;0.9029;0.8966;0.8978;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
SVC;0.8148;0.8167;0.8148;0.8148;0.8897;0.9009;0.8897;0.8895;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
SVC;0.8181;0.8193;0.8181;0.8181;0.9038;0.9067;0.9038;0.9042;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
SVC;0.8159;0.8167;0.8159;0.8159;0.9034;0.9088;0.9034;0.9023;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
MLPClassifier;0.8297;0.8302;0.8297;0.8298;0.9103;0.9106;0.9103;0.9105;0.8333;0.8424;0.8333;0.8336;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
DecisionTreeClassifier;0.9001;0.9017;0.9001;0.9003;0.8862;0.8937;0.8862;0.8868;0.8333;0.8424;0.8333;0.8336;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8921;0.8933;0.8921;0.8922;0.8931;0.8929;0.8931;0.8929;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.892;0.893;0.892;0.892;0.9141;0.9141;0.9141;0.9139;0.8333;0.8369;0.8333;0.8328;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8897;0.8907;0.8897;0.8897;0.8763;0.8761;0.8763;0.8762;0.8333;0.8408;0.8333;0.8326;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.8936;0.8943;0.8936;0.8937;0.8862;0.888;0.8862;0.8867;0.8333;0.838;0.8333;0.8317;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.8951;0.8964;0.8951;0.8953;0.8966;0.8965;0.8966;0.8965;0.8167;0.826;0.8167;0.8187;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
DecisionTreeClassifier;0.8844;0.8854;0.8844;0.8847;0.9448;0.9449;0.9448;0.9448;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8886;0.8902;0.8886;0.8888;0.9003;0.9008;0.9003;0.9004;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.8852;0.8862;0.8852;0.8852;0.9172;0.9175;0.9172;0.9169;0.8167;0.8201;0.8167;0.8173;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
MLPClassifier;0.8335;0.8349;0.8335;0.8336;0.8793;0.8799;0.8793;0.879;0.8167;0.8224;0.8167;0.8173;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 120, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=120)
SVC;0.8171;0.8181;0.8171;0.817;0.8897;0.8926;0.8897;0.8899;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 732};SVC(C=10, random_state=732)
MLPClassifier;0.8419;0.8438;0.8419;0.8421;0.8586;0.8583;0.8586;0.8576;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
DecisionTreeClassifier;0.8928;0.8941;0.8928;0.8929;0.8729;0.8725;0.8729;0.8724;0.8167;0.8248;0.8167;0.8165;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.8982;0.9001;0.8982;0.8983;0.9103;0.9103;0.9103;0.9101;0.8167;0.8203;0.8167;0.8162;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
DecisionTreeClassifier;0.8879;0.889;0.8879;0.8879;0.9103;0.9104;0.9103;0.9103;0.8;0.8109;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 795};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=795)
DecisionTreeClassifier;0.8902;0.891;0.8902;0.8903;0.9069;0.9079;0.9069;0.9072;0.8;0.8064;0.8;0.8007;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
DecisionTreeClassifier;0.8871;0.8883;0.8871;0.8872;0.9175;0.9184;0.9175;0.9178;0.8;0.8039;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
DecisionTreeClassifier;0.8925;0.8938;0.8925;0.8927;0.9034;0.9048;0.9034;0.9033;0.8;0.8013;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 951};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=951)
MLPClassifier;0.8335;0.8346;0.8335;0.8336;0.8832;0.8876;0.8832;0.8812;0.8;0.8005;0.8;0.7999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 936, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=936)
DecisionTreeClassifier;0.8921;0.8932;0.8921;0.8922;0.9034;0.9043;0.9034;0.9031;0.8;0.8014;0.8;0.7998;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 895};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=895)
LogisticRegression;0.6778;0.6841;0.6778;0.6772;0.6897;0.6935;0.6897;0.6892;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6804;0.6884;0.6804;0.6799;0.6586;0.6607;0.6586;0.6587;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6777;0.6848;0.6777;0.6771;0.6873;0.6972;0.6873;0.686;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.683;0.6903;0.683;0.683;0.6838;0.6885;0.6838;0.6849;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6805;0.6892;0.6805;0.6801;0.669;0.6797;0.669;0.6689;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6774;0.6852;0.6774;0.6773;0.6828;0.6873;0.6828;0.6809;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6868;0.6951;0.6868;0.6867;0.6701;0.6737;0.6701;0.6696;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6805;0.6878;0.6805;0.6801;0.6621;0.671;0.6621;0.6618;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6816;0.6884;0.6816;0.681;0.6862;0.6958;0.6862;0.687;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6839;0.6905;0.6839;0.684;0.6517;0.657;0.6517;0.6489;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6804;0.6879;0.6804;0.6808;0.7241;0.7293;0.7241;0.7242;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6792;0.6865;0.6792;0.6792;0.7079;0.7151;0.7079;0.7075;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6804;0.6875;0.6804;0.6798;0.6759;0.6869;0.6759;0.677;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.685;0.6935;0.685;0.6847;0.669;0.6786;0.669;0.6689;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6801;0.688;0.6801;0.6797;0.6655;0.676;0.6655;0.6639;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6849;0.6927;0.6849;0.6849;0.677;0.6772;0.677;0.6768;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6845;0.6916;0.6845;0.6843;0.6495;0.6591;0.6495;0.6514;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6795;0.6861;0.6795;0.6793;0.6942;0.7002;0.6942;0.6941;0.7333;0.732;0.7333;0.7324;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6839;0.6905;0.6839;0.6838;0.7034;0.7042;0.7034;0.7032;0.7333;0.732;0.7333;0.7324;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6816;0.6875;0.6816;0.6814;0.6621;0.6678;0.6621;0.6632;0.7333;0.732;0.7333;0.7324;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6751;0.6814;0.6751;0.675;0.7345;0.7429;0.7345;0.7347;0.7167;0.7153;0.7167;0.7113;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6843;0.6903;0.6843;0.684;0.6621;0.6807;0.6621;0.6638;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6812;0.6883;0.6812;0.6808;0.6655;0.6882;0.6655;0.667;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 270, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=270)"
LogisticRegression;0.6842;0.6909;0.6842;0.6835;0.646;0.6494;0.646;0.6451;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6785;0.6862;0.6785;0.6784;0.6966;0.7044;0.6966;0.6973;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6807;0.6882;0.6807;0.6808;0.7113;0.7248;0.7113;0.71;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6801;0.6869;0.6801;0.6797;0.6759;0.7039;0.6759;0.6778;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6873;0.6936;0.6873;0.6874;0.6586;0.6683;0.6586;0.6571;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 103, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=103)"
LogisticRegression;0.6785;0.6842;0.6785;0.6782;0.6897;0.6942;0.6897;0.6907;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
LogisticRegression;0.6774;0.6839;0.6774;0.677;0.6793;0.694;0.6793;0.6796;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 942, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=942)"
