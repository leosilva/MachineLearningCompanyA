Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.881;0.884;0.881;0.8813;0.8855;0.8869;0.8855;0.8853;0.8167;0.8167;0.8167;0.8167;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8808;0.8844;0.8808;0.8805;0.8882;0.8885;0.8882;0.8883;0.8167;0.8167;0.8167;0.8167;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8781;0.8788;0.8781;0.8775;0.8742;0.8738;0.8742;0.8736;0.8167;0.8187;0.8167;0.8163;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8775;0.8786;0.8775;0.877;0.8782;0.878;0.8782;0.8775;0.8;0.8005;0.8;0.7999;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8798;0.8823;0.8798;0.8798;0.8795;0.8805;0.8795;0.8799;0.8;0.8005;0.8;0.7999;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8744;0.8775;0.8744;0.8746;0.8942;0.8951;0.8942;0.8941;0.8;0.8005;0.8;0.7999;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8803;0.8824;0.8803;0.88;0.8902;0.8896;0.8902;0.8898;0.8;0.8005;0.8;0.7999;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8835;0.8848;0.8835;0.8834;0.8983;0.8987;0.8983;0.8979;0.8;0.8005;0.8;0.7999;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8851;0.8862;0.8851;0.8852;0.8902;0.8908;0.8902;0.8905;0.8;0.8005;0.8;0.7999;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8777;0.8801;0.8777;0.8778;0.9096;0.9092;0.9096;0.9093;0.8;0.8005;0.8;0.7999;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8674;0.8703;0.8674;0.8669;0.8802;0.8797;0.8802;0.8796;0.7833;0.7833;0.7833;0.7833;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8765;0.8772;0.8765;0.8763;0.8949;0.8944;0.8949;0.894;0.7833;0.7833;0.7833;0.7833;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8759;0.8775;0.8759;0.8759;0.8889;0.8912;0.8889;0.8893;0.7833;0.785;0.7833;0.7829;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8707;0.8739;0.8707;0.8704;0.8648;0.8659;0.8648;0.8649;0.7833;0.785;0.7833;0.7829;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.884;0.8852;0.884;0.8841;0.8922;0.892;0.8922;0.8921;0.7833;0.785;0.7833;0.7829;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8801;0.8827;0.8801;0.88;0.8842;0.8844;0.8842;0.8842;0.7833;0.785;0.7833;0.7829;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8752;0.8771;0.8752;0.875;0.8896;0.8896;0.8896;0.8895;0.7833;0.785;0.7833;0.7829;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.88;0.883;0.88;0.8801;0.8862;0.8858;0.8862;0.8854;0.7667;0.767;0.7667;0.7666;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8746;0.876;0.8746;0.8748;0.8989;0.8985;0.8989;0.8983;0.7667;0.767;0.7667;0.7666;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8688;0.8745;0.8688;0.8689;0.8896;0.8929;0.8896;0.8903;0.7667;0.767;0.7667;0.7666;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8776;0.8808;0.8776;0.8774;0.8949;0.8949;0.8949;0.8949;0.7667;0.767;0.7667;0.7666;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8864;0.8865;0.8864;0.8863;0.8983;0.9015;0.8983;0.8987;0.7667;0.767;0.7667;0.7666;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8777;0.8802;0.8777;0.8779;0.8909;0.8916;0.8909;0.8908;0.7667;0.767;0.7667;0.7666;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.883;0.8845;0.883;0.883;0.8842;0.8871;0.8842;0.8843;0.7667;0.767;0.7667;0.7666;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8813;0.8831;0.8813;0.8811;0.8815;0.8849;0.8815;0.8821;0.7667;0.7701;0.7667;0.7656;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8734;0.8768;0.8734;0.8728;0.8849;0.8859;0.8849;0.8851;0.7667;0.7701;0.7667;0.7656;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8785;0.8805;0.8785;0.8785;0.8909;0.8935;0.8909;0.8909;0.7667;0.7701;0.7667;0.7656;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8784;0.8811;0.8784;0.878;0.8862;0.8865;0.8862;0.8864;0.75;0.7513;0.75;0.7495;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8857;0.886;0.8857;0.8856;0.8862;0.8863;0.8862;0.8862;0.7333;0.7336;0.7333;0.7332;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.878;0.8798;0.878;0.878;0.8648;0.8682;0.8648;0.866;0.7167;0.7196;0.7167;0.7178;smote;5000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
