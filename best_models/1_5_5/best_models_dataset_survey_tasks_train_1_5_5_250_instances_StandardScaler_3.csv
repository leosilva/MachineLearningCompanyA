Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8743;0.8808;0.8743;0.8733;0.8696;0.8763;0.8696;0.8687;0.8833;0.8968;0.8833;0.8814;0.965;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8665;0.8737;0.8665;0.8659;0.8986;0.9105;0.8986;0.8981;0.8833;0.8986;0.8833;0.8792;0.969;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9034;0.909;0.9034;0.9032;0.913;0.9147;0.913;0.913;0.8667;0.8821;0.8667;0.8664;0.9868;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
SVC;0.8776;0.8867;0.8776;0.8753;0.8841;0.8833;0.8841;0.8834;0.8667;0.8829;0.8667;0.8663;0.9276;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
MLPClassifier;0.8857;0.8924;0.8857;0.8847;0.8841;0.8898;0.8841;0.8835;0.8667;0.8829;0.8667;0.8663;0.9697;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
SVC;0.8679;0.8787;0.8679;0.8672;0.9275;0.9268;0.9275;0.9269;0.8667;0.8829;0.8667;0.8663;0.9365;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
SVC;0.8778;0.8853;0.8778;0.8771;0.913;0.92;0.913;0.9127;0.8667;0.8829;0.8667;0.8663;0.933;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
SVC;0.8711;0.8775;0.8711;0.87;0.913;0.9209;0.913;0.913;0.8667;0.8829;0.8667;0.8663;0.9367;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
MLPClassifier;0.8857;0.8893;0.8857;0.885;0.8986;0.9065;0.8986;0.899;0.8667;0.8829;0.8667;0.8663;0.9761;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
SVC;0.8712;0.8793;0.8712;0.8695;0.8986;0.9044;0.8986;0.8993;0.8667;0.8829;0.8667;0.8663;0.9317;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
MLPClassifier;0.8872;0.8946;0.8872;0.8868;0.8841;0.8861;0.8841;0.8843;0.8667;0.8829;0.8667;0.8663;0.9733;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
RandomForestClassifier;0.9164;0.9204;0.9164;0.9168;0.8841;0.889;0.8841;0.8847;0.8667;0.8851;0.8667;0.864;0.9868;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 787};RandomForestClassifier(n_estimators=10, random_state=787)
KNeighborsClassifier;0.8663;0.8712;0.8663;0.866;0.9275;0.9281;0.9275;0.9275;0.8667;0.8838;0.8667;0.8633;0.9625;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8647;0.8699;0.8647;0.8634;0.9275;0.9274;0.9275;0.9272;0.8667;0.8838;0.8667;0.8633;0.9615;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8727;0.8812;0.8727;0.8706;0.9565;0.9615;0.9565;0.957;0.8667;0.8838;0.8667;0.8633;0.9633;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8697;0.8779;0.8697;0.8692;0.8841;0.8908;0.8841;0.8832;0.8667;0.8838;0.8667;0.8633;0.9608;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8873;0.8927;0.8873;0.8866;0.8986;0.9071;0.8986;0.8988;0.8667;0.8838;0.8667;0.8633;0.9662;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8776;0.8823;0.8776;0.8766;0.913;0.9129;0.913;0.9127;0.8667;0.8838;0.8667;0.8633;0.9601;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.8824;0.8874;0.8824;0.881;0.8696;0.8783;0.8696;0.8709;0.85;0.8827;0.85;0.8535;0.9342;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'rbf', 'random_state': 666};SVC(C=1, probability=True, random_state=666)
SVC;0.8761;0.8832;0.8761;0.8747;0.9275;0.9326;0.9275;0.9274;0.85;0.8752;0.85;0.8517;0.9352;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
SVC;0.8776;0.8835;0.8776;0.8767;0.8986;0.9043;0.8986;0.8951;0.85;0.8752;0.85;0.8517;0.9321;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
SVC;0.8825;0.8881;0.8825;0.8818;0.8841;0.8887;0.8841;0.882;0.85;0.8752;0.85;0.8517;0.9359;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
MLPClassifier;0.8904;0.8928;0.8904;0.8898;0.8841;0.8954;0.8841;0.8837;0.85;0.869;0.85;0.8511;0.9732;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.8824;0.8881;0.8824;0.8811;0.9275;0.934;0.9275;0.9272;0.85;0.8669;0.85;0.8505;0.9707;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
MLPClassifier;0.8744;0.8824;0.8744;0.8743;0.971;0.9733;0.971;0.971;0.85;0.8669;0.85;0.8505;0.9701;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.884;0.8908;0.884;0.8833;0.971;0.9733;0.971;0.971;0.85;0.8669;0.85;0.8505;0.9702;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.884;0.8942;0.884;0.8827;0.8986;0.8996;0.8986;0.8988;0.85;0.8669;0.85;0.8505;0.9763;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8808;0.8842;0.8808;0.8797;0.942;0.9506;0.942;0.943;0.85;0.8669;0.85;0.8505;0.9727;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.8872;0.8926;0.8872;0.8866;0.913;0.9163;0.913;0.9135;0.85;0.8669;0.85;0.8505;0.9725;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.8807;0.8887;0.8807;0.8795;0.8986;0.9025;0.8986;0.8986;0.85;0.8669;0.85;0.8505;0.9726;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
MLPClassifier;0.8953;0.8997;0.8953;0.8948;0.8986;0.9018;0.8986;0.8983;0.85;0.8669;0.85;0.8505;0.97;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8938;0.8981;0.8938;0.893;0.8841;0.9044;0.8841;0.8858;0.85;0.8669;0.85;0.8505;0.9729;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.884;0.8878;0.884;0.882;0.9565;0.9565;0.9565;0.9562;0.85;0.8669;0.85;0.8505;0.9714;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
MLPClassifier;0.8792;0.8862;0.8792;0.8793;0.942;0.9506;0.942;0.9416;0.85;0.8669;0.85;0.8505;0.9705;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8873;0.8932;0.8873;0.8864;0.913;0.9199;0.913;0.9124;0.85;0.8669;0.85;0.8505;0.972;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.8872;0.8933;0.8872;0.8867;0.913;0.931;0.913;0.9135;0.85;0.8669;0.85;0.8505;0.9726;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
RandomForestClassifier;0.9114;0.9169;0.9114;0.9115;0.942;0.9457;0.942;0.9419;0.85;0.8671;0.85;0.85;0.9831;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
KNeighborsClassifier;0.8743;0.881;0.8743;0.8736;0.8841;0.8974;0.8841;0.882;0.85;0.8724;0.85;0.8487;0.9617;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9179;0.9232;0.9179;0.9178;0.8986;0.8996;0.8986;0.8988;0.85;0.8724;0.85;0.8487;0.9882;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 473};RandomForestClassifier(n_estimators=5, random_state=473)
KNeighborsClassifier;0.8696;0.8742;0.8696;0.8682;0.8551;0.8624;0.8551;0.8558;0.85;0.8696;0.85;0.8482;0.9624;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
RandomForestClassifier;0.926;0.9288;0.926;0.9257;0.8841;0.8887;0.8841;0.882;0.85;0.8696;0.85;0.8482;0.9863;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 387};RandomForestClassifier(n_estimators=20, random_state=387)
KNeighborsClassifier;0.8647;0.8686;0.8647;0.8638;0.9275;0.9405;0.9275;0.9289;0.85;0.8696;0.85;0.8482;0.9612;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.905;0.912;0.905;0.9044;0.971;0.971;0.971;0.971;0.85;0.8696;0.85;0.8482;0.9863;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 787};RandomForestClassifier(n_estimators=10, random_state=787)
KNeighborsClassifier;0.8824;0.8877;0.8824;0.8818;0.8986;0.8986;0.8986;0.8986;0.85;0.8696;0.85;0.8482;0.9643;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9211;0.9257;0.9211;0.9203;0.8841;0.8993;0.8841;0.8843;0.85;0.8696;0.85;0.8482;0.9887;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 387};RandomForestClassifier(n_estimators=20, random_state=387)
RandomForestClassifier;0.905;0.9123;0.905;0.9053;0.9565;0.9565;0.9565;0.9562;0.85;0.8699;0.85;0.8481;0.9864;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 387};RandomForestClassifier(n_estimators=20, random_state=387)
KNeighborsClassifier;0.8696;0.8751;0.8696;0.8682;0.9565;0.9565;0.9565;0.9562;0.85;0.8699;0.85;0.8481;0.9668;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8856;0.8922;0.8856;0.8836;0.8696;0.8859;0.8696;0.8689;0.85;0.8731;0.85;0.8477;0.9682;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9034;0.9103;0.9034;0.9032;0.942;0.9444;0.942;0.9423;0.85;0.8599;0.85;0.8473;0.9874;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9131;0.918;0.9131;0.9134;0.942;0.9426;0.942;0.942;0.85;0.8698;0.85;0.8472;0.9852;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 787};RandomForestClassifier(n_estimators=10, random_state=787)
KNeighborsClassifier;0.8744;0.8788;0.8744;0.8726;0.9275;0.9361;0.9275;0.9271;0.85;0.8698;0.85;0.8472;0.9653;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8631;0.8693;0.8631;0.8606;0.9275;0.9355;0.9275;0.9279;0.85;0.8698;0.85;0.8472;0.9675;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8727;0.8804;0.8727;0.872;0.913;0.9207;0.913;0.9124;0.85;0.8698;0.85;0.8472;0.9615;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.868;0.8717;0.868;0.867;0.913;0.9142;0.913;0.9133;0.85;0.8698;0.85;0.8472;0.9645;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8695;0.8736;0.8695;0.8688;0.942;0.9506;0.942;0.9427;0.85;0.8698;0.85;0.8472;0.9629;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8921;0.8966;0.8921;0.8911;0.8841;0.8977;0.8841;0.884;0.85;0.8698;0.85;0.8472;0.9652;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9195;0.9238;0.9195;0.9192;0.913;0.9183;0.913;0.9135;0.8333;0.8524;0.8333;0.835;0.9838;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 787};RandomForestClassifier(n_estimators=20, random_state=787)
SVC;0.8841;0.891;0.8841;0.8831;0.8986;0.9034;0.8986;0.8971;0.8333;0.8532;0.8333;0.8349;0.941;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
MLPClassifier;0.8824;0.8886;0.8824;0.8811;0.942;0.9506;0.942;0.9416;0.8333;0.8532;0.8333;0.8349;0.968;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
MLPClassifier;0.876;0.8795;0.876;0.8753;0.942;0.9456;0.942;0.9416;0.8333;0.8518;0.8333;0.8346;0.972;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
RandomForestClassifier;0.9099;0.9168;0.9099;0.9097;0.913;0.9183;0.913;0.9135;0.8333;0.8518;0.8333;0.8346;0.9856;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 387};RandomForestClassifier(n_estimators=10, random_state=387)
MLPClassifier;0.8792;0.8882;0.8792;0.8781;0.9275;0.9279;0.9275;0.9269;0.8333;0.8518;0.8333;0.8346;0.9726;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.8808;0.8842;0.8808;0.8802;0.942;0.9426;0.942;0.942;0.8333;0.8518;0.8333;0.8346;0.97;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
RandomForestClassifier;0.9082;0.9129;0.9082;0.9081;0.9275;0.9328;0.9275;0.9283;0.8333;0.8603;0.8333;0.8332;0.9854;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 387};RandomForestClassifier(n_estimators=20, random_state=387)
MLPClassifier;0.8857;0.8911;0.8857;0.8856;0.8986;0.9031;0.8986;0.8982;0.8333;0.8551;0.8333;0.8326;0.9715;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8808;0.8877;0.8808;0.8796;0.9565;0.9577;0.9565;0.9568;0.8333;0.8551;0.8333;0.8326;0.9703;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8856;0.891;0.8856;0.8854;0.8986;0.9067;0.8986;0.8988;0.8333;0.8551;0.8333;0.8326;0.9704;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8824;0.8875;0.8824;0.8814;0.913;0.9177;0.913;0.9135;0.8333;0.8551;0.8333;0.8326;0.9731;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
MLPClassifier;0.8873;0.8923;0.8873;0.8866;0.913;0.9176;0.913;0.9127;0.8333;0.8551;0.8333;0.8326;0.975;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.8872;0.8923;0.8872;0.8862;0.913;0.9163;0.913;0.9135;0.8333;0.8551;0.8333;0.8326;0.9727;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 52, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=52)
MLPClassifier;0.8889;0.8914;0.8889;0.8879;0.8986;0.8994;0.8986;0.897;0.8333;0.8551;0.8333;0.8326;0.973;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
RandomForestClassifier;0.9243;0.929;0.9243;0.9241;0.8696;0.8964;0.8696;0.8713;0.8333;0.8565;0.8333;0.8324;0.9902;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 387};RandomForestClassifier(n_estimators=20, random_state=387)
KNeighborsClassifier;0.8873;0.8915;0.8873;0.8868;0.8696;0.8821;0.8696;0.8698;0.8333;0.8565;0.8333;0.8324;0.9672;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8841;0.8881;0.8841;0.8829;0.913;0.9176;0.913;0.9127;0.8333;0.8565;0.8333;0.8324;0.967;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8695;0.8764;0.8695;0.8688;0.8986;0.9047;0.8986;0.8991;0.8333;0.8565;0.8333;0.8324;0.9592;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9211;0.9249;0.9211;0.9208;0.8986;0.9141;0.8986;0.8991;0.8333;0.8565;0.8333;0.8324;0.9865;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9018;0.9063;0.9018;0.9017;0.9855;0.9861;0.9855;0.9855;0.8333;0.8565;0.8333;0.8324;0.9844;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 387};RandomForestClassifier(n_estimators=20, random_state=387)
KNeighborsClassifier;0.8696;0.8757;0.8696;0.8683;0.942;0.9461;0.942;0.9419;0.8333;0.8565;0.8333;0.8324;0.9593;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9098;0.9153;0.9098;0.9092;0.913;0.931;0.913;0.915;0.8333;0.8565;0.8333;0.8324;0.9881;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
KNeighborsClassifier;0.8824;0.8887;0.8824;0.8809;0.8551;0.8686;0.8551;0.8549;0.8333;0.8565;0.8333;0.8324;0.9651;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9114;0.9158;0.9114;0.9114;0.9275;0.9405;0.9275;0.9282;0.8333;0.8548;0.8333;0.8322;0.986;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
KNeighborsClassifier;0.8615;0.8677;0.8615;0.8605;0.9275;0.9296;0.9275;0.9274;0.8333;0.8548;0.8333;0.8322;0.9629;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9291;0.9318;0.9291;0.929;0.8696;0.8803;0.8696;0.871;0.8333;0.8548;0.8333;0.8322;0.9878;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 787};RandomForestClassifier(n_estimators=20, random_state=787)
KNeighborsClassifier;0.8809;0.8866;0.8809;0.8794;0.8551;0.8789;0.8551;0.8554;0.8333;0.8609;0.8333;0.8317;0.9651;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.905;0.9098;0.905;0.9047;0.9275;0.9287;0.9275;0.9278;0.8333;0.844;0.8333;0.8311;0.9862;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
RandomForestClassifier;0.9227;0.9277;0.9227;0.9229;0.913;0.9238;0.913;0.9134;0.8333;0.8448;0.8333;0.831;0.989;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 787};RandomForestClassifier(n_estimators=20, random_state=787)
SVC;0.8551;0.8686;0.8551;0.854;0.9565;0.9588;0.9565;0.9565;0.8167;0.8448;0.8167;0.8201;0.9285;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
SVC;0.8889;0.8949;0.8889;0.8884;0.8406;0.8393;0.8406;0.8346;0.8167;0.8536;0.8167;0.8199;0.937;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
SVC;0.8841;0.8907;0.8841;0.8821;0.8841;0.8907;0.8841;0.8816;0.8167;0.8536;0.8167;0.8199;0.9352;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
SVC;0.8696;0.8796;0.8696;0.8696;0.9275;0.9326;0.9275;0.9274;0.8167;0.8373;0.8167;0.8191;0.9361;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
SVC;0.8711;0.8827;0.8711;0.8697;0.8261;0.8329;0.8261;0.8241;0.8167;0.8373;0.8167;0.8191;0.9414;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
SVC;0.8743;0.8782;0.8743;0.8724;0.942;0.9506;0.942;0.9427;0.8167;0.84;0.8167;0.819;0.9361;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
SVC;0.8791;0.887;0.8791;0.8782;0.8841;0.8902;0.8841;0.8816;0.8167;0.84;0.8167;0.819;0.9344;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
SVC;0.8728;0.8782;0.8728;0.8708;0.8696;0.8708;0.8696;0.8683;0.8167;0.84;0.8167;0.819;0.9368;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
SVC;0.8777;0.8855;0.8777;0.8767;0.8986;0.9159;0.8986;0.8987;0.8167;0.84;0.8167;0.819;0.9332;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
MLPClassifier;0.8905;0.8944;0.8905;0.8899;0.8696;0.8794;0.8696;0.8697;0.8167;0.8373;0.8167;0.8186;0.974;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 795, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=795)
MLPClassifier;0.8808;0.8849;0.8808;0.8803;0.942;0.9443;0.942;0.942;0.8167;0.8373;0.8167;0.8186;0.9721;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
SVC;0.8728;0.881;0.8728;0.8715;0.8841;0.8883;0.8841;0.8841;0.8167;0.8457;0.8167;0.8184;0.936;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
SVC;0.8792;0.8845;0.8792;0.8781;0.8841;0.8874;0.8841;0.8838;0.8167;0.8457;0.8167;0.8184;0.9271;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
SVC;0.8778;0.8855;0.8778;0.8762;0.8696;0.8709;0.8696;0.8694;0.8167;0.8457;0.8167;0.8184;0.934;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
KNeighborsClassifier;0.8712;0.8747;0.8712;0.8704;0.8841;0.8969;0.8841;0.8804;0.8167;0.8432;0.8167;0.8176;0.9648;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
DecisionTreeClassifier;0.9114;0.9144;0.9114;0.9114;0.8841;0.8856;0.8841;0.8828;0.8167;0.8277;0.8167;0.8175;0.9612;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
RandomForestClassifier;0.9195;0.9228;0.9195;0.9195;0.8986;0.899;0.8986;0.8985;0.8167;0.8406;0.8167;0.8171;0.9889;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.905;0.9078;0.905;0.9046;0.9275;0.9294;0.9275;0.9264;0.8167;0.8409;0.8167;0.8171;0.986;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 787};RandomForestClassifier(n_estimators=10, random_state=787)
RandomForestClassifier;0.9115;0.9167;0.9115;0.9109;0.913;0.9138;0.913;0.9123;0.8167;0.8436;0.8167;0.8165;0.9878;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 387};RandomForestClassifier(n_estimators=10, random_state=387)
KNeighborsClassifier;0.8631;0.8677;0.8631;0.8625;0.913;0.9142;0.913;0.9133;0.8167;0.8436;0.8167;0.8165;0.9657;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9082;0.9159;0.9082;0.9084;0.942;0.9441;0.942;0.9419;0.8167;0.8406;0.8167;0.8162;0.9852;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 387};RandomForestClassifier(n_estimators=5, random_state=387)
RandomForestClassifier;0.9227;0.9255;0.9227;0.9221;0.8696;0.8862;0.8696;0.8712;0.8167;0.8406;0.8167;0.8162;0.9848;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 387};RandomForestClassifier(n_estimators=20, random_state=387)
RandomForestClassifier;0.9242;0.9296;0.9242;0.9239;0.8696;0.8746;0.8696;0.8702;0.8167;0.8406;0.8167;0.8162;0.9856;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 787};RandomForestClassifier(n_estimators=10, random_state=787)
RandomForestClassifier;0.9115;0.9165;0.9115;0.9113;0.942;0.9461;0.942;0.9419;0.8167;0.8406;0.8167;0.8162;0.9885;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 787};RandomForestClassifier(n_estimators=10, random_state=787)
SVC;0.8776;0.8866;0.8776;0.8766;0.8696;0.8886;0.8696;0.8666;0.8;0.8434;0.8;0.8035;0.9346;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
SVC;0.8744;0.8826;0.8744;0.873;0.8696;0.8878;0.8696;0.8688;0.8;0.8234;0.8;0.8035;0.9342;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
SVC;0.8744;0.8785;0.8744;0.8728;0.9275;0.9306;0.9275;0.9281;0.8;0.8221;0.8;0.8032;0.9298;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
SVC;0.8744;0.8813;0.8744;0.8733;0.8551;0.8677;0.8551;0.8495;0.8;0.8273;0.8;0.803;0.9378;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
SVC;0.8711;0.88;0.8711;0.8699;0.8841;0.8895;0.8841;0.8829;0.8;0.834;0.8;0.8019;0.9341;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
KNeighborsClassifier;0.8664;0.8734;0.8664;0.8649;0.971;0.9716;0.971;0.971;0.8;0.8261;0.8;0.8016;0.9668;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9114;0.9165;0.9114;0.9114;0.9275;0.9274;0.9275;0.9272;0.8;0.8269;0.8;0.7999;0.9853;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 787};RandomForestClassifier(n_estimators=5, random_state=787)
DecisionTreeClassifier;0.9034;0.9073;0.9034;0.9036;0.913;0.9135;0.913;0.913;0.8;0.8144;0.8;0.7997;0.9645;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
DecisionTreeClassifier;0.9034;0.909;0.9034;0.9029;0.8986;0.9049;0.8986;0.8983;0.8;0.8151;0.8;0.7996;0.9517;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
DecisionTreeClassifier;0.8953;0.8987;0.8953;0.8945;0.9565;0.9615;0.9565;0.9563;0.8;0.8065;0.8;0.7985;0.9541;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
SVC;0.8793;0.8852;0.8793;0.8783;0.8406;0.8424;0.8406;0.8391;0.7833;0.8076;0.7833;0.7877;0.9396;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 800};SVC(C=10, probability=True, random_state=800)
DecisionTreeClassifier;0.9147;0.9188;0.9147;0.9146;0.913;0.9244;0.913;0.9123;0.7833;0.7905;0.7833;0.7844;0.9631;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
DecisionTreeClassifier;0.9115;0.9158;0.9115;0.9116;0.913;0.9189;0.913;0.9138;0.7833;0.7869;0.7833;0.7838;0.9579;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
DecisionTreeClassifier;0.9083;0.9129;0.9083;0.9081;0.8986;0.9008;0.8986;0.8988;0.7833;0.7838;0.7833;0.7832;0.9627;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
DecisionTreeClassifier;0.921;0.9259;0.921;0.9213;0.8696;0.8763;0.8696;0.8687;0.7833;0.7838;0.7833;0.7832;0.9692;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
DecisionTreeClassifier;0.897;0.9045;0.897;0.8962;0.9565;0.9615;0.9565;0.957;0.7833;0.7838;0.7833;0.7832;0.9565;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
DecisionTreeClassifier;0.9178;0.9218;0.9178;0.9176;0.8696;0.8762;0.8696;0.8711;0.7833;0.7838;0.7833;0.7832;0.9617;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
DecisionTreeClassifier;0.8985;0.9049;0.8985;0.8985;0.8696;0.8683;0.8696;0.867;0.7833;0.792;0.7833;0.783;0.9561;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
DecisionTreeClassifier;0.9116;0.9154;0.9116;0.9118;0.913;0.9253;0.913;0.9134;0.7833;0.7854;0.7833;0.7813;0.9671;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=826)
RandomForestClassifier;0.9033;0.9072;0.9033;0.9024;0.9275;0.9275;0.9275;0.9275;0.7833;0.7922;0.7833;0.7791;0.9872;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 473};RandomForestClassifier(n_estimators=5, random_state=473)
SVC;0.8775;0.8827;0.8775;0.8764;0.8986;0.9171;0.8986;0.8946;0.7667;0.7925;0.7667;0.7719;0.937;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 666};SVC(C=10, probability=True, random_state=666)
SVC;0.884;0.8878;0.884;0.8826;0.8841;0.8974;0.8841;0.8824;0.7667;0.7969;0.7667;0.7714;0.934;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 315};SVC(C=10, probability=True, random_state=315)
DecisionTreeClassifier;0.9082;0.9153;0.9082;0.9085;0.8406;0.8814;0.8406;0.8429;0.7667;0.7667;0.7667;0.7667;0.9559;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=364)
DecisionTreeClassifier;0.9082;0.9134;0.9082;0.9085;0.8841;0.902;0.8841;0.8859;0.7667;0.7667;0.7667;0.7667;0.966;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=826)
DecisionTreeClassifier;0.9178;0.9226;0.9178;0.918;0.8696;0.8774;0.8696;0.8702;0.7667;0.7667;0.7667;0.7667;0.9658;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=428)
DecisionTreeClassifier;0.9146;0.9193;0.9146;0.9145;0.913;0.9221;0.913;0.9114;0.7667;0.7709;0.7667;0.7664;0.9612;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
DecisionTreeClassifier;0.905;0.909;0.905;0.9052;0.9565;0.9577;0.9565;0.9568;0.7667;0.7709;0.7667;0.7664;0.9642;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
DecisionTreeClassifier;0.9162;0.9248;0.9162;0.9164;0.8696;0.8966;0.8696;0.8691;0.7667;0.7709;0.7667;0.7664;0.9636;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
DecisionTreeClassifier;0.9115;0.916;0.9115;0.9116;0.9275;0.9281;0.9275;0.9275;0.7667;0.7709;0.7667;0.7664;0.9643;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
DecisionTreeClassifier;0.9099;0.9146;0.9099;0.9096;0.8986;0.9026;0.8986;0.8981;0.7667;0.7709;0.7667;0.7664;0.956;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
DecisionTreeClassifier;0.9163;0.9197;0.9163;0.9158;0.9275;0.9296;0.9275;0.9274;0.7667;0.7709;0.7667;0.7664;0.9645;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
DecisionTreeClassifier;0.9067;0.9115;0.9067;0.9066;0.9275;0.9321;0.9275;0.9272;0.7667;0.7672;0.7667;0.7659;0.9609;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
DecisionTreeClassifier;0.9066;0.9112;0.9066;0.9064;0.8986;0.9012;0.8986;0.8991;0.7667;0.7672;0.7667;0.7659;0.9641;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
DecisionTreeClassifier;0.8938;0.8998;0.8938;0.8935;0.8986;0.9012;0.8986;0.8991;0.7667;0.7672;0.7667;0.7659;0.9527;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=428)
DecisionTreeClassifier;0.9083;0.9145;0.9083;0.9082;0.913;0.9224;0.913;0.9145;0.7667;0.7672;0.7667;0.7659;0.9623;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
DecisionTreeClassifier;0.9146;0.9189;0.9146;0.9145;0.8551;0.8552;0.8551;0.8543;0.75;0.7532;0.75;0.7504;0.9658;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 428};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=428)
DecisionTreeClassifier;0.9082;0.9124;0.9082;0.9083;0.8841;0.8885;0.8841;0.8852;0.75;0.7532;0.75;0.7504;0.963;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=364)
DecisionTreeClassifier;0.8969;0.9001;0.8969;0.8968;0.8551;0.8606;0.8551;0.8557;0.75;0.7632;0.75;0.7496;0.9583;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
LogisticRegression;0.7938;0.8221;0.7938;0.796;0.7391;0.7905;0.7391;0.742;0.75;0.7583;0.75;0.7488;0.9121;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
DecisionTreeClassifier;0.9114;0.9169;0.9114;0.9118;0.8696;0.8727;0.8696;0.8704;0.75;0.7506;0.75;0.748;0.9638;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 826};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=826)
LogisticRegression;0.7938;0.8145;0.7938;0.7958;0.7246;0.7626;0.7246;0.7286;0.75;0.7505;0.75;0.7406;0.9145;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
DecisionTreeClassifier;0.9002;0.9084;0.9002;0.8999;0.942;0.9443;0.942;0.942;0.7333;0.7394;0.7333;0.7319;0.9606;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 364};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=364)
LogisticRegression;0.7955;0.8238;0.7955;0.7971;0.7826;0.8175;0.7826;0.7848;0.7333;0.7434;0.7333;0.7308;0.9145;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.7971;0.8188;0.7971;0.798;0.7826;0.8125;0.7826;0.7828;0.7333;0.7322;0.7333;0.7257;0.9184;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.7987;0.8217;0.7987;0.8003;0.8261;0.8537;0.8261;0.8207;0.7333;0.7344;0.7333;0.7209;0.9129;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.7826;0.8074;0.7826;0.784;0.7971;0.8095;0.7971;0.7988;0.7167;0.7253;0.7167;0.7159;0.9096;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.7986;0.8245;0.7986;0.7999;0.6812;0.7515;0.6812;0.6827;0.7167;0.7253;0.7167;0.7159;0.9149;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.789;0.8125;0.789;0.7898;0.8406;0.8667;0.8406;0.8448;0.7167;0.7253;0.7167;0.7159;0.9117;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.7971;0.8188;0.7971;0.7991;0.7971;0.8132;0.7971;0.799;0.7167;0.7253;0.7167;0.7159;0.9131;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.7923;0.8198;0.7923;0.7947;0.7826;0.8102;0.7826;0.7883;0.7167;0.7253;0.7167;0.7159;0.9093;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.7859;0.8096;0.7859;0.7877;0.7826;0.8211;0.7826;0.7871;0.7167;0.7253;0.7167;0.7159;0.9098;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.7778;0.8068;0.7778;0.7796;0.8551;0.8847;0.8551;0.8581;0.7167;0.7253;0.7167;0.7159;0.911;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.7971;0.8215;0.7971;0.8007;0.7826;0.816;0.7826;0.7773;0.7167;0.7186;0.7167;0.7141;0.9181;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.7971;0.8203;0.7971;0.7999;0.7101;0.7435;0.7101;0.7165;0.7167;0.7139;0.7167;0.7109;0.9136;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.8083;0.831;0.8083;0.8096;0.7681;0.794;0.7681;0.7707;0.7167;0.7139;0.7167;0.7109;0.9163;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.7987;0.8229;0.7987;0.8003;0.7826;0.8047;0.7826;0.7853;0.7167;0.7157;0.7167;0.7105;0.9087;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.7971;0.8256;0.7971;0.7986;0.7536;0.7691;0.7536;0.7579;0.7167;0.7157;0.7167;0.7105;0.9095;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.8051;0.8315;0.8051;0.8065;0.8551;0.8847;0.8551;0.8581;0.7167;0.7157;0.7167;0.7105;0.9053;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.8036;0.8272;0.8036;0.8058;0.7971;0.863;0.7971;0.7952;0.7167;0.7156;0.7167;0.7062;0.9086;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.8164;0.8382;0.8164;0.8172;0.7536;0.7903;0.7536;0.7563;0.7;0.699;0.7;0.6961;0.9211;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.7971;0.8236;0.7971;0.7975;0.8696;0.877;0.8696;0.8666;0.7;0.699;0.7;0.6961;0.911;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.794;0.8161;0.794;0.796;0.7681;0.7832;0.7681;0.7733;0.7;0.699;0.7;0.6961;0.9145;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.8051;0.8215;0.8051;0.8064;0.7971;0.8149;0.7971;0.7999;0.7;0.7024;0.7;0.6957;0.9159;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.7859;0.8094;0.7859;0.7869;0.8696;0.8776;0.8696;0.8718;0.7;0.6967;0.7;0.6918;0.9093;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.8051;0.837;0.8051;0.8069;0.7971;0.8172;0.7971;0.8004;0.7;0.6987;0.7;0.6913;0.9101;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.7939;0.8274;0.7939;0.794;0.8551;0.8866;0.8551;0.8555;0.7;0.7049;0.7;0.6911;0.9097;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.8035;0.8277;0.8035;0.8051;0.8116;0.8117;0.8116;0.8098;0.6833;0.6801;0.6833;0.6794;0.9123;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 349, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=349)"
LogisticRegression;0.7971;0.824;0.7971;0.7997;0.8261;0.8346;0.8261;0.8273;0.6833;0.6815;0.6833;0.6772;0.9129;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 172, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=172)"
LogisticRegression;0.8002;0.8299;0.8002;0.8023;0.7391;0.7789;0.7391;0.7429;0.6833;0.6858;0.6833;0.6768;0.9107;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
LogisticRegression;0.7938;0.8189;0.7938;0.7961;0.8261;0.8286;0.8261;0.8256;0.6833;0.68;0.6833;0.6751;0.9103;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 330, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=330)"
