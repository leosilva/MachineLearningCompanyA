Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8228;0.8306;0.8228;0.8217;0.913;0.9183;0.913;0.9135;0.7833;0.7833;0.7833;0.7833;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.8536;0.8579;0.8536;0.8518;0.8261;0.8272;0.8261;0.8247;0.7667;0.7731;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.839;0.8421;0.839;0.8375;0.8841;0.8839;0.8841;0.8837;0.7667;0.7679;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
DecisionTreeClassifier;0.8341;0.8416;0.8341;0.8324;0.8841;0.8848;0.8841;0.8833;0.7667;0.7679;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
DecisionTreeClassifier;0.8389;0.8445;0.8389;0.8359;0.8261;0.8265;0.8261;0.826;0.7667;0.7731;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
DecisionTreeClassifier;0.852;0.8566;0.852;0.8512;0.7826;0.7817;0.7826;0.7814;0.7667;0.7679;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
DecisionTreeClassifier;0.8374;0.8442;0.8374;0.8351;0.8261;0.8311;0.8261;0.8266;0.7667;0.7679;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
DecisionTreeClassifier;0.8245;0.8338;0.8245;0.8231;0.8551;0.8705;0.8551;0.8537;0.7667;0.7679;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.839;0.8455;0.839;0.8386;0.913;0.9129;0.913;0.9127;0.7667;0.7679;0.7667;0.767;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
RandomForestClassifier;0.8566;0.8638;0.8566;0.8566;0.7971;0.7999;0.7971;0.7975;0.7667;0.7761;0.7667;0.7667;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 451};RandomForestClassifier(n_estimators=20, random_state=451)
DecisionTreeClassifier;0.8422;0.8488;0.8422;0.8423;0.8406;0.8439;0.8406;0.8402;0.7667;0.7662;0.7667;0.7661;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
DecisionTreeClassifier;0.8292;0.8368;0.8292;0.8268;0.913;0.9127;0.913;0.912;0.7667;0.7698;0.7667;0.766;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
RandomForestClassifier;0.855;0.8627;0.855;0.8546;0.9275;0.9285;0.9275;0.9268;0.75;0.7595;0.75;0.7523;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 876};RandomForestClassifier(n_estimators=5, random_state=876)
RandomForestClassifier;0.8534;0.8557;0.8534;0.8531;0.8986;0.8986;0.8986;0.8986;0.75;0.7529;0.75;0.7511;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 876};RandomForestClassifier(n_estimators=20, random_state=876)
RandomForestClassifier;0.8389;0.8461;0.8389;0.8385;0.8551;0.8653;0.8551;0.8567;0.75;0.754;0.75;0.751;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 141};RandomForestClassifier(n_estimators=20, random_state=141)
DecisionTreeClassifier;0.8454;0.8502;0.8454;0.8437;0.8551;0.8581;0.8551;0.8555;0.75;0.7536;0.75;0.7509;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.8374;0.8405;0.8374;0.8361;0.7826;0.7829;0.7826;0.7825;0.75;0.7542;0.75;0.7492;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.86;0.8647;0.86;0.8591;0.8406;0.8428;0.8406;0.8399;0.75;0.7542;0.75;0.7492;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
DecisionTreeClassifier;0.8567;0.8619;0.8567;0.8553;0.7971;0.8008;0.7971;0.7948;0.75;0.7498;0.75;0.7487;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
RandomForestClassifier;0.8601;0.8645;0.8601;0.8605;0.8696;0.8707;0.8696;0.8698;0.7333;0.7381;0.7333;0.7347;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 451};RandomForestClassifier(n_estimators=20, random_state=451)
RandomForestClassifier;0.8535;0.8638;0.8535;0.853;0.7971;0.8003;0.7971;0.7935;0.7333;0.7346;0.7333;0.7336;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 141};RandomForestClassifier(n_estimators=10, random_state=141)
RandomForestClassifier;0.855;0.8609;0.855;0.8543;0.8986;0.9018;0.8986;0.899;0.7333;0.7346;0.7333;0.7336;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 141};RandomForestClassifier(n_estimators=20, random_state=141)
RandomForestClassifier;0.8727;0.8783;0.8727;0.8727;0.8551;0.8625;0.8551;0.8552;0.7333;0.7346;0.7333;0.7336;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 141};RandomForestClassifier(n_estimators=20, random_state=141)
RandomForestClassifier;0.8375;0.8432;0.8375;0.8355;0.8841;0.8983;0.8841;0.8822;0.7333;0.7346;0.7333;0.7336;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 876};RandomForestClassifier(n_estimators=20, random_state=876)
RandomForestClassifier;0.8647;0.8716;0.8647;0.8637;0.7826;0.7833;0.7826;0.7812;0.7333;0.7338;0.7333;0.7332;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 451};RandomForestClassifier(n_estimators=20, random_state=451)
RandomForestClassifier;0.8647;0.8719;0.8647;0.8639;0.8261;0.8259;0.8261;0.8257;0.7333;0.735;0.7333;0.7329;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 876};RandomForestClassifier(n_estimators=10, random_state=876)
DecisionTreeClassifier;0.8503;0.8585;0.8503;0.8499;0.7971;0.8082;0.7971;0.7985;0.7333;0.7337;0.7333;0.7326;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
DecisionTreeClassifier;0.8341;0.8445;0.8341;0.8316;0.913;0.913;0.913;0.913;0.7333;0.7337;0.7333;0.7326;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.839;0.844;0.839;0.8374;0.8261;0.843;0.8261;0.8218;0.7333;0.7361;0.7333;0.7313;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
KNeighborsClassifier;0.7923;0.8018;0.7923;0.7911;0.8551;0.8587;0.8551;0.8551;0.7167;0.748;0.7167;0.7201;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.805;0.8141;0.805;0.8035;0.8406;0.8467;0.8406;0.8356;0.7167;0.748;0.7167;0.7201;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.847;0.8526;0.847;0.8461;0.8551;0.8576;0.8551;0.8556;0.7167;0.7248;0.7167;0.7169;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 141};RandomForestClassifier(n_estimators=20, random_state=141)
RandomForestClassifier;0.8695;0.8771;0.8695;0.8693;0.8261;0.8394;0.8261;0.8245;0.7167;0.717;0.7167;0.7165;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 141};RandomForestClassifier(n_estimators=20, random_state=141)
DecisionTreeClassifier;0.8374;0.8435;0.8374;0.8362;0.8406;0.853;0.8406;0.8383;0.7167;0.7184;0.7167;0.7162;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.8486;0.8546;0.8486;0.8466;0.7681;0.7743;0.7681;0.7685;0.7167;0.7203;0.7167;0.7162;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.8454;0.8504;0.8454;0.8445;0.7536;0.7604;0.7536;0.7536;0.7167;0.7203;0.7167;0.7162;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
RandomForestClassifier;0.8565;0.8599;0.8565;0.8565;0.8406;0.8522;0.8406;0.8381;0.7167;0.7162;0.7167;0.7161;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 451};RandomForestClassifier(n_estimators=10, random_state=451)
RandomForestClassifier;0.8454;0.8586;0.8454;0.8445;0.8261;0.83;0.8261;0.8263;0.7167;0.7161;0.7167;0.7155;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 876};RandomForestClassifier(n_estimators=20, random_state=876)
MLPClassifier;0.7457;0.7697;0.7457;0.7456;0.8261;0.8379;0.8261;0.8263;0.7167;0.7476;0.7167;0.7147;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
DecisionTreeClassifier;0.8358;0.8401;0.8358;0.8351;0.8116;0.8153;0.8116;0.8093;0.7167;0.72;0.7167;0.7142;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
KNeighborsClassifier;0.8052;0.8164;0.8052;0.8045;0.8116;0.8183;0.8116;0.8121;0.7;0.7168;0.7;0.704;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8053;0.8148;0.8053;0.8055;0.8116;0.8151;0.8116;0.811;0.7;0.7066;0.7;0.702;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.863;0.8669;0.863;0.8626;0.8551;0.8542;0.8551;0.8544;0.7;0.7118;0.7;0.7017;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 876};RandomForestClassifier(n_estimators=20, random_state=876)
RandomForestClassifier;0.8566;0.8635;0.8566;0.856;0.8261;0.8316;0.8261;0.8254;0.7;0.7118;0.7;0.7017;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 141};RandomForestClassifier(n_estimators=10, random_state=141)
KNeighborsClassifier;0.8052;0.8142;0.8052;0.8048;0.8696;0.8748;0.8696;0.8691;0.7;0.7125;0.7;0.7013;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8631;0.871;0.8631;0.8618;0.8116;0.8202;0.8116;0.805;0.7;0.7125;0.7;0.7013;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 141};RandomForestClassifier(n_estimators=10, random_state=141)
SVC;0.6119;0.6958;0.6119;0.5997;0.7971;0.7974;0.7971;0.7955;0.7;0.7088;0.7;0.7008;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 764};SVC(C=10, kernel='linear', random_state=764)
SVC;0.6376;0.7121;0.6376;0.6226;0.6087;0.623;0.6087;0.6125;0.7;0.7088;0.7;0.7008;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6394;0.7135;0.6394;0.625;0.7391;0.748;0.7391;0.7298;0.7;0.7088;0.7;0.7008;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 764};SVC(C=10, kernel='linear', random_state=764)
SVC;0.6328;0.7071;0.6328;0.616;0.5797;0.6196;0.5797;0.5755;0.7;0.7088;0.7;0.7008;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 701};SVC(C=1, kernel='linear', random_state=701)
SVC;0.6312;0.711;0.6312;0.6168;0.7101;0.7234;0.7101;0.7097;0.7;0.7088;0.7;0.7008;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
RandomForestClassifier;0.855;0.8629;0.855;0.8539;0.8696;0.8906;0.8696;0.8697;0.7;0.7051;0.7;0.7004;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 451};RandomForestClassifier(n_estimators=20, random_state=451)
SVC;0.6151;0.6964;0.6151;0.604;0.7536;0.7689;0.7536;0.7506;0.7;0.7131;0.7;0.6997;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 484};SVC(C=1, kernel='linear', random_state=484)
DecisionTreeClassifier;0.8599;0.8662;0.8599;0.8587;0.7826;0.7919;0.7826;0.7808;0.7;0.6995;0.7;0.6995;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
RandomForestClassifier;0.8568;0.8635;0.8568;0.8557;0.8986;0.9018;0.8986;0.899;0.7;0.7028;0.7;0.6995;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 451};RandomForestClassifier(n_estimators=20, random_state=451)
RandomForestClassifier;0.8647;0.8716;0.8647;0.8634;0.7971;0.795;0.7971;0.7943;0.7;0.7013;0.7;0.6995;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 876};RandomForestClassifier(n_estimators=10, random_state=876)
MLPClassifier;0.7342;0.7595;0.7342;0.7349;0.7826;0.8009;0.7826;0.7837;0.7;0.7296;0.7;0.6992;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
RandomForestClassifier;0.8663;0.8734;0.8663;0.8663;0.8261;0.8265;0.8261;0.826;0.7;0.6986;0.7;0.6984;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 876};RandomForestClassifier(n_estimators=5, random_state=876)
DecisionTreeClassifier;0.8519;0.8575;0.8519;0.8517;0.8116;0.8173;0.8116;0.812;0.7;0.7056;0.7;0.698;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
KNeighborsClassifier;0.7955;0.8003;0.7955;0.7937;0.913;0.9145;0.913;0.913;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7793;0.7871;0.7793;0.7784;0.8696;0.873;0.8696;0.8704;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7745;0.791;0.7745;0.7736;0.8841;0.8895;0.8841;0.8829;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7859;0.8025;0.7859;0.7859;0.8986;0.9082;0.8986;0.8973;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8053;0.8149;0.8053;0.8044;0.8551;0.8556;0.8551;0.8542;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7972;0.8055;0.7972;0.7966;0.8696;0.8726;0.8696;0.87;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7873;0.8006;0.7873;0.788;0.8696;0.8709;0.8696;0.8694;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8036;0.8156;0.8036;0.8022;0.8406;0.8405;0.8406;0.8387;0.6833;0.7161;0.6833;0.6892;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7843;0.794;0.7843;0.7839;0.7826;0.787;0.7826;0.7796;0.6833;0.7039;0.6833;0.6869;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
LogisticRegression;0.6956;0.7023;0.6956;0.693;0.6667;0.6725;0.6667;0.6567;0.6833;0.7021;0.6833;0.6859;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
SVC;0.6296;0.7049;0.6296;0.6132;0.7246;0.7522;0.7246;0.73;0.6833;0.7021;0.6833;0.6859;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 764};SVC(C=0.1, kernel='linear', random_state=764)
LogisticRegression;0.6811;0.6876;0.6811;0.676;0.6522;0.6512;0.6522;0.6515;0.6833;0.7169;0.6833;0.6856;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.6876;0.6929;0.6876;0.6841;0.6522;0.6503;0.6522;0.6493;0.6833;0.7169;0.6833;0.6856;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.6812;0.6907;0.6812;0.6785;0.6812;0.6929;0.6812;0.6821;0.6833;0.7169;0.6833;0.6856;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
LogisticRegression;0.6797;0.6941;0.6797;0.6781;0.6667;0.6644;0.6667;0.6653;0.6833;0.7169;0.6833;0.6856;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
KNeighborsClassifier;0.7986;0.8102;0.7986;0.799;0.7101;0.7114;0.7101;0.7059;0.6833;0.6899;0.6833;0.6854;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
LogisticRegression;0.6698;0.6773;0.6698;0.6659;0.7971;0.8338;0.7971;0.7934;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
LogisticRegression;0.6842;0.6966;0.6842;0.682;0.7826;0.8109;0.7826;0.7716;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.6859;0.6941;0.6859;0.6832;0.6957;0.7247;0.6957;0.6927;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.7004;0.7068;0.7004;0.6982;0.7391;0.7423;0.7391;0.7354;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
KNeighborsClassifier;0.7923;0.8092;0.7923;0.7904;0.942;0.9464;0.942;0.9422;0.6833;0.6882;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.6877;0.6973;0.6877;0.6835;0.7101;0.7462;0.7101;0.7103;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
LogisticRegression;0.702;0.7122;0.702;0.6981;0.6812;0.6785;0.6812;0.6771;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
LogisticRegression;0.6942;0.7021;0.6942;0.689;0.7246;0.7579;0.7246;0.7226;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
LogisticRegression;0.6958;0.7043;0.6958;0.6902;0.7246;0.7278;0.7246;0.7125;0.6833;0.712;0.6833;0.685;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
RandomForestClassifier;0.8535;0.8607;0.8535;0.8522;0.8261;0.8271;0.8261;0.8263;0.6833;0.6934;0.6833;0.6847;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 876};RandomForestClassifier(n_estimators=5, random_state=876)
SVC;0.6217;0.702;0.6217;0.6068;0.7826;0.7941;0.7826;0.7798;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 484};SVC(C=1, kernel='linear', random_state=484)
SVC;0.6263;0.7056;0.6263;0.6168;0.7391;0.7593;0.7391;0.7315;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 701};SVC(C=1, kernel='linear', random_state=701)
SVC;0.6328;0.7063;0.6328;0.6155;0.6087;0.6155;0.6087;0.6113;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 484};SVC(C=1, kernel='linear', random_state=484)
SVC;0.6326;0.7137;0.6326;0.6191;0.6957;0.6953;0.6957;0.6952;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 701};SVC(C=1, kernel='linear', random_state=701)
SVC;0.6216;0.6972;0.6216;0.6098;0.7536;0.7683;0.7536;0.7568;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6133;0.6928;0.6133;0.5996;0.7246;0.7302;0.7246;0.7259;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 764};SVC(C=1, kernel='linear', random_state=764)
SVC;0.6198;0.6926;0.6198;0.6045;0.7101;0.7512;0.7101;0.7019;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 701};SVC(C=10, kernel='linear', random_state=701)
SVC;0.6166;0.6967;0.6166;0.6021;0.7826;0.8429;0.7826;0.7842;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 701};SVC(C=10, kernel='linear', random_state=701)
LogisticRegression;0.6972;0.7106;0.6972;0.6939;0.6232;0.633;0.6232;0.6194;0.6833;0.6956;0.6833;0.6845;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
SVC;0.6327;0.7069;0.6327;0.6188;0.7971;0.828;0.7971;0.7963;0.6833;0.7;0.6833;0.6841;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 764};SVC(C=1, kernel='linear', random_state=764)
SVC;0.6151;0.6977;0.6151;0.5997;0.6522;0.6699;0.6522;0.6496;0.6833;0.7;0.6833;0.6841;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 764};SVC(C=1, kernel='linear', random_state=764)
SVC;0.6103;0.6891;0.6103;0.5943;0.6812;0.7292;0.6812;0.6709;0.6833;0.7;0.6833;0.6841;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
RandomForestClassifier;0.8534;0.8585;0.8534;0.8533;0.8261;0.8294;0.8261;0.8269;0.6833;0.6852;0.6833;0.6834;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 141};RandomForestClassifier(n_estimators=10, random_state=141)
DecisionTreeClassifier;0.8519;0.8565;0.8519;0.8511;0.8406;0.8524;0.8406;0.8418;0.6833;0.6847;0.6833;0.6828;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
SVC;0.6152;0.7045;0.6152;0.6028;0.6667;0.6755;0.6667;0.6608;0.6833;0.6917;0.6833;0.6828;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6264;0.703;0.6264;0.6128;0.5942;0.663;0.5942;0.5818;0.6833;0.6917;0.6833;0.6828;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 764};SVC(C=10, kernel='linear', random_state=764)
MLPClassifier;0.7504;0.7746;0.7504;0.7491;0.7101;0.7586;0.7101;0.7167;0.6833;0.7093;0.6833;0.6825;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7505;0.7741;0.7505;0.7499;0.6522;0.7219;0.6522;0.6587;0.6833;0.7078;0.6833;0.6821;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7471;0.766;0.7471;0.7464;0.7246;0.7562;0.7246;0.7258;0.6833;0.7122;0.6833;0.6812;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
RandomForestClassifier;0.8582;0.8657;0.8582;0.8578;0.8841;0.8891;0.8841;0.8829;0.6833;0.6881;0.6833;0.6801;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 876};RandomForestClassifier(n_estimators=10, random_state=876)
MLPClassifier;0.715;0.7329;0.715;0.712;0.7826;0.8248;0.7826;0.7844;0.6833;0.7221;0.6833;0.6796;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
RandomForestClassifier;0.8519;0.8601;0.8519;0.8512;0.8261;0.8441;0.8261;0.8271;0.6833;0.6858;0.6833;0.6762;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 451};RandomForestClassifier(n_estimators=10, random_state=451)
KNeighborsClassifier;0.7761;0.7867;0.7761;0.7762;0.8696;0.8826;0.8696;0.8701;0.6667;0.7065;0.6667;0.6721;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.805;0.8167;0.805;0.8042;0.8261;0.8368;0.8261;0.8246;0.6667;0.7065;0.6667;0.6721;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7842;0.7905;0.7842;0.7822;0.9275;0.928;0.9275;0.9275;0.6667;0.6894;0.6667;0.6714;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8084;0.8201;0.8084;0.8057;0.8551;0.8574;0.8551;0.8538;0.6667;0.6894;0.6667;0.6714;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8132;0.8242;0.8132;0.8128;0.7971;0.8285;0.7971;0.7908;0.6667;0.6897;0.6667;0.6711;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8116;0.8218;0.8116;0.8098;0.7681;0.7725;0.7681;0.762;0.6667;0.6771;0.6667;0.6696;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7986;0.8087;0.7986;0.7981;0.7971;0.8196;0.7971;0.7843;0.6667;0.6923;0.6667;0.6696;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8486;0.8567;0.8486;0.8486;0.8551;0.8578;0.8551;0.8509;0.6667;0.6915;0.6667;0.6694;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 451};RandomForestClassifier(n_estimators=20, random_state=451)
LogisticRegression;0.6682;0.6831;0.6682;0.6665;0.6957;0.7045;0.6957;0.6899;0.6667;0.6926;0.6667;0.6694;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
KNeighborsClassifier;0.8132;0.8213;0.8132;0.8125;0.8551;0.8595;0.8551;0.8525;0.6667;0.6799;0.6667;0.6693;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8067;0.823;0.8067;0.8051;0.8551;0.8552;0.8551;0.8543;0.6667;0.6799;0.6667;0.6693;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.615;0.6969;0.615;0.6039;0.7681;0.7813;0.7681;0.7707;0.6667;0.6774;0.6667;0.6686;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 701};SVC(C=10, kernel='linear', random_state=701)
SVC;0.6168;0.6989;0.6168;0.6011;0.7246;0.75;0.7246;0.7224;0.6667;0.6774;0.6667;0.6686;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 764};SVC(C=10, kernel='linear', random_state=764)
SVC;0.6215;0.7039;0.6215;0.6093;0.7246;0.7582;0.7246;0.7228;0.6667;0.6774;0.6667;0.6686;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 764};SVC(C=10, kernel='linear', random_state=764)
KNeighborsClassifier;0.7858;0.7948;0.7858;0.7833;0.7826;0.7916;0.7826;0.7837;0.6667;0.6729;0.6667;0.6686;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7954;0.8042;0.7954;0.7951;0.8551;0.8657;0.8551;0.8543;0.6667;0.6759;0.6667;0.6683;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
LogisticRegression;0.6876;0.6991;0.6876;0.6857;0.6957;0.7038;0.6957;0.6928;0.6667;0.687;0.6667;0.6682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
SVC;0.6247;0.7063;0.6247;0.6115;0.6377;0.6614;0.6377;0.637;0.6667;0.6741;0.6667;0.6682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 701};SVC(C=10, kernel='linear', random_state=701)
LogisticRegression;0.7021;0.7188;0.7021;0.6987;0.5797;0.5836;0.5797;0.5802;0.6667;0.687;0.6667;0.6682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
LogisticRegression;0.7037;0.7152;0.7037;0.702;0.5942;0.5975;0.5942;0.5934;0.6667;0.687;0.6667;0.6682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
LogisticRegression;0.6955;0.7057;0.6955;0.692;0.6812;0.6822;0.6812;0.6782;0.6667;0.687;0.6667;0.6682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.6908;0.6967;0.6908;0.6864;0.7391;0.7633;0.7391;0.7282;0.6667;0.687;0.6667;0.6682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
LogisticRegression;0.6908;0.7004;0.6908;0.6884;0.6812;0.6812;0.6812;0.6812;0.6667;0.687;0.6667;0.6682;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
SVC;0.6264;0.6986;0.6264;0.6101;0.6667;0.6955;0.6667;0.6674;0.6667;0.6745;0.6667;0.668;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 484};SVC(C=1, kernel='linear', random_state=484)
LogisticRegression;0.702;0.7115;0.702;0.6997;0.7246;0.7354;0.7246;0.7222;0.6667;0.683;0.6667;0.6677;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
SVC;0.6135;0.6928;0.6135;0.6001;0.7391;0.7858;0.7391;0.7361;0.6667;0.6778;0.6667;0.6677;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
LogisticRegression;0.7101;0.7214;0.7101;0.706;0.5942;0.6017;0.5942;0.5939;0.6667;0.683;0.6667;0.6677;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
SVC;0.6278;0.7096;0.6278;0.6135;0.6812;0.712;0.6812;0.6817;0.6667;0.683;0.6667;0.6677;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 701};SVC(C=0.1, kernel='linear', random_state=701)
RandomForestClassifier;0.8453;0.8537;0.8453;0.8445;0.8986;0.8988;0.8986;0.8978;0.6667;0.6693;0.6667;0.6671;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 451};RandomForestClassifier(n_estimators=20, random_state=451)
SVC;0.6151;0.6957;0.6151;0.6027;0.7826;0.7763;0.7826;0.7772;0.6667;0.6781;0.6667;0.6667;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 701};SVC(C=1, kernel='linear', random_state=701)
LogisticRegression;0.686;0.6904;0.686;0.6802;0.6522;0.6517;0.6522;0.6467;0.6667;0.6781;0.6667;0.6667;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
DecisionTreeClassifier;0.8262;0.8333;0.8262;0.825;0.8406;0.8424;0.8406;0.8407;0.6667;0.667;0.6667;0.6665;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 454};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=454)
DecisionTreeClassifier;0.8212;0.8253;0.8212;0.8208;0.7826;0.7982;0.7826;0.779;0.6667;0.667;0.6667;0.6665;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=45)
RandomForestClassifier;0.8486;0.8541;0.8486;0.8475;0.8551;0.8569;0.8551;0.8549;0.6667;0.6661;0.6667;0.6661;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 451};RandomForestClassifier(n_estimators=5, random_state=451)
LogisticRegression;0.6908;0.6975;0.6908;0.6884;0.7246;0.7347;0.7246;0.7184;0.6667;0.6931;0.6667;0.666;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.6908;0.7098;0.6908;0.6886;0.7391;0.7421;0.7391;0.7377;0.6667;0.6931;0.6667;0.666;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
LogisticRegression;0.686;0.6983;0.686;0.6849;0.7101;0.7175;0.7101;0.7099;0.6667;0.6931;0.6667;0.666;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
LogisticRegression;0.7198;0.7305;0.7198;0.7177;0.6232;0.6236;0.6232;0.6184;0.6667;0.6931;0.6667;0.666;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
SVC;0.6215;0.6938;0.6215;0.6057;0.7101;0.7158;0.7101;0.7036;0.6667;0.6841;0.6667;0.6656;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 701};SVC(C=1, kernel='linear', random_state=701)
DecisionTreeClassifier;0.8325;0.8368;0.8325;0.8313;0.7971;0.803;0.7971;0.7969;0.6667;0.6822;0.6667;0.6653;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 45};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=45)
SVC;0.6279;0.7018;0.6279;0.6138;0.6667;0.6984;0.6667;0.6654;0.6667;0.6822;0.6667;0.6653;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 764};SVC(C=10, kernel='linear', random_state=764)
RandomForestClassifier;0.86;0.8653;0.86;0.8585;0.8841;0.8886;0.8841;0.8837;0.6667;0.6667;0.6667;0.6649;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 141};RandomForestClassifier(n_estimators=10, random_state=141)
MLPClassifier;0.773;0.792;0.773;0.7731;0.8116;0.8397;0.8116;0.8125;0.6667;0.7008;0.6667;0.6646;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7424;0.7691;0.7424;0.7435;0.7681;0.8153;0.7681;0.7707;0.6667;0.7258;0.6667;0.6643;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
KNeighborsClassifier;0.7971;0.8076;0.7971;0.7971;0.8406;0.8618;0.8406;0.8392;0.65;0.6743;0.65;0.6555;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.7392;0.7632;0.7392;0.7377;0.6522;0.681;0.6522;0.6565;0.65;0.6839;0.65;0.6517;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7537;0.7797;0.7537;0.7525;0.7536;0.7821;0.7536;0.7595;0.65;0.6839;0.65;0.6517;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
KNeighborsClassifier;0.8035;0.8159;0.8035;0.8035;0.8116;0.8113;0.8116;0.8091;0.65;0.6578;0.65;0.6513;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.6747;0.6854;0.6747;0.6731;0.6957;0.7013;0.6957;0.6915;0.65;0.6752;0.65;0.6507;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 901, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=901)"
MLPClassifier;0.7616;0.7852;0.7616;0.7604;0.5652;0.5971;0.5652;0.5659;0.65;0.6578;0.65;0.6506;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7359;0.7562;0.7359;0.7325;0.7101;0.7316;0.7101;0.7133;0.65;0.6578;0.65;0.6506;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
LogisticRegression;0.6715;0.6881;0.6715;0.6689;0.8406;0.8504;0.8406;0.8411;0.65;0.6704;0.65;0.6504;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 43, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=43)"
DecisionTreeClassifier;0.8327;0.839;0.8327;0.8314;0.7971;0.7968;0.7971;0.7967;0.65;0.6508;0.65;0.6496;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=922)
DecisionTreeClassifier;0.8358;0.8468;0.8358;0.8346;0.8261;0.8307;0.8261;0.8267;0.65;0.651;0.65;0.6494;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 922};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=922)
MLPClassifier;0.7602;0.784;0.7602;0.7601;0.7101;0.7092;0.7101;0.7094;0.65;0.6806;0.65;0.6449;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
MLPClassifier;0.7666;0.796;0.7666;0.7667;0.7391;0.7569;0.7391;0.7424;0.6333;0.6711;0.6333;0.6357;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
MLPClassifier;0.7471;0.7721;0.7471;0.7484;0.6957;0.7376;0.6957;0.692;0.6333;0.6581;0.6333;0.6353;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7133;0.7365;0.7133;0.7103;0.7681;0.7834;0.7681;0.7694;0.6333;0.6442;0.6333;0.6341;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
KNeighborsClassifier;0.8051;0.8142;0.8051;0.8034;0.9275;0.9296;0.9275;0.9274;0.6333;0.6374;0.6333;0.6331;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.773;0.799;0.773;0.7732;0.7101;0.7782;0.7101;0.6938;0.6333;0.6667;0.6333;0.6326;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
MLPClassifier;0.7185;0.7386;0.7185;0.7177;0.7826;0.8039;0.7826;0.781;0.6333;0.69;0.6333;0.6315;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7295;0.7553;0.7295;0.7306;0.6812;0.681;0.6812;0.6697;0.6333;0.6681;0.6333;0.6259;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
MLPClassifier;0.7488;0.7647;0.7488;0.7495;0.6522;0.7043;0.6522;0.65;0.6167;0.6395;0.6167;0.6186;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7439;0.7662;0.7439;0.7395;0.6377;0.652;0.6377;0.638;0.6167;0.6459;0.6167;0.6173;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7313;0.7628;0.7313;0.7313;0.6957;0.6984;0.6957;0.6963;0.6167;0.6387;0.6167;0.6161;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 528, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=528)
MLPClassifier;0.7359;0.7654;0.7359;0.7345;0.7536;0.7579;0.7536;0.7482;0.6167;0.6576;0.6167;0.6149;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7455;0.7684;0.7455;0.7463;0.6377;0.6574;0.6377;0.64;0.6;0.6031;0.6;0.5997;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7391;0.7619;0.7391;0.7396;0.7101;0.7099;0.7101;0.7033;0.5833;0.6349;0.5833;0.5848;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7472;0.7663;0.7472;0.7459;0.6812;0.768;0.6812;0.6621;0.6;0.6193;0.6;0.5841;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7069;0.7293;0.7069;0.7051;0.5942;0.5807;0.5942;0.5786;0.5833;0.6248;0.5833;0.5754;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 307, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=307)
MLPClassifier;0.7359;0.7565;0.7359;0.7336;0.5507;0.5538;0.5507;0.5503;0.5833;0.5819;0.5833;0.5753;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7375;0.7633;0.7375;0.7361;0.6087;0.6106;0.6087;0.6019;0.5667;0.5696;0.5667;0.5652;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
MLPClassifier;0.7664;0.7906;0.7664;0.7667;0.5072;0.5581;0.5072;0.5149;0.55;0.5543;0.55;0.5439;smote;250;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 670, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=670)
