Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9097;0.9116;0.9097;0.9098;0.8819;0.8895;0.8819;0.8838;0.85;0.8557;0.85;0.8514;0.9323;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
RandomForestClassifier;0.9491;0.9509;0.9491;0.949;0.9375;0.9393;0.9375;0.9375;0.85;0.8554;0.85;0.8504;0.9938;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
MLPClassifier;0.9051;0.9067;0.9051;0.905;0.9236;0.9274;0.9236;0.9244;0.85;0.8563;0.85;0.8504;0.9783;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.9051;0.9067;0.9051;0.9053;0.9444;0.9452;0.9444;0.9443;0.85;0.8524;0.85;0.8497;0.9785;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8935;0.8974;0.8935;0.8935;0.9722;0.9722;0.9722;0.9722;0.85;0.8524;0.85;0.8497;0.9762;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8989;0.9015;0.8989;0.8993;0.9514;0.9534;0.9514;0.9518;0.85;0.8524;0.85;0.8497;0.9775;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
MLPClassifier;0.9012;0.9033;0.9012;0.901;0.9792;0.9796;0.9792;0.9792;0.85;0.8524;0.85;0.8497;0.9765;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
MLPClassifier;0.8989;0.9017;0.8989;0.8987;0.9722;0.9725;0.9722;0.9721;0.85;0.8524;0.85;0.8497;0.9769;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.9012;0.9032;0.9012;0.9015;0.9722;0.9729;0.9722;0.9724;0.85;0.8524;0.85;0.8497;0.9762;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8973;0.9;0.8973;0.8975;0.9583;0.9608;0.9583;0.958;0.85;0.8524;0.85;0.8497;0.9766;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.9074;0.9104;0.9074;0.9078;0.9583;0.9586;0.9583;0.9582;0.85;0.8524;0.85;0.8497;0.9769;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
RandomForestClassifier;0.9476;0.9494;0.9476;0.9475;0.9583;0.9595;0.9583;0.9585;0.85;0.8591;0.85;0.8495;0.9948;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
RandomForestClassifier;0.9521;0.9541;0.9521;0.9523;0.9375;0.9396;0.9375;0.9377;0.85;0.8597;0.85;0.849;0.994;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
RandomForestClassifier;0.9498;0.951;0.9498;0.9498;0.9236;0.924;0.9236;0.9238;0.8333;0.8411;0.8333;0.8346;0.9942;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
RandomForestClassifier;0.9522;0.9538;0.9522;0.9522;0.9514;0.9514;0.9514;0.9513;0.8333;0.8404;0.8333;0.8342;0.9936;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
RandomForestClassifier;0.9475;0.9491;0.9475;0.9477;0.9514;0.953;0.9514;0.9516;0.8333;0.8404;0.8333;0.8342;0.9937;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 856};RandomForestClassifier(n_estimators=10, random_state=856)
DecisionTreeClassifier;0.9244;0.9253;0.9244;0.9243;0.9028;0.9029;0.9028;0.9028;0.8333;0.8355;0.8333;0.8341;0.9433;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
RandomForestClassifier;0.9445;0.9458;0.9445;0.9446;0.9375;0.9435;0.9375;0.9368;0.8333;0.8365;0.8333;0.8339;0.9931;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 284};RandomForestClassifier(n_estimators=10, random_state=284)
RandomForestClassifier;0.9499;0.9514;0.9499;0.9498;0.9444;0.9502;0.9444;0.9449;0.8333;0.8458;0.8333;0.8338;0.9933;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
DecisionTreeClassifier;0.9105;0.9128;0.9105;0.9104;0.9444;0.9448;0.9444;0.9438;0.8333;0.8347;0.8333;0.8337;0.9329;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
RandomForestClassifier;0.9406;0.942;0.9406;0.9407;0.9514;0.9576;0.9514;0.9519;0.8333;0.8348;0.8333;0.8337;0.9921;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
MLPClassifier;0.8958;0.8979;0.8958;0.896;0.9583;0.9583;0.9583;0.9583;0.8333;0.836;0.8333;0.8335;0.9756;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8974;0.8992;0.8974;0.8975;0.9792;0.9793;0.9792;0.9792;0.8333;0.836;0.8333;0.8335;0.9747;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
RandomForestClassifier;0.9368;0.9376;0.9368;0.9367;0.9583;0.9595;0.9583;0.9585;0.8333;0.8432;0.8333;0.8333;0.9919;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 284};RandomForestClassifier(n_estimators=10, random_state=284)
MLPClassifier;0.9043;0.9055;0.9043;0.904;0.9653;0.9668;0.9653;0.9655;0.8333;0.8379;0.8333;0.8333;0.9791;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
MLPClassifier;0.8958;0.8983;0.8958;0.8958;0.9653;0.9686;0.9653;0.9657;0.8333;0.8339;0.8333;0.8333;0.9771;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
MLPClassifier;0.8997;0.9015;0.8997;0.8999;0.9375;0.9377;0.9375;0.9373;0.8333;0.8339;0.8333;0.8333;0.9772;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.9013;0.9029;0.9013;0.9012;0.9861;0.9863;0.9861;0.9861;0.8333;0.8379;0.8333;0.8333;0.9767;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
MLPClassifier;0.902;0.9036;0.902;0.9019;0.9792;0.9792;0.9792;0.9791;0.8333;0.8379;0.8333;0.8333;0.9774;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
MLPClassifier;0.9004;0.9029;0.9004;0.9006;0.9514;0.9529;0.9514;0.9517;0.8333;0.8379;0.8333;0.8333;0.9779;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
MLPClassifier;0.8966;0.8984;0.8966;0.8968;0.9722;0.9732;0.9722;0.9722;0.8333;0.8379;0.8333;0.8333;0.9775;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
MLPClassifier;0.8974;0.8992;0.8974;0.8968;0.9792;0.9792;0.9792;0.9791;0.8333;0.8379;0.8333;0.8333;0.9762;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
MLPClassifier;0.899;0.9009;0.899;0.8989;0.9653;0.9655;0.9653;0.9651;0.8333;0.8379;0.8333;0.8333;0.9762;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
RandomForestClassifier;0.9475;0.9491;0.9475;0.9476;0.9444;0.9459;0.9444;0.9447;0.8333;0.8448;0.8333;0.8329;0.9934;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
RandomForestClassifier;0.9445;0.9468;0.9445;0.9447;0.9792;0.9792;0.9792;0.9791;0.8333;0.8374;0.8333;0.8328;0.9937;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
MLPClassifier;0.9028;0.9045;0.9028;0.9026;0.9375;0.9375;0.9375;0.9375;0.8333;0.8341;0.8333;0.8327;0.9779;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
MLPClassifier;0.9059;0.9069;0.9059;0.9058;0.9514;0.9514;0.9514;0.9513;0.8333;0.8341;0.8333;0.8327;0.9771;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
MLPClassifier;0.9052;0.908;0.9052;0.9053;0.9583;0.9595;0.9583;0.9585;0.8333;0.8367;0.8333;0.8324;0.9777;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8958;0.8976;0.8958;0.8956;0.9375;0.9374;0.9375;0.9373;0.8333;0.8367;0.8333;0.8324;0.9764;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
DecisionTreeClassifier;0.9113;0.9134;0.9113;0.9114;0.8889;0.8892;0.8889;0.8877;0.8333;0.8333;0.8333;0.8323;0.9335;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
RandomForestClassifier;0.9468;0.9484;0.9468;0.9468;0.9653;0.9663;0.9653;0.9653;0.8333;0.838;0.8333;0.8317;0.9938;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
DecisionTreeClassifier;0.9151;0.9161;0.9151;0.915;0.8472;0.8468;0.8472;0.8468;0.8167;0.8305;0.8167;0.8194;0.9364;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
DecisionTreeClassifier;0.9159;0.9174;0.9159;0.9157;0.9236;0.9287;0.9236;0.9241;0.8167;0.8305;0.8167;0.8194;0.9369;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
DecisionTreeClassifier;0.9167;0.9199;0.9167;0.9167;0.8889;0.8949;0.8889;0.8902;0.8167;0.8287;0.8167;0.819;0.9375;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
RandomForestClassifier;0.9475;0.9491;0.9475;0.9477;0.9514;0.9515;0.9514;0.9512;0.8167;0.8253;0.8167;0.8183;0.9929;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
RandomForestClassifier;0.9506;0.9522;0.9506;0.9505;0.9514;0.9519;0.9514;0.9514;0.8167;0.8287;0.8167;0.8178;0.9935;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
RandomForestClassifier;0.9514;0.9536;0.9514;0.9517;0.9236;0.9259;0.9236;0.9243;0.8167;0.8277;0.8167;0.8175;0.9925;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
RandomForestClassifier;0.9529;0.9537;0.9529;0.9529;0.9514;0.9515;0.9514;0.9514;0.8167;0.8277;0.8167;0.8175;0.9946;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
MLPClassifier;0.909;0.9112;0.909;0.9092;0.9583;0.9583;0.9583;0.958;0.8167;0.8172;0.8167;0.8166;0.978;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
MLPClassifier;0.902;0.905;0.902;0.902;0.9653;0.9686;0.9653;0.9655;0.8167;0.8215;0.8167;0.8165;0.9794;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
RandomForestClassifier;0.9553;0.9572;0.9553;0.9554;0.9514;0.9535;0.9514;0.9516;0.8167;0.8215;0.8167;0.8165;0.9933;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
MLPClassifier;0.8997;0.9023;0.8997;0.8996;0.9375;0.9406;0.9375;0.9374;0.8167;0.8187;0.8167;0.8163;0.9761;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
RandomForestClassifier;0.9483;0.9498;0.9483;0.9484;0.9583;0.9591;0.9583;0.9585;0.8167;0.8208;0.8167;0.8161;0.9935;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 566};RandomForestClassifier(n_estimators=10, random_state=566)
RandomForestClassifier;0.9553;0.9563;0.9553;0.9553;0.9583;0.9583;0.9583;0.9583;0.8167;0.8217;0.8167;0.816;0.9943;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
DecisionTreeClassifier;0.9043;0.9066;0.9043;0.9045;0.9236;0.9253;0.9236;0.9237;0.8167;0.8193;0.8167;0.8157;0.9282;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
MLPClassifier;0.9035;0.905;0.9035;0.9035;0.9444;0.9446;0.9444;0.9443;0.8167;0.8193;0.8167;0.8157;0.9766;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 835, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=835)
KNeighborsClassifier;0.9043;0.909;0.9043;0.9047;0.9722;0.9725;0.9722;0.9721;0.8167;0.8187;0.8167;0.8147;0.9752;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9097;0.9113;0.9097;0.9098;0.8889;0.8894;0.8889;0.8891;0.8167;0.8187;0.8167;0.8147;0.9323;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
KNeighborsClassifier;0.8966;0.9002;0.8966;0.8971;0.9444;0.9455;0.9444;0.9445;0.8167;0.8187;0.8167;0.8147;0.976;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.8195;0.8333;0.8195;0.8207;0.9514;0.9552;0.9514;0.9519;0.8167;0.8246;0.8167;0.813;0.9255;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
DecisionTreeClassifier;0.9035;0.9058;0.9035;0.9036;0.9167;0.9164;0.9167;0.9164;0.8;0.8089;0.8;0.8023;0.9277;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
RandomForestClassifier;0.9483;0.95;0.9483;0.9484;0.9375;0.9386;0.9375;0.9378;0.8;0.8125;0.8;0.8016;0.9932;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
RandomForestClassifier;0.9506;0.9527;0.9506;0.9507;0.9375;0.942;0.9375;0.9379;0.8;0.8039;0.8;0.8005;0.9931;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
MLPClassifier;0.9136;0.9163;0.9136;0.9136;0.9236;0.9241;0.9236;0.9236;0.8;0.8151;0.8;0.8001;0.981;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
KNeighborsClassifier;0.8935;0.8986;0.8935;0.8941;0.9375;0.9374;0.9375;0.9373;0.8;0.8;0.8;0.8;0.9785;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9105;0.9129;0.9105;0.9106;0.9236;0.9287;0.9236;0.9241;0.8;0.8005;0.8;0.7999;0.9792;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9452;0.947;0.9452;0.9453;0.9792;0.9797;0.9792;0.9792;0.8;0.8016;0.8;0.7997;0.9936;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
DecisionTreeClassifier;0.9136;0.9156;0.9136;0.9138;0.9167;0.9208;0.9167;0.9174;0.8;0.7997;0.8;0.7995;0.9352;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
DecisionTreeClassifier;0.9135;0.915;0.9135;0.9133;0.9028;0.9028;0.9028;0.9028;0.8;0.805;0.8;0.7993;0.9352;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
KNeighborsClassifier;0.9043;0.9074;0.9043;0.9045;0.9097;0.9134;0.9097;0.9095;0.8;0.8002;0.8;0.7988;0.9806;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9151;0.9169;0.9151;0.9154;0.8542;0.8554;0.8542;0.8546;0.8;0.8002;0.8;0.7988;0.9363;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
KNeighborsClassifier;0.9021;0.9046;0.9021;0.9018;0.9583;0.9595;0.9583;0.958;0.8;0.8019;0.8;0.7985;0.9763;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9057;0.9028;0.903;0.9653;0.9665;0.9653;0.9653;0.8;0.8019;0.8;0.7985;0.9795;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.9198;0.922;0.9198;0.9198;0.9236;0.9248;0.9236;0.9237;0.8;0.8008;0.8;0.7982;0.9398;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
SVC;0.8318;0.8429;0.8318;0.8328;0.8611;0.8626;0.8611;0.8605;0.8;0.8122;0.8;0.7976;0.9274;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8218;0.8349;0.8218;0.8231;0.9306;0.935;0.9306;0.9303;0.8;0.8122;0.8;0.7976;0.9242;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.821;0.8331;0.821;0.822;0.8958;0.9014;0.8958;0.8965;0.8;0.8122;0.8;0.7976;0.9256;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8241;0.8346;0.8241;0.8248;0.8472;0.854;0.8472;0.8476;0.8;0.8122;0.8;0.7976;0.9271;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
SVC;0.828;0.8399;0.828;0.8294;0.9306;0.9339;0.9306;0.931;0.8;0.8122;0.8;0.7976;0.9259;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8287;0.8401;0.8287;0.8301;0.8889;0.8963;0.8889;0.8888;0.8;0.8122;0.8;0.7976;0.9312;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8303;0.84;0.8303;0.8309;0.8819;0.891;0.8819;0.8838;0.8;0.8122;0.8;0.7976;0.9301;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
SVC;0.8217;0.8337;0.8217;0.8224;0.9167;0.9216;0.9167;0.9174;0.8;0.8122;0.8;0.7976;0.9245;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8187;0.8302;0.8187;0.8198;0.8958;0.9028;0.8958;0.897;0.8;0.8122;0.8;0.7976;0.925;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8226;0.8328;0.8226;0.8236;0.9167;0.9171;0.9167;0.9164;0.8;0.8029;0.8;0.797;0.9217;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
RandomForestClassifier;0.9475;0.9496;0.9475;0.9476;0.9306;0.9392;0.9306;0.9306;0.7833;0.7905;0.7833;0.7844;0.9925;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
RandomForestClassifier;0.9405;0.9431;0.9405;0.9407;0.9653;0.9654;0.9653;0.9653;0.7833;0.7898;0.7833;0.784;0.9914;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
RandomForestClassifier;0.9514;0.9535;0.9514;0.9514;0.9444;0.9462;0.9444;0.9445;0.7833;0.7898;0.7833;0.784;0.9932;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 566};RandomForestClassifier(n_estimators=20, random_state=566)
RandomForestClassifier;0.9484;0.9502;0.9484;0.9486;0.9514;0.9525;0.9514;0.9511;0.7833;0.7847;0.7833;0.7837;0.9932;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 856};RandomForestClassifier(n_estimators=20, random_state=856)
KNeighborsClassifier;0.905;0.9093;0.905;0.9055;0.9375;0.938;0.9375;0.9375;0.7833;0.7944;0.7833;0.7835;0.9755;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8974;0.9016;0.8974;0.8974;0.9444;0.9488;0.9444;0.9445;0.7833;0.7833;0.7833;0.7833;0.9761;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8981;0.9018;0.8981;0.8984;0.9306;0.9308;0.9306;0.9302;0.7833;0.7833;0.7833;0.7833;0.9781;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9429;0.944;0.9429;0.9429;0.9722;0.9733;0.9722;0.9723;0.7833;0.7854;0.7833;0.783;0.9916;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
DecisionTreeClassifier;0.9213;0.9228;0.9213;0.9213;0.9028;0.9023;0.9028;0.9025;0.7833;0.785;0.7833;0.7829;0.941;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
KNeighborsClassifier;0.8951;0.8998;0.8951;0.8955;0.9653;0.9671;0.9653;0.9654;0.7833;0.783;0.7833;0.7828;0.977;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8974;0.9013;0.8974;0.8976;0.9306;0.9313;0.9306;0.9308;0.7833;0.7829;0.7833;0.7828;0.9759;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8989;0.9044;0.8989;0.8995;0.9375;0.9379;0.9375;0.9376;0.7833;0.783;0.7833;0.7828;0.9755;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9175;0.919;0.9175;0.9176;0.8958;0.8947;0.8958;0.8948;0.7833;0.7839;0.7833;0.7827;0.9381;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
DecisionTreeClassifier;0.9159;0.9178;0.9159;0.9158;0.8681;0.8699;0.8681;0.8685;0.7833;0.7839;0.7833;0.7827;0.9369;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
KNeighborsClassifier;0.9043;0.9085;0.9043;0.9043;0.9375;0.9448;0.9375;0.9381;0.7833;0.7868;0.7833;0.7826;0.9795;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.902;0.9066;0.902;0.9024;0.9514;0.9516;0.9514;0.9512;0.7833;0.7831;0.7833;0.7822;0.9792;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9021;0.9038;0.9021;0.9021;0.9028;0.9067;0.9028;0.9036;0.7833;0.7831;0.7833;0.7822;0.9792;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8905;0.8934;0.8905;0.8903;0.9444;0.9487;0.9444;0.943;0.7833;0.7835;0.7833;0.7821;0.9764;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 145, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=145)
SVC;0.8156;0.8287;0.8156;0.8171;0.9792;0.9793;0.9792;0.9792;0.7833;0.7903;0.7833;0.7816;0.9238;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
SVC;0.824;0.8367;0.824;0.8254;0.9236;0.924;0.9236;0.9237;0.7833;0.7903;0.7833;0.7816;0.9242;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8249;0.8371;0.8249;0.8259;0.9028;0.9028;0.9028;0.9026;0.7833;0.7903;0.7833;0.7816;0.9245;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8248;0.8363;0.8248;0.8259;0.9028;0.9028;0.9028;0.9028;0.7833;0.7903;0.7833;0.7816;0.9232;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
SVC;0.8241;0.8387;0.8241;0.8258;0.9236;0.9249;0.9236;0.9238;0.7833;0.7903;0.7833;0.7816;0.9293;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8225;0.8353;0.8225;0.8232;0.9028;0.9044;0.9028;0.9032;0.7833;0.7903;0.7833;0.7816;0.9273;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
SVC;0.818;0.8283;0.818;0.8195;0.9583;0.9591;0.9583;0.9585;0.7833;0.7903;0.7833;0.7816;0.926;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8171;0.8309;0.8171;0.8186;0.9583;0.9583;0.9583;0.9583;0.7833;0.7903;0.7833;0.7816;0.9214;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8233;0.8381;0.8233;0.8248;0.9236;0.9266;0.9236;0.9238;0.7833;0.7903;0.7833;0.7816;0.9253;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8203;0.8327;0.8203;0.8219;0.9167;0.9169;0.9167;0.9162;0.7833;0.7903;0.7833;0.7816;0.9261;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8256;0.8358;0.8256;0.8264;0.9236;0.9249;0.9236;0.9232;0.7833;0.7903;0.7833;0.7816;0.9272;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8248;0.8365;0.8248;0.8267;0.875;0.8823;0.875;0.8763;0.7833;0.7903;0.7833;0.7816;0.9266;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8279;0.8388;0.8279;0.8294;0.9306;0.9358;0.9306;0.9315;0.7833;0.7903;0.7833;0.7816;0.9269;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
SVC;0.8241;0.8356;0.8241;0.8252;0.9028;0.9104;0.9028;0.9034;0.7833;0.7903;0.7833;0.7816;0.9298;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8233;0.8361;0.8233;0.8242;0.8958;0.9033;0.8958;0.896;0.7833;0.7903;0.7833;0.7816;0.9252;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
SVC;0.8187;0.8297;0.8187;0.8195;0.9514;0.9534;0.9514;0.9518;0.7833;0.7903;0.7833;0.7816;0.9255;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
DecisionTreeClassifier;0.9128;0.9152;0.9128;0.9129;0.8819;0.889;0.8819;0.882;0.7833;0.7846;0.7833;0.7811;0.9346;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
SVC;0.8241;0.8368;0.8241;0.8252;0.8889;0.8951;0.8889;0.89;0.7833;0.7915;0.7833;0.7809;0.9278;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 471};SVC(C=10, probability=True, random_state=471)
SVC;0.8241;0.8378;0.8241;0.8251;0.8958;0.8988;0.8958;0.8966;0.7833;0.7915;0.7833;0.7809;0.9272;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 542};SVC(C=10, probability=True, random_state=542)
DecisionTreeClassifier;0.9175;0.9191;0.9175;0.9173;0.8681;0.8725;0.8681;0.869;0.7833;0.7856;0.7833;0.7805;0.9381;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
RandomForestClassifier;0.9445;0.9468;0.9445;0.9445;0.9236;0.9303;0.9236;0.9247;0.7667;0.7754;0.7667;0.7685;0.993;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
DecisionTreeClassifier;0.9205;0.9221;0.9205;0.9207;0.9028;0.9029;0.9028;0.9016;0.7667;0.768;0.7667;0.767;0.9404;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
KNeighborsClassifier;0.892;0.8952;0.892;0.8924;0.9583;0.9604;0.9583;0.9583;0.7667;0.7731;0.7667;0.767;0.9748;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9237;0.9251;0.9237;0.9238;0.8472;0.85;0.8472;0.8483;0.7667;0.7687;0.7667;0.7663;0.9428;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
RandomForestClassifier;0.946;0.9478;0.946;0.9461;0.9375;0.9419;0.9375;0.9377;0.7667;0.7687;0.7667;0.7663;0.9933;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 284};RandomForestClassifier(n_estimators=20, random_state=284)
KNeighborsClassifier;0.9013;0.9039;0.9013;0.9012;0.9375;0.9419;0.9375;0.9375;0.7667;0.7672;0.7667;0.7659;0.9756;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9043;0.9091;0.9043;0.9047;0.9306;0.9307;0.9306;0.9302;0.7667;0.7672;0.7667;0.7659;0.9784;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9027;0.9071;0.9027;0.9031;0.9306;0.9312;0.9306;0.9304;0.7667;0.7672;0.7667;0.7659;0.9791;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9089;0.9128;0.9089;0.9092;0.9097;0.9096;0.9097;0.9094;0.7667;0.7655;0.7667;0.7657;0.9799;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9071;0.9028;0.903;0.9444;0.9462;0.9444;0.9445;0.7667;0.7655;0.7667;0.7657;0.978;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9068;0.9028;0.9031;0.9375;0.9375;0.9375;0.9374;0.7667;0.7655;0.7667;0.7657;0.9796;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9039;0.9005;0.9003;0.9583;0.9609;0.9583;0.9587;0.7667;0.7655;0.7667;0.7657;0.9796;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9004;0.9052;0.9004;0.9006;0.9583;0.9585;0.9583;0.9583;0.7667;0.7655;0.7667;0.7657;0.9777;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9051;0.9075;0.9051;0.9051;0.9514;0.9533;0.9514;0.9515;0.7667;0.7655;0.7667;0.7657;0.9789;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8982;0.9012;0.8982;0.8981;0.9375;0.9413;0.9375;0.9374;0.7667;0.7655;0.7667;0.7657;0.9787;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9036;0.9067;0.9036;0.9037;0.9444;0.9471;0.9444;0.9447;0.7667;0.7668;0.7667;0.7655;0.9791;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.818;0.8287;0.818;0.8193;0.9306;0.9324;0.9306;0.9306;0.7667;0.7717;0.7667;0.7653;0.9264;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 626};SVC(C=10, probability=True, random_state=626)
DecisionTreeClassifier;0.9236;0.9249;0.9236;0.9236;0.875;0.8777;0.875;0.8759;0.7667;0.7678;0.7667;0.7651;0.9427;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
DecisionTreeClassifier;0.909;0.9108;0.909;0.9088;0.8681;0.8734;0.8681;0.8695;0.7667;0.7694;0.7667;0.7631;0.9318;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
DecisionTreeClassifier;0.9028;0.9043;0.9028;0.9026;0.8819;0.8833;0.8819;0.8824;0.7667;0.7707;0.7667;0.7624;0.927;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
DecisionTreeClassifier;0.919;0.9209;0.919;0.9188;0.8611;0.8651;0.8611;0.8592;0.7667;0.7707;0.7667;0.7624;0.9393;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
DecisionTreeClassifier;0.919;0.921;0.919;0.9186;0.9097;0.9106;0.9097;0.9093;0.75;0.7529;0.75;0.7511;0.9392;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
DecisionTreeClassifier;0.9082;0.9107;0.9082;0.9081;0.8819;0.8911;0.8819;0.8817;0.75;0.7603;0.75;0.7505;0.9312;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=833)
KNeighborsClassifier;0.9051;0.9082;0.9051;0.9052;0.9375;0.9398;0.9375;0.937;0.75;0.7532;0.75;0.7504;0.9814;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9213;0.923;0.9213;0.9214;0.9097;0.9096;0.9097;0.9094;0.75;0.7543;0.75;0.7497;0.941;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 679};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=679)
KNeighborsClassifier;0.8966;0.9006;0.8966;0.8963;0.9375;0.9374;0.9375;0.937;0.75;0.7488;0.75;0.7485;0.9761;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9136;0.9152;0.9136;0.9135;0.8472;0.8472;0.8472;0.8468;0.75;0.7585;0.75;0.7462;0.9352;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 833};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=833)
DecisionTreeClassifier;0.9159;0.9168;0.9159;0.9157;0.8958;0.9029;0.8958;0.8965;0.7333;0.7361;0.7333;0.7313;0.9369;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 42};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=42)
LogisticRegression;0.6806;0.6858;0.6806;0.6801;0.7014;0.7144;0.7014;0.7023;0.5667;0.5633;0.5667;0.5642;0.868;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.6859;0.6929;0.6859;0.6857;0.6528;0.6575;0.6528;0.6539;0.5667;0.5633;0.5667;0.5642;0.8694;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6891;0.6922;0.6891;0.6883;0.7014;0.718;0.7014;0.704;0.5667;0.5633;0.5667;0.5642;0.8703;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6805;0.6869;0.6805;0.6804;0.7222;0.7216;0.7222;0.7175;0.5667;0.5633;0.5667;0.5642;0.8638;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.686;0.6906;0.686;0.6853;0.6806;0.6828;0.6806;0.6799;0.5667;0.5633;0.5667;0.5642;0.8695;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6945;0.7023;0.6945;0.6947;0.625;0.6233;0.625;0.624;0.5667;0.5633;0.5667;0.5642;0.8686;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6837;0.6886;0.6837;0.6837;0.6875;0.6968;0.6875;0.6861;0.5667;0.5633;0.5667;0.5642;0.8689;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6805;0.6848;0.6805;0.68;0.7083;0.7156;0.7083;0.7094;0.5667;0.5633;0.5667;0.5642;0.8676;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.676;0.6802;0.676;0.6754;0.6944;0.7215;0.6944;0.6937;0.5667;0.5633;0.5667;0.5642;0.867;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.6736;0.6791;0.6736;0.6735;0.7847;0.7878;0.7847;0.7831;0.5667;0.5633;0.5667;0.5642;0.8622;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.679;0.6825;0.679;0.6775;0.6875;0.6944;0.6875;0.6848;0.5667;0.5633;0.5667;0.5642;0.8679;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6743;0.6797;0.6743;0.6733;0.7153;0.725;0.7153;0.7141;0.5667;0.5633;0.5667;0.5642;0.865;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6783;0.6841;0.6783;0.6782;0.6875;0.6872;0.6875;0.6872;0.55;0.5483;0.55;0.5489;0.8664;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.6781;0.683;0.6781;0.6781;0.6944;0.696;0.6944;0.6944;0.55;0.5483;0.55;0.5489;0.8647;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6859;0.6925;0.6859;0.6861;0.6944;0.6947;0.6944;0.6944;0.55;0.5483;0.55;0.5489;0.8687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6799;0.6831;0.6799;0.6794;0.7083;0.7116;0.7083;0.7093;0.55;0.5501;0.55;0.5486;0.8661;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6767;0.6811;0.6767;0.6761;0.7222;0.7221;0.7222;0.7192;0.55;0.5501;0.55;0.5486;0.8633;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6929;0.6987;0.6929;0.6919;0.6597;0.6724;0.6597;0.6583;0.55;0.5501;0.55;0.5486;0.8708;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.6798;0.6861;0.6798;0.6796;0.7222;0.7305;0.7222;0.7229;0.55;0.5501;0.55;0.5486;0.8667;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6836;0.6879;0.6836;0.6832;0.6875;0.6902;0.6875;0.6882;0.55;0.5501;0.55;0.5486;0.8689;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6867;0.6924;0.6867;0.686;0.6875;0.6877;0.6875;0.6873;0.55;0.5501;0.55;0.5486;0.8678;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.6944;0.6986;0.6944;0.6931;0.625;0.6312;0.625;0.6271;0.55;0.5501;0.55;0.5486;0.8744;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.6782;0.686;0.6782;0.6778;0.7083;0.7227;0.7083;0.7078;0.55;0.5501;0.55;0.5486;0.8674;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6859;0.6907;0.6859;0.6853;0.7083;0.7095;0.7083;0.7089;0.55;0.5501;0.55;0.5486;0.8674;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.6821;0.6873;0.6821;0.6808;0.6875;0.6881;0.6875;0.6875;0.55;0.5501;0.55;0.5486;0.8646;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
LogisticRegression;0.676;0.6811;0.676;0.6758;0.7639;0.7752;0.7639;0.7632;0.55;0.5501;0.55;0.5486;0.8634;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6898;0.6955;0.6898;0.6898;0.6597;0.6675;0.6597;0.6592;0.55;0.5501;0.55;0.5486;0.8693;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6798;0.6874;0.6798;0.6791;0.7014;0.7022;0.7014;0.7016;0.55;0.5501;0.55;0.5486;0.8692;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 67, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=67)"
LogisticRegression;0.6751;0.6789;0.6751;0.6744;0.7639;0.7688;0.7639;0.7645;0.55;0.5501;0.55;0.5486;0.8676;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 899, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=899)"
LogisticRegression;0.6736;0.6808;0.6736;0.6733;0.7083;0.711;0.7083;0.7075;0.5333;0.532;0.5333;0.5302;0.8647;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 444, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=444)"
