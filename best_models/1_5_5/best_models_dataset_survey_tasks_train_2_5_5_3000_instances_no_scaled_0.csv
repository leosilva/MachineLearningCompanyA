Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9116;0.9117;0.9116;0.9115;0.9016;0.9061;0.9016;0.9023;0.8667;0.8775;0.8667;0.8687;0.934;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
RandomForestClassifier;0.9234;0.9242;0.9234;0.9233;0.9279;0.9282;0.9279;0.9279;0.8667;0.883;0.8667;0.8685;0.9858;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 2};RandomForestClassifier(n_estimators=20, random_state=2)
DecisionTreeClassifier;0.9144;0.9149;0.9144;0.9143;0.887;0.8878;0.887;0.887;0.8667;0.8667;0.8667;0.8667;0.9363;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 695};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=695)
RandomForestClassifier;0.926;0.9271;0.926;0.9262;0.9357;0.9359;0.9357;0.9357;0.85;0.8644;0.85;0.8509;0.9856;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 209};RandomForestClassifier(n_estimators=20, random_state=209)
DecisionTreeClassifier;0.9095;0.9098;0.9095;0.9096;0.896;0.8969;0.896;0.896;0.8333;0.8372;0.8333;0.8339;0.9327;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 117};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=117)
KNeighborsClassifier;0.9193;0.9204;0.9193;0.9193;0.9206;0.9217;0.9206;0.9208;0.8167;0.8269;0.8167;0.8174;0.9798;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9168;0.9181;0.9168;0.9171;0.9183;0.9189;0.9183;0.9185;0.8167;0.8269;0.8167;0.8174;0.98;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.9297;0.9304;0.9297;0.9299;0.929;0.9302;0.929;0.9293;0.8;0.8333;0.8;0.8042;0.986;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 39};RandomForestClassifier(n_estimators=20, random_state=39)
KNeighborsClassifier;0.9178;0.9187;0.9178;0.9178;0.9234;0.9235;0.9234;0.9234;0.7833;0.7934;0.7833;0.7843;0.9802;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8214;0.8298;0.8214;0.8203;0.821;0.8375;0.821;0.823;0.75;0.7639;0.75;0.7504;0.9496;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 950, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=950)
MLPClassifier;0.8195;0.8245;0.8195;0.8181;0.797;0.8118;0.797;0.7998;0.75;0.7503;0.75;0.748;0.9499;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 812, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=812)
MLPClassifier;0.8167;0.8238;0.8167;0.8164;0.844;0.8461;0.844;0.8438;0.7333;0.7382;0.7333;0.7321;0.9466;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 400, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=400)
SVC;0.6503;0.6496;0.6503;0.6493;0.7455;0.7625;0.7455;0.7484;0.6333;0.6366;0.6333;0.6315;0.8367;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 351};SVC(C=10, probability=True, random_state=351)
SVC;0.6502;0.6502;0.6502;0.6494;0.7304;0.7482;0.7304;0.7326;0.6167;0.6205;0.6167;0.6139;0.8359;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 747};SVC(C=10, probability=True, random_state=747)
SVC;0.6507;0.6513;0.6507;0.6506;0.7411;0.7637;0.7411;0.7439;0.6167;0.6205;0.6167;0.6139;0.8344;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 278};SVC(C=10, probability=True, random_state=278)
LogisticRegression;0.6391;0.6417;0.6391;0.6391;0.6342;0.6352;0.6342;0.6345;0.6;0.6104;0.6;0.6022;0.8308;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 830, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=830)"
LogisticRegression;0.643;0.6457;0.643;0.6434;0.6298;0.6369;0.6298;0.6312;0.6;0.6125;0.6;0.6022;0.8314;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 521, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=521)"
LogisticRegression;0.6416;0.6438;0.6416;0.6419;0.6353;0.6419;0.6353;0.6366;0.6;0.6125;0.6;0.6022;0.8299;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 799, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=799)"
