Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
SVC;0.8021;0.8229;0.8021;0.8003;0.8379;0.8383;0.8379;0.8372;0.8167;0.8171;0.8167;0.8144;0.9152;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
MLPClassifier;0.8212;0.827;0.8212;0.8209;0.8488;0.8492;0.8488;0.8488;0.8;0.7997;0.8;0.7995;0.949;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.832;0.8335;0.832;0.832;0.8414;0.8415;0.8414;0.8412;0.8;0.8019;0.8;0.7985;0.9487;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
SVC;0.8063;0.8266;0.8063;0.8041;0.8241;0.8249;0.8241;0.8241;0.8;0.8019;0.8;0.7985;0.9156;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8041;0.8238;0.8041;0.8015;0.831;0.8331;0.831;0.8298;0.8;0.8019;0.8;0.7985;0.9146;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
SVC;0.7998;0.8209;0.7998;0.7976;0.8625;0.8659;0.8625;0.8633;0.8;0.8019;0.8;0.7985;0.914;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
SVC;0.8048;0.8252;0.8048;0.8026;0.8345;0.8348;0.8345;0.8322;0.8;0.8019;0.8;0.7985;0.9161;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.8079;0.8263;0.8079;0.8063;0.8483;0.8495;0.8483;0.8479;0.8;0.8019;0.8;0.7985;0.9136;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.8025;0.8248;0.8025;0.8007;0.8522;0.8544;0.8522;0.8526;0.8;0.7989;0.8;0.7985;0.9133;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.8059;0.8255;0.8059;0.8037;0.8454;0.848;0.8454;0.846;0.8;0.8019;0.8;0.7985;0.9141;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.8052;0.8253;0.8052;0.8038;0.8276;0.8273;0.8276;0.8272;0.8;0.8019;0.8;0.7985;0.9161;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8025;0.8221;0.8025;0.8005;0.8448;0.8475;0.8448;0.8445;0.8;0.8019;0.8;0.7985;0.9149;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8048;0.8242;0.8048;0.803;0.8207;0.8236;0.8207;0.819;0.8;0.8011;0.8;0.7963;0.9169;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
KNeighborsClassifier;0.8397;0.8426;0.8397;0.8395;0.8;0.8021;0.8;0.8004;0.7833;0.7854;0.7833;0.783;0.9318;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8205;0.8247;0.8205;0.8201;0.8931;0.8938;0.8931;0.8929;0.7833;0.7831;0.7833;0.7822;0.9455;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
KNeighborsClassifier;0.8308;0.8324;0.8308;0.8308;0.8522;0.8585;0.8522;0.8511;0.7833;0.7831;0.7833;0.7822;0.9326;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8194;0.8251;0.8194;0.8188;0.8483;0.8481;0.8483;0.8479;0.7833;0.7831;0.7833;0.7822;0.947;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.824;0.8323;0.824;0.8234;0.8207;0.8231;0.8207;0.8198;0.7833;0.7831;0.7833;0.7822;0.9481;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8281;0.8331;0.8281;0.8276;0.866;0.8663;0.866;0.8658;0.7833;0.7831;0.7833;0.7822;0.9478;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8213;0.8309;0.8213;0.8209;0.8552;0.8564;0.8552;0.8554;0.7833;0.7831;0.7833;0.7822;0.9457;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8351;0.8386;0.8351;0.8351;0.8207;0.8206;0.8207;0.8205;0.7833;0.7831;0.7833;0.7822;0.9491;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8209;0.8286;0.8209;0.8195;0.8552;0.8586;0.8552;0.8541;0.7833;0.7831;0.7833;0.7822;0.9474;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
SVC;0.8044;0.8235;0.8044;0.8025;0.8379;0.8427;0.8379;0.8381;0.7833;0.7835;0.7833;0.7821;0.9131;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
SVC;0.8036;0.8248;0.8036;0.8015;0.8557;0.8564;0.8557;0.8549;0.7833;0.7835;0.7833;0.7821;0.9138;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8025;0.823;0.8025;0.8004;0.8724;0.873;0.8724;0.8723;0.7833;0.7835;0.7833;0.7821;0.9094;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
SVC;0.8029;0.8224;0.8029;0.801;0.8586;0.8611;0.8586;0.8591;0.7833;0.7835;0.7833;0.7821;0.9122;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
SVC;0.8025;0.8219;0.8025;0.8008;0.8586;0.8586;0.8586;0.8585;0.7833;0.7835;0.7833;0.7821;0.914;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.812;0.8312;0.812;0.8099;0.8076;0.809;0.8076;0.8068;0.7833;0.7835;0.7833;0.7821;0.917;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.8112;0.8303;0.8112;0.8096;0.8316;0.8322;0.8316;0.8316;0.7833;0.7835;0.7833;0.7821;0.915;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
SVC;0.8024;0.8214;0.8024;0.8008;0.8625;0.863;0.8625;0.8618;0.7833;0.7835;0.7833;0.7821;0.914;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8029;0.8249;0.8029;0.801;0.8241;0.8242;0.8241;0.8239;0.7833;0.7835;0.7833;0.7821;0.9163;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8037;0.8238;0.8037;0.802;0.8621;0.8618;0.8621;0.8617;0.7833;0.7835;0.7833;0.7821;0.9141;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8067;0.8272;0.8067;0.8045;0.8207;0.8206;0.8207;0.8204;0.7833;0.7835;0.7833;0.7821;0.9183;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
SVC;0.8091;0.828;0.8091;0.8065;0.8345;0.8378;0.8345;0.8346;0.7833;0.7835;0.7833;0.7821;0.9151;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8044;0.8253;0.8044;0.8023;0.8414;0.8419;0.8414;0.841;0.7833;0.7835;0.7833;0.7821;0.9134;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.7999;0.8211;0.7999;0.7979;0.8483;0.8484;0.8483;0.8478;0.7667;0.7663;0.7667;0.7662;0.9146;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
SVC;0.8033;0.8237;0.8033;0.8012;0.8586;0.8612;0.8586;0.8587;0.7667;0.7663;0.7667;0.7662;0.9147;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
MLPClassifier;0.8217;0.8291;0.8217;0.8211;0.8414;0.8415;0.8414;0.8407;0.7667;0.7662;0.7667;0.7661;0.947;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8179;0.8258;0.8179;0.8172;0.8793;0.8793;0.8793;0.8791;0.7667;0.7662;0.7667;0.7661;0.9445;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8262;0.8353;0.8262;0.8256;0.831;0.8311;0.831;0.8311;0.7667;0.7655;0.7667;0.7657;0.9493;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
MLPClassifier;0.825;0.8302;0.825;0.8246;0.8866;0.8886;0.8866;0.8868;0.7667;0.7655;0.7667;0.7657;0.9467;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
MLPClassifier;0.8316;0.8348;0.8316;0.8313;0.8414;0.8414;0.8414;0.8412;0.7667;0.7655;0.7667;0.7657;0.946;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
MLPClassifier;0.8335;0.8367;0.8335;0.8335;0.8454;0.8457;0.8454;0.8451;0.7667;0.7655;0.7667;0.7657;0.9473;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8274;0.8344;0.8274;0.8268;0.8379;0.8377;0.8379;0.8378;0.7667;0.7655;0.7667;0.7657;0.9468;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
SVC;0.8014;0.8222;0.8014;0.7999;0.8517;0.8543;0.8517;0.8498;0.7667;0.7688;0.7667;0.7656;0.9142;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
MLPClassifier;0.8228;0.8305;0.8228;0.8217;0.8483;0.8481;0.8483;0.8481;0.7667;0.7672;0.7667;0.7646;0.9483;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8259;0.8337;0.8259;0.8247;0.8345;0.8358;0.8345;0.8347;0.7667;0.7672;0.7667;0.7646;0.9488;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.83;0.8322;0.83;0.83;0.8763;0.8776;0.8763;0.8762;0.7667;0.7672;0.7667;0.7646;0.9471;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
MLPClassifier;0.8262;0.8309;0.8262;0.8262;0.8793;0.8797;0.8793;0.8792;0.7667;0.7672;0.7667;0.7646;0.9475;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
DecisionTreeClassifier;0.8446;0.8471;0.8446;0.8446;0.8621;0.8632;0.8621;0.8619;0.7667;0.765;0.7667;0.7646;0.946;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=384)
SVC;0.8064;0.8263;0.8064;0.8044;0.8241;0.8239;0.8241;0.8225;0.7667;0.7679;0.7667;0.7645;0.9162;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 1};SVC(C=10, probability=True, random_state=1)
SVC;0.8036;0.8228;0.8036;0.8017;0.8488;0.8514;0.8488;0.8486;0.7667;0.7679;0.7667;0.7645;0.9118;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 720};SVC(C=10, probability=True, random_state=720)
KNeighborsClassifier;0.8347;0.8384;0.8347;0.8343;0.8379;0.8387;0.8379;0.838;0.75;0.7651;0.75;0.7502;0.933;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.8393;0.841;0.8393;0.8387;0.8517;0.8644;0.8517;0.8521;0.75;0.7651;0.75;0.7502;0.9312;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
SVC;0.809;0.8277;0.809;0.807;0.8454;0.8455;0.8454;0.8449;0.75;0.75;0.75;0.75;0.9148;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 654};SVC(C=10, probability=True, random_state=654)
MLPClassifier;0.8308;0.8348;0.8308;0.83;0.8414;0.8409;0.8414;0.841;0.75;0.7504;0.75;0.7499;0.9467;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8205;0.8268;0.8205;0.8196;0.8483;0.8491;0.8483;0.8477;0.75;0.7504;0.75;0.7499;0.9459;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
KNeighborsClassifier;0.8355;0.8393;0.8355;0.8349;0.8414;0.8422;0.8414;0.8409;0.75;0.7597;0.75;0.7498;0.9365;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8316;0.8337;0.8316;0.8316;0.8517;0.8523;0.8517;0.8508;0.75;0.7488;0.75;0.7491;0.9479;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
MLPClassifier;0.8235;0.8293;0.8235;0.8225;0.8591;0.8594;0.8591;0.8589;0.75;0.7488;0.75;0.7491;0.9467;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
MLPClassifier;0.8296;0.8357;0.8296;0.8294;0.8557;0.8565;0.8557;0.8555;0.75;0.7488;0.75;0.7491;0.9478;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8305;0.8334;0.8305;0.8304;0.8621;0.8627;0.8621;0.8602;0.75;0.7488;0.75;0.7491;0.9473;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
MLPClassifier;0.8331;0.839;0.8331;0.8329;0.8172;0.8207;0.8172;0.8163;0.75;0.7535;0.75;0.749;0.9484;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
MLPClassifier;0.8235;0.8294;0.8235;0.8228;0.8282;0.8283;0.8282;0.8278;0.75;0.7535;0.75;0.749;0.9507;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.827;0.8317;0.827;0.8269;0.8797;0.8797;0.8797;0.8795;0.75;0.7535;0.75;0.749;0.9477;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=871)
RandomForestClassifier;0.8507;0.8537;0.8507;0.8508;0.8552;0.8552;0.8552;0.8548;0.75;0.7483;0.75;0.7479;0.957;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 444};RandomForestClassifier(n_estimators=5, random_state=444)
KNeighborsClassifier;0.8396;0.8436;0.8396;0.8392;0.8557;0.858;0.8557;0.8561;0.75;0.7556;0.75;0.7431;0.9362;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8542;0.8569;0.8542;0.8542;0.8483;0.8548;0.8483;0.8483;0.7333;0.7572;0.7333;0.7359;0.9449;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=692)
DecisionTreeClassifier;0.8503;0.8541;0.8503;0.8504;0.8591;0.8611;0.8591;0.8587;0.7333;0.7572;0.7333;0.7359;0.949;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=62)
DecisionTreeClassifier;0.8519;0.8549;0.8519;0.8519;0.8414;0.8445;0.8414;0.8402;0.7333;0.7572;0.7333;0.7359;0.9447;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=384)
DecisionTreeClassifier;0.8457;0.8483;0.8457;0.8459;0.8385;0.844;0.8385;0.8389;0.7333;0.7384;0.7333;0.735;0.9481;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=384)
DecisionTreeClassifier;0.8488;0.8506;0.8488;0.8487;0.8345;0.8393;0.8345;0.8346;0.7333;0.7384;0.7333;0.735;0.9509;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=692)
KNeighborsClassifier;0.8485;0.8502;0.8485;0.8486;0.8828;0.8827;0.8828;0.8827;0.7333;0.7473;0.7333;0.7342;0.9338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.8305;0.8338;0.8305;0.8295;0.8103;0.8104;0.8103;0.8104;0.7333;0.7333;0.7333;0.7333;0.9499;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 584, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=584)
KNeighborsClassifier;0.8408;0.845;0.8408;0.8408;0.8448;0.8456;0.8448;0.8438;0.7333;0.7361;0.7333;0.7325;0.9392;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.845;0.8477;0.845;0.8451;0.9;0.9012;0.9;0.8998;0.7167;0.7464;0.7167;0.7187;0.9443;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=384)
RandomForestClassifier;0.8587;0.8616;0.8587;0.8588;0.8586;0.8622;0.8586;0.8587;0.7167;0.7397;0.7167;0.7177;0.9568;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 444};RandomForestClassifier(n_estimators=20, random_state=444)
DecisionTreeClassifier;0.8488;0.8519;0.8488;0.849;0.866;0.8676;0.866;0.8652;0.7167;0.7397;0.7167;0.7177;0.9459;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=692)
DecisionTreeClassifier;0.8538;0.8575;0.8538;0.854;0.869;0.8699;0.869;0.869;0.7167;0.7397;0.7167;0.7177;0.9487;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
RandomForestClassifier;0.8595;0.8626;0.8595;0.8595;0.8448;0.8484;0.8448;0.8449;0.7167;0.7397;0.7167;0.7177;0.9569;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 439};RandomForestClassifier(n_estimators=5, random_state=439)
DecisionTreeClassifier;0.8499;0.8518;0.8499;0.85;0.8625;0.8673;0.8625;0.8621;0.7167;0.7397;0.7167;0.7177;0.9464;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
DecisionTreeClassifier;0.8565;0.8593;0.8565;0.8564;0.8517;0.8586;0.8517;0.8524;0.7167;0.7397;0.7167;0.7177;0.9484;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
RandomForestClassifier;0.8579;0.8613;0.8579;0.858;0.8522;0.8533;0.8522;0.8519;0.7167;0.7178;0.7167;0.717;0.9543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 444};RandomForestClassifier(n_estimators=10, random_state=444)
RandomForestClassifier;0.8534;0.8574;0.8534;0.8534;0.8621;0.8634;0.8621;0.8623;0.7167;0.7365;0.7167;0.7165;0.9547;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 91};RandomForestClassifier(n_estimators=20, random_state=91)
KNeighborsClassifier;0.8362;0.8392;0.8362;0.8358;0.8586;0.86;0.8586;0.8589;0.7167;0.718;0.7167;0.7162;0.9351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8511;0.8535;0.8511;0.8511;0.8207;0.8289;0.8207;0.8195;0.7167;0.7411;0.7167;0.7143;0.9444;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
DecisionTreeClassifier;0.8557;0.8582;0.8557;0.8555;0.7732;0.7749;0.7732;0.7698;0.7167;0.7411;0.7167;0.7143;0.9512;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
DecisionTreeClassifier;0.8412;0.8434;0.8412;0.8411;0.8172;0.8291;0.8172;0.8153;0.7167;0.7411;0.7167;0.7143;0.947;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
RandomForestClassifier;0.8492;0.8527;0.8492;0.8493;0.8448;0.8466;0.8448;0.8447;0.7167;0.7411;0.7167;0.7143;0.9562;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 439};RandomForestClassifier(n_estimators=10, random_state=439)
KNeighborsClassifier;0.8446;0.8486;0.8446;0.8439;0.8172;0.819;0.8172;0.8178;0.7167;0.725;0.7167;0.7138;0.9381;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8361;0.8408;0.8361;0.8355;0.8041;0.8058;0.8041;0.8041;0.7167;0.7378;0.7167;0.7132;0.9392;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8431;0.8454;0.8431;0.843;0.8241;0.8245;0.8241;0.824;0.7;0.7194;0.7;0.7047;0.9344;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
DecisionTreeClassifier;0.8519;0.854;0.8519;0.852;0.8276;0.831;0.8276;0.828;0.7;0.728;0.7;0.7027;0.9474;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=384)
DecisionTreeClassifier;0.848;0.8511;0.848;0.8482;0.8729;0.8758;0.8729;0.8731;0.7;0.728;0.7;0.7027;0.9457;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=692)
KNeighborsClassifier;0.8328;0.8348;0.8328;0.8326;0.8655;0.8657;0.8655;0.8656;0.7;0.7272;0.7;0.7026;0.9333;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8335;0.8357;0.8335;0.8337;0.8759;0.8764;0.8759;0.8757;0.7;0.7233;0.7;0.7019;0.9286;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
RandomForestClassifier;0.8553;0.858;0.8553;0.8553;0.8522;0.8591;0.8522;0.8525;0.7;0.7289;0.7;0.7016;0.9517;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 439};RandomForestClassifier(n_estimators=20, random_state=439)
DecisionTreeClassifier;0.8538;0.8557;0.8538;0.8537;0.8385;0.846;0.8385;0.8388;0.7;0.7167;0.7;0.7008;0.9481;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=384)
RandomForestClassifier;0.8561;0.8599;0.8561;0.8563;0.8448;0.8476;0.8448;0.8447;0.7;0.7205;0.7;0.7004;0.9565;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 91};RandomForestClassifier(n_estimators=10, random_state=91)
RandomForestClassifier;0.853;0.8559;0.853;0.853;0.866;0.8659;0.866;0.8657;0.7;0.7283;0.7;0.6998;0.9551;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 91};RandomForestClassifier(n_estimators=10, random_state=91)
DecisionTreeClassifier;0.8504;0.8529;0.8504;0.8504;0.8276;0.8298;0.8276;0.8271;0.7;0.7174;0.7;0.6998;0.9458;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=384)
RandomForestClassifier;0.8534;0.8559;0.8534;0.8535;0.831;0.8434;0.831;0.8304;0.7;0.7245;0.7;0.6984;0.9577;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 439};RandomForestClassifier(n_estimators=5, random_state=439)
RandomForestClassifier;0.853;0.8559;0.853;0.853;0.8621;0.8654;0.8621;0.8623;0.7;0.7245;0.7;0.6984;0.955;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 439};RandomForestClassifier(n_estimators=20, random_state=439)
DecisionTreeClassifier;0.8542;0.8581;0.8542;0.8546;0.8345;0.8357;0.8345;0.8345;0.7;0.7245;0.7;0.6984;0.9491;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=692)
DecisionTreeClassifier;0.8526;0.8555;0.8526;0.8526;0.7869;0.8;0.7869;0.7846;0.7;0.7245;0.7;0.6984;0.9428;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=692)
DecisionTreeClassifier;0.8576;0.8607;0.8576;0.8578;0.8414;0.8446;0.8414;0.8409;0.7;0.7245;0.7;0.6984;0.95;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=384)
RandomForestClassifier;0.8626;0.8654;0.8626;0.8626;0.8241;0.8325;0.8241;0.8234;0.7;0.7245;0.7;0.6984;0.9577;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 91};RandomForestClassifier(n_estimators=20, random_state=91)
RandomForestClassifier;0.8503;0.8548;0.8503;0.8505;0.8586;0.8662;0.8586;0.8579;0.7;0.7245;0.7;0.6984;0.9551;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 444};RandomForestClassifier(n_estimators=10, random_state=444)
RandomForestClassifier;0.8618;0.8654;0.8618;0.862;0.831;0.8367;0.831;0.832;0.7;0.7245;0.7;0.6984;0.9575;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 444};RandomForestClassifier(n_estimators=20, random_state=444)
KNeighborsClassifier;0.8442;0.846;0.8442;0.8442;0.8207;0.8231;0.8207;0.82;0.7;0.697;0.7;0.6982;0.9376;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.8641;0.8674;0.8641;0.8643;0.8069;0.8086;0.8069;0.8062;0.7;0.717;0.7;0.6976;0.9585;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 444};RandomForestClassifier(n_estimators=20, random_state=444)
RandomForestClassifier;0.85;0.8535;0.85;0.8499;0.8862;0.8872;0.8862;0.8863;0.7;0.7223;0.7;0.6976;0.9554;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 444};RandomForestClassifier(n_estimators=20, random_state=444)
RandomForestClassifier;0.8584;0.8609;0.8584;0.8582;0.8379;0.8458;0.8379;0.8389;0.7;0.717;0.7;0.6976;0.9552;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 91};RandomForestClassifier(n_estimators=20, random_state=91)
RandomForestClassifier;0.8476;0.8522;0.8476;0.8476;0.8694;0.8738;0.8694;0.8696;0.7;0.717;0.7;0.6976;0.9526;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 91};RandomForestClassifier(n_estimators=20, random_state=91)
RandomForestClassifier;0.8538;0.8574;0.8538;0.8541;0.8552;0.8586;0.8552;0.8553;0.7;0.7133;0.7;0.6966;0.9544;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 439};RandomForestClassifier(n_estimators=10, random_state=439)
KNeighborsClassifier;0.8381;0.8413;0.8381;0.8375;0.8621;0.8643;0.8621;0.8625;0.7;0.7133;0.7;0.6966;0.9311;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8289;0.8329;0.8289;0.8281;0.8729;0.8745;0.8729;0.8723;0.7;0.7133;0.7;0.6966;0.9315;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8296;0.8316;0.8296;0.829;0.866;0.8726;0.866;0.8658;0.7;0.7133;0.7;0.6966;0.9316;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.6926;0.7122;0.6926;0.6928;0.7148;0.7344;0.7148;0.7141;0.7;0.6967;0.7;0.6963;0.81;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
KNeighborsClassifier;0.8358;0.8409;0.8358;0.8355;0.8379;0.843;0.8379;0.8376;0.7;0.7108;0.7;0.6952;0.9374;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8534;0.8573;0.8534;0.8534;0.8828;0.8886;0.8828;0.8833;0.6833;0.7046;0.6833;0.6853;0.9529;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 439};RandomForestClassifier(n_estimators=20, random_state=439)
RandomForestClassifier;0.853;0.8556;0.853;0.8531;0.89;0.8914;0.89;0.8903;0.6833;0.706;0.6833;0.6849;0.954;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 444};RandomForestClassifier(n_estimators=10, random_state=444)
DecisionTreeClassifier;0.8565;0.8587;0.8565;0.8565;0.8207;0.8237;0.8207;0.8207;0.6833;0.7102;0.6833;0.6849;0.9506;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=384)
KNeighborsClassifier;0.8362;0.8402;0.8362;0.8362;0.8655;0.8669;0.8655;0.8651;0.6833;0.6968;0.6833;0.6837;0.9338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8561;0.8589;0.8561;0.8564;0.8345;0.8365;0.8345;0.8326;0.6833;0.6862;0.6833;0.6836;0.9488;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=692)
RandomForestClassifier;0.8607;0.8644;0.8607;0.861;0.8724;0.8734;0.8724;0.8725;0.6833;0.7125;0.6833;0.6835;0.9545;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 91};RandomForestClassifier(n_estimators=10, random_state=91)
KNeighborsClassifier;0.8423;0.8447;0.8423;0.8419;0.8316;0.8347;0.8316;0.8303;0.6833;0.6962;0.6833;0.6834;0.9342;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8411;0.8469;0.8411;0.841;0.8385;0.8492;0.8385;0.8398;0.6833;0.7216;0.6833;0.6831;0.9348;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8565;0.86;0.8565;0.8568;0.8138;0.8179;0.8138;0.813;0.6833;0.6959;0.6833;0.6822;0.9473;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=62)
RandomForestClassifier;0.8549;0.8592;0.8549;0.8548;0.8694;0.871;0.8694;0.8696;0.6833;0.705;0.6833;0.682;0.9552;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 439};RandomForestClassifier(n_estimators=5, random_state=439)
RandomForestClassifier;0.855;0.8596;0.855;0.8548;0.8517;0.8559;0.8517;0.8517;0.6833;0.7;0.6833;0.6818;0.9571;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 91};RandomForestClassifier(n_estimators=20, random_state=91)
DecisionTreeClassifier;0.8507;0.8529;0.8507;0.8509;0.8483;0.8509;0.8483;0.8481;0.6833;0.7;0.6833;0.6818;0.9494;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=692)
RandomForestClassifier;0.8534;0.8567;0.8534;0.8532;0.8655;0.8698;0.8655;0.8656;0.6833;0.7;0.6833;0.6818;0.9535;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 444};RandomForestClassifier(n_estimators=20, random_state=444)
RandomForestClassifier;0.8526;0.8563;0.8526;0.8525;0.866;0.8669;0.866;0.8659;0.6833;0.7072;0.6833;0.6817;0.9552;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 444};RandomForestClassifier(n_estimators=20, random_state=444)
LogisticRegression;0.6915;0.7111;0.6915;0.6912;0.7;0.7071;0.7;0.6963;0.6833;0.6813;0.6833;0.6812;0.8133;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
KNeighborsClassifier;0.8312;0.8361;0.8312;0.8308;0.8625;0.8646;0.8625;0.8615;0.6833;0.6975;0.6833;0.6811;0.9291;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8316;0.835;0.8316;0.8312;0.8483;0.8506;0.8483;0.8479;0.6833;0.6975;0.6833;0.6811;0.9324;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8289;0.8318;0.8289;0.8284;0.831;0.8335;0.831;0.8316;0.6833;0.6975;0.6833;0.6811;0.9302;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8328;0.8369;0.8328;0.8323;0.8552;0.8566;0.8552;0.8547;0.6833;0.6975;0.6833;0.6811;0.9367;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.6969;0.7124;0.6969;0.6949;0.7034;0.7137;0.7034;0.7015;0.6833;0.6852;0.6833;0.681;0.8123;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
DecisionTreeClassifier;0.853;0.8564;0.853;0.8532;0.8103;0.8123;0.8103;0.8099;0.6833;0.6952;0.6833;0.6807;0.9466;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
LogisticRegression;0.6869;0.7065;0.6869;0.6854;0.6793;0.693;0.6793;0.6771;0.6833;0.6806;0.6833;0.6786;0.8126;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
LogisticRegression;0.6903;0.7102;0.6903;0.6893;0.6907;0.7199;0.6907;0.6897;0.6833;0.6806;0.6833;0.6786;0.814;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6812;0.6969;0.6812;0.6793;0.7345;0.7439;0.7345;0.7351;0.6833;0.6842;0.6833;0.6786;0.8114;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6868;0.7043;0.6868;0.6856;0.6942;0.7264;0.6942;0.6927;0.6833;0.6806;0.6833;0.6786;0.8143;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
LogisticRegression;0.6975;0.7135;0.6975;0.6965;0.6667;0.6949;0.6667;0.667;0.6833;0.6806;0.6833;0.6786;0.8171;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
KNeighborsClassifier;0.8358;0.8376;0.8358;0.8353;0.8483;0.8547;0.8483;0.8488;0.6667;0.687;0.6667;0.6682;0.933;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8373;0.8405;0.8373;0.8371;0.8517;0.8515;0.8517;0.8516;0.6667;0.7067;0.6667;0.668;0.929;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8545;0.8581;0.8545;0.8545;0.8763;0.8796;0.8763;0.8766;0.6667;0.6836;0.6667;0.6659;0.9546;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 91};RandomForestClassifier(n_estimators=20, random_state=91)
DecisionTreeClassifier;0.8503;0.8522;0.8503;0.8504;0.8213;0.82;0.8213;0.8197;0.6667;0.6778;0.6667;0.6651;0.9495;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 384};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=384)
DecisionTreeClassifier;0.8538;0.8574;0.8538;0.854;0.8414;0.8417;0.8414;0.8414;0.6667;0.6778;0.6667;0.6651;0.9486;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=692)
DecisionTreeClassifier;0.8438;0.8469;0.8438;0.8439;0.869;0.8692;0.869;0.8687;0.6667;0.6827;0.6667;0.6645;0.9451;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 62};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=62)
LogisticRegression;0.7011;0.7147;0.7011;0.6996;0.6759;0.6951;0.6759;0.6745;0.6667;0.6708;0.6667;0.6638;0.8153;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
LogisticRegression;0.692;0.7056;0.692;0.6902;0.669;0.6817;0.669;0.6697;0.6667;0.6646;0.6667;0.6637;0.8122;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.685;0.7001;0.685;0.6831;0.7;0.7065;0.7;0.6985;0.6667;0.6646;0.6667;0.6637;0.8135;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
LogisticRegression;0.6915;0.7112;0.6915;0.6899;0.7069;0.7154;0.7069;0.7048;0.6667;0.6646;0.6667;0.6637;0.8144;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
LogisticRegression;0.6946;0.7094;0.6946;0.6933;0.6655;0.6853;0.6655;0.6658;0.6667;0.6646;0.6667;0.6637;0.8168;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
LogisticRegression;0.6968;0.7146;0.6968;0.6961;0.6323;0.6567;0.6323;0.6303;0.6667;0.6646;0.6667;0.6637;0.8199;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6839;0.6942;0.6839;0.6819;0.7;0.711;0.7;0.6983;0.6667;0.6646;0.6667;0.6637;0.8132;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6889;0.7085;0.6889;0.6889;0.7207;0.7323;0.7207;0.7202;0.6667;0.6646;0.6667;0.6637;0.8117;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6942;0.712;0.6942;0.6937;0.7034;0.7215;0.7034;0.7035;0.6667;0.6646;0.6667;0.6637;0.8129;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6908;0.7089;0.6908;0.6891;0.669;0.6859;0.669;0.6693;0.6667;0.6646;0.6667;0.6637;0.8149;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6849;0.6981;0.6849;0.6831;0.7113;0.7165;0.7113;0.7092;0.6667;0.6646;0.6667;0.6637;0.8139;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
LogisticRegression;0.6946;0.7111;0.6946;0.6941;0.6862;0.7098;0.6862;0.6869;0.6667;0.6646;0.6667;0.6637;0.8127;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
LogisticRegression;0.6888;0.7024;0.6888;0.6873;0.6897;0.6977;0.6897;0.6865;0.6667;0.6646;0.6667;0.6637;0.813;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
LogisticRegression;0.6923;0.7113;0.6923;0.6914;0.6586;0.6853;0.6586;0.6596;0.6667;0.6646;0.6667;0.6637;0.8175;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
LogisticRegression;0.6915;0.7067;0.6915;0.6906;0.7345;0.7497;0.7345;0.7326;0.6667;0.6646;0.6667;0.6637;0.8094;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
LogisticRegression;0.6866;0.7;0.6866;0.6853;0.7138;0.7369;0.7138;0.7095;0.6667;0.6646;0.6667;0.6637;0.8157;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
LogisticRegression;0.69;0.704;0.69;0.6871;0.7069;0.7225;0.7069;0.7086;0.6667;0.6646;0.6667;0.6637;0.8125;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
DecisionTreeClassifier;0.8496;0.8517;0.8496;0.8493;0.8172;0.8242;0.8172;0.816;0.6667;0.6925;0.6667;0.6636;0.9475;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 692};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=692)
LogisticRegression;0.6862;0.7051;0.6862;0.6851;0.7138;0.7265;0.7138;0.7077;0.6667;0.6667;0.6667;0.6635;0.814;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6904;0.703;0.6904;0.6879;0.6345;0.6651;0.6345;0.6328;0.6667;0.6667;0.6667;0.6635;0.8168;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
LogisticRegression;0.6914;0.7049;0.6914;0.69;0.6564;0.6792;0.6564;0.655;0.6667;0.6667;0.6667;0.6635;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 805, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=805)"
LogisticRegression;0.6918;0.708;0.6918;0.6898;0.6735;0.6813;0.6735;0.6732;0.6667;0.6667;0.6667;0.6635;0.8169;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 197, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=197)"
KNeighborsClassifier;0.8362;0.8378;0.8362;0.8362;0.8557;0.8581;0.8557;0.8559;0.65;0.6665;0.65;0.652;0.9332;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8343;0.8389;0.8343;0.8339;0.8655;0.8657;0.8655;0.8655;0.65;0.6709;0.65;0.6497;0.9319;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8577;0.8619;0.8577;0.8575;0.8483;0.8513;0.8483;0.8473;0.65;0.6622;0.65;0.6492;0.9562;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 439};RandomForestClassifier(n_estimators=5, random_state=439)
RandomForestClassifier;0.8561;0.8603;0.8561;0.8562;0.8385;0.8391;0.8385;0.8383;0.65;0.6611;0.65;0.6484;0.9562;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 439};RandomForestClassifier(n_estimators=10, random_state=439)
LogisticRegression;0.6895;0.7047;0.6895;0.6882;0.677;0.6846;0.677;0.6732;0.65;0.6528;0.65;0.6483;0.8115;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 859, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=859)"
RandomForestClassifier;0.8546;0.8583;0.8546;0.8548;0.8483;0.8488;0.8483;0.8484;0.6333;0.6546;0.6333;0.6349;0.956;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 91};RandomForestClassifier(n_estimators=5, random_state=91)
