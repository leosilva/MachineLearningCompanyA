Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.925;0.9261;0.925;0.925;0.9347;0.9347;0.9347;0.9343;0.9333;0.937;0.9333;0.9341;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 754};RandomForestClassifier(n_estimators=20, random_state=754)
RandomForestClassifier;0.9292;0.9297;0.9292;0.9292;0.9175;0.9173;0.9175;0.9173;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
RandomForestClassifier;0.928;0.929;0.928;0.9281;0.921;0.9212;0.921;0.9204;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
RandomForestClassifier;0.9196;0.9204;0.9196;0.9197;0.9517;0.9519;0.9517;0.9513;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
RandomForestClassifier;0.9258;0.9263;0.9258;0.9256;0.931;0.9314;0.931;0.9311;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
RandomForestClassifier;0.9246;0.9258;0.9246;0.9247;0.9207;0.9208;0.9207;0.9205;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9288;0.9293;0.9288;0.9288;0.8966;0.8966;0.8966;0.8964;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 754};RandomForestClassifier(n_estimators=10, random_state=754)
RandomForestClassifier;0.9231;0.9238;0.9231;0.923;0.9172;0.9171;0.9172;0.917;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
RandomForestClassifier;0.9276;0.9282;0.9276;0.9277;0.8935;0.8933;0.8935;0.893;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 754};RandomForestClassifier(n_estimators=20, random_state=754)
RandomForestClassifier;0.9257;0.9265;0.9257;0.9258;0.9244;0.924;0.9244;0.924;0.9167;0.9245;0.9167;0.9181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
RandomForestClassifier;0.9238;0.9241;0.9238;0.9237;0.9172;0.9172;0.9172;0.9172;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
KNeighborsClassifier;0.8798;0.881;0.8798;0.8797;0.9138;0.9138;0.9138;0.9137;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8821;0.884;0.8821;0.882;0.9172;0.9183;0.9172;0.9174;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9242;0.9246;0.9242;0.9242;0.9313;0.9314;0.9313;0.9309;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
RandomForestClassifier;0.9246;0.9251;0.9246;0.9246;0.9414;0.9419;0.9414;0.9415;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9258;0.9262;0.9258;0.9257;0.9207;0.9209;0.9207;0.9205;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
RandomForestClassifier;0.9223;0.9232;0.9223;0.9223;0.9483;0.9486;0.9483;0.9483;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
RandomForestClassifier;0.9246;0.9255;0.9246;0.9247;0.931;0.9313;0.931;0.9311;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 754};RandomForestClassifier(n_estimators=20, random_state=754)
RandomForestClassifier;0.9212;0.9225;0.9212;0.921;0.9448;0.9465;0.9448;0.945;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 754};RandomForestClassifier(n_estimators=20, random_state=754)
RandomForestClassifier;0.9246;0.9253;0.9246;0.9248;0.9107;0.9104;0.9107;0.91;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
RandomForestClassifier;0.9219;0.9224;0.9219;0.9219;0.9414;0.9418;0.9414;0.9415;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 754};RandomForestClassifier(n_estimators=20, random_state=754)
RandomForestClassifier;0.925;0.9253;0.925;0.9249;0.9345;0.9363;0.9345;0.9349;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
RandomForestClassifier;0.9212;0.9214;0.9212;0.9211;0.9483;0.9487;0.9483;0.9483;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
KNeighborsClassifier;0.8879;0.8901;0.8879;0.8879;0.8966;0.8972;0.8966;0.8951;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9231;0.9236;0.9231;0.923;0.9103;0.9101;0.9103;0.9102;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
RandomForestClassifier;0.9258;0.9262;0.9258;0.9258;0.9172;0.9174;0.9172;0.9173;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
RandomForestClassifier;0.9239;0.9247;0.9239;0.9239;0.931;0.9313;0.931;0.931;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
KNeighborsClassifier;0.8848;0.8879;0.8848;0.885;0.8931;0.8926;0.8931;0.8927;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9338;0.9347;0.9338;0.9338;0.9034;0.9029;0.9034;0.9029;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
RandomForestClassifier;0.9303;0.9307;0.9303;0.9303;0.9313;0.9325;0.9313;0.9316;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
RandomForestClassifier;0.9299;0.9309;0.9299;0.93;0.9347;0.9347;0.9347;0.9344;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
KNeighborsClassifier;0.8836;0.8867;0.8836;0.8835;0.9175;0.9185;0.9175;0.9178;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9219;0.9226;0.9219;0.922;0.9345;0.9345;0.9345;0.9342;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
RandomForestClassifier;0.9238;0.9242;0.9238;0.9238;0.9244;0.9242;0.9244;0.9241;0.9;0.912;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
KNeighborsClassifier;0.8863;0.8883;0.8863;0.8863;0.9069;0.9071;0.9069;0.9059;0.9;0.913;0.9;0.9019;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9231;0.9239;0.9231;0.9231;0.9345;0.9356;0.9345;0.9347;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
RandomForestClassifier;0.9258;0.9267;0.9258;0.9258;0.9241;0.9241;0.9241;0.924;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
RandomForestClassifier;0.9215;0.9223;0.9215;0.9215;0.9416;0.9427;0.9416;0.9415;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9235;0.9239;0.9235;0.9235;0.9138;0.9145;0.9138;0.9133;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
RandomForestClassifier;0.9281;0.9287;0.9281;0.928;0.8931;0.8943;0.8931;0.8933;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 754};RandomForestClassifier(n_estimators=10, random_state=754)
RandomForestClassifier;0.9265;0.9274;0.9265;0.9266;0.8966;0.898;0.8966;0.8961;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9246;0.9254;0.9246;0.9246;0.9207;0.9209;0.9207;0.9207;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9311;0.9316;0.9311;0.9312;0.9244;0.9254;0.9244;0.9241;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9239;0.9238;0.9239;0.9238;0.931;0.9313;0.931;0.931;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9304;0.9309;0.9304;0.9303;0.8966;0.8967;0.8966;0.8963;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
RandomForestClassifier;0.9288;0.9292;0.9288;0.9288;0.9138;0.9138;0.9138;0.9133;0.9;0.9043;0.9;0.9011;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
RandomForestClassifier;0.9242;0.9248;0.9242;0.9242;0.921;0.9231;0.921;0.9204;0.8833;0.8942;0.8833;0.8854;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
RandomForestClassifier;0.9258;0.9265;0.9258;0.9258;0.9276;0.9274;0.9276;0.9269;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
KNeighborsClassifier;0.8833;0.8851;0.8833;0.8835;0.931;0.9313;0.931;0.9305;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8859;0.888;0.8859;0.8858;0.9244;0.9244;0.9244;0.9241;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8825;0.8853;0.8825;0.8821;0.9552;0.9555;0.9552;0.9552;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8794;0.8818;0.8794;0.8792;0.931;0.9309;0.931;0.9308;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8883;0.8899;0.8883;0.8882;0.9241;0.9256;0.9241;0.9238;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8848;0.8867;0.8848;0.8846;0.9347;0.9348;0.9347;0.9344;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8886;0.8907;0.8886;0.8884;0.9172;0.9184;0.9172;0.9171;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9284;0.9288;0.9284;0.9285;0.9276;0.9278;0.9276;0.9274;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
KNeighborsClassifier;0.8971;0.899;0.8971;0.897;0.9103;0.9114;0.9103;0.9106;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8844;0.887;0.8844;0.8842;0.9172;0.9174;0.9172;0.9165;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9257;0.9261;0.9257;0.9256;0.931;0.9348;0.931;0.9316;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
KNeighborsClassifier;0.8867;0.8879;0.8867;0.8866;0.9103;0.9101;0.9103;0.9102;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8805;0.8818;0.8805;0.8803;0.9278;0.9279;0.9278;0.9277;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8772;0.879;0.8772;0.8769;0.9276;0.9315;0.9276;0.9276;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8859;0.8881;0.8859;0.8859;0.8828;0.8828;0.8828;0.8825;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9227;0.9237;0.9227;0.9227;0.9276;0.9283;0.9276;0.9274;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 587};RandomForestClassifier(n_estimators=20, random_state=587)
KNeighborsClassifier;0.884;0.8862;0.884;0.8839;0.9416;0.9416;0.9416;0.9415;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8836;0.8861;0.8836;0.8837;0.9278;0.9313;0.9278;0.927;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8806;0.8837;0.8806;0.8806;0.8966;0.8961;0.8966;0.8961;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9284;0.9292;0.9284;0.9284;0.9172;0.9178;0.9172;0.9174;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
KNeighborsClassifier;0.8802;0.8818;0.8802;0.8803;0.9345;0.9355;0.9345;0.9341;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8779;0.8797;0.8779;0.8779;0.9207;0.9231;0.9207;0.9208;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8879;0.8907;0.8879;0.8877;0.9172;0.917;0.9172;0.917;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9242;0.9245;0.9242;0.9241;0.9172;0.9174;0.9172;0.9173;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
KNeighborsClassifier;0.8859;0.8885;0.8859;0.886;0.921;0.9212;0.921;0.9209;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8764;0.8785;0.8764;0.876;0.9276;0.9281;0.9276;0.9272;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9273;0.9279;0.9273;0.9273;0.8862;0.8876;0.8862;0.8866;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
KNeighborsClassifier;0.8844;0.8864;0.8844;0.8844;0.9345;0.9345;0.9345;0.9343;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8841;0.8856;0.8841;0.884;0.9379;0.9396;0.9379;0.9377;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8864;0.8883;0.8864;0.8863;0.8897;0.8901;0.8897;0.8897;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9246;0.9252;0.9246;0.9247;0.9138;0.9141;0.9138;0.9137;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.9265;0.9279;0.9265;0.9266;0.9416;0.9416;0.9416;0.9414;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
KNeighborsClassifier;0.8825;0.8857;0.8825;0.8824;0.9172;0.9185;0.9172;0.9166;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8863;0.8882;0.8863;0.8865;0.866;0.8672;0.866;0.8644;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9215;0.922;0.9215;0.9216;0.9107;0.9105;0.9107;0.9106;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 754};RandomForestClassifier(n_estimators=10, random_state=754)
RandomForestClassifier;0.9307;0.9318;0.9307;0.9307;0.9103;0.9113;0.9103;0.9105;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
RandomForestClassifier;0.9246;0.9253;0.9246;0.9246;0.9379;0.938;0.9379;0.9379;0.8833;0.8915;0.8833;0.885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 328};RandomForestClassifier(n_estimators=20, random_state=328)
DecisionTreeClassifier;0.8821;0.8834;0.8821;0.8823;0.9034;0.9093;0.9034;0.9024;0.8833;0.8918;0.8833;0.8847;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=918)
RandomForestClassifier;0.8718;0.873;0.8718;0.8719;0.8483;0.8479;0.8483;0.8478;0.8833;0.8935;0.8833;0.8844;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
DecisionTreeClassifier;0.8844;0.8866;0.8844;0.8847;0.8862;0.8875;0.8862;0.8864;0.8833;0.8935;0.8833;0.8844;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8457;0.8471;0.8457;0.8461;0.7973;0.8013;0.7973;0.7975;0.8833;0.8935;0.8833;0.8844;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
RandomForestClassifier;0.8668;0.8678;0.8668;0.8667;0.8448;0.845;0.8448;0.8448;0.8833;0.8935;0.8833;0.8844;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
RandomForestClassifier;0.9242;0.9252;0.9242;0.9242;0.9107;0.9104;0.9107;0.9099;0.8833;0.8856;0.8833;0.8841;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
RandomForestClassifier;0.9242;0.9249;0.9242;0.9243;0.9276;0.9292;0.9276;0.9268;0.8833;0.8856;0.8833;0.8841;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 328};RandomForestClassifier(n_estimators=10, random_state=328)
RandomForestClassifier;0.9277;0.928;0.9277;0.9276;0.9;0.8998;0.9;0.8998;0.8833;0.8856;0.8833;0.8841;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
DecisionTreeClassifier;0.8335;0.8348;0.8335;0.8339;0.8552;0.855;0.8552;0.8547;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
DecisionTreeClassifier;0.8906;0.8909;0.8906;0.8905;0.8483;0.8472;0.8483;0.8476;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=458)
DecisionTreeClassifier;0.8416;0.8427;0.8416;0.8418;0.8379;0.8475;0.8379;0.8386;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=174)
DecisionTreeClassifier;0.8485;0.849;0.8485;0.8486;0.8517;0.8519;0.8517;0.8517;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8462;0.8474;0.8462;0.8461;0.8379;0.838;0.8379;0.8378;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.8289;0.8313;0.8289;0.8291;0.8586;0.8606;0.8586;0.8572;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8308;0.8323;0.8308;0.8311;0.8621;0.8636;0.8621;0.8624;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8293;0.8308;0.8293;0.8295;0.8483;0.8493;0.8483;0.8484;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.8384;0.84;0.8384;0.8387;0.8488;0.8485;0.8488;0.8477;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.8913;0.8922;0.8913;0.8916;0.8241;0.8245;0.8241;0.8235;0.8833;0.8875;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=918)
DecisionTreeClassifier;0.8331;0.8345;0.8331;0.8335;0.8241;0.825;0.8241;0.8239;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8928;0.8939;0.8928;0.8928;0.8034;0.8009;0.8034;0.8012;0.8833;0.8868;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
RandomForestClassifier;0.8641;0.8652;0.8641;0.8642;0.8866;0.8874;0.8866;0.8862;0.8833;0.8875;0.8833;0.884;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
DecisionTreeClassifier;0.8913;0.8924;0.8913;0.8914;0.7897;0.791;0.7897;0.7858;0.8833;0.8862;0.8833;0.8836;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=745)
DecisionTreeClassifier;0.8867;0.8873;0.8867;0.8867;0.8724;0.8734;0.8724;0.8722;0.8833;0.8823;0.8833;0.8824;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=918)
RandomForestClassifier;0.8683;0.8692;0.8683;0.8683;0.8931;0.8939;0.8931;0.8927;0.8667;0.8917;0.8667;0.8699;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 967};RandomForestClassifier(n_estimators=20, random_state=967)
KNeighborsClassifier;0.8855;0.8886;0.8855;0.8856;0.9347;0.9351;0.9347;0.9343;0.8667;0.8796;0.8667;0.8692;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.889;0.8911;0.889;0.8888;0.8832;0.8863;0.8832;0.8824;0.8667;0.8796;0.8667;0.8692;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8855;0.8877;0.8855;0.8854;0.9416;0.9417;0.9416;0.9416;0.8667;0.8796;0.8667;0.8692;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8814;0.884;0.8814;0.8811;0.9103;0.9108;0.9103;0.9099;0.8667;0.8796;0.8667;0.8692;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8909;0.8929;0.8909;0.8909;0.9069;0.907;0.9069;0.9066;0.8667;0.8796;0.8667;0.8692;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9242;0.9245;0.9242;0.9242;0.9345;0.936;0.9345;0.9339;0.8667;0.8795;0.8667;0.8687;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 754};RandomForestClassifier(n_estimators=20, random_state=754)
KNeighborsClassifier;0.8875;0.8895;0.8875;0.8871;0.9241;0.924;0.9241;0.924;0.8667;0.8795;0.8667;0.8687;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8848;0.887;0.8848;0.8849;0.9069;0.9073;0.9069;0.9066;0.8667;0.8795;0.8667;0.8687;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9254;0.926;0.9254;0.9254;0.9241;0.9242;0.9241;0.9241;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 754};RandomForestClassifier(n_estimators=20, random_state=754)
RandomForestClassifier;0.923;0.9236;0.923;0.923;0.9416;0.9417;0.9416;0.9413;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 580};RandomForestClassifier(n_estimators=20, random_state=580)
KNeighborsClassifier;0.8828;0.8841;0.8828;0.883;0.9175;0.9176;0.9175;0.9169;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8852;0.8871;0.8852;0.8851;0.8862;0.8865;0.8862;0.8861;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8767;0.8783;0.8767;0.8764;0.9244;0.9257;0.9244;0.9241;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8837;0.8852;0.8837;0.8837;0.931;0.9309;0.931;0.9308;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8841;0.8864;0.8841;0.8838;0.9138;0.9147;0.9138;0.9138;0.8667;0.8716;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8817;0.8836;0.8817;0.8815;0.9345;0.935;0.9345;0.9341;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8829;0.8845;0.8829;0.8827;0.9207;0.9235;0.9207;0.9203;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8794;0.8818;0.8794;0.8792;0.9276;0.9277;0.9276;0.9273;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8863;0.8882;0.8863;0.8864;0.9414;0.9418;0.9414;0.9412;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.886;0.8889;0.886;0.8859;0.9207;0.9216;0.9207;0.9205;0.8667;0.8724;0.8667;0.8681;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8726;0.8737;0.8726;0.8728;0.8862;0.8865;0.8862;0.8858;0.8667;0.8819;0.8667;0.868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 78};RandomForestClassifier(n_estimators=20, random_state=78)
RandomForestClassifier;0.8737;0.8758;0.8737;0.8739;0.8282;0.8287;0.8282;0.8279;0.8667;0.8819;0.8667;0.868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 78};RandomForestClassifier(n_estimators=20, random_state=78)
RandomForestClassifier;0.868;0.8688;0.868;0.8681;0.8655;0.8656;0.8655;0.8655;0.8667;0.8819;0.8667;0.868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
RandomForestClassifier;0.8733;0.874;0.8733;0.8734;0.8828;0.8829;0.8828;0.8826;0.8667;0.8819;0.8667;0.868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
KNeighborsClassifier;0.8825;0.8852;0.8825;0.8823;0.9313;0.9313;0.9313;0.9312;0.8667;0.8739;0.8667;0.8679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8622;0.8628;0.8622;0.8623;0.8832;0.8858;0.8832;0.8816;0.8667;0.8739;0.8667;0.8679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 90};RandomForestClassifier(n_estimators=5, random_state=90)
KNeighborsClassifier;0.8859;0.8879;0.8859;0.8856;0.921;0.9209;0.921;0.9206;0.8667;0.8739;0.8667;0.8679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8825;0.883;0.8825;0.8826;0.8931;0.8955;0.8931;0.8925;0.8667;0.8704;0.8667;0.8674;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
DecisionTreeClassifier;0.8878;0.8889;0.8878;0.8878;0.8935;0.8949;0.8935;0.8926;0.8667;0.8704;0.8667;0.8674;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=745)
DecisionTreeClassifier;0.8928;0.8941;0.8928;0.8931;0.8724;0.8726;0.8724;0.8716;0.8667;0.8704;0.8667;0.8674;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=750)
KNeighborsClassifier;0.8901;0.8916;0.8901;0.89;0.8966;0.8969;0.8966;0.896;0.8667;0.8704;0.8667;0.8674;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8327;0.8342;0.8327;0.833;0.8448;0.845;0.8448;0.8446;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.881;0.8821;0.881;0.8811;0.8621;0.865;0.8621;0.862;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
DecisionTreeClassifier;0.8361;0.8386;0.8361;0.8363;0.8694;0.8721;0.8694;0.8676;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=174)
DecisionTreeClassifier;0.8338;0.836;0.8338;0.834;0.8454;0.8468;0.8454;0.8451;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8343;0.8356;0.8343;0.8346;0.8448;0.8463;0.8448;0.8446;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=174)
DecisionTreeClassifier;0.8374;0.8384;0.8374;0.8376;0.8241;0.8254;0.8241;0.8233;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
DecisionTreeClassifier;0.8446;0.846;0.8446;0.8449;0.8586;0.8588;0.8586;0.8587;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.8381;0.8395;0.8381;0.8381;0.8483;0.8514;0.8483;0.8481;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8293;0.8306;0.8293;0.8293;0.8557;0.8573;0.8557;0.8559;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
DecisionTreeClassifier;0.8354;0.8366;0.8354;0.8357;0.8517;0.8527;0.8517;0.8518;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.8308;0.8315;0.8308;0.8308;0.8694;0.877;0.8694;0.8699;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8453;0.8466;0.8453;0.8456;0.7938;0.7951;0.7938;0.7938;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.8396;0.841;0.8396;0.8397;0.8483;0.8486;0.8483;0.8478;0.8667;0.8709;0.8667;0.8673;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
MLPClassifier;0.809;0.8118;0.809;0.8102;0.8345;0.8331;0.8345;0.8329;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
DecisionTreeClassifier;0.8385;0.8393;0.8385;0.8386;0.8552;0.8552;0.8552;0.8552;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
MLPClassifier;0.8064;0.8077;0.8064;0.8073;0.8862;0.8853;0.8862;0.8855;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8033;0.8083;0.8033;0.8049;0.869;0.8702;0.869;0.8693;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
MLPClassifier;0.8083;0.8133;0.8083;0.8093;0.8552;0.8568;0.8552;0.8529;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8125;0.8155;0.8125;0.8135;0.831;0.8321;0.831;0.8295;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
DecisionTreeClassifier;0.8346;0.8371;0.8346;0.8351;0.8488;0.8506;0.8488;0.8494;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
DecisionTreeClassifier;0.8894;0.8906;0.8894;0.8895;0.8385;0.8386;0.8385;0.8385;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=458)
RandomForestClassifier;0.9253;0.9258;0.9253;0.9254;0.9244;0.9241;0.9244;0.9241;0.8667;0.8682;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 450};RandomForestClassifier(n_estimators=20, random_state=450)
DecisionTreeClassifier;0.8875;0.8889;0.8875;0.8875;0.8655;0.8657;0.8655;0.8648;0.8667;0.8681;0.8667;0.867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=745)
RandomForestClassifier;0.8691;0.8708;0.8691;0.8694;0.8379;0.8375;0.8379;0.8375;0.8667;0.8759;0.8667;0.8668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
DecisionTreeClassifier;0.8882;0.8891;0.8882;0.8883;0.8621;0.8627;0.8621;0.8616;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8875;0.8885;0.8875;0.8877;0.8586;0.8616;0.8586;0.8565;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
DecisionTreeClassifier;0.8879;0.8887;0.8879;0.8879;0.8517;0.8524;0.8517;0.8493;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
MLPClassifier;0.8021;0.8049;0.8021;0.8031;0.8419;0.8437;0.8419;0.8401;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.814;0.8164;0.814;0.8149;0.8276;0.8256;0.8276;0.8259;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.8033;0.8093;0.8033;0.8047;0.8655;0.8649;0.8655;0.8652;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.7983;0.803;0.7983;0.7996;0.8276;0.8256;0.8276;0.8256;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.8052;0.8102;0.8052;0.8069;0.8034;0.8018;0.8034;0.8015;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
MLPClassifier;0.8083;0.8125;0.8083;0.8093;0.8345;0.8359;0.8345;0.8329;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
MLPClassifier;0.8064;0.8102;0.8064;0.8074;0.869;0.8682;0.869;0.8676;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
MLPClassifier;0.8109;0.8138;0.8109;0.8117;0.8414;0.8457;0.8414;0.837;0.8667;0.8664;0.8667;0.8662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
DecisionTreeClassifier;0.8309;0.832;0.8309;0.831;0.8483;0.8485;0.8483;0.8483;0.8667;0.8724;0.8667;0.8662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
DecisionTreeClassifier;0.8902;0.8917;0.8902;0.8903;0.8759;0.876;0.8759;0.8757;0.8667;0.8668;0.8667;0.8657;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
KNeighborsClassifier;0.8856;0.8883;0.8856;0.8854;0.9034;0.9048;0.9034;0.9031;0.85;0.8685;0.85;0.8532;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8836;0.8854;0.8836;0.8836;0.8931;0.8931;0.8931;0.893;0.85;0.8594;0.85;0.8524;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8863;0.8882;0.8863;0.8864;0.9038;0.9036;0.9038;0.9033;0.85;0.8594;0.85;0.8524;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8649;0.8659;0.8649;0.8648;0.8621;0.8621;0.8621;0.8619;0.85;0.871;0.85;0.8519;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 967};RandomForestClassifier(n_estimators=20, random_state=967)
RandomForestClassifier;0.8691;0.8705;0.8691;0.8693;0.8797;0.8829;0.8797;0.8803;0.85;0.871;0.85;0.8519;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
RandomForestClassifier;0.8687;0.8691;0.8687;0.8686;0.8828;0.8838;0.8828;0.8827;0.85;0.871;0.85;0.8519;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 996};RandomForestClassifier(n_estimators=10, random_state=996)
KNeighborsClassifier;0.8446;0.8489;0.8446;0.8451;0.8517;0.8536;0.8517;0.8519;0.85;0.8611;0.85;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8679;0.8688;0.8679;0.868;0.8729;0.8738;0.8729;0.8721;0.85;0.8611;0.85;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
KNeighborsClassifier;0.8304;0.8346;0.8304;0.831;0.8522;0.8552;0.8522;0.8519;0.85;0.8611;0.85;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8699;0.8711;0.8699;0.8699;0.8517;0.8531;0.8517;0.8518;0.85;0.8611;0.85;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
KNeighborsClassifier;0.8347;0.8393;0.8347;0.835;0.869;0.8694;0.869;0.8689;0.85;0.8611;0.85;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.837;0.8413;0.837;0.8375;0.8931;0.8933;0.8931;0.8929;0.85;0.862;0.85;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8668;0.8684;0.8668;0.8668;0.8621;0.8646;0.8621;0.8619;0.85;0.862;0.85;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
RandomForestClassifier;0.8649;0.8657;0.8649;0.8651;0.866;0.8666;0.866;0.8661;0.85;0.862;0.85;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
KNeighborsClassifier;0.8932;0.8945;0.8932;0.8933;0.8832;0.8827;0.8832;0.8828;0.85;0.862;0.85;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8714;0.8725;0.8714;0.8714;0.8522;0.8521;0.8522;0.8521;0.85;0.8709;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 967};RandomForestClassifier(n_estimators=10, random_state=967)
RandomForestClassifier;0.8699;0.8704;0.8699;0.8699;0.8552;0.8565;0.8552;0.8554;0.85;0.8709;0.85;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
RandomForestClassifier;0.8691;0.8697;0.8691;0.8693;0.8655;0.8656;0.8655;0.8651;0.85;0.869;0.85;0.8511;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
KNeighborsClassifier;0.8906;0.8926;0.8906;0.8904;0.9172;0.9175;0.9172;0.9173;0.85;0.8541;0.85;0.851;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8855;0.8874;0.8855;0.8855;0.9141;0.9149;0.9141;0.9136;0.85;0.8541;0.85;0.851;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.889;0.8906;0.889;0.889;0.8345;0.8361;0.8345;0.8322;0.85;0.8541;0.85;0.851;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=458)
KNeighborsClassifier;0.8794;0.8815;0.8794;0.8794;0.9172;0.9173;0.9172;0.9172;0.85;0.8522;0.85;0.8508;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8902;0.8908;0.8902;0.8901;0.8621;0.8622;0.8621;0.8621;0.85;0.8522;0.85;0.8508;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
KNeighborsClassifier;0.8814;0.884;0.8814;0.8811;0.9;0.8996;0.9;0.8993;0.85;0.8522;0.85;0.8508;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8024;0.8086;0.8024;0.8042;0.7938;0.7921;0.7938;0.7917;0.85;0.8539;0.85;0.8505;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
RandomForestClassifier;0.8733;0.8742;0.8733;0.8734;0.869;0.8705;0.869;0.8684;0.85;0.8634;0.85;0.8505;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
RandomForestClassifier;0.8687;0.8707;0.8687;0.8689;0.8897;0.8896;0.8897;0.8895;0.85;0.8634;0.85;0.8505;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
DecisionTreeClassifier;0.8944;0.8951;0.8944;0.8944;0.8448;0.8455;0.8448;0.8438;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
MLPClassifier;0.8064;0.8102;0.8064;0.8079;0.8172;0.8146;0.8172;0.8143;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
DecisionTreeClassifier;0.8423;0.843;0.8423;0.8424;0.8828;0.8837;0.8828;0.8827;0.85;0.8563;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
MLPClassifier;0.809;0.8119;0.809;0.8097;0.8517;0.8513;0.8517;0.8514;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
DecisionTreeClassifier;0.8384;0.8396;0.8384;0.8388;0.8351;0.8417;0.8351;0.8347;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
DecisionTreeClassifier;0.8377;0.8386;0.8377;0.838;0.8316;0.8328;0.8316;0.8312;0.85;0.8563;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
MLPClassifier;0.7971;0.8007;0.7971;0.7982;0.8557;0.8613;0.8557;0.8531;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
MLPClassifier;0.7892;0.7947;0.7892;0.7908;0.8828;0.8821;0.8828;0.882;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
DecisionTreeClassifier;0.8392;0.8406;0.8392;0.8395;0.8247;0.8283;0.8247;0.8256;0.85;0.8563;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
MLPClassifier;0.8002;0.8037;0.8002;0.8012;0.8866;0.8866;0.8866;0.8861;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
DecisionTreeClassifier;0.8354;0.8374;0.8354;0.8354;0.8655;0.8665;0.8655;0.8656;0.85;0.8563;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
MLPClassifier;0.8006;0.8057;0.8006;0.8023;0.8655;0.8645;0.8655;0.864;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
MLPClassifier;0.8155;0.8176;0.8155;0.8161;0.8379;0.8389;0.8379;0.8379;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
DecisionTreeClassifier;0.8285;0.8298;0.8285;0.8285;0.8625;0.8625;0.8625;0.8625;0.85;0.8563;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=174)
MLPClassifier;0.8048;0.8068;0.8048;0.8056;0.8729;0.8717;0.8729;0.8713;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.8117;0.8163;0.8117;0.813;0.831;0.8301;0.831;0.8304;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
DecisionTreeClassifier;0.8416;0.8432;0.8416;0.8417;0.8586;0.8598;0.8586;0.8587;0.85;0.8563;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=174)
MLPClassifier;0.8006;0.8051;0.8006;0.8021;0.8586;0.8576;0.8586;0.8579;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
MLPClassifier;0.8072;0.811;0.8072;0.8079;0.8483;0.8466;0.8483;0.8465;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
DecisionTreeClassifier;0.8886;0.8894;0.8886;0.8887;0.8103;0.8092;0.8103;0.8092;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=458)
MLPClassifier;0.8094;0.8141;0.8094;0.8101;0.8724;0.8712;0.8724;0.8714;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
DecisionTreeClassifier;0.8856;0.8862;0.8856;0.8857;0.8345;0.8342;0.8345;0.8341;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8814;0.8828;0.8814;0.8813;0.8655;0.8667;0.8655;0.8646;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=745)
DecisionTreeClassifier;0.8833;0.8847;0.8833;0.8832;0.8552;0.8541;0.8552;0.8541;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=745)
DecisionTreeClassifier;0.8813;0.8829;0.8813;0.8812;0.8316;0.8301;0.8316;0.8302;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8906;0.8918;0.8906;0.8908;0.8655;0.8647;0.8655;0.8648;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
DecisionTreeClassifier;0.8423;0.843;0.8423;0.8424;0.8345;0.8348;0.8345;0.8345;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8901;0.8906;0.8901;0.8904;0.8552;0.8543;0.8552;0.8546;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
DecisionTreeClassifier;0.8347;0.8359;0.8347;0.8348;0.8552;0.8591;0.8552;0.855;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
DecisionTreeClassifier;0.8427;0.844;0.8427;0.8429;0.8138;0.8145;0.8138;0.8136;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
DecisionTreeClassifier;0.8351;0.8359;0.8351;0.8351;0.8276;0.8271;0.8276;0.8273;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=174)
DecisionTreeClassifier;0.8347;0.8361;0.8347;0.8349;0.8483;0.8499;0.8483;0.8485;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=174)
MLPClassifier;0.8067;0.8095;0.8067;0.8073;0.8625;0.8631;0.8625;0.8589;0.85;0.8506;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8033;0.8067;0.8033;0.8043;0.8552;0.8543;0.8552;0.8545;0.85;0.8517;0.85;0.8498;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
DecisionTreeClassifier;0.8331;0.8339;0.8331;0.8334;0.869;0.869;0.869;0.8687;0.85;0.8524;0.85;0.8497;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
MLPClassifier;0.8068;0.8107;0.8068;0.8077;0.8379;0.8417;0.8379;0.8368;0.85;0.8497;0.85;0.8495;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8051;0.8101;0.8051;0.8063;0.8351;0.8387;0.8351;0.8324;0.85;0.8497;0.85;0.8495;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.806;0.8086;0.806;0.8066;0.8517;0.856;0.8517;0.8503;0.85;0.8497;0.85;0.8495;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8171;0.8199;0.8171;0.8179;0.8483;0.8519;0.8483;0.8452;0.85;0.8497;0.85;0.8495;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
DecisionTreeClassifier;0.884;0.8845;0.884;0.8842;0.8483;0.8483;0.8483;0.8483;0.85;0.8489;0.85;0.8491;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=678)
DecisionTreeClassifier;0.8856;0.887;0.8856;0.8859;0.8793;0.8875;0.8793;0.8774;0.85;0.8489;0.85;0.8491;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
SVC;0.7772;0.7916;0.7772;0.7792;0.8591;0.865;0.8591;0.8572;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7822;0.7971;0.7822;0.7845;0.8448;0.8522;0.8448;0.8433;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7842;0.7979;0.7842;0.7861;0.8379;0.8423;0.8379;0.834;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7815;0.7968;0.7815;0.7843;0.8379;0.8373;0.8379;0.8335;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7784;0.7929;0.7784;0.7811;0.9;0.9002;0.9;0.8992;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7814;0.7947;0.7814;0.7839;0.8213;0.8207;0.8213;0.8199;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7799;0.7956;0.7799;0.7821;0.8454;0.8449;0.8454;0.8435;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7792;0.7959;0.7792;0.7819;0.8552;0.8531;0.8552;0.8536;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7746;0.79;0.7746;0.777;0.8414;0.8422;0.8414;0.8383;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7792;0.7939;0.7792;0.7813;0.8621;0.862;0.8621;0.8597;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7807;0.7945;0.7807;0.7836;0.869;0.8723;0.869;0.8687;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7761;0.7919;0.7761;0.7783;0.8759;0.8797;0.8759;0.8748;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7845;0.7999;0.7845;0.787;0.8241;0.8212;0.8241;0.8212;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7788;0.7942;0.7788;0.781;0.8517;0.8515;0.8517;0.849;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7792;0.7938;0.7792;0.782;0.8586;0.8601;0.8586;0.8566;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7819;0.7965;0.7819;0.784;0.8241;0.8349;0.8241;0.8221;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7784;0.7941;0.7784;0.7809;0.8414;0.8413;0.8414;0.8402;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7864;0.801;0.7864;0.7886;0.8041;0.8057;0.8041;0.8016;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7791;0.7947;0.7791;0.7819;0.8557;0.8547;0.8557;0.8531;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7868;0.8021;0.7868;0.7892;0.8621;0.862;0.8621;0.8594;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7772;0.7925;0.7772;0.78;0.8625;0.8627;0.8625;0.8601;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7811;0.7954;0.7811;0.784;0.8517;0.851;0.8517;0.8512;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.78;0.7952;0.78;0.7822;0.8448;0.8443;0.8448;0.8426;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7731;0.7889;0.7731;0.7754;0.8759;0.8762;0.8759;0.8733;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7796;0.7942;0.7796;0.7817;0.8586;0.863;0.8586;0.8561;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.7756;0.7913;0.7756;0.7785;0.8316;0.8339;0.8316;0.8268;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.781;0.795;0.781;0.7826;0.8591;0.8586;0.8591;0.8574;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.7852;0.8003;0.7852;0.7875;0.7869;0.7891;0.7869;0.782;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7788;0.7949;0.7788;0.7814;0.8;0.7965;0.8;0.7946;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7798;0.7943;0.7798;0.7823;0.8694;0.8695;0.8694;0.8691;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 325};SVC(C=10, random_state=325)
SVC;0.7769;0.7913;0.7769;0.7791;0.8724;0.873;0.8724;0.8718;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7818;0.7964;0.7818;0.7838;0.8483;0.8511;0.8483;0.8443;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.7796;0.7939;0.7796;0.782;0.8414;0.8501;0.8414;0.8377;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7841;0.7992;0.7841;0.7866;0.8213;0.8188;0.8213;0.8189;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7749;0.7916;0.7749;0.7774;0.8488;0.854;0.8488;0.8454;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7753;0.792;0.7753;0.7777;0.8522;0.8552;0.8522;0.8501;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7788;0.7948;0.7788;0.7819;0.8621;0.8682;0.8621;0.8603;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7765;0.7923;0.7765;0.7789;0.8655;0.8663;0.8655;0.8638;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.7792;0.7935;0.7792;0.7816;0.8414;0.8394;0.8414;0.8394;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7769;0.7919;0.7769;0.7795;0.8724;0.873;0.8724;0.87;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.7807;0.7963;0.7807;0.783;0.8414;0.8477;0.8414;0.836;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.775;0.7919;0.775;0.7776;0.8655;0.8758;0.8655;0.8643;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7773;0.7937;0.7773;0.7798;0.8414;0.8413;0.8414;0.8358;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.783;0.7965;0.783;0.7853;0.831;0.8314;0.831;0.8277;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7788;0.7934;0.7788;0.7814;0.8655;0.8695;0.8655;0.8634;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7784;0.7951;0.7784;0.7809;0.8448;0.8433;0.8448;0.8421;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7819;0.7978;0.7819;0.784;0.8448;0.8458;0.8448;0.8419;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7792;0.7935;0.7792;0.782;0.8379;0.8399;0.8379;0.8361;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7803;0.7943;0.7803;0.7831;0.831;0.834;0.831;0.8297;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.7783;0.7928;0.7783;0.7805;0.8557;0.8545;0.8557;0.8531;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7776;0.7926;0.7776;0.7802;0.8552;0.8552;0.8552;0.8548;0.85;0.8505;0.85;0.8489;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
RandomForestClassifier;0.866;0.8671;0.866;0.866;0.8454;0.8455;0.8454;0.8452;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
RandomForestClassifier;0.8753;0.8764;0.8753;0.8754;0.8586;0.8592;0.8586;0.8588;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
RandomForestClassifier;0.8683;0.8701;0.8683;0.8684;0.8797;0.8815;0.8797;0.8802;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
RandomForestClassifier;0.8653;0.866;0.8653;0.8653;0.8797;0.8801;0.8797;0.8794;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
RandomForestClassifier;0.8652;0.8675;0.8652;0.8652;0.8694;0.8697;0.8694;0.8691;0.8333;0.8567;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 967};RandomForestClassifier(n_estimators=20, random_state=967)
RandomForestClassifier;0.8657;0.8665;0.8657;0.8654;0.8345;0.8394;0.8345;0.8349;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 967};RandomForestClassifier(n_estimators=10, random_state=967)
RandomForestClassifier;0.8717;0.8726;0.8717;0.8719;0.89;0.8899;0.89;0.8898;0.8333;0.8608;0.8333;0.8356;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 78};RandomForestClassifier(n_estimators=20, random_state=78)
RandomForestClassifier;0.8664;0.8672;0.8664;0.8663;0.8625;0.8653;0.8625;0.8625;0.8333;0.8608;0.8333;0.8356;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
RandomForestClassifier;0.8729;0.8733;0.8729;0.873;0.8316;0.8329;0.8316;0.8311;0.8333;0.8486;0.8333;0.8354;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
RandomForestClassifier;0.8737;0.8744;0.8737;0.8737;0.8586;0.86;0.8586;0.8578;0.8333;0.8489;0.8333;0.8352;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
RandomForestClassifier;0.8695;0.8705;0.8695;0.8694;0.8586;0.8585;0.8586;0.8585;0.8333;0.8489;0.8333;0.8352;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
KNeighborsClassifier;0.8308;0.8361;0.8308;0.8314;0.8724;0.876;0.8724;0.8701;0.8333;0.8507;0.8333;0.835;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8814;0.8846;0.8814;0.8816;0.8724;0.8768;0.8724;0.8717;0.8333;0.8507;0.8333;0.835;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=918)
KNeighborsClassifier;0.8408;0.8441;0.8408;0.8412;0.8621;0.8649;0.8621;0.8626;0.8333;0.8507;0.8333;0.835;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8358;0.8396;0.8358;0.8362;0.8625;0.8648;0.8625;0.863;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8419;0.8451;0.8419;0.8424;0.8552;0.8554;0.8552;0.8552;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8343;0.8383;0.8343;0.8347;0.8862;0.8873;0.8862;0.8863;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.829;0.8341;0.829;0.8293;0.8759;0.8759;0.8759;0.8759;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8407;0.8446;0.8407;0.8412;0.8797;0.8825;0.8797;0.8794;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.84;0.8441;0.84;0.8402;0.8517;0.8524;0.8517;0.8519;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8393;0.8436;0.8393;0.8399;0.8552;0.8562;0.8552;0.8553;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8389;0.8434;0.8389;0.8394;0.8448;0.8466;0.8448;0.8446;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8358;0.8408;0.8358;0.8363;0.866;0.8658;0.866;0.8653;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8354;0.8385;0.8354;0.8358;0.8763;0.8782;0.8763;0.8764;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8377;0.8424;0.8377;0.8381;0.866;0.8658;0.866;0.8658;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8328;0.8372;0.8328;0.8333;0.8897;0.8933;0.8897;0.8901;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8419;0.8459;0.8419;0.8424;0.8897;0.8908;0.8897;0.8898;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8274;0.8311;0.8274;0.8277;0.8828;0.8827;0.8828;0.8827;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8396;0.8437;0.8396;0.8398;0.8655;0.8662;0.8655;0.8655;0.8333;0.8409;0.8333;0.8349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8259;0.8287;0.8259;0.8264;0.8793;0.8805;0.8793;0.8793;0.8333;0.8444;0.8333;0.8345;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8343;0.8395;0.8343;0.8346;0.8621;0.8638;0.8621;0.8625;0.8333;0.8426;0.8333;0.8341;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.863;0.8641;0.863;0.8632;0.8724;0.8762;0.8724;0.873;0.8333;0.8426;0.8333;0.8341;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 996};RandomForestClassifier(n_estimators=10, random_state=996)
MLPClassifier;0.8037;0.8078;0.8037;0.8049;0.8241;0.8235;0.8241;0.8237;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.7999;0.8045;0.7999;0.801;0.8931;0.893;0.8931;0.8913;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 488, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=488)
MLPClassifier;0.8075;0.8104;0.8075;0.8085;0.8625;0.8636;0.8625;0.8614;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
DecisionTreeClassifier;0.8446;0.8455;0.8446;0.8446;0.8241;0.8254;0.8241;0.8239;0.8333;0.8372;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=870)
MLPClassifier;0.8059;0.8088;0.8059;0.8067;0.8522;0.8511;0.8522;0.851;0.8333;0.8405;0.8333;0.8338;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
MLPClassifier;0.8013;0.8073;0.8013;0.8028;0.8866;0.8876;0.8866;0.8843;0.8333;0.8348;0.8333;0.8337;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
KNeighborsClassifier;0.8416;0.8449;0.8416;0.8421;0.8379;0.8383;0.8379;0.8377;0.8333;0.8424;0.8333;0.8336;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8649;0.8655;0.8649;0.8651;0.8966;0.8974;0.8966;0.8967;0.8333;0.8424;0.8333;0.8336;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
DecisionTreeClassifier;0.8324;0.8335;0.8324;0.8325;0.869;0.8698;0.869;0.8691;0.8333;0.836;0.8333;0.8335;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=842)
MLPClassifier;0.7986;0.8037;0.7986;0.8001;0.8694;0.8686;0.8694;0.8687;0.8333;0.836;0.8333;0.8335;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
DecisionTreeClassifier;0.8358;0.8366;0.8358;0.8363;0.8276;0.8289;0.8276;0.8275;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
MLPClassifier;0.8017;0.8046;0.8017;0.8029;0.8448;0.8464;0.8448;0.8439;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8044;0.8095;0.8044;0.8054;0.866;0.8659;0.866;0.865;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
MLPClassifier;0.8094;0.8112;0.8094;0.8104;0.8586;0.859;0.8586;0.858;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
DecisionTreeClassifier;0.8871;0.8875;0.8871;0.8871;0.8241;0.823;0.8241;0.8224;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=750)
DecisionTreeClassifier;0.8423;0.8437;0.8423;0.8426;0.8213;0.8208;0.8213;0.8209;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8438;0.8448;0.8438;0.8439;0.8488;0.8495;0.8488;0.8491;0.8333;0.8432;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
DecisionTreeClassifier;0.8829;0.8836;0.8829;0.8828;0.8522;0.8524;0.8522;0.8509;0.8333;0.8339;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
DecisionTreeClassifier;0.892;0.8931;0.892;0.8923;0.8522;0.8512;0.8522;0.8512;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
DecisionTreeClassifier;0.8886;0.89;0.8886;0.8889;0.8586;0.8589;0.8586;0.8587;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
MLPClassifier;0.7467;0.7568;0.7467;0.7482;0.8172;0.8172;0.8172;0.817;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
DecisionTreeClassifier;0.8378;0.8393;0.8378;0.8378;0.8345;0.838;0.8345;0.8339;0.8333;0.8339;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=174)
DecisionTreeClassifier;0.8924;0.8939;0.8924;0.8925;0.811;0.8241;0.811;0.8109;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=918)
MLPClassifier;0.8006;0.8046;0.8006;0.8018;0.8517;0.8505;0.8517;0.8489;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
MLPClassifier;0.8025;0.8082;0.8025;0.804;0.8448;0.8447;0.8448;0.84;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8129;0.815;0.8129;0.8133;0.8345;0.8328;0.8345;0.8324;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
MLPClassifier;0.8032;0.8071;0.8032;0.8043;0.8316;0.8305;0.8316;0.8301;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
MLPClassifier;0.8129;0.8155;0.8129;0.8139;0.8414;0.8405;0.8414;0.8406;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
MLPClassifier;0.8036;0.8079;0.8036;0.8053;0.8557;0.8562;0.8557;0.8549;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.799;0.8052;0.799;0.7998;0.8351;0.8334;0.8351;0.8337;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.809;0.8134;0.809;0.8101;0.8345;0.837;0.8345;0.8354;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8093;0.8121;0.8093;0.8105;0.8557;0.8535;0.8557;0.8542;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
MLPClassifier;0.8155;0.8181;0.8155;0.8163;0.8385;0.8374;0.8385;0.8366;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8025;0.8078;0.8025;0.804;0.8621;0.8606;0.8621;0.8596;0.8333;0.8333;0.8333;0.8333;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
DecisionTreeClassifier;0.837;0.8381;0.837;0.8372;0.831;0.8334;0.831;0.8311;0.8333;0.8357;0.8333;0.8331;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
DecisionTreeClassifier;0.8427;0.8436;0.8427;0.843;0.8345;0.8374;0.8345;0.8352;0.8333;0.8341;0.8333;0.8327;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=821)
DecisionTreeClassifier;0.8936;0.8949;0.8936;0.8936;0.8759;0.8785;0.8759;0.8743;0.8333;0.8341;0.8333;0.8327;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
SVC;0.7796;0.7946;0.7796;0.7821;0.8345;0.8366;0.8345;0.8347;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 464};SVC(C=10, random_state=464)
SVC;0.7811;0.7957;0.7811;0.7836;0.8414;0.8403;0.8414;0.8403;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7802;0.7956;0.7802;0.7824;0.8557;0.8553;0.8557;0.8554;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 437};SVC(C=10, random_state=437)
SVC;0.7784;0.7931;0.7784;0.7802;0.831;0.8389;0.831;0.828;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
MLPClassifier;0.8006;0.8047;0.8006;0.8018;0.8414;0.8474;0.8414;0.8405;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
SVC;0.781;0.7977;0.781;0.7835;0.8557;0.8555;0.8557;0.8527;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.7749;0.7894;0.7749;0.7773;0.8866;0.8856;0.8866;0.8855;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 194};SVC(C=10, random_state=194)
SVC;0.7814;0.7961;0.7814;0.7837;0.8385;0.8371;0.8385;0.837;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7807;0.7952;0.7807;0.7833;0.8517;0.8574;0.8517;0.8471;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 805};SVC(C=10, random_state=805)
SVC;0.7853;0.8001;0.7853;0.7881;0.8034;0.8024;0.8034;0.8022;0.8333;0.8333;0.8333;0.8323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 652};SVC(C=10, random_state=652)
SVC;0.8618;0.8681;0.8618;0.8618;0.9;0.9026;0.9;0.8993;0.8333;0.8447;0.8333;0.8315;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
LogisticRegression;0.6949;0.7046;0.6949;0.6971;0.732;0.7656;0.732;0.738;0.8167;0.8289;0.8167;0.8197;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
LogisticRegression;0.6964;0.7062;0.6964;0.6985;0.7216;0.7451;0.7216;0.7247;0.8167;0.8289;0.8167;0.8197;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
LogisticRegression;0.6926;0.7022;0.6926;0.6954;0.732;0.7434;0.732;0.7349;0.8167;0.8289;0.8167;0.8197;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7037;0.713;0.7037;0.7061;0.6838;0.7217;0.6838;0.6856;0.8167;0.8264;0.8167;0.8194;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.6977;0.7079;0.6977;0.7001;0.7103;0.7396;0.7103;0.7139;0.8167;0.8264;0.8167;0.8194;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
RandomForestClassifier;0.8737;0.8743;0.8737;0.8738;0.8724;0.8725;0.8724;0.8723;0.8167;0.8386;0.8167;0.8194;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 967};RandomForestClassifier(n_estimators=20, random_state=967)
KNeighborsClassifier;0.8427;0.8471;0.8427;0.8429;0.8448;0.8512;0.8448;0.8449;0.8167;0.8386;0.8167;0.8194;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8362;0.8403;0.8362;0.8363;0.8586;0.8613;0.8586;0.8588;0.8167;0.8287;0.8167;0.819;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8595;0.8607;0.8595;0.8596;0.8724;0.8734;0.8724;0.8725;0.8167;0.8287;0.8167;0.819;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
KNeighborsClassifier;0.8308;0.8347;0.8308;0.8313;0.8797;0.8799;0.8797;0.8797;0.8167;0.8287;0.8167;0.819;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8427;0.847;0.8427;0.843;0.8655;0.8657;0.8655;0.8655;0.8167;0.8287;0.8167;0.819;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8312;0.8361;0.8312;0.832;0.9;0.9001;0.9;0.8999;0.8167;0.8285;0.8167;0.8184;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8691;0.87;0.8691;0.8692;0.8655;0.8676;0.8655;0.8656;0.8167;0.8285;0.8167;0.8184;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 78};RandomForestClassifier(n_estimators=10, random_state=78)
KNeighborsClassifier;0.8408;0.8444;0.8408;0.8411;0.8552;0.8563;0.8552;0.8552;0.8167;0.8285;0.8167;0.8184;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8875;0.888;0.8875;0.8876;0.869;0.8732;0.869;0.8693;0.8167;0.826;0.8167;0.8183;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=918)
DecisionTreeClassifier;0.8828;0.8841;0.8828;0.8831;0.8282;0.8335;0.8282;0.8289;0.8167;0.826;0.8167;0.8183;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.889;0.8898;0.889;0.889;0.8419;0.8433;0.8419;0.8396;0.8167;0.826;0.8167;0.8183;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
RandomForestClassifier;0.8668;0.8676;0.8668;0.867;0.8828;0.8826;0.8828;0.882;0.8167;0.8401;0.8167;0.8181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 78};RandomForestClassifier(n_estimators=10, random_state=78)
DecisionTreeClassifier;0.8795;0.881;0.8795;0.8798;0.8379;0.8419;0.8379;0.838;0.8167;0.8214;0.8167;0.8181;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
RandomForestClassifier;0.8684;0.8698;0.8684;0.8684;0.8517;0.8536;0.8517;0.8516;0.8167;0.8332;0.8167;0.8179;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 967};RandomForestClassifier(n_estimators=20, random_state=967)
RandomForestClassifier;0.8745;0.8758;0.8745;0.8745;0.8862;0.8874;0.8862;0.8856;0.8167;0.8332;0.8167;0.8179;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
RandomForestClassifier;0.8772;0.8782;0.8772;0.877;0.8345;0.8416;0.8345;0.8358;0.8167;0.8332;0.8167;0.8179;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 967};RandomForestClassifier(n_estimators=10, random_state=967)
KNeighborsClassifier;0.8361;0.841;0.8361;0.8369;0.8625;0.8683;0.8625;0.8604;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8343;0.8389;0.8343;0.8349;0.869;0.8695;0.869;0.8691;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8381;0.8431;0.8381;0.8386;0.8897;0.8895;0.8897;0.8895;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8412;0.8445;0.8412;0.8415;0.8621;0.8649;0.8621;0.8616;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.8657;0.8714;0.8657;0.8656;0.8966;0.8985;0.8966;0.8964;0.8167;0.8287;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
KNeighborsClassifier;0.837;0.8415;0.837;0.8379;0.8931;0.8938;0.8931;0.8925;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8313;0.8346;0.8313;0.8318;0.869;0.877;0.869;0.8696;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.842;0.8473;0.842;0.8426;0.8552;0.8553;0.8552;0.855;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8358;0.8398;0.8358;0.8364;0.8448;0.846;0.8448;0.8439;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.8113;0.8157;0.8113;0.8125;0.8179;0.8163;0.8179;0.8169;0.8167;0.8224;0.8167;0.8173;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 971, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=971)
KNeighborsClassifier;0.8393;0.8443;0.8393;0.8399;0.8379;0.8381;0.8379;0.8378;0.8167;0.8238;0.8167;0.8172;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8729;0.8736;0.8729;0.8731;0.8621;0.8639;0.8621;0.8621;0.8167;0.8238;0.8167;0.8172;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 967};RandomForestClassifier(n_estimators=20, random_state=967)
KNeighborsClassifier;0.8423;0.845;0.8423;0.8427;0.8414;0.8465;0.8414;0.8424;0.8167;0.8238;0.8167;0.8172;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8385;0.8415;0.8385;0.8389;0.8488;0.8548;0.8488;0.8496;0.8167;0.8238;0.8167;0.8172;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8476;0.8509;0.8476;0.8482;0.8832;0.8843;0.8832;0.8832;0.8167;0.8238;0.8167;0.8172;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8902;0.8908;0.8902;0.8904;0.8586;0.859;0.8586;0.8572;0.8167;0.8181;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
MLPClassifier;0.8094;0.8144;0.8094;0.811;0.8207;0.8202;0.8207;0.8203;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
MLPClassifier;0.755;0.7645;0.755;0.7559;0.8076;0.8075;0.8076;0.8075;0.8167;0.819;0.8167;0.8168;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
KNeighborsClassifier;0.8419;0.8471;0.8419;0.8424;0.8625;0.8636;0.8625;0.8621;0.8167;0.8344;0.8167;0.8167;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8324;0.838;0.8324;0.8327;0.9103;0.9113;0.9103;0.9103;0.8167;0.8344;0.8167;0.8167;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8706;0.8715;0.8706;0.8708;0.8517;0.8515;0.8517;0.8513;0.8167;0.8344;0.8167;0.8167;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
DecisionTreeClassifier;0.8254;0.8267;0.8254;0.8257;0.8316;0.8363;0.8316;0.8316;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=174)
DecisionTreeClassifier;0.83;0.8308;0.83;0.8302;0.8316;0.8355;0.8316;0.8323;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 821};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=821)
MLPClassifier;0.7447;0.7571;0.7447;0.746;0.7931;0.8065;0.7931;0.7951;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.7447;0.7557;0.7447;0.7449;0.7862;0.7858;0.7862;0.785;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
MLPClassifier;0.7512;0.762;0.7512;0.753;0.8069;0.8081;0.8069;0.807;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.7535;0.7643;0.7535;0.7549;0.8345;0.8356;0.8345;0.8347;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.7553;0.7644;0.7553;0.7572;0.8385;0.8472;0.8385;0.8399;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.7578;0.7645;0.7578;0.7592;0.7931;0.793;0.7931;0.7929;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
DecisionTreeClassifier;0.8282;0.8286;0.8282;0.8284;0.8172;0.8242;0.8172;0.8187;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=290)
DecisionTreeClassifier;0.8274;0.8289;0.8274;0.8275;0.8586;0.8628;0.8586;0.859;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=842)
DecisionTreeClassifier;0.8408;0.8423;0.8408;0.8411;0.8345;0.844;0.8345;0.8347;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=870)
DecisionTreeClassifier;0.8435;0.8447;0.8435;0.8437;0.8207;0.825;0.8207;0.821;0.8167;0.8172;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=290)
DecisionTreeClassifier;0.8339;0.8354;0.8339;0.8344;0.8103;0.8194;0.8103;0.8116;0.8167;0.8215;0.8167;0.8165;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=919)
DecisionTreeClassifier;0.8308;0.8323;0.8308;0.8311;0.8076;0.8108;0.8076;0.8062;0.8167;0.8215;0.8167;0.8165;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=919)
DecisionTreeClassifier;0.8963;0.8979;0.8963;0.8964;0.8414;0.8411;0.8414;0.8408;0.8167;0.8187;0.8167;0.8163;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=745)
MLPClassifier;0.8144;0.8175;0.8144;0.8148;0.8103;0.8133;0.8103;0.8045;0.8167;0.8163;0.8167;0.8162;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 690, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=690)
SVC;0.8649;0.8699;0.8649;0.8646;0.9038;0.9057;0.9038;0.904;0.8167;0.8217;0.8167;0.816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
DecisionTreeClassifier;0.8316;0.8337;0.8316;0.8319;0.869;0.8698;0.869;0.8692;0.8167;0.8193;0.8167;0.8157;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=870)
DecisionTreeClassifier;0.8825;0.8832;0.8825;0.8826;0.8625;0.867;0.8625;0.8612;0.8167;0.8228;0.8167;0.8156;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
DecisionTreeClassifier;0.8902;0.8908;0.8902;0.8903;0.8448;0.8463;0.8448;0.8452;0.8167;0.8184;0.8167;0.8153;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=745)
DecisionTreeClassifier;0.8825;0.8839;0.8825;0.8825;0.8316;0.8298;0.8316;0.8301;0.8167;0.8184;0.8167;0.8153;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
DecisionTreeClassifier;0.8883;0.8891;0.8883;0.8884;0.8655;0.8654;0.8655;0.8649;0.8167;0.8184;0.8167;0.8153;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=745)
DecisionTreeClassifier;0.879;0.8814;0.879;0.8794;0.8351;0.8435;0.8351;0.8348;0.8167;0.8178;0.8167;0.8148;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8959;0.8963;0.8959;0.8956;0.8316;0.8393;0.8316;0.8322;0.8167;0.8178;0.8167;0.8148;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=918)
DecisionTreeClassifier;0.827;0.8283;0.827;0.8273;0.8655;0.8689;0.8655;0.8661;0.8167;0.8187;0.8167;0.8147;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=919)
DecisionTreeClassifier;0.8867;0.8877;0.8867;0.8868;0.8172;0.8217;0.8172;0.8174;0.8167;0.8148;0.8167;0.8147;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
DecisionTreeClassifier;0.8844;0.8857;0.8844;0.8845;0.8966;0.8969;0.8966;0.8964;0.8167;0.8148;0.8167;0.8147;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
SVC;0.8025;0.8237;0.8025;0.8014;0.8207;0.8217;0.8207;0.8199;0.8167;0.8171;0.8167;0.8144;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8109;0.8291;0.8109;0.809;0.7966;0.7966;0.7966;0.7957;0.8167;0.8171;0.8167;0.8144;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
SVC;0.8033;0.8243;0.8033;0.8012;0.8172;0.8179;0.8172;0.8167;0.8167;0.8171;0.8167;0.8144;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8052;0.8242;0.8052;0.8031;0.8552;0.8575;0.8552;0.8553;0.8167;0.8171;0.8167;0.8144;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
LogisticRegression;0.7042;0.7165;0.7042;0.7069;0.7448;0.7601;0.7448;0.7471;0.8167;0.8158;0.8167;0.8133;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.7107;0.7205;0.7107;0.7125;0.6759;0.6837;0.6759;0.674;0.8167;0.8133;0.8167;0.8126;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
RandomForestClassifier;0.8603;0.8622;0.8603;0.8603;0.8969;0.8977;0.8969;0.897;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
RandomForestClassifier;0.8615;0.8631;0.8615;0.8616;0.9138;0.9138;0.9138;0.9138;0.8;0.8288;0.8;0.8034;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 78};RandomForestClassifier(n_estimators=20, random_state=78)
KNeighborsClassifier;0.8377;0.8405;0.8377;0.8378;0.8419;0.8417;0.8419;0.8416;0.8;0.8171;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8351;0.8382;0.8351;0.8354;0.8724;0.8738;0.8724;0.8722;0.8;0.8171;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8335;0.8383;0.8335;0.8342;0.8729;0.8739;0.8729;0.8724;0.8;0.8171;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.6964;0.7066;0.6964;0.6991;0.7148;0.7377;0.7148;0.7176;0.8;0.8089;0.8;0.8023;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.6981;0.7079;0.6981;0.7008;0.7379;0.7489;0.7379;0.74;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.6942;0.7053;0.6942;0.6971;0.7241;0.7392;0.7241;0.7279;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.6969;0.7059;0.6969;0.6992;0.7345;0.7573;0.7345;0.7377;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.703;0.715;0.703;0.7058;0.6966;0.728;0.6966;0.698;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.6999;0.7095;0.6999;0.7023;0.7034;0.7326;0.7034;0.7076;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.7014;0.7097;0.7014;0.7031;0.6976;0.7308;0.6976;0.7031;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.6923;0.7024;0.6923;0.6948;0.7069;0.7288;0.7069;0.7111;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.7;0.7104;0.7;0.7025;0.7207;0.7428;0.7207;0.7233;0.8;0.8069;0.8;0.8021;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
SVC;0.8599;0.8668;0.8599;0.8599;0.9034;0.9039;0.9034;0.9035;0.8;0.8153;0.8;0.802;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
DecisionTreeClassifier;0.8928;0.8936;0.8928;0.893;0.8488;0.8522;0.8488;0.8488;0.8;0.8079;0.8;0.8018;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=745)
DecisionTreeClassifier;0.8855;0.8863;0.8855;0.8856;0.8076;0.8168;0.8076;0.8069;0.8;0.8079;0.8;0.8018;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 745};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=745)
RandomForestClassifier;0.8721;0.8727;0.8721;0.8721;0.8763;0.8765;0.8763;0.8761;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 967};RandomForestClassifier(n_estimators=10, random_state=967)
KNeighborsClassifier;0.8389;0.8426;0.8389;0.8394;0.8241;0.8271;0.8241;0.8243;0.8;0.8166;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8909;0.8911;0.8909;0.8909;0.8241;0.8341;0.8241;0.8246;0.8;0.8125;0.8;0.8016;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
RandomForestClassifier;0.8645;0.8654;0.8645;0.8646;0.8759;0.8765;0.8759;0.8759;0.8;0.8109;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 176};RandomForestClassifier(n_estimators=10, random_state=176)
KNeighborsClassifier;0.8254;0.83;0.8254;0.8258;0.8625;0.8645;0.8625;0.8628;0.8;0.8109;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8691;0.8699;0.8691;0.8692;0.8862;0.8864;0.8862;0.8862;0.8;0.8109;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
KNeighborsClassifier;0.8316;0.8359;0.8316;0.8323;0.8385;0.8403;0.8385;0.8386;0.8;0.8109;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8668;0.8685;0.8668;0.8671;0.8586;0.862;0.8586;0.8583;0.8;0.819;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 78};RandomForestClassifier(n_estimators=20, random_state=78)
DecisionTreeClassifier;0.8775;0.8795;0.8775;0.8776;0.8207;0.8252;0.8207;0.8198;0.8;0.8038;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=918)
DecisionTreeClassifier;0.8886;0.8888;0.8886;0.8885;0.8419;0.8462;0.8419;0.8423;0.8;0.8038;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=678)
LogisticRegression;0.7061;0.7166;0.7061;0.7083;0.6759;0.7208;0.6759;0.6763;0.8;0.8021;0.8;0.8007;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
MLPClassifier;0.752;0.7605;0.752;0.7529;0.8276;0.8289;0.8276;0.8274;0.8;0.8058;0.8;0.8007;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
SVC;0.8653;0.8721;0.8653;0.8654;0.8828;0.8849;0.8828;0.8825;0.8;0.8072;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.8638;0.87;0.8638;0.8641;0.9069;0.9097;0.9069;0.9067;0.8;0.8072;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
MLPClassifier;0.8083;0.8106;0.8083;0.8091;0.8621;0.8611;0.8621;0.8598;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
MLPClassifier;0.8056;0.8099;0.8056;0.8069;0.8621;0.8613;0.8621;0.8611;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
SVC;0.8657;0.8722;0.8657;0.866;0.8759;0.8758;0.8759;0.8758;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
SVC;0.8618;0.8673;0.8618;0.8617;0.9207;0.9213;0.9207;0.9207;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.8645;0.8714;0.8645;0.8644;0.8759;0.8804;0.8759;0.8762;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
SVC;0.8618;0.8693;0.8618;0.8616;0.8969;0.8971;0.8969;0.8969;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
SVC;0.8684;0.8742;0.8684;0.8682;0.8724;0.8794;0.8724;0.8722;0.8;0.8057;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
MLPClassifier;0.7442;0.7534;0.7442;0.7449;0.7938;0.7971;0.7938;0.7934;0.8;0.8013;0.8;0.8003;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
KNeighborsClassifier;0.8351;0.8388;0.8351;0.8356;0.869;0.8732;0.869;0.8694;0.8;0.8111;0.8;0.8002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8381;0.8423;0.8381;0.8385;0.8621;0.8649;0.8621;0.8622;0.8;0.8111;0.8;0.8002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8327;0.8367;0.8327;0.8333;0.8316;0.8334;0.8316;0.8308;0.8;0.8111;0.8;0.8002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8404;0.8458;0.8404;0.8408;0.8345;0.8338;0.8345;0.833;0.8;0.8111;0.8;0.8002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8695;0.8707;0.8695;0.8693;0.8828;0.8837;0.8828;0.8829;0.8;0.8111;0.8;0.8002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 996};RandomForestClassifier(n_estimators=20, random_state=996)
MLPClassifier;0.7631;0.7723;0.7631;0.7649;0.7828;0.7843;0.7828;0.7813;0.8;0.8;0.8;0.8;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.7486;0.7577;0.7486;0.7503;0.8276;0.8281;0.8276;0.8271;0.8;0.8;0.8;0.8;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.744;0.7563;0.744;0.7447;0.8379;0.8378;0.8379;0.8378;0.8;0.8;0.8;0.8;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
RandomForestClassifier;0.868;0.8687;0.868;0.8682;0.8655;0.8663;0.8655;0.8652;0.8;0.8178;0.8;0.8;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
RandomForestClassifier;0.8687;0.8696;0.8687;0.8687;0.8724;0.8748;0.8724;0.8726;0.8;0.8178;0.8;0.8;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
MLPClassifier;0.7501;0.7588;0.7501;0.7512;0.8241;0.8249;0.8241;0.8231;0.8;0.8014;0.8;0.7998;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.7367;0.7488;0.7367;0.7377;0.8448;0.8587;0.8448;0.8463;0.8;0.8014;0.8;0.7998;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
SVC;0.8672;0.8721;0.8672;0.8671;0.869;0.8704;0.869;0.8676;0.8;0.8014;0.8;0.7998;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
SVC;0.8615;0.867;0.8615;0.8612;0.9172;0.9188;0.9172;0.917;0.8;0.8014;0.8;0.7998;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
SVC;0.8588;0.8648;0.8588;0.8586;0.9034;0.9057;0.9034;0.9029;0.8;0.8014;0.8;0.7998;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
MLPClassifier;0.8676;0.8733;0.8676;0.8681;0.9034;0.9093;0.9034;0.9032;0.8;0.8144;0.8;0.7997;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.8668;0.8715;0.8668;0.8669;0.8862;0.8864;0.8862;0.8862;0.8;0.8144;0.8;0.7997;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
MLPClassifier;0.7551;0.7659;0.7551;0.7569;0.7828;0.783;0.7828;0.7818;0.8;0.8016;0.8;0.7997;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
MLPClassifier;0.8699;0.8742;0.8699;0.87;0.8862;0.8914;0.8862;0.8872;0.8;0.8144;0.8;0.7997;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
SVC;0.8641;0.87;0.8641;0.8639;0.8866;0.8912;0.8866;0.886;0.8;0.802;0.8;0.7997;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
MLPClassifier;0.8247;0.8321;0.8247;0.8243;0.8448;0.8448;0.8448;0.8441;0.8;0.7997;0.8;0.7995;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.8204;0.828;0.8204;0.8198;0.8179;0.8187;0.8179;0.8175;0.8;0.7997;0.8;0.7995;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.8282;0.8327;0.8282;0.8279;0.8483;0.8488;0.8483;0.848;0.8;0.7997;0.8;0.7995;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8224;0.8319;0.8224;0.8217;0.8247;0.8249;0.8247;0.8247;0.8;0.7997;0.8;0.7995;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
MLPClassifier;0.8282;0.8339;0.8282;0.8281;0.8207;0.8211;0.8207;0.8195;0.8;0.7997;0.8;0.7995;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
DecisionTreeClassifier;0.8798;0.8809;0.8798;0.8798;0.8625;0.8631;0.8625;0.8611;0.8;0.8042;0.8;0.7992;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=918)
MLPClassifier;0.8664;0.8713;0.8664;0.8666;0.9141;0.9143;0.9141;0.9141;0.8;0.8068;0.8;0.7989;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
SVC;0.8649;0.8717;0.8649;0.865;0.8793;0.8814;0.8793;0.8793;0.8;0.8018;0.8;0.7986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
SVC;0.8641;0.8707;0.8641;0.8642;0.869;0.8697;0.869;0.8679;0.8;0.8018;0.8;0.7986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
SVC;0.861;0.8671;0.861;0.8611;0.9107;0.9123;0.9107;0.9108;0.8;0.8018;0.8;0.7986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
KNeighborsClassifier;0.8986;0.9014;0.8986;0.8986;0.9034;0.9073;0.9034;0.9037;0.8;0.8018;0.8;0.7986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
SVC;0.8048;0.824;0.8048;0.8027;0.8522;0.8549;0.8522;0.8524;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
SVC;0.8079;0.8282;0.8079;0.8054;0.8138;0.8138;0.8138;0.8135;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
SVC;0.8044;0.8236;0.8044;0.8021;0.8621;0.8631;0.8621;0.8621;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
SVC;0.8005;0.8214;0.8005;0.7987;0.8522;0.8518;0.8522;0.8516;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
SVC;0.8063;0.8255;0.8063;0.8047;0.8276;0.8282;0.8276;0.827;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.8021;0.8234;0.8021;0.7998;0.8586;0.8607;0.8586;0.858;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
MLPClassifier;0.8274;0.8322;0.8274;0.8273;0.8419;0.8417;0.8419;0.8413;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
SVC;0.8048;0.8237;0.8048;0.8031;0.8213;0.8331;0.8213;0.822;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
SVC;0.8029;0.8236;0.8029;0.8007;0.8414;0.8417;0.8414;0.8413;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
MLPClassifier;0.8258;0.8303;0.8258;0.8257;0.8247;0.8288;0.8247;0.825;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.8365;0.8394;0.8365;0.8365;0.7938;0.794;0.7938;0.7936;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
SVC;0.7998;0.8204;0.7998;0.7983;0.8351;0.8345;0.8351;0.8343;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.8056;0.8254;0.8056;0.803;0.8552;0.8556;0.8552;0.855;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
SVC;0.8044;0.8247;0.8044;0.8019;0.8448;0.8448;0.8448;0.8448;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8064;0.8251;0.8064;0.8043;0.8552;0.8587;0.8552;0.8554;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8017;0.8209;0.8017;0.7996;0.8385;0.8409;0.8385;0.8384;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8052;0.8239;0.8052;0.8031;0.8621;0.8645;0.8621;0.8617;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8037;0.8249;0.8037;0.8022;0.8448;0.8482;0.8448;0.8451;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
DecisionTreeClassifier;0.8358;0.837;0.8358;0.8362;0.8282;0.8334;0.8282;0.8289;0.8;0.8052;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 842};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=842)
SVC;0.8048;0.8252;0.8048;0.8034;0.8414;0.8419;0.8414;0.841;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
SVC;0.8025;0.8227;0.8025;0.8003;0.8247;0.8252;0.8247;0.8228;0.8;0.7989;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
SVC;0.8006;0.823;0.8006;0.7985;0.869;0.8705;0.869;0.8693;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8047;0.8244;0.8047;0.803;0.8247;0.8245;0.8247;0.8237;0.8;0.8019;0.8;0.7985;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
LogisticRegression;0.6965;0.7054;0.6965;0.6987;0.7034;0.7015;0.7034;0.7013;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.6965;0.7045;0.6965;0.6987;0.7241;0.7245;0.7241;0.7231;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.7006;0.7109;0.7006;0.7032;0.701;0.7048;0.701;0.7024;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.6981;0.7074;0.6981;0.7002;0.7;0.7027;0.7;0.7008;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.6977;0.7077;0.6977;0.7006;0.6862;0.6913;0.6862;0.6877;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.7076;0.7168;0.7076;0.7097;0.6517;0.6647;0.6517;0.6544;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.6984;0.7072;0.6984;0.7009;0.7103;0.7134;0.7103;0.7106;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
LogisticRegression;0.7;0.7087;0.7;0.7027;0.6759;0.6787;0.6759;0.6749;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.6981;0.7071;0.6981;0.7005;0.7138;0.7134;0.7138;0.7136;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.7025;0.7115;0.7025;0.7046;0.6735;0.6794;0.6735;0.6755;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.6969;0.7069;0.6969;0.699;0.6552;0.6517;0.6552;0.6527;0.8;0.7966;0.8;0.794;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.6964;0.7039;0.6964;0.6986;0.7045;0.7352;0.7045;0.7092;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.7003;0.7072;0.7003;0.7025;0.7138;0.7302;0.7138;0.7178;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.6933;0.7021;0.6933;0.6948;0.7491;0.7693;0.7491;0.753;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.692;0.7005;0.692;0.6942;0.7483;0.7664;0.7483;0.7518;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.6946;0.7029;0.6946;0.6968;0.731;0.7558;0.731;0.7342;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7038;0.7133;0.7038;0.7061;0.6828;0.7331;0.6828;0.6891;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.6979;0.707;0.6979;0.7002;0.6873;0.7163;0.6873;0.6929;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.695;0.705;0.695;0.6972;0.7448;0.7608;0.7448;0.7487;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
LogisticRegression;0.7007;0.7093;0.7007;0.7026;0.731;0.7582;0.731;0.733;0.7833;0.7944;0.7833;0.7868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.7038;0.7115;0.7038;0.7059;0.6793;0.7175;0.6793;0.6826;0.7833;0.7963;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
KNeighborsClassifier;0.8385;0.8423;0.8385;0.8388;0.8207;0.8211;0.8207;0.8204;0.7833;0.7986;0.7833;0.7853;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8703;0.8716;0.8703;0.8704;0.8345;0.8347;0.8345;0.8342;0.7833;0.8111;0.7833;0.7851;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 176};RandomForestClassifier(n_estimators=20, random_state=176)
LogisticRegression;0.6996;0.7098;0.6996;0.7019;0.7;0.7379;0.7;0.7041;0.7833;0.7927;0.7833;0.785;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.6956;0.702;0.6956;0.6974;0.7079;0.7274;0.7079;0.7118;0.7833;0.7904;0.7833;0.7847;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
KNeighborsClassifier;0.8343;0.8382;0.8343;0.8349;0.8586;0.86;0.8586;0.8582;0.7833;0.799;0.7833;0.7846;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.8657;0.8718;0.8657;0.8658;0.8931;0.8947;0.8931;0.8933;0.7833;0.7905;0.7833;0.7844;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
SVC;0.8641;0.8701;0.8641;0.8642;0.8966;0.9033;0.8966;0.8966;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
DecisionTreeClassifier;0.9032;0.905;0.9032;0.9033;0.9241;0.9252;0.9241;0.9242;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.9101;0.9106;0.9101;0.91;0.9;0.9015;0.9;0.9001;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
SVC;0.8599;0.8669;0.8599;0.8599;0.9069;0.9069;0.9069;0.9068;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
SVC;0.8656;0.8717;0.8656;0.8656;0.8969;0.8982;0.8969;0.8969;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
SVC;0.8668;0.8719;0.8668;0.8666;0.8655;0.8718;0.8655;0.8652;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
SVC;0.8584;0.8646;0.8584;0.8583;0.8966;0.8965;0.8966;0.8965;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
SVC;0.8664;0.8723;0.8664;0.8663;0.9;0.9011;0.9;0.9;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
SVC;0.8634;0.8702;0.8634;0.8634;0.8897;0.892;0.8897;0.8894;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
SVC;0.8611;0.868;0.8611;0.8611;0.9103;0.9111;0.9103;0.9101;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
SVC;0.8607;0.8665;0.8607;0.8607;0.8621;0.8651;0.8621;0.8617;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.8588;0.866;0.8588;0.859;0.9138;0.9144;0.9138;0.9138;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
SVC;0.8569;0.8624;0.8569;0.8568;0.9138;0.9155;0.9138;0.914;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
SVC;0.868;0.8742;0.868;0.8679;0.8828;0.8838;0.8828;0.8826;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
DecisionTreeClassifier;0.9112;0.9117;0.9112;0.9111;0.9172;0.9203;0.9172;0.9172;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
SVC;0.8614;0.8685;0.8614;0.8614;0.8763;0.8817;0.8763;0.8748;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
SVC;0.8656;0.872;0.8656;0.8655;0.8935;0.8962;0.8935;0.8937;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.8648;0.8703;0.8648;0.8648;0.9072;0.9073;0.9072;0.9073;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.8607;0.8669;0.8607;0.8605;0.9347;0.9356;0.9347;0.9346;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
KNeighborsClassifier;0.8408;0.8429;0.8408;0.8413;0.8454;0.8484;0.8454;0.8455;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.9059;0.907;0.9059;0.9059;0.9345;0.9383;0.9345;0.9342;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
SVC;0.863;0.8691;0.863;0.863;0.8694;0.8709;0.8694;0.8692;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
SVC;0.8599;0.8664;0.8599;0.8599;0.9034;0.904;0.9034;0.9032;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
SVC;0.8645;0.8706;0.8645;0.8645;0.8935;0.894;0.8935;0.8936;0.7833;0.7934;0.7833;0.7843;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
SVC;0.863;0.8679;0.863;0.8628;0.9034;0.9072;0.9034;0.9033;0.7833;0.7869;0.7833;0.7838;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
DecisionTreeClassifier;0.8454;0.8463;0.8454;0.8455;0.7931;0.7977;0.7931;0.7931;0.7833;0.7847;0.7833;0.7837;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 174};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=174)
DecisionTreeClassifier;0.8974;0.8985;0.8974;0.8974;0.8591;0.8604;0.8591;0.859;0.7833;0.7897;0.7833;0.7836;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
MLPClassifier;0.8155;0.8182;0.8155;0.8165;0.8414;0.8407;0.8414;0.8401;0.7833;0.7897;0.7833;0.7836;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 721, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=721)
MLPClassifier;0.8094;0.8141;0.8094;0.8098;0.7931;0.7921;0.7931;0.7909;0.7833;0.7897;0.7833;0.7836;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 85, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=85)
RandomForestClassifier;0.8695;0.8702;0.8695;0.8696;0.8586;0.8592;0.8586;0.8584;0.7833;0.7944;0.7833;0.7835;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 90};RandomForestClassifier(n_estimators=20, random_state=90)
RandomForestClassifier;0.8637;0.8649;0.8637;0.8638;0.8414;0.8414;0.8414;0.8411;0.7833;0.8002;0.7833;0.7833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 78};RandomForestClassifier(n_estimators=20, random_state=78)
SVC;0.8596;0.8654;0.8596;0.8594;0.9207;0.922;0.9207;0.9205;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
MLPClassifier;0.7665;0.7751;0.7665;0.7682;0.8034;0.8028;0.8034;0.8023;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
MLPClassifier;0.7524;0.7614;0.7524;0.7533;0.8517;0.8508;0.8517;0.8511;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
SVC;0.8622;0.8689;0.8622;0.8622;0.89;0.8905;0.89;0.8901;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
SVC;0.8649;0.8703;0.8649;0.8648;0.8724;0.8757;0.8724;0.8716;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
MLPClassifier;0.75;0.7609;0.75;0.7509;0.8241;0.8253;0.8241;0.8243;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
SVC;0.8657;0.8704;0.8657;0.8656;0.9103;0.9104;0.9103;0.9098;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
MLPClassifier;0.7551;0.7636;0.7551;0.7564;0.8172;0.8172;0.8172;0.8172;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.7654;0.7728;0.7654;0.767;0.8207;0.8286;0.8207;0.8206;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
SVC;0.8634;0.869;0.8634;0.8633;0.9172;0.9173;0.9172;0.9173;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.8653;0.8712;0.8653;0.8651;0.8862;0.8862;0.8862;0.8862;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
MLPClassifier;0.7562;0.7644;0.7562;0.7576;0.8448;0.8455;0.8448;0.8451;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
MLPClassifier;0.8258;0.8329;0.8258;0.8248;0.866;0.8664;0.866;0.8658;0.7833;0.7838;0.7833;0.7832;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
SVC;0.8664;0.8724;0.8664;0.8664;0.9072;0.9075;0.9072;0.9072;0.7833;0.7873;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
SVC;0.8614;0.867;0.8614;0.8613;0.9003;0.9023;0.9003;0.9005;0.7833;0.7873;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
DecisionTreeClassifier;0.8901;0.8914;0.8901;0.8903;0.8041;0.8005;0.8041;0.8;0.7833;0.7917;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 750};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=750)
SVC;0.8645;0.8701;0.8645;0.8643;0.8828;0.8876;0.8828;0.8831;0.7833;0.7873;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.8653;0.8709;0.8653;0.8655;0.8793;0.8819;0.8793;0.879;0.7833;0.7873;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
SVC;0.8653;0.8713;0.8653;0.8653;0.8931;0.8942;0.8931;0.8932;0.7833;0.7873;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 994};SVC(C=10, random_state=994)
SVC;0.8672;0.8735;0.8672;0.8674;0.8591;0.8642;0.8591;0.8581;0.7833;0.7873;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
SVC;0.8618;0.8682;0.8618;0.8617;0.8862;0.8872;0.8862;0.8861;0.7833;0.7873;0.7833;0.7831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 658};SVC(C=10, random_state=658)
MLPClassifier;0.8714;0.8763;0.8714;0.8716;0.8862;0.8928;0.8862;0.8869;0.7833;0.792;0.7833;0.783;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8671;0.8729;0.8671;0.8674;0.8729;0.8782;0.8729;0.8733;0.7833;0.792;0.7833;0.783;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
KNeighborsClassifier;0.8397;0.8426;0.8397;0.8395;0.8;0.8021;0.8;0.8004;0.7833;0.7854;0.7833;0.783;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8251;0.829;0.8251;0.8249;0.8517;0.8521;0.8517;0.8518;0.7833;0.783;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8197;0.8251;0.8197;0.8192;0.8759;0.8763;0.8759;0.8759;0.7833;0.783;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
KNeighborsClassifier;0.8457;0.8491;0.8457;0.8461;0.8522;0.8522;0.8522;0.8519;0.7833;0.7989;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.83;0.8332;0.83;0.8299;0.8385;0.8403;0.8385;0.8383;0.7833;0.783;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8251;0.8336;0.8251;0.824;0.8172;0.822;0.8172;0.817;0.7833;0.783;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
SVC;0.8603;0.8671;0.8603;0.8605;0.8969;0.8979;0.8969;0.897;0.7833;0.783;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
MLPClassifier;0.827;0.8309;0.827;0.8269;0.8621;0.8619;0.8621;0.8614;0.7833;0.783;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
KNeighborsClassifier;0.8358;0.84;0.8358;0.8365;0.869;0.869;0.869;0.8688;0.7833;0.7989;0.7833;0.7828;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9104;0.9121;0.9104;0.9104;0.8866;0.889;0.8866;0.8869;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9058;0.9064;0.9058;0.9058;0.9107;0.9129;0.9107;0.9104;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.9035;0.9049;0.9035;0.9035;0.9107;0.9135;0.9107;0.9108;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
MLPClassifier;0.7539;0.764;0.7539;0.7556;0.8138;0.8219;0.8138;0.8149;0.7833;0.7863;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.7485;0.7579;0.7485;0.7499;0.7938;0.7962;0.7938;0.7919;0.7833;0.7863;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.7486;0.7573;0.7486;0.7497;0.8034;0.8078;0.8034;0.8039;0.7833;0.7863;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.7535;0.763;0.7535;0.7548;0.7938;0.7962;0.7938;0.7943;0.7833;0.7863;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
DecisionTreeClassifier;0.9081;0.9093;0.9081;0.9083;0.921;0.9214;0.921;0.9211;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
SVC;0.8599;0.8664;0.8599;0.8599;0.9141;0.9155;0.9141;0.914;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
MLPClassifier;0.7516;0.7614;0.7516;0.7529;0.8517;0.8523;0.8517;0.8508;0.7833;0.7863;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
DecisionTreeClassifier;0.9051;0.9058;0.9051;0.9052;0.9107;0.9132;0.9107;0.9109;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.9086;0.91;0.9086;0.9086;0.9414;0.9416;0.9414;0.9414;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.8993;0.9003;0.8993;0.8994;0.921;0.9228;0.921;0.9214;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
DecisionTreeClassifier;0.9101;0.9109;0.9101;0.9101;0.9069;0.9083;0.9069;0.9068;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.9116;0.9122;0.9116;0.9116;0.9072;0.9092;0.9072;0.907;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
DecisionTreeClassifier;0.9081;0.9094;0.9081;0.9082;0.9103;0.914;0.9103;0.9106;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
DecisionTreeClassifier;0.9097;0.9109;0.9097;0.9095;0.9003;0.9036;0.9003;0.9004;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
DecisionTreeClassifier;0.9105;0.9109;0.9105;0.9104;0.9172;0.9179;0.9172;0.9171;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
DecisionTreeClassifier;0.8305;0.8318;0.8305;0.8308;0.8241;0.8249;0.8241;0.8226;0.7833;0.7863;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 290};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=290)
DecisionTreeClassifier;0.9031;0.904;0.9031;0.9032;0.9313;0.9324;0.9313;0.9313;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
DecisionTreeClassifier;0.9051;0.9057;0.9051;0.9051;0.9172;0.9178;0.9172;0.9173;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.912;0.9128;0.912;0.9119;0.9138;0.9156;0.9138;0.914;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.9081;0.9093;0.9081;0.9081;0.9072;0.9091;0.9072;0.9073;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.907;0.9091;0.907;0.9069;0.9345;0.9367;0.9345;0.9343;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9078;0.9092;0.9078;0.9077;0.9103;0.9117;0.9103;0.9103;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9066;0.908;0.9066;0.9066;0.9034;0.9072;0.9034;0.9037;0.7833;0.7839;0.7833;0.7827;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
MLPClassifier;0.8699;0.8744;0.8699;0.87;0.9;0.9012;0.9;0.9002;0.7833;0.7868;0.7833;0.7826;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
DecisionTreeClassifier;0.8442;0.8459;0.8442;0.8446;0.8414;0.8423;0.8414;0.84;0.7833;0.7868;0.7833;0.7826;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 870};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=870)
SVC;0.7998;0.8202;0.7998;0.7973;0.8763;0.8764;0.8763;0.8763;0.7833;0.7876;0.7833;0.7825;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
MLPClassifier;0.7459;0.7564;0.7459;0.747;0.8103;0.816;0.8103;0.81;0.7833;0.7876;0.7833;0.7825;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
KNeighborsClassifier;0.9016;0.904;0.9016;0.9013;0.9069;0.9093;0.9069;0.9071;0.7833;0.7861;0.7833;0.7823;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.8278;0.836;0.8278;0.8273;0.831;0.8309;0.831;0.8309;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.7542;0.764;0.7542;0.7547;0.7698;0.7688;0.7698;0.7689;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.8239;0.8352;0.8239;0.823;0.8351;0.8353;0.8351;0.8342;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
SVC;0.7986;0.8194;0.7986;0.7963;0.866;0.8666;0.866;0.8658;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
MLPClassifier;0.8217;0.8274;0.8217;0.821;0.8759;0.877;0.8759;0.8756;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8255;0.8307;0.8255;0.8249;0.8655;0.8658;0.8655;0.8655;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.8277;0.8333;0.8277;0.8274;0.8488;0.8497;0.8488;0.849;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8661;0.8709;0.8661;0.8662;0.8966;0.8984;0.8966;0.8968;0.7833;0.7906;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.8224;0.8288;0.8224;0.8212;0.8724;0.8729;0.8724;0.8715;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.8228;0.8277;0.8228;0.8225;0.8828;0.8831;0.8828;0.882;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.8247;0.8309;0.8247;0.8239;0.8379;0.8385;0.8379;0.8373;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
MLPClassifier;0.814;0.8249;0.814;0.8129;0.8724;0.8742;0.8724;0.8717;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
MLPClassifier;0.7539;0.7638;0.7539;0.7557;0.7897;0.7901;0.7897;0.7884;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.8259;0.8327;0.8259;0.8249;0.8241;0.8264;0.8241;0.8246;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
MLPClassifier;0.8155;0.8217;0.8155;0.8142;0.8866;0.8865;0.8866;0.8862;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
MLPClassifier;0.832;0.8357;0.832;0.8317;0.8345;0.8343;0.8345;0.8342;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.8331;0.8345;0.8331;0.8332;0.8517;0.8518;0.8517;0.8512;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
MLPClassifier;0.8266;0.8316;0.8266;0.8268;0.8694;0.8709;0.8694;0.8696;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.8316;0.8357;0.8316;0.8315;0.8655;0.8665;0.8655;0.8656;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.8668;0.8718;0.8668;0.8668;0.9276;0.9284;0.9276;0.9278;0.7833;0.7906;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
MLPClassifier;0.8293;0.8323;0.8293;0.8293;0.8586;0.8593;0.8586;0.8566;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.8216;0.8325;0.8216;0.8209;0.8621;0.8625;0.8621;0.8621;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.8178;0.8249;0.8178;0.817;0.8655;0.8656;0.8655;0.8655;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.8181;0.8244;0.8181;0.8173;0.8694;0.8694;0.8694;0.8694;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.8243;0.8287;0.8243;0.8241;0.8621;0.8648;0.8621;0.8619;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
SVC;0.8048;0.8237;0.8048;0.8026;0.7931;0.7939;0.7931;0.7902;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8094;0.8294;0.8094;0.8073;0.8586;0.8597;0.8586;0.8586;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8056;0.8252;0.8056;0.8034;0.8586;0.8595;0.8586;0.8583;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.7994;0.8197;0.7994;0.7974;0.8729;0.8731;0.8729;0.872;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
SVC;0.7998;0.8218;0.7998;0.7982;0.8552;0.8565;0.8552;0.8547;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
SVC;0.8044;0.8242;0.8044;0.8024;0.8552;0.8554;0.8552;0.855;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
SVC;0.8064;0.8257;0.8064;0.8038;0.8069;0.8066;0.8069;0.8066;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
SVC;0.8044;0.8241;0.8044;0.8025;0.8241;0.8251;0.8241;0.8243;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.8063;0.8256;0.8063;0.8042;0.8517;0.853;0.8517;0.8516;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
SVC;0.8032;0.8235;0.8032;0.8013;0.8488;0.8494;0.8488;0.8478;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8052;0.8241;0.8052;0.8036;0.8379;0.8379;0.8379;0.8372;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
SVC;0.8063;0.8268;0.8063;0.8044;0.8454;0.8483;0.8454;0.8457;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8032;0.8231;0.8032;0.8006;0.8729;0.8763;0.8729;0.8734;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.8093;0.8276;0.8093;0.8074;0.8454;0.847;0.8454;0.8451;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.8048;0.8245;0.8048;0.8034;0.8379;0.838;0.8379;0.8374;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
SVC;0.8098;0.8288;0.8098;0.8079;0.8483;0.8518;0.8483;0.8476;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.8036;0.8233;0.8036;0.8017;0.8351;0.8368;0.8351;0.8355;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8025;0.8231;0.8025;0.8005;0.8552;0.8549;0.8552;0.855;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
SVC;0.8029;0.8219;0.8029;0.8009;0.869;0.8701;0.869;0.8689;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8014;0.8225;0.8014;0.7996;0.8414;0.8414;0.8414;0.8414;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.806;0.8262;0.806;0.8041;0.8207;0.8211;0.8207;0.8206;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
SVC;0.8025;0.8238;0.8025;0.8005;0.8586;0.8594;0.8586;0.8585;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
MLPClassifier;0.8148;0.8241;0.8148;0.8142;0.9172;0.9176;0.9172;0.9172;0.7833;0.7835;0.7833;0.7821;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8648;0.87;0.8648;0.8651;0.9313;0.9323;0.9313;0.9315;0.7833;0.8035;0.7833;0.7817;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
MLPClassifier;0.8759;0.8796;0.8759;0.8758;0.9038;0.904;0.9038;0.9036;0.7833;0.8035;0.7833;0.7817;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.871;0.8759;0.871;0.8712;0.9103;0.9105;0.9103;0.9102;0.7833;0.8035;0.7833;0.7817;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
MLPClassifier;0.871;0.8759;0.871;0.871;0.9241;0.9262;0.9241;0.9242;0.7833;0.8035;0.7833;0.7817;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8657;0.8707;0.8657;0.8658;0.8931;0.8933;0.8931;0.8929;0.7833;0.8035;0.7833;0.7817;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
MLPClassifier;0.8703;0.8734;0.8703;0.8702;0.9034;0.9042;0.9034;0.9035;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.8596;0.8642;0.8596;0.8595;0.9103;0.9119;0.9103;0.9105;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
MLPClassifier;0.8641;0.8687;0.8641;0.8646;0.9276;0.9318;0.9276;0.9276;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
MLPClassifier;0.8629;0.8688;0.8629;0.8633;0.9107;0.9123;0.9107;0.9104;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
MLPClassifier;0.8687;0.873;0.8687;0.8688;0.9103;0.912;0.9103;0.9104;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8657;0.8697;0.8657;0.8658;0.8759;0.8763;0.8759;0.8758;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8726;0.8767;0.8726;0.8727;0.9;0.9083;0.9;0.9005;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
MLPClassifier;0.8695;0.8738;0.8695;0.8696;0.8931;0.8945;0.8931;0.8922;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
MLPClassifier;0.8703;0.8742;0.8703;0.8702;0.9;0.9021;0.9;0.9002;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.8645;0.8693;0.8645;0.8647;0.9172;0.921;0.9172;0.9178;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
MLPClassifier;0.8657;0.8695;0.8657;0.8657;0.9379;0.9382;0.9379;0.9379;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
MLPClassifier;0.8618;0.8667;0.8618;0.8619;0.9244;0.9276;0.9244;0.9251;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
MLPClassifier;0.8687;0.8731;0.8687;0.8691;0.9034;0.9039;0.9034;0.9032;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
MLPClassifier;0.871;0.8747;0.871;0.871;0.8897;0.8919;0.8897;0.89;0.7833;0.8019;0.7833;0.7816;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
KNeighborsClassifier;0.8952;0.8971;0.8952;0.8949;0.9138;0.9165;0.9138;0.9138;0.7833;0.7877;0.7833;0.7814;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8959;0.8983;0.8959;0.8958;0.9379;0.9381;0.9379;0.938;0.7833;0.7877;0.7833;0.7814;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9051;0.9064;0.9051;0.905;0.9241;0.9264;0.9241;0.9245;0.7833;0.7877;0.7833;0.7814;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
SVC;0.7298;0.7663;0.7298;0.7287;0.7552;0.7695;0.7552;0.7571;0.7833;0.7877;0.7833;0.7814;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
KNeighborsClassifier;0.9024;0.9037;0.9024;0.9023;0.8966;0.8969;0.8966;0.8963;0.7833;0.7877;0.7833;0.7814;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8966;0.8984;0.8966;0.8965;0.9244;0.9263;0.9244;0.9248;0.7833;0.7877;0.7833;0.7814;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
SVC;0.7248;0.7605;0.7248;0.7236;0.8034;0.8128;0.8034;0.8028;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7264;0.7608;0.7264;0.7258;0.7931;0.8107;0.7931;0.7943;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7286;0.7626;0.7286;0.7282;0.8385;0.8474;0.8385;0.8389;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7309;0.767;0.7309;0.7292;0.8207;0.8267;0.8207;0.8204;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7306;0.7659;0.7306;0.7296;0.8034;0.8126;0.8034;0.8045;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.726;0.762;0.726;0.725;0.8;0.8161;0.8;0.8011;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7279;0.7647;0.7279;0.726;0.8103;0.8205;0.8103;0.8098;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7272;0.7612;0.7272;0.7259;0.8;0.8126;0.8;0.8025;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.732;0.767;0.732;0.7312;0.7595;0.7751;0.7595;0.758;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7256;0.761;0.7256;0.725;0.7862;0.799;0.7862;0.7871;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.736;0.771;0.736;0.7352;0.8;0.8089;0.8;0.8012;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7283;0.7626;0.7283;0.7271;0.8034;0.808;0.8034;0.8041;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7297;0.7648;0.7297;0.7293;0.8041;0.8242;0.8041;0.8041;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7366;0.7707;0.7366;0.7358;0.7732;0.7781;0.7732;0.7731;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7312;0.7651;0.7312;0.73;0.7801;0.7894;0.7801;0.7813;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7298;0.7658;0.7298;0.729;0.7862;0.7982;0.7862;0.7873;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7294;0.7649;0.7294;0.7286;0.8103;0.82;0.8103;0.8122;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7302;0.7644;0.7302;0.7293;0.8276;0.8315;0.8276;0.8283;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7278;0.7654;0.7278;0.7265;0.7663;0.7751;0.7663;0.768;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7283;0.7641;0.7283;0.7277;0.769;0.7702;0.769;0.7688;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 714};SVC(C=10, random_state=714)
SVC;0.7379;0.7718;0.7379;0.7365;0.7897;0.8012;0.7897;0.7893;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7298;0.766;0.7298;0.7288;0.8034;0.8085;0.8034;0.804;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7293;0.7623;0.7293;0.7287;0.8076;0.8206;0.8076;0.8089;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7298;0.7637;0.7298;0.729;0.8172;0.8225;0.8172;0.8183;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7305;0.7629;0.7305;0.7298;0.7732;0.8026;0.7732;0.7771;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.731;0.7651;0.731;0.7305;0.7517;0.767;0.7517;0.7531;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7279;0.7648;0.7279;0.7276;0.7862;0.7971;0.7862;0.7855;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7282;0.7633;0.7282;0.7276;0.7938;0.8005;0.7938;0.7948;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7291;0.7651;0.7291;0.7289;0.7483;0.7592;0.7483;0.7496;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7297;0.7653;0.7297;0.7273;0.8076;0.8126;0.8076;0.8093;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7289;0.7646;0.7289;0.7278;0.7973;0.8035;0.7973;0.7975;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7282;0.763;0.7282;0.727;0.7835;0.797;0.7835;0.7856;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7297;0.7651;0.7297;0.7278;0.7835;0.7859;0.7835;0.7837;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7359;0.7689;0.7359;0.7353;0.7862;0.7967;0.7862;0.7876;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7309;0.7648;0.7309;0.7294;0.7483;0.758;0.7483;0.7485;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7252;0.7636;0.7252;0.7235;0.8241;0.8308;0.8241;0.8256;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7283;0.7669;0.7283;0.7272;0.7655;0.7863;0.7655;0.764;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7321;0.7683;0.7321;0.7316;0.7966;0.8049;0.7966;0.7975;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7283;0.7633;0.7283;0.7277;0.8241;0.8287;0.8241;0.8246;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7317;0.7656;0.7317;0.731;0.7828;0.8009;0.7828;0.7807;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.729;0.7623;0.729;0.7283;0.8552;0.8639;0.8552;0.8565;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 237};SVC(C=10, random_state=237)
SVC;0.7316;0.7649;0.7316;0.7308;0.8144;0.8203;0.8144;0.8159;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7354;0.7712;0.7354;0.735;0.7354;0.7388;0.7354;0.7336;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7363;0.7701;0.7363;0.7346;0.7724;0.778;0.7724;0.7712;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 228};SVC(C=10, random_state=228)
SVC;0.7344;0.7674;0.7344;0.7336;0.7655;0.7817;0.7655;0.7664;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7329;0.7673;0.7329;0.7318;0.7966;0.8043;0.7966;0.7982;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7256;0.7629;0.7256;0.7254;0.8276;0.8325;0.8276;0.8281;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.731;0.7672;0.731;0.7301;0.7724;0.7814;0.7724;0.7717;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7356;0.7685;0.7356;0.7346;0.7931;0.7969;0.7931;0.794;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7351;0.7688;0.7351;0.7336;0.7526;0.7701;0.7526;0.7542;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7298;0.7651;0.7298;0.7293;0.7862;0.7956;0.7862;0.7853;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 687};SVC(C=10, random_state=687)
SVC;0.7278;0.7638;0.7278;0.7268;0.7835;0.8048;0.7835;0.7829;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7278;0.7633;0.7278;0.7273;0.8076;0.8161;0.8076;0.8081;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 978};SVC(C=10, random_state=978)
SVC;0.7202;0.7579;0.7202;0.7191;0.8172;0.8179;0.8172;0.8162;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7256;0.7618;0.7256;0.7247;0.8069;0.8198;0.8069;0.808;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7291;0.7645;0.7291;0.7284;0.8241;0.8312;0.8241;0.8251;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7306;0.764;0.7306;0.7296;0.7862;0.8018;0.7862;0.7886;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7283;0.7643;0.7283;0.7274;0.8207;0.8217;0.8207;0.8202;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
SVC;0.7329;0.7674;0.7329;0.7321;0.7931;0.8106;0.7931;0.7944;0.7833;0.7854;0.7833;0.7813;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 559};SVC(C=10, random_state=559)
RandomForestClassifier;0.8695;0.8699;0.8695;0.8696;0.8828;0.8833;0.8828;0.8829;0.7833;0.8062;0.7833;0.7812;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
RandomForestClassifier;0.8675;0.8679;0.8675;0.8675;0.8419;0.8416;0.8419;0.8415;0.7833;0.8132;0.7833;0.7811;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 78};RandomForestClassifier(n_estimators=20, random_state=78)
KNeighborsClassifier;0.9012;0.9032;0.9012;0.9012;0.921;0.9238;0.921;0.9209;0.7833;0.7928;0.7833;0.781;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8909;0.8919;0.8909;0.891;0.8379;0.8401;0.8379;0.8378;0.7833;0.7871;0.7833;0.7807;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=918)
SVC;0.8029;0.8241;0.8029;0.8012;0.8414;0.8418;0.8414;0.8416;0.7833;0.7871;0.7833;0.7807;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
SVC;0.8029;0.8233;0.8029;0.801;0.8379;0.8384;0.8379;0.8379;0.7833;0.7871;0.7833;0.7807;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
MLPClassifier;0.819;0.8265;0.819;0.8182;0.8793;0.879;0.8793;0.8789;0.7833;0.7871;0.7833;0.7807;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
DecisionTreeClassifier;0.8948;0.8958;0.8948;0.895;0.8103;0.8112;0.8103;0.81;0.7833;0.7823;0.7833;0.7805;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 678};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=678)
RandomForestClassifier;0.9112;0.9123;0.9112;0.9111;0.9172;0.9175;0.9172;0.9167;0.7833;0.786;0.7833;0.7804;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 417};RandomForestClassifier(n_estimators=20, random_state=417)
MLPClassifier;0.8633;0.8679;0.8633;0.8635;0.9141;0.9142;0.9141;0.9141;0.7833;0.7824;0.7833;0.78;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
LogisticRegression;0.6992;0.7094;0.6992;0.7016;0.6862;0.6889;0.6862;0.6865;0.7833;0.7786;0.7833;0.7787;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.6907;0.6991;0.6907;0.6928;0.7045;0.7092;0.7045;0.7062;0.7833;0.7786;0.7833;0.7787;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.6965;0.7072;0.6965;0.699;0.6931;0.6977;0.6931;0.6945;0.7833;0.7786;0.7833;0.7787;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
LogisticRegression;0.6977;0.7067;0.6977;0.7003;0.7069;0.7098;0.7069;0.7078;0.7833;0.7786;0.7833;0.7787;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
KNeighborsClassifier;0.9059;0.9077;0.9059;0.9057;0.9138;0.914;0.9138;0.9135;0.7833;0.7858;0.7833;0.7779;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
LogisticRegression;0.6956;0.7032;0.6956;0.6975;0.7216;0.7245;0.7216;0.7225;0.7833;0.7803;0.7833;0.7778;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
LogisticRegression;0.6964;0.7059;0.6964;0.6987;0.6907;0.6905;0.6907;0.6905;0.7833;0.778;0.7833;0.7743;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
DecisionTreeClassifier;0.9085;0.9097;0.9085;0.9086;0.9276;0.9298;0.9276;0.9275;0.7667;0.776;0.7667;0.7683;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
LogisticRegression;0.6904;0.7006;0.6904;0.6929;0.7138;0.7384;0.7138;0.7167;0.7667;0.7774;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
LogisticRegression;0.698;0.7091;0.698;0.7005;0.7103;0.7341;0.7103;0.7131;0.7667;0.7717;0.7667;0.7679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.6899;0.6995;0.6899;0.6925;0.7423;0.7657;0.7423;0.7465;0.7667;0.7717;0.7667;0.7679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.6995;0.7094;0.6995;0.702;0.732;0.7644;0.732;0.7351;0.7667;0.7717;0.7667;0.7679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 684, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=684)"
SVC;0.863;0.8694;0.863;0.8632;0.8966;0.8992;0.8966;0.8966;0.7667;0.7728;0.7667;0.7676;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
DecisionTreeClassifier;0.9082;0.9091;0.9082;0.9083;0.9069;0.907;0.9069;0.9069;0.7667;0.7815;0.7667;0.7675;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=838)
LogisticRegression;0.6977;0.705;0.6977;0.6996;0.7138;0.732;0.7138;0.7182;0.7667;0.7775;0.7667;0.7675;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 801, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=801)"
RandomForestClassifier;0.8679;0.8688;0.8679;0.8679;0.8797;0.8812;0.8797;0.8799;0.7667;0.7815;0.7667;0.7675;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 648};RandomForestClassifier(n_estimators=20, random_state=648)
DecisionTreeClassifier;0.9101;0.9106;0.9101;0.9101;0.9172;0.9184;0.9172;0.9171;0.7667;0.7815;0.7667;0.7675;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=581)
SVC;0.8603;0.8665;0.8603;0.8604;0.9345;0.9366;0.9345;0.9345;0.7667;0.7679;0.7667;0.767;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 470};SVC(C=10, random_state=470)
LogisticRegression;0.6984;0.7085;0.6984;0.701;0.7241;0.7474;0.7241;0.7264;0.7667;0.7731;0.7667;0.767;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.6939;0.7008;0.6939;0.6959;0.7103;0.7391;0.7103;0.7125;0.7667;0.7731;0.7667;0.767;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
SVC;0.8664;0.8726;0.8664;0.8664;0.8797;0.8829;0.8797;0.8797;0.7667;0.7687;0.7667;0.7668;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 775};SVC(C=10, random_state=775)
DecisionTreeClassifier;0.9116;0.9121;0.9116;0.9115;0.89;0.8904;0.89;0.8899;0.7667;0.7671;0.7667;0.7666;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
DecisionTreeClassifier;0.9043;0.9057;0.9043;0.9043;0.9207;0.9223;0.9207;0.9202;0.7667;0.7671;0.7667;0.7666;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.9089;0.91;0.9089;0.9089;0.8931;0.8947;0.8931;0.8926;0.7667;0.7671;0.7667;0.7666;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
SVC;0.8638;0.8705;0.8638;0.8636;0.9138;0.915;0.9138;0.9136;0.7667;0.7671;0.7667;0.7666;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
DecisionTreeClassifier;0.9043;0.9057;0.9043;0.9044;0.931;0.9312;0.931;0.931;0.7667;0.7671;0.7667;0.7666;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
MLPClassifier;0.7482;0.7597;0.7482;0.7493;0.8103;0.8103;0.8103;0.8102;0.7667;0.7709;0.7667;0.7664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.76;0.7687;0.76;0.7618;0.7862;0.7977;0.7862;0.7865;0.7667;0.7709;0.7667;0.7664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.7439;0.7564;0.7439;0.7447;0.811;0.8126;0.811;0.8096;0.7667;0.7709;0.7667;0.7664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
MLPClassifier;0.7573;0.7663;0.7573;0.7588;0.7835;0.7951;0.7835;0.7814;0.7667;0.7709;0.7667;0.7664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 277, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=277)
MLPClassifier;0.8622;0.8671;0.8622;0.8623;0.9244;0.9256;0.9244;0.9243;0.7667;0.7709;0.7667;0.7664;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.7616;0.7708;0.7616;0.7635;0.8069;0.8082;0.8069;0.8072;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.7593;0.7679;0.7593;0.7608;0.8069;0.8055;0.8069;0.8059;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
MLPClassifier;0.7462;0.7543;0.7462;0.7473;0.8076;0.8074;0.8076;0.8071;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.7523;0.7603;0.7523;0.7533;0.7938;0.7963;0.7938;0.7939;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.8163;0.8248;0.8163;0.816;0.9103;0.9112;0.9103;0.9104;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.7539;0.7637;0.7539;0.7552;0.7759;0.7752;0.7759;0.7754;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
KNeighborsClassifier;0.9066;0.9081;0.9066;0.9065;0.9381;0.9395;0.9381;0.9381;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.762;0.7698;0.762;0.763;0.7931;0.7952;0.7931;0.7937;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.7596;0.7686;0.7596;0.7605;0.7835;0.7873;0.7835;0.7816;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
MLPClassifier;0.7616;0.7701;0.7616;0.7629;0.7897;0.8025;0.7897;0.789;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.7363;0.7468;0.7363;0.7368;0.8517;0.8515;0.8517;0.8515;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.7516;0.7619;0.7516;0.7531;0.8144;0.817;0.8144;0.8144;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 543, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=543)
MLPClassifier;0.7542;0.7659;0.7542;0.7554;0.7904;0.7902;0.7904;0.7898;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
KNeighborsClassifier;0.8952;0.8979;0.8952;0.8947;0.9207;0.9212;0.9207;0.9204;0.7667;0.7738;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.7635;0.7728;0.7635;0.7653;0.7966;0.8037;0.7966;0.7967;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.7534;0.7647;0.7534;0.7554;0.8076;0.8101;0.8076;0.8062;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.7647;0.7749;0.7647;0.7669;0.7621;0.7625;0.7621;0.7619;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
MLPClassifier;0.8323;0.8387;0.8323;0.8325;0.8007;0.8007;0.8007;0.8;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
DecisionTreeClassifier;0.853;0.8556;0.853;0.853;0.8517;0.8522;0.8517;0.8516;0.7667;0.7663;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=648)
MLPClassifier;0.7394;0.7525;0.7394;0.7402;0.8172;0.8168;0.8172;0.8168;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
MLPClassifier;0.7643;0.7718;0.7643;0.7658;0.8241;0.8239;0.8241;0.823;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
DecisionTreeClassifier;0.8503;0.8542;0.8503;0.8505;0.8557;0.8576;0.8557;0.8551;0.7667;0.7663;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=392)
MLPClassifier;0.7405;0.752;0.7405;0.7414;0.8241;0.8228;0.8241;0.8232;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
MLPClassifier;0.7501;0.7606;0.7501;0.7519;0.8103;0.8115;0.8103;0.81;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
MLPClassifier;0.7627;0.7708;0.7627;0.7644;0.769;0.7759;0.769;0.7657;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.7463;0.759;0.7463;0.7482;0.8207;0.8227;0.8207;0.8209;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
MLPClassifier;0.7528;0.7627;0.7528;0.754;0.8276;0.8284;0.8276;0.8279;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
MLPClassifier;0.8259;0.8291;0.8259;0.8256;0.8517;0.8528;0.8517;0.8518;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.7489;0.7611;0.7489;0.7509;0.8247;0.8239;0.8247;0.8239;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
MLPClassifier;0.7542;0.7621;0.7542;0.7559;0.8419;0.843;0.8419;0.8422;0.7667;0.7684;0.7667;0.7662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
RandomForestClassifier;0.8691;0.87;0.8691;0.8693;0.8655;0.8671;0.8655;0.8653;0.7667;0.7889;0.7667;0.7661;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 78};RandomForestClassifier(n_estimators=10, random_state=78)
MLPClassifier;0.822;0.827;0.822;0.8218;0.8517;0.8518;0.8517;0.8506;0.7667;0.7672;0.7667;0.7659;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 171, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=171)
MLPClassifier;0.824;0.8295;0.824;0.8236;0.8621;0.8623;0.8621;0.8619;0.7667;0.7672;0.7667;0.7659;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
MLPClassifier;0.8316;0.8347;0.8316;0.8317;0.8552;0.8562;0.8552;0.8546;0.7667;0.7672;0.7667;0.7659;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
MLPClassifier;0.8296;0.8326;0.8296;0.8295;0.8522;0.8525;0.8522;0.852;0.7667;0.7672;0.7667;0.7659;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.8695;0.8731;0.8695;0.8696;0.8586;0.8692;0.8586;0.8611;0.7667;0.7709;0.7667;0.7658;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
SVC;0.8052;0.8262;0.8052;0.803;0.831;0.8323;0.831;0.8314;0.7667;0.7655;0.7667;0.7657;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
MLPClassifier;0.8339;0.8372;0.8339;0.8338;0.8207;0.8217;0.8207;0.8208;0.7667;0.7655;0.7667;0.7657;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
MLPClassifier;0.8185;0.826;0.8185;0.8177;0.8832;0.8858;0.8832;0.8831;0.7667;0.7655;0.7667;0.7657;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
MLPClassifier;0.8247;0.8277;0.8247;0.8238;0.8282;0.8311;0.8282;0.8258;0.7667;0.7655;0.7667;0.7657;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
MLPClassifier;0.8331;0.8374;0.8331;0.8327;0.8345;0.8348;0.8345;0.8341;0.7667;0.7655;0.7667;0.7657;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 412, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=412)
SVC;0.8071;0.8274;0.8071;0.8056;0.8034;0.8082;0.8034;0.8044;0.7667;0.7688;0.7667;0.7656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
KNeighborsClassifier;0.9016;0.9042;0.9016;0.9016;0.8763;0.8819;0.8763;0.8772;0.7667;0.7688;0.7667;0.7656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8982;0.8999;0.8982;0.8981;0.9072;0.9099;0.9072;0.9071;0.7667;0.7688;0.7667;0.7656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9055;0.9068;0.9055;0.9052;0.8586;0.8687;0.8586;0.8594;0.7667;0.7688;0.7667;0.7656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
SVC;0.8063;0.8257;0.8063;0.8042;0.8419;0.8478;0.8419;0.843;0.7667;0.7688;0.7667;0.7656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
DecisionTreeClassifier;0.9112;0.9127;0.9112;0.9111;0.8966;0.9;0.8966;0.8967;0.7667;0.7688;0.7667;0.7656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
MLPClassifier;0.8653;0.8699;0.8653;0.8654;0.8793;0.8813;0.8793;0.8792;0.7667;0.7777;0.7667;0.7652;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8687;0.8735;0.8687;0.8688;0.8488;0.8598;0.8488;0.8505;0.7667;0.7777;0.7667;0.7652;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
KNeighborsClassifier;0.8358;0.8395;0.8358;0.8362;0.8621;0.8623;0.8621;0.8614;0.7667;0.787;0.7667;0.765;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9146;0.9153;0.9146;0.9147;0.8866;0.8905;0.8866;0.8859;0.7667;0.7708;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 314};RandomForestClassifier(n_estimators=5, random_state=314)
MLPClassifier;0.827;0.8334;0.827;0.8268;0.8625;0.8647;0.8625;0.8612;0.7667;0.7672;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.8642;0.8681;0.8642;0.864;0.931;0.9318;0.931;0.9311;0.7667;0.7708;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.8193;0.8284;0.8193;0.8186;0.8517;0.852;0.8517;0.8517;0.7667;0.7672;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
MLPClassifier;0.8335;0.8358;0.8335;0.8333;0.8172;0.8182;0.8172;0.8171;0.7667;0.7672;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.8205;0.8278;0.8205;0.8201;0.8517;0.8514;0.8517;0.8513;0.7667;0.7672;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.8213;0.8264;0.8213;0.8209;0.8724;0.8762;0.8724;0.8716;0.7667;0.7672;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
KNeighborsClassifier;0.8997;0.9012;0.8997;0.8998;0.8621;0.8632;0.8621;0.8614;0.7667;0.7708;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
MLPClassifier;0.8304;0.8331;0.8304;0.8298;0.8448;0.8449;0.8448;0.8443;0.7667;0.7672;0.7667;0.7646;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 143, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=143)
SVC;0.809;0.8286;0.809;0.8076;0.8276;0.8288;0.8276;0.8272;0.7667;0.7679;0.7667;0.7645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8045;0.8247;0.8045;0.8023;0.8483;0.8501;0.8483;0.8485;0.7667;0.7679;0.7667;0.7645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
SVC;0.8048;0.8244;0.8048;0.803;0.8414;0.8444;0.8414;0.8415;0.7667;0.7679;0.7667;0.7645;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 91};SVC(C=10, random_state=91)
MLPClassifier;0.8645;0.8691;0.8645;0.8646;0.8763;0.8781;0.8763;0.8759;0.7667;0.7789;0.7667;0.7643;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
MLPClassifier;0.8653;0.8701;0.8653;0.8655;0.8931;0.8938;0.8931;0.8926;0.7667;0.7789;0.7667;0.7643;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
LogisticRegression;0.6727;0.6803;0.6727;0.6715;0.7216;0.7451;0.7216;0.724;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6743;0.6813;0.6743;0.6736;0.7103;0.7417;0.7103;0.7135;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6811;0.6896;0.6811;0.6801;0.6838;0.718;0.6838;0.6841;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6692;0.6782;0.6692;0.6682;0.7388;0.7659;0.7388;0.7409;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
RandomForestClassifier;0.9093;0.9103;0.9093;0.9092;0.9;0.9012;0.9;0.9003;0.7667;0.7664;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 314};RandomForestClassifier(n_estimators=5, random_state=314)
LogisticRegression;0.6835;0.6927;0.6835;0.6831;0.6276;0.6727;0.6276;0.6288;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6807;0.6897;0.6807;0.6798;0.6942;0.7224;0.6942;0.6912;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6839;0.6927;0.6839;0.6832;0.6586;0.6851;0.6586;0.6574;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
MLPClassifier;0.8687;0.8728;0.8687;0.8689;0.8862;0.8868;0.8862;0.8861;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
MLPClassifier;0.8703;0.8751;0.8703;0.8706;0.8862;0.8867;0.8862;0.8863;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
LogisticRegression;0.678;0.6858;0.678;0.6769;0.6942;0.7409;0.6942;0.6951;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
MLPClassifier;0.8703;0.8747;0.8703;0.8701;0.9034;0.9064;0.9034;0.9039;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
LogisticRegression;0.6758;0.6848;0.6758;0.6756;0.6966;0.7231;0.6966;0.6982;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6839;0.6925;0.6839;0.6828;0.6414;0.6753;0.6414;0.6438;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
MLPClassifier;0.8652;0.8698;0.8652;0.8654;0.9175;0.9181;0.9175;0.9175;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
LogisticRegression;0.6808;0.6878;0.6808;0.6799;0.6345;0.6668;0.6345;0.6354;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6751;0.6832;0.6751;0.6743;0.7;0.7196;0.7;0.703;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6807;0.6893;0.6807;0.6803;0.6632;0.6965;0.6632;0.6649;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6835;0.6924;0.6835;0.683;0.6793;0.7167;0.6793;0.6747;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6766;0.6832;0.6766;0.6751;0.7034;0.7349;0.7034;0.7044;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
LogisticRegression;0.6766;0.6864;0.6766;0.6766;0.6724;0.7032;0.6724;0.6738;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
MLPClassifier;0.8718;0.8761;0.8718;0.8717;0.8969;0.8975;0.8969;0.8969;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
LogisticRegression;0.6778;0.6864;0.6778;0.677;0.6759;0.7126;0.6759;0.6776;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
MLPClassifier;0.8676;0.8712;0.8676;0.8677;0.9;0.9067;0.9;0.9004;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
LogisticRegression;0.6842;0.6938;0.6842;0.6841;0.6517;0.6827;0.6517;0.6509;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
LogisticRegression;0.677;0.6851;0.677;0.6756;0.6621;0.6932;0.6621;0.665;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
LogisticRegression;0.6804;0.69;0.6804;0.68;0.6759;0.6986;0.6759;0.679;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
LogisticRegression;0.6789;0.6866;0.6789;0.6778;0.6724;0.7068;0.6724;0.6755;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6736;0.6814;0.6736;0.6731;0.6828;0.7202;0.6828;0.6833;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
MLPClassifier;0.8684;0.8728;0.8684;0.8686;0.9172;0.9202;0.9172;0.9175;0.7667;0.777;0.7667;0.7642;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
KNeighborsClassifier;0.899;0.9006;0.899;0.899;0.9069;0.9076;0.9069;0.907;0.7667;0.7685;0.7667;0.764;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8975;0.9005;0.8975;0.8968;0.8897;0.8907;0.8897;0.8897;0.7667;0.7685;0.7667;0.764;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8664;0.8711;0.8664;0.8665;0.9207;0.9242;0.9207;0.9207;0.7667;0.7924;0.7667;0.7635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
MLPClassifier;0.8699;0.8748;0.8699;0.87;0.9138;0.915;0.9138;0.9135;0.7667;0.7924;0.7667;0.7635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
MLPClassifier;0.8676;0.8718;0.8676;0.8677;0.9103;0.9108;0.9103;0.9103;0.7667;0.7924;0.7667;0.7635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
KNeighborsClassifier;0.9009;0.9028;0.9009;0.9007;0.8931;0.8953;0.8931;0.8926;0.7667;0.7658;0.7667;0.7633;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8622;0.8672;0.8622;0.8623;0.9138;0.9167;0.9138;0.9139;0.7667;0.7901;0.7667;0.7631;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 189, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=189)
MLPClassifier;0.8733;0.8768;0.8733;0.8733;0.89;0.8971;0.89;0.891;0.7667;0.7901;0.7667;0.7631;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.8672;0.8714;0.8672;0.8674;0.9276;0.9276;0.9276;0.9276;0.7667;0.7901;0.7667;0.7631;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
MLPClassifier;0.8694;0.8742;0.8694;0.8696;0.9175;0.9176;0.9175;0.9175;0.7667;0.7901;0.7667;0.7631;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
MLPClassifier;0.8675;0.8716;0.8675;0.8676;0.9107;0.9123;0.9107;0.9106;0.7667;0.7901;0.7667;0.7631;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 439, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=439)
RandomForestClassifier;0.9135;0.9142;0.9135;0.9134;0.8966;0.8963;0.8966;0.8962;0.7667;0.7794;0.7667;0.7627;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 71};RandomForestClassifier(n_estimators=20, random_state=71)
RandomForestClassifier;0.907;0.9083;0.907;0.9069;0.921;0.9208;0.921;0.9207;0.7667;0.7794;0.7667;0.7627;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 865};RandomForestClassifier(n_estimators=20, random_state=865)
DecisionTreeClassifier;0.9078;0.9088;0.9078;0.9077;0.9172;0.9173;0.9172;0.9172;0.7667;0.7726;0.7667;0.7626;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.9081;0.9087;0.9081;0.9081;0.9241;0.9243;0.9241;0.9239;0.7667;0.7726;0.7667;0.7626;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
DecisionTreeClassifier;0.9108;0.9112;0.9108;0.9107;0.9034;0.9038;0.9034;0.9034;0.7667;0.7726;0.7667;0.7626;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
KNeighborsClassifier;0.8986;0.9007;0.8986;0.8987;0.9241;0.9243;0.9241;0.9242;0.7667;0.7781;0.7667;0.762;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9028;0.9038;0.9028;0.9028;0.9034;0.9047;0.9034;0.9037;0.7667;0.7781;0.7667;0.762;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8641;0.8691;0.8641;0.8641;0.9278;0.9295;0.9278;0.9281;0.7667;0.7648;0.7667;0.7615;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
LogisticRegression;0.6987;0.7065;0.6987;0.7009;0.6873;0.6858;0.6873;0.6863;0.7667;0.7595;0.7667;0.7593;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
RandomForestClassifier;0.9097;0.9107;0.9097;0.9096;0.9172;0.9179;0.9172;0.9171;0.7667;0.7707;0.7667;0.759;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 865};RandomForestClassifier(n_estimators=10, random_state=865)
RandomForestClassifier;0.9131;0.9142;0.9131;0.913;0.8966;0.8976;0.8966;0.8964;0.7667;0.7813;0.7667;0.7549;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 314};RandomForestClassifier(n_estimators=20, random_state=314)
DecisionTreeClassifier;0.9093;0.9105;0.9093;0.9093;0.9034;0.9071;0.9034;0.9034;0.75;0.7639;0.75;0.7517;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=581)
DecisionTreeClassifier;0.9081;0.9095;0.9081;0.9081;0.9072;0.9123;0.9072;0.9069;0.75;0.7639;0.75;0.7517;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=969)
LogisticRegression;0.6981;0.7089;0.6981;0.7001;0.6897;0.7159;0.6897;0.6954;0.75;0.7586;0.75;0.7515;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.6904;0.6991;0.6904;0.6925;0.731;0.7522;0.731;0.7359;0.75;0.7586;0.75;0.7515;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
LogisticRegression;0.6969;0.706;0.6969;0.6992;0.6966;0.718;0.6966;0.6998;0.75;0.7586;0.75;0.7515;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
DecisionTreeClassifier;0.8569;0.8591;0.8569;0.8568;0.8379;0.8386;0.8379;0.8375;0.75;0.7689;0.75;0.7513;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=648)
DecisionTreeClassifier;0.8492;0.8518;0.8492;0.8493;0.8625;0.8637;0.8625;0.8627;0.75;0.7689;0.75;0.7513;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=648)
DecisionTreeClassifier;0.8492;0.8519;0.8492;0.8493;0.8483;0.851;0.8483;0.8485;0.75;0.7689;0.75;0.7513;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=648)
KNeighborsClassifier;0.907;0.9087;0.907;0.907;0.8897;0.8922;0.8897;0.8895;0.75;0.7593;0.75;0.7512;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9066;0.9085;0.9066;0.9066;0.9038;0.9064;0.9038;0.9042;0.75;0.7593;0.75;0.7512;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8523;0.8545;0.8523;0.8524;0.8172;0.817;0.8172;0.817;0.75;0.752;0.75;0.7507;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
LogisticRegression;0.6923;0.7007;0.6923;0.6945;0.7172;0.7407;0.7172;0.7212;0.75;0.7558;0.75;0.7505;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
LogisticRegression;0.7019;0.7114;0.7019;0.7046;0.7103;0.7374;0.7103;0.714;0.75;0.7558;0.75;0.7505;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 20, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=20)"
SVC;0.8657;0.8716;0.8657;0.8655;0.9069;0.9076;0.9069;0.9071;0.75;0.7513;0.75;0.7503;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 526};SVC(C=10, random_state=526)
SVC;0.866;0.8723;0.866;0.8661;0.9;0.9009;0.9;0.9;0.75;0.7513;0.75;0.7503;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 961};SVC(C=10, random_state=961)
KNeighborsClassifier;0.8473;0.8511;0.8473;0.847;0.831;0.8321;0.831;0.8315;0.75;0.7651;0.75;0.7502;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
SVC;0.8032;0.8236;0.8032;0.801;0.8763;0.8768;0.8763;0.8764;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 392};SVC(C=10, random_state=392)
DecisionTreeClassifier;0.8476;0.8499;0.8476;0.8476;0.8282;0.8325;0.8282;0.8255;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=90)
SVC;0.8075;0.8269;0.8075;0.8055;0.8241;0.8246;0.8241;0.8232;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 627};SVC(C=10, random_state=627)
DecisionTreeClassifier;0.9013;0.9032;0.9013;0.9013;0.9138;0.9187;0.9138;0.9139;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
SVC;0.8063;0.8259;0.8063;0.8044;0.8172;0.817;0.8172;0.8169;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 170};SVC(C=10, random_state=170)
SVC;0.8105;0.8283;0.8105;0.8082;0.8282;0.8314;0.8282;0.8286;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 674};SVC(C=10, random_state=674)
DecisionTreeClassifier;0.9127;0.9138;0.9127;0.9127;0.9;0.9014;0.9;0.8998;0.75;0.75;0.75;0.75;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
SVC;0.8098;0.83;0.8098;0.8078;0.831;0.8327;0.831;0.8315;0.75;0.7504;0.75;0.7499;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 656};SVC(C=10, random_state=656)
MLPClassifier;0.8308;0.8341;0.8308;0.8305;0.8621;0.8633;0.8621;0.8615;0.75;0.7504;0.75;0.7499;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
MLPClassifier;0.7551;0.7641;0.7551;0.7567;0.8;0.8014;0.8;0.7985;0.75;0.7512;0.75;0.7497;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 771, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=771)
DecisionTreeClassifier;0.9097;0.9106;0.9097;0.9096;0.9034;0.9047;0.9034;0.9035;0.75;0.7517;0.75;0.7496;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.9097;0.9112;0.9097;0.9096;0.9103;0.9171;0.9103;0.9103;0.75;0.7593;0.75;0.7492;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
MLPClassifier;0.8232;0.8298;0.8232;0.8231;0.8345;0.8346;0.8345;0.8341;0.75;0.7488;0.75;0.7491;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.8216;0.831;0.8216;0.8207;0.8625;0.8634;0.8625;0.8628;0.75;0.7488;0.75;0.7491;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 453, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=453)
DecisionTreeClassifier;0.9063;0.9068;0.9063;0.9062;0.9138;0.914;0.9138;0.9133;0.75;0.7607;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
KNeighborsClassifier;0.8426;0.8448;0.8426;0.8424;0.7938;0.7971;0.7938;0.7943;0.75;0.7607;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.8278;0.8345;0.8278;0.8267;0.8448;0.8455;0.8448;0.845;0.75;0.7535;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.827;0.8323;0.827;0.8268;0.8655;0.8657;0.8655;0.8655;0.75;0.7535;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
DecisionTreeClassifier;0.9039;0.9047;0.9039;0.9039;0.9381;0.9389;0.9381;0.9384;0.75;0.7607;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
DecisionTreeClassifier;0.9085;0.9103;0.9085;0.9085;0.921;0.9233;0.921;0.9214;0.75;0.7607;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
DecisionTreeClassifier;0.9096;0.9109;0.9096;0.9097;0.9003;0.9022;0.9003;0.8997;0.75;0.7607;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
KNeighborsClassifier;0.8426;0.8448;0.8426;0.8424;0.7938;0.7971;0.7938;0.7943;0.75;0.7607;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.8316;0.8343;0.8316;0.8314;0.8552;0.8568;0.8552;0.8549;0.75;0.7535;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 718, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=718)
MLPClassifier;0.827;0.8318;0.827;0.8265;0.8448;0.8446;0.8448;0.8443;0.75;0.7535;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 290, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=290)
MLPClassifier;0.7496;0.7603;0.7496;0.7513;0.8007;0.8029;0.8007;0.8004;0.75;0.7535;0.75;0.749;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 988, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=988)
KNeighborsClassifier;0.8381;0.8412;0.8381;0.8379;0.8655;0.8684;0.8655;0.8636;0.75;0.7502;0.75;0.7488;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.8706;0.8751;0.8706;0.8707;0.9207;0.924;0.9207;0.9212;0.75;0.7557;0.75;0.7487;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
KNeighborsClassifier;0.8305;0.8348;0.8305;0.8299;0.869;0.8703;0.869;0.8684;0.75;0.7557;0.75;0.7487;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
DecisionTreeClassifier;0.845;0.849;0.845;0.8452;0.8483;0.8493;0.8483;0.8479;0.75;0.7479;0.75;0.7486;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=90)
RandomForestClassifier;0.9078;0.9084;0.9078;0.9077;0.9034;0.9034;0.9034;0.9028;0.75;0.7513;0.75;0.7485;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 506};RandomForestClassifier(n_estimators=20, random_state=506)
KNeighborsClassifier;0.8377;0.8406;0.8377;0.8373;0.8316;0.8318;0.8316;0.8317;0.75;0.7487;0.75;0.7484;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=13)
MLPClassifier;0.8638;0.8684;0.8638;0.8639;0.9138;0.9171;0.9138;0.914;0.75;0.7506;0.75;0.748;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
DecisionTreeClassifier;0.9024;0.9031;0.9024;0.9023;0.9175;0.9186;0.9175;0.9173;0.75;0.7503;0.75;0.748;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.9166;0.9174;0.9166;0.9166;0.8483;0.8485;0.8483;0.8481;0.75;0.7503;0.75;0.748;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.907;0.9083;0.907;0.9071;0.9207;0.9209;0.9207;0.9206;0.75;0.7503;0.75;0.748;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
RandomForestClassifier;0.9154;0.9164;0.9154;0.9153;0.8759;0.8764;0.8759;0.8759;0.75;0.7513;0.75;0.7478;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 71};RandomForestClassifier(n_estimators=20, random_state=71)
MLPClassifier;0.8664;0.8708;0.8664;0.8665;0.9379;0.9401;0.9379;0.9378;0.75;0.7653;0.75;0.7478;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
MLPClassifier;0.8695;0.8738;0.8695;0.8695;0.8655;0.8673;0.8655;0.8644;0.75;0.7653;0.75;0.7478;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
KNeighborsClassifier;0.8948;0.896;0.8948;0.8946;0.9;0.9012;0.9;0.9003;0.75;0.7663;0.75;0.7473;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8997;0.9015;0.8997;0.8996;0.8828;0.8823;0.8828;0.8823;0.75;0.7663;0.75;0.7473;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8698;0.8733;0.8698;0.8698;0.8969;0.8968;0.8969;0.8967;0.75;0.7711;0.75;0.747;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 354, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=354)
RandomForestClassifier;0.9097;0.9101;0.9097;0.9095;0.9244;0.9248;0.9244;0.9243;0.75;0.7561;0.75;0.7465;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 71};RandomForestClassifier(n_estimators=10, random_state=71)
RandomForestClassifier;0.9139;0.9145;0.9139;0.9138;0.9175;0.9175;0.9175;0.9173;0.75;0.7561;0.75;0.7465;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 865};RandomForestClassifier(n_estimators=10, random_state=865)
MLPClassifier;0.8718;0.8764;0.8718;0.8719;0.9;0.9012;0.9;0.9001;0.75;0.7542;0.75;0.7465;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 466, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=466)
KNeighborsClassifier;0.8419;0.8457;0.8419;0.8414;0.7862;0.7972;0.7862;0.7847;0.75;0.7567;0.75;0.7463;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8982;0.8998;0.8982;0.8982;0.8966;0.8982;0.8966;0.897;0.75;0.7665;0.75;0.7462;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8699;0.8744;0.8699;0.8701;0.9;0.9009;0.9;0.9001;0.75;0.7638;0.75;0.7459;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.8668;0.8716;0.8668;0.8669;0.9003;0.9004;0.9003;0.9001;0.75;0.7567;0.75;0.7452;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 255, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=255)
RandomForestClassifier;0.9124;0.9133;0.9124;0.9124;0.9276;0.9277;0.9276;0.9276;0.75;0.7698;0.75;0.745;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 518};RandomForestClassifier(n_estimators=10, random_state=518)
KNeighborsClassifier;0.9051;0.9069;0.9051;0.9049;0.9172;0.9179;0.9172;0.9174;0.75;0.7709;0.75;0.7442;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9074;0.9084;0.9074;0.9074;0.9313;0.9317;0.9313;0.931;0.75;0.7584;0.75;0.744;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 506};RandomForestClassifier(n_estimators=20, random_state=506)
RandomForestClassifier;0.9035;0.9051;0.9035;0.9034;0.9278;0.9293;0.9278;0.9279;0.75;0.7584;0.75;0.744;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 506};RandomForestClassifier(n_estimators=20, random_state=506)
RandomForestClassifier;0.9089;0.9101;0.9089;0.9088;0.9138;0.9151;0.9138;0.9139;0.75;0.7584;0.75;0.744;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 417};RandomForestClassifier(n_estimators=20, random_state=417)
RandomForestClassifier;0.9085;0.9093;0.9085;0.9084;0.931;0.9313;0.931;0.9309;0.75;0.7584;0.75;0.744;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9173;0.9178;0.9173;0.9171;0.8797;0.8796;0.8797;0.8795;0.75;0.7663;0.75;0.7439;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 417};RandomForestClassifier(n_estimators=10, random_state=417)
RandomForestClassifier;0.9127;0.9136;0.9127;0.9127;0.9034;0.9033;0.9034;0.9033;0.75;0.7663;0.75;0.7439;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 506};RandomForestClassifier(n_estimators=20, random_state=506)
RandomForestClassifier;0.9066;0.9074;0.9066;0.9066;0.9379;0.939;0.9379;0.9381;0.75;0.7663;0.75;0.7439;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 314};RandomForestClassifier(n_estimators=20, random_state=314)
RandomForestClassifier;0.9085;0.9088;0.9085;0.9085;0.9003;0.9043;0.9003;0.9001;0.75;0.7663;0.75;0.7439;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 506};RandomForestClassifier(n_estimators=10, random_state=506)
RandomForestClassifier;0.9108;0.9116;0.9108;0.9108;0.9345;0.935;0.9345;0.9341;0.75;0.7663;0.75;0.7439;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 71};RandomForestClassifier(n_estimators=20, random_state=71)
RandomForestClassifier;0.9108;0.9115;0.9108;0.9107;0.9276;0.9276;0.9276;0.9272;0.75;0.7645;0.75;0.7434;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 71};RandomForestClassifier(n_estimators=20, random_state=71)
RandomForestClassifier;0.9143;0.9151;0.9143;0.9144;0.8793;0.8822;0.8793;0.8796;0.75;0.7645;0.75;0.7434;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 314};RandomForestClassifier(n_estimators=20, random_state=314)
RandomForestClassifier;0.9139;0.9148;0.9139;0.9139;0.9;0.9006;0.9;0.8995;0.75;0.7639;0.75;0.743;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 506};RandomForestClassifier(n_estimators=20, random_state=506)
RandomForestClassifier;0.9108;0.9114;0.9108;0.9107;0.89;0.8919;0.89;0.8899;0.75;0.7639;0.75;0.743;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 865};RandomForestClassifier(n_estimators=10, random_state=865)
KNeighborsClassifier;0.902;0.9041;0.902;0.9019;0.9069;0.9071;0.9069;0.9065;0.75;0.7639;0.75;0.743;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9047;0.9058;0.9047;0.9047;0.89;0.8906;0.89;0.8899;0.75;0.7639;0.75;0.743;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9101;0.911;0.9101;0.91;0.8931;0.894;0.8931;0.893;0.75;0.7547;0.75;0.7428;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 865};RandomForestClassifier(n_estimators=20, random_state=865)
RandomForestClassifier;0.9127;0.9135;0.9127;0.9127;0.9034;0.9037;0.9034;0.9033;0.75;0.7698;0.75;0.7401;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 865};RandomForestClassifier(n_estimators=20, random_state=865)
RandomForestClassifier;0.9097;0.9109;0.9097;0.9095;0.9103;0.9103;0.9103;0.9095;0.75;0.7639;0.75;0.7386;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 314};RandomForestClassifier(n_estimators=10, random_state=314)
DecisionTreeClassifier;0.8457;0.847;0.8457;0.8457;0.8591;0.8604;0.8591;0.8584;0.7333;0.7572;0.7333;0.7359;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=648)
DecisionTreeClassifier;0.8526;0.8555;0.8526;0.8527;0.866;0.8672;0.866;0.8659;0.7333;0.7572;0.7333;0.7359;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=392)
DecisionTreeClassifier;0.8514;0.8544;0.8514;0.8517;0.8522;0.8534;0.8522;0.8516;0.7333;0.7572;0.7333;0.7359;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=520)
DecisionTreeClassifier;0.8542;0.8565;0.8542;0.8544;0.8655;0.8656;0.8655;0.8655;0.7333;0.7512;0.7333;0.7351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=392)
DecisionTreeClassifier;0.8545;0.8584;0.8545;0.8548;0.8522;0.8533;0.8522;0.8525;0.7333;0.7512;0.7333;0.7351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=392)
DecisionTreeClassifier;0.8557;0.8578;0.8557;0.8557;0.8517;0.8544;0.8517;0.8518;0.7333;0.7512;0.7333;0.7351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=520)
RandomForestClassifier;0.8603;0.8638;0.8603;0.8603;0.8591;0.861;0.8591;0.8593;0.7333;0.7512;0.7333;0.7351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 308};RandomForestClassifier(n_estimators=10, random_state=308)
DecisionTreeClassifier;0.8511;0.8545;0.8511;0.8508;0.8557;0.8557;0.8557;0.8557;0.7333;0.7512;0.7333;0.7351;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
DecisionTreeClassifier;0.8465;0.8499;0.8465;0.8465;0.8625;0.8662;0.8625;0.8622;0.7333;0.7384;0.7333;0.735;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=863)
DecisionTreeClassifier;0.848;0.8516;0.848;0.8478;0.8316;0.8341;0.8316;0.8315;0.7333;0.7384;0.7333;0.735;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
DecisionTreeClassifier;0.8469;0.8511;0.8469;0.8472;0.8586;0.8598;0.8586;0.8586;0.7333;0.7473;0.7333;0.7342;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=863)
DecisionTreeClassifier;0.855;0.8581;0.855;0.855;0.8207;0.8247;0.8207;0.8209;0.7333;0.7575;0.7333;0.7338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=863)
DecisionTreeClassifier;0.8515;0.8543;0.8515;0.8516;0.869;0.8717;0.869;0.8689;0.7333;0.7575;0.7333;0.7338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8508;0.8532;0.8508;0.8509;0.8724;0.8772;0.8724;0.8727;0.7333;0.7575;0.7333;0.7338;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
LogisticRegression;0.6931;0.7021;0.6931;0.6949;0.7034;0.7307;0.7034;0.7092;0.7333;0.7422;0.7333;0.7335;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 140, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=140)"
DecisionTreeClassifier;0.9032;0.904;0.9032;0.9031;0.9172;0.9192;0.9172;0.9172;0.7333;0.7337;0.7333;0.7332;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
KNeighborsClassifier;0.8389;0.8429;0.8389;0.8381;0.8448;0.8456;0.8448;0.845;0.7333;0.7337;0.7333;0.7332;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8947;0.8967;0.8947;0.8944;0.8862;0.8864;0.8862;0.8862;0.7333;0.7403;0.7333;0.7331;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.9085;0.9092;0.9085;0.9084;0.9172;0.9192;0.9172;0.9175;0.7333;0.7403;0.7333;0.7331;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
DecisionTreeClassifier;0.9147;0.9155;0.9147;0.9147;0.9138;0.9141;0.9138;0.9139;0.7333;0.7403;0.7333;0.7331;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
KNeighborsClassifier;0.907;0.9081;0.907;0.9069;0.869;0.8708;0.869;0.8691;0.7333;0.7361;0.7333;0.7325;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8542;0.8569;0.8542;0.8542;0.8069;0.8106;0.8069;0.8065;0.7333;0.753;0.7333;0.7325;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=392)
KNeighborsClassifier;0.9005;0.9018;0.9005;0.9003;0.9141;0.9154;0.9141;0.9141;0.7333;0.7361;0.7333;0.7325;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8423;0.8448;0.8423;0.8423;0.8414;0.8416;0.8414;0.8414;0.7333;0.7361;0.7333;0.7325;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9009;0.9029;0.9009;0.9009;0.9241;0.9254;0.9241;0.9243;0.7333;0.7361;0.7333;0.7325;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8565;0.8587;0.8565;0.8566;0.7862;0.7908;0.7862;0.7854;0.7333;0.753;0.7333;0.7325;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=392)
LogisticRegression;0.6839;0.6929;0.6839;0.6836;0.6621;0.6737;0.6621;0.6593;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6873;0.6985;0.6873;0.6866;0.6759;0.6836;0.6759;0.6756;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6843;0.6934;0.6843;0.6836;0.6828;0.6881;0.6828;0.6813;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6784;0.6879;0.6784;0.6783;0.6804;0.689;0.6804;0.6768;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6778;0.6852;0.6778;0.6771;0.7069;0.7221;0.7069;0.7059;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6788;0.6873;0.6788;0.6779;0.6804;0.691;0.6804;0.6801;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
LogisticRegression;0.6887;0.6958;0.6887;0.6876;0.6598;0.678;0.6598;0.6594;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6812;0.6905;0.6812;0.6799;0.6897;0.7015;0.6897;0.6906;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
LogisticRegression;0.6822;0.6922;0.6822;0.6819;0.6735;0.6774;0.6735;0.6729;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6807;0.6879;0.6807;0.6798;0.701;0.7156;0.701;0.7008;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
LogisticRegression;0.6846;0.6953;0.6846;0.684;0.6529;0.6724;0.6529;0.6535;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6811;0.6897;0.6811;0.6802;0.6804;0.6943;0.6804;0.6825;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
LogisticRegression;0.6804;0.6889;0.6804;0.6798;0.669;0.6832;0.669;0.6698;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6839;0.692;0.6839;0.6835;0.6552;0.6622;0.6552;0.6548;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.677;0.6852;0.677;0.6763;0.7;0.7105;0.7;0.7012;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6919;0.6992;0.6919;0.6906;0.5931;0.5973;0.5931;0.5929;0.7333;0.7368;0.7333;0.7323;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6747;0.6835;0.6747;0.674;0.6966;0.7066;0.6966;0.6957;0.7333;0.7328;0.7333;0.7321;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6827;0.6915;0.6827;0.6822;0.6621;0.6657;0.6621;0.6597;0.7333;0.7354;0.7333;0.7321;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
KNeighborsClassifier;0.8361;0.8404;0.8361;0.8359;0.866;0.8668;0.866;0.8661;0.7333;0.7328;0.7333;0.7321;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
LogisticRegression;0.682;0.6898;0.682;0.6804;0.6655;0.6692;0.6655;0.6648;0.7333;0.7332;0.7333;0.732;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
MLPClassifier;0.7557;0.7652;0.7557;0.7577;0.8213;0.8204;0.8213;0.8202;0.7333;0.7332;0.7333;0.732;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 223, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=223)
DecisionTreeClassifier;0.907;0.908;0.907;0.9069;0.9345;0.9345;0.9345;0.9344;0.7333;0.7433;0.7333;0.7304;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
KNeighborsClassifier;0.9008;0.9023;0.9008;0.9008;0.9072;0.9071;0.9072;0.9071;0.7333;0.7667;0.7333;0.7303;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9017;0.9031;0.9017;0.9014;0.9069;0.9129;0.9069;0.9062;0.7333;0.7586;0.7333;0.73;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.9147;0.9153;0.9147;0.9145;0.8759;0.8803;0.8759;0.8741;0.7333;0.7317;0.7333;0.7298;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
DecisionTreeClassifier;0.9032;0.9044;0.9032;0.9031;0.9034;0.9036;0.9034;0.9035;0.7333;0.7317;0.7333;0.7298;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
RandomForestClassifier;0.912;0.9133;0.912;0.912;0.8897;0.8912;0.8897;0.8891;0.7333;0.7345;0.7333;0.7297;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 518};RandomForestClassifier(n_estimators=5, random_state=518)
RandomForestClassifier;0.9101;0.9107;0.9101;0.9101;0.9138;0.914;0.9138;0.9137;0.7333;0.753;0.7333;0.7291;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 506};RandomForestClassifier(n_estimators=5, random_state=506)
KNeighborsClassifier;0.9043;0.9057;0.9043;0.9041;0.9103;0.9104;0.9103;0.9103;0.7333;0.754;0.7333;0.7288;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9116;0.9123;0.9116;0.9116;0.8897;0.8908;0.8897;0.89;0.7333;0.7365;0.7333;0.7284;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 865};RandomForestClassifier(n_estimators=10, random_state=865)
RandomForestClassifier;0.915;0.9158;0.915;0.9149;0.9034;0.9033;0.9034;0.9033;0.7333;0.7507;0.7333;0.7282;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9089;0.9098;0.9089;0.9089;0.921;0.9211;0.921;0.9207;0.7333;0.7507;0.7333;0.7282;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 518};RandomForestClassifier(n_estimators=5, random_state=518)
RandomForestClassifier;0.9096;0.9107;0.9096;0.9095;0.9003;0.9022;0.9003;0.8995;0.7333;0.7507;0.7333;0.7282;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 71};RandomForestClassifier(n_estimators=20, random_state=71)
RandomForestClassifier;0.9124;0.9135;0.9124;0.9123;0.9034;0.9046;0.9034;0.9037;0.7333;0.7417;0.7333;0.728;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 417};RandomForestClassifier(n_estimators=5, random_state=417)
RandomForestClassifier;0.91;0.9113;0.91;0.9099;0.9175;0.9176;0.9175;0.9175;0.7333;0.7543;0.7333;0.7275;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 518};RandomForestClassifier(n_estimators=5, random_state=518)
KNeighborsClassifier;0.832;0.8361;0.832;0.8311;0.8414;0.8433;0.8414;0.8415;0.7333;0.7402;0.7333;0.7273;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9032;0.9038;0.9032;0.9029;0.8966;0.8971;0.8966;0.8966;0.7333;0.7493;0.7333;0.727;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.9189;0.9195;0.9189;0.9187;0.8828;0.8827;0.8828;0.8826;0.7333;0.7533;0.7333;0.7246;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 71};RandomForestClassifier(n_estimators=20, random_state=71)
RandomForestClassifier;0.9116;0.914;0.9116;0.9116;0.9138;0.9142;0.9138;0.9135;0.7333;0.7533;0.7333;0.7246;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 417};RandomForestClassifier(n_estimators=20, random_state=417)
RandomForestClassifier;0.9089;0.9094;0.9089;0.9089;0.9;0.9017;0.9;0.9002;0.7333;0.7533;0.7333;0.7246;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 506};RandomForestClassifier(n_estimators=10, random_state=506)
RandomForestClassifier;0.9143;0.9146;0.9143;0.9142;0.9069;0.9076;0.9069;0.9071;0.7333;0.7533;0.7333;0.7246;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9108;0.9118;0.9108;0.9108;0.9207;0.9207;0.9207;0.9206;0.7333;0.7533;0.7333;0.7246;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 71};RandomForestClassifier(n_estimators=20, random_state=71)
RandomForestClassifier;0.9112;0.9125;0.9112;0.9111;0.9138;0.9141;0.9138;0.9135;0.7333;0.7508;0.7333;0.7238;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 506};RandomForestClassifier(n_estimators=20, random_state=506)
RandomForestClassifier;0.9051;0.9061;0.9051;0.9049;0.945;0.9466;0.945;0.9447;0.7333;0.7407;0.7333;0.7237;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 314};RandomForestClassifier(n_estimators=10, random_state=314)
RandomForestClassifier;0.9104;0.911;0.9104;0.9103;0.9244;0.9253;0.9244;0.9242;0.7333;0.75;0.7333;0.7235;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9142;0.9153;0.9142;0.9142;0.9141;0.9148;0.9141;0.914;0.7333;0.75;0.7333;0.7235;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 71};RandomForestClassifier(n_estimators=10, random_state=71)
KNeighborsClassifier;0.9047;0.9063;0.9047;0.9047;0.8763;0.8794;0.8763;0.8771;0.7333;0.75;0.7333;0.7235;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9039;0.9046;0.9039;0.9038;0.9345;0.9345;0.9345;0.9344;0.7333;0.7395;0.7333;0.7235;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 865};RandomForestClassifier(n_estimators=10, random_state=865)
RandomForestClassifier;0.9177;0.9181;0.9177;0.9176;0.8897;0.891;0.8897;0.8899;0.7333;0.7383;0.7333;0.7228;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 865};RandomForestClassifier(n_estimators=20, random_state=865)
DecisionTreeClassifier;0.8511;0.8541;0.8511;0.8512;0.8414;0.8464;0.8414;0.842;0.7167;0.7389;0.7167;0.7198;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=863)
DecisionTreeClassifier;0.8496;0.8521;0.8496;0.8496;0.8276;0.8302;0.8276;0.8263;0.7167;0.7389;0.7167;0.7198;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=648)
DecisionTreeClassifier;0.85;0.8524;0.85;0.8501;0.8517;0.8526;0.8517;0.8518;0.7167;0.734;0.7167;0.7194;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
KNeighborsClassifier;0.8537;0.8553;0.8537;0.8535;0.8179;0.8185;0.8179;0.8179;0.7167;0.7396;0.7167;0.7188;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8366;0.8389;0.8366;0.8358;0.8448;0.8451;0.8448;0.8448;0.7167;0.7396;0.7167;0.7188;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.855;0.8558;0.855;0.8547;0.7931;0.7944;0.7931;0.7933;0.7167;0.7396;0.7167;0.7188;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
RandomForestClassifier;0.8557;0.8598;0.8557;0.8558;0.8414;0.8476;0.8414;0.8414;0.7167;0.7342;0.7167;0.7186;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
DecisionTreeClassifier;0.8484;0.851;0.8484;0.8483;0.8103;0.8115;0.8103;0.8102;0.7167;0.7214;0.7167;0.7178;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=392)
DecisionTreeClassifier;0.8511;0.8536;0.8511;0.8513;0.869;0.8725;0.869;0.8687;0.7167;0.7397;0.7167;0.7177;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
DecisionTreeClassifier;0.8565;0.8588;0.8565;0.8565;0.8276;0.8311;0.8276;0.8262;0.7167;0.7397;0.7167;0.7177;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8569;0.8601;0.8569;0.857;0.8276;0.8292;0.8276;0.8273;0.7167;0.7397;0.7167;0.7177;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=392)
DecisionTreeClassifier;0.8492;0.852;0.8492;0.8492;0.8797;0.8798;0.8797;0.8796;0.7167;0.7397;0.7167;0.7177;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
RandomForestClassifier;0.853;0.8569;0.853;0.8532;0.8763;0.8795;0.8763;0.8763;0.7167;0.7397;0.7167;0.7177;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 695};RandomForestClassifier(n_estimators=5, random_state=695)
RandomForestClassifier;0.8523;0.8555;0.8523;0.8524;0.8552;0.8571;0.8552;0.8548;0.7167;0.7397;0.7167;0.7177;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
DecisionTreeClassifier;0.8546;0.8572;0.8546;0.8546;0.8517;0.8537;0.8517;0.8514;0.7167;0.7397;0.7167;0.7177;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
DecisionTreeClassifier;0.8511;0.8537;0.8511;0.8512;0.8557;0.8605;0.8557;0.8556;0.7167;0.7333;0.7167;0.7175;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=648)
KNeighborsClassifier;0.9001;0.9013;0.9001;0.9002;0.9107;0.9137;0.9107;0.9108;0.7167;0.7196;0.7167;0.7172;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.85;0.8525;0.85;0.85;0.8103;0.8206;0.8103;0.8095;0.7167;0.7408;0.7167;0.7172;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=482)
KNeighborsClassifier;0.9032;0.905;0.9032;0.9033;0.9069;0.909;0.9069;0.907;0.7167;0.735;0.7167;0.7169;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8373;0.84;0.8373;0.8374;0.8655;0.8663;0.8655;0.8651;0.7167;0.7185;0.7167;0.7167;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8373;0.84;0.8373;0.8374;0.8655;0.8663;0.8655;0.8651;0.7167;0.7185;0.7167;0.7167;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8522;0.8564;0.8522;0.8523;0.8729;0.8733;0.8729;0.8726;0.7167;0.7365;0.7167;0.7165;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 555};RandomForestClassifier(n_estimators=10, random_state=555)
DecisionTreeClassifier;0.853;0.856;0.853;0.8531;0.8069;0.8168;0.8069;0.8057;0.7167;0.7365;0.7167;0.7165;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=648)
RandomForestClassifier;0.8542;0.8576;0.8542;0.8541;0.8724;0.8731;0.8724;0.8726;0.7167;0.7365;0.7167;0.7165;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 695};RandomForestClassifier(n_estimators=20, random_state=695)
RandomForestClassifier;0.8526;0.8558;0.8526;0.8527;0.8931;0.8947;0.8931;0.8931;0.7167;0.7365;0.7167;0.7165;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
RandomForestClassifier;0.8503;0.8532;0.8503;0.8501;0.8797;0.8836;0.8797;0.8799;0.7167;0.7365;0.7167;0.7165;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
LogisticRegression;0.6797;0.6876;0.6797;0.6789;0.6862;0.6963;0.6862;0.6865;0.7167;0.718;0.7167;0.7162;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6784;0.6871;0.6784;0.6772;0.6735;0.6759;0.6735;0.6743;0.7167;0.718;0.7167;0.7162;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6724;0.6805;0.6724;0.672;0.6931;0.6969;0.6931;0.6916;0.7167;0.718;0.7167;0.7162;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
LogisticRegression;0.6857;0.6953;0.6857;0.685;0.6873;0.7071;0.6873;0.6835;0.7167;0.7203;0.7167;0.7162;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
KNeighborsClassifier;0.8476;0.8501;0.8476;0.8469;0.8213;0.8251;0.8213;0.8222;0.7167;0.718;0.7167;0.7162;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8335;0.8396;0.8335;0.8331;0.8345;0.8412;0.8345;0.8348;0.7167;0.7371;0.7167;0.7162;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.757;0.7758;0.757;0.7586;0.7517;0.77;0.7517;0.7565;0.7167;0.7169;0.7167;0.7159;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7649;0.7854;0.7649;0.7663;0.7698;0.7867;0.7698;0.7731;0.7167;0.7169;0.7167;0.7159;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
RandomForestClassifier;0.8618;0.8648;0.8618;0.8618;0.8172;0.82;0.8172;0.8174;0.7167;0.73;0.7167;0.7156;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
DecisionTreeClassifier;0.8515;0.8542;0.8515;0.8517;0.8379;0.8377;0.8379;0.837;0.7167;0.7165;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
LogisticRegression;0.6854;0.6935;0.6854;0.6849;0.6448;0.6603;0.6448;0.6442;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6766;0.6844;0.6766;0.6753;0.7069;0.7104;0.7069;0.7069;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
LogisticRegression;0.6797;0.6874;0.6797;0.6785;0.6759;0.6859;0.6759;0.6761;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6776;0.6867;0.6776;0.677;0.701;0.7044;0.701;0.7002;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
LogisticRegression;0.6827;0.6892;0.6827;0.6818;0.6759;0.6869;0.6759;0.6744;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
LogisticRegression;0.682;0.6898;0.682;0.6809;0.669;0.6734;0.669;0.6686;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
DecisionTreeClassifier;0.8477;0.8499;0.8477;0.8478;0.831;0.8332;0.831;0.8304;0.7167;0.7165;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
LogisticRegression;0.6835;0.6925;0.6835;0.6834;0.6621;0.6811;0.6621;0.6618;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
DecisionTreeClassifier;0.8507;0.8526;0.8507;0.8505;0.8;0.8019;0.8;0.7997;0.7167;0.7165;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=863)
LogisticRegression;0.682;0.6916;0.682;0.6818;0.7;0.7079;0.7;0.6978;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6839;0.6914;0.6839;0.6824;0.6862;0.6933;0.6862;0.6849;0.7167;0.7182;0.7167;0.7154;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
KNeighborsClassifier;0.8978;0.899;0.8978;0.8977;0.9072;0.9078;0.9072;0.9073;0.7167;0.7214;0.7167;0.7149;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8412;0.8443;0.8412;0.8406;0.8552;0.8576;0.8552;0.8552;0.7167;0.727;0.7167;0.7149;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9032;0.9048;0.9032;0.9032;0.931;0.9313;0.931;0.9311;0.7167;0.7476;0.7167;0.7147;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8951;0.8971;0.8951;0.8953;0.9207;0.9228;0.9207;0.921;0.7167;0.7476;0.7167;0.7147;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9012;0.9022;0.9012;0.9012;0.89;0.89;0.89;0.89;0.7167;0.7476;0.7167;0.7147;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9139;0.9145;0.9139;0.9138;0.9;0.9;0.9;0.8999;0.7167;0.7172;0.7167;0.7143;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 518};RandomForestClassifier(n_estimators=5, random_state=518)
RandomForestClassifier;0.8596;0.8618;0.8596;0.8597;0.8448;0.8448;0.8448;0.8446;0.7167;0.7411;0.7167;0.7143;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
DecisionTreeClassifier;0.8481;0.8515;0.8481;0.848;0.8483;0.8546;0.8483;0.8475;0.7167;0.7411;0.7167;0.7143;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=392)
KNeighborsClassifier;0.8389;0.8411;0.8389;0.8385;0.8345;0.8365;0.8345;0.8344;0.7167;0.725;0.7167;0.7138;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8546;0.8581;0.8546;0.8547;0.8448;0.8493;0.8448;0.8453;0.7167;0.7378;0.7167;0.7132;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 695};RandomForestClassifier(n_estimators=10, random_state=695)
KNeighborsClassifier;0.9001;0.9021;0.9001;0.9002;0.9;0.9025;0.9;0.9005;0.7167;0.7292;0.7167;0.7129;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9162;0.9171;0.9162;0.916;0.8832;0.8836;0.8832;0.8829;0.7167;0.7356;0.7167;0.7124;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 417};RandomForestClassifier(n_estimators=20, random_state=417)
DecisionTreeClassifier;0.907;0.9084;0.907;0.9071;0.9345;0.9349;0.9345;0.9342;0.7167;0.7299;0.7167;0.7121;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 838};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=838)
RandomForestClassifier;0.9077;0.9085;0.9077;0.9077;0.921;0.9209;0.921;0.9207;0.7167;0.7266;0.7167;0.7121;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 417};RandomForestClassifier(n_estimators=10, random_state=417)
DecisionTreeClassifier;0.9085;0.9094;0.9085;0.9084;0.931;0.9314;0.931;0.9309;0.7167;0.7299;0.7167;0.7121;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
KNeighborsClassifier;0.8358;0.8389;0.8358;0.8354;0.8247;0.8261;0.8247;0.8248;0.7167;0.7253;0.7167;0.7114;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8358;0.8389;0.8358;0.8354;0.8247;0.8261;0.8247;0.8248;0.7167;0.7253;0.7167;0.7114;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.902;0.9028;0.902;0.9019;0.9278;0.928;0.9278;0.9277;0.7167;0.7478;0.7167;0.7096;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8982;0.8995;0.8982;0.898;0.9038;0.9042;0.9038;0.9031;0.7167;0.7416;0.7167;0.7096;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9039;0.9047;0.9039;0.9036;0.9244;0.9243;0.9244;0.9243;0.7167;0.7213;0.7167;0.7095;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 314};RandomForestClassifier(n_estimators=10, random_state=314)
RandomForestClassifier;0.9089;0.9102;0.9089;0.9088;0.9103;0.9116;0.9103;0.9102;0.7167;0.7375;0.7167;0.7089;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.9139;0.9152;0.9139;0.9137;0.9138;0.9148;0.9138;0.9133;0.7167;0.7375;0.7167;0.7089;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 417};RandomForestClassifier(n_estimators=20, random_state=417)
RandomForestClassifier;0.917;0.9175;0.917;0.9169;0.9;0.9;0.9;0.8997;0.7167;0.7375;0.7167;0.7089;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 506};RandomForestClassifier(n_estimators=20, random_state=506)
RandomForestClassifier;0.9131;0.914;0.9131;0.913;0.9138;0.9151;0.9138;0.9137;0.7167;0.7375;0.7167;0.7089;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 314};RandomForestClassifier(n_estimators=20, random_state=314)
RandomForestClassifier;0.9101;0.9109;0.9101;0.91;0.9241;0.9247;0.9241;0.9242;0.7167;0.7375;0.7167;0.7089;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 417};RandomForestClassifier(n_estimators=20, random_state=417)
RandomForestClassifier;0.9173;0.9181;0.9173;0.9171;0.9172;0.9176;0.9172;0.9173;0.7167;0.7273;0.7167;0.7089;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 417};RandomForestClassifier(n_estimators=5, random_state=417)
RandomForestClassifier;0.9093;0.9098;0.9093;0.9092;0.9241;0.9241;0.9241;0.9241;0.7167;0.7273;0.7167;0.7089;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 314};RandomForestClassifier(n_estimators=10, random_state=314)
KNeighborsClassifier;0.9032;0.9055;0.9032;0.903;0.8897;0.8914;0.8897;0.8892;0.7167;0.7283;0.7167;0.7086;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9024;0.9041;0.9024;0.9022;0.9175;0.9185;0.9175;0.9176;0.7167;0.7238;0.7167;0.7073;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8951;0.8967;0.8951;0.8947;0.8966;0.8963;0.8966;0.896;0.7167;0.7238;0.7167;0.7073;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8431;0.8454;0.8431;0.843;0.8241;0.8245;0.8241;0.824;0.7;0.7194;0.7;0.7047;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
DecisionTreeClassifier;0.8507;0.8533;0.8507;0.8508;0.8069;0.8107;0.8069;0.8066;0.7;0.728;0.7;0.7027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
KNeighborsClassifier;0.8389;0.842;0.8389;0.8387;0.8517;0.8523;0.8517;0.8517;0.7;0.7272;0.7;0.7026;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8389;0.842;0.8389;0.8387;0.8517;0.8523;0.8517;0.8517;0.7;0.7272;0.7;0.7026;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8328;0.8348;0.8328;0.8326;0.8655;0.8657;0.8655;0.8656;0.7;0.7272;0.7;0.7026;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8335;0.8357;0.8335;0.8337;0.8759;0.8764;0.8759;0.8757;0.7;0.7233;0.7;0.7019;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
DecisionTreeClassifier;0.8504;0.8533;0.8504;0.8506;0.831;0.8326;0.831;0.8299;0.7;0.7238;0.7;0.7014;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=648)
DecisionTreeClassifier;0.8484;0.85;0.8484;0.8482;0.8247;0.826;0.8247;0.8235;0.7;0.7033;0.7;0.7009;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=863)
RandomForestClassifier;0.8538;0.8578;0.8538;0.854;0.8793;0.887;0.8793;0.8794;0.7;0.7167;0.7;0.7008;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 695};RandomForestClassifier(n_estimators=20, random_state=695)
KNeighborsClassifier;0.8974;0.8984;0.8974;0.8972;0.9103;0.9132;0.9103;0.911;0.7;0.7051;0.7;0.7004;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8576;0.861;0.8576;0.8575;0.8557;0.8554;0.8557;0.8554;0.7;0.7205;0.7;0.7004;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
KNeighborsClassifier;0.9001;0.9015;0.9001;0.9001;0.8828;0.8869;0.8828;0.8837;0.7;0.7051;0.7;0.7004;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8523;0.8557;0.8523;0.8524;0.8793;0.8854;0.8793;0.8798;0.7;0.7201;0.7;0.6999;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 308};RandomForestClassifier(n_estimators=10, random_state=308)
RandomForestClassifier;0.8588;0.8621;0.8588;0.8588;0.8448;0.8529;0.8448;0.845;0.7;0.7283;0.7;0.6998;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
DecisionTreeClassifier;0.8511;0.8544;0.8511;0.8511;0.7897;0.7914;0.7897;0.7882;0.7;0.7174;0.7;0.6998;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=863)
LogisticRegression;0.6793;0.6868;0.6793;0.6777;0.6862;0.6854;0.6862;0.6827;0.7;0.701;0.7;0.6996;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 782, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=782)"
LogisticRegression;0.6761;0.6838;0.6761;0.6753;0.6976;0.6987;0.6976;0.6973;0.7;0.701;0.7;0.6996;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 873, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=873)"
LogisticRegression;0.6759;0.6844;0.6759;0.6752;0.7276;0.7296;0.7276;0.7254;0.7;0.701;0.7;0.6996;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
LogisticRegression;0.6774;0.6857;0.6774;0.6766;0.6931;0.6979;0.6931;0.6926;0.7;0.7013;0.7;0.6995;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 514, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=514)"
LogisticRegression;0.6834;0.6915;0.6834;0.6824;0.6804;0.6915;0.6804;0.6807;0.7;0.7013;0.7;0.6995;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 207, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=207)"
RandomForestClassifier;0.8492;0.8527;0.8492;0.8493;0.8625;0.8655;0.8625;0.8627;0.7;0.7296;0.7;0.6992;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
KNeighborsClassifier;0.8366;0.8416;0.8366;0.8359;0.8517;0.8523;0.8517;0.8516;0.7;0.7027;0.7;0.6988;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
LogisticRegression;0.7669;0.784;0.7669;0.7685;0.7517;0.775;0.7517;0.7547;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7532;0.7723;0.7532;0.7551;0.8241;0.8326;0.8241;0.8254;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7513;0.771;0.7513;0.7529;0.7793;0.7918;0.7793;0.783;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7513;0.7707;0.7513;0.7526;0.8172;0.8291;0.8172;0.8188;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7566;0.7764;0.7566;0.7584;0.7897;0.7988;0.7897;0.7918;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7531;0.7736;0.7531;0.7545;0.8276;0.8378;0.8276;0.83;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7531;0.7712;0.7531;0.7547;0.8041;0.8208;0.8041;0.8074;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7555;0.7744;0.7555;0.757;0.7793;0.8042;0.7793;0.782;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7543;0.7732;0.7543;0.7556;0.8;0.815;0.8;0.8034;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7603;0.7804;0.7603;0.7623;0.811;0.8177;0.811;0.8121;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7554;0.7751;0.7554;0.7571;0.7869;0.7941;0.7869;0.7888;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.762;0.7799;0.762;0.7638;0.8;0.8185;0.8;0.8022;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7554;0.775;0.7554;0.7571;0.7621;0.7763;0.7621;0.7657;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7543;0.7738;0.7543;0.7562;0.7862;0.794;0.7862;0.7885;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7558;0.7755;0.7558;0.7579;0.7897;0.7963;0.7897;0.7915;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7536;0.7744;0.7536;0.7551;0.7862;0.7998;0.7862;0.7886;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.757;0.7759;0.757;0.7588;0.7966;0.8043;0.7966;0.7976;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7519;0.7711;0.7519;0.7538;0.8041;0.8187;0.8041;0.8066;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7638;0.7829;0.7638;0.7655;0.811;0.8214;0.811;0.8126;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7527;0.7727;0.7527;0.7535;0.7938;0.8038;0.7938;0.796;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7539;0.7736;0.7539;0.7552;0.8414;0.8508;0.8414;0.843;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7623;0.7812;0.7623;0.7641;0.8034;0.8176;0.8034;0.8045;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
RandomForestClassifier;0.8576;0.8596;0.8576;0.8576;0.8179;0.8204;0.8179;0.8184;0.7;0.6995;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 187};RandomForestClassifier(n_estimators=10, random_state=187)
LogisticRegression;0.7574;0.7764;0.7574;0.7592;0.831;0.8418;0.831;0.8319;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7547;0.7745;0.7547;0.7565;0.7759;0.7878;0.7759;0.779;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7547;0.7748;0.7547;0.7562;0.7897;0.8017;0.7897;0.7911;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7612;0.7801;0.7612;0.763;0.7655;0.7819;0.7655;0.7683;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7543;0.7731;0.7543;0.7558;0.769;0.7862;0.769;0.773;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7555;0.776;0.7555;0.7571;0.769;0.7747;0.769;0.7708;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7555;0.7753;0.7555;0.757;0.7759;0.7856;0.7759;0.7787;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7604;0.7788;0.7604;0.7624;0.8;0.8146;0.8;0.8021;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7515;0.7723;0.7515;0.7528;0.7732;0.7912;0.7732;0.7772;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7684;0.7861;0.7684;0.7703;0.7732;0.7942;0.7732;0.7765;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7527;0.7723;0.7527;0.7544;0.7869;0.7987;0.7869;0.7896;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7565;0.776;0.7565;0.758;0.7973;0.8093;0.7973;0.7998;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7512;0.7707;0.7512;0.7531;0.8207;0.8339;0.8207;0.8232;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 951, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=951)"
LogisticRegression;0.7535;0.7726;0.7535;0.7553;0.8207;0.8378;0.8207;0.8224;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7562;0.7764;0.7562;0.7579;0.7586;0.7784;0.7586;0.7631;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7558;0.7766;0.7558;0.7574;0.7938;0.8183;0.7938;0.7954;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 173, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=173)"
LogisticRegression;0.7524;0.7716;0.7524;0.7538;0.7724;0.7907;0.7724;0.7746;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 398, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=398)"
LogisticRegression;0.7597;0.7794;0.7597;0.7609;0.7828;0.7956;0.7828;0.7846;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7589;0.7769;0.7589;0.7603;0.7379;0.7551;0.7379;0.7426;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7592;0.7768;0.7592;0.7605;0.7732;0.801;0.7732;0.7773;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7561;0.7746;0.7561;0.7578;0.8076;0.8196;0.8076;0.8107;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7542;0.7735;0.7542;0.7555;0.7766;0.7932;0.7766;0.7805;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7611;0.7813;0.7611;0.7628;0.8213;0.8329;0.8213;0.8231;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7608;0.7805;0.7608;0.7625;0.8138;0.8222;0.8138;0.8155;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7566;0.7767;0.7566;0.7582;0.7621;0.7734;0.7621;0.7637;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7662;0.7845;0.7662;0.7677;0.7448;0.7595;0.7448;0.7469;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7532;0.7739;0.7532;0.7548;0.7586;0.7784;0.7586;0.7608;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7555;0.7756;0.7555;0.757;0.8448;0.8593;0.8448;0.8466;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7589;0.7772;0.7589;0.7605;0.7966;0.8172;0.7966;0.798;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 60, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=60)"
LogisticRegression;0.7505;0.7708;0.7505;0.7522;0.8138;0.8192;0.8138;0.8144;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7562;0.7752;0.7562;0.7579;0.8138;0.8281;0.8138;0.8153;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7539;0.7725;0.7539;0.7554;0.7586;0.7817;0.7586;0.7636;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7512;0.771;0.7512;0.7534;0.8007;0.8099;0.8007;0.8024;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7581;0.7766;0.7581;0.7599;0.831;0.8392;0.831;0.8329;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7558;0.7752;0.7558;0.757;0.7595;0.7727;0.7595;0.7622;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 590, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=590)"
LogisticRegression;0.7608;0.7795;0.7608;0.7621;0.7621;0.7869;0.7621;0.7657;0.7;0.7014;0.7;0.6986;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
RandomForestClassifier;0.8527;0.8565;0.8527;0.8526;0.8897;0.8937;0.8897;0.8897;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 308};RandomForestClassifier(n_estimators=10, random_state=308)
RandomForestClassifier;0.8573;0.8608;0.8573;0.8573;0.8517;0.8531;0.8517;0.8512;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.8568;0.8606;0.8568;0.8569;0.8522;0.8545;0.8522;0.8525;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
RandomForestClassifier;0.8588;0.8632;0.8588;0.8586;0.8586;0.8618;0.8586;0.859;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
RandomForestClassifier;0.8523;0.8556;0.8523;0.8522;0.8414;0.8443;0.8414;0.8417;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 555};RandomForestClassifier(n_estimators=10, random_state=555)
RandomForestClassifier;0.8592;0.8623;0.8592;0.8592;0.8483;0.8539;0.8483;0.8487;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
RandomForestClassifier;0.855;0.8582;0.855;0.8551;0.8655;0.8717;0.8655;0.8658;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
RandomForestClassifier;0.8518;0.8561;0.8518;0.852;0.8557;0.8577;0.8557;0.8556;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8607;0.8642;0.8607;0.8608;0.8448;0.8464;0.8448;0.8443;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8584;0.862;0.8584;0.8585;0.8586;0.8596;0.8586;0.8588;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
DecisionTreeClassifier;0.853;0.8555;0.853;0.853;0.8041;0.8118;0.8041;0.8037;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8534;0.8567;0.8534;0.8533;0.8172;0.8184;0.8172;0.8167;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
RandomForestClassifier;0.8564;0.8605;0.8564;0.8567;0.8419;0.8445;0.8419;0.8421;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 308};RandomForestClassifier(n_estimators=10, random_state=308)
RandomForestClassifier;0.8615;0.8641;0.8615;0.8616;0.8483;0.8531;0.8483;0.8483;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.8518;0.8554;0.8518;0.8519;0.89;0.8903;0.89;0.8899;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
DecisionTreeClassifier;0.8458;0.8488;0.8458;0.8457;0.8345;0.8375;0.8345;0.8349;0.7;0.6986;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=482)
RandomForestClassifier;0.8549;0.8589;0.8549;0.8549;0.8759;0.8829;0.8759;0.8762;0.7;0.7245;0.7;0.6984;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 695};RandomForestClassifier(n_estimators=20, random_state=695)
KNeighborsClassifier;0.9024;0.9041;0.9024;0.9024;0.9103;0.9105;0.9103;0.9103;0.7;0.7253;0.7;0.698;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8499;0.8532;0.8499;0.85;0.8729;0.8795;0.8729;0.8728;0.7;0.717;0.7;0.6976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 720};RandomForestClassifier(n_estimators=10, random_state=720)
RandomForestClassifier;0.8565;0.8598;0.8565;0.8564;0.8586;0.8648;0.8586;0.8592;0.7;0.7223;0.7;0.6976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
RandomForestClassifier;0.8641;0.8676;0.8641;0.8641;0.8213;0.8216;0.8213;0.8213;0.7;0.717;0.7;0.6976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 695};RandomForestClassifier(n_estimators=20, random_state=695)
RandomForestClassifier;0.8546;0.8575;0.8546;0.8547;0.8793;0.8822;0.8793;0.8796;0.7;0.7223;0.7;0.6976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
RandomForestClassifier;0.8569;0.861;0.8569;0.8569;0.8483;0.8598;0.8483;0.8485;0.7;0.717;0.7;0.6976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
RandomForestClassifier;0.8534;0.8573;0.8534;0.8535;0.8454;0.8466;0.8454;0.8456;0.7;0.717;0.7;0.6976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
RandomForestClassifier;0.8576;0.8606;0.8576;0.8577;0.8379;0.8414;0.8379;0.8375;0.7;0.717;0.7;0.6976;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
KNeighborsClassifier;0.8393;0.8412;0.8393;0.839;0.8276;0.8317;0.8276;0.8276;0.7;0.7133;0.7;0.6966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8282;0.8329;0.8282;0.8281;0.8345;0.8367;0.8345;0.835;0.7;0.7133;0.7;0.6966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.91;0.9112;0.91;0.9101;0.8935;0.8938;0.8935;0.8934;0.7;0.7078;0.7;0.6966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.9085;0.9089;0.9085;0.9084;0.9172;0.9173;0.9172;0.9172;0.7;0.7078;0.7;0.6966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 8};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=8)
DecisionTreeClassifier;0.9058;0.9067;0.9058;0.9059;0.9175;0.9179;0.9175;0.9174;0.7;0.7078;0.7;0.6966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 581};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=581)
DecisionTreeClassifier;0.9127;0.913;0.9127;0.9126;0.9069;0.9067;0.9069;0.9066;0.7;0.7078;0.7;0.6966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 111};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=111)
DecisionTreeClassifier;0.9062;0.9071;0.9062;0.9062;0.9;0.9033;0.9;0.8995;0.7;0.7078;0.7;0.6966;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 722};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=722)
RandomForestClassifier;0.9112;0.9121;0.9112;0.9111;0.9172;0.9174;0.9172;0.917;0.7;0.7363;0.7;0.696;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 865};RandomForestClassifier(n_estimators=10, random_state=865)
KNeighborsClassifier;0.9047;0.9055;0.9047;0.9045;0.8797;0.8823;0.8797;0.8793;0.7;0.7363;0.7;0.696;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9062;0.9071;0.9062;0.9061;0.9;0.8997;0.9;0.8997;0.7;0.7099;0.7;0.6946;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.8507;0.8538;0.8507;0.851;0.8316;0.8346;0.8316;0.8316;0.6833;0.7102;0.6833;0.6849;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=482)
KNeighborsClassifier;0.8362;0.8402;0.8362;0.8362;0.8655;0.8669;0.8655;0.8651;0.6833;0.6968;0.6833;0.6837;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8526;0.854;0.8526;0.8527;0.8379;0.8386;0.8379;0.8372;0.6833;0.6968;0.6833;0.6837;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 695};RandomForestClassifier(n_estimators=20, random_state=695)
DecisionTreeClassifier;0.8423;0.8457;0.8423;0.8425;0.8414;0.8457;0.8414;0.8408;0.6833;0.6862;0.6833;0.6836;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 392};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=392)
RandomForestClassifier;0.8518;0.8549;0.8518;0.8517;0.8419;0.8412;0.8419;0.8408;0.6833;0.7125;0.6833;0.6835;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 695};RandomForestClassifier(n_estimators=10, random_state=695)
RandomForestClassifier;0.8553;0.8593;0.8553;0.8554;0.8517;0.8538;0.8517;0.8499;0.6833;0.7125;0.6833;0.6835;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
RandomForestClassifier;0.8588;0.862;0.8588;0.8587;0.831;0.8349;0.831;0.8312;0.6833;0.7024;0.6833;0.6834;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 720};RandomForestClassifier(n_estimators=5, random_state=720)
LogisticRegression;0.6709;0.6788;0.6709;0.6698;0.6759;0.6752;0.6759;0.6754;0.6833;0.6833;0.6833;0.6833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 159, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=159)"
KNeighborsClassifier;0.8411;0.8469;0.8411;0.841;0.8385;0.8492;0.8385;0.8398;0.6833;0.7216;0.6833;0.6831;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8485;0.8514;0.8485;0.8485;0.8414;0.8406;0.8414;0.8396;0.6833;0.6917;0.6833;0.6828;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=863)
RandomForestClassifier;0.8581;0.8612;0.8581;0.8581;0.8448;0.8501;0.8448;0.8456;0.6833;0.7093;0.6833;0.6825;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.8527;0.8556;0.8527;0.8529;0.8655;0.8683;0.8655;0.8656;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8492;0.8531;0.8492;0.8493;0.8828;0.884;0.8828;0.8828;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 720};RandomForestClassifier(n_estimators=10, random_state=720)
RandomForestClassifier;0.863;0.866;0.863;0.863;0.8586;0.8625;0.8586;0.858;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.8595;0.8631;0.8595;0.8595;0.8488;0.8514;0.8488;0.8493;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 187};RandomForestClassifier(n_estimators=10, random_state=187)
RandomForestClassifier;0.8511;0.8546;0.8511;0.8511;0.8832;0.8863;0.8832;0.8831;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
RandomForestClassifier;0.8538;0.8577;0.8538;0.8538;0.8759;0.8779;0.8759;0.8761;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 720};RandomForestClassifier(n_estimators=20, random_state=720)
RandomForestClassifier;0.855;0.8579;0.855;0.855;0.8621;0.8663;0.8621;0.8623;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 695};RandomForestClassifier(n_estimators=20, random_state=695)
DecisionTreeClassifier;0.8531;0.856;0.8531;0.8533;0.8517;0.8575;0.8517;0.852;0.6833;0.7084;0.6833;0.6824;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=520)
DecisionTreeClassifier;0.8469;0.8489;0.8469;0.847;0.8241;0.8233;0.8241;0.823;0.6833;0.6959;0.6833;0.6822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=863)
DecisionTreeClassifier;0.853;0.8552;0.853;0.853;0.7931;0.8022;0.7931;0.7914;0.6833;0.6959;0.6833;0.6822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=90)
DecisionTreeClassifier;0.8423;0.8449;0.8423;0.8422;0.8655;0.8667;0.8655;0.8649;0.6833;0.6959;0.6833;0.6822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=90)
DecisionTreeClassifier;0.8573;0.8606;0.8573;0.8573;0.8103;0.811;0.8103;0.8096;0.6833;0.6959;0.6833;0.6822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=482)
RandomForestClassifier;0.8526;0.8559;0.8526;0.8524;0.8729;0.8741;0.8729;0.8732;0.6833;0.7;0.6833;0.6818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 720};RandomForestClassifier(n_estimators=10, random_state=720)
RandomForestClassifier;0.855;0.858;0.855;0.855;0.8621;0.8657;0.8621;0.862;0.6833;0.7;0.6833;0.6818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 695};RandomForestClassifier(n_estimators=10, random_state=695)
DecisionTreeClassifier;0.8465;0.8493;0.8465;0.8466;0.8213;0.8239;0.8213;0.8199;0.6833;0.7;0.6833;0.6818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=520)
LogisticRegression;0.6915;0.7057;0.6915;0.6905;0.6793;0.6978;0.6793;0.6797;0.6833;0.681;0.6833;0.6813;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
KNeighborsClassifier;0.9036;0.9045;0.9036;0.9036;0.8897;0.9001;0.8897;0.8909;0.6833;0.6889;0.6833;0.6813;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8254;0.8294;0.8254;0.8253;0.8591;0.8637;0.8591;0.8595;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8324;0.8368;0.8324;0.8317;0.8552;0.8564;0.8552;0.8555;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8316;0.8361;0.8316;0.8312;0.8448;0.846;0.8448;0.845;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.827;0.831;0.827;0.826;0.8935;0.8944;0.8935;0.8933;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8324;0.8368;0.8324;0.8317;0.8552;0.8564;0.8552;0.8555;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8588;0.8632;0.8588;0.8588;0.8276;0.8297;0.8276;0.8279;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
KNeighborsClassifier;0.8289;0.8318;0.8289;0.8284;0.831;0.8335;0.831;0.8316;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8312;0.8361;0.8312;0.8308;0.8625;0.8646;0.8625;0.8615;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8316;0.8361;0.8316;0.8312;0.8448;0.846;0.8448;0.845;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8254;0.8294;0.8254;0.8253;0.8591;0.8637;0.8591;0.8595;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8366;0.8411;0.8366;0.8362;0.8414;0.8424;0.8414;0.8412;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8358;0.8387;0.8358;0.8356;0.8793;0.881;0.8793;0.8792;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8362;0.8381;0.8362;0.8361;0.8552;0.8566;0.8552;0.855;0.6833;0.6975;0.6833;0.6811;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8266;0.8305;0.8266;0.8261;0.8557;0.8555;0.8557;0.8553;0.6833;0.6875;0.6833;0.681;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.6885;0.7031;0.6885;0.6868;0.6793;0.6845;0.6793;0.6743;0.6833;0.6852;0.6833;0.681;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
DecisionTreeClassifier;0.8511;0.8538;0.8511;0.8514;0.8552;0.8567;0.8552;0.8539;0.6833;0.6952;0.6833;0.6807;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 648};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=648)
DecisionTreeClassifier;0.8507;0.8533;0.8507;0.8506;0.8385;0.8383;0.8385;0.8372;0.6833;0.6952;0.6833;0.6807;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
KNeighborsClassifier;0.8389;0.842;0.8389;0.8386;0.8207;0.8216;0.8207;0.821;0.6833;0.6962;0.6833;0.6803;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8389;0.842;0.8389;0.8386;0.8207;0.8216;0.8207;0.821;0.6833;0.6962;0.6833;0.6803;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.9089;0.9098;0.9089;0.9088;0.9241;0.9254;0.9241;0.9238;0.6833;0.6988;0.6833;0.6802;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 71};RandomForestClassifier(n_estimators=10, random_state=71)
LogisticRegression;0.6858;0.7023;0.6858;0.6846;0.6793;0.7043;0.6793;0.6783;0.6833;0.6902;0.6833;0.6791;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
KNeighborsClassifier;0.9039;0.9055;0.9039;0.9038;0.8966;0.8964;0.8966;0.8965;0.6833;0.7039;0.6833;0.679;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9039;0.905;0.9039;0.9038;0.9;0.9022;0.9;0.9004;0.6833;0.6905;0.6833;0.6788;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
LogisticRegression;0.6864;0.7035;0.6864;0.6845;0.6735;0.6909;0.6735;0.6763;0.6833;0.6806;0.6833;0.6786;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.6881;0.7042;0.6881;0.6871;0.7;0.7165;0.7;0.6997;0.6833;0.6806;0.6833;0.6786;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6866;0.7024;0.6866;0.6848;0.6897;0.7065;0.6897;0.6887;0.6833;0.6842;0.6833;0.6786;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.696;0.714;0.696;0.6956;0.6667;0.6769;0.6667;0.6651;0.6833;0.6806;0.6833;0.6786;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.6923;0.7087;0.6923;0.6908;0.6793;0.6996;0.6793;0.6781;0.6833;0.6806;0.6833;0.6786;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6854;0.7032;0.6854;0.6835;0.7034;0.716;0.7034;0.703;0.6833;0.6806;0.6833;0.6786;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6849;0.7033;0.6849;0.6832;0.7216;0.7394;0.7216;0.722;0.6833;0.6806;0.6833;0.6786;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
KNeighborsClassifier;0.8974;0.8999;0.8974;0.8971;0.9034;0.9041;0.9034;0.9033;0.6833;0.6997;0.6833;0.6778;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.902;0.9042;0.902;0.9019;0.9141;0.9141;0.9141;0.9141;0.6833;0.697;0.6833;0.6772;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8595;0.8631;0.8595;0.8596;0.8414;0.8432;0.8414;0.8412;0.6667;0.7067;0.6667;0.668;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.8546;0.8581;0.8546;0.8547;0.8862;0.8925;0.8862;0.8862;0.6667;0.696;0.6667;0.6677;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
RandomForestClassifier;0.8638;0.867;0.8638;0.8638;0.8448;0.8458;0.8448;0.8451;0.6667;0.696;0.6667;0.6677;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 555};RandomForestClassifier(n_estimators=20, random_state=555)
RandomForestClassifier;0.8488;0.8514;0.8488;0.8487;0.8655;0.8708;0.8655;0.866;0.6667;0.6813;0.6667;0.6672;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 334};RandomForestClassifier(n_estimators=20, random_state=334)
RandomForestClassifier;0.8538;0.8569;0.8538;0.8536;0.8517;0.8534;0.8517;0.8514;0.6667;0.6939;0.6667;0.6669;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 334};RandomForestClassifier(n_estimators=5, random_state=334)
RandomForestClassifier;0.8604;0.863;0.8604;0.8604;0.8276;0.8312;0.8276;0.8273;0.6667;0.6836;0.6667;0.6659;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 187};RandomForestClassifier(n_estimators=20, random_state=187)
KNeighborsClassifier;0.8435;0.8459;0.8435;0.8435;0.8793;0.8797;0.8793;0.8793;0.6667;0.6841;0.6667;0.6656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8224;0.8259;0.8224;0.8224;0.8591;0.8604;0.8591;0.8592;0.6667;0.6841;0.6667;0.6656;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8259;0.83;0.8259;0.8253;0.869;0.8736;0.869;0.8692;0.6667;0.6822;0.6667;0.6653;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8423;0.846;0.8423;0.8422;0.8655;0.8691;0.8655;0.8663;0.6667;0.6822;0.6667;0.6653;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8365;0.8401;0.8365;0.8361;0.8625;0.8638;0.8625;0.8628;0.6667;0.6822;0.6667;0.6653;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8259;0.83;0.8259;0.8253;0.869;0.8736;0.869;0.8692;0.6667;0.6822;0.6667;0.6653;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8423;0.846;0.8423;0.8422;0.8655;0.8691;0.8655;0.8663;0.6667;0.6822;0.6667;0.6653;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8534;0.8556;0.8534;0.8536;0.8207;0.8244;0.8207;0.8186;0.6667;0.6778;0.6667;0.6651;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 482};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=482)
DecisionTreeClassifier;0.8584;0.861;0.8584;0.8584;0.7938;0.7945;0.7938;0.7939;0.6667;0.6778;0.6667;0.6651;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 863};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=863)
DecisionTreeClassifier;0.8538;0.857;0.8538;0.8541;0.8138;0.8179;0.8138;0.813;0.6667;0.6778;0.6667;0.6651;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=520)
LogisticRegression;0.6977;0.7115;0.6977;0.6959;0.6655;0.6832;0.6655;0.6655;0.6667;0.6708;0.6667;0.6638;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6904;0.7068;0.6904;0.69;0.731;0.7477;0.731;0.7277;0.6667;0.6708;0.6667;0.6638;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6892;0.708;0.6892;0.6887;0.669;0.6879;0.669;0.6623;0.6667;0.6708;0.6667;0.6638;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6912;0.7035;0.6912;0.6896;0.6621;0.6639;0.6621;0.6607;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.69;0.706;0.69;0.6881;0.7069;0.7243;0.7069;0.7059;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6937;0.7064;0.6937;0.6919;0.6838;0.7088;0.6838;0.6825;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.6888;0.707;0.6888;0.6874;0.6976;0.7084;0.6976;0.6976;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6862;0.7052;0.6862;0.6849;0.7345;0.7408;0.7345;0.7335;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6961;0.7128;0.6961;0.6953;0.6483;0.6619;0.6483;0.6483;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6965;0.7095;0.6965;0.6953;0.631;0.6452;0.631;0.6294;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.688;0.7029;0.688;0.6864;0.6667;0.6737;0.6667;0.6625;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.6915;0.7083;0.6915;0.6906;0.7;0.7386;0.7;0.6974;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6911;0.7046;0.6911;0.6895;0.6552;0.6699;0.6552;0.655;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6922;0.7116;0.6922;0.6915;0.6667;0.6985;0.6667;0.6666;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.6919;0.7074;0.6919;0.6903;0.6724;0.6972;0.6724;0.6719;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.6889;0.7075;0.6889;0.6877;0.7103;0.7217;0.7103;0.7088;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.6846;0.7007;0.6846;0.6834;0.7552;0.7659;0.7552;0.7534;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.6969;0.7109;0.6969;0.6954;0.6586;0.6667;0.6586;0.6563;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.6954;0.7112;0.6954;0.6949;0.6828;0.7029;0.6828;0.6832;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.687;0.7031;0.687;0.6853;0.6828;0.6969;0.6828;0.683;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.6915;0.7078;0.6915;0.6904;0.7;0.7102;0.7;0.6982;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.695;0.7124;0.695;0.695;0.6931;0.7058;0.6931;0.6877;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.6877;0.7071;0.6877;0.6867;0.6897;0.7123;0.6897;0.6912;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.688;0.7036;0.688;0.6867;0.6942;0.707;0.6942;0.692;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6876;0.707;0.6876;0.687;0.6735;0.6932;0.6735;0.6713;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6887;0.7056;0.6887;0.6877;0.6942;0.7386;0.6942;0.6939;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6975;0.7152;0.6975;0.6966;0.6632;0.6787;0.6632;0.6631;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6885;0.7084;0.6885;0.6872;0.6862;0.7061;0.6862;0.6891;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6888;0.7042;0.6888;0.6877;0.732;0.7388;0.732;0.7312;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6988;0.7125;0.6988;0.6972;0.6759;0.6922;0.6759;0.677;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6854;0.6992;0.6854;0.6836;0.7069;0.7293;0.7069;0.7058;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6889;0.7039;0.6889;0.6874;0.669;0.6821;0.669;0.6636;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6881;0.706;0.6881;0.687;0.6759;0.6882;0.6759;0.6732;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6873;0.7005;0.6873;0.685;0.6931;0.7111;0.6931;0.6922;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6916;0.7075;0.6916;0.6896;0.7034;0.7103;0.7034;0.704;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6862;0.7009;0.6862;0.6847;0.7172;0.7185;0.7172;0.7166;0.6667;0.6646;0.6667;0.6637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6885;0.7069;0.6885;0.6872;0.6793;0.7049;0.6793;0.6774;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6919;0.7077;0.6919;0.69;0.669;0.6788;0.669;0.6662;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.6846;0.7034;0.6846;0.6835;0.7517;0.7578;0.7517;0.751;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 602, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=602)"
LogisticRegression;0.6907;0.7103;0.6907;0.6902;0.6907;0.715;0.6907;0.6896;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 57, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=57)"
LogisticRegression;0.7022;0.7212;0.7022;0.7029;0.6448;0.6673;0.6448;0.6411;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6946;0.7108;0.6946;0.6936;0.6759;0.6871;0.6759;0.6712;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6937;0.7083;0.6937;0.692;0.6735;0.6896;0.6735;0.6738;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
LogisticRegression;0.6877;0.7029;0.6877;0.6857;0.6828;0.701;0.6828;0.6843;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6922;0.7094;0.6922;0.6909;0.7354;0.7448;0.7354;0.736;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
LogisticRegression;0.6873;0.7046;0.6873;0.6857;0.6897;0.7011;0.6897;0.6855;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 68, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=68)"
LogisticRegression;0.6811;0.6981;0.6811;0.6797;0.7423;0.7575;0.7423;0.7409;0.6667;0.6667;0.6667;0.6635;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 637, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=637)"
KNeighborsClassifier;0.9063;0.9076;0.9063;0.9062;0.8966;0.8977;0.8966;0.8968;0.6667;0.6873;0.6667;0.6623;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8362;0.8378;0.8362;0.8362;0.8557;0.8581;0.8557;0.8559;0.65;0.6665;0.65;0.652;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8561;0.8601;0.8561;0.856;0.8655;0.8665;0.8655;0.8656;0.65;0.6685;0.65;0.65;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 334};RandomForestClassifier(n_estimators=5, random_state=334)
KNeighborsClassifier;0.8385;0.8427;0.8385;0.8379;0.831;0.8317;0.831;0.8308;0.65;0.6709;0.65;0.6497;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8343;0.8389;0.8343;0.8339;0.8655;0.8657;0.8655;0.8655;0.65;0.6709;0.65;0.6497;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
LogisticRegression;0.6908;0.7068;0.6908;0.6896;0.6414;0.6483;0.6414;0.6377;0.65;0.6528;0.65;0.6483;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6872;0.7015;0.6872;0.6857;0.6667;0.6698;0.6667;0.6646;0.65;0.6528;0.65;0.6483;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.6853;0.6993;0.6853;0.6839;0.6976;0.7111;0.6976;0.696;0.65;0.6528;0.65;0.6483;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 326, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=326)"
KNeighborsClassifier;0.8431;0.8463;0.8431;0.8433;0.8414;0.8442;0.8414;0.8418;0.6333;0.6628;0.6333;0.6365;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8369;0.8408;0.8369;0.8364;0.8488;0.8554;0.8488;0.8494;0.6333;0.6532;0.6333;0.6343;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
