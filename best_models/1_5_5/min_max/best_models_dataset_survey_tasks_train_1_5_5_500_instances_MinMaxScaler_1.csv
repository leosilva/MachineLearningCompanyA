Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8503;0.8578;0.8503;0.8507;0.9583;0.9595;0.9583;0.9585;0.9167;0.9333;0.9167;0.9174;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.865;0.8689;0.865;0.8653;0.9028;0.9077;0.9028;0.9031;0.9167;0.9333;0.9167;0.9174;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8549;0.8634;0.8549;0.8557;0.9167;0.9242;0.9167;0.9176;0.9167;0.9333;0.9167;0.9174;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.855;0.8619;0.855;0.8553;0.9514;0.9547;0.9514;0.9513;0.9167;0.9333;0.9167;0.9174;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8665;0.8737;0.8665;0.8671;0.9167;0.9195;0.9167;0.9151;0.9167;0.9278;0.9167;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9321;0.9342;0.9321;0.9321;0.9444;0.9457;0.9444;0.9446;0.9167;0.9278;0.9167;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
KNeighborsClassifier;0.8565;0.8633;0.8565;0.8568;0.9028;0.9069;0.9028;0.9018;0.9167;0.9278;0.9167;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8634;0.8727;0.8634;0.8639;0.9236;0.9275;0.9236;0.9237;0.9;0.9231;0.9;0.9019;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9313;0.9329;0.9313;0.9314;0.9444;0.9454;0.9444;0.9441;0.9;0.9076;0.9;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.9329;0.9351;0.9329;0.9329;0.9583;0.9598;0.9583;0.958;0.9;0.9076;0.9;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
RandomForestClassifier;0.9398;0.9423;0.9398;0.9398;0.9375;0.9398;0.9375;0.9379;0.9;0.9076;0.9;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 901};RandomForestClassifier(n_estimators=10, random_state=901)
KNeighborsClassifier;0.8588;0.868;0.8588;0.8594;0.8958;0.8953;0.8958;0.8954;0.9;0.9109;0.9;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9243;0.926;0.9243;0.9244;0.9583;0.9583;0.9583;0.9581;0.9;0.9076;0.9;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
KNeighborsClassifier;0.8596;0.8666;0.8596;0.8597;0.9375;0.9428;0.9375;0.9378;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8658;0.8722;0.8658;0.866;0.9444;0.9474;0.9444;0.945;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9336;0.9371;0.9336;0.9335;0.9167;0.9194;0.9167;0.9172;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
KNeighborsClassifier;0.855;0.8625;0.855;0.8552;0.9375;0.9383;0.9375;0.9377;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8658;0.8733;0.8658;0.8665;0.9097;0.9119;0.9097;0.91;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9313;0.9329;0.9313;0.9312;0.9653;0.9668;0.9653;0.9655;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
KNeighborsClassifier;0.8642;0.8701;0.8642;0.8645;0.9236;0.9237;0.9236;0.9236;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8618;0.8682;0.8618;0.8625;0.9375;0.9403;0.9375;0.938;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8558;0.8617;0.8558;0.8561;0.9583;0.9583;0.9583;0.9583;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8658;0.8733;0.8658;0.8662;0.8889;0.8997;0.8889;0.8893;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8673;0.8718;0.8673;0.8676;0.9514;0.9549;0.9514;0.951;0.9;0.9139;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.939;0.941;0.939;0.9392;0.9028;0.9043;0.9028;0.9029;0.9;0.9042;0.9;0.9006;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
KNeighborsClassifier;0.8611;0.8647;0.8611;0.8615;0.9097;0.9165;0.9097;0.9106;0.9;0.9231;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8728;0.8778;0.8728;0.8731;0.875;0.8777;0.875;0.875;0.9;0.9231;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9321;0.9337;0.9321;0.932;0.9514;0.9522;0.9514;0.9513;0.9;0.9007;0.9;0.9;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
KNeighborsClassifier;0.8673;0.8735;0.8673;0.8677;0.8819;0.8924;0.8819;0.8819;0.9;0.9103;0.9;0.8998;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9275;0.9287;0.9275;0.9276;0.9514;0.9535;0.9514;0.9516;0.9;0.9058;0.9;0.8995;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
KNeighborsClassifier;0.8704;0.877;0.8704;0.8707;0.9028;0.903;0.9028;0.9023;0.9;0.9073;0.9;0.899;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8618;0.8691;0.8618;0.862;0.9236;0.9288;0.9236;0.924;0.8833;0.9025;0.8833;0.8855;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7854;0.7933;0.7854;0.7868;0.9375;0.9379;0.9375;0.9375;0.8833;0.8905;0.8833;0.8846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
MLPClassifier;0.7909;0.8014;0.7909;0.7926;0.8958;0.9026;0.8958;0.8958;0.8833;0.8905;0.8833;0.8846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
MLPClassifier;0.7755;0.7854;0.7755;0.7765;0.9097;0.9102;0.9097;0.9097;0.8833;0.8905;0.8833;0.8846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
MLPClassifier;0.7855;0.7944;0.7855;0.7865;0.9375;0.938;0.9375;0.9375;0.8833;0.8905;0.8833;0.8846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
RandomForestClassifier;0.9398;0.9419;0.9398;0.9398;0.9236;0.9236;0.9236;0.9235;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
RandomForestClassifier;0.9329;0.9352;0.9329;0.9329;0.875;0.8769;0.875;0.8751;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
RandomForestClassifier;0.9367;0.9383;0.9367;0.9367;0.9097;0.9161;0.9097;0.91;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
RandomForestClassifier;0.9313;0.9325;0.9313;0.9311;0.9444;0.9452;0.9444;0.9443;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
RandomForestClassifier;0.9344;0.9364;0.9344;0.9345;0.9097;0.9102;0.9097;0.9097;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.9352;0.9376;0.9352;0.9352;0.9444;0.9456;0.9444;0.9447;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.936;0.9369;0.936;0.936;0.8889;0.8924;0.8889;0.8886;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 901};RandomForestClassifier(n_estimators=10, random_state=901)
KNeighborsClassifier;0.8635;0.8694;0.8635;0.8637;0.9375;0.9374;0.9375;0.9373;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.929;0.9306;0.929;0.9289;0.9236;0.9234;0.9236;0.9233;0.8833;0.8958;0.8833;0.8843;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
MLPClassifier;0.7879;0.7978;0.7879;0.7895;0.9028;0.9027;0.9028;0.9027;0.8833;0.8913;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
KNeighborsClassifier;0.8634;0.8714;0.8634;0.8638;0.8889;0.895;0.8889;0.8891;0.8833;0.8913;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8657;0.8723;0.8657;0.866;0.9306;0.9328;0.9306;0.9296;0.8833;0.8913;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8611;0.8711;0.8611;0.8607;0.9444;0.9452;0.9444;0.9446;0.8833;0.8913;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8672;0.8731;0.8672;0.8675;0.8889;0.8988;0.8889;0.8888;0.8833;0.8913;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.929;0.9306;0.929;0.9291;0.9306;0.9321;0.9306;0.9307;0.8833;0.886;0.8833;0.8832;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.929;0.931;0.929;0.9291;0.9375;0.9408;0.9375;0.9364;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 142};RandomForestClassifier(n_estimators=10, random_state=142)
MLPClassifier;0.7901;0.7992;0.7901;0.7917;0.9167;0.9187;0.9167;0.9164;0.8667;0.8716;0.8667;0.8681;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7932;0.8034;0.7932;0.7945;0.8611;0.8624;0.8611;0.8615;0.8667;0.8716;0.8667;0.8681;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
MLPClassifier;0.7932;0.8036;0.7932;0.794;0.8819;0.8865;0.8819;0.8829;0.8667;0.8716;0.8667;0.8681;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
MLPClassifier;0.7848;0.7943;0.7848;0.7862;0.8611;0.8601;0.8611;0.8605;0.8667;0.8716;0.8667;0.8681;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
MLPClassifier;0.7847;0.793;0.7847;0.7858;0.8958;0.9;0.8958;0.8963;0.8667;0.8775;0.8667;0.8678;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
KNeighborsClassifier;0.8588;0.8689;0.8588;0.8588;0.9375;0.9396;0.9375;0.9377;0.8667;0.8792;0.8667;0.8672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8665;0.8731;0.8665;0.8669;0.9236;0.9257;0.9236;0.9234;0.8667;0.8705;0.8667;0.8672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9313;0.9333;0.9313;0.9315;0.9514;0.9515;0.9514;0.9512;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
DecisionTreeClassifier;0.8858;0.8882;0.8858;0.8858;0.8611;0.8759;0.8611;0.8593;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
RandomForestClassifier;0.9359;0.9383;0.9359;0.9359;0.9167;0.9186;0.9167;0.9166;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.9406;0.9431;0.9406;0.9407;0.9028;0.9035;0.9028;0.9021;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
RandomForestClassifier;0.9344;0.9372;0.9344;0.9346;0.9444;0.945;0.9444;0.9444;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.9314;0.9341;0.9314;0.9314;0.9306;0.9305;0.9306;0.9302;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
RandomForestClassifier;0.9267;0.9288;0.9267;0.9266;0.9375;0.9383;0.9375;0.9377;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
KNeighborsClassifier;0.8573;0.8657;0.8573;0.8585;0.9028;0.903;0.9028;0.9028;0.8667;0.8729;0.8667;0.8671;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7893;0.7996;0.7893;0.7902;0.8889;0.8933;0.8889;0.8879;0.8667;0.8672;0.8667;0.8666;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
RandomForestClassifier;0.9321;0.9346;0.9321;0.9321;0.9375;0.9393;0.9375;0.9375;0.8667;0.8714;0.8667;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
RandomForestClassifier;0.9367;0.9386;0.9367;0.9367;0.9653;0.9658;0.9653;0.9653;0.8667;0.8665;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 413};RandomForestClassifier(n_estimators=20, random_state=413)
MLPClassifier;0.7816;0.7936;0.7816;0.7829;0.9306;0.9326;0.9306;0.9308;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7854;0.7945;0.7854;0.7868;0.875;0.8743;0.875;0.8738;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7894;0.7993;0.7894;0.791;0.8958;0.8949;0.8958;0.8952;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7924;0.8006;0.7924;0.7932;0.8472;0.8529;0.8472;0.8489;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7786;0.7876;0.7786;0.7801;0.9097;0.9102;0.9097;0.9097;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
SVC;0.7886;0.812;0.7886;0.7912;0.875;0.8785;0.875;0.876;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
MLPClassifier;0.7939;0.8033;0.7939;0.7948;0.875;0.8782;0.875;0.8758;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
MLPClassifier;0.7863;0.7943;0.7863;0.7874;0.8194;0.8181;0.8194;0.8185;0.85;0.854;0.85;0.8516;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7832;0.7916;0.7832;0.7843;0.8611;0.8612;0.8611;0.8611;0.85;0.8575;0.85;0.8515;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7856;0.7965;0.7856;0.7868;0.9028;0.9044;0.9028;0.9033;0.85;0.8575;0.85;0.8515;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
RandomForestClassifier;0.9275;0.9299;0.9275;0.9276;0.8889;0.8949;0.8889;0.8892;0.85;0.8605;0.85;0.8503;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 142};RandomForestClassifier(n_estimators=20, random_state=142)
SVC;0.7809;0.8076;0.7809;0.7838;0.8542;0.8577;0.8542;0.8543;0.85;0.85;0.85;0.85;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
RandomForestClassifier;0.9359;0.9377;0.9359;0.9359;0.9306;0.9341;0.9306;0.931;0.85;0.8508;0.85;0.849;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 413};RandomForestClassifier(n_estimators=10, random_state=413)
SVC;0.7856;0.808;0.7856;0.7887;0.8889;0.8938;0.8889;0.8897;0.8333;0.8389;0.8333;0.8352;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
MLPClassifier;0.7893;0.8024;0.7893;0.7912;0.8681;0.869;0.8681;0.8653;0.8333;0.8389;0.8333;0.8352;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
MLPClassifier;0.7862;0.7932;0.7862;0.7875;0.9097;0.9093;0.9097;0.9093;0.8333;0.8373;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 627, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=627)
SVC;0.7894;0.813;0.7894;0.7928;0.8472;0.8552;0.8472;0.8469;0.8333;0.8373;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
MLPClassifier;0.7909;0.8014;0.7909;0.7926;0.8681;0.8712;0.8681;0.8692;0.8333;0.8373;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7848;0.7973;0.7848;0.7862;0.9167;0.9171;0.9167;0.9166;0.8333;0.8373;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7801;0.7916;0.7801;0.7814;0.9167;0.9179;0.9167;0.9159;0.8333;0.8373;0.8333;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
DecisionTreeClassifier;0.9097;0.911;0.9097;0.9096;0.8194;0.8477;0.8194;0.8207;0.8333;0.853;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
MLPClassifier;0.7886;0.7994;0.7886;0.7894;0.875;0.8748;0.875;0.8747;0.8333;0.8338;0.8333;0.8332;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 118, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=118)
MLPClassifier;0.7863;0.7954;0.7863;0.7872;0.8681;0.8705;0.8681;0.8685;0.8333;0.8338;0.8333;0.8332;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
DecisionTreeClassifier;0.9105;0.9129;0.9105;0.9105;0.8333;0.8467;0.8333;0.8316;0.8333;0.8488;0.8333;0.8332;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
DecisionTreeClassifier;0.8958;0.8971;0.8958;0.8958;0.8889;0.8878;0.8889;0.8881;0.8333;0.8381;0.8333;0.8332;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
SVC;0.7924;0.8185;0.7924;0.7942;0.8542;0.8598;0.8542;0.8527;0.8333;0.8338;0.8333;0.8332;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
DecisionTreeClassifier;0.9166;0.9185;0.9166;0.9165;0.8819;0.8862;0.8819;0.8827;0.8333;0.8454;0.8333;0.8318;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9043;0.9074;0.9043;0.9041;0.8958;0.8966;0.8958;0.896;0.8333;0.8454;0.8333;0.8318;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.9036;0.9058;0.9036;0.9036;0.8542;0.8605;0.8542;0.8544;0.8333;0.8454;0.8333;0.8318;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
SVC;0.7855;0.8107;0.7855;0.7888;0.8958;0.9021;0.8958;0.896;0.8167;0.8214;0.8167;0.8181;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
SVC;0.7871;0.8124;0.7871;0.7895;0.8611;0.8692;0.8611;0.863;0.8167;0.8214;0.8167;0.8181;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
SVC;0.7901;0.8136;0.7901;0.7921;0.8611;0.8696;0.8611;0.8626;0.8167;0.8214;0.8167;0.8181;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
DecisionTreeClassifier;0.9128;0.9149;0.9128;0.9129;0.875;0.8797;0.875;0.8757;0.8167;0.8202;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
MLPClassifier;0.7878;0.7956;0.7878;0.7891;0.8819;0.883;0.8819;0.8823;0.8167;0.8167;0.8167;0.8167;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
SVC;0.7716;0.7992;0.7716;0.7743;0.8403;0.8405;0.8403;0.8395;0.8167;0.8167;0.8167;0.8167;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
MLPClassifier;0.7824;0.7912;0.7824;0.7837;0.8472;0.8576;0.8472;0.848;0.8167;0.8167;0.8167;0.8167;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
DecisionTreeClassifier;0.9036;0.9058;0.9036;0.9031;0.9028;0.9071;0.9028;0.9038;0.8167;0.8251;0.8167;0.8163;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.9074;0.9094;0.9074;0.9071;0.8333;0.8347;0.8333;0.8336;0.8167;0.8251;0.8167;0.8163;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
SVC;0.7917;0.8159;0.7917;0.7947;0.8889;0.889;0.8889;0.8889;0.8167;0.8184;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
DecisionTreeClassifier;0.8989;0.9013;0.8989;0.8986;0.8472;0.8508;0.8472;0.8479;0.8167;0.8378;0.8167;0.8157;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8905;0.8916;0.8905;0.8901;0.8611;0.8668;0.8611;0.8617;0.8167;0.822;0.8167;0.8148;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.9129;0.9151;0.9129;0.9127;0.8889;0.8898;0.8889;0.8889;0.8167;0.822;0.8167;0.8148;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
DecisionTreeClassifier;0.8982;0.8998;0.8982;0.8983;0.8958;0.8965;0.8958;0.8957;0.8167;0.822;0.8167;0.8148;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9059;0.9087;0.9059;0.9059;0.8889;0.89;0.8889;0.8884;0.8167;0.822;0.8167;0.8148;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9074;0.9089;0.9074;0.9073;0.8542;0.8582;0.8542;0.8554;0.8167;0.8266;0.8167;0.8141;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.9005;0.9028;0.9005;0.9004;0.8681;0.8723;0.8681;0.8686;0.8167;0.8266;0.8167;0.8141;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.902;0.9051;0.902;0.9018;0.8611;0.8631;0.8611;0.8612;0.8167;0.8335;0.8167;0.8141;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
SVC;0.7739;0.7994;0.7739;0.7766;0.8889;0.8949;0.8889;0.8887;0.8;0.8048;0.8;0.802;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
SVC;0.7824;0.8071;0.7824;0.7852;0.875;0.8803;0.875;0.8741;0.8;0.8048;0.8;0.802;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
SVC;0.7725;0.8015;0.7725;0.7749;0.8611;0.8745;0.8611;0.8623;0.8;0.806;0.8;0.8009;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
DecisionTreeClassifier;0.902;0.9043;0.902;0.9021;0.9097;0.9115;0.9097;0.9096;0.8;0.8064;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
SVC;0.7794;0.8048;0.7794;0.7823;0.8681;0.871;0.8681;0.8669;0.8;0.8004;0.8;0.7999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
SVC;0.7763;0.8027;0.7763;0.7796;0.8542;0.8673;0.8542;0.8565;0.8;0.8004;0.8;0.7999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
DecisionTreeClassifier;0.8966;0.899;0.8966;0.8964;0.9167;0.9211;0.9167;0.9174;0.8;0.8034;0.8;0.7993;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
DecisionTreeClassifier;0.9035;0.9054;0.9035;0.9035;0.8611;0.863;0.8611;0.8618;0.8;0.8034;0.8;0.7993;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
SVC;0.7817;0.806;0.7817;0.7842;0.8264;0.8349;0.8264;0.8226;0.8;0.8035;0.8;0.799;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
SVC;0.7778;0.8012;0.7778;0.7809;0.8403;0.8485;0.8403;0.8389;0.8;0.8035;0.8;0.799;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
SVC;0.7871;0.81;0.7871;0.7903;0.8472;0.8523;0.8472;0.8424;0.8;0.8035;0.8;0.799;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
SVC;0.7855;0.8095;0.7855;0.7879;0.8264;0.827;0.8264;0.8255;0.8;0.8035;0.8;0.799;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
DecisionTreeClassifier;0.9143;0.9159;0.9143;0.9144;0.9097;0.9128;0.9097;0.9102;0.8;0.8005;0.8;0.7977;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
DecisionTreeClassifier;0.9051;0.9061;0.9051;0.905;0.9097;0.9103;0.9097;0.9099;0.8;0.8005;0.8;0.7977;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8928;0.8943;0.8928;0.8922;0.9167;0.9168;0.9167;0.9167;0.8;0.8011;0.8;0.7963;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
SVC;0.774;0.8009;0.774;0.7773;0.8958;0.8984;0.8958;0.8967;0.7833;0.7933;0.7833;0.7861;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
SVC;0.7848;0.8089;0.7848;0.7879;0.8403;0.8556;0.8403;0.842;0.7833;0.7887;0.7833;0.7851;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
SVC;0.7793;0.8052;0.7793;0.7828;0.8958;0.8958;0.8958;0.8958;0.7833;0.7887;0.7833;0.7851;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
SVC;0.7933;0.8151;0.7933;0.7961;0.8333;0.8416;0.8333;0.8355;0.7833;0.7887;0.7833;0.7851;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
SVC;0.7793;0.8037;0.7793;0.782;0.8681;0.8756;0.8681;0.8649;0.7833;0.7887;0.7833;0.7851;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
SVC;0.7793;0.8052;0.7793;0.7826;0.8889;0.8988;0.8889;0.8888;0.7833;0.7887;0.7833;0.7851;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 841};SVC(C=10, random_state=841)
SVC;0.7732;0.7974;0.7732;0.7763;0.8819;0.8854;0.8819;0.8825;0.7833;0.7887;0.7833;0.7851;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
LogisticRegression;0.7392;0.7541;0.7392;0.7402;0.7431;0.7602;0.7431;0.744;0.7833;0.7972;0.7833;0.785;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7346;0.7502;0.7346;0.7353;0.7083;0.7288;0.7083;0.7122;0.7833;0.7884;0.7833;0.7846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7307;0.7414;0.7307;0.7306;0.75;0.7627;0.75;0.7532;0.7833;0.7884;0.7833;0.7846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7285;0.7405;0.7285;0.7292;0.7361;0.7425;0.7361;0.7367;0.7833;0.7884;0.7833;0.7846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7276;0.7432;0.7276;0.7286;0.7222;0.7224;0.7222;0.7213;0.7833;0.7884;0.7833;0.7846;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
DecisionTreeClassifier;0.912;0.9134;0.912;0.912;0.8264;0.8365;0.8264;0.8262;0.7833;0.7833;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
SVC;0.7755;0.7991;0.7755;0.7783;0.8542;0.8684;0.8542;0.8532;0.7833;0.7847;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
SVC;0.7909;0.815;0.7909;0.7941;0.875;0.8778;0.875;0.8748;0.7833;0.7847;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 371};SVC(C=10, random_state=371)
SVC;0.7716;0.7993;0.7716;0.7738;0.8819;0.8853;0.8819;0.8818;0.7833;0.7847;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
SVC;0.7987;0.8219;0.7987;0.8015;0.8264;0.8302;0.8264;0.8258;0.7833;0.7847;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 48};SVC(C=10, random_state=48)
DecisionTreeClassifier;0.9074;0.9089;0.9074;0.9074;0.8333;0.838;0.8333;0.8346;0.7833;0.7831;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 771};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=771)
DecisionTreeClassifier;0.902;0.9035;0.902;0.902;0.8403;0.8415;0.8403;0.8407;0.7833;0.7805;0.7833;0.7805;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
LogisticRegression;0.7408;0.759;0.7408;0.7423;0.6944;0.7093;0.6944;0.6932;0.7667;0.7857;0.7667;0.7698;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7361;0.7525;0.7361;0.7372;0.7569;0.7776;0.7569;0.7592;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7299;0.7497;0.7299;0.7317;0.7014;0.7102;0.7014;0.7007;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7299;0.7491;0.7299;0.7313;0.75;0.7571;0.75;0.7506;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7307;0.7497;0.7307;0.7325;0.7708;0.778;0.7708;0.7717;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7292;0.7445;0.7292;0.7305;0.7361;0.7533;0.7361;0.7393;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7338;0.7511;0.7338;0.7345;0.7083;0.7266;0.7083;0.7087;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7292;0.7487;0.7292;0.7315;0.7361;0.7458;0.7361;0.7372;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7416;0.7566;0.7416;0.7423;0.7639;0.7778;0.7639;0.7654;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7331;0.7503;0.7331;0.7353;0.6319;0.6539;0.6319;0.635;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7323;0.7488;0.7323;0.733;0.7778;0.8066;0.7778;0.78;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7261;0.7413;0.7261;0.727;0.7569;0.7791;0.7569;0.7606;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7214;0.736;0.7214;0.7231;0.7917;0.8006;0.7917;0.7924;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7362;0.7505;0.7362;0.7371;0.7083;0.7143;0.7083;0.7092;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.74;0.7584;0.74;0.7413;0.7292;0.7369;0.7292;0.7314;0.7667;0.7759;0.7667;0.7692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
MLPClassifier;0.7948;0.8057;0.7948;0.7962;0.8542;0.8572;0.8542;0.8554;0.7667;0.7722;0.7667;0.7691;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 790, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=790)
DecisionTreeClassifier;0.9005;0.9028;0.9005;0.9006;0.875;0.8801;0.875;0.8762;0.7667;0.7647;0.7667;0.7653;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9128;0.9162;0.9128;0.9127;0.8681;0.867;0.8681;0.8673;0.7667;0.7639;0.7667;0.7649;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 753};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=753)
DecisionTreeClassifier;0.9136;0.9156;0.9136;0.9135;0.8889;0.8895;0.8889;0.889;0.7667;0.7693;0.7667;0.7612;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
LogisticRegression;0.7345;0.7544;0.7345;0.736;0.7083;0.7332;0.7083;0.7087;0.75;0.7639;0.75;0.7536;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7246;0.7422;0.7246;0.7257;0.7847;0.7917;0.7847;0.7842;0.75;0.7635;0.75;0.753;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7314;0.7502;0.7314;0.7339;0.7361;0.7434;0.7361;0.7367;0.75;0.7635;0.75;0.753;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.727;0.7429;0.727;0.729;0.75;0.7661;0.75;0.7522;0.75;0.7583;0.75;0.7521;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7246;0.7409;0.7246;0.7263;0.7778;0.7881;0.7778;0.779;0.75;0.7583;0.75;0.7521;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7399;0.7586;0.7399;0.7418;0.6597;0.673;0.6597;0.6625;0.75;0.7583;0.75;0.7521;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.7261;0.7446;0.7261;0.7274;0.7431;0.7836;0.7431;0.7479;0.75;0.7583;0.75;0.7521;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7131;0.7249;0.7131;0.7139;0.8194;0.8214;0.8194;0.82;0.75;0.7583;0.75;0.7521;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
LogisticRegression;0.7254;0.7367;0.7254;0.7266;0.7222;0.7268;0.7222;0.723;0.75;0.7529;0.75;0.7511;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 274, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=274)"
LogisticRegression;0.7369;0.7547;0.7369;0.7392;0.6806;0.7109;0.6806;0.684;0.7333;0.746;0.7333;0.7359;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 220, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=220)"
