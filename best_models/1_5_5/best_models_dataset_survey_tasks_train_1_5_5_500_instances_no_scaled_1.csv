Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9005;0.9022;0.9005;0.9;0.9097;0.9108;0.9097;0.91;0.8833;0.8891;0.8833;0.8829;0.9253;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
RandomForestClassifier;0.9375;0.9398;0.9375;0.9375;0.9028;0.9026;0.9028;0.9026;0.8667;0.8681;0.8667;0.867;0.988;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
RandomForestClassifier;0.9359;0.9373;0.9359;0.9359;0.9167;0.9222;0.9167;0.9174;0.8667;0.8681;0.8667;0.867;0.9875;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
DecisionTreeClassifier;0.8858;0.8877;0.8858;0.8854;0.8889;0.8916;0.8889;0.8895;0.8667;0.8764;0.8667;0.8657;0.9143;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
DecisionTreeClassifier;0.9097;0.9117;0.9097;0.9096;0.8819;0.8838;0.8819;0.8823;0.85;0.8641;0.85;0.8499;0.9323;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
RandomForestClassifier;0.9368;0.9388;0.9368;0.9368;0.9514;0.9554;0.9514;0.9516;0.85;0.8497;0.85;0.8495;0.9896;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
RandomForestClassifier;0.9353;0.9375;0.9353;0.9353;0.9375;0.9451;0.9375;0.938;0.85;0.8505;0.85;0.8489;0.9885;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 926};RandomForestClassifier(n_estimators=10, random_state=926)
RandomForestClassifier;0.9344;0.9356;0.9344;0.9343;0.9236;0.9234;0.9236;0.9235;0.85;0.8526;0.85;0.8487;0.9898;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
DecisionTreeClassifier;0.9136;0.915;0.9136;0.9134;0.8403;0.839;0.8403;0.8392;0.85;0.8528;0.85;0.8482;0.9352;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
RandomForestClassifier;0.9336;0.9361;0.9336;0.9336;0.9444;0.945;0.9444;0.9447;0.8333;0.8347;0.8333;0.8337;0.9889;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
RandomForestClassifier;0.9336;0.9352;0.9336;0.9336;0.9236;0.9272;0.9236;0.9237;0.8333;0.8347;0.8333;0.8337;0.989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
RandomForestClassifier;0.9421;0.9445;0.9421;0.9422;0.9306;0.9305;0.9306;0.9305;0.8333;0.836;0.8333;0.8335;0.9863;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
RandomForestClassifier;0.9337;0.9351;0.9337;0.9336;0.9444;0.9444;0.9444;0.9444;0.8333;0.8379;0.8333;0.8333;0.9882;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
DecisionTreeClassifier;0.9028;0.9043;0.9028;0.9026;0.8681;0.8711;0.8681;0.8683;0.8333;0.8333;0.8333;0.8333;0.9271;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
MLPClassifier;0.8024;0.816;0.8024;0.8014;0.7847;0.7853;0.7847;0.7783;0.8333;0.8428;0.8333;0.8333;0.9335;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
RandomForestClassifier;0.9368;0.9383;0.9368;0.9367;0.9444;0.9446;0.9444;0.9444;0.8333;0.8357;0.8333;0.8331;0.9896;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
DecisionTreeClassifier;0.8943;0.8958;0.8943;0.8941;0.8889;0.8882;0.8889;0.8883;0.8333;0.8357;0.8333;0.8331;0.9207;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9028;0.9053;0.9028;0.9028;0.8681;0.8721;0.8681;0.8695;0.8333;0.8354;0.8333;0.833;0.9271;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
RandomForestClassifier;0.9375;0.9391;0.9375;0.9376;0.9444;0.9459;0.9444;0.9442;0.8333;0.8331;0.8333;0.8329;0.9891;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
RandomForestClassifier;0.9344;0.9369;0.9344;0.9343;0.9375;0.9411;0.9375;0.9369;0.8333;0.8331;0.8333;0.8329;0.989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 488};RandomForestClassifier(n_estimators=10, random_state=488)
DecisionTreeClassifier;0.902;0.9032;0.902;0.9019;0.8611;0.8679;0.8611;0.8626;0.8333;0.8374;0.8333;0.8328;0.9265;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9074;0.9108;0.9074;0.9074;0.8611;0.8624;0.8611;0.8617;0.8333;0.8383;0.8333;0.8327;0.9305;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.9167;0.9175;0.9167;0.9165;0.8472;0.8498;0.8472;0.8463;0.8333;0.8383;0.8333;0.8327;0.9375;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
DecisionTreeClassifier;0.8981;0.8988;0.8981;0.8977;0.8611;0.8746;0.8611;0.8616;0.8333;0.8383;0.8333;0.8327;0.9236;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
RandomForestClassifier;0.9429;0.944;0.9429;0.9429;0.9236;0.9241;0.9236;0.9237;0.8333;0.8367;0.8333;0.8324;0.99;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
DecisionTreeClassifier;0.9036;0.9049;0.9036;0.9035;0.9028;0.9023;0.9028;0.9025;0.8333;0.8367;0.8333;0.8324;0.9277;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9043;0.9064;0.9043;0.9043;0.875;0.8744;0.875;0.8746;0.8333;0.8367;0.8333;0.8324;0.9282;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.8935;0.8946;0.8935;0.8933;0.8819;0.8877;0.8819;0.8835;0.8333;0.8383;0.8333;0.831;0.9201;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9043;0.9065;0.9043;0.9043;0.8542;0.869;0.8542;0.8508;0.8333;0.8383;0.8333;0.831;0.9282;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
RandomForestClassifier;0.9344;0.9361;0.9344;0.9344;0.8958;0.8982;0.8958;0.8958;0.8167;0.819;0.8167;0.8168;0.9895;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 488};RandomForestClassifier(n_estimators=10, random_state=488)
RandomForestClassifier;0.9467;0.9482;0.9467;0.9469;0.9444;0.9453;0.9444;0.9446;0.8167;0.8167;0.8167;0.8167;0.9891;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
DecisionTreeClassifier;0.8958;0.8973;0.8958;0.8957;0.8889;0.9033;0.8889;0.8891;0.8167;0.8171;0.8167;0.8166;0.9219;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.902;0.9025;0.902;0.9018;0.8403;0.8423;0.8403;0.8409;0.8167;0.8215;0.8167;0.8165;0.9265;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9004;0.9019;0.9004;0.9004;0.8819;0.8841;0.8819;0.8826;0.8167;0.8215;0.8167;0.8165;0.9253;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.8943;0.895;0.8943;0.8941;0.8542;0.8565;0.8542;0.8541;0.8167;0.8187;0.8167;0.8163;0.9207;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
RandomForestClassifier;0.9352;0.9373;0.9352;0.9351;0.9514;0.9521;0.9514;0.9515;0.8167;0.8164;0.8167;0.8162;0.9877;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
RandomForestClassifier;0.9298;0.9327;0.9298;0.93;0.9653;0.9664;0.9653;0.9653;0.8167;0.8208;0.8167;0.8161;0.9869;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 926};RandomForestClassifier(n_estimators=10, random_state=926)
RandomForestClassifier;0.9329;0.9353;0.9329;0.9331;0.9514;0.9516;0.9514;0.951;0.8167;0.8208;0.8167;0.8161;0.9874;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
KNeighborsClassifier;0.8357;0.84;0.8357;0.8353;0.9375;0.9418;0.9375;0.9383;0.8167;0.8175;0.8167;0.816;0.952;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8403;0.8454;0.8403;0.8408;0.8889;0.892;0.8889;0.889;0.8167;0.8175;0.8167;0.816;0.9537;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9306;0.9326;0.9306;0.9307;0.9792;0.9797;0.9792;0.9792;0.8167;0.8175;0.8167;0.816;0.9861;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
KNeighborsClassifier;0.8372;0.8404;0.8372;0.8369;0.9167;0.9174;0.9167;0.916;0.8167;0.8175;0.8167;0.816;0.9507;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8503;0.8544;0.8503;0.8504;0.9375;0.9385;0.9375;0.9375;0.8167;0.8175;0.8167;0.816;0.9475;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8959;0.8978;0.8959;0.8959;0.8889;0.8899;0.8889;0.889;0.8167;0.8155;0.8167;0.8158;0.9219;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
KNeighborsClassifier;0.841;0.8444;0.841;0.8405;0.9514;0.9535;0.9514;0.9516;0.8167;0.8209;0.8167;0.8158;0.949;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8604;0.8634;0.8604;0.8606;0.9097;0.9119;0.9097;0.91;0.8167;0.8209;0.8167;0.8158;0.9546;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8565;0.8597;0.8565;0.8567;0.9028;0.9054;0.9028;0.9022;0.8167;0.8209;0.8167;0.8158;0.9524;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9383;0.9392;0.9383;0.9382;0.9097;0.9097;0.9097;0.9092;0.8167;0.8155;0.8167;0.8158;0.9881;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 488};RandomForestClassifier(n_estimators=20, random_state=488)
KNeighborsClassifier;0.8442;0.8478;0.8442;0.8441;0.8681;0.8718;0.8681;0.8677;0.8167;0.8172;0.8167;0.8155;0.9491;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8519;0.8553;0.8519;0.8517;0.8819;0.8833;0.8819;0.8823;0.8167;0.8172;0.8167;0.8155;0.9532;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.838;0.842;0.838;0.8376;0.8889;0.8923;0.8889;0.8895;0.8167;0.8238;0.8167;0.8155;0.9477;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8989;0.9003;0.8989;0.899;0.9028;0.9064;0.9028;0.9027;0.8167;0.8172;0.8167;0.8155;0.9242;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
DecisionTreeClassifier;0.9035;0.9051;0.9035;0.9035;0.8819;0.8828;0.8819;0.8822;0.8167;0.822;0.8167;0.8148;0.9275;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
KNeighborsClassifier;0.8279;0.8313;0.8279;0.828;0.9236;0.9267;0.9236;0.9243;0.8167;0.8157;0.8167;0.8147;0.9491;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9329;0.9345;0.9329;0.9329;0.9375;0.9431;0.9375;0.9378;0.8167;0.8171;0.8167;0.8144;0.988;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
MLPClassifier;0.8117;0.8331;0.8117;0.8114;0.7639;0.7641;0.7639;0.7596;0.8;0.8039;0.8;0.8005;0.9348;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
KNeighborsClassifier;0.8456;0.8494;0.8456;0.845;0.9167;0.9215;0.9167;0.9168;0.8;0.8017;0.8;0.7996;0.9507;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8943;0.8952;0.8943;0.8942;0.9167;0.9187;0.9167;0.9169;0.8;0.8042;0.8;0.7992;0.9207;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.912;0.9138;0.912;0.9121;0.9167;0.9187;0.9167;0.9169;0.8;0.7989;0.8;0.7991;0.934;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
DecisionTreeClassifier;0.9012;0.9027;0.9012;0.9007;0.8472;0.8528;0.8472;0.8471;0.8;0.8026;0.8;0.7989;0.926;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=636)
KNeighborsClassifier;0.848;0.8511;0.848;0.8481;0.8889;0.895;0.8889;0.8891;0.8;0.8026;0.8;0.7989;0.9565;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8318;0.8346;0.8318;0.8318;0.8819;0.8824;0.8819;0.8809;0.8;0.8026;0.8;0.7989;0.9501;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8426;0.8437;0.8426;0.8424;0.9306;0.9316;0.9306;0.9306;0.8;0.8026;0.8;0.7989;0.9518;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8511;0.8544;0.8511;0.8509;0.8819;0.8837;0.8819;0.8818;0.8;0.8026;0.8;0.7989;0.9504;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8364;0.8409;0.8364;0.8365;0.9306;0.9329;0.9306;0.9309;0.8;0.8026;0.8;0.7989;0.9463;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8441;0.8477;0.8441;0.8442;0.9306;0.9312;0.9306;0.9303;0.8;0.8026;0.8;0.7989;0.9494;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9313;0.9329;0.9313;0.9314;0.9514;0.9529;0.9514;0.9513;0.8;0.8005;0.8;0.7989;0.9857;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
KNeighborsClassifier;0.8465;0.8508;0.8465;0.8465;0.9028;0.9029;0.9028;0.9024;0.8;0.8026;0.8;0.7989;0.9532;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8441;0.8476;0.8441;0.8444;0.8889;0.8907;0.8889;0.8891;0.8;0.8026;0.8;0.7989;0.9464;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8565;0.8592;0.8565;0.8566;0.9028;0.9084;0.9028;0.9026;0.8;0.8026;0.8;0.7989;0.9541;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8518;0.8548;0.8518;0.8519;0.8819;0.8831;0.8819;0.8812;0.8;0.8026;0.8;0.7989;0.9546;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8364;0.8407;0.8364;0.8363;0.9306;0.9334;0.9306;0.9312;0.8;0.8026;0.8;0.7989;0.9507;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9359;0.9376;0.9359;0.9359;0.9375;0.9374;0.9375;0.937;0.8;0.8018;0.8;0.7986;0.9901;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.9344;0.9367;0.9344;0.9345;0.9583;0.9589;0.9583;0.9583;0.8;0.799;0.8;0.7985;0.9885;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
KNeighborsClassifier;0.8426;0.8473;0.8426;0.8423;0.9028;0.9033;0.9028;0.9028;0.8;0.8069;0.8;0.7983;0.9483;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9329;0.9346;0.9329;0.933;0.9653;0.9671;0.9653;0.9654;0.8;0.7987;0.8;0.798;0.9873;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.9375;0.9394;0.9375;0.9374;0.9236;0.9233;0.9236;0.9234;0.8;0.802;0.8;0.798;0.9895;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 926};RandomForestClassifier(n_estimators=20, random_state=926)
RandomForestClassifier;0.939;0.9416;0.939;0.9391;0.9514;0.953;0.9514;0.9516;0.8;0.7987;0.8;0.798;0.9893;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
DecisionTreeClassifier;0.912;0.9129;0.912;0.9119;0.8542;0.8785;0.8542;0.8546;0.8;0.8165;0.8;0.7962;0.934;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
KNeighborsClassifier;0.8333;0.837;0.8333;0.8335;0.9097;0.91;0.9097;0.9098;0.7833;0.7831;0.7833;0.7822;0.9484;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8426;0.8464;0.8426;0.8427;0.9236;0.9239;0.9236;0.9237;0.7833;0.7831;0.7833;0.7822;0.95;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7964;0.8072;0.7964;0.7966;0.8194;0.824;0.8194;0.8191;0.7833;0.7831;0.7833;0.7822;0.9306;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
MLPClassifier;0.7933;0.8007;0.7933;0.791;0.8611;0.8651;0.8611;0.8596;0.7833;0.7831;0.7833;0.7822;0.9296;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
KNeighborsClassifier;0.8434;0.8466;0.8434;0.843;0.9236;0.9243;0.9236;0.9237;0.7833;0.7884;0.7833;0.7815;0.9528;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8449;0.8477;0.8449;0.845;0.9167;0.9174;0.9167;0.9165;0.7833;0.7884;0.7833;0.7815;0.9488;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9321;0.9334;0.9321;0.9319;0.9375;0.9441;0.9375;0.9385;0.7833;0.7833;0.7833;0.7811;0.9889;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.9352;0.9369;0.9352;0.9351;0.9306;0.9325;0.9306;0.9309;0.7833;0.7833;0.7833;0.7811;0.988;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.9359;0.9376;0.9359;0.936;0.9097;0.9097;0.9097;0.9083;0.7833;0.7804;0.7833;0.7809;0.9903;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
KNeighborsClassifier;0.8488;0.8507;0.8488;0.8486;0.8681;0.8687;0.8681;0.8679;0.7833;0.7933;0.7833;0.7804;0.9549;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.79;0.8037;0.79;0.7899;0.7986;0.8064;0.7986;0.7994;0.7833;0.7857;0.7833;0.78;0.9312;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
MLPClassifier;0.7817;0.7944;0.7817;0.7812;0.8403;0.8457;0.8403;0.8405;0.7833;0.7946;0.7833;0.7786;0.9317;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7862;0.8023;0.7862;0.7849;0.8125;0.8249;0.8125;0.8071;0.7833;0.8034;0.7833;0.7779;0.9334;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7956;0.8111;0.7956;0.7958;0.75;0.7818;0.75;0.7521;0.7833;0.8;0.7833;0.7751;0.937;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
DecisionTreeClassifier;0.905;0.9076;0.905;0.9049;0.8542;0.8542;0.8542;0.8542;0.7667;0.7684;0.7667;0.7662;0.9287;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
DecisionTreeClassifier;0.9067;0.9081;0.9067;0.9064;0.8403;0.8522;0.8403;0.838;0.7667;0.7646;0.7667;0.7647;0.93;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
DecisionTreeClassifier;0.9136;0.9155;0.9136;0.9135;0.8403;0.8607;0.8403;0.8382;0.7667;0.7722;0.7667;0.7646;0.9352;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 636};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=636)
KNeighborsClassifier;0.8526;0.8552;0.8526;0.8524;0.8819;0.8821;0.8819;0.8816;0.7667;0.7698;0.7667;0.7637;0.949;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.801;0.8118;0.801;0.801;0.8125;0.8337;0.8125;0.8117;0.7667;0.7694;0.7667;0.7631;0.9322;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7909;0.7988;0.7909;0.7896;0.8472;0.8512;0.8472;0.8441;0.7667;0.7694;0.7667;0.7631;0.934;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7886;0.8107;0.7886;0.7886;0.8194;0.8218;0.8194;0.8176;0.7667;0.7652;0.7667;0.7619;0.9315;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7933;0.8083;0.7933;0.7917;0.8264;0.8279;0.8264;0.8259;0.7667;0.7648;0.7667;0.7615;0.9344;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
SVC;0.6312;0.7054;0.6312;0.6229;0.7361;0.7735;0.7361;0.7408;0.75;0.754;0.75;0.751;0.7921;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.6304;0.7103;0.6304;0.6199;0.7431;0.7699;0.7431;0.7448;0.75;0.754;0.75;0.751;0.7929;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
SVC;0.6288;0.7045;0.6288;0.6186;0.7847;0.7933;0.7847;0.7864;0.75;0.754;0.75;0.751;0.7897;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
SVC;0.6366;0.7155;0.6366;0.6245;0.7778;0.7887;0.7778;0.7803;0.75;0.754;0.75;0.751;0.7875;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.6373;0.7097;0.6373;0.6264;0.7222;0.7537;0.7222;0.7273;0.75;0.7553;0.75;0.7505;0.7959;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
MLPClassifier;0.7778;0.7907;0.7778;0.7754;0.8611;0.862;0.8611;0.8614;0.75;0.7488;0.75;0.7491;0.9267;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
MLPClassifier;0.7964;0.803;0.7964;0.7938;0.8194;0.8325;0.8194;0.8194;0.75;0.7574;0.75;0.7476;0.9338;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
DecisionTreeClassifier;0.9128;0.9143;0.9128;0.9126;0.8056;0.8169;0.8056;0.7978;0.75;0.761;0.75;0.7454;0.9345;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 787};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=787)
MLPClassifier;0.7909;0.8015;0.7909;0.7899;0.8542;0.8758;0.8542;0.8555;0.75;0.7584;0.75;0.744;0.9302;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
MLPClassifier;0.7886;0.7951;0.7886;0.7879;0.8125;0.8181;0.8125;0.8102;0.75;0.7547;0.75;0.7428;0.9348;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
SVC;0.635;0.7096;0.635;0.6254;0.75;0.7829;0.75;0.7508;0.7333;0.7384;0.7333;0.7346;0.7925;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.6351;0.7127;0.6351;0.6236;0.7153;0.7399;0.7153;0.7169;0.7333;0.7384;0.7333;0.7346;0.7967;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.6273;0.7033;0.6273;0.6174;0.7708;0.8004;0.7708;0.772;0.7333;0.7384;0.7333;0.7346;0.7903;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.628;0.7063;0.628;0.6156;0.7847;0.7979;0.7847;0.7877;0.7333;0.7384;0.7333;0.7346;0.7906;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6289;0.7035;0.6289;0.619;0.7708;0.8075;0.7708;0.7735;0.7333;0.7384;0.7333;0.7346;0.7944;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.6266;0.7053;0.6266;0.6163;0.7986;0.8131;0.7986;0.8019;0.7333;0.7384;0.7333;0.7346;0.7874;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6342;0.7135;0.6342;0.6255;0.75;0.7547;0.75;0.7514;0.7333;0.7384;0.7333;0.7346;0.7904;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.6296;0.706;0.6296;0.6202;0.7361;0.7758;0.7361;0.7338;0.7333;0.7384;0.7333;0.7346;0.7922;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
SVC;0.6311;0.7112;0.6311;0.6189;0.75;0.7675;0.75;0.7519;0.7333;0.7384;0.7333;0.7346;0.7893;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6296;0.7077;0.6296;0.6197;0.7361;0.7628;0.7361;0.7393;0.7333;0.7384;0.7333;0.7346;0.7945;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
SVC;0.6327;0.7137;0.6327;0.6216;0.7708;0.7905;0.7708;0.7732;0.7333;0.7384;0.7333;0.7346;0.7928;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6334;0.712;0.6334;0.6237;0.7986;0.8083;0.7986;0.8005;0.7333;0.7384;0.7333;0.7346;0.7934;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
SVC;0.6319;0.7091;0.6319;0.6212;0.7778;0.8067;0.7778;0.7806;0.7333;0.7384;0.7333;0.7346;0.7901;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6319;0.7085;0.6319;0.6212;0.75;0.7802;0.75;0.7539;0.7333;0.7384;0.7333;0.7346;0.7931;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
MLPClassifier;0.7994;0.8017;0.7994;0.7975;0.7986;0.8349;0.7986;0.7991;0.7333;0.7584;0.7333;0.7344;0.9318;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
MLPClassifier;0.8025;0.8154;0.8025;0.8026;0.7014;0.7634;0.7014;0.7019;0.7333;0.7911;0.7333;0.7325;0.9374;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7939;0.8105;0.7939;0.7928;0.8333;0.8385;0.8333;0.8349;0.7333;0.7431;0.7333;0.7294;0.9335;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
MLPClassifier;0.7755;0.7932;0.7755;0.774;0.8056;0.8211;0.8056;0.8038;0.7333;0.7431;0.7333;0.7294;0.9257;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
MLPClassifier;0.7808;0.7958;0.7808;0.7805;0.7986;0.8125;0.7986;0.8015;0.7333;0.7431;0.7333;0.7294;0.9311;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
MLPClassifier;0.7917;0.8043;0.7917;0.7895;0.7847;0.7918;0.7847;0.7861;0.7333;0.7431;0.7333;0.7294;0.937;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
SVC;0.6327;0.7058;0.6327;0.6228;0.7083;0.7522;0.7083;0.7119;0.7167;0.7232;0.7167;0.7179;0.7935;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6296;0.7048;0.6296;0.6191;0.7986;0.8076;0.7986;0.7997;0.7167;0.7232;0.7167;0.7179;0.7878;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6327;0.709;0.6327;0.6234;0.7917;0.8129;0.7917;0.7947;0.7167;0.7232;0.7167;0.7179;0.7899;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
SVC;0.6335;0.709;0.6335;0.6242;0.75;0.7819;0.75;0.754;0.7167;0.7232;0.7167;0.7179;0.7935;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
SVC;0.6212;0.701;0.6212;0.6094;0.8125;0.8224;0.8125;0.8149;0.7167;0.7232;0.7167;0.7179;0.7868;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
SVC;0.6304;0.7098;0.6304;0.6195;0.7569;0.7718;0.7569;0.7619;0.7167;0.7232;0.7167;0.7179;0.7892;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
MLPClassifier;0.7908;0.7971;0.7908;0.789;0.7847;0.7817;0.7847;0.7816;0.7333;0.7352;0.7333;0.717;0.9349;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
SVC;0.6427;0.7186;0.6427;0.6341;0.625;0.6634;0.625;0.6324;0.7167;0.7185;0.7167;0.7167;0.8008;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 917};SVC(C=10, kernel='linear', probability=True, random_state=917)
MLPClassifier;0.8095;0.813;0.8095;0.8073;0.7847;0.8048;0.7847;0.7845;0.7167;0.7368;0.7167;0.7166;0.9352;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7963;0.8028;0.7963;0.7947;0.7708;0.7732;0.7708;0.7716;0.7167;0.7249;0.7167;0.7132;0.9351;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 5, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=5)
SVC;0.6296;0.7084;0.6296;0.6181;0.7847;0.8071;0.7847;0.7886;0.7;0.7028;0.7;0.6995;0.789;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 670};SVC(C=10, kernel='linear', probability=True, random_state=670)
SVC;0.6389;0.7156;0.6389;0.6263;0.7431;0.765;0.7431;0.7472;0.7;0.7028;0.7;0.6995;0.7925;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 708};SVC(C=10, kernel='linear', probability=True, random_state=708)
LogisticRegression;0.7221;0.729;0.7221;0.7225;0.7639;0.7776;0.7639;0.7668;0.6833;0.6825;0.6833;0.6821;0.8954;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7323;0.7388;0.7323;0.7326;0.6667;0.718;0.6667;0.6626;0.6833;0.6825;0.6833;0.6821;0.9033;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7306;0.7354;0.7306;0.7308;0.75;0.7732;0.75;0.7495;0.6833;0.6825;0.6833;0.6821;0.8996;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.73;0.7353;0.73;0.7294;0.7361;0.7637;0.7361;0.7381;0.6833;0.6825;0.6833;0.6821;0.898;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
SVC;0.6304;0.7069;0.6304;0.6197;0.7917;0.8221;0.7917;0.7942;0.6833;0.6936;0.6833;0.6812;0.7919;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 708};SVC(C=0.1, kernel='linear', probability=True, random_state=708)
SVC;0.6365;0.7114;0.6365;0.626;0.7292;0.7635;0.7292;0.7327;0.6833;0.6936;0.6833;0.6812;0.7962;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 917};SVC(C=0.1, kernel='linear', probability=True, random_state=917)
MLPClassifier;0.8087;0.8152;0.8087;0.8081;0.7292;0.7445;0.7292;0.7305;0.6667;0.6841;0.6667;0.6659;0.9333;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
LogisticRegression;0.7207;0.7267;0.7207;0.7213;0.7569;0.7718;0.7569;0.759;0.6667;0.6652;0.6667;0.6639;0.8958;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7269;0.7326;0.7269;0.7264;0.7431;0.7607;0.7431;0.7466;0.6667;0.6652;0.6667;0.6639;0.8987;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7261;0.7305;0.7261;0.7265;0.7014;0.7244;0.7014;0.7034;0.6667;0.6652;0.6667;0.6639;0.8997;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7199;0.7258;0.7199;0.7205;0.7014;0.7082;0.7014;0.7024;0.6667;0.6652;0.6667;0.6639;0.8976;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7275;0.7333;0.7275;0.7269;0.7569;0.7821;0.7569;0.7562;0.6667;0.6652;0.6667;0.6639;0.8985;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7261;0.7324;0.7261;0.7261;0.7292;0.7558;0.7292;0.7293;0.6667;0.6652;0.6667;0.6639;0.8996;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7114;0.7204;0.7114;0.7122;0.7847;0.7929;0.7847;0.7836;0.6667;0.6652;0.6667;0.6639;0.8943;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7168;0.7206;0.7168;0.717;0.7847;0.8021;0.7847;0.7859;0.6667;0.6652;0.6667;0.6639;0.8953;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7253;0.733;0.7253;0.7262;0.6944;0.7138;0.6944;0.6962;0.6667;0.6652;0.6667;0.6639;0.899;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7244;0.7303;0.7244;0.7241;0.7569;0.7751;0.7569;0.7588;0.6667;0.6652;0.6667;0.6639;0.8976;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7229;0.7304;0.7229;0.7234;0.7569;0.7734;0.7569;0.7539;0.6667;0.6652;0.6667;0.6639;0.8981;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
LogisticRegression;0.7215;0.7258;0.7215;0.7217;0.7639;0.7735;0.7639;0.7648;0.6667;0.6652;0.6667;0.6639;0.8993;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7169;0.7238;0.7169;0.7172;0.7083;0.7386;0.7083;0.7132;0.6667;0.6652;0.6667;0.6639;0.8958;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7145;0.7194;0.7145;0.7142;0.7222;0.7497;0.7222;0.725;0.6667;0.6652;0.6667;0.6639;0.9006;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7207;0.7252;0.7207;0.7212;0.75;0.7737;0.75;0.7492;0.6667;0.6652;0.6667;0.6639;0.8969;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7284;0.736;0.7284;0.7296;0.7292;0.7547;0.7292;0.7283;0.6667;0.6652;0.6667;0.6639;0.9013;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7191;0.7256;0.7191;0.719;0.7639;0.7752;0.7639;0.7622;0.6667;0.6652;0.6667;0.6639;0.8976;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7199;0.7276;0.7199;0.7203;0.6875;0.7381;0.6875;0.6818;0.6667;0.6652;0.6667;0.6639;0.8989;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7177;0.7262;0.7177;0.7178;0.7847;0.7876;0.7847;0.783;0.6667;0.6652;0.6667;0.6639;0.8967;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7153;0.7202;0.7153;0.715;0.7361;0.7483;0.7361;0.7354;0.6667;0.6652;0.6667;0.6639;0.8968;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7231;0.7295;0.7231;0.7228;0.7083;0.7262;0.7083;0.7115;0.6667;0.6652;0.6667;0.6639;0.8978;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7152;0.7241;0.7152;0.7146;0.75;0.7554;0.75;0.7516;0.6667;0.6652;0.6667;0.6639;0.8976;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.723;0.7309;0.723;0.7234;0.7292;0.7683;0.7292;0.7284;0.6667;0.6652;0.6667;0.6639;0.8981;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 181, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=181)"
LogisticRegression;0.7207;0.7287;0.7207;0.7208;0.7153;0.7268;0.7153;0.7108;0.6667;0.6652;0.6667;0.6639;0.9006;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
LogisticRegression;0.7253;0.7298;0.7253;0.7254;0.7222;0.7385;0.7222;0.7213;0.6667;0.6652;0.6667;0.6639;0.898;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
MLPClassifier;0.7963;0.8068;0.7963;0.7964;0.8403;0.8509;0.8403;0.8412;0.6667;0.6885;0.6667;0.6625;0.935;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 890, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=890)
MLPClassifier;0.7831;0.7949;0.7831;0.7837;0.7431;0.7476;0.7431;0.7319;0.6667;0.6685;0.6667;0.6468;0.9313;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
LogisticRegression;0.7253;0.7307;0.7253;0.7255;0.7083;0.7449;0.7083;0.7107;0.65;0.6477;0.65;0.6455;0.9009;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 949, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=949)"
MLPClassifier;0.8048;0.8124;0.8048;0.8041;0.7917;0.8017;0.7917;0.7883;0.65;0.6646;0.65;0.642;0.9369;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
MLPClassifier;0.7847;0.7995;0.7847;0.7851;0.7014;0.7355;0.7014;0.7015;0.65;0.6646;0.65;0.642;0.9353;smote;500;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 447, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=447)
