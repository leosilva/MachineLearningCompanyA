Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8703;0.8753;0.8703;0.8708;0.8819;0.8883;0.8819;0.8838;0.8167;0.8305;0.8167;0.8194;0.964;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 708};RandomForestClassifier(n_estimators=5, random_state=708)
RandomForestClassifier;0.8665;0.8704;0.8665;0.867;0.8819;0.883;0.8819;0.8817;0.8167;0.826;0.8167;0.8187;0.9687;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 708};RandomForestClassifier(n_estimators=20, random_state=708)
RandomForestClassifier;0.865;0.87;0.865;0.8655;0.9028;0.9065;0.9028;0.9033;0.8167;0.8234;0.8167;0.8178;0.9662;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 912};RandomForestClassifier(n_estimators=20, random_state=912)
RandomForestClassifier;0.8742;0.8796;0.8742;0.8747;0.8125;0.8177;0.8125;0.8146;0.8167;0.8234;0.8167;0.8178;0.97;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 912};RandomForestClassifier(n_estimators=20, random_state=912)
RandomForestClassifier;0.8626;0.868;0.8626;0.8633;0.9097;0.9139;0.9097;0.9107;0.8167;0.8234;0.8167;0.8178;0.968;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 912};RandomForestClassifier(n_estimators=20, random_state=912)
KNeighborsClassifier;0.8086;0.8123;0.8086;0.8057;0.875;0.8784;0.875;0.8757;0.8167;0.8208;0.8167;0.8161;0.9325;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8056;0.8052;0.8056;0.8;0.875;0.8763;0.875;0.8754;0.8167;0.8208;0.8167;0.8161;0.9323;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8217;0.8225;0.8217;0.8189;0.8403;0.8413;0.8403;0.84;0.8167;0.8208;0.8167;0.8161;0.9333;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8272;0.8292;0.8272;0.8263;0.8056;0.8052;0.8056;0.8053;0.8167;0.8163;0.8167;0.8141;0.932;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8225;0.8266;0.8225;0.8214;0.8264;0.8282;0.8264;0.8271;0.8167;0.8163;0.8167;0.8141;0.9335;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8356;0.8472;0.8356;0.8355;0.75;0.8131;0.75;0.7546;0.8;0.8416;0.8;0.8017;0.9541;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.8364;0.854;0.8364;0.8358;0.8403;0.8579;0.8403;0.8431;0.8;0.8416;0.8;0.8017;0.9492;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
RandomForestClassifier;0.8743;0.8788;0.8743;0.8751;0.8403;0.8534;0.8403;0.8435;0.8;0.8109;0.8;0.8014;0.969;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 912};RandomForestClassifier(n_estimators=20, random_state=912)
RandomForestClassifier;0.8836;0.8882;0.8836;0.884;0.8333;0.8431;0.8333;0.8356;0.8;0.8102;0.8;0.8014;0.9703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 337};RandomForestClassifier(n_estimators=20, random_state=337)
RandomForestClassifier;0.8735;0.8782;0.8735;0.8741;0.8611;0.8787;0.8611;0.8609;0.8;0.8102;0.8;0.8014;0.9666;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 337};RandomForestClassifier(n_estimators=20, random_state=337)
RandomForestClassifier;0.8719;0.8769;0.8719;0.8725;0.8958;0.8965;0.8958;0.8959;0.8;0.8054;0.8;0.8013;0.9663;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 337};RandomForestClassifier(n_estimators=5, random_state=337)
RandomForestClassifier;0.875;0.8786;0.875;0.8754;0.8542;0.8661;0.8542;0.8567;0.8;0.8054;0.8;0.8013;0.9678;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 912};RandomForestClassifier(n_estimators=20, random_state=912)
RandomForestClassifier;0.8665;0.8714;0.8665;0.8668;0.8819;0.8841;0.8819;0.8826;0.8;0.8038;0.8;0.801;0.9681;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 337};RandomForestClassifier(n_estimators=5, random_state=337)
KNeighborsClassifier;0.8186;0.8204;0.8186;0.8181;0.8333;0.8314;0.8333;0.8321;0.8;0.8064;0.8;0.8007;0.933;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8642;0.868;0.8642;0.8643;0.8542;0.8612;0.8542;0.8539;0.8;0.8005;0.8;0.7999;0.9681;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 708};RandomForestClassifier(n_estimators=20, random_state=708)
KNeighborsClassifier;0.7986;0.8007;0.7986;0.7967;0.8403;0.8429;0.8403;0.8412;0.8;0.8016;0.8;0.7997;0.9231;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8226;0.824;0.8226;0.8209;0.8611;0.8611;0.8611;0.8611;0.8;0.805;0.8;0.7993;0.9404;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.821;0.8227;0.821;0.8187;0.8333;0.8333;0.8333;0.8329;0.8;0.805;0.8;0.7993;0.9374;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8155;0.816;0.8155;0.8126;0.8611;0.8624;0.8611;0.8613;0.8;0.805;0.8;0.7993;0.9289;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.804;0.8077;0.804;0.8007;0.875;0.8766;0.875;0.8756;0.8;0.8068;0.8;0.7989;0.93;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8704;0.8754;0.8704;0.8708;0.9028;0.9031;0.9028;0.9025;0.7833;0.8083;0.7833;0.7881;0.9681;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 708};RandomForestClassifier(n_estimators=5, random_state=708)
MLPClassifier;0.8379;0.8469;0.8379;0.8376;0.8403;0.8545;0.8403;0.8428;0.7833;0.8062;0.7833;0.7869;0.9523;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
RandomForestClassifier;0.8696;0.8736;0.8696;0.8702;0.8681;0.8739;0.8681;0.8697;0.7833;0.8014;0.7833;0.7869;0.9669;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 337};RandomForestClassifier(n_estimators=10, random_state=337)
MLPClassifier;0.8225;0.8353;0.8225;0.8227;0.8819;0.8966;0.8819;0.883;0.7833;0.8062;0.7833;0.7869;0.9505;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
RandomForestClassifier;0.8649;0.8691;0.8649;0.8657;0.8958;0.8966;0.8958;0.8958;0.7833;0.795;0.7833;0.7865;0.9656;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 912};RandomForestClassifier(n_estimators=5, random_state=912)
MLPClassifier;0.8264;0.8378;0.8264;0.8281;0.8542;0.8626;0.8542;0.8527;0.7833;0.8059;0.7833;0.7863;0.9493;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
KNeighborsClassifier;0.8156;0.8167;0.8156;0.8141;0.8125;0.8195;0.8125;0.8132;0.7833;0.797;0.7833;0.7862;0.9348;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8226;0.8352;0.8226;0.8225;0.8403;0.8771;0.8403;0.8355;0.7833;0.8169;0.7833;0.7859;0.9483;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.838;0.8475;0.838;0.838;0.8194;0.843;0.8194;0.8214;0.7833;0.8169;0.7833;0.7859;0.9564;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
MLPClassifier;0.8256;0.8397;0.8256;0.8255;0.8403;0.8455;0.8403;0.84;0.7833;0.7997;0.7833;0.7858;0.9536;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
RandomForestClassifier;0.8658;0.8712;0.8658;0.8666;0.8611;0.866;0.8611;0.8619;0.7833;0.8067;0.7833;0.7857;0.9647;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 708};RandomForestClassifier(n_estimators=5, random_state=708)
MLPClassifier;0.8294;0.8445;0.8294;0.8306;0.8125;0.8486;0.8125;0.8124;0.7833;0.8201;0.7833;0.7856;0.9498;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
DecisionTreeClassifier;0.8642;0.8717;0.8642;0.8655;0.8958;0.9007;0.8958;0.8969;0.7833;0.7986;0.7833;0.7853;0.9553;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=883)
DecisionTreeClassifier;0.8735;0.8805;0.8735;0.8747;0.8542;0.8657;0.8542;0.8555;0.7833;0.7986;0.7833;0.7853;0.959;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
RandomForestClassifier;0.8673;0.8731;0.8673;0.8675;0.9236;0.926;0.9236;0.9242;0.7833;0.7913;0.7833;0.7852;0.965;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 912};RandomForestClassifier(n_estimators=5, random_state=912)
RandomForestClassifier;0.8734;0.8781;0.8734;0.8737;0.8542;0.8599;0.8542;0.856;0.7833;0.7913;0.7833;0.7852;0.9658;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 337};RandomForestClassifier(n_estimators=20, random_state=337)
RandomForestClassifier;0.8804;0.8861;0.8804;0.881;0.8264;0.8387;0.8264;0.8283;0.7833;0.7913;0.7833;0.7852;0.9684;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 912};RandomForestClassifier(n_estimators=5, random_state=912)
DecisionTreeClassifier;0.8673;0.8735;0.8673;0.8683;0.8333;0.8346;0.8333;0.8328;0.7833;0.7927;0.7833;0.785;0.9534;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=883)
KNeighborsClassifier;0.8218;0.8231;0.8218;0.8199;0.8403;0.8455;0.8403;0.8411;0.7833;0.7927;0.7833;0.785;0.9343;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8071;0.8072;0.8071;0.803;0.8681;0.8681;0.8681;0.8676;0.7833;0.7927;0.7833;0.785;0.9322;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8009;0.8022;0.8009;0.7992;0.8889;0.8905;0.8889;0.8894;0.7833;0.7927;0.7833;0.785;0.9273;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8179;0.8183;0.8179;0.8162;0.8542;0.8593;0.8542;0.8557;0.7833;0.7927;0.7833;0.785;0.9333;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.882;0.8886;0.882;0.8827;0.8194;0.8348;0.8194;0.8208;0.7833;0.7927;0.7833;0.785;0.9563;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=259)
RandomForestClassifier;0.8618;0.8661;0.8618;0.8628;0.8958;0.8967;0.8958;0.8962;0.7833;0.7884;0.7833;0.7848;0.9655;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 912};RandomForestClassifier(n_estimators=20, random_state=912)
DecisionTreeClassifier;0.8719;0.8806;0.8719;0.8729;0.8681;0.879;0.8681;0.8699;0.7833;0.808;0.7833;0.7848;0.9539;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
RandomForestClassifier;0.8765;0.8813;0.8765;0.8772;0.8403;0.8447;0.8403;0.8413;0.7833;0.7904;0.7833;0.7847;0.9673;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 708};RandomForestClassifier(n_estimators=20, random_state=708)
MLPClassifier;0.831;0.8433;0.831;0.8312;0.8542;0.8642;0.8542;0.8543;0.7833;0.8068;0.7833;0.7843;0.9528;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
RandomForestClassifier;0.868;0.8721;0.868;0.8686;0.8819;0.898;0.8819;0.8822;0.7833;0.7855;0.7833;0.7841;0.9666;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 708};RandomForestClassifier(n_estimators=20, random_state=708)
RandomForestClassifier;0.8696;0.8745;0.8696;0.8701;0.8542;0.8586;0.8542;0.8556;0.7833;0.7855;0.7833;0.7841;0.9693;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 337};RandomForestClassifier(n_estimators=20, random_state=337)
KNeighborsClassifier;0.8156;0.8227;0.8156;0.8134;0.8542;0.8554;0.8542;0.8515;0.7833;0.7945;0.7833;0.7802;0.9311;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8742;0.8803;0.8742;0.8751;0.8819;0.8821;0.8819;0.8818;0.7667;0.7839;0.7667;0.7705;0.968;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 337};RandomForestClassifier(n_estimators=5, random_state=337)
MLPClassifier;0.828;0.8363;0.828;0.8279;0.8681;0.8736;0.8681;0.8697;0.7667;0.7816;0.7667;0.77;0.9517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
MLPClassifier;0.8264;0.8358;0.8264;0.8272;0.8681;0.875;0.8681;0.8671;0.7667;0.7951;0.7667;0.7695;0.9523;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
DecisionTreeClassifier;0.8611;0.8688;0.8611;0.8622;0.9028;0.903;0.9028;0.9021;0.7667;0.7795;0.7667;0.7691;0.9539;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8743;0.8823;0.8743;0.8755;0.8958;0.9031;0.8958;0.8957;0.7667;0.7795;0.7667;0.7691;0.9543;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=328)
DecisionTreeClassifier;0.8711;0.8779;0.8711;0.8717;0.8611;0.8679;0.8611;0.8615;0.7667;0.7795;0.7667;0.7691;0.958;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=328)
DecisionTreeClassifier;0.8696;0.8756;0.8696;0.8704;0.875;0.8768;0.875;0.8753;0.7667;0.7795;0.7667;0.7691;0.9551;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=883)
KNeighborsClassifier;0.811;0.8133;0.811;0.8097;0.8681;0.8735;0.8681;0.8682;0.7667;0.7754;0.7667;0.7685;0.9285;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8179;0.8189;0.8179;0.8151;0.8542;0.8666;0.8542;0.857;0.7667;0.7754;0.7667;0.7685;0.9305;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
DecisionTreeClassifier;0.8696;0.8775;0.8696;0.8705;0.8611;0.8675;0.8611;0.8621;0.7667;0.7754;0.7667;0.7685;0.9575;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=259)
DecisionTreeClassifier;0.8742;0.8811;0.8742;0.8753;0.8542;0.8599;0.8542;0.856;0.7667;0.7754;0.7667;0.7685;0.9595;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=259)
DecisionTreeClassifier;0.8666;0.8731;0.8666;0.8675;0.8542;0.8545;0.8542;0.8543;0.7667;0.7754;0.7667;0.7685;0.9575;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=259)
DecisionTreeClassifier;0.8689;0.8768;0.8689;0.8693;0.9028;0.9061;0.9028;0.9037;0.7667;0.7754;0.7667;0.7685;0.9559;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
MLPClassifier;0.8217;0.83;0.8217;0.8228;0.8611;0.8627;0.8611;0.8604;0.7667;0.7811;0.7667;0.7682;0.9455;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
RandomForestClassifier;0.8758;0.8825;0.8758;0.876;0.8472;0.8541;0.8472;0.8485;0.7667;0.7711;0.7667;0.768;0.9667;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 708};RandomForestClassifier(n_estimators=10, random_state=708)
RandomForestClassifier;0.8757;0.8812;0.8757;0.8764;0.8611;0.8611;0.8611;0.861;0.7667;0.7711;0.7667;0.768;0.9672;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 708};RandomForestClassifier(n_estimators=20, random_state=708)
RandomForestClassifier;0.8735;0.8783;0.8735;0.8741;0.875;0.8811;0.875;0.8753;0.7667;0.7717;0.7667;0.7679;0.9697;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 337};RandomForestClassifier(n_estimators=20, random_state=337)
KNeighborsClassifier;0.8248;0.8262;0.8248;0.8235;0.8472;0.8619;0.8472;0.8494;0.7667;0.7728;0.7667;0.7676;0.9349;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8087;0.8104;0.8087;0.8054;0.8472;0.8495;0.8472;0.8479;0.7667;0.7738;0.7667;0.7672;0.9289;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.821;0.8256;0.821;0.8198;0.875;0.8751;0.875;0.8746;0.7667;0.7749;0.7667;0.765;0.9327;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8241;0.8235;0.8241;0.8226;0.7986;0.8043;0.7986;0.7976;0.7667;0.7787;0.7667;0.762;0.9314;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8264;0.8358;0.8264;0.8268;0.8403;0.8534;0.8403;0.8435;0.75;0.7677;0.75;0.7549;0.9503;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
MLPClassifier;0.8233;0.8344;0.8233;0.824;0.8333;0.8504;0.8333;0.8374;0.75;0.7677;0.75;0.7549;0.9484;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
KNeighborsClassifier;0.8172;0.8237;0.8172;0.8139;0.8264;0.8462;0.8264;0.8271;0.75;0.7738;0.75;0.7544;0.9366;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8249;0.8437;0.8249;0.8262;0.7986;0.8338;0.7986;0.7987;0.75;0.7738;0.75;0.7544;0.9531;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
MLPClassifier;0.838;0.855;0.838;0.8379;0.7917;0.7959;0.7917;0.7926;0.75;0.7639;0.75;0.7544;0.9579;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
MLPClassifier;0.8125;0.829;0.8125;0.8129;0.875;0.8798;0.875;0.873;0.75;0.7632;0.75;0.754;0.9488;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
DecisionTreeClassifier;0.8718;0.8798;0.8718;0.8729;0.8472;0.8556;0.8472;0.8461;0.75;0.7667;0.75;0.7529;0.9541;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=883)
DecisionTreeClassifier;0.8634;0.8691;0.8634;0.8642;0.875;0.884;0.875;0.8761;0.75;0.7667;0.75;0.7529;0.9549;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=883)
DecisionTreeClassifier;0.8596;0.8646;0.8596;0.8603;0.9028;0.9061;0.9028;0.9037;0.75;0.7615;0.75;0.7528;0.9516;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=883)
DecisionTreeClassifier;0.8688;0.8739;0.8688;0.8694;0.8403;0.8447;0.8403;0.8413;0.75;0.7615;0.75;0.7528;0.9558;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=259)
DecisionTreeClassifier;0.8588;0.8667;0.8588;0.86;0.9097;0.9104;0.9097;0.9098;0.75;0.7615;0.75;0.7528;0.9523;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=259)
KNeighborsClassifier;0.8218;0.824;0.8218;0.8199;0.8611;0.8668;0.8611;0.8622;0.75;0.763;0.75;0.752;0.9337;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8634;0.8704;0.8634;0.8638;0.8958;0.8967;0.8958;0.8962;0.75;0.7588;0.75;0.7519;0.9559;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=328)
DecisionTreeClassifier;0.8711;0.8797;0.8711;0.8719;0.8194;0.8275;0.8194;0.8219;0.75;0.7588;0.75;0.7519;0.9579;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=328)
DecisionTreeClassifier;0.8634;0.8714;0.8634;0.8642;0.8125;0.8098;0.8125;0.8107;0.75;0.7588;0.75;0.7519;0.9551;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=328)
KNeighborsClassifier;0.8241;0.8241;0.8241;0.8225;0.8472;0.8519;0.8472;0.8488;0.75;0.7588;0.75;0.7519;0.9275;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8696;0.8767;0.8696;0.8707;0.8611;0.8594;0.8611;0.8595;0.75;0.7588;0.75;0.7519;0.9586;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 328};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=328)
DecisionTreeClassifier;0.8774;0.8866;0.8774;0.8784;0.8125;0.8186;0.8125;0.8139;0.75;0.7588;0.75;0.7519;0.9611;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=883)
DecisionTreeClassifier;0.8658;0.8735;0.8658;0.8669;0.8681;0.8692;0.8681;0.8686;0.75;0.7588;0.75;0.7519;0.9556;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=259)
DecisionTreeClassifier;0.875;0.8856;0.875;0.876;0.875;0.874;0.875;0.8737;0.75;0.7588;0.75;0.7519;0.9564;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=259)
DecisionTreeClassifier;0.8704;0.8767;0.8704;0.8712;0.875;0.8768;0.875;0.8737;0.75;0.7588;0.75;0.7519;0.9617;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=883)
DecisionTreeClassifier;0.8697;0.8789;0.8697;0.8709;0.8889;0.8917;0.8889;0.8891;0.75;0.7588;0.75;0.7519;0.9558;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=883)
DecisionTreeClassifier;0.8535;0.8592;0.8535;0.8541;0.9028;0.9095;0.9028;0.9038;0.75;0.7588;0.75;0.7519;0.9497;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=259)
KNeighborsClassifier;0.8148;0.8163;0.8148;0.8139;0.8472;0.8647;0.8472;0.8488;0.75;0.7586;0.75;0.7515;0.9325;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8627;0.8671;0.8627;0.8634;0.875;0.8784;0.875;0.8743;0.75;0.7529;0.75;0.7511;0.9676;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 912};RandomForestClassifier(n_estimators=10, random_state=912)
MLPClassifier;0.838;0.8479;0.838;0.8386;0.8056;0.8027;0.8056;0.8026;0.75;0.767;0.75;0.7509;0.9544;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
RandomForestClassifier;0.8673;0.8738;0.8673;0.8673;0.9028;0.9023;0.9028;0.9021;0.75;0.7512;0.75;0.7497;0.9685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 337};RandomForestClassifier(n_estimators=20, random_state=337)
KNeighborsClassifier;0.8233;0.8276;0.8233;0.8225;0.7639;0.7644;0.7639;0.7621;0.75;0.7522;0.75;0.7489;0.9359;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.828;0.8373;0.828;0.8282;0.7847;0.7907;0.7847;0.7865;0.75;0.7725;0.75;0.7478;0.9484;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
KNeighborsClassifier;0.8032;0.8029;0.8032;0.8003;0.8264;0.8246;0.8264;0.8251;0.75;0.7602;0.75;0.7474;0.9345;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8164;0.8337;0.8164;0.8166;0.8403;0.8438;0.8403;0.8409;0.7333;0.75;0.7333;0.7387;0.95;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
MLPClassifier;0.8217;0.8433;0.8217;0.8225;0.7986;0.7973;0.7986;0.7979;0.7333;0.7481;0.7333;0.7382;0.9507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
MLPClassifier;0.8279;0.8383;0.8279;0.8276;0.8194;0.8178;0.8194;0.8177;0.7333;0.7501;0.7333;0.7378;0.953;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
MLPClassifier;0.8348;0.8466;0.8348;0.8366;0.8194;0.8334;0.8194;0.8224;0.7333;0.7478;0.7333;0.7375;0.9489;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
DecisionTreeClassifier;0.8673;0.8753;0.8673;0.8686;0.8958;0.8951;0.8958;0.8946;0.7333;0.7443;0.7333;0.7364;0.9554;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 259};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=259)
DecisionTreeClassifier;0.8595;0.866;0.8595;0.8607;0.8403;0.8402;0.8403;0.8388;0.7333;0.7436;0.7333;0.736;0.9569;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 883};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=883)
SVC;0.6373;0.6369;0.6373;0.6354;0.8264;0.8353;0.8264;0.8271;0.7333;0.7482;0.7333;0.7354;0.8121;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
SVC;0.6482;0.6524;0.6482;0.6479;0.7917;0.796;0.7917;0.793;0.7333;0.7482;0.7333;0.7354;0.8161;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
MLPClassifier;0.8248;0.8428;0.8248;0.8257;0.8542;0.8626;0.8542;0.8564;0.7333;0.7528;0.7333;0.7331;0.9493;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
SVC;0.6519;0.6531;0.6519;0.651;0.8403;0.8473;0.8403;0.8414;0.7167;0.7305;0.7167;0.7198;0.8189;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
SVC;0.6396;0.6408;0.6396;0.6379;0.8125;0.8232;0.8125;0.8146;0.7167;0.7305;0.7167;0.7198;0.8157;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
LogisticRegression;0.8233;0.8306;0.8233;0.8247;0.75;0.7602;0.75;0.7528;0.7167;0.7305;0.7167;0.7198;0.9354;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
SVC;0.6504;0.6542;0.6504;0.6497;0.7986;0.8147;0.7986;0.7987;0.7167;0.7305;0.7167;0.7198;0.8135;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.6435;0.6436;0.6435;0.6412;0.8333;0.8429;0.8333;0.8363;0.7167;0.7305;0.7167;0.7198;0.8176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.6459;0.6481;0.6459;0.6458;0.7917;0.8032;0.7917;0.7942;0.7167;0.7305;0.7167;0.7198;0.8183;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
SVC;0.6444;0.6437;0.6444;0.6429;0.8403;0.8423;0.8403;0.8408;0.7167;0.7305;0.7167;0.7198;0.8158;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
LogisticRegression;0.8164;0.8256;0.8164;0.8184;0.8056;0.8226;0.8056;0.8067;0.7167;0.7305;0.7167;0.7198;0.9344;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
LogisticRegression;0.8156;0.8257;0.8156;0.8171;0.8264;0.8382;0.8264;0.8289;0.7167;0.7305;0.7167;0.7198;0.9311;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
MLPClassifier;0.8279;0.8385;0.8279;0.8268;0.7986;0.8062;0.7986;0.7975;0.7167;0.7345;0.7167;0.7184;0.9548;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 977, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=977)
MLPClassifier;0.8217;0.8376;0.8217;0.8227;0.8819;0.8823;0.8819;0.8821;0.7167;0.7222;0.7167;0.7161;0.9493;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
MLPClassifier;0.8396;0.8479;0.8396;0.8401;0.7986;0.8012;0.7986;0.7989;0.7167;0.7253;0.7167;0.7159;0.9557;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
RandomForestClassifier;0.8688;0.8724;0.8688;0.8692;0.8125;0.8198;0.8125;0.8153;0.7;0.7268;0.7;0.7063;0.9686;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 708};RandomForestClassifier(n_estimators=5, random_state=708)
MLPClassifier;0.8302;0.842;0.8302;0.8314;0.8542;0.8536;0.8542;0.8537;0.7;0.7128;0.7;0.7045;0.9506;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 258, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=258)
SVC;0.6427;0.6442;0.6427;0.6415;0.8333;0.8484;0.8333;0.836;0.7;0.7137;0.7;0.704;0.8164;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 830};SVC(C=10, kernel='linear', probability=True, random_state=830)
LogisticRegression;0.8164;0.8278;0.8164;0.8182;0.8333;0.8364;0.8333;0.8337;0.7;0.7137;0.7;0.704;0.9309;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
SVC;0.6397;0.6406;0.6397;0.6382;0.8264;0.8285;0.8264;0.8272;0.7;0.7137;0.7;0.704;0.8126;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 177};SVC(C=1, kernel='linear', probability=True, random_state=177)
LogisticRegression;0.8125;0.8218;0.8125;0.8144;0.8403;0.8498;0.8403;0.8403;0.7;0.7137;0.7;0.704;0.9313;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8218;0.8317;0.8218;0.8235;0.7917;0.8012;0.7917;0.7916;0.7;0.7137;0.7;0.704;0.9338;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8125;0.8204;0.8125;0.814;0.8403;0.8497;0.8403;0.8422;0.7;0.7137;0.7;0.704;0.9313;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8179;0.8268;0.8179;0.8195;0.8125;0.8182;0.8125;0.8146;0.7;0.7137;0.7;0.704;0.9322;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
SVC;0.6474;0.6488;0.6474;0.6459;0.8194;0.8259;0.8194;0.8212;0.7;0.7163;0.7;0.703;0.8184;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
SVC;0.6404;0.6413;0.6404;0.6384;0.8194;0.8258;0.8194;0.8219;0.7;0.7163;0.7;0.703;0.8168;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
SVC;0.6326;0.6354;0.6326;0.6301;0.8264;0.8366;0.8264;0.8292;0.7;0.7163;0.7;0.703;0.815;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
LogisticRegression;0.8195;0.8289;0.8195;0.8211;0.8056;0.8096;0.8056;0.807;0.7;0.7163;0.7;0.703;0.9348;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
SVC;0.6381;0.6387;0.6381;0.6368;0.8333;0.8437;0.8333;0.8357;0.7;0.7163;0.7;0.703;0.8134;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
SVC;0.6327;0.6345;0.6327;0.6307;0.7778;0.7884;0.7778;0.7807;0.7;0.7163;0.7;0.703;0.8165;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
SVC;0.6312;0.6328;0.6312;0.6297;0.8056;0.8113;0.8056;0.8074;0.7;0.7163;0.7;0.703;0.8173;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
SVC;0.6312;0.6293;0.6312;0.6272;0.7917;0.8003;0.7917;0.7938;0.7;0.7163;0.7;0.703;0.8116;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
SVC;0.6373;0.6377;0.6373;0.6348;0.7986;0.8013;0.7986;0.7989;0.7;0.7163;0.7;0.703;0.8122;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
SVC;0.6366;0.6394;0.6366;0.6341;0.8125;0.8219;0.8125;0.8154;0.7;0.7163;0.7;0.703;0.8186;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
SVC;0.6335;0.6352;0.6335;0.6317;0.8333;0.8323;0.8333;0.8326;0.7;0.7163;0.7;0.703;0.812;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.642;0.6428;0.642;0.6401;0.8403;0.8457;0.8403;0.8404;0.7;0.7163;0.7;0.703;0.8121;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
SVC;0.6404;0.6431;0.6404;0.6391;0.7847;0.7925;0.7847;0.7873;0.7;0.7163;0.7;0.703;0.8154;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
LogisticRegression;0.8133;0.8216;0.8133;0.8151;0.8264;0.836;0.8264;0.8285;0.7;0.7163;0.7;0.703;0.9311;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8133;0.8229;0.8133;0.8151;0.8472;0.8545;0.8472;0.8492;0.7;0.7163;0.7;0.703;0.9315;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8163;0.8253;0.8163;0.8175;0.8264;0.8383;0.8264;0.8293;0.7;0.7163;0.7;0.703;0.9335;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
SVC;0.642;0.6436;0.642;0.6397;0.7986;0.8067;0.7986;0.8013;0.7;0.7163;0.7;0.703;0.8154;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 830};SVC(C=0.1, kernel='linear', probability=True, random_state=830)
LogisticRegression;0.8071;0.8164;0.8071;0.8089;0.9028;0.9056;0.9028;0.9034;0.7;0.7163;0.7;0.703;0.929;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
LogisticRegression;0.8164;0.8272;0.8164;0.8181;0.8194;0.8233;0.8194;0.8207;0.7;0.7163;0.7;0.703;0.9311;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
SVC;0.6404;0.6454;0.6404;0.6367;0.8472;0.8518;0.8472;0.8477;0.7;0.7163;0.7;0.703;0.8118;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.6452;0.6479;0.6452;0.6443;0.8056;0.8156;0.8056;0.8086;0.7;0.7163;0.7;0.703;0.8182;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.642;0.6446;0.642;0.6407;0.8542;0.8526;0.8542;0.8529;0.7;0.7163;0.7;0.703;0.8139;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.6296;0.633;0.6296;0.6288;0.8333;0.8401;0.8333;0.8355;0.7;0.7163;0.7;0.703;0.8154;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.6289;0.632;0.6289;0.6265;0.7708;0.7843;0.7708;0.7731;0.7;0.7163;0.7;0.703;0.816;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
SVC;0.6397;0.6406;0.6397;0.6383;0.8056;0.8082;0.8056;0.8065;0.7;0.7163;0.7;0.703;0.8092;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 793};SVC(C=0.1, kernel='linear', probability=True, random_state=793)
MLPClassifier;0.8233;0.8345;0.8233;0.8236;0.7986;0.8027;0.7986;0.7992;0.7;0.7084;0.7;0.7029;0.9483;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 190, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=190)
LogisticRegression;0.8156;0.8242;0.8156;0.817;0.7917;0.7974;0.7917;0.793;0.7;0.7087;0.7;0.7024;0.9338;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
KNeighborsClassifier;0.8164;0.8192;0.8164;0.8154;0.8681;0.8709;0.8681;0.8691;0.7;0.7037;0.7;0.6986;0.9296;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
LogisticRegression;0.8171;0.8276;0.8171;0.8187;0.8125;0.8229;0.8125;0.8149;0.6833;0.6991;0.6833;0.6875;0.935;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8179;0.8264;0.8179;0.8198;0.7778;0.7836;0.7778;0.7795;0.6833;0.6991;0.6833;0.6875;0.9352;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8148;0.8217;0.8148;0.816;0.8403;0.846;0.8403;0.8423;0.6833;0.6991;0.6833;0.6875;0.9309;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
LogisticRegression;0.8202;0.8285;0.8202;0.8216;0.8125;0.8168;0.8125;0.8141;0.6833;0.6991;0.6833;0.6875;0.9337;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
SVC;0.6274;0.6268;0.6274;0.6224;0.8125;0.8179;0.8125;0.8137;0.6833;0.6991;0.6833;0.6875;0.813;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 177};SVC(C=0.1, kernel='linear', probability=True, random_state=177)
LogisticRegression;0.8202;0.8277;0.8202;0.822;0.7847;0.7952;0.7847;0.7878;0.6833;0.6991;0.6833;0.6875;0.9349;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
LogisticRegression;0.821;0.83;0.821;0.8226;0.8056;0.8082;0.8056;0.8062;0.6833;0.6991;0.6833;0.6875;0.9326;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
LogisticRegression;0.8141;0.8208;0.8141;0.8154;0.8333;0.8416;0.8333;0.8355;0.6833;0.6991;0.6833;0.6875;0.9303;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
LogisticRegression;0.8194;0.8261;0.8194;0.8212;0.7986;0.8113;0.7986;0.801;0.6833;0.6991;0.6833;0.6875;0.9336;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
LogisticRegression;0.821;0.829;0.821;0.8227;0.7847;0.7981;0.7847;0.7884;0.6833;0.6914;0.6833;0.6862;0.9326;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 231, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=231)"
LogisticRegression;0.8226;0.8308;0.8226;0.8241;0.7639;0.7702;0.7639;0.7663;0.6833;0.6914;0.6833;0.6862;0.9337;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
LogisticRegression;0.8172;0.8256;0.8172;0.8182;0.8194;0.8254;0.8194;0.8201;0.6667;0.6767;0.6667;0.6698;0.9336;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 370, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=370)"
LogisticRegression;0.8172;0.825;0.8172;0.8186;0.8264;0.8413;0.8264;0.8275;0.6667;0.6767;0.6667;0.6698;0.9318;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
LogisticRegression;0.8187;0.8256;0.8187;0.8202;0.8056;0.8123;0.8056;0.8075;0.6667;0.6767;0.6667;0.6698;0.9337;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
LogisticRegression;0.8164;0.823;0.8164;0.8179;0.8125;0.8301;0.8125;0.8146;0.6667;0.6767;0.6667;0.6698;0.9314;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
LogisticRegression;0.8124;0.8202;0.8124;0.8142;0.8611;0.8649;0.8611;0.8618;0.6667;0.6767;0.6667;0.6698;0.9311;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 384, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=384)"
