Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.8763,0.8781,0.8763,0.8767,0.8736,0.8749,0.8736,0.874,0.8167,0.8215,0.8167,0.8165,0.9606,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'E']",10,"{'n_estimators': 20, 'random_state': 386}","RandomForestClassifier(n_estimators=20, random_state=386)"
KNeighborsClassifier,0.8786,0.882,0.8786,0.8794,0.8781,0.8829,0.8781,0.8789,0.7833,0.7838,0.7833,0.7832,0.959,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'}","KNeighborsClassifier(metric='manhattan', p=1)"
KNeighborsClassifier,0.8785,0.8815,0.8785,0.8793,0.873,0.8773,0.873,0.8739,0.7667,0.819,0.7667,0.7682,0.9606,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'}","KNeighborsClassifier(metric='manhattan', p=1)"
RandomForestClassifier,0.8743,0.8762,0.8743,0.8745,0.8781,0.8787,0.8781,0.8783,0.75,0.7761,0.75,0.7526,0.9581,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'n_estimators': 10, 'random_state': 994}","RandomForestClassifier(n_estimators=10, random_state=994)"
MLPClassifier,0.7518,0.7627,0.7518,0.7538,0.7478,0.7721,0.7478,0.7526,0.7167,0.717,0.7167,0.7166,0.916,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 200, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=200)"
DecisionTreeClassifier,0.8572,0.8618,0.8572,0.8579,0.8674,0.8715,0.8674,0.8671,0.7167,0.718,0.7167,0.7162,0.9553,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 427}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=427)"
SVC,0.6984,0.7074,0.6984,0.7013,0.6963,0.7069,0.6963,0.6996,0.7,0.7579,0.7,0.7003,0.8758,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 936}","SVC(C=10, probability=True, random_state=936)"
DecisionTreeClassifier,0.8536,0.859,0.8536,0.8544,0.8468,0.8507,0.8468,0.8478,0.7,0.7078,0.7,0.6966,0.9562,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 347}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=347)"
MLPClassifier,0.7247,0.736,0.7247,0.7243,0.7148,0.7143,0.7148,0.7133,0.6833,0.7084,0.6833,0.6824,0.9031,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 513, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=513)"
KNeighborsClassifier,0.882,0.8857,0.882,0.8826,0.8786,0.8821,0.8786,0.8795,0.6833,0.7027,0.6833,0.6772,0.963,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)"
LogisticRegression,0.7043,0.7032,0.7043,0.7031,0.6868,0.689,0.6868,0.6878,0.6333,0.6357,0.6333,0.6306,0.8736,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 451, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=451)"
SVC,0.7005,0.7072,0.7005,0.7035,0.7198,0.7304,0.7198,0.7225,0.6167,0.6366,0.6167,0.6202,0.8739,smote,3000,no_scaled,"['storyPoints', 'polarity_mean', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 416}","SVC(C=10, probability=True, random_state=416)"
RandomForestClassifier,0.8806,0.8821,0.8806,0.8807,0.8697,0.872,0.8697,0.8703,0.6333,0.6361,0.6333,0.62,0.962,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'n_estimators': 10, 'random_state': 643}","RandomForestClassifier(n_estimators=10, random_state=643)"
MLPClassifier,0.7615,0.7664,0.7615,0.7598,0.7752,0.7847,0.7752,0.7772,0.6167,0.6395,0.6167,0.6135,0.9143,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'max_iter': 100000, 'random_state': 357, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=357)"
LogisticRegression,0.702,0.7026,0.702,0.7022,0.6924,0.6977,0.6924,0.6945,0.6167,0.6473,0.6167,0.6054,0.869,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 377, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=377)"
DecisionTreeClassifier,0.8592,0.8621,0.8592,0.8593,0.8658,0.8684,0.8658,0.8664,0.6,0.5958,0.6,0.5945,0.9566,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 318}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=318)"
LogisticRegression,0.6976,0.6976,0.6976,0.6976,0.6957,0.6997,0.6957,0.6975,0.5833,0.5952,0.5833,0.5787,0.8697,smote,3000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 672, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=672)"
SVC,0.6969,0.703,0.6969,0.6984,0.6823,0.6915,0.6823,0.6853,0.5667,0.6037,0.5667,0.562,0.8452,smote,3000,StandardScaler,"['storyPoints', 'polarity_mean', 'E']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 887}","SVC(C=10, kernel='linear', probability=True, random_state=887)"
