Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8796;0.884;0.8796;0.8799;0.8819;0.8888;0.8819;0.8818;0.9;0.9027;0.9;0.8998;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.922;0.9259;0.922;0.9222;0.9375;0.9412;0.9375;0.9381;0.8833;0.8884;0.8833;0.8834;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
KNeighborsClassifier;0.8642;0.8662;0.8642;0.8635;0.8889;0.8962;0.8889;0.8894;0.8833;0.884;0.8833;0.8833;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8757;0.8781;0.8757;0.8759;0.8958;0.9006;0.8958;0.8959;0.8833;0.884;0.8833;0.8833;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8603;0.8648;0.8603;0.8599;0.9444;0.95;0.9444;0.9449;0.8833;0.884;0.8833;0.8833;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8874;0.8977;0.8874;0.8873;0.9028;0.9064;0.9028;0.9012;0.8833;0.8891;0.8833;0.8829;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
DecisionTreeClassifier;0.9298;0.9315;0.9298;0.9297;0.9306;0.9321;0.9306;0.93;0.8833;0.8891;0.8833;0.8829;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
DecisionTreeClassifier;0.9267;0.9283;0.9267;0.9267;0.9028;0.9096;0.9028;0.9005;0.8833;0.8891;0.8833;0.8829;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9267;0.9291;0.9267;0.9267;0.9583;0.96;0.9583;0.9582;0.8833;0.8891;0.8833;0.8829;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
DecisionTreeClassifier;0.922;0.9264;0.922;0.9223;0.9375;0.9382;0.9375;0.937;0.8833;0.8891;0.8833;0.8829;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
DecisionTreeClassifier;0.9244;0.9287;0.9244;0.9245;0.9167;0.9195;0.9167;0.9162;0.8667;0.8709;0.8667;0.8673;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
DecisionTreeClassifier;0.9174;0.9208;0.9174;0.9176;0.9444;0.9441;0.9444;0.9441;0.8667;0.875;0.8667;0.8668;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
MLPClassifier;0.8788;0.8893;0.8788;0.8796;0.8819;0.8866;0.8819;0.8811;0.8667;0.875;0.8667;0.8668;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
KNeighborsClassifier;0.8627;0.8675;0.8627;0.8623;0.9236;0.9239;0.9236;0.9233;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.9282;0.931;0.9282;0.928;0.8958;0.8962;0.8958;0.8956;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
DecisionTreeClassifier;0.9267;0.9282;0.9267;0.9266;0.9306;0.9358;0.9306;0.9314;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
KNeighborsClassifier;0.875;0.8791;0.875;0.875;0.9167;0.92;0.9167;0.9175;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8642;0.87;0.8642;0.8633;0.9375;0.9412;0.9375;0.9375;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8873;0.8948;0.8873;0.8874;0.8889;0.8965;0.8889;0.8883;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.8758;0.8894;0.8758;0.8756;0.9097;0.9123;0.9097;0.9099;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
KNeighborsClassifier;0.8743;0.8796;0.8743;0.8746;0.9167;0.9191;0.9167;0.9173;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8673;0.8778;0.8673;0.8674;0.9167;0.923;0.9167;0.9161;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.878;0.891;0.878;0.8786;0.9653;0.9657;0.9653;0.965;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.8827;0.8958;0.8827;0.8837;0.9444;0.9492;0.9444;0.945;0.8667;0.869;0.8667;0.8664;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
KNeighborsClassifier;0.875;0.8779;0.875;0.8747;0.9306;0.9425;0.9306;0.9312;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8796;0.884;0.8796;0.8796;0.8611;0.8607;0.8611;0.8601;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8734;0.8758;0.8734;0.8733;0.9097;0.9111;0.9097;0.9101;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8681;0.8707;0.8681;0.8682;0.9583;0.9595;0.9583;0.9583;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8619;0.865;0.8619;0.8623;0.9514;0.9539;0.9514;0.9509;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8758;0.879;0.8758;0.8759;0.9375;0.9383;0.9375;0.9377;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8588;0.8626;0.8588;0.8581;0.9375;0.9396;0.9375;0.9376;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.872;0.8762;0.872;0.8722;0.9167;0.9183;0.9167;0.9171;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8703;0.873;0.8703;0.8703;0.9097;0.9102;0.9097;0.9097;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8796;0.8849;0.8796;0.8793;0.9167;0.9216;0.9167;0.9171;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.878;0.8819;0.878;0.8782;0.9167;0.9179;0.9167;0.9159;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8719;0.8742;0.8719;0.8718;0.9167;0.9246;0.9167;0.9174;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8727;0.8747;0.8727;0.8726;0.9097;0.9128;0.9097;0.9099;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8627;0.8683;0.8627;0.8624;0.9514;0.9515;0.9514;0.9512;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8673;0.8708;0.8673;0.8671;0.875;0.8901;0.875;0.8763;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8649;0.8685;0.8649;0.8644;0.9167;0.9276;0.9167;0.9167;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8696;0.872;0.8696;0.869;0.9097;0.9211;0.9097;0.9091;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8681;0.8721;0.8681;0.868;0.875;0.8899;0.875;0.8761;0.8667;0.8677;0.8667;0.8661;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.865;0.8746;0.865;0.8653;0.8958;0.9048;0.8958;0.8956;0.8667;0.8699;0.8667;0.8659;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
MLPClassifier;0.8688;0.8825;0.8688;0.869;0.875;0.88;0.875;0.8744;0.8667;0.8699;0.8667;0.8659;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
MLPClassifier;0.8734;0.8867;0.8734;0.8744;0.9306;0.9356;0.9306;0.9309;0.8667;0.8699;0.8667;0.8659;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
MLPClassifier;0.8835;0.8907;0.8835;0.8837;0.875;0.8789;0.875;0.8746;0.8667;0.8699;0.8667;0.8659;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
RandomForestClassifier;0.9267;0.9299;0.9267;0.9267;0.9375;0.939;0.9375;0.9378;0.8667;0.8731;0.8667;0.8651;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 647};RandomForestClassifier(n_estimators=20, random_state=647)
MLPClassifier;0.8858;0.9002;0.8858;0.8856;0.9167;0.9197;0.9167;0.9173;0.8667;0.8731;0.8667;0.8651;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.8827;0.8889;0.8827;0.8826;0.8889;0.8886;0.8889;0.8875;0.8667;0.8731;0.8667;0.8651;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
DecisionTreeClassifier;0.9244;0.9276;0.9244;0.9247;0.9167;0.9238;0.9167;0.9161;0.85;0.8611;0.85;0.8517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
DecisionTreeClassifier;0.9251;0.9264;0.9251;0.925;0.9236;0.9272;0.9236;0.9234;0.85;0.8611;0.85;0.8517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9252;0.9268;0.9252;0.9253;0.9167;0.9212;0.9167;0.9162;0.85;0.8611;0.85;0.8517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9236;0.9277;0.9236;0.9236;0.9444;0.9461;0.9444;0.9444;0.85;0.8611;0.85;0.8517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9205;0.9231;0.9205;0.9205;0.9236;0.9267;0.9236;0.9232;0.85;0.8611;0.85;0.8517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
DecisionTreeClassifier;0.9236;0.9255;0.9236;0.9237;0.9375;0.9393;0.9375;0.9375;0.85;0.8611;0.85;0.8517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
DecisionTreeClassifier;0.9244;0.9262;0.9244;0.9243;0.9167;0.9187;0.9167;0.9164;0.85;0.8611;0.85;0.8517;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9275;0.9287;0.9275;0.9274;0.9236;0.9254;0.9236;0.9241;0.85;0.8625;0.85;0.8505;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
DecisionTreeClassifier;0.9275;0.9304;0.9275;0.9274;0.9306;0.9339;0.9306;0.9302;0.85;0.8625;0.85;0.8505;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
DecisionTreeClassifier;0.9313;0.9331;0.9313;0.9311;0.9097;0.9117;0.9097;0.9094;0.85;0.8625;0.85;0.8505;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9259;0.9277;0.9259;0.9258;0.9236;0.9235;0.9236;0.9233;0.85;0.8634;0.85;0.8505;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
DecisionTreeClassifier;0.9228;0.9252;0.9228;0.9229;0.9444;0.9444;0.9444;0.9444;0.85;0.8625;0.85;0.8505;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
RandomForestClassifier;0.9321;0.9332;0.9321;0.9321;0.9236;0.9261;0.9236;0.924;0.85;0.8669;0.85;0.8505;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 147};RandomForestClassifier(n_estimators=10, random_state=147)
RandomForestClassifier;0.9237;0.9255;0.9237;0.9234;0.9028;0.9133;0.9028;0.9023;0.85;0.8554;0.85;0.8504;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 647};RandomForestClassifier(n_estimators=10, random_state=647)
RandomForestClassifier;0.922;0.9237;0.922;0.9217;0.9375;0.9413;0.9375;0.9377;0.85;0.8554;0.85;0.8504;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 147};RandomForestClassifier(n_estimators=10, random_state=147)
RandomForestClassifier;0.9182;0.9216;0.9182;0.9182;0.9444;0.95;0.9444;0.9442;0.85;0.8554;0.85;0.8504;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 43};RandomForestClassifier(n_estimators=20, random_state=43)
RandomForestClassifier;0.9283;0.9312;0.9283;0.9284;0.8889;0.9011;0.8889;0.8894;0.85;0.8554;0.85;0.8504;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 647};RandomForestClassifier(n_estimators=5, random_state=647)
MLPClassifier;0.8797;0.8928;0.8797;0.8806;0.9236;0.9237;0.9236;0.9227;0.85;0.85;0.85;0.85;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
MLPClassifier;0.8881;0.895;0.8881;0.8887;0.9167;0.9253;0.9167;0.918;0.85;0.8505;0.85;0.8499;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
RandomForestClassifier;0.9306;0.9318;0.9306;0.9304;0.9375;0.94;0.9375;0.9379;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 43};RandomForestClassifier(n_estimators=20, random_state=43)
RandomForestClassifier;0.9367;0.9385;0.9367;0.9366;0.8889;0.889;0.8889;0.8871;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 43};RandomForestClassifier(n_estimators=10, random_state=43)
RandomForestClassifier;0.9244;0.9269;0.9244;0.9243;0.9167;0.9209;0.9167;0.9161;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.9329;0.9347;0.9329;0.9329;0.9167;0.9164;0.9167;0.9164;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 43};RandomForestClassifier(n_estimators=10, random_state=43)
RandomForestClassifier;0.926;0.9277;0.926;0.9257;0.9028;0.9102;0.9028;0.9036;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 43};RandomForestClassifier(n_estimators=20, random_state=43)
RandomForestClassifier;0.9268;0.9275;0.9268;0.9267;0.9375;0.9375;0.9375;0.9375;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 43};RandomForestClassifier(n_estimators=10, random_state=43)
RandomForestClassifier;0.9314;0.9334;0.9314;0.9312;0.9028;0.9036;0.9028;0.9015;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 147};RandomForestClassifier(n_estimators=10, random_state=147)
RandomForestClassifier;0.9244;0.9265;0.9244;0.9244;0.9236;0.9234;0.9236;0.9233;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.9244;0.9257;0.9244;0.9244;0.9306;0.9307;0.9306;0.9306;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 647};RandomForestClassifier(n_estimators=10, random_state=647)
RandomForestClassifier;0.9314;0.9325;0.9314;0.9313;0.9375;0.9378;0.9375;0.9376;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.9198;0.9221;0.9198;0.9195;0.9722;0.9723;0.9722;0.9721;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.9244;0.9271;0.9244;0.9243;0.9375;0.9399;0.9375;0.9379;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 147};RandomForestClassifier(n_estimators=20, random_state=147)
RandomForestClassifier;0.9244;0.926;0.9244;0.9242;0.9375;0.9383;0.9375;0.9377;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 147};RandomForestClassifier(n_estimators=10, random_state=147)
RandomForestClassifier;0.9213;0.9221;0.9213;0.9211;0.9375;0.9383;0.9375;0.9376;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 647};RandomForestClassifier(n_estimators=10, random_state=647)
RandomForestClassifier;0.9213;0.9242;0.9213;0.9213;0.9097;0.9099;0.9097;0.9096;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 647};RandomForestClassifier(n_estimators=10, random_state=647)
RandomForestClassifier;0.9282;0.9308;0.9282;0.9282;0.9306;0.9316;0.9306;0.9308;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 647};RandomForestClassifier(n_estimators=20, random_state=647)
RandomForestClassifier;0.9275;0.9288;0.9275;0.9276;0.9306;0.9318;0.9306;0.9299;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 647};RandomForestClassifier(n_estimators=10, random_state=647)
RandomForestClassifier;0.9283;0.9297;0.9283;0.9283;0.9514;0.9552;0.9514;0.9519;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 647};RandomForestClassifier(n_estimators=20, random_state=647)
RandomForestClassifier;0.9267;0.9281;0.9267;0.9265;0.9375;0.938;0.9375;0.9369;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 43};RandomForestClassifier(n_estimators=20, random_state=43)
RandomForestClassifier;0.9236;0.925;0.9236;0.9236;0.9375;0.9375;0.9375;0.937;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 43};RandomForestClassifier(n_estimators=20, random_state=43)
RandomForestClassifier;0.9244;0.9271;0.9244;0.9242;0.9375;0.9371;0.9375;0.9371;0.85;0.8591;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 43};RandomForestClassifier(n_estimators=20, random_state=43)
RandomForestClassifier;0.9198;0.9226;0.9198;0.9195;0.9306;0.9307;0.9306;0.9306;0.85;0.858;0.85;0.8492;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 647};RandomForestClassifier(n_estimators=5, random_state=647)
RandomForestClassifier;0.9337;0.9358;0.9337;0.9334;0.9167;0.9174;0.9167;0.9168;0.85;0.858;0.85;0.8492;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 43};RandomForestClassifier(n_estimators=10, random_state=43)
KNeighborsClassifier;0.8681;0.8726;0.8681;0.8678;0.8889;0.894;0.8889;0.8896;0.85;0.8526;0.85;0.8487;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.885;0.8876;0.885;0.885;0.8819;0.8838;0.8819;0.8825;0.85;0.8526;0.85;0.8487;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9282;0.9296;0.9282;0.9281;0.8958;0.896;0.8958;0.8955;0.85;0.8526;0.85;0.8487;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 147};RandomForestClassifier(n_estimators=5, random_state=147)
KNeighborsClassifier;0.875;0.8766;0.875;0.8748;0.9097;0.9154;0.9097;0.9106;0.85;0.8526;0.85;0.8487;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.885;0.8983;0.885;0.8855;0.8889;0.8889;0.8889;0.8889;0.85;0.8528;0.85;0.8482;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
MLPClassifier;0.8888;0.9053;0.8888;0.8893;0.875;0.9091;0.875;0.876;0.8333;0.8496;0.8333;0.8363;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
DecisionTreeClassifier;0.9313;0.9331;0.9313;0.9313;0.9375;0.9379;0.9375;0.9376;0.8333;0.8507;0.8333;0.835;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
DecisionTreeClassifier;0.9275;0.9297;0.9275;0.9275;0.9167;0.9171;0.9167;0.9164;0.8333;0.8507;0.8333;0.835;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
MLPClassifier;0.885;0.8951;0.885;0.8855;0.9097;0.9222;0.9097;0.9105;0.8333;0.8532;0.8333;0.8349;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8757;0.8896;0.8757;0.876;0.8611;0.8772;0.8611;0.8613;0.8333;0.8386;0.8333;0.8348;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
DecisionTreeClassifier;0.926;0.9288;0.926;0.9261;0.9444;0.9476;0.9444;0.9446;0.8333;0.8444;0.8333;0.8345;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=933)
MLPClassifier;0.8889;0.8992;0.8889;0.8891;0.9028;0.9051;0.9028;0.9026;0.8333;0.8424;0.8333;0.8336;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
MLPClassifier;0.8943;0.9005;0.8943;0.8943;0.8819;0.8845;0.8819;0.8828;0.8333;0.8333;0.8333;0.8333;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
DecisionTreeClassifier;0.9182;0.9218;0.9182;0.9184;0.9236;0.9234;0.9236;0.9233;0.8333;0.8511;0.8333;0.8333;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9244;0.9266;0.9244;0.9245;0.9236;0.9268;0.9236;0.9232;0.8333;0.8511;0.8333;0.8333;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
DecisionTreeClassifier;0.9275;0.9293;0.9275;0.9275;0.9236;0.9236;0.9236;0.9231;0.8333;0.8511;0.8333;0.8333;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
MLPClassifier;0.8827;0.8971;0.8827;0.883;0.875;0.8794;0.875;0.8761;0.8333;0.8338;0.8333;0.8312;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
KNeighborsClassifier;0.8743;0.8787;0.8743;0.8738;0.8819;0.8934;0.8819;0.8813;0.8333;0.8383;0.8333;0.831;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9298;0.9327;0.9298;0.9298;0.8958;0.8979;0.8958;0.8956;0.8167;0.8386;0.8167;0.8194;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 555};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=555)
MLPClassifier;0.8958;0.9042;0.8958;0.8952;0.8611;0.8754;0.8611;0.8629;0.8167;0.8373;0.8167;0.8191;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.868;0.8807;0.868;0.8682;0.8958;0.8985;0.8958;0.8956;0.8167;0.8373;0.8167;0.8191;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
DecisionTreeClassifier;0.9291;0.9314;0.9291;0.9292;0.9097;0.9108;0.9097;0.9083;0.8167;0.8401;0.8167;0.8181;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 933};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=933)
DecisionTreeClassifier;0.9306;0.9329;0.9306;0.9306;0.9097;0.9096;0.9097;0.9092;0.8167;0.8401;0.8167;0.8181;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 988};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=988)
MLPClassifier;0.8765;0.8885;0.8765;0.877;0.9028;0.9159;0.9028;0.9038;0.8167;0.8278;0.8167;0.8168;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8843;0.8939;0.8843;0.8849;0.9236;0.9306;0.9236;0.9248;0.8167;0.8209;0.8167;0.8158;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8796;0.8946;0.8796;0.8805;0.9444;0.947;0.9444;0.945;0.8167;0.8209;0.8167;0.8158;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 816, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=816)
MLPClassifier;0.8803;0.8937;0.8803;0.8805;0.8958;0.9157;0.8958;0.8982;0.8;0.8288;0.8;0.8034;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
SVC;0.6397;0.7165;0.6397;0.6288;0.7847;0.8517;0.7847;0.7796;0.8;0.83;0.8;0.8008;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 301};SVC(C=10, random_state=301)
MLPClassifier;0.8881;0.8977;0.8881;0.8883;0.75;0.7749;0.75;0.7265;0.7833;0.8141;0.7833;0.7655;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 887, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=887)
MLPClassifier;0.8905;0.8995;0.8905;0.8907;0.8333;0.8318;0.8333;0.8319;0.75;0.7512;0.75;0.7497;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 892, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=892)
SVC;0.6396;0.7191;0.6396;0.6288;0.8056;0.8214;0.8056;0.8085;0.7333;0.7441;0.7333;0.736;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
SVC;0.6428;0.7164;0.6428;0.6305;0.7778;0.8018;0.7778;0.7793;0.7333;0.7406;0.7333;0.7346;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.639;0.7145;0.639;0.6285;0.8125;0.8406;0.8125;0.8166;0.7167;0.7254;0.7167;0.7188;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
LogisticRegression;0.7955;0.8114;0.7955;0.7984;0.7778;0.8069;0.7778;0.7802;0.7167;0.7299;0.7167;0.7187;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.8033;0.8201;0.8033;0.8063;0.7569;0.7818;0.7569;0.7587;0.7167;0.7299;0.7167;0.7187;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7909;0.8089;0.7909;0.7932;0.8611;0.8697;0.8611;0.8618;0.7167;0.7299;0.7167;0.7187;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7963;0.8118;0.7963;0.7981;0.7986;0.8188;0.7986;0.8031;0.7167;0.7299;0.7167;0.7187;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
SVC;0.642;0.7135;0.642;0.6313;0.8125;0.8241;0.8125;0.8103;0.7167;0.7233;0.7167;0.7176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
SVC;0.6404;0.7146;0.6404;0.6296;0.7847;0.8085;0.7847;0.7861;0.7167;0.7233;0.7167;0.7176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 453};SVC(C=1, kernel='linear', random_state=453)
SVC;0.6396;0.7157;0.6396;0.6278;0.7569;0.779;0.7569;0.7613;0.7167;0.7233;0.7167;0.7176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6404;0.7144;0.6404;0.6286;0.8403;0.8568;0.8403;0.8426;0.7167;0.7233;0.7167;0.7176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6389;0.7158;0.6389;0.6274;0.7986;0.8209;0.7986;0.8011;0.7167;0.7233;0.7167;0.7176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6382;0.7188;0.6382;0.6247;0.8264;0.8486;0.8264;0.8274;0.7167;0.7233;0.7167;0.7176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
LogisticRegression;0.7909;0.8047;0.7909;0.7911;0.7986;0.8166;0.7986;0.801;0.7167;0.7233;0.7167;0.7176;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.8032;0.8172;0.8032;0.8058;0.7431;0.7695;0.7431;0.75;0.7;0.7139;0.7;0.7017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.8071;0.8206;0.8071;0.8094;0.7431;0.755;0.7431;0.7449;0.7;0.7139;0.7;0.7017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.774;0.7895;0.774;0.7759;0.8056;0.8191;0.8056;0.8076;0.7;0.7139;0.7;0.7017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.7885;0.8031;0.7885;0.7901;0.7917;0.7981;0.7917;0.7941;0.7;0.7139;0.7;0.7017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7855;0.8034;0.7855;0.7875;0.8194;0.8423;0.8194;0.8229;0.7;0.7139;0.7;0.7017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.7917;0.8067;0.7917;0.794;0.7569;0.7761;0.7569;0.7598;0.7;0.7139;0.7;0.7017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7901;0.8037;0.7901;0.7922;0.8125;0.8333;0.8125;0.8162;0.7;0.7139;0.7;0.7017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
SVC;0.6366;0.7135;0.6366;0.6246;0.7708;0.7924;0.7708;0.7757;0.7;0.7074;0.7;0.7013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6373;0.7121;0.6373;0.6259;0.8194;0.8294;0.8194;0.8204;0.7;0.7074;0.7;0.7013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6358;0.7113;0.6358;0.6241;0.8194;0.8235;0.8194;0.8191;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6388;0.7155;0.6388;0.6262;0.8194;0.8288;0.8194;0.8221;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
SVC;0.6427;0.7188;0.6427;0.6312;0.7778;0.8097;0.7778;0.7821;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
SVC;0.6405;0.717;0.6405;0.6303;0.7708;0.7937;0.7708;0.7733;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 453};SVC(C=1, kernel='linear', random_state=453)
SVC;0.6382;0.7141;0.6382;0.6266;0.8333;0.8459;0.8333;0.836;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6327;0.7094;0.6327;0.62;0.8403;0.8447;0.8403;0.8417;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
SVC;0.6466;0.721;0.6466;0.6358;0.7847;0.8054;0.7847;0.7882;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
SVC;0.6304;0.708;0.6304;0.6184;0.8333;0.8528;0.8333;0.8346;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 484};SVC(C=1, kernel='linear', random_state=484)
SVC;0.6443;0.7177;0.6443;0.6328;0.7847;0.8073;0.7847;0.7863;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6435;0.7202;0.6435;0.6324;0.7847;0.8118;0.7847;0.7874;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6435;0.7172;0.6435;0.6338;0.8056;0.8206;0.8056;0.8074;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 301};SVC(C=1, kernel='linear', random_state=301)
SVC;0.6443;0.7191;0.6443;0.633;0.8194;0.8363;0.8194;0.823;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6381;0.7131;0.6381;0.6274;0.8264;0.833;0.8264;0.8264;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 301};SVC(C=10, kernel='linear', random_state=301)
SVC;0.6389;0.7147;0.6389;0.6292;0.7569;0.7788;0.7569;0.7607;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 453};SVC(C=10, kernel='linear', random_state=453)
SVC;0.6396;0.7133;0.6396;0.6266;0.7847;0.8039;0.7847;0.788;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6427;0.7184;0.6427;0.6317;0.7708;0.7952;0.7708;0.7736;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6405;0.7182;0.6405;0.6301;0.7847;0.8017;0.7847;0.7895;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
SVC;0.6405;0.7167;0.6405;0.6294;0.8194;0.8303;0.8194;0.8228;0.7;0.7064;0.7;0.7003;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 484};SVC(C=10, kernel='linear', random_state=484)
LogisticRegression;0.7824;0.7982;0.7824;0.7838;0.8333;0.8448;0.8333;0.8365;0.6833;0.698;0.6833;0.6843;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7955;0.8102;0.7955;0.7975;0.8056;0.8186;0.8056;0.8094;0.6833;0.698;0.6833;0.6843;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7877;0.8005;0.7877;0.7895;0.7778;0.7953;0.7778;0.7832;0.6833;0.698;0.6833;0.6843;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7878;0.8047;0.7878;0.7914;0.8403;0.8438;0.8403;0.8415;0.6833;0.698;0.6833;0.6843;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.7925;0.8089;0.7925;0.7951;0.75;0.7692;0.75;0.7554;0.6833;0.698;0.6833;0.6843;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7646;0.7753;0.7646;0.7645;0.7986;0.8241;0.7986;0.8001;0.6667;0.6889;0.6667;0.6729;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7724;0.7847;0.7724;0.7734;0.8056;0.811;0.8056;0.803;0.6667;0.6686;0.6667;0.6674;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7809;0.7933;0.7809;0.7815;0.75;0.775;0.75;0.7532;0.65;0.6719;0.65;0.6567;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7747;0.7877;0.7747;0.7766;0.8056;0.8232;0.8056;0.8067;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.7824;0.7969;0.7824;0.7832;0.7639;0.7675;0.7639;0.7638;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.7778;0.7883;0.7778;0.7784;0.75;0.7486;0.75;0.747;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.7839;0.7928;0.7839;0.7848;0.7917;0.8035;0.7917;0.7873;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.7924;0.8052;0.7924;0.7942;0.7847;0.7879;0.7847;0.7835;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7786;0.7918;0.7786;0.7791;0.8125;0.8159;0.8125;0.8081;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7831;0.7934;0.7831;0.7833;0.7639;0.7755;0.7639;0.7618;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7685;0.7819;0.7685;0.7696;0.8333;0.8495;0.8333;0.835;0.65;0.652;0.65;0.6507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
LogisticRegression;0.777;0.7899;0.777;0.7786;0.7569;0.7609;0.7569;0.7578;0.6333;0.6356;0.6333;0.6337;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 823, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=823)"
LogisticRegression;0.7978;0.8095;0.7978;0.7996;0.7014;0.7164;0.7014;0.7027;0.6333;0.6356;0.6333;0.6337;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
