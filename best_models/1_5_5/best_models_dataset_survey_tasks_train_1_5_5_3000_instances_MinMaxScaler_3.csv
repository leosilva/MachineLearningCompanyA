Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.934;0.9359;0.934;0.9341;0.9276;0.9323;0.9276;0.9278;0.9;0.9019;0.9;0.8985;0.9865;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 19};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=19)
MLPClassifier;0.9302;0.9325;0.9302;0.9303;0.9366;0.94;0.9366;0.9368;0.8833;0.9035;0.8833;0.8844;0.985;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 387, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=387)
SVC;0.8988;0.9011;0.8988;0.8987;0.927;0.9306;0.927;0.927;0.8833;0.8881;0.8833;0.8805;0.9626;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 834};SVC(C=10, probability=True, random_state=834)
SVC;0.8934;0.8956;0.8934;0.8931;0.9349;0.9397;0.9349;0.935;0.8833;0.8881;0.8833;0.8805;0.959;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 850};SVC(C=10, probability=True, random_state=850)
DecisionTreeClassifier;0.9357;0.9378;0.9357;0.9356;0.9371;0.937;0.9371;0.9369;0.8833;0.884;0.8833;0.8803;0.9863;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 145};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=145)
MLPClassifier;0.928;0.9304;0.928;0.928;0.9186;0.9246;0.9186;0.9194;0.8667;0.894;0.8667;0.8683;0.9854;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 555, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=555)
MLPClassifier;0.9297;0.9325;0.9297;0.9298;0.9259;0.9292;0.9259;0.9261;0.8667;0.894;0.8667;0.8683;0.9851;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
SVC;0.8916;0.8941;0.8916;0.8913;0.9388;0.9433;0.9388;0.9387;0.8667;0.8767;0.8667;0.8653;0.9582;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 511};SVC(C=10, probability=True, random_state=511)
KNeighborsClassifier;0.9288;0.9301;0.9288;0.9287;0.9276;0.9306;0.9276;0.9278;0.8667;0.8695;0.8667;0.8648;0.9804;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.9318;0.9343;0.9318;0.932;0.9371;0.9393;0.9371;0.9373;0.8667;0.8701;0.8667;0.8639;0.9848;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 507};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=507)
RandomForestClassifier;0.9358;0.9375;0.9358;0.9359;0.9236;0.9261;0.9236;0.9236;0.8667;0.8701;0.8667;0.8639;0.989;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 975};RandomForestClassifier(n_estimators=5, random_state=975)
RandomForestClassifier;0.9334;0.9352;0.9334;0.9336;0.9315;0.9331;0.9315;0.9315;0.8667;0.8746;0.8667;0.8624;0.9886;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 709};RandomForestClassifier(n_estimators=5, random_state=709)
KNeighborsClassifier;0.9273;0.929;0.9273;0.9273;0.9293;0.9307;0.9293;0.9294;0.8667;0.8746;0.8667;0.8624;0.9811;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9249;0.9263;0.9249;0.9249;0.9326;0.9335;0.9326;0.9327;0.85;0.8505;0.85;0.8489;0.98;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9357;0.9357;0.9357;0.9355;0.9287;0.9296;0.9287;0.9285;0.85;0.8514;0.85;0.8483;0.9878;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 409};RandomForestClassifier(n_estimators=20, random_state=409)
LogisticRegression;0.7961;0.8131;0.7961;0.798;0.7984;0.8121;0.7984;0.8009;0.7333;0.7397;0.7333;0.7299;0.9217;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 435, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=435)"
LogisticRegression;0.781;0.8005;0.781;0.7829;0.817;0.83;0.817;0.8191;0.7167;0.7349;0.7167;0.712;0.9193;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.786;0.8036;0.786;0.788;0.808;0.8234;0.808;0.8114;0.7167;0.7257;0.7167;0.7118;0.9213;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 455, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=455)"
