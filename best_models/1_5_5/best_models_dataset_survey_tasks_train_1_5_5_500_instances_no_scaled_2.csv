Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.7792;0.7906;0.7792;0.7783;0.8542;0.8539;0.8542;0.8536;0.8833;0.8873;0.8833;0.8826;0.9176;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
MLPClassifier;0.8164;0.8241;0.8164;0.8164;0.7986;0.8086;0.7986;0.8004;0.8833;0.8873;0.8833;0.8826;0.9345;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.8156;0.8333;0.8156;0.8151;0.8194;0.8235;0.8194;0.819;0.8833;0.8966;0.8833;0.8819;0.934;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.7731;0.7824;0.7731;0.7728;0.8611;0.8618;0.8611;0.8612;0.8667;0.8722;0.8667;0.8667;0.9137;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
RandomForestClassifier;0.8626;0.8658;0.8626;0.8626;0.8958;0.896;0.8958;0.8958;0.8667;0.8736;0.8667;0.865;0.9649;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
MLPClassifier;0.7864;0.8078;0.7864;0.7867;0.8542;0.8551;0.8542;0.8542;0.8667;0.8851;0.8667;0.864;0.9278;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
MLPClassifier;0.8025;0.8185;0.8025;0.802;0.8194;0.8216;0.8194;0.8199;0.8667;0.8841;0.8667;0.8637;0.9289;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
KNeighborsClassifier;0.8349;0.8406;0.8349;0.8342;0.8056;0.8103;0.8056;0.8059;0.8667;0.8841;0.8667;0.8637;0.9397;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8689;0.8713;0.8689;0.8685;0.8611;0.8628;0.8611;0.8603;0.8667;0.8744;0.8667;0.8628;0.9627;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 986};RandomForestClassifier(n_estimators=5, random_state=986)
MLPClassifier;0.7971;0.8089;0.7971;0.7959;0.8264;0.8615;0.8264;0.8204;0.85;0.8634;0.85;0.8505;0.9334;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.7615;0.7802;0.7615;0.7622;0.8264;0.8259;0.8264;0.826;0.85;0.8497;0.85;0.8495;0.9178;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.7962;0.8087;0.7962;0.7958;0.8403;0.8408;0.8403;0.8395;0.85;0.8497;0.85;0.8495;0.9316;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.7731;0.7913;0.7731;0.7737;0.8681;0.8688;0.8681;0.868;0.85;0.8497;0.85;0.8495;0.9183;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
DecisionTreeClassifier;0.8557;0.8608;0.8557;0.8555;0.8403;0.8408;0.8403;0.8405;0.85;0.855;0.85;0.8493;0.9418;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
RandomForestClassifier;0.8704;0.8724;0.8704;0.8702;0.8333;0.8345;0.8333;0.8332;0.85;0.858;0.85;0.8492;0.969;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 986};RandomForestClassifier(n_estimators=10, random_state=986)
DecisionTreeClassifier;0.8681;0.8693;0.8681;0.868;0.8403;0.8402;0.8403;0.8402;0.85;0.8526;0.85;0.8487;0.9495;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
KNeighborsClassifier;0.841;0.8438;0.841;0.8406;0.8125;0.813;0.8125;0.8093;0.85;0.8592;0.85;0.847;0.935;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8619;0.8648;0.8619;0.8618;0.8819;0.8852;0.8819;0.8823;0.85;0.8592;0.85;0.847;0.9632;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 986};RandomForestClassifier(n_estimators=10, random_state=986)
RandomForestClassifier;0.8665;0.8686;0.8665;0.8665;0.8611;0.8612;0.8611;0.8609;0.85;0.8592;0.85;0.847;0.9616;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 346};RandomForestClassifier(n_estimators=5, random_state=346)
RandomForestClassifier;0.8719;0.8747;0.8719;0.8717;0.8681;0.8688;0.8681;0.8682;0.85;0.8745;0.85;0.8457;0.9665;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 887};RandomForestClassifier(n_estimators=20, random_state=887)
RandomForestClassifier;0.8642;0.8666;0.8642;0.8638;0.8542;0.8577;0.8542;0.8548;0.85;0.8745;0.85;0.8457;0.9676;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
RandomForestClassifier;0.8595;0.8621;0.8595;0.8594;0.875;0.8755;0.875;0.8748;0.85;0.8745;0.85;0.8457;0.9663;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
KNeighborsClassifier;0.8118;0.8214;0.8118;0.8107;0.9167;0.921;0.9167;0.9171;0.85;0.8726;0.85;0.8451;0.9367;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8727;0.8762;0.8727;0.8728;0.8403;0.8415;0.8403;0.8397;0.85;0.8726;0.85;0.8451;0.9659;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.8672;0.8713;0.8672;0.8668;0.875;0.8754;0.875;0.8745;0.85;0.8726;0.85;0.8451;0.9651;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 986};RandomForestClassifier(n_estimators=20, random_state=986)
KNeighborsClassifier;0.8132;0.8233;0.8132;0.8129;0.8819;0.8862;0.8819;0.8825;0.85;0.8726;0.85;0.8451;0.9284;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8518;0.8536;0.8518;0.8515;0.8889;0.8918;0.8889;0.889;0.8333;0.8432;0.8333;0.8333;0.9422;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
KNeighborsClassifier;0.8125;0.8208;0.8125;0.8113;0.8681;0.8714;0.8681;0.8657;0.8333;0.8631;0.8333;0.8333;0.9387;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8033;0.8128;0.8033;0.8034;0.8194;0.8225;0.8194;0.8191;0.8333;0.8331;0.8333;0.8329;0.9321;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.7607;0.7825;0.7607;0.7593;0.8264;0.8265;0.8264;0.8262;0.8333;0.8331;0.8333;0.8329;0.9107;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.787;0.8084;0.787;0.7862;0.8681;0.8701;0.8681;0.8677;0.8333;0.8331;0.8333;0.8329;0.931;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
DecisionTreeClassifier;0.8573;0.8595;0.8573;0.857;0.875;0.8767;0.875;0.8749;0.8333;0.8374;0.8333;0.8328;0.9443;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
DecisionTreeClassifier;0.8627;0.8669;0.8627;0.8627;0.8264;0.8272;0.8264;0.826;0.8333;0.8374;0.8333;0.8328;0.9472;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
MLPClassifier;0.798;0.8093;0.798;0.7975;0.8472;0.8477;0.8472;0.8473;0.8333;0.8341;0.8333;0.8327;0.919;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
DecisionTreeClassifier;0.8581;0.8607;0.8581;0.858;0.8611;0.8649;0.8611;0.8607;0.8333;0.8367;0.8333;0.8324;0.9417;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.8681;0.8709;0.8681;0.868;0.8333;0.8342;0.8333;0.8332;0.8333;0.8565;0.8333;0.8324;0.9447;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.8488;0.8553;0.8488;0.8485;0.8333;0.8375;0.8333;0.8342;0.8333;0.8333;0.8333;0.8323;0.9444;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
MLPClassifier;0.8109;0.827;0.8109;0.8109;0.8681;0.8716;0.8681;0.868;0.8333;0.8387;0.8333;0.8317;0.9407;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
KNeighborsClassifier;0.8202;0.8273;0.8202;0.8193;0.8542;0.8577;0.8542;0.854;0.8333;0.8535;0.8333;0.8317;0.9294;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8202;0.8286;0.8202;0.8198;0.8056;0.8193;0.8056;0.8039;0.8333;0.8535;0.8333;0.8317;0.9303;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8178;0.8231;0.8178;0.8163;0.8542;0.8606;0.8542;0.8539;0.8333;0.8535;0.8333;0.8317;0.9355;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8249;0.8304;0.8249;0.8237;0.8333;0.8359;0.8333;0.8333;0.8333;0.8535;0.8333;0.8317;0.9313;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8163;0.8266;0.8163;0.8156;0.8125;0.8123;0.8125;0.8109;0.8333;0.8387;0.8333;0.8317;0.9381;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
KNeighborsClassifier;0.8248;0.8324;0.8248;0.8238;0.8125;0.8168;0.8125;0.8122;0.8333;0.8535;0.8333;0.8317;0.9321;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.797;0.8204;0.797;0.7963;0.8681;0.8688;0.8681;0.8672;0.8333;0.8387;0.8333;0.8317;0.9274;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
KNeighborsClassifier;0.811;0.818;0.811;0.8107;0.8611;0.8696;0.8611;0.8608;0.8333;0.8535;0.8333;0.8317;0.9317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7993;0.8072;0.7993;0.7968;0.8889;0.8936;0.8889;0.8878;0.8333;0.8535;0.8333;0.8317;0.9266;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8588;0.8636;0.8588;0.8593;0.7778;0.7856;0.7778;0.7723;0.8333;0.8387;0.8333;0.8317;0.9457;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
KNeighborsClassifier;0.814;0.8233;0.814;0.8135;0.8889;0.8988;0.8889;0.8889;0.8333;0.8535;0.8333;0.8317;0.9355;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8673;0.8713;0.8673;0.8675;0.8125;0.8128;0.8125;0.8117;0.8333;0.8447;0.8333;0.8315;0.9668;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 887};RandomForestClassifier(n_estimators=10, random_state=887)
DecisionTreeClassifier;0.8534;0.8572;0.8534;0.8535;0.8125;0.8148;0.8125;0.8115;0.8333;0.8448;0.8333;0.831;0.9426;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
RandomForestClassifier;0.8727;0.8777;0.8727;0.8722;0.7847;0.7849;0.7847;0.7844;0.8333;0.8448;0.8333;0.831;0.9675;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 986};RandomForestClassifier(n_estimators=20, random_state=986)
RandomForestClassifier;0.8673;0.8702;0.8673;0.8671;0.8681;0.8688;0.8681;0.8676;0.8333;0.8587;0.8333;0.8299;0.9649;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 887};RandomForestClassifier(n_estimators=20, random_state=887)
RandomForestClassifier;0.8634;0.8671;0.8634;0.8633;0.9028;0.9038;0.9028;0.9027;0.8333;0.8581;0.8333;0.8296;0.9608;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
RandomForestClassifier;0.8611;0.8635;0.8611;0.8608;0.8819;0.8872;0.8819;0.8819;0.8333;0.8581;0.8333;0.8296;0.9652;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
RandomForestClassifier;0.8711;0.8749;0.8711;0.8712;0.8264;0.8272;0.8264;0.8263;0.8333;0.8581;0.8333;0.8296;0.9647;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
RandomForestClassifier;0.858;0.8634;0.858;0.8576;0.8542;0.8592;0.8542;0.8542;0.8333;0.8581;0.8333;0.8296;0.9664;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 887};RandomForestClassifier(n_estimators=20, random_state=887)
RandomForestClassifier;0.8588;0.8613;0.8588;0.8586;0.8542;0.854;0.8542;0.8539;0.8333;0.8581;0.8333;0.8296;0.9647;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 986};RandomForestClassifier(n_estimators=20, random_state=986)
RandomForestClassifier;0.8643;0.8667;0.8643;0.8642;0.9167;0.9175;0.9167;0.9168;0.8333;0.862;0.8333;0.8261;0.9639;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 986};RandomForestClassifier(n_estimators=10, random_state=986)
RandomForestClassifier;0.8727;0.8748;0.8727;0.8725;0.8542;0.8632;0.8542;0.8544;0.8333;0.862;0.8333;0.8261;0.9624;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 986};RandomForestClassifier(n_estimators=10, random_state=986)
KNeighborsClassifier;0.8202;0.8261;0.8202;0.819;0.8333;0.8346;0.8333;0.8337;0.8333;0.8611;0.8333;0.8258;0.9368;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.7993;0.8156;0.7993;0.7991;0.8194;0.8285;0.8194;0.8199;0.8167;0.8234;0.8167;0.8178;0.931;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
MLPClassifier;0.8047;0.8149;0.8047;0.805;0.8403;0.844;0.8403;0.8399;0.8167;0.8234;0.8167;0.8178;0.9335;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
MLPClassifier;0.7723;0.7928;0.7723;0.7727;0.8611;0.8767;0.8611;0.8619;0.8167;0.8248;0.8167;0.8165;0.9314;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
DecisionTreeClassifier;0.8541;0.8582;0.8541;0.8539;0.8542;0.8566;0.8542;0.8534;0.8167;0.8215;0.8167;0.8165;0.9484;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=857)
KNeighborsClassifier;0.8118;0.8171;0.8118;0.81;0.8056;0.8131;0.8056;0.806;0.8167;0.8339;0.8167;0.8163;0.9363;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8164;0.8231;0.8164;0.8154;0.8333;0.8367;0.8333;0.831;0.8167;0.8339;0.8167;0.8163;0.938;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8002;0.806;0.8002;0.7998;0.8889;0.891;0.8889;0.8891;0.8167;0.8339;0.8167;0.8163;0.9229;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8542;0.857;0.8542;0.8539;0.8403;0.8491;0.8403;0.8388;0.8167;0.8193;0.8167;0.8157;0.9467;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
MLPClassifier;0.7893;0.8015;0.7893;0.7872;0.8819;0.8906;0.8819;0.8809;0.8167;0.8172;0.8167;0.8155;0.9226;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
DecisionTreeClassifier;0.8503;0.8563;0.8503;0.8499;0.8403;0.845;0.8403;0.8404;0.8167;0.8172;0.8167;0.8155;0.9408;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
KNeighborsClassifier;0.8133;0.8217;0.8133;0.8128;0.8333;0.8404;0.8333;0.8336;0.8167;0.8433;0.8167;0.8147;0.9349;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8194;0.8282;0.8194;0.8192;0.8681;0.8798;0.8681;0.8661;0.8167;0.8433;0.8167;0.8147;0.9292;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7971;0.8058;0.7971;0.7957;0.8819;0.8884;0.8819;0.8831;0.8167;0.8433;0.8167;0.8147;0.9242;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8132;0.819;0.8132;0.8127;0.8264;0.8265;0.8264;0.8264;0.8167;0.8433;0.8167;0.8147;0.93;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8202;0.8285;0.8202;0.8196;0.8611;0.871;0.8611;0.8591;0.8167;0.8433;0.8167;0.8147;0.9303;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.7824;0.7938;0.7824;0.783;0.8125;0.8471;0.8125;0.8157;0.8167;0.8257;0.8167;0.8142;0.9178;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
RandomForestClassifier;0.8604;0.8641;0.8604;0.8604;0.8472;0.8562;0.8472;0.8464;0.8167;0.8436;0.8167;0.8141;0.9644;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 887};RandomForestClassifier(n_estimators=5, random_state=887)
KNeighborsClassifier;0.8264;0.8364;0.8264;0.8263;0.8542;0.8558;0.8542;0.8545;0.8167;0.8521;0.8167;0.8139;0.9385;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8711;0.8732;0.8711;0.8712;0.8611;0.8627;0.8611;0.8611;0.8167;0.8323;0.8167;0.8133;0.9657;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 346};RandomForestClassifier(n_estimators=20, random_state=346)
DecisionTreeClassifier;0.8556;0.86;0.8556;0.8554;0.8819;0.884;0.8819;0.8825;0.8167;0.831;0.8167;0.8126;0.945;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
DecisionTreeClassifier;0.8557;0.8594;0.8557;0.8556;0.875;0.875;0.875;0.8749;0.8167;0.831;0.8167;0.8126;0.9451;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
DecisionTreeClassifier;0.8673;0.8696;0.8673;0.8666;0.8611;0.8731;0.8611;0.8626;0.8167;0.8218;0.8167;0.812;0.9472;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
RandomForestClassifier;0.8634;0.8661;0.8634;0.8626;0.9167;0.9175;0.9167;0.9157;0.8167;0.8487;0.8167;0.8112;0.9625;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 986};RandomForestClassifier(n_estimators=5, random_state=986)
RandomForestClassifier;0.8611;0.8645;0.8611;0.8608;0.9097;0.9111;0.9097;0.91;0.8167;0.8356;0.8167;0.8107;0.9626;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 887};RandomForestClassifier(n_estimators=5, random_state=887)
RandomForestClassifier;0.8634;0.8653;0.8634;0.8629;0.9028;0.9062;0.9028;0.9031;0.8167;0.8472;0.8167;0.8106;0.9626;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 887};RandomForestClassifier(n_estimators=20, random_state=887)
RandomForestClassifier;0.8673;0.8718;0.8673;0.8674;0.875;0.8755;0.875;0.8747;0.8167;0.8472;0.8167;0.8106;0.963;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 346};RandomForestClassifier(n_estimators=10, random_state=346)
RandomForestClassifier;0.8666;0.8682;0.8666;0.8662;0.8542;0.8562;0.8542;0.8543;0.8167;0.8472;0.8167;0.8106;0.9672;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 986};RandomForestClassifier(n_estimators=20, random_state=986)
RandomForestClassifier;0.8634;0.868;0.8634;0.8636;0.8889;0.8918;0.8889;0.8891;0.8167;0.8325;0.8167;0.8094;0.9629;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 887};RandomForestClassifier(n_estimators=20, random_state=887)
DecisionTreeClassifier;0.8596;0.8638;0.8596;0.8596;0.875;0.878;0.875;0.8746;0.8;0.7997;0.8;0.7995;0.9435;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=209)
KNeighborsClassifier;0.8326;0.8391;0.8326;0.8325;0.8056;0.8071;0.8056;0.8049;0.8;0.8346;0.8;0.7988;0.9311;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8211;0.8261;0.8211;0.8208;0.8403;0.8456;0.8403;0.839;0.8;0.8346;0.8;0.7988;0.9338;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8249;0.8303;0.8249;0.8238;0.8333;0.8488;0.8333;0.8327;0.8;0.8346;0.8;0.7988;0.9299;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8148;0.8207;0.8148;0.814;0.8472;0.8482;0.8472;0.8469;0.8;0.8346;0.8;0.7988;0.9303;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8565;0.8607;0.8565;0.856;0.8264;0.8357;0.8264;0.8272;0.8;0.799;0.8;0.7985;0.9511;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
DecisionTreeClassifier;0.8642;0.8675;0.8642;0.8638;0.875;0.8812;0.875;0.8754;0.8;0.8012;0.8;0.7981;0.944;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
MLPClassifier;0.8009;0.8156;0.8009;0.8005;0.8681;0.871;0.8681;0.8673;0.8;0.8012;0.8;0.7981;0.9338;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
RandomForestClassifier;0.8665;0.8681;0.8665;0.8662;0.8681;0.8688;0.8681;0.8672;0.8;0.8073;0.8;0.7965;0.9652;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 887};RandomForestClassifier(n_estimators=5, random_state=887)
DecisionTreeClassifier;0.8519;0.8539;0.8519;0.8513;0.8819;0.884;0.8819;0.8813;0.8;0.8089;0.8;0.7958;0.9495;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
RandomForestClassifier;0.8611;0.8647;0.8611;0.8616;0.8542;0.8575;0.8542;0.8546;0.8;0.818;0.8;0.7939;0.965;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 887};RandomForestClassifier(n_estimators=10, random_state=887)
DecisionTreeClassifier;0.8704;0.8735;0.8704;0.8706;0.7847;0.7924;0.7847;0.7845;0.8;0.8209;0.8;0.7904;0.9478;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
MLPClassifier;0.7809;0.7984;0.7809;0.7798;0.7847;0.8384;0.7847;0.7815;0.8;0.8433;0.8;0.7863;0.9191;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
KNeighborsClassifier;0.8318;0.836;0.8318;0.8315;0.7569;0.7598;0.7569;0.7539;0.7833;0.8135;0.7833;0.7819;0.932;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8201;0.824;0.8201;0.8198;0.8403;0.8432;0.8403;0.839;0.7833;0.8262;0.7833;0.7806;0.9372;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8294;0.8365;0.8294;0.8292;0.8056;0.8072;0.8056;0.8045;0.7833;0.8262;0.7833;0.7806;0.9313;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.7993;0.8037;0.7993;0.7997;0.8403;0.8441;0.8403;0.8402;0.7833;0.7816;0.7833;0.7801;0.9245;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
DecisionTreeClassifier;0.8418;0.8463;0.8418;0.8416;0.8403;0.8411;0.8403;0.8406;0.7833;0.7847;0.7833;0.7786;0.9422;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
DecisionTreeClassifier;0.8564;0.8597;0.8564;0.8566;0.875;0.8811;0.875;0.8745;0.7833;0.792;0.7833;0.7771;0.9513;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
DecisionTreeClassifier;0.8527;0.8588;0.8527;0.8522;0.8403;0.8479;0.8403;0.8389;0.7667;0.77;0.7667;0.7616;0.9428;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
DecisionTreeClassifier;0.8658;0.8683;0.8658;0.8654;0.8264;0.8282;0.8264;0.8242;0.7667;0.7644;0.7667;0.7614;0.9484;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
DecisionTreeClassifier;0.8511;0.8538;0.8511;0.8509;0.8333;0.8319;0.8333;0.8319;0.7667;0.7639;0.7667;0.7601;0.9454;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.8572;0.8596;0.8572;0.8567;0.8611;0.8605;0.8611;0.8598;0.75;0.7468;0.75;0.7471;0.9441;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 789};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=789)
DecisionTreeClassifier;0.8658;0.8687;0.8658;0.8655;0.8333;0.8354;0.8333;0.8331;0.75;0.7639;0.75;0.7386;0.9456;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
DecisionTreeClassifier;0.8649;0.8674;0.8649;0.8644;0.8333;0.8335;0.8333;0.8326;0.7333;0.7306;0.7333;0.725;0.9428;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 857};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=857)
DecisionTreeClassifier;0.868;0.8698;0.868;0.8679;0.8403;0.8432;0.8403;0.8402;0.7333;0.7306;0.7333;0.725;0.9495;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 209};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=209)
SVC;0.6358;0.7153;0.6358;0.6247;0.7431;0.7672;0.7431;0.7403;0.7167;0.7451;0.7167;0.7196;0.7959;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, probability=True, random_state=649)
SVC;0.632;0.7106;0.632;0.6215;0.7292;0.7603;0.7292;0.7296;0.7167;0.7451;0.7167;0.7196;0.7994;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.6296;0.7089;0.6296;0.6202;0.7639;0.7912;0.7639;0.7601;0.7167;0.7451;0.7167;0.7196;0.7982;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, probability=True, random_state=649)
SVC;0.6381;0.7168;0.6381;0.6284;0.6597;0.681;0.6597;0.6585;0.7167;0.7451;0.7167;0.7196;0.8003;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 492};SVC(C=10, probability=True, random_state=492)
SVC;0.6396;0.7144;0.6396;0.6291;0.7361;0.7738;0.7361;0.7352;0.7167;0.7451;0.7167;0.7196;0.7939;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, probability=True, random_state=649)
SVC;0.6411;0.7191;0.6411;0.6312;0.6597;0.695;0.6597;0.6552;0.7167;0.7451;0.7167;0.7196;0.8044;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 971};SVC(C=10, probability=True, random_state=971)
SVC;0.6304;0.7117;0.6304;0.6184;0.7917;0.818;0.7917;0.7889;0.7167;0.7451;0.7167;0.7196;0.792;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 492};SVC(C=10, probability=True, random_state=492)
SVC;0.6289;0.7086;0.6289;0.6175;0.7708;0.8012;0.7708;0.7698;0.7167;0.7451;0.7167;0.7196;0.7948;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 492};SVC(C=10, probability=True, random_state=492)
SVC;0.6335;0.7085;0.6335;0.6223;0.75;0.7929;0.75;0.751;0.7167;0.7451;0.7167;0.7196;0.798;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 492};SVC(C=10, probability=True, random_state=492)
SVC;0.6312;0.7064;0.6312;0.618;0.7361;0.7633;0.7361;0.7347;0.7167;0.7451;0.7167;0.7196;0.7896;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, probability=True, random_state=649)
SVC;0.6281;0.7079;0.6281;0.6176;0.7639;0.7902;0.7639;0.7617;0.7167;0.7451;0.7167;0.7196;0.7955;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 492};SVC(C=10, probability=True, random_state=492)
SVC;0.6312;0.7072;0.6312;0.6218;0.6875;0.7538;0.6875;0.6795;0.7167;0.7451;0.7167;0.7196;0.7997;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 492};SVC(C=10, probability=True, random_state=492)
MLPClassifier;0.8133;0.8244;0.8133;0.813;0.6944;0.6964;0.6944;0.6949;0.7167;0.7142;0.7167;0.7129;0.927;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.7831;0.8009;0.7831;0.7825;0.7083;0.7826;0.7083;0.7113;0.7;0.7341;0.7;0.7015;0.9212;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 160, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=160)
SVC;0.6328;0.7118;0.6328;0.6225;0.7222;0.7535;0.7222;0.7089;0.7;0.7189;0.7;0.7013;0.8012;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 649};SVC(C=10, probability=True, random_state=649)
SVC;0.6257;0.7049;0.6257;0.6137;0.7847;0.8003;0.7847;0.7839;0.7;0.7014;0.7;0.6949;0.7961;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
SVC;0.635;0.7107;0.635;0.6247;0.7847;0.8072;0.7847;0.7839;0.7;0.7014;0.7;0.6949;0.7952;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 492};SVC(C=0.1, kernel='linear', probability=True, random_state=492)
MLPClassifier;0.8002;0.8158;0.8002;0.7991;0.7083;0.7539;0.7083;0.7046;0.6833;0.7056;0.6833;0.6865;0.9275;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 139, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=139)
MLPClassifier;0.7963;0.8107;0.7963;0.795;0.7917;0.7979;0.7917;0.7914;0.6833;0.6833;0.6833;0.6812;0.9296;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
SVC;0.6342;0.7132;0.6342;0.6237;0.6944;0.709;0.6944;0.6941;0.6833;0.6822;0.6833;0.6757;0.7995;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 649};SVC(C=0.1, kernel='linear', probability=True, random_state=649)
SVC;0.628;0.7065;0.628;0.6173;0.75;0.7653;0.75;0.7501;0.6833;0.6822;0.6833;0.6757;0.7936;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 649};SVC(C=0.1, kernel='linear', probability=True, random_state=649)
SVC;0.6289;0.7055;0.6289;0.6185;0.75;0.7765;0.75;0.7497;0.6833;0.6822;0.6833;0.6757;0.7963;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 649};SVC(C=0.1, kernel='linear', probability=True, random_state=649)
SVC;0.6311;0.7062;0.6311;0.6214;0.7917;0.8126;0.7917;0.7926;0.6833;0.6822;0.6833;0.6757;0.794;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 649};SVC(C=0.1, kernel='linear', probability=True, random_state=649)
SVC;0.6351;0.7109;0.6351;0.6265;0.6944;0.7281;0.6944;0.6928;0.6833;0.6822;0.6833;0.6757;0.8025;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 649};SVC(C=0.1, kernel='linear', probability=True, random_state=649)
SVC;0.6296;0.7098;0.6296;0.6172;0.7778;0.8;0.7778;0.7753;0.6833;0.6822;0.6833;0.6757;0.7916;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
SVC;0.6366;0.7145;0.6366;0.6255;0.7222;0.7408;0.7222;0.7191;0.6833;0.6822;0.6833;0.6757;0.7986;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
SVC;0.6304;0.7071;0.6304;0.6195;0.7361;0.7531;0.7361;0.7351;0.6833;0.6822;0.6833;0.6757;0.7913;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
SVC;0.6258;0.7031;0.6258;0.6151;0.7639;0.7971;0.7639;0.7605;0.6833;0.6822;0.6833;0.6757;0.7939;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
SVC;0.6312;0.7106;0.6312;0.6206;0.75;0.7675;0.75;0.7489;0.6833;0.6822;0.6833;0.6757;0.7952;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
SVC;0.6381;0.7144;0.6381;0.6272;0.7708;0.7855;0.7708;0.7649;0.6833;0.6822;0.6833;0.6757;0.7939;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 492};SVC(C=0.1, kernel='linear', probability=True, random_state=492)
SVC;0.6343;0.7112;0.6343;0.625;0.7014;0.7275;0.7014;0.7002;0.6833;0.6822;0.6833;0.6757;0.7971;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 492};SVC(C=0.1, kernel='linear', probability=True, random_state=492)
SVC;0.6297;0.7067;0.6297;0.6206;0.7361;0.768;0.7361;0.735;0.6833;0.6822;0.6833;0.6757;0.793;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
MLPClassifier;0.7962;0.8073;0.7962;0.7952;0.7292;0.7333;0.7292;0.7305;0.6667;0.6707;0.6667;0.6677;0.9262;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
SVC;0.635;0.714;0.635;0.6255;0.7014;0.7164;0.7014;0.6997;0.6667;0.6632;0.6667;0.656;0.7981;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 971};SVC(C=0.1, kernel='linear', probability=True, random_state=971)
SVC;0.6319;0.7098;0.6319;0.6216;0.7569;0.7741;0.7569;0.7582;0.6667;0.6632;0.6667;0.656;0.7941;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 492};SVC(C=0.1, kernel='linear', probability=True, random_state=492)
LogisticRegression;0.6929;0.7042;0.6929;0.6904;0.7153;0.7324;0.7153;0.7095;0.65;0.6456;0.65;0.6459;0.8349;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6921;0.7064;0.6921;0.691;0.6667;0.6955;0.6667;0.6637;0.65;0.6456;0.65;0.6459;0.8379;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.6922;0.7084;0.6922;0.6905;0.6944;0.7009;0.6944;0.6935;0.65;0.6456;0.65;0.6459;0.8352;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.696;0.71;0.696;0.6954;0.6806;0.6916;0.6806;0.6789;0.65;0.6456;0.65;0.6459;0.8382;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.6929;0.7086;0.6929;0.6916;0.7014;0.7158;0.7014;0.6897;0.65;0.6456;0.65;0.6459;0.8364;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.6883;0.7001;0.6883;0.6865;0.7569;0.7784;0.7569;0.7563;0.65;0.6456;0.65;0.6459;0.8339;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.6913;0.7043;0.6913;0.6896;0.7431;0.7556;0.7431;0.7392;0.65;0.6456;0.65;0.6459;0.8351;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6937;0.7084;0.6937;0.6923;0.7431;0.7473;0.7431;0.7429;0.65;0.6456;0.65;0.6459;0.8364;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6913;0.7047;0.6913;0.6903;0.7083;0.7341;0.7083;0.701;0.65;0.6456;0.65;0.6459;0.8385;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6929;0.7016;0.6929;0.6915;0.7222;0.7475;0.7222;0.7246;0.65;0.6456;0.65;0.6459;0.8349;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.7022;0.7122;0.7022;0.6998;0.6458;0.6576;0.6458;0.6346;0.65;0.6456;0.65;0.6459;0.8394;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6952;0.714;0.6952;0.6936;0.6806;0.6975;0.6806;0.6706;0.65;0.6456;0.65;0.6459;0.839;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6945;0.7097;0.6945;0.6925;0.6806;0.6887;0.6806;0.6792;0.65;0.6456;0.65;0.6459;0.8361;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.7129;0.7238;0.7129;0.7112;0.6389;0.6424;0.6389;0.6397;0.65;0.65;0.65;0.6458;0.8434;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.7006;0.7165;0.7006;0.7002;0.6944;0.7037;0.6944;0.6915;0.65;0.65;0.65;0.6458;0.8398;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6937;0.7096;0.6937;0.691;0.6875;0.6861;0.6875;0.6857;0.6333;0.6271;0.6333;0.6269;0.8386;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6875;0.7046;0.6875;0.6866;0.6875;0.6884;0.6875;0.6832;0.6333;0.6271;0.6333;0.6269;0.8348;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6937;0.7056;0.6937;0.6915;0.6944;0.7189;0.6944;0.6956;0.6333;0.6271;0.6333;0.6269;0.8367;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6952;0.7078;0.6952;0.6932;0.7153;0.7224;0.7153;0.7127;0.6333;0.6271;0.6333;0.6269;0.8349;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6867;0.7023;0.6867;0.6858;0.7083;0.7284;0.7083;0.7024;0.6333;0.6306;0.6333;0.6263;0.8355;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6944;0.7094;0.6944;0.6927;0.6944;0.6982;0.6944;0.6938;0.6333;0.6306;0.6333;0.6263;0.8389;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6906;0.7055;0.6906;0.688;0.7083;0.7127;0.7083;0.7052;0.6333;0.6306;0.6333;0.6263;0.8361;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.6906;0.7032;0.6906;0.6892;0.7083;0.711;0.7083;0.7055;0.6333;0.6306;0.6333;0.6263;0.8346;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.7005;0.7156;0.7005;0.7002;0.7014;0.7314;0.7014;0.6998;0.6333;0.6306;0.6333;0.6263;0.8385;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.6906;0.702;0.6906;0.6882;0.6806;0.7026;0.6806;0.6809;0.6333;0.6306;0.6333;0.6263;0.8379;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6921;0.7025;0.6921;0.6891;0.7083;0.7266;0.7083;0.7081;0.6333;0.6306;0.6333;0.6263;0.8352;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.6882;0.6992;0.6882;0.686;0.7083;0.7184;0.7083;0.7087;0.6333;0.6306;0.6333;0.6263;0.8386;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 308, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=308)"
LogisticRegression;0.696;0.7059;0.696;0.6941;0.6319;0.6501;0.6319;0.635;0.6333;0.6306;0.6333;0.6263;0.8417;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 318, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=318)"
LogisticRegression;0.6829;0.6949;0.6829;0.6808;0.7083;0.7133;0.7083;0.7087;0.6167;0.6083;0.6167;0.6073;0.8359;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
LogisticRegression;0.7014;0.7137;0.7014;0.6991;0.6389;0.635;0.6389;0.6329;0.6167;0.6127;0.6167;0.6067;0.8403;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 693, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=693)"
