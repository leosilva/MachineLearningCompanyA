Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.9252;0.9288;0.9252;0.9251;0.9167;0.9191;0.9167;0.9162;0.85;0.8591;0.85;0.8495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
DecisionTreeClassifier;0.9221;0.9265;0.9221;0.9224;0.9306;0.9342;0.9306;0.931;0.85;0.8591;0.85;0.8495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
DecisionTreeClassifier;0.9206;0.9246;0.9206;0.9206;0.9444;0.9447;0.9444;0.9444;0.85;0.8591;0.85;0.8495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
DecisionTreeClassifier;0.9283;0.9293;0.9283;0.9281;0.9167;0.9187;0.9167;0.9155;0.85;0.858;0.85;0.8492;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
DecisionTreeClassifier;0.9313;0.9334;0.9313;0.9313;0.9028;0.9052;0.9028;0.9017;0.8333;0.8446;0.8333;0.834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
DecisionTreeClassifier;0.9259;0.9276;0.9259;0.9259;0.9236;0.9286;0.9236;0.9236;0.8333;0.8458;0.8333;0.8338;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
DecisionTreeClassifier;0.9259;0.927;0.9259;0.9258;0.9514;0.9512;0.9514;0.9512;0.8333;0.8458;0.8333;0.8338;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
DecisionTreeClassifier;0.929;0.9307;0.929;0.9289;0.9375;0.94;0.9375;0.937;0.8333;0.8458;0.8333;0.8338;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
DecisionTreeClassifier;0.9182;0.922;0.9182;0.9184;0.9514;0.9543;0.9514;0.9514;0.8333;0.8458;0.8333;0.8338;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
DecisionTreeClassifier;0.9236;0.9268;0.9236;0.9238;0.9375;0.9412;0.9375;0.9372;0.8333;0.8374;0.8333;0.8328;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
DecisionTreeClassifier;0.9213;0.9234;0.9213;0.9212;0.9375;0.9474;0.9375;0.9385;0.8333;0.8374;0.8333;0.8328;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
DecisionTreeClassifier;0.929;0.9336;0.929;0.9291;0.8958;0.9067;0.8958;0.8956;0.8333;0.8374;0.8333;0.8328;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
RandomForestClassifier;0.9259;0.928;0.9259;0.9258;0.9097;0.9141;0.9097;0.9107;0.8333;0.8468;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 161};RandomForestClassifier(n_estimators=10, random_state=161)
RandomForestClassifier;0.9198;0.9237;0.9198;0.9199;0.9444;0.9461;0.9444;0.9448;0.8333;0.8468;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.9236;0.9258;0.9236;0.9236;0.9306;0.9332;0.9306;0.9311;0.8333;0.8468;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 210};RandomForestClassifier(n_estimators=20, random_state=210)
RandomForestClassifier;0.9205;0.9243;0.9205;0.9205;0.9583;0.9583;0.9583;0.9583;0.8333;0.8468;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 161};RandomForestClassifier(n_estimators=5, random_state=161)
RandomForestClassifier;0.9252;0.9261;0.9252;0.925;0.9236;0.9272;0.9236;0.9238;0.8333;0.8468;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
RandomForestClassifier;0.9228;0.9264;0.9228;0.9231;0.9375;0.9381;0.9375;0.937;0.8333;0.8468;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
RandomForestClassifier;0.9344;0.936;0.9344;0.9343;0.8889;0.8892;0.8889;0.8882;0.8333;0.8468;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
DecisionTreeClassifier;0.9214;0.9244;0.9214;0.9213;0.8889;0.8923;0.8889;0.8888;0.8333;0.8447;0.8333;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
RandomForestClassifier;0.9275;0.9299;0.9275;0.9273;0.9306;0.9305;0.9306;0.9305;0.8333;0.8354;0.8333;0.8313;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 366};RandomForestClassifier(n_estimators=5, random_state=366)
RandomForestClassifier;0.9336;0.9346;0.9336;0.9335;0.9375;0.9398;0.9375;0.9379;0.8333;0.844;0.8333;0.8311;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 210};RandomForestClassifier(n_estimators=10, random_state=210)
DecisionTreeClassifier;0.936;0.9369;0.936;0.936;0.8958;0.8965;0.8958;0.8941;0.8167;0.8319;0.8167;0.8187;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
RandomForestClassifier;0.9198;0.9217;0.9198;0.9197;0.9653;0.966;0.9653;0.965;0.8167;0.8432;0.8167;0.8176;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 210};RandomForestClassifier(n_estimators=10, random_state=210)
RandomForestClassifier;0.9275;0.9287;0.9275;0.9275;0.9028;0.9036;0.9028;0.9031;0.8167;0.8277;0.8167;0.8175;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
DecisionTreeClassifier;0.9321;0.9334;0.9321;0.9321;0.9306;0.9302;0.9306;0.9301;0.8167;0.8238;0.8167;0.8172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
DecisionTreeClassifier;0.9243;0.9284;0.9243;0.9246;0.9375;0.9424;0.9375;0.9378;0.8167;0.8238;0.8167;0.8172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
RandomForestClassifier;0.9306;0.9331;0.9306;0.9303;0.9306;0.9305;0.9306;0.9305;0.8167;0.8406;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.9267;0.9287;0.9267;0.9266;0.9514;0.9515;0.9514;0.9512;0.8167;0.8409;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 366};RandomForestClassifier(n_estimators=10, random_state=366)
DecisionTreeClassifier;0.9236;0.9249;0.9236;0.9235;0.9375;0.9376;0.9375;0.9375;0.8167;0.8223;0.8167;0.8169;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
RandomForestClassifier;0.9206;0.9219;0.9206;0.9206;0.9514;0.9524;0.9514;0.951;0.8167;0.8344;0.8167;0.8167;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 210};RandomForestClassifier(n_estimators=20, random_state=210)
RandomForestClassifier;0.9275;0.9304;0.9275;0.9273;0.9028;0.9035;0.9028;0.9021;0.8167;0.8344;0.8167;0.8167;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 210};RandomForestClassifier(n_estimators=5, random_state=210)
DecisionTreeClassifier;0.9291;0.9323;0.9291;0.9292;0.9306;0.9313;0.9306;0.9307;0.8167;0.8248;0.8167;0.8165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
RandomForestClassifier;0.9159;0.9187;0.9159;0.9157;0.9792;0.9792;0.9792;0.9791;0.8167;0.8299;0.8167;0.8165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
DecisionTreeClassifier;0.9212;0.9249;0.9212;0.9211;0.9722;0.9728;0.9722;0.9722;0.8167;0.8187;0.8167;0.8163;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
DecisionTreeClassifier;0.9337;0.9356;0.9337;0.9337;0.8958;0.9056;0.8958;0.8958;0.8167;0.8175;0.8167;0.816;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
RandomForestClassifier;0.9267;0.9283;0.9267;0.9267;0.9375;0.9375;0.9375;0.9374;0.8167;0.8302;0.8167;0.8159;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
RandomForestClassifier;0.9328;0.935;0.9328;0.9327;0.9167;0.9183;0.9167;0.9161;0.8167;0.8302;0.8167;0.8159;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
RandomForestClassifier;0.9213;0.9237;0.9213;0.9212;0.9167;0.9183;0.9167;0.9172;0.8167;0.8302;0.8167;0.8159;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.9329;0.934;0.9329;0.9328;0.8819;0.8824;0.8819;0.882;0.8167;0.8302;0.8167;0.8159;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 210};RandomForestClassifier(n_estimators=10, random_state=210)
RandomForestClassifier;0.9367;0.9376;0.9367;0.9365;0.9167;0.9162;0.9167;0.9162;0.8167;0.8302;0.8167;0.8159;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.929;0.931;0.929;0.929;0.9167;0.9182;0.9167;0.9166;0.8167;0.8238;0.8167;0.8155;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
RandomForestClassifier;0.9367;0.938;0.9367;0.9367;0.9028;0.9035;0.9028;0.9023;0.8167;0.825;0.8167;0.8153;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 210};RandomForestClassifier(n_estimators=10, random_state=210)
MLPClassifier;0.8726;0.8798;0.8726;0.8734;0.875;0.8782;0.875;0.8741;0.8167;0.8224;0.8167;0.8148;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
MLPClassifier;0.8703;0.8798;0.8703;0.8711;0.9306;0.9344;0.9306;0.9304;0.8;0.8101;0.8;0.8024;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
DecisionTreeClassifier;0.9259;0.9283;0.9259;0.9258;0.9028;0.9093;0.9028;0.9033;0.8;0.8109;0.8;0.8014;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
DecisionTreeClassifier;0.9252;0.9284;0.9252;0.9251;0.9375;0.9417;0.9375;0.9369;0.8;0.8109;0.8;0.8014;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
DecisionTreeClassifier;0.9252;0.9275;0.9252;0.9252;0.9236;0.9354;0.9236;0.9235;0.8;0.8109;0.8;0.8014;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
RandomForestClassifier;0.9213;0.9224;0.9213;0.9211;0.9375;0.9436;0.9375;0.9377;0.8;0.8171;0.8;0.8007;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 161};RandomForestClassifier(n_estimators=20, random_state=161)
RandomForestClassifier;0.9229;0.926;0.9229;0.9226;0.9514;0.9521;0.9514;0.9511;0.8;0.8171;0.8;0.8007;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
DecisionTreeClassifier;0.9267;0.929;0.9267;0.9266;0.9444;0.9458;0.9444;0.9442;0.8;0.8035;0.8;0.8005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
DecisionTreeClassifier;0.9267;0.9288;0.9267;0.927;0.9097;0.9162;0.9097;0.9098;0.8;0.8035;0.8;0.8005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
MLPClassifier;0.8688;0.8769;0.8688;0.8693;0.9167;0.9194;0.9167;0.9167;0.8;0.8014;0.8;0.7998;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
RandomForestClassifier;0.9144;0.9172;0.9144;0.9142;0.9722;0.9725;0.9722;0.9721;0.8;0.8042;0.8;0.7992;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 210};RandomForestClassifier(n_estimators=5, random_state=210)
KNeighborsClassifier;0.9097;0.9124;0.9097;0.9095;0.9236;0.9243;0.9236;0.9237;0.8;0.8079;0.8;0.7992;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.9243;0.9273;0.9243;0.9246;0.9097;0.9103;0.9097;0.9099;0.8;0.7989;0.8;0.7991;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 471};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=471)
RandomForestClassifier;0.9244;0.9269;0.9244;0.9243;0.9653;0.9661;0.9653;0.9652;0.8;0.8068;0.8;0.7989;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 210};RandomForestClassifier(n_estimators=10, random_state=210)
KNeighborsClassifier;0.9097;0.9145;0.9097;0.9092;0.9514;0.9523;0.9514;0.9514;0.8;0.8068;0.8;0.7989;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9128;0.9164;0.9128;0.9128;0.9097;0.9141;0.9097;0.9107;0.8;0.8002;0.8;0.7988;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9059;0.9092;0.9059;0.9058;0.9306;0.9363;0.9306;0.9306;0.8;0.8002;0.8;0.7988;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9074;0.9116;0.9074;0.9072;0.9097;0.91;0.9097;0.9091;0.8;0.8019;0.8;0.7985;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8734;0.8808;0.8734;0.874;0.9375;0.944;0.9375;0.9367;0.7833;0.8023;0.7833;0.786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
MLPClassifier;0.8696;0.876;0.8696;0.8704;0.8542;0.8539;0.8542;0.8533;0.7833;0.7904;0.7833;0.7847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
MLPClassifier;0.8634;0.8723;0.8634;0.8644;0.9583;0.9594;0.9583;0.9584;0.7833;0.7917;0.7833;0.7839;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
MLPClassifier;0.8673;0.8762;0.8673;0.8682;0.9236;0.9245;0.9236;0.9236;0.7833;0.7847;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
MLPClassifier;0.8642;0.8738;0.8642;0.8645;0.9514;0.9515;0.9514;0.9512;0.7833;0.7847;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
RandomForestClassifier;0.9159;0.9181;0.9159;0.916;0.9583;0.9616;0.9583;0.9582;0.7833;0.7934;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.929;0.9309;0.929;0.9291;0.9097;0.9101;0.9097;0.9094;0.7833;0.7934;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 210};RandomForestClassifier(n_estimators=20, random_state=210)
MLPClassifier;0.8689;0.8767;0.8689;0.8695;0.9167;0.9233;0.9167;0.9167;0.7833;0.7847;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
MLPClassifier;0.8657;0.8736;0.8657;0.8664;0.9375;0.9446;0.9375;0.9377;0.7833;0.7847;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
DecisionTreeClassifier;0.9336;0.9367;0.9336;0.9336;0.9306;0.9317;0.9306;0.9304;0.7833;0.7944;0.7833;0.7835;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
SVC;0.8743;0.8829;0.8743;0.875;0.9236;0.9253;0.9236;0.9237;0.7833;0.7857;0.7833;0.7835;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
KNeighborsClassifier;0.9121;0.9156;0.9121;0.9121;0.9167;0.917;0.9167;0.9166;0.7833;0.7917;0.7833;0.7831;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9043;0.9105;0.9043;0.9043;0.9306;0.9332;0.9306;0.93;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9105;0.9126;0.9105;0.91;0.9306;0.9365;0.9306;0.9312;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9097;0.913;0.9097;0.9095;0.9375;0.9426;0.9375;0.938;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9051;0.9078;0.9051;0.9049;0.9236;0.9336;0.9236;0.9247;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9074;0.9106;0.9074;0.907;0.8889;0.8918;0.8889;0.8893;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9205;0.9236;0.9205;0.9204;0.8958;0.9108;0.8958;0.8969;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9151;0.9184;0.9151;0.9152;0.9097;0.9172;0.9097;0.9089;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9175;0.9227;0.9175;0.9174;0.9028;0.9114;0.9028;0.9039;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9159;0.9173;0.9159;0.9156;0.9167;0.9182;0.9167;0.9166;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9121;0.9152;0.9121;0.9115;0.9097;0.9098;0.9097;0.9096;0.7833;0.7829;0.7833;0.7828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8657;0.8741;0.8657;0.8668;0.9444;0.9524;0.9444;0.9446;0.7833;0.7831;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
KNeighborsClassifier;0.9151;0.9188;0.9151;0.915;0.9028;0.9035;0.9028;0.9029;0.7833;0.7906;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8727;0.8809;0.8727;0.8733;0.9236;0.9252;0.9236;0.9239;0.7833;0.7831;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
KNeighborsClassifier;0.9113;0.9138;0.9113;0.9109;0.9444;0.9459;0.9444;0.9447;0.7833;0.7831;0.7833;0.7822;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9313;0.932;0.9313;0.9313;0.8889;0.889;0.8889;0.8879;0.7833;0.7948;0.7833;0.7816;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 366};RandomForestClassifier(n_estimators=5, random_state=366)
KNeighborsClassifier;0.9159;0.9176;0.9159;0.9156;0.9583;0.9595;0.9583;0.9583;0.7833;0.7854;0.7833;0.7813;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9113;0.915;0.9113;0.9112;0.9097;0.91;0.9097;0.909;0.7833;0.7922;0.7833;0.7807;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8766;0.8818;0.8766;0.8773;0.9375;0.9417;0.9375;0.9369;0.7667;0.7728;0.7667;0.7676;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
MLPClassifier;0.8657;0.8724;0.8657;0.8666;0.9167;0.9205;0.9167;0.9166;0.7667;0.7775;0.7667;0.7675;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8673;0.8753;0.8673;0.8681;0.9514;0.9529;0.9514;0.9513;0.7667;0.7775;0.7667;0.7675;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8634;0.871;0.8634;0.8636;0.9306;0.9337;0.9306;0.9308;0.7667;0.7775;0.7667;0.7675;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
MLPClassifier;0.8611;0.869;0.8611;0.8618;0.9306;0.9324;0.9306;0.9301;0.7667;0.7775;0.7667;0.7675;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8634;0.8718;0.8634;0.8642;0.9375;0.9419;0.9375;0.9373;0.7667;0.7702;0.7667;0.7671;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
KNeighborsClassifier;0.8997;0.9055;0.8997;0.8994;0.8889;0.8948;0.8889;0.8865;0.7667;0.768;0.7667;0.767;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9297;0.9323;0.9297;0.9296;0.9306;0.9332;0.9306;0.9311;0.7667;0.7667;0.7667;0.7667;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
KNeighborsClassifier;0.919;0.9219;0.919;0.9187;0.8889;0.8907;0.8889;0.8885;0.7667;0.767;0.7667;0.7666;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.9151;0.9189;0.9151;0.9153;0.8958;0.9071;0.8958;0.8978;0.7667;0.767;0.7667;0.7666;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 998};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=998)
KNeighborsClassifier;0.9205;0.9234;0.9205;0.9203;0.9167;0.9225;0.9167;0.9176;0.7667;0.7684;0.7667;0.7662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8696;0.8772;0.8696;0.8704;0.9167;0.9181;0.9167;0.9169;0.7667;0.7738;0.7667;0.7662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
KNeighborsClassifier;0.919;0.9233;0.919;0.919;0.9167;0.9173;0.9167;0.9157;0.7667;0.7702;0.7667;0.766;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9174;0.9199;0.9174;0.9171;0.9167;0.9233;0.9167;0.9172;0.7667;0.7702;0.7667;0.766;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9036;0.9063;0.9036;0.9033;0.9167;0.9208;0.9167;0.9174;0.7667;0.7709;0.7667;0.7658;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9221;0.9249;0.9221;0.9221;0.9167;0.9308;0.9167;0.9164;0.7667;0.7709;0.7667;0.7658;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9121;0.9171;0.9121;0.9119;0.9375;0.9405;0.9375;0.9376;0.7667;0.7709;0.7667;0.7658;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9136;0.9152;0.9136;0.9133;0.9583;0.9585;0.9583;0.9583;0.7667;0.7655;0.7667;0.7657;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8657;0.8747;0.8657;0.8669;0.9375;0.9391;0.9375;0.9377;0.7667;0.7668;0.7667;0.7655;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 484, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=484)
MLPClassifier;0.8727;0.8796;0.8727;0.8732;0.9097;0.9167;0.9097;0.9108;0.75;0.7639;0.75;0.7517;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8727;0.8815;0.8727;0.8732;0.9167;0.9253;0.9167;0.9142;0.75;0.7558;0.75;0.7505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8781;0.8848;0.8781;0.8786;0.8958;0.9042;0.8958;0.8971;0.75;0.7558;0.75;0.7505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8642;0.8711;0.8642;0.8649;0.9653;0.9686;0.9653;0.9657;0.75;0.7558;0.75;0.7505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8665;0.8735;0.8665;0.8669;0.9167;0.9258;0.9167;0.9155;0.75;0.7558;0.75;0.7505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
SVC;0.8634;0.8748;0.8634;0.8642;0.9375;0.9382;0.9375;0.9372;0.75;0.7513;0.75;0.7503;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
MLPClassifier;0.8665;0.8741;0.8665;0.8671;0.9375;0.9388;0.9375;0.9372;0.75;0.7513;0.75;0.7503;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
MLPClassifier;0.8789;0.8844;0.8789;0.8797;0.9167;0.9255;0.9167;0.9163;0.75;0.7564;0.75;0.7503;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
MLPClassifier;0.8696;0.8769;0.8696;0.8706;0.9306;0.9321;0.9306;0.9307;0.75;0.7564;0.75;0.7503;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
MLPClassifier;0.8665;0.8741;0.8665;0.8674;0.9306;0.9332;0.9306;0.9311;0.75;0.7564;0.75;0.7503;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 824, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=824)
KNeighborsClassifier;0.9167;0.9185;0.9167;0.9164;0.9097;0.9123;0.9097;0.9102;0.75;0.7513;0.75;0.7497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.9175;0.9215;0.9175;0.9174;0.875;0.8864;0.875;0.877;0.75;0.7488;0.75;0.7491;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 458};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=458)
SVC;0.8689;0.878;0.8689;0.8694;0.9097;0.9103;0.9097;0.9094;0.7333;0.736;0.7333;0.7338;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
MLPClassifier;0.8696;0.8782;0.8696;0.8699;0.9097;0.9122;0.9097;0.9101;0.7333;0.7365;0.7333;0.7337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 637, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=637)
SVC;0.8727;0.8819;0.8727;0.8735;0.9097;0.9146;0.9097;0.91;0.7167;0.7264;0.7167;0.7179;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8735;0.8818;0.8735;0.8743;0.8819;0.8849;0.8819;0.8821;0.7167;0.7232;0.7167;0.7179;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8718;0.8815;0.8718;0.8725;0.9236;0.9275;0.9236;0.9237;0.7167;0.7232;0.7167;0.7179;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.8766;0.885;0.8766;0.8775;0.8889;0.8958;0.8889;0.8881;0.7167;0.7264;0.7167;0.7179;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
SVC;0.8696;0.8779;0.8696;0.8704;0.875;0.8794;0.875;0.8748;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8696;0.8782;0.8696;0.8702;0.9236;0.9298;0.9236;0.9242;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.875;0.8833;0.875;0.8758;0.9097;0.9161;0.9097;0.9096;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8696;0.8799;0.8696;0.8705;0.9028;0.9081;0.9028;0.9034;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.8773;0.8852;0.8773;0.8781;0.8819;0.8895;0.8819;0.8836;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
SVC;0.8727;0.882;0.8727;0.8737;0.9028;0.9058;0.9028;0.9023;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.875;0.8835;0.875;0.8755;0.9375;0.9418;0.9375;0.9383;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
SVC;0.8781;0.8865;0.8781;0.879;0.8611;0.8721;0.8611;0.8597;0.7167;0.7213;0.7167;0.717;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
SVC;0.8789;0.8873;0.8789;0.8799;0.8681;0.8822;0.8681;0.868;0.7167;0.7264;0.7167;0.7164;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
SVC;0.8788;0.8879;0.8788;0.8794;0.8542;0.8692;0.8542;0.855;0.7167;0.718;0.7167;0.7162;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8766;0.8855;0.8766;0.8774;0.8681;0.8706;0.8681;0.868;0.7167;0.7162;0.7167;0.7161;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
LogisticRegression;0.7893;0.8142;0.7893;0.7919;0.7639;0.7947;0.7639;0.7676;0.7;0.7107;0.7;0.7026;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.787;0.8129;0.787;0.7892;0.7569;0.7956;0.7569;0.7615;0.7;0.7107;0.7;0.7026;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7786;0.8061;0.7786;0.7817;0.8125;0.8423;0.8125;0.816;0.7;0.7107;0.7;0.7026;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7861;0.8096;0.7861;0.7889;0.7431;0.7929;0.7431;0.7487;0.7;0.7107;0.7;0.7026;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7908;0.8149;0.7908;0.794;0.7639;0.7943;0.7639;0.7607;0.7;0.7068;0.7;0.7015;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
SVC;0.8796;0.8887;0.8796;0.8803;0.8681;0.8742;0.8681;0.8677;0.7;0.7033;0.7;0.7009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.8696;0.8791;0.8696;0.8703;0.9097;0.9107;0.9097;0.9096;0.7;0.7033;0.7;0.7009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8711;0.8799;0.8711;0.8717;0.9028;0.9062;0.9028;0.9028;0.7;0.7132;0.7;0.7009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.8796;0.8884;0.8796;0.8803;0.8403;0.8498;0.8403;0.8409;0.7;0.7033;0.7;0.7009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.8797;0.889;0.8797;0.8804;0.8333;0.8367;0.8333;0.8315;0.7;0.7033;0.7;0.7009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
SVC;0.8742;0.8828;0.8742;0.875;0.8611;0.8634;0.8611;0.8617;0.7;0.7;0.7;0.7;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8704;0.88;0.8704;0.8711;0.9167;0.9191;0.9167;0.917;0.7;0.7068;0.7;0.6999;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.8749;0.8845;0.8749;0.8757;0.8889;0.8942;0.8889;0.8885;0.7;0.7003;0.7;0.6999;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 418};SVC(C=10, random_state=418)
SVC;0.8727;0.8809;0.8727;0.8735;0.8889;0.9;0.8889;0.89;0.7;0.7068;0.7;0.6999;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 447};SVC(C=10, random_state=447)
SVC;0.8696;0.88;0.8696;0.8705;0.9097;0.9143;0.9097;0.9097;0.7;0.7198;0.7;0.6996;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
SVC;0.8804;0.888;0.8804;0.8812;0.8819;0.8877;0.8819;0.8828;0.7;0.7007;0.7;0.6982;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
LogisticRegression;0.794;0.8184;0.794;0.7967;0.7569;0.7909;0.7569;0.7609;0.6833;0.6944;0.6833;0.6858;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7924;0.8201;0.7924;0.7951;0.7361;0.7477;0.7361;0.7383;0.6833;0.6944;0.6833;0.6858;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7824;0.8078;0.7824;0.7855;0.7569;0.7916;0.7569;0.7618;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7855;0.8112;0.7855;0.7887;0.7708;0.7914;0.7708;0.7713;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.78;0.806;0.78;0.7817;0.8264;0.8563;0.8264;0.8284;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7816;0.81;0.7816;0.7847;0.7917;0.8022;0.7917;0.7951;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7878;0.8123;0.7878;0.791;0.7639;0.7985;0.7639;0.7665;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7862;0.809;0.7862;0.789;0.7917;0.8392;0.7917;0.7971;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7815;0.8064;0.7815;0.7843;0.8056;0.8186;0.8056;0.8079;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7794;0.8029;0.7794;0.7818;0.8056;0.8355;0.8056;0.8064;0.6833;0.6896;0.6833;0.6853;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7902;0.8137;0.7902;0.7935;0.7639;0.7959;0.7639;0.7678;0.6833;0.6877;0.6833;0.6844;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7894;0.8134;0.7894;0.7916;0.8264;0.8513;0.8264;0.8305;0.6833;0.6877;0.6833;0.6844;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7924;0.8171;0.7924;0.7956;0.7847;0.8038;0.7847;0.7888;0.6833;0.6877;0.6833;0.6844;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
SVC;0.8719;0.8828;0.8719;0.8726;0.8958;0.8966;0.8958;0.896;0.6833;0.6858;0.6833;0.6838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 755};SVC(C=10, random_state=755)
LogisticRegression;0.7925;0.8161;0.7925;0.7949;0.7639;0.7849;0.7639;0.7662;0.6833;0.6847;0.6833;0.6828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7854;0.807;0.7854;0.7884;0.7778;0.7955;0.7778;0.7819;0.6833;0.6847;0.6833;0.6828;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7847;0.81;0.7847;0.7876;0.8056;0.8218;0.8056;0.8093;0.6667;0.6748;0.6667;0.6689;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7878;0.8133;0.7878;0.7906;0.7778;0.8;0.7778;0.7821;0.6667;0.6748;0.6667;0.6689;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7817;0.808;0.7817;0.7848;0.8403;0.841;0.8403;0.8392;0.65;0.6544;0.65;0.6511;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7862;0.8079;0.7862;0.7878;0.7778;0.8024;0.7778;0.7811;0.65;0.6544;0.65;0.6511;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7847;0.808;0.7847;0.7881;0.8125;0.8228;0.8125;0.8136;0.65;0.6544;0.65;0.6511;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7832;0.8058;0.7832;0.7854;0.7708;0.782;0.7708;0.7742;0.65;0.6544;0.65;0.6511;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 738, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=738)"
LogisticRegression;0.7839;0.8057;0.7839;0.7867;0.7986;0.8225;0.7986;0.8032;0.6333;0.6376;0.6333;0.6346;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7931;0.8145;0.7931;0.7952;0.7778;0.7985;0.7778;0.7828;0.6333;0.6376;0.6333;0.6346;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
LogisticRegression;0.7878;0.8089;0.7878;0.7896;0.8194;0.8292;0.8194;0.8217;0.6333;0.6376;0.6333;0.6346;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 538, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=538)"
LogisticRegression;0.7816;0.8071;0.7816;0.7841;0.8611;0.869;0.8611;0.8615;0.6167;0.6185;0.6167;0.6173;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 165, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=165)"
