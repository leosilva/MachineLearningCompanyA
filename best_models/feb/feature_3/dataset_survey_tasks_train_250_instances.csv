Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.8172,0.8274,0.8172,0.8183,0.7971,0.8377,0.7971,0.7985,0.7833,0.795,0.7833,0.7853,0.9309,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 140}","RandomForestClassifier(n_estimators=20, random_state=140)"
LogisticRegression,0.7754,0.7914,0.7754,0.7768,0.8043,0.8159,0.8043,0.8064,0.7333,0.7598,0.7333,0.7313,0.9311,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 567, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=567)"
KNeighborsClassifier,0.7752,0.7929,0.7752,0.7759,0.8261,0.8504,0.8261,0.8318,0.7333,0.7658,0.7333,0.7245,0.8987,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'}",KNeighborsClassifier()
DecisionTreeClassifier,0.8078,0.8312,0.8078,0.81,0.7971,0.83,0.7971,0.8041,0.7167,0.7682,0.7167,0.7182,0.9314,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 29}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=29)"
RandomForestClassifier,0.7989,0.8121,0.7989,0.7981,0.8261,0.83,0.8261,0.8268,0.7167,0.7356,0.7167,0.718,0.9326,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 241}","RandomForestClassifier(n_estimators=20, random_state=241)"
KNeighborsClassifier,0.7898,0.8075,0.7898,0.7918,0.8116,0.8157,0.8116,0.8131,0.7167,0.7339,0.7167,0.7151,0.9014,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')"
MLPClassifier,0.8024,0.8178,0.8024,0.8038,0.7464,0.7591,0.7464,0.7488,0.7167,0.7162,0.7167,0.7143,0.9392,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 710, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=710)"
DecisionTreeClassifier,0.8241,0.842,0.8241,0.8262,0.8333,0.8418,0.8333,0.8353,0.7167,0.7532,0.7167,0.7125,0.9291,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 913}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=913)"
MLPClassifier,0.8187,0.8374,0.8187,0.8202,0.7319,0.801,0.7319,0.745,0.7167,0.753,0.7167,0.71,0.9418,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 281, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=281)"
DecisionTreeClassifier,0.8026,0.8201,0.8026,0.8057,0.8478,0.8529,0.8478,0.8499,0.7167,0.7178,0.7167,0.7095,0.9333,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 590}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=590)"
SVC,0.8098,0.8194,0.8098,0.809,0.8333,0.8374,0.8333,0.8344,0.7,0.6996,0.7,0.6995,0.9111,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 984}","SVC(C=10, kernel='linear', probability=True, random_state=984)"
LogisticRegression,0.7972,0.8057,0.7972,0.7959,0.7391,0.7418,0.7391,0.7393,0.7,0.7279,0.7,0.6964,0.9342,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 411, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=411)"
KNeighborsClassifier,0.7827,0.802,0.7827,0.7882,0.7754,0.8006,0.7754,0.783,0.6833,0.6978,0.6833,0.6836,0.9081,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)"
MLPClassifier,0.79,0.8034,0.79,0.789,0.7826,0.7867,0.7826,0.7842,0.6667,0.6774,0.6667,0.6686,0.9364,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 957, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=957)"
SVC,0.79,0.8019,0.79,0.7914,0.8043,0.8138,0.8043,0.8066,0.6667,0.6855,0.6667,0.6574,0.9019,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 648}","SVC(C=10, kernel='linear', probability=True, random_state=648)"
RandomForestClassifier,0.8079,0.8198,0.8079,0.8102,0.8478,0.8509,0.8478,0.8488,0.6667,0.6746,0.6667,0.6566,0.9178,smote,250,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 714}","RandomForestClassifier(n_estimators=10, random_state=714)"
LogisticRegression,0.7917,0.7993,0.7917,0.792,0.7754,0.7871,0.7754,0.7783,0.65,0.6689,0.65,0.6541,0.9408,smote,250,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 730, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=730)"
SVC,0.786,0.851,0.786,0.7855,0.7609,0.8297,0.7609,0.7577,0.6667,0.7476,0.6667,0.6451,0.9112,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 900}","SVC(C=1, kernel='linear', probability=True, random_state=900)"
