Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8162;0.8343;0.8162;0.8143;0.8611;0.8626;0.8611;0.8611;0.85;0.8542;0.85;0.8506;0.9496;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.8218;0.8395;0.8218;0.819;0.8542;0.8546;0.8542;0.8543;0.85;0.8542;0.85;0.8506;0.951;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
MLPClassifier;0.8218;0.8418;0.8218;0.8198;0.8889;0.8894;0.8889;0.8889;0.85;0.8542;0.85;0.8506;0.9468;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
MLPClassifier;0.8171;0.8354;0.8171;0.8143;0.8889;0.8957;0.8889;0.8893;0.85;0.8542;0.85;0.8506;0.9494;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
KNeighborsClassifier;0.8441;0.8486;0.8441;0.8433;0.8125;0.8135;0.8125;0.8127;0.85;0.8669;0.85;0.8505;0.9492;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.841;0.8454;0.841;0.8403;0.8472;0.8472;0.8472;0.8471;0.85;0.8583;0.85;0.8497;0.941;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8156;0.8313;0.8156;0.8137;0.8611;0.8629;0.8611;0.8609;0.85;0.8505;0.85;0.8489;0.9505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8233;0.8387;0.8233;0.821;0.8333;0.8344;0.8333;0.8327;0.85;0.8505;0.85;0.8489;0.9494;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8187;0.8365;0.8187;0.816;0.8542;0.855;0.8542;0.8542;0.85;0.8505;0.85;0.8489;0.9493;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
MLPClassifier;0.8203;0.84;0.8203;0.8186;0.9097;0.9117;0.9097;0.9094;0.85;0.8505;0.85;0.8489;0.9482;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
MLPClassifier;0.8163;0.8311;0.8163;0.8129;0.8611;0.8626;0.8611;0.8615;0.85;0.8505;0.85;0.8489;0.9488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
KNeighborsClassifier;0.8573;0.8626;0.8573;0.8573;0.8264;0.8278;0.8264;0.8249;0.85;0.8696;0.85;0.8482;0.9518;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8681;0.8719;0.8681;0.8682;0.8542;0.8648;0.8542;0.8519;0.85;0.8696;0.85;0.8482;0.967;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 225};RandomForestClassifier(n_estimators=20, random_state=225)
RandomForestClassifier;0.865;0.8678;0.865;0.865;0.875;0.8771;0.875;0.8741;0.85;0.8696;0.85;0.8482;0.9643;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
RandomForestClassifier;0.8642;0.8668;0.8642;0.8642;0.9028;0.9036;0.9028;0.9027;0.85;0.8699;0.85;0.8481;0.9661;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
KNeighborsClassifier;0.8564;0.8604;0.8564;0.856;0.8472;0.8538;0.8472;0.8463;0.85;0.8599;0.85;0.8473;0.9475;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8472;0.8555;0.8472;0.8468;0.8681;0.8706;0.8681;0.8675;0.85;0.8592;0.85;0.847;0.9516;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8658;0.8694;0.8658;0.8658;0.8611;0.8633;0.8611;0.8613;0.8333;0.8524;0.8333;0.835;0.9666;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 225};RandomForestClassifier(n_estimators=10, random_state=225)
RandomForestClassifier;0.8603;0.8649;0.8603;0.8597;0.9028;0.9048;0.9028;0.9029;0.8333;0.8518;0.8333;0.8346;0.9664;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
RandomForestClassifier;0.8618;0.8655;0.8618;0.8616;0.8958;0.8977;0.8958;0.8962;0.8333;0.859;0.8333;0.8339;0.9636;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 225};RandomForestClassifier(n_estimators=10, random_state=225)
MLPClassifier;0.8202;0.8391;0.8202;0.8181;0.9028;0.9045;0.9028;0.9028;0.8333;0.8348;0.8333;0.8337;0.9489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.814;0.8319;0.814;0.8109;0.8889;0.8887;0.8889;0.8886;0.8333;0.8348;0.8333;0.8337;0.9459;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
MLPClassifier;0.8187;0.8354;0.8187;0.8162;0.8403;0.8419;0.8403;0.8389;0.8333;0.8348;0.8333;0.8337;0.9518;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
MLPClassifier;0.8202;0.8383;0.8202;0.8185;0.875;0.8797;0.875;0.8751;0.8333;0.8348;0.8333;0.8337;0.9496;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.8202;0.8368;0.8202;0.8182;0.875;0.8763;0.875;0.8749;0.8333;0.8348;0.8333;0.8337;0.9481;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.814;0.8326;0.814;0.8118;0.8542;0.8554;0.8542;0.8535;0.8333;0.8348;0.8333;0.8337;0.9495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.8164;0.8334;0.8164;0.8144;0.8403;0.841;0.8403;0.8402;0.8333;0.8348;0.8333;0.8337;0.9511;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.8171;0.833;0.8171;0.8151;0.8681;0.8691;0.8681;0.8673;0.8333;0.8348;0.8333;0.8337;0.9492;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8187;0.8356;0.8187;0.8166;0.8681;0.8703;0.8681;0.868;0.8333;0.8348;0.8333;0.8337;0.9469;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8171;0.8352;0.8171;0.8138;0.8819;0.8838;0.8819;0.8817;0.8333;0.8348;0.8333;0.8337;0.9492;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8202;0.8361;0.8202;0.8181;0.8819;0.8884;0.8819;0.882;0.8333;0.8348;0.8333;0.8337;0.9499;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8226;0.8404;0.8226;0.8207;0.8403;0.8415;0.8403;0.8397;0.8333;0.8348;0.8333;0.8337;0.9489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8248;0.8411;0.8248;0.8228;0.875;0.8758;0.875;0.8752;0.8333;0.8348;0.8333;0.8337;0.9466;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
MLPClassifier;0.8218;0.8378;0.8218;0.8198;0.8819;0.8821;0.8819;0.8818;0.8333;0.8369;0.8333;0.8328;0.949;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.8148;0.833;0.8148;0.812;0.8611;0.8614;0.8611;0.8612;0.8333;0.8369;0.8333;0.8328;0.9476;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
KNeighborsClassifier;0.8349;0.8387;0.8349;0.8346;0.8681;0.8714;0.8681;0.8682;0.8333;0.8341;0.8333;0.8327;0.9491;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8557;0.8597;0.8557;0.8556;0.8542;0.8585;0.8542;0.8545;0.8333;0.8431;0.8333;0.8323;0.9664;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 809};RandomForestClassifier(n_estimators=10, random_state=809)
MLPClassifier;0.8263;0.846;0.8263;0.8241;0.8403;0.8428;0.8403;0.8397;0.8333;0.8333;0.8333;0.8323;0.9516;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.8172;0.8334;0.8172;0.815;0.8889;0.895;0.8889;0.8892;0.8333;0.8333;0.8333;0.8323;0.9481;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
MLPClassifier;0.821;0.8367;0.821;0.8189;0.8819;0.8833;0.8819;0.8818;0.8333;0.8333;0.8333;0.8323;0.9486;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.8202;0.8368;0.8202;0.818;0.8611;0.8656;0.8611;0.8599;0.8333;0.8333;0.8333;0.8323;0.948;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 559, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=559)
KNeighborsClassifier;0.8465;0.8528;0.8465;0.8457;0.8403;0.8437;0.8403;0.8406;0.8333;0.8548;0.8333;0.8322;0.9466;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8549;0.8577;0.8549;0.8547;0.875;0.8754;0.875;0.8745;0.8333;0.8548;0.8333;0.8322;0.9523;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8457;0.8513;0.8457;0.8446;0.8889;0.889;0.8889;0.8887;0.8333;0.8548;0.8333;0.8322;0.9504;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8457;0.8488;0.8457;0.8449;0.9028;0.9043;0.9028;0.9023;0.8333;0.8387;0.8333;0.8317;0.9426;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8456;0.8533;0.8456;0.8445;0.8681;0.8693;0.8681;0.8676;0.8333;0.8447;0.8333;0.8315;0.95;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8503;0.8553;0.8503;0.8503;0.8611;0.8643;0.8611;0.8596;0.8333;0.8383;0.8333;0.831;0.9475;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8619;0.8659;0.8619;0.8619;0.8958;0.8963;0.8958;0.8956;0.8333;0.8612;0.8333;0.8309;0.9653;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 225};RandomForestClassifier(n_estimators=10, random_state=225)
KNeighborsClassifier;0.8572;0.8626;0.8572;0.8569;0.8333;0.8357;0.8333;0.8319;0.8333;0.8371;0.8333;0.8307;0.9506;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8456;0.8519;0.8456;0.8448;0.8333;0.8336;0.8333;0.8319;0.8333;0.8587;0.8333;0.8299;0.9536;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8635;0.8651;0.8635;0.863;0.8958;0.8988;0.8958;0.8959;0.8333;0.8587;0.8333;0.8299;0.9615;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
KNeighborsClassifier;0.8518;0.857;0.8518;0.8512;0.8333;0.8373;0.8333;0.8337;0.8167;0.8344;0.8167;0.8167;0.9518;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8665;0.8691;0.8665;0.8661;0.8403;0.8478;0.8403;0.8404;0.8167;0.8436;0.8167;0.8165;0.9534;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
RandomForestClassifier;0.8565;0.8613;0.8565;0.8562;0.8681;0.8722;0.8681;0.8675;0.8167;0.8436;0.8167;0.8165;0.9638;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 809};RandomForestClassifier(n_estimators=5, random_state=809)
DecisionTreeClassifier;0.865;0.868;0.865;0.8648;0.8681;0.8706;0.8681;0.8675;0.8167;0.8436;0.8167;0.8165;0.9483;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
RandomForestClassifier;0.8641;0.8676;0.8641;0.8638;0.8333;0.8331;0.8333;0.832;0.8167;0.8403;0.8167;0.8158;0.9662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 225};RandomForestClassifier(n_estimators=10, random_state=225)
MLPClassifier;0.8141;0.8309;0.8141;0.8119;0.8611;0.8616;0.8611;0.8612;0.8167;0.8172;0.8167;0.8155;0.9478;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 855, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=855)
MLPClassifier;0.821;0.8388;0.821;0.8193;0.8472;0.8586;0.8472;0.8456;0.8167;0.8172;0.8167;0.8155;0.9511;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 781, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=781)
KNeighborsClassifier;0.8457;0.8529;0.8457;0.8447;0.8681;0.8736;0.8681;0.8671;0.8167;0.8184;0.8167;0.8153;0.9475;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8588;0.8632;0.8588;0.8582;0.8542;0.854;0.8542;0.8536;0.8167;0.822;0.8167;0.8148;0.9421;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8704;0.8732;0.8704;0.87;0.8681;0.8691;0.8681;0.8684;0.8167;0.8448;0.8167;0.8148;0.9683;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 191};RandomForestClassifier(n_estimators=10, random_state=191)
RandomForestClassifier;0.8573;0.8603;0.8573;0.8571;0.8889;0.8907;0.8889;0.8889;0.8167;0.8311;0.8167;0.8148;0.9657;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 225};RandomForestClassifier(n_estimators=20, random_state=225)
KNeighborsClassifier;0.8464;0.8492;0.8464;0.8463;0.875;0.8753;0.875;0.875;0.8167;0.8178;0.8167;0.8148;0.9439;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.868;0.8712;0.868;0.868;0.8403;0.8404;0.8403;0.8401;0.8167;0.829;0.8167;0.8147;0.9623;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
RandomForestClassifier;0.8588;0.8631;0.8588;0.8586;0.9028;0.9053;0.9028;0.9016;0.8167;0.8436;0.8167;0.8141;0.9657;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 809};RandomForestClassifier(n_estimators=10, random_state=809)
RandomForestClassifier;0.8673;0.87;0.8673;0.867;0.8333;0.8373;0.8333;0.834;0.8167;0.8442;0.8167;0.8139;0.9666;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 225};RandomForestClassifier(n_estimators=20, random_state=225)
RandomForestClassifier;0.8673;0.8717;0.8673;0.8669;0.875;0.8749;0.875;0.8747;0.8167;0.8442;0.8167;0.8139;0.966;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 225};RandomForestClassifier(n_estimators=20, random_state=225)
KNeighborsClassifier;0.8387;0.8451;0.8387;0.8381;0.875;0.8778;0.875;0.8751;0.8167;0.8246;0.8167;0.813;0.945;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8071;0.8318;0.8071;0.8058;0.875;0.8782;0.875;0.8749;0.8;0.8128;0.8;0.8015;0.906;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8063;0.8298;0.8063;0.8056;0.8403;0.8441;0.8403;0.8408;0.8;0.8128;0.8;0.8015;0.9073;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
KNeighborsClassifier;0.8519;0.8556;0.8519;0.8518;0.8958;0.8985;0.8958;0.8945;0.8;0.8258;0.8;0.8012;0.9481;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
DecisionTreeClassifier;0.8603;0.8633;0.8603;0.8602;0.8542;0.8546;0.8542;0.8531;0.8;0.8226;0.8;0.801;0.9419;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=359)
RandomForestClassifier;0.8634;0.8663;0.8634;0.8634;0.8542;0.8577;0.8542;0.8548;0.8;0.8125;0.8;0.8005;0.9645;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 225};RandomForestClassifier(n_estimators=20, random_state=225)
SVC;0.8033;0.8268;0.8033;0.8018;0.9236;0.9239;0.9236;0.9231;0.8;0.8057;0.8;0.8003;0.8989;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8133;0.835;0.8133;0.8122;0.8542;0.8597;0.8542;0.8529;0.8;0.8057;0.8;0.8003;0.9055;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
SVC;0.8048;0.8303;0.8048;0.803;0.8403;0.8412;0.8403;0.8395;0.8;0.8057;0.8;0.8003;0.9053;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
SVC;0.8025;0.8276;0.8025;0.8016;0.8333;0.8361;0.8333;0.834;0.8;0.8057;0.8;0.8003;0.9049;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.811;0.8347;0.811;0.8105;0.8264;0.8322;0.8264;0.8259;0.8;0.8057;0.8;0.8003;0.9069;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
SVC;0.8133;0.8361;0.8133;0.8125;0.8125;0.8211;0.8125;0.8126;0.8;0.8057;0.8;0.8003;0.9093;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8141;0.8377;0.8141;0.8129;0.75;0.7556;0.75;0.7498;0.8;0.8057;0.8;0.8003;0.9082;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8017;0.8276;0.8017;0.8008;0.8403;0.8477;0.8403;0.8396;0.8;0.8057;0.8;0.8003;0.9043;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8064;0.8308;0.8064;0.8048;0.8819;0.8827;0.8819;0.8811;0.8;0.8057;0.8;0.8003;0.9057;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
SVC;0.8094;0.8326;0.8094;0.8079;0.8611;0.8693;0.8611;0.8621;0.8;0.8057;0.8;0.8003;0.9095;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
SVC;0.804;0.8275;0.804;0.8032;0.8403;0.8444;0.8403;0.84;0.8;0.8057;0.8;0.8003;0.9058;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
SVC;0.8078;0.8301;0.8078;0.8068;0.875;0.8817;0.875;0.8735;0.8;0.8057;0.8;0.8003;0.9036;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
SVC;0.804;0.8296;0.804;0.8026;0.8264;0.829;0.8264;0.8247;0.8;0.8057;0.8;0.8003;0.9059;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
SVC;0.8141;0.8349;0.8141;0.8126;0.8403;0.8456;0.8403;0.8395;0.8;0.8057;0.8;0.8003;0.9078;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
SVC;0.8024;0.8276;0.8024;0.8012;0.8472;0.8486;0.8472;0.8467;0.8;0.8057;0.8;0.8003;0.9038;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
DecisionTreeClassifier;0.8689;0.8702;0.8689;0.8683;0.8611;0.8624;0.8611;0.8613;0.8;0.8178;0.8;0.8;0.9483;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
KNeighborsClassifier;0.8372;0.8428;0.8372;0.8366;0.8056;0.8087;0.8056;0.803;0.8;0.8056;0.8;0.799;0.9497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8519;0.8574;0.8519;0.8516;0.8403;0.8401;0.8403;0.8401;0.8;0.8019;0.8;0.7985;0.9439;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8442;0.8488;0.8442;0.8439;0.8403;0.845;0.8403;0.8394;0.8;0.8052;0.8;0.7985;0.9401;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8596;0.8628;0.8596;0.8594;0.8472;0.8569;0.8472;0.8468;0.8;0.8065;0.8;0.7985;0.9676;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 809};RandomForestClassifier(n_estimators=10, random_state=809)
KNeighborsClassifier;0.8341;0.8392;0.8341;0.8338;0.8403;0.8611;0.8403;0.8396;0.8;0.8052;0.8;0.7985;0.9464;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8649;0.8686;0.8649;0.8649;0.8611;0.8643;0.8611;0.8598;0.8;0.8309;0.8;0.7982;0.9646;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 809};RandomForestClassifier(n_estimators=10, random_state=809)
RandomForestClassifier;0.8765;0.8788;0.8765;0.8762;0.875;0.8755;0.875;0.8741;0.8;0.8144;0.8;0.7981;0.9657;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 191};RandomForestClassifier(n_estimators=10, random_state=191)
RandomForestClassifier;0.8735;0.8761;0.8735;0.8734;0.8542;0.8541;0.8542;0.8541;0.8;0.8168;0.8;0.7975;0.9645;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 809};RandomForestClassifier(n_estimators=20, random_state=809)
KNeighborsClassifier;0.8441;0.8486;0.8441;0.8436;0.8542;0.8553;0.8542;0.854;0.8;0.8067;0.8;0.7974;0.9496;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
DecisionTreeClassifier;0.8634;0.8671;0.8634;0.8633;0.7986;0.799;0.7986;0.7987;0.8;0.8198;0.8;0.7969;0.9516;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
DecisionTreeClassifier;0.8619;0.8644;0.8619;0.8617;0.8611;0.8618;0.8611;0.861;0.8;0.8073;0.8;0.7965;0.9491;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8603;0.8623;0.8603;0.8598;0.8472;0.852;0.8472;0.8478;0.8;0.8186;0.8;0.7942;0.9456;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=627)
SVC;0.8125;0.8354;0.8125;0.8115;0.8611;0.8613;0.8611;0.8586;0.7833;0.7986;0.7833;0.7854;0.9069;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
KNeighborsClassifier;0.8557;0.8575;0.8557;0.8553;0.8472;0.8489;0.8472;0.8477;0.7833;0.8006;0.7833;0.7846;0.9508;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
DecisionTreeClassifier;0.8641;0.8665;0.8641;0.8636;0.9028;0.9036;0.9028;0.9024;0.7833;0.7999;0.7833;0.7842;0.953;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
SVC;0.8064;0.8302;0.8064;0.8048;0.8681;0.8762;0.8681;0.868;0.7833;0.7905;0.7833;0.7838;0.9036;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
SVC;0.8063;0.8298;0.8063;0.8051;0.8889;0.8907;0.8889;0.8885;0.7833;0.7905;0.7833;0.7838;0.9048;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8102;0.8336;0.8102;0.8097;0.8681;0.8731;0.8681;0.8678;0.7833;0.7905;0.7833;0.7838;0.9065;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8102;0.8351;0.8102;0.8094;0.8542;0.8594;0.8542;0.8542;0.7833;0.7905;0.7833;0.7838;0.9084;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
SVC;0.8079;0.8304;0.8079;0.8069;0.8472;0.8551;0.8472;0.8479;0.7833;0.7905;0.7833;0.7838;0.9041;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
SVC;0.8125;0.8347;0.8125;0.8112;0.8472;0.8527;0.8472;0.8477;0.7833;0.7857;0.7833;0.7835;0.9069;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8056;0.8314;0.8056;0.8045;0.8333;0.8384;0.8333;0.8349;0.7833;0.7857;0.7833;0.7835;0.9051;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
RandomForestClassifier;0.8657;0.8685;0.8657;0.8651;0.875;0.8756;0.875;0.8744;0.7833;0.8152;0.7833;0.7834;0.9662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 191};RandomForestClassifier(n_estimators=20, random_state=191)
DecisionTreeClassifier;0.858;0.8601;0.858;0.8576;0.8403;0.8417;0.8403;0.8403;0.7833;0.8152;0.7833;0.7834;0.9487;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
RandomForestClassifier;0.8681;0.8705;0.8681;0.8682;0.8333;0.8429;0.8333;0.8329;0.7833;0.8152;0.7833;0.7834;0.9654;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 809};RandomForestClassifier(n_estimators=20, random_state=809)
DecisionTreeClassifier;0.8665;0.8693;0.8665;0.8664;0.8542;0.8569;0.8542;0.8539;0.7833;0.8011;0.7833;0.7833;0.9478;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8472;0.8491;0.8472;0.8468;0.8542;0.8573;0.8542;0.8549;0.7833;0.7992;0.7833;0.7833;0.9434;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=359)
DecisionTreeClassifier;0.8627;0.8649;0.8627;0.8623;0.8611;0.8619;0.8611;0.8604;0.7833;0.7913;0.7833;0.7833;0.9479;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=359)
SVC;0.8064;0.83;0.8064;0.8056;0.8681;0.8754;0.8681;0.8686;0.7833;0.7873;0.7833;0.7831;0.905;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
RandomForestClassifier;0.8634;0.8657;0.8634;0.8636;0.8264;0.8327;0.8264;0.8251;0.7833;0.792;0.7833;0.783;0.968;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 191};RandomForestClassifier(n_estimators=10, random_state=191)
KNeighborsClassifier;0.8419;0.8504;0.8419;0.8416;0.8403;0.8474;0.8403;0.8397;0.7833;0.7863;0.7833;0.7827;0.9496;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8704;0.8731;0.8704;0.87;0.8264;0.8282;0.8264;0.826;0.7833;0.8032;0.7833;0.7823;0.9654;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 809};RandomForestClassifier(n_estimators=10, random_state=809)
DecisionTreeClassifier;0.8611;0.8634;0.8611;0.8608;0.8611;0.8636;0.8611;0.8605;0.7833;0.7948;0.7833;0.7823;0.9559;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=359)
KNeighborsClassifier;0.8364;0.8409;0.8364;0.8356;0.8403;0.8553;0.8403;0.8396;0.7833;0.7912;0.7833;0.7816;0.9461;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8604;0.8625;0.8604;0.8603;0.8889;0.89;0.8889;0.8886;0.7833;0.7935;0.7833;0.7814;0.9629;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 225};RandomForestClassifier(n_estimators=10, random_state=225)
DecisionTreeClassifier;0.8657;0.8674;0.8657;0.8654;0.7847;0.7904;0.7847;0.7828;0.7833;0.7956;0.7833;0.781;0.9473;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=359)
DecisionTreeClassifier;0.8596;0.864;0.8596;0.8594;0.8889;0.8891;0.8889;0.8887;0.7833;0.8072;0.7833;0.7808;0.9489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
RandomForestClassifier;0.8542;0.8574;0.8542;0.8537;0.9028;0.906;0.9028;0.903;0.7833;0.7922;0.7833;0.7807;0.9586;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 809};RandomForestClassifier(n_estimators=20, random_state=809)
RandomForestClassifier;0.8619;0.8654;0.8619;0.8621;0.8542;0.8544;0.8542;0.8542;0.7833;0.7871;0.7833;0.7807;0.9676;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 191};RandomForestClassifier(n_estimators=5, random_state=191)
KNeighborsClassifier;0.8565;0.863;0.8565;0.8565;0.7778;0.807;0.7778;0.7813;0.7833;0.7929;0.7833;0.7805;0.943;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8495;0.8531;0.8495;0.849;0.9028;0.9027;0.9028;0.9025;0.7667;0.7698;0.7667;0.7672;0.9458;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.8087;0.8363;0.8087;0.8075;0.8194;0.8231;0.8194;0.8181;0.7667;0.7702;0.7667;0.7671;0.906;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
SVC;0.811;0.8338;0.811;0.8099;0.875;0.881;0.875;0.8746;0.7667;0.7702;0.7667;0.7671;0.9073;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 225};SVC(C=10, probability=True, random_state=225)
SVC;0.807;0.8309;0.807;0.8062;0.8403;0.8468;0.8403;0.8403;0.7667;0.7702;0.7667;0.7671;0.9069;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 90};SVC(C=10, probability=True, random_state=90)
SVC;0.8078;0.8318;0.8078;0.8063;0.8403;0.8538;0.8403;0.8414;0.7667;0.7687;0.7667;0.7668;0.9026;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 478};SVC(C=10, probability=True, random_state=478)
DecisionTreeClassifier;0.8704;0.8734;0.8704;0.87;0.7639;0.7648;0.7639;0.7641;0.7667;0.7761;0.7667;0.7667;0.9513;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=359)
DecisionTreeClassifier;0.8511;0.8528;0.8511;0.8505;0.9097;0.9136;0.9097;0.91;0.7667;0.7709;0.7667;0.7664;0.9465;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8534;0.8577;0.8534;0.8529;0.8472;0.8532;0.8472;0.847;0.7667;0.7731;0.7667;0.7663;0.9471;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=341)
DecisionTreeClassifier;0.8526;0.8547;0.8526;0.8526;0.8333;0.8332;0.8333;0.8331;0.7667;0.7698;0.7667;0.766;0.9468;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8611;0.8653;0.8611;0.8607;0.8681;0.8705;0.8681;0.868;0.7667;0.7868;0.7667;0.7657;0.9505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.858;0.8599;0.858;0.8577;0.9097;0.9107;0.9097;0.9089;0.7667;0.7783;0.7667;0.7655;0.9486;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=359)
DecisionTreeClassifier;0.8464;0.8489;0.8464;0.8459;0.8611;0.8615;0.8611;0.8611;0.7667;0.7876;0.7667;0.7655;0.944;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
RandomForestClassifier;0.875;0.8763;0.875;0.8748;0.8472;0.8504;0.8472;0.8476;0.7667;0.7777;0.7667;0.7652;0.9649;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 809};RandomForestClassifier(n_estimators=20, random_state=809)
DecisionTreeClassifier;0.848;0.8519;0.848;0.8478;0.8958;0.8962;0.8958;0.8958;0.7667;0.7738;0.7667;0.7645;0.9456;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=359)
DecisionTreeClassifier;0.8612;0.8642;0.8612;0.861;0.8472;0.8474;0.8472;0.8471;0.7667;0.7695;0.7667;0.7583;0.9479;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=627)
DecisionTreeClassifier;0.8464;0.8498;0.8464;0.8464;0.875;0.8777;0.875;0.8748;0.75;0.7625;0.75;0.7493;0.9452;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8596;0.8617;0.8596;0.8594;0.8333;0.8419;0.8333;0.8314;0.75;0.7625;0.75;0.7493;0.9462;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
DecisionTreeClassifier;0.8549;0.8583;0.8549;0.8549;0.8958;0.8972;0.8958;0.8957;0.75;0.7625;0.75;0.7493;0.943;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
DecisionTreeClassifier;0.8495;0.8528;0.8495;0.8494;0.875;0.8756;0.875;0.8743;0.75;0.7562;0.75;0.7491;0.9451;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 627};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=627)
DecisionTreeClassifier;0.8534;0.8572;0.8534;0.8531;0.8819;0.8856;0.8819;0.8821;0.75;0.7513;0.75;0.7478;0.9455;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=359)
DecisionTreeClassifier;0.8573;0.8606;0.8573;0.8568;0.8264;0.8264;0.8264;0.8262;0.75;0.76;0.75;0.7471;0.9489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 359};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=359)
LogisticRegression;0.7168;0.7315;0.7168;0.7158;0.7292;0.76;0.7292;0.7258;0.6833;0.6872;0.6833;0.6833;0.8305;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.723;0.7368;0.723;0.7214;0.6944;0.6976;0.6944;0.6891;0.6667;0.6723;0.6667;0.6668;0.8332;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.716;0.7255;0.716;0.7136;0.7292;0.7362;0.7292;0.7287;0.6667;0.6723;0.6667;0.6668;0.8308;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7137;0.731;0.7137;0.7108;0.7153;0.7203;0.7153;0.7141;0.6667;0.6723;0.6667;0.6668;0.8349;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7261;0.7371;0.7261;0.7228;0.6806;0.7004;0.6806;0.6734;0.6667;0.6723;0.6667;0.6668;0.8357;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7323;0.7447;0.7323;0.7312;0.6736;0.685;0.6736;0.6698;0.6667;0.6713;0.6667;0.6659;0.8344;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7276;0.7447;0.7276;0.7271;0.7083;0.7343;0.7083;0.7068;0.6667;0.6713;0.6667;0.6659;0.8357;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7253;0.739;0.7253;0.7232;0.6806;0.6966;0.6806;0.6781;0.6667;0.6757;0.6667;0.6643;0.8318;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7122;0.7294;0.7122;0.7093;0.7083;0.7153;0.7083;0.7025;0.6667;0.6719;0.6667;0.6643;0.8311;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7138;0.7273;0.7138;0.7115;0.7639;0.7714;0.7639;0.7589;0.65;0.6591;0.65;0.6508;0.8316;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7261;0.7386;0.7261;0.7235;0.6528;0.6595;0.6528;0.6436;0.65;0.6556;0.65;0.6501;0.8352;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7099;0.7208;0.7099;0.7069;0.7569;0.7613;0.7569;0.7577;0.65;0.6562;0.65;0.6495;0.8256;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7222;0.7371;0.7222;0.7207;0.7153;0.7341;0.7153;0.709;0.65;0.6562;0.65;0.6495;0.8351;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7153;0.7256;0.7153;0.7135;0.7083;0.7189;0.7083;0.7032;0.65;0.6583;0.65;0.6495;0.8324;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7152;0.7286;0.7152;0.7123;0.7361;0.7459;0.7361;0.7348;0.65;0.6562;0.65;0.6495;0.8326;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7068;0.7222;0.7068;0.7045;0.7292;0.7378;0.7292;0.73;0.65;0.6562;0.65;0.6495;0.8335;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7153;0.7272;0.7153;0.7128;0.75;0.7519;0.75;0.7489;0.65;0.6562;0.65;0.6495;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6998;0.7164;0.6998;0.698;0.7917;0.802;0.7917;0.7892;0.65;0.6562;0.65;0.6495;0.8271;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7161;0.7298;0.7161;0.7137;0.6875;0.6835;0.6875;0.6824;0.65;0.6562;0.65;0.6495;0.8299;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7144;0.7271;0.7144;0.7111;0.7153;0.7269;0.7153;0.7173;0.65;0.6562;0.65;0.6495;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7175;0.7305;0.7175;0.7156;0.7153;0.7251;0.7153;0.713;0.65;0.6562;0.65;0.6495;0.8338;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7099;0.7224;0.7099;0.707;0.7292;0.7291;0.7292;0.7266;0.65;0.6528;0.65;0.6483;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7144;0.7281;0.7144;0.7128;0.6944;0.7065;0.6944;0.6931;0.65;0.6523;0.65;0.6462;0.8324;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7114;0.7208;0.7114;0.7077;0.7639;0.7859;0.7639;0.7635;0.65;0.6523;0.65;0.6462;0.8313;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7106;0.722;0.7106;0.7076;0.7222;0.7241;0.7222;0.7227;0.6333;0.6343;0.6333;0.6308;0.8307;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7044;0.7186;0.7044;0.7024;0.75;0.7613;0.75;0.7476;0.6333;0.6343;0.6333;0.6308;0.8281;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7053;0.7191;0.7053;0.7033;0.7569;0.7615;0.7569;0.7545;0.6333;0.6343;0.6333;0.6308;0.8276;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
LogisticRegression;0.7185;0.7319;0.7185;0.7165;0.7292;0.7313;0.7292;0.7285;0.6333;0.6343;0.6333;0.6308;0.8304;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.7099;0.7287;0.7099;0.7075;0.6875;0.7082;0.6875;0.6879;0.6333;0.6368;0.6333;0.6305;0.8335;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 648, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=648)"
LogisticRegression;0.7138;0.7298;0.7138;0.7124;0.7361;0.747;0.7361;0.7347;0.6167;0.6205;0.6167;0.6139;0.8302;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 452, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=452)"
