Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9178;0.9216;0.9178;0.9179;0.8841;0.8852;0.8841;0.8843;0.9;0.9069;0.9;0.9006;0.9858;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
DecisionTreeClassifier;0.8631;0.8665;0.8631;0.863;0.8696;0.8748;0.8696;0.8691;0.9;0.9036;0.9;0.8984;0.8972;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
RandomForestClassifier;0.918;0.9253;0.918;0.9182;0.913;0.9163;0.913;0.9135;0.8833;0.8918;0.8833;0.8847;0.9836;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
RandomForestClassifier;0.9082;0.9133;0.9082;0.9082;0.9275;0.9293;0.9275;0.9281;0.8833;0.8875;0.8833;0.884;0.979;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
RandomForestClassifier;0.9034;0.909;0.9034;0.903;0.8841;0.8969;0.8841;0.8859;0.8833;0.8875;0.8833;0.884;0.9818;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
RandomForestClassifier;0.9243;0.9304;0.9243;0.9252;0.8986;0.899;0.8986;0.8985;0.8833;0.8875;0.8833;0.884;0.9865;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
RandomForestClassifier;0.9098;0.9134;0.9098;0.9098;0.8986;0.8993;0.8986;0.8978;0.8833;0.8862;0.8833;0.8836;0.9817;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
DecisionTreeClassifier;0.8663;0.869;0.8663;0.8666;0.8696;0.8864;0.8696;0.8724;0.8833;0.8844;0.8833;0.8814;0.8998;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
KNeighborsClassifier;0.8358;0.8437;0.8358;0.8363;0.971;0.9722;0.971;0.9707;0.8667;0.8816;0.8667;0.8696;0.94;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8439;0.8527;0.8439;0.8446;0.8696;0.8712;0.8696;0.8693;0.8667;0.8775;0.8667;0.8687;0.9429;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9179;0.9204;0.9179;0.9173;0.913;0.9136;0.913;0.913;0.8667;0.8716;0.8667;0.8681;0.9837;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
RandomForestClassifier;0.9243;0.9279;0.9243;0.9244;0.913;0.9163;0.913;0.9135;0.8667;0.8799;0.8667;0.868;0.9849;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
RandomForestClassifier;0.9099;0.9167;0.9099;0.91;0.8986;0.906;0.8986;0.8982;0.8667;0.8799;0.8667;0.868;0.9835;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
RandomForestClassifier;0.9259;0.9301;0.9259;0.9254;0.8551;0.8617;0.8551;0.8566;0.8667;0.8799;0.8667;0.868;0.9811;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
RandomForestClassifier;0.905;0.9093;0.905;0.9048;0.9275;0.9287;0.9275;0.9278;0.8667;0.8739;0.8667;0.8679;0.9802;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
DecisionTreeClassifier;0.8761;0.8814;0.8761;0.8744;0.8986;0.908;0.8986;0.8997;0.8667;0.8746;0.8667;0.8674;0.9068;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
KNeighborsClassifier;0.8277;0.836;0.8277;0.8274;0.8406;0.8484;0.8406;0.842;0.8667;0.8709;0.8667;0.8673;0.9466;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8647;0.8685;0.8647;0.8645;0.8551;0.8554;0.8551;0.8521;0.8667;0.8792;0.8667;0.8672;0.8986;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=919)
RandomForestClassifier;0.9196;0.9236;0.9196;0.9202;0.8406;0.8427;0.8406;0.8381;0.8667;0.8681;0.8667;0.867;0.9837;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
RandomForestClassifier;0.8953;0.8985;0.8953;0.8951;0.913;0.9224;0.913;0.9145;0.8667;0.8681;0.8667;0.867;0.9767;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
RandomForestClassifier;0.9019;0.9085;0.9019;0.902;0.971;0.9716;0.971;0.971;0.8667;0.8681;0.8667;0.867;0.9804;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
KNeighborsClassifier;0.839;0.8457;0.839;0.8377;0.8841;0.8879;0.8841;0.8852;0.8667;0.8692;0.8667;0.8669;0.9448;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8519;0.8622;0.8519;0.8521;0.8841;0.8842;0.8841;0.8833;0.8667;0.8692;0.8667;0.8669;0.9524;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8743;0.8789;0.8743;0.8737;0.8406;0.841;0.8406;0.8405;0.8667;0.8651;0.8667;0.8648;0.9057;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8568;0.8598;0.8568;0.8556;0.8261;0.84;0.8261;0.8294;0.8667;0.8704;0.8667;0.8644;0.8925;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
DecisionTreeClassifier;0.8808;0.8844;0.8808;0.8806;0.8261;0.8254;0.8261;0.8247;0.85;0.8585;0.85;0.852;0.9108;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
KNeighborsClassifier;0.8389;0.8458;0.8389;0.8394;0.913;0.9197;0.913;0.9137;0.85;0.8611;0.85;0.8517;0.9418;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8294;0.8396;0.8294;0.8305;0.9275;0.9281;0.9275;0.9275;0.85;0.8611;0.85;0.8517;0.9464;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8406;0.8482;0.8406;0.8412;0.8986;0.908;0.8986;0.8997;0.85;0.8611;0.85;0.8517;0.9502;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9081;0.9092;0.9081;0.9081;0.9275;0.9296;0.9275;0.9274;0.85;0.862;0.85;0.8516;0.9802;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
RandomForestClassifier;0.9212;0.9244;0.9212;0.9212;0.8986;0.9049;0.8986;0.8999;0.85;0.8557;0.85;0.8514;0.984;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
RandomForestClassifier;0.9131;0.92;0.9131;0.9134;0.8986;0.9018;0.8986;0.899;0.85;0.8557;0.85;0.8514;0.98;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 464};RandomForestClassifier(n_estimators=10, random_state=464)
KNeighborsClassifier;0.8407;0.8496;0.8407;0.841;0.913;0.9135;0.913;0.913;0.85;0.8545;0.85;0.8511;0.9491;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.7875;0.809;0.7875;0.7894;0.8986;0.9056;0.8986;0.9002;0.85;0.8541;0.85;0.851;0.9074;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
SVC;0.7712;0.7936;0.7712;0.7744;0.8986;0.9222;0.8986;0.901;0.85;0.8541;0.85;0.851;0.9082;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
MLPClassifier;0.8423;0.8464;0.8423;0.8423;0.9275;0.928;0.9275;0.9275;0.85;0.8541;0.85;0.851;0.9522;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
SVC;0.7713;0.7948;0.7713;0.7735;0.9565;0.9615;0.9565;0.957;0.85;0.8541;0.85;0.851;0.9052;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
MLPClassifier;0.8293;0.837;0.8293;0.8295;0.8261;0.8372;0.8261;0.8279;0.85;0.8541;0.85;0.851;0.9526;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
KNeighborsClassifier;0.8487;0.859;0.8487;0.8499;0.8551;0.8629;0.8551;0.8565;0.85;0.8564;0.85;0.8508;0.9489;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8357;0.8418;0.8357;0.8358;0.913;0.9224;0.913;0.9145;0.85;0.8523;0.85;0.8508;0.95;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.839;0.8458;0.839;0.8394;0.8841;0.9056;0.8841;0.8855;0.85;0.8564;0.85;0.8508;0.9459;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8344;0.8416;0.8344;0.835;0.8551;0.8606;0.8551;0.8568;0.85;0.8599;0.85;0.8507;0.9473;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8422;0.8485;0.8422;0.8425;0.8841;0.8911;0.8841;0.8854;0.85;0.8579;0.85;0.8507;0.9479;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9163;0.9204;0.9163;0.9166;0.8696;0.8814;0.8696;0.8716;0.85;0.8634;0.85;0.8505;0.9819;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
DecisionTreeClassifier;0.8728;0.8767;0.8728;0.8725;0.7971;0.8413;0.7971;0.7978;0.85;0.8625;0.85;0.8505;0.9046;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
KNeighborsClassifier;0.8374;0.8434;0.8374;0.8377;0.9275;0.9281;0.9275;0.9275;0.85;0.8514;0.85;0.8504;0.9478;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8567;0.8641;0.8567;0.8571;0.8696;0.8767;0.8696;0.8693;0.85;0.8514;0.85;0.8504;0.9497;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8502;0.8555;0.8502;0.8507;0.8986;0.908;0.8986;0.8997;0.85;0.8514;0.85;0.8504;0.9507;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.86;0.8682;0.86;0.8606;0.8551;0.8558;0.8551;0.8543;0.85;0.8505;0.85;0.8499;0.9543;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.921;0.9258;0.921;0.9211;0.8986;0.9003;0.8986;0.8991;0.85;0.8506;0.85;0.8499;0.9819;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
MLPClassifier;0.8292;0.8333;0.8292;0.8282;0.8841;0.8849;0.8841;0.8836;0.85;0.8519;0.85;0.8498;0.9552;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
DecisionTreeClassifier;0.8486;0.8529;0.8486;0.8484;0.8986;0.9021;0.8986;0.8968;0.85;0.849;0.85;0.8491;0.8863;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8552;0.8601;0.8552;0.8552;0.8841;0.8859;0.8841;0.8832;0.85;0.8492;0.85;0.8485;0.8917;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
RandomForestClassifier;0.9034;0.9105;0.9034;0.9035;0.942;0.9464;0.942;0.9422;0.85;0.849;0.85;0.8481;0.9818;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
DecisionTreeClassifier;0.8857;0.8915;0.8857;0.8858;0.8116;0.8172;0.8116;0.8125;0.8333;0.846;0.8333;0.8355;0.9141;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
KNeighborsClassifier;0.8422;0.8518;0.8422;0.8426;0.913;0.9138;0.913;0.9123;0.8333;0.8489;0.8333;0.8352;0.9454;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9098;0.9126;0.9098;0.9096;0.8841;0.8833;0.8841;0.8834;0.8333;0.8409;0.8333;0.8349;0.9806;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
SVC;0.7762;0.7968;0.7762;0.7764;0.8696;0.8952;0.8696;0.8724;0.8333;0.8409;0.8333;0.8349;0.9056;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
KNeighborsClassifier;0.8583;0.866;0.8583;0.8587;0.8406;0.8462;0.8406;0.8423;0.8333;0.8391;0.8333;0.8348;0.9557;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.834;0.8437;0.834;0.8339;0.8841;0.8856;0.8841;0.8828;0.8333;0.8444;0.8333;0.8345;0.9453;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8391;0.848;0.8391;0.8398;0.8551;0.8593;0.8551;0.8561;0.8333;0.8426;0.8333;0.8341;0.9487;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.7761;0.8022;0.7761;0.778;0.8986;0.9075;0.8986;0.8959;0.8333;0.8355;0.8333;0.8341;0.9109;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
SVC;0.7794;0.8023;0.7794;0.7821;0.8696;0.88;0.8696;0.871;0.8333;0.8355;0.8333;0.8341;0.9119;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
SVC;0.7794;0.8056;0.7794;0.7813;0.8406;0.8423;0.8406;0.8412;0.8333;0.8355;0.8333;0.8341;0.9146;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
SVC;0.7794;0.8045;0.7794;0.7825;0.9275;0.9405;0.9275;0.9282;0.8333;0.8355;0.8333;0.8341;0.9094;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
SVC;0.7906;0.8164;0.7906;0.7921;0.8841;0.8862;0.8841;0.8839;0.8333;0.8355;0.8333;0.8341;0.9122;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
SVC;0.7972;0.8195;0.7972;0.8;0.8551;0.8692;0.8551;0.8553;0.8333;0.8355;0.8333;0.8341;0.9144;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
SVC;0.7843;0.8069;0.7843;0.7858;0.8841;0.8852;0.8841;0.8843;0.8333;0.8355;0.8333;0.8341;0.9112;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
SVC;0.7891;0.8068;0.7891;0.7901;0.8261;0.8306;0.8261;0.8264;0.8333;0.8355;0.8333;0.8341;0.9159;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
SVC;0.7891;0.8194;0.7891;0.7919;0.8116;0.8278;0.8116;0.8153;0.8333;0.8355;0.8333;0.8341;0.9134;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
SVC;0.7874;0.8109;0.7874;0.7891;0.8406;0.8466;0.8406;0.8406;0.8333;0.8355;0.8333;0.8341;0.91;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
SVC;0.789;0.8148;0.789;0.7916;0.8261;0.8607;0.8261;0.8305;0.8333;0.8355;0.8333;0.8341;0.9098;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
SVC;0.789;0.8157;0.789;0.7915;0.8986;0.9006;0.8986;0.8984;0.8333;0.8355;0.8333;0.8341;0.9066;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
SVC;0.7843;0.8133;0.7843;0.786;0.913;0.9127;0.913;0.912;0.8333;0.8355;0.8333;0.8341;0.9116;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
DecisionTreeClassifier;0.8969;0.9025;0.8969;0.8965;0.7826;0.7826;0.7826;0.7775;0.8333;0.8426;0.8333;0.8341;0.9225;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
KNeighborsClassifier;0.8566;0.865;0.8566;0.8574;0.8261;0.8301;0.8261;0.8257;0.8333;0.8405;0.8333;0.8338;0.9469;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8214;0.8275;0.8214;0.8212;0.942;0.9456;0.942;0.9416;0.8333;0.8347;0.8333;0.8337;0.9542;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
KNeighborsClassifier;0.8487;0.8603;0.8487;0.8495;0.8841;0.8859;0.8841;0.8832;0.8333;0.8348;0.8333;0.8337;0.9492;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8051;0.8137;0.8051;0.8042;0.971;0.9716;0.971;0.971;0.8333;0.8347;0.8333;0.8337;0.9459;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
DecisionTreeClassifier;0.8664;0.8733;0.8664;0.8662;0.8841;0.9063;0.8841;0.885;0.8333;0.8424;0.8333;0.8336;0.8998;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8664;0.8744;0.8664;0.8653;0.8986;0.9003;0.8986;0.8991;0.8333;0.836;0.8333;0.8335;0.8998;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
DecisionTreeClassifier;0.8776;0.8798;0.8776;0.8775;0.913;0.9127;0.913;0.912;0.8333;0.836;0.8333;0.8335;0.908;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
MLPClassifier;0.8342;0.8441;0.8342;0.8337;0.8696;0.8701;0.8696;0.8695;0.8333;0.8331;0.8333;0.8329;0.952;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.8212;0.8272;0.8212;0.8215;0.913;0.9135;0.913;0.913;0.8333;0.833;0.8333;0.8328;0.9496;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.818;0.8239;0.818;0.8174;0.8841;0.8904;0.8841;0.881;0.8333;0.833;0.8333;0.8328;0.9532;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
DecisionTreeClassifier;0.8825;0.8855;0.8825;0.8815;0.8841;0.8874;0.8841;0.8838;0.8333;0.8341;0.8333;0.8327;0.9116;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8824;0.8892;0.8824;0.8824;0.8551;0.8611;0.8551;0.8522;0.8333;0.8322;0.8333;0.8324;0.912;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
RandomForestClassifier;0.9082;0.9127;0.9082;0.9087;0.8986;0.8996;0.8986;0.8988;0.8333;0.8322;0.8333;0.8324;0.9789;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
DecisionTreeClassifier;0.8888;0.8941;0.8888;0.8888;0.8116;0.8299;0.8116;0.8145;0.8333;0.8314;0.8333;0.832;0.9168;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8632;0.8707;0.8632;0.8623;0.913;0.913;0.913;0.913;0.8333;0.8454;0.8333;0.8318;0.8976;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
MLPClassifier;0.8228;0.8265;0.8228;0.8227;0.8696;0.8787;0.8696;0.8656;0.8333;0.8323;0.8333;0.8314;0.9483;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.8325;0.8387;0.8325;0.8332;0.8696;0.8767;0.8696;0.8693;0.8167;0.8239;0.8167;0.8189;0.9557;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
RandomForestClassifier;0.9146;0.9193;0.9146;0.9152;0.8986;0.908;0.8986;0.8997;0.8167;0.826;0.8167;0.8187;0.9839;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 956};RandomForestClassifier(n_estimators=20, random_state=956)
KNeighborsClassifier;0.8245;0.8345;0.8245;0.8254;0.8986;0.9022;0.8986;0.8983;0.8167;0.8285;0.8167;0.8184;0.9465;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8438;0.8502;0.8438;0.8443;0.8551;0.8556;0.8551;0.8535;0.8167;0.8243;0.8167;0.8182;0.9533;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.7955;0.8178;0.7955;0.7974;0.8406;0.8491;0.8406;0.8413;0.8167;0.8214;0.8167;0.8181;0.919;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
MLPClassifier;0.8308;0.8367;0.8308;0.8312;0.8841;0.8954;0.8841;0.8837;0.8167;0.8214;0.8167;0.8181;0.9518;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
MLPClassifier;0.823;0.8259;0.823;0.8225;0.8696;0.8754;0.8696;0.8713;0.8167;0.8214;0.8167;0.8181;0.9551;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.8486;0.8521;0.8486;0.8471;0.7971;0.8055;0.7971;0.7959;0.8167;0.8214;0.8167;0.8181;0.9516;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
KNeighborsClassifier;0.8518;0.8606;0.8518;0.8524;0.9275;0.931;0.9275;0.9281;0.8167;0.8189;0.8167;0.8174;0.9525;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8309;0.8406;0.8309;0.8314;0.8406;0.8436;0.8406;0.841;0.8167;0.8189;0.8167;0.8174;0.9495;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.781;0.8118;0.781;0.7816;0.8551;0.8568;0.8551;0.8557;0.8167;0.8201;0.8167;0.8173;0.9116;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
DecisionTreeClassifier;0.8582;0.8672;0.8582;0.8593;0.8261;0.8277;0.8261;0.8267;0.8167;0.8201;0.8167;0.8173;0.894;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
SVC;0.7779;0.802;0.7779;0.7814;0.8696;0.8689;0.8696;0.8673;0.8167;0.8181;0.8167;0.817;0.9071;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
SVC;0.7778;0.8044;0.7778;0.7808;0.942;0.9448;0.942;0.9426;0.8167;0.8181;0.8167;0.817;0.9087;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
SVC;0.7826;0.8073;0.7826;0.7838;0.8841;0.8885;0.8841;0.8852;0.8167;0.8181;0.8167;0.817;0.9113;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
MLPClassifier;0.815;0.8191;0.815;0.8139;0.942;0.947;0.942;0.9418;0.8167;0.8181;0.8167;0.817;0.9479;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
SVC;0.7794;0.8049;0.7794;0.7814;0.8696;0.874;0.8696;0.8707;0.8167;0.818;0.8167;0.817;0.9093;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 474};SVC(C=10, probability=True, random_state=474)
RandomForestClassifier;0.9194;0.9233;0.9194;0.9196;0.942;0.942;0.942;0.9417;0.8167;0.8181;0.8167;0.817;0.9841;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
MLPClassifier;0.8278;0.8306;0.8278;0.8267;0.913;0.9184;0.913;0.9138;0.8167;0.8181;0.8167;0.817;0.9565;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
DecisionTreeClassifier;0.876;0.8789;0.876;0.8756;0.7971;0.8083;0.7971;0.8003;0.8167;0.8223;0.8167;0.8169;0.9067;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
MLPClassifier;0.8214;0.827;0.8214;0.8204;0.9275;0.9275;0.9275;0.9275;0.8167;0.8167;0.8167;0.8167;0.951;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.826;0.8321;0.826;0.825;0.8406;0.8467;0.8406;0.8416;0.8167;0.8167;0.8167;0.8167;0.9526;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.8197;0.8284;0.8197;0.8202;0.8986;0.9008;0.8986;0.8988;0.8167;0.8167;0.8167;0.8167;0.9498;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
RandomForestClassifier;0.913;0.9183;0.913;0.9137;0.8841;0.8941;0.8841;0.8857;0.8167;0.8167;0.8167;0.8167;0.9763;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
KNeighborsClassifier;0.8454;0.8495;0.8454;0.8457;0.8841;0.8846;0.8841;0.884;0.8167;0.8171;0.8167;0.8166;0.9486;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8293;0.8336;0.8293;0.8297;0.8841;0.8861;0.8841;0.8843;0.8167;0.8155;0.8167;0.8158;0.951;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
RandomForestClassifier;0.9162;0.9223;0.9162;0.9166;0.913;0.913;0.913;0.913;0.8167;0.831;0.8167;0.8158;0.9831;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 464};RandomForestClassifier(n_estimators=20, random_state=464)
MLPClassifier;0.8325;0.8349;0.8325;0.8314;0.942;0.9448;0.942;0.9426;0.8167;0.8168;0.8167;0.8155;0.9467;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
DecisionTreeClassifier;0.8889;0.8907;0.8889;0.8885;0.8406;0.8571;0.8406;0.8442;0.8167;0.822;0.8167;0.8148;0.9169;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
RandomForestClassifier;0.9082;0.9139;0.9082;0.9086;0.913;0.9176;0.913;0.9127;0.8167;0.8148;0.8167;0.8147;0.982;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
KNeighborsClassifier;0.8487;0.8554;0.8487;0.8493;0.8551;0.8591;0.8551;0.8562;0.8;0.8166;0.8;0.8017;0.9485;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.7892;0.8104;0.7892;0.7913;0.7971;0.7971;0.7971;0.7971;0.8;0.8054;0.8;0.8013;0.9157;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
SVC;0.7763;0.799;0.7763;0.7789;0.8116;0.8179;0.8116;0.813;0.8;0.8054;0.8;0.8013;0.9112;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
MLPClassifier;0.818;0.8238;0.818;0.8178;0.9275;0.9293;0.9275;0.9281;0.8;0.803;0.8;0.8012;0.9521;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
MLPClassifier;0.8245;0.8298;0.8245;0.8239;0.9275;0.9328;0.9275;0.9283;0.8;0.803;0.8;0.8012;0.9509;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
MLPClassifier;0.8101;0.8141;0.8101;0.8092;0.8841;0.8859;0.8841;0.8839;0.8;0.803;0.8;0.8012;0.9514;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
DecisionTreeClassifier;0.8775;0.8852;0.8775;0.877;0.913;0.9129;0.913;0.9127;0.8;0.8038;0.8;0.801;0.9079;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
RandomForestClassifier;0.9114;0.918;0.9114;0.9119;0.942;0.942;0.942;0.9417;0.8;0.8064;0.8;0.8007;0.9799;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 220};RandomForestClassifier(n_estimators=10, random_state=220)
RandomForestClassifier;0.9163;0.9193;0.9163;0.9164;0.8551;0.861;0.8551;0.8563;0.8;0.8035;0.8;0.8005;0.9836;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 220};RandomForestClassifier(n_estimators=10, random_state=220)
MLPClassifier;0.8164;0.8303;0.8164;0.8158;0.913;0.9142;0.913;0.9133;0.8;0.8;0.8;0.8;0.9511;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
RandomForestClassifier;0.9001;0.9071;0.9001;0.8997;0.913;0.9147;0.913;0.913;0.8;0.8005;0.8;0.7999;0.9793;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 220};RandomForestClassifier(n_estimators=20, random_state=220)
SVC;0.7809;0.8066;0.7809;0.7824;0.8696;0.8693;0.8696;0.8692;0.8;0.8014;0.8;0.7998;0.909;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
DecisionTreeClassifier;0.8858;0.8892;0.8858;0.8847;0.9275;0.9274;0.9275;0.9272;0.8;0.8026;0.8;0.7989;0.9142;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
DecisionTreeClassifier;0.8648;0.8702;0.8648;0.8645;0.8841;0.8846;0.8841;0.884;0.8;0.7972;0.8;0.7983;0.899;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
SVC;0.7778;0.8024;0.7778;0.7798;0.8261;0.8252;0.8261;0.8246;0.7833;0.7913;0.7833;0.7852;0.9105;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
DecisionTreeClassifier;0.8889;0.8938;0.8889;0.8881;0.7246;0.7438;0.7246;0.7288;0.7833;0.7887;0.7833;0.7851;0.9169;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
MLPClassifier;0.8342;0.8408;0.8342;0.8345;0.8986;0.8995;0.8986;0.8971;0.7833;0.7855;0.7833;0.7841;0.951;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
SVC;0.7909;0.8124;0.7909;0.7928;0.8261;0.8284;0.8261;0.827;0.7833;0.7854;0.7833;0.7822;0.9145;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
MLPClassifier;0.8245;0.8315;0.8245;0.8245;0.942;0.9425;0.942;0.9413;0.7833;0.7854;0.7833;0.7822;0.9483;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
SVC;0.7778;0.8042;0.7778;0.7799;0.8551;0.858;0.8551;0.8532;0.7833;0.7854;0.7833;0.7822;0.9139;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 583};SVC(C=10, probability=True, random_state=583)
SVC;0.7922;0.8159;0.7922;0.7927;0.7246;0.7244;0.7246;0.7228;0.7833;0.7854;0.7833;0.7822;0.9246;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 172};SVC(C=10, probability=True, random_state=172)
MLPClassifier;0.8309;0.8349;0.8309;0.8305;0.8551;0.8679;0.8551;0.8504;0.7833;0.7832;0.7833;0.782;0.9523;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
DecisionTreeClassifier;0.8615;0.8672;0.8615;0.8618;0.8551;0.861;0.8551;0.8563;0.7833;0.7793;0.7833;0.777;0.8963;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 82};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=82)
MLPClassifier;0.8357;0.8414;0.8357;0.8353;0.913;0.9142;0.913;0.9133;0.7667;0.7687;0.7667;0.7668;0.9514;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 705, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=705)
MLPClassifier;0.8115;0.8195;0.8115;0.8107;0.8261;0.8271;0.8261;0.8263;0.7667;0.7687;0.7667;0.7668;0.9572;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 904, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=904)
MLPClassifier;0.8276;0.8359;0.8276;0.8272;0.8986;0.9028;0.8986;0.8997;0.7667;0.7687;0.7667;0.7668;0.9495;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 150, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=150)
DecisionTreeClassifier;0.8791;0.8834;0.8791;0.8794;0.7971;0.8141;0.7971;0.7981;0.7667;0.765;0.7667;0.7646;0.9094;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
DecisionTreeClassifier;0.8873;0.8901;0.8873;0.8865;0.8116;0.8095;0.8116;0.8098;0.75;0.7479;0.75;0.7486;0.9153;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 221};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=221)
DecisionTreeClassifier;0.8727;0.8761;0.8727;0.8712;0.7536;0.7698;0.7536;0.7581;0.75;0.749;0.75;0.7452;0.9043;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 919};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=919)
LogisticRegression;0.6699;0.674;0.6699;0.6675;0.7246;0.7302;0.7246;0.7233;0.7167;0.7202;0.7167;0.7163;0.8572;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.6779;0.6866;0.6779;0.676;0.6087;0.6333;0.6087;0.6072;0.7167;0.7202;0.7167;0.7163;0.8709;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6827;0.6924;0.6827;0.6799;0.7101;0.7265;0.7101;0.7083;0.7;0.7081;0.7;0.7028;0.8572;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.686;0.6892;0.686;0.6831;0.6522;0.652;0.6522;0.6502;0.7;0.7081;0.7;0.7028;0.8707;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6826;0.6876;0.6826;0.6814;0.7391;0.7432;0.7391;0.7381;0.7;0.7081;0.7;0.7028;0.8602;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.694;0.7021;0.694;0.691;0.5942;0.6052;0.5942;0.5949;0.7;0.7081;0.7;0.7028;0.8724;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6926;0.7021;0.6926;0.6923;0.6522;0.6631;0.6522;0.6563;0.7;0.7081;0.7;0.7028;0.8658;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6747;0.6832;0.6747;0.6715;0.7101;0.7306;0.7101;0.7108;0.7;0.7081;0.7;0.7028;0.867;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.6941;0.7008;0.6941;0.6917;0.6232;0.623;0.6232;0.6225;0.7;0.7081;0.7;0.7028;0.8702;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.6989;0.7068;0.6989;0.6981;0.6812;0.6977;0.6812;0.6842;0.7;0.7081;0.7;0.7028;0.8665;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.686;0.6895;0.686;0.6846;0.7101;0.7134;0.7101;0.7088;0.7;0.7081;0.7;0.7028;0.8658;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6668;0.6759;0.6668;0.6639;0.7391;0.758;0.7391;0.7347;0.7;0.7081;0.7;0.7028;0.859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6974;0.7045;0.6974;0.6957;0.5942;0.5932;0.5942;0.593;0.7;0.7081;0.7;0.7028;0.865;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6957;0.7014;0.6957;0.6951;0.5942;0.5966;0.5942;0.5888;0.7;0.7051;0.7;0.7013;0.876;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6748;0.684;0.6748;0.6725;0.7536;0.7561;0.7536;0.7531;0.6833;0.6905;0.6833;0.6859;0.8684;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6861;0.6963;0.6861;0.6867;0.6087;0.6101;0.6087;0.6067;0.6833;0.6905;0.6833;0.6859;0.8667;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.6844;0.6924;0.6844;0.6822;0.6522;0.7099;0.6522;0.6393;0.6833;0.6905;0.6833;0.6859;0.8686;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6989;0.7061;0.6989;0.6991;0.6087;0.6085;0.6087;0.6068;0.6833;0.6905;0.6833;0.6859;0.8754;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.7037;0.7159;0.7037;0.703;0.5942;0.5893;0.5942;0.5912;0.6833;0.6905;0.6833;0.6859;0.8692;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6665;0.6752;0.6665;0.6648;0.6957;0.7058;0.6957;0.6928;0.6833;0.6905;0.6833;0.6859;0.859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6794;0.6883;0.6794;0.6781;0.7391;0.752;0.7391;0.7377;0.6833;0.6905;0.6833;0.6859;0.8604;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.6699;0.6743;0.6699;0.663;0.6957;0.7136;0.6957;0.6913;0.6833;0.6905;0.6833;0.6859;0.8627;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6748;0.6837;0.6748;0.6711;0.7246;0.7242;0.7246;0.7237;0.6833;0.6882;0.6833;0.6838;0.8669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6665;0.6721;0.6665;0.665;0.7101;0.7321;0.7101;0.7047;0.6667;0.6763;0.6667;0.6703;0.8644;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.6782;0.6827;0.6782;0.675;0.7391;0.7401;0.7391;0.7389;0.6667;0.6763;0.6667;0.6703;0.8698;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6875;0.6993;0.6875;0.6875;0.7101;0.717;0.7101;0.706;0.6667;0.6732;0.6667;0.6687;0.865;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.6683;0.6739;0.6683;0.6651;0.7971;0.8095;0.7971;0.7966;0.65;0.6587;0.65;0.6534;0.8628;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 320, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=320)"
LogisticRegression;0.6781;0.6863;0.6781;0.6752;0.7391;0.7889;0.7391;0.7368;0.65;0.6587;0.65;0.6534;0.8687;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
LogisticRegression;0.6731;0.6807;0.6731;0.6703;0.6812;0.6812;0.6812;0.6812;0.65;0.6587;0.65;0.6534;0.8686;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.673;0.6786;0.673;0.6722;0.7101;0.7097;0.7101;0.7093;0.6333;0.6475;0.6333;0.6382;0.8634;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 257, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=257)"
