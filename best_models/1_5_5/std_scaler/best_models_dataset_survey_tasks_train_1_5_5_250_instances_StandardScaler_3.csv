Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8728;0.8787;0.8728;0.8725;0.9565;0.9577;0.9565;0.9568;0.8833;0.8968;0.8833;0.8814;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8825;0.8853;0.8825;0.882;0.8406;0.8459;0.8406;0.8415;0.8833;0.899;0.8833;0.8791;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.884;0.8918;0.884;0.883;0.913;0.9221;0.913;0.9114;0.8667;0.8829;0.8667;0.8663;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8778;0.8823;0.8778;0.8765;0.9855;0.9861;0.9855;0.9855;0.8667;0.8829;0.8667;0.8663;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
MLPClassifier;0.8824;0.8873;0.8824;0.8813;0.9275;0.9279;0.9275;0.9269;0.8667;0.8829;0.8667;0.8663;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
KNeighborsClassifier;0.8905;0.8968;0.8905;0.8884;0.913;0.9164;0.913;0.9139;0.8667;0.8814;0.8667;0.866;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9243;0.9275;0.9243;0.9238;0.8696;0.8783;0.8696;0.8709;0.8667;0.8851;0.8667;0.864;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
KNeighborsClassifier;0.8697;0.8739;0.8697;0.869;0.8551;0.871;0.8551;0.8553;0.8667;0.8857;0.8667;0.8635;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8825;0.8856;0.8825;0.8808;0.942;0.9506;0.942;0.9427;0.8667;0.8838;0.8667;0.8633;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.8695;0.8798;0.8695;0.8681;0.9275;0.9338;0.9275;0.9266;0.85;0.8752;0.85;0.8517;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
SVC;0.8759;0.888;0.8759;0.8737;0.8841;0.8856;0.8841;0.8828;0.85;0.8752;0.85;0.8517;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
MLPClassifier;0.8808;0.8864;0.8808;0.8799;0.8986;0.8978;0.8986;0.8979;0.85;0.869;0.85;0.8511;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8808;0.8861;0.8808;0.8801;0.942;0.9425;0.942;0.9413;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
SVC;0.8743;0.883;0.8743;0.8729;0.8551;0.8582;0.8551;0.8532;0.85;0.87;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
SVC;0.8632;0.8754;0.8632;0.8615;0.942;0.9506;0.942;0.9416;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
MLPClassifier;0.8873;0.8897;0.8873;0.8866;0.8841;0.892;0.8841;0.8794;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
MLPClassifier;0.8776;0.8812;0.8776;0.8773;0.9565;0.9577;0.9565;0.9568;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
MLPClassifier;0.8809;0.8905;0.8809;0.8795;0.8261;0.8317;0.8261;0.8278;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8889;0.8954;0.8889;0.888;0.8551;0.8556;0.8551;0.8542;0.85;0.87;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8921;0.8973;0.8921;0.8908;0.8841;0.9026;0.8841;0.8819;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
MLPClassifier;0.8857;0.8894;0.8857;0.8845;0.913;0.931;0.913;0.9115;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
MLPClassifier;0.8809;0.8861;0.8809;0.8799;0.8986;0.9101;0.8986;0.8973;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
SVC;0.8824;0.8897;0.8824;0.8807;0.8841;0.8976;0.8841;0.8836;0.85;0.87;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
MLPClassifier;0.8906;0.8942;0.8906;0.8896;0.8841;0.8956;0.8841;0.8828;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
MLPClassifier;0.8793;0.8859;0.8793;0.8781;0.8986;0.9165;0.8986;0.897;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8807;0.8855;0.8807;0.8804;0.9565;0.9583;0.9565;0.9565;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
MLPClassifier;0.8921;0.8972;0.8921;0.8907;0.8696;0.879;0.8696;0.8709;0.85;0.87;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
SVC;0.8711;0.8775;0.8711;0.869;0.942;0.943;0.942;0.9413;0.85;0.87;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
MLPClassifier;0.8808;0.8863;0.8808;0.8799;0.971;0.971;0.971;0.971;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
MLPClassifier;0.8986;0.9021;0.8986;0.898;0.8551;0.8567;0.8551;0.8549;0.85;0.8669;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
RandomForestClassifier;0.9081;0.9124;0.9081;0.9068;0.971;0.9716;0.971;0.971;0.85;0.8671;0.85;0.85;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 278};RandomForestClassifier(n_estimators=5, random_state=278)
RandomForestClassifier;0.9066;0.9134;0.9066;0.9069;0.8986;0.9127;0.8986;0.896;0.85;0.8724;0.85;0.8487;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
KNeighborsClassifier;0.876;0.8789;0.876;0.875;0.9275;0.9305;0.9275;0.9271;0.85;0.8696;0.85;0.8482;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8793;0.8841;0.8793;0.878;0.8986;0.9075;0.8986;0.8959;0.85;0.8696;0.85;0.8482;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9116;0.9151;0.9116;0.9111;0.942;0.9426;0.942;0.942;0.85;0.8699;0.85;0.8481;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 190};RandomForestClassifier(n_estimators=10, random_state=190)
MLPClassifier;0.868;0.8719;0.868;0.8662;0.9855;0.9861;0.9855;0.9855;0.85;0.8699;0.85;0.8481;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
KNeighborsClassifier;0.8711;0.8761;0.8711;0.8708;0.8841;0.8917;0.8841;0.8834;0.85;0.8699;0.85;0.8481;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9082;0.9134;0.9082;0.9083;0.9565;0.9588;0.9565;0.9565;0.85;0.8731;0.85;0.8477;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
RandomForestClassifier;0.9049;0.9091;0.9049;0.9045;0.913;0.917;0.913;0.9131;0.85;0.8731;0.85;0.8477;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
RandomForestClassifier;0.9163;0.92;0.9163;0.9157;0.913;0.9135;0.913;0.913;0.85;0.8731;0.85;0.8477;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
RandomForestClassifier;0.9163;0.9202;0.9163;0.9163;0.913;0.9244;0.913;0.9123;0.85;0.8599;0.85;0.8476;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 614};RandomForestClassifier(n_estimators=5, random_state=614)
RandomForestClassifier;0.9292;0.9342;0.9292;0.9291;0.8696;0.8703;0.8696;0.8688;0.85;0.8599;0.85;0.8473;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 190};RandomForestClassifier(n_estimators=5, random_state=190)
RandomForestClassifier;0.9066;0.9131;0.9066;0.9066;0.913;0.9123;0.913;0.9124;0.85;0.8599;0.85;0.8473;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 190};RandomForestClassifier(n_estimators=10, random_state=190)
KNeighborsClassifier;0.8712;0.8743;0.8712;0.8705;0.8841;0.8933;0.8841;0.8849;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8648;0.8685;0.8648;0.8634;0.942;0.9461;0.942;0.9419;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8727;0.876;0.8727;0.8716;0.9275;0.9367;0.9275;0.9256;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8727;0.8779;0.8727;0.8715;0.9565;0.9583;0.9565;0.9565;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8856;0.893;0.8856;0.8847;0.8696;0.8862;0.8696;0.8712;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8744;0.8826;0.8744;0.8724;0.9275;0.9342;0.9275;0.9282;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8695;0.874;0.8695;0.8686;0.8986;0.9078;0.8986;0.8975;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8646;0.8691;0.8646;0.8633;0.913;0.9127;0.913;0.912;0.85;0.8698;0.85;0.8472;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9114;0.9136;0.9114;0.9113;0.913;0.9135;0.913;0.913;0.85;0.8523;0.85;0.8466;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 614};RandomForestClassifier(n_estimators=5, random_state=614)
RandomForestClassifier;0.9035;0.9121;0.9035;0.9036;0.971;0.9733;0.971;0.971;0.85;0.8587;0.85;0.8461;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 190};RandomForestClassifier(n_estimators=10, random_state=190)
SVC;0.8775;0.8841;0.8775;0.8757;0.9275;0.9338;0.9275;0.9266;0.8333;0.8567;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
RandomForestClassifier;0.9228;0.9277;0.9228;0.923;0.9275;0.9297;0.9275;0.9278;0.8333;0.8524;0.8333;0.835;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 190};RandomForestClassifier(n_estimators=5, random_state=190)
SVC;0.8664;0.8731;0.8664;0.8646;0.9275;0.931;0.9275;0.9281;0.8333;0.8532;0.8333;0.8349;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
SVC;0.8793;0.8861;0.8793;0.8779;0.913;0.9221;0.913;0.9114;0.8333;0.8576;0.8333;0.8346;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
SVC;0.8775;0.8892;0.8775;0.8773;0.8841;0.8974;0.8841;0.882;0.8333;0.8576;0.8333;0.8346;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
SVC;0.8905;0.8974;0.8905;0.8896;0.8261;0.8471;0.8261;0.8242;0.8333;0.8518;0.8333;0.8346;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
MLPClassifier;0.8793;0.884;0.8793;0.8783;0.942;0.9426;0.942;0.942;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
MLPClassifier;0.8905;0.8939;0.8905;0.8896;0.913;0.931;0.913;0.9135;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
MLPClassifier;0.8824;0.889;0.8824;0.8814;0.8551;0.8692;0.8551;0.8553;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
MLPClassifier;0.8808;0.886;0.8808;0.88;0.9855;0.9861;0.9855;0.9855;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
KNeighborsClassifier;0.8792;0.8842;0.8792;0.8775;0.8406;0.85;0.8406;0.8415;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8825;0.8864;0.8825;0.8812;0.8841;0.8917;0.8841;0.8834;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
MLPClassifier;0.8825;0.8849;0.8825;0.8816;0.942;0.942;0.942;0.942;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
MLPClassifier;0.8889;0.8939;0.8889;0.8875;0.8406;0.8631;0.8406;0.8426;0.8333;0.8551;0.8333;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
RandomForestClassifier;0.9114;0.9148;0.9114;0.9112;0.9565;0.9594;0.9565;0.9558;0.8333;0.8565;0.8333;0.8324;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 614};RandomForestClassifier(n_estimators=10, random_state=614)
RandomForestClassifier;0.9081;0.9139;0.9081;0.9084;0.9855;0.9861;0.9855;0.9855;0.8333;0.8565;0.8333;0.8324;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 614};RandomForestClassifier(n_estimators=10, random_state=614)
KNeighborsClassifier;0.8598;0.8663;0.8598;0.8587;0.9565;0.9571;0.9565;0.9565;0.8333;0.8565;0.8333;0.8324;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.884;0.8857;0.884;0.883;0.8841;0.8948;0.8841;0.8848;0.8333;0.8565;0.8333;0.8324;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.863;0.8656;0.863;0.8618;0.942;0.947;0.942;0.9418;0.8333;0.8565;0.8333;0.8324;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8808;0.8833;0.8808;0.8793;0.8841;0.8996;0.8841;0.8846;0.8333;0.8565;0.8333;0.8324;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8582;0.8617;0.8582;0.8566;0.942;0.942;0.942;0.9417;0.8333;0.8548;0.8333;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9259;0.9295;0.9259;0.9259;0.8986;0.9065;0.8986;0.899;0.8333;0.8548;0.8333;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 614};RandomForestClassifier(n_estimators=20, random_state=614)
RandomForestClassifier;0.9114;0.916;0.9114;0.9117;0.9565;0.9615;0.9565;0.9563;0.8333;0.8548;0.8333;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
RandomForestClassifier;0.9145;0.9203;0.9145;0.9146;0.913;0.931;0.913;0.915;0.8333;0.8548;0.8333;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
KNeighborsClassifier;0.8695;0.875;0.8695;0.8683;0.8986;0.8993;0.8986;0.8978;0.8333;0.8548;0.8333;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9162;0.9196;0.9162;0.9162;0.8986;0.9003;0.8986;0.8991;0.8333;0.8548;0.8333;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 614};RandomForestClassifier(n_estimators=10, random_state=614)
RandomForestClassifier;0.9211;0.9285;0.9211;0.9207;0.8696;0.8706;0.8696;0.868;0.8333;0.8548;0.8333;0.8322;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 190};RandomForestClassifier(n_estimators=20, random_state=190)
RandomForestClassifier;0.9067;0.9099;0.9067;0.9067;0.9275;0.9287;0.9275;0.9278;0.8333;0.836;0.8333;0.832;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 190};RandomForestClassifier(n_estimators=5, random_state=190)
RandomForestClassifier;0.9163;0.9226;0.9163;0.9163;0.8406;0.8393;0.8406;0.8391;0.8333;0.8543;0.8333;0.8311;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 614};RandomForestClassifier(n_estimators=5, random_state=614)
RandomForestClassifier;0.9163;0.921;0.9163;0.9164;0.913;0.9123;0.913;0.9124;0.8333;0.8444;0.8333;0.8296;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 190};RandomForestClassifier(n_estimators=10, random_state=190)
SVC;0.8824;0.8873;0.8824;0.881;0.8116;0.8294;0.8116;0.8053;0.8167;0.8448;0.8167;0.8201;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8825;0.8881;0.8825;0.8815;0.8696;0.8926;0.8696;0.86;0.8167;0.8536;0.8167;0.8199;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
SVC;0.884;0.8917;0.884;0.8831;0.7826;0.7884;0.7826;0.7773;0.8167;0.8536;0.8167;0.8199;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8857;0.8924;0.8857;0.8846;0.8551;0.8596;0.8551;0.8514;0.8167;0.8536;0.8167;0.8199;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
SVC;0.8825;0.8865;0.8825;0.8808;0.913;0.9228;0.913;0.9114;0.8167;0.8373;0.8167;0.8191;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
SVC;0.8744;0.8791;0.8744;0.8727;0.8841;0.8917;0.8841;0.8834;0.8167;0.8373;0.8167;0.8191;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8695;0.8806;0.8695;0.8683;0.942;0.9506;0.942;0.943;0.8167;0.84;0.8167;0.819;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
MLPClassifier;0.8793;0.8843;0.8793;0.8787;0.913;0.9145;0.913;0.913;0.8167;0.8373;0.8167;0.8186;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
MLPClassifier;0.8809;0.8865;0.8809;0.8798;0.9275;0.9296;0.9275;0.9274;0.8167;0.8373;0.8167;0.8186;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 654, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=654)
SVC;0.8695;0.8813;0.8695;0.8688;0.8841;0.8871;0.8841;0.8824;0.8167;0.8457;0.8167;0.8184;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
SVC;0.8889;0.8954;0.8889;0.8872;0.8261;0.8344;0.8261;0.8222;0.8167;0.8457;0.8167;0.8184;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
DecisionTreeClassifier;0.9002;0.9078;0.9002;0.9001;0.9565;0.9583;0.9565;0.9565;0.8167;0.8277;0.8167;0.8175;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
DecisionTreeClassifier;0.9275;0.9342;0.9275;0.9277;0.9275;0.9405;0.9275;0.9282;0.8167;0.8277;0.8167;0.8175;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
KNeighborsClassifier;0.8679;0.8705;0.8679;0.8664;0.913;0.9189;0.913;0.9127;0.8167;0.8409;0.8167;0.8171;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8647;0.8704;0.8647;0.8641;0.8986;0.9081;0.8986;0.8994;0.8167;0.8406;0.8167;0.8171;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8679;0.8726;0.8679;0.8671;0.8841;0.905;0.8841;0.8842;0.8167;0.8409;0.8167;0.8171;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8744;0.8782;0.8744;0.8729;0.8986;0.9062;0.8986;0.8979;0.8167;0.8409;0.8167;0.8171;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9147;0.9188;0.9147;0.9142;0.8696;0.8731;0.8696;0.8696;0.8167;0.8436;0.8167;0.8165;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
KNeighborsClassifier;0.863;0.8653;0.863;0.862;0.8986;0.9021;0.8986;0.8968;0.8167;0.8436;0.8167;0.8165;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8889;0.8986;0.8889;0.8887;0.8696;0.8762;0.8696;0.8694;0.8167;0.8436;0.8167;0.8165;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8856;0.8883;0.8856;0.8851;0.8986;0.9031;0.8986;0.8982;0.8167;0.8296;0.8167;0.8156;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 84, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=84)
RandomForestClassifier;0.9114;0.9148;0.9114;0.9107;0.913;0.9147;0.913;0.913;0.8167;0.8434;0.8167;0.8146;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
RandomForestClassifier;0.9082;0.9142;0.9082;0.9081;0.971;0.9733;0.971;0.971;0.8167;0.8436;0.8167;0.8141;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 614};RandomForestClassifier(n_estimators=10, random_state=614)
RandomForestClassifier;0.9082;0.9121;0.9082;0.9083;0.913;0.9142;0.913;0.9133;0.8167;0.8442;0.8167;0.8139;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 614};RandomForestClassifier(n_estimators=10, random_state=614)
SVC;0.8744;0.8787;0.8744;0.8728;0.8696;0.8846;0.8696;0.8684;0.8;0.8333;0.8;0.8042;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
SVC;0.8776;0.8852;0.8776;0.8762;0.913;0.9136;0.913;0.913;0.8;0.8234;0.8;0.8035;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
SVC;0.8824;0.8914;0.8824;0.8811;0.7826;0.7897;0.7826;0.7819;0.8;0.8221;0.8;0.8032;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
SVC;0.86;0.8695;0.86;0.8585;0.8841;0.8869;0.8841;0.8829;0.8;0.834;0.8;0.8019;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8663;0.8748;0.8663;0.8643;0.9565;0.9588;0.9565;0.9565;0.8;0.834;0.8;0.8019;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8712;0.8739;0.8712;0.87;0.913;0.9215;0.913;0.9112;0.8;0.834;0.8;0.8019;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
KNeighborsClassifier;0.8776;0.8826;0.8776;0.8773;0.913;0.9158;0.913;0.9107;0.8;0.8261;0.8;0.8016;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8937;0.8976;0.8937;0.8929;0.8841;0.8928;0.8841;0.8849;0.8;0.8273;0.8;0.8013;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 106, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=106)
DecisionTreeClassifier;0.9034;0.9076;0.9034;0.9032;0.9275;0.9321;0.9275;0.9272;0.8;0.8258;0.8;0.8012;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.9146;0.9195;0.9146;0.914;0.9275;0.9321;0.9275;0.9272;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
RandomForestClassifier;0.9196;0.9267;0.9196;0.9196;0.8696;0.8774;0.8696;0.8702;0.8;0.8269;0.8;0.7999;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 190};RandomForestClassifier(n_estimators=5, random_state=190)
RandomForestClassifier;0.9324;0.9375;0.9324;0.9324;0.8406;0.846;0.8406;0.8378;0.8;0.8144;0.8;0.7997;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 190};RandomForestClassifier(n_estimators=5, random_state=190)
DecisionTreeClassifier;0.9227;0.9276;0.9227;0.9227;0.8986;0.8986;0.8986;0.8986;0.8;0.8144;0.8;0.7997;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.9082;0.913;0.9082;0.9083;0.913;0.9145;0.913;0.913;0.8;0.8151;0.8;0.7996;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.9146;0.919;0.9146;0.915;0.8406;0.8561;0.8406;0.8428;0.8;0.8065;0.8;0.7985;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
DecisionTreeClassifier;0.9098;0.9142;0.9098;0.9097;0.8986;0.9105;0.8986;0.8981;0.8;0.8065;0.8;0.7985;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
DecisionTreeClassifier;0.9162;0.9218;0.9162;0.9165;0.8841;0.892;0.8841;0.8818;0.8;0.8065;0.8;0.7985;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.9066;0.9106;0.9066;0.9064;0.9275;0.9336;0.9275;0.9286;0.8;0.8065;0.8;0.7985;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
SVC;0.8728;0.8818;0.8728;0.8715;0.8841;0.9077;0.8841;0.8817;0.7833;0.8076;0.7833;0.7877;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 246};SVC(C=10, random_state=246)
SVC;0.8679;0.8772;0.8679;0.8662;0.913;0.9146;0.913;0.9119;0.7833;0.8076;0.7833;0.7877;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
SVC;0.8744;0.8832;0.8744;0.8741;0.8841;0.8848;0.8841;0.8806;0.7833;0.81;0.7833;0.7876;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 717};SVC(C=10, random_state=717)
DecisionTreeClassifier;0.9065;0.9137;0.9065;0.9065;0.8986;0.8988;0.8986;0.8978;0.7833;0.7838;0.7833;0.7832;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
RandomForestClassifier;0.9307;0.9348;0.9307;0.9309;0.8841;0.8864;0.8841;0.8827;0.7833;0.815;0.7833;0.7819;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 614};RandomForestClassifier(n_estimators=5, random_state=614)
SVC;0.8598;0.8656;0.8598;0.8586;0.913;0.9127;0.913;0.912;0.7667;0.7969;0.7667;0.7714;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 416};SVC(C=10, random_state=416)
DecisionTreeClassifier;0.9131;0.9169;0.9131;0.9127;0.8841;0.8848;0.8841;0.8806;0.7667;0.7765;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
DecisionTreeClassifier;0.9081;0.9133;0.9081;0.9079;0.913;0.9177;0.913;0.9142;0.7667;0.7765;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.913;0.918;0.913;0.9132;0.8551;0.8763;0.8551;0.8587;0.7667;0.7667;0.7667;0.7667;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=150)
DecisionTreeClassifier;0.9033;0.9083;0.9033;0.9034;0.8696;0.8864;0.8696;0.8724;0.7667;0.7667;0.7667;0.7667;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=876)
DecisionTreeClassifier;0.913;0.9164;0.913;0.9131;0.913;0.9224;0.913;0.9145;0.7667;0.7667;0.7667;0.7667;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=764)
DecisionTreeClassifier;0.9065;0.913;0.9065;0.9065;0.913;0.9147;0.913;0.913;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.921;0.9246;0.921;0.9211;0.8696;0.8727;0.8696;0.8704;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
DecisionTreeClassifier;0.9081;0.9165;0.9081;0.9078;0.9565;0.9571;0.9565;0.9565;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
DecisionTreeClassifier;0.9099;0.9157;0.9099;0.9095;0.913;0.9164;0.913;0.9139;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.9017;0.9094;0.9017;0.9015;0.913;0.9224;0.913;0.9145;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.9146;0.9191;0.9146;0.9151;0.8986;0.8976;0.8986;0.8972;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.9195;0.9224;0.9195;0.9193;0.8986;0.9075;0.8986;0.8959;0.7667;0.7709;0.7667;0.7664;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8969;0.9017;0.8969;0.8971;0.8986;0.9032;0.8986;0.8997;0.7667;0.7672;0.7667;0.7659;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.9098;0.9151;0.9098;0.9098;0.9855;0.9861;0.9855;0.9855;0.7667;0.7672;0.7667;0.7659;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=150)
DecisionTreeClassifier;0.9098;0.9135;0.9098;0.9098;0.8986;0.9101;0.8986;0.8973;0.7667;0.7672;0.7667;0.7659;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.9082;0.9135;0.9082;0.908;0.8696;0.8774;0.8696;0.871;0.75;0.7532;0.75;0.7504;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=764)
DecisionTreeClassifier;0.9049;0.9097;0.9049;0.9049;0.7971;0.847;0.7971;0.801;0.75;0.7504;0.75;0.7499;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 150};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=150)
DecisionTreeClassifier;0.9049;0.9109;0.9049;0.905;0.9565;0.9588;0.9565;0.9565;0.75;0.7496;0.75;0.7495;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=876)
LogisticRegression;0.7971;0.8226;0.7971;0.7991;0.7971;0.8103;0.7971;0.7995;0.75;0.7505;0.75;0.7406;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.7858;0.8106;0.7858;0.7881;0.7971;0.8131;0.7971;0.8019;0.7333;0.7407;0.7333;0.7337;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
DecisionTreeClassifier;0.9066;0.9111;0.9066;0.9062;0.942;0.9443;0.942;0.942;0.7333;0.7408;0.7333;0.7317;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
LogisticRegression;0.789;0.8194;0.789;0.7909;0.7971;0.8418;0.7971;0.8028;0.7333;0.7434;0.7333;0.7308;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.8069;0.833;0.8069;0.8099;0.7246;0.7454;0.7246;0.7196;0.7333;0.7309;0.7333;0.7296;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.7954;0.8213;0.7954;0.7973;0.7971;0.8291;0.7971;0.8025;0.7333;0.7322;0.7333;0.7257;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.8084;0.836;0.8084;0.8106;0.7681;0.81;0.7681;0.7694;0.7333;0.7322;0.7333;0.7257;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.7922;0.8184;0.7922;0.7932;0.8841;0.8959;0.8841;0.8844;0.7333;0.7302;0.7333;0.7256;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7971;0.8223;0.7971;0.7988;0.8261;0.8755;0.8261;0.8267;0.7333;0.7344;0.7333;0.7209;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7955;0.8212;0.7955;0.7986;0.7681;0.8099;0.7681;0.773;0.7167;0.7253;0.7167;0.7159;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7938;0.8172;0.7938;0.7966;0.7681;0.7976;0.7681;0.7723;0.7167;0.7253;0.7167;0.7159;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7763;0.8072;0.7763;0.7779;0.8261;0.8406;0.8261;0.8301;0.7167;0.7253;0.7167;0.7159;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.7842;0.8073;0.7842;0.7858;0.8116;0.8413;0.8116;0.817;0.7167;0.7253;0.7167;0.7159;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.7714;0.7967;0.7714;0.7736;0.8116;0.8323;0.8116;0.8166;0.7167;0.7253;0.7167;0.7159;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7858;0.8081;0.7858;0.7872;0.7971;0.8554;0.7971;0.802;0.7167;0.7253;0.7167;0.7159;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7907;0.8132;0.7907;0.7922;0.8406;0.8434;0.8406;0.841;0.7167;0.7163;0.7167;0.7145;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.81;0.8451;0.81;0.8109;0.7971;0.8279;0.7971;0.7969;0.7167;0.7139;0.7167;0.7109;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.8181;0.8415;0.8181;0.8189;0.7826;0.8125;0.7826;0.7828;0.7167;0.7139;0.7167;0.7109;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.8003;0.8241;0.8003;0.8017;0.8696;0.8731;0.8696;0.869;0.7167;0.7157;0.7167;0.7105;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.7907;0.8208;0.7907;0.7916;0.7681;0.7842;0.7681;0.7668;0.7167;0.7156;0.7167;0.7062;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7987;0.8275;0.7987;0.7994;0.7536;0.7688;0.7536;0.7576;0.7167;0.7156;0.7167;0.7062;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.8117;0.838;0.8117;0.8128;0.7826;0.8115;0.7826;0.7866;0.7167;0.7156;0.7167;0.7062;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.8035;0.8264;0.8035;0.8044;0.8551;0.8695;0.8551;0.8557;0.7;0.699;0.7;0.6961;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.8035;0.8287;0.8035;0.8043;0.8406;0.8773;0.8406;0.8447;0.7;0.699;0.7;0.6961;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.8084;0.835;0.8084;0.808;0.8116;0.8206;0.8116;0.8141;0.7;0.7024;0.7;0.6957;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.8119;0.8399;0.8119;0.8127;0.7536;0.7723;0.7536;0.7566;0.7;0.7024;0.7;0.6957;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.776;0.8103;0.776;0.7764;0.8406;0.8831;0.8406;0.84;0.7;0.6987;0.7;0.6913;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.7955;0.8234;0.7955;0.7975;0.7971;0.7994;0.7971;0.798;0.6833;0.6801;0.6833;0.6794;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
LogisticRegression;0.8019;0.8249;0.8019;0.8024;0.7681;0.7902;0.7681;0.7734;0.6833;0.6801;0.6833;0.6794;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 876, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=876)"
LogisticRegression;0.789;0.811;0.789;0.7903;0.7971;0.8418;0.7971;0.8028;0.6667;0.6625;0.6667;0.6606;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 249, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=249)"
LogisticRegression;0.8035;0.828;0.8035;0.8061;0.7246;0.7678;0.7246;0.7178;0.6667;0.6636;0.6667;0.6571;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 110, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=110)"
