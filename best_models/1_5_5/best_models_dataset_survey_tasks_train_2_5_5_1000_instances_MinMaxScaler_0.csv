Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.855;0.8575;0.855;0.8555;0.8276;0.8312;0.8276;0.8286;0.8833;0.8875;0.8833;0.884;0.9468;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8461;0.8488;0.8461;0.8467;0.8351;0.8349;0.8351;0.8349;0.8833;0.884;0.8833;0.8833;0.9467;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.848;0.8498;0.848;0.8483;0.8454;0.8453;0.8454;0.8453;0.8833;0.884;0.8833;0.8833;0.9433;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8442;0.8455;0.8442;0.8444;0.8557;0.8583;0.8557;0.8563;0.8833;0.884;0.8833;0.8833;0.9444;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8668;0.8681;0.8668;0.8671;0.8931;0.8934;0.8931;0.8931;0.8833;0.884;0.8833;0.8833;0.9575;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
RandomForestClassifier;0.868;0.869;0.868;0.8682;0.8759;0.8759;0.8759;0.8758;0.8833;0.884;0.8833;0.8833;0.9566;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
RandomForestClassifier;0.8736;0.8747;0.8736;0.8736;0.8488;0.8563;0.8488;0.8493;0.8833;0.884;0.8833;0.8833;0.9585;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
KNeighborsClassifier;0.8423;0.8457;0.8423;0.8429;0.8586;0.8609;0.8586;0.8591;0.8833;0.884;0.8833;0.8833;0.9453;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8431;0.8459;0.8431;0.8437;0.8828;0.8841;0.8828;0.883;0.8833;0.884;0.8833;0.8833;0.9456;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8714;0.8727;0.8714;0.8716;0.8763;0.8776;0.8763;0.8751;0.8833;0.884;0.8833;0.8833;0.9573;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
RandomForestClassifier;0.8668;0.8682;0.8668;0.8671;0.8655;0.866;0.8655;0.8657;0.8833;0.884;0.8833;0.8833;0.9566;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
KNeighborsClassifier;0.8374;0.8403;0.8374;0.8377;0.8759;0.8761;0.8759;0.876;0.8833;0.884;0.8833;0.8833;0.9411;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8718;0.8734;0.8718;0.8719;0.8552;0.8591;0.8552;0.8561;0.8833;0.884;0.8833;0.8833;0.9606;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
KNeighborsClassifier;0.8408;0.843;0.8408;0.8413;0.8793;0.88;0.8793;0.8791;0.8833;0.886;0.8833;0.8832;0.9378;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8737;0.8748;0.8737;0.8738;0.8552;0.857;0.8552;0.8551;0.8833;0.8842;0.8833;0.8823;0.9558;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
KNeighborsClassifier;0.8408;0.8428;0.8408;0.8412;0.8931;0.894;0.8931;0.8931;0.8667;0.8746;0.8667;0.8674;0.9436;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8331;0.8362;0.8331;0.8336;0.9069;0.9085;0.9069;0.9074;0.8667;0.8692;0.8667;0.8669;0.9396;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8407;0.8439;0.8407;0.8408;0.8385;0.8417;0.8385;0.8394;0.8667;0.8692;0.8667;0.8669;0.9434;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8412;0.8439;0.8412;0.8414;0.8655;0.8676;0.8655;0.866;0.8667;0.8667;0.8667;0.8667;0.9406;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.858;0.8602;0.858;0.8583;0.8897;0.8899;0.8897;0.889;0.8667;0.8667;0.8667;0.8667;0.9563;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
RandomForestClassifier;0.8748;0.8764;0.8748;0.8749;0.8351;0.8355;0.8351;0.8344;0.8667;0.8673;0.8667;0.8666;0.9577;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
RandomForestClassifier;0.8683;0.8697;0.8683;0.8682;0.8625;0.8654;0.8625;0.863;0.8667;0.869;0.8667;0.8664;0.9581;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 379};RandomForestClassifier(n_estimators=10, random_state=379)
RandomForestClassifier;0.8779;0.8789;0.8779;0.8779;0.8419;0.8422;0.8419;0.842;0.8667;0.869;0.8667;0.8664;0.9603;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
RandomForestClassifier;0.8726;0.874;0.8726;0.8728;0.869;0.8735;0.869;0.8692;0.8667;0.869;0.8667;0.8664;0.9594;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 403};RandomForestClassifier(n_estimators=10, random_state=403)
RandomForestClassifier;0.8614;0.8629;0.8614;0.8615;0.8797;0.8805;0.8797;0.8799;0.8667;0.869;0.8667;0.8664;0.9581;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
KNeighborsClassifier;0.8396;0.8426;0.8396;0.8401;0.8797;0.88;0.8797;0.8795;0.8667;0.869;0.8667;0.8664;0.9408;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.874;0.8758;0.874;0.8741;0.8488;0.8493;0.8488;0.849;0.8667;0.8677;0.8667;0.8661;0.9578;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
RandomForestClassifier;0.868;0.8697;0.868;0.868;0.8828;0.8861;0.8828;0.8838;0.8667;0.8677;0.8667;0.8661;0.9591;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
RandomForestClassifier;0.8668;0.8681;0.8668;0.8671;0.8931;0.8965;0.8931;0.8922;0.8667;0.8677;0.8667;0.8661;0.9571;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
RandomForestClassifier;0.8753;0.8766;0.8753;0.8752;0.8621;0.8627;0.8621;0.8623;0.8667;0.875;0.8667;0.8658;0.9595;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
KNeighborsClassifier;0.8439;0.8469;0.8439;0.8444;0.8621;0.8684;0.8621;0.8635;0.85;0.862;0.85;0.8516;0.9419;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8324;0.8345;0.8324;0.8329;0.8655;0.8666;0.8655;0.8655;0.85;0.8625;0.85;0.8505;0.9432;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.7509;0.7601;0.7509;0.753;0.8069;0.8176;0.8069;0.8083;0.85;0.8554;0.85;0.8504;0.9104;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
RandomForestClassifier;0.863;0.8643;0.863;0.8629;0.8897;0.8919;0.8897;0.8899;0.85;0.8514;0.85;0.8504;0.9574;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
MLPClassifier;0.7455;0.7529;0.7455;0.7469;0.7897;0.8053;0.7897;0.792;0.85;0.8554;0.85;0.8504;0.909;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
RandomForestClassifier;0.8795;0.8825;0.8795;0.8797;0.8655;0.8652;0.8655;0.8649;0.85;0.85;0.85;0.85;0.9585;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
RandomForestClassifier;0.8664;0.8673;0.8664;0.8667;0.8763;0.8762;0.8763;0.8762;0.85;0.8505;0.85;0.8499;0.9579;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
RandomForestClassifier;0.8691;0.87;0.8691;0.8693;0.8621;0.8634;0.8621;0.8624;0.85;0.8505;0.85;0.8499;0.9581;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
RandomForestClassifier;0.8749;0.8763;0.8749;0.8751;0.8793;0.8814;0.8793;0.8797;0.85;0.8505;0.85;0.8499;0.9582;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
RandomForestClassifier;0.866;0.8674;0.866;0.8664;0.8586;0.8667;0.8586;0.8596;0.85;0.8505;0.85;0.8499;0.9574;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
RandomForestClassifier;0.8577;0.8589;0.8577;0.8577;0.9138;0.9185;0.9138;0.9145;0.85;0.8519;0.85;0.8498;0.9566;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
KNeighborsClassifier;0.8323;0.8368;0.8323;0.8333;0.8797;0.8827;0.8797;0.8785;0.85;0.8517;0.85;0.8498;0.9425;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8469;0.8502;0.8469;0.8476;0.8379;0.8389;0.8379;0.8377;0.85;0.8517;0.85;0.8498;0.9449;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8706;0.8716;0.8706;0.8706;0.8759;0.8761;0.8759;0.8759;0.85;0.8524;0.85;0.8497;0.958;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 379};RandomForestClassifier(n_estimators=20, random_state=379)
RandomForestClassifier;0.8775;0.8799;0.8775;0.8777;0.8591;0.8593;0.8591;0.859;0.85;0.8497;0.85;0.8495;0.9595;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
KNeighborsClassifier;0.8458;0.8488;0.8458;0.8464;0.8517;0.8527;0.8517;0.8521;0.85;0.8497;0.85;0.8495;0.9434;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8641;0.8655;0.8641;0.8645;0.8759;0.8753;0.8759;0.8754;0.85;0.8497;0.85;0.8495;0.9568;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 396};RandomForestClassifier(n_estimators=20, random_state=396)
KNeighborsClassifier;0.8423;0.8452;0.8423;0.8428;0.8414;0.8409;0.8414;0.8402;0.85;0.8497;0.85;0.8495;0.9452;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
RandomForestClassifier;0.8722;0.8732;0.8722;0.8724;0.8621;0.8673;0.8621;0.8629;0.85;0.855;0.85;0.8493;0.9601;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 396};RandomForestClassifier(n_estimators=10, random_state=396)
RandomForestClassifier;0.8622;0.8631;0.8622;0.8624;0.8897;0.8894;0.8897;0.8894;0.85;0.858;0.85;0.8492;0.9547;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
MLPClassifier;0.7546;0.7637;0.7546;0.7569;0.8247;0.828;0.8247;0.8257;0.85;0.8493;0.85;0.8486;0.9097;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
KNeighborsClassifier;0.8442;0.8492;0.8442;0.8449;0.831;0.8366;0.831;0.8318;0.8333;0.85;0.8333;0.8357;0.946;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8511;0.8529;0.8511;0.8515;0.8385;0.8394;0.8385;0.8376;0.8333;0.85;0.8333;0.8357;0.9434;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.8377;0.8408;0.8377;0.8381;0.8866;0.8871;0.8866;0.8865;0.8333;0.85;0.8333;0.8357;0.9429;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8476;0.8494;0.8476;0.8481;0.8522;0.8595;0.8522;0.8537;0.8333;0.85;0.8333;0.8357;0.9439;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8423;0.8455;0.8423;0.843;0.8241;0.832;0.8241;0.8259;0.8333;0.85;0.8333;0.8357;0.9444;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8473;0.8515;0.8473;0.8482;0.8759;0.8792;0.8759;0.8764;0.8333;0.85;0.8333;0.8357;0.947;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.837;0.8402;0.837;0.8375;0.8379;0.8404;0.8379;0.8376;0.8333;0.8404;0.8333;0.8342;0.943;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.7492;0.7578;0.7492;0.7508;0.8247;0.835;0.8247;0.8256;0.8333;0.8426;0.8333;0.8341;0.9094;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.7455;0.7534;0.7455;0.7474;0.8552;0.8609;0.8552;0.8563;0.8333;0.8365;0.8333;0.8339;0.9071;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
RandomForestClassifier;0.876;0.8773;0.876;0.876;0.8448;0.8452;0.8448;0.8449;0.8333;0.8348;0.8333;0.8337;0.9599;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 403};RandomForestClassifier(n_estimators=20, random_state=403)
MLPClassifier;0.7513;0.7589;0.7513;0.7531;0.8517;0.8526;0.8517;0.8516;0.8333;0.8331;0.8333;0.8329;0.9085;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
DecisionTreeClassifier;0.8507;0.8534;0.8507;0.8512;0.9;0.9008;0.9;0.9002;0.8333;0.8331;0.8333;0.8329;0.8879;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
MLPClassifier;0.7486;0.7561;0.7486;0.7505;0.8793;0.8788;0.8793;0.8783;0.8333;0.8331;0.8333;0.8329;0.9105;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.7455;0.7535;0.7455;0.7476;0.8517;0.8507;0.8517;0.8508;0.8333;0.8331;0.8333;0.8329;0.9099;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.7505;0.7558;0.7505;0.7521;0.8241;0.8286;0.8241;0.8238;0.8333;0.8374;0.8333;0.8328;0.9084;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
MLPClassifier;0.755;0.7635;0.755;0.757;0.8557;0.8582;0.8557;0.8558;0.8333;0.8374;0.8333;0.8328;0.9076;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
KNeighborsClassifier;0.8397;0.8426;0.8397;0.84;0.869;0.8701;0.869;0.8692;0.8333;0.8367;0.8333;0.8324;0.9461;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7471;0.7542;0.7471;0.7489;0.831;0.8311;0.831;0.8309;0.8333;0.8323;0.8333;0.8314;0.9095;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
MLPClassifier;0.7584;0.7643;0.7584;0.7599;0.8351;0.8343;0.8351;0.8344;0.8333;0.8323;0.8333;0.8314;0.9082;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
MLPClassifier;0.7501;0.7578;0.7501;0.7516;0.8414;0.8445;0.8414;0.8423;0.8333;0.8338;0.8333;0.8312;0.9092;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
KNeighborsClassifier;0.8419;0.8451;0.8419;0.8425;0.8345;0.8381;0.8345;0.8354;0.8167;0.8305;0.8167;0.8194;0.9401;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8362;0.8384;0.8362;0.8366;0.8724;0.8735;0.8724;0.8725;0.8167;0.8287;0.8167;0.819;0.9415;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
SVC;0.7508;0.758;0.7508;0.7528;0.8483;0.857;0.8483;0.8486;0.8167;0.8234;0.8167;0.8178;0.8886;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7528;0.7554;0.7528;0.753;0.8483;0.8677;0.8483;0.8509;0.8167;0.8234;0.8167;0.8178;0.8892;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7539;0.7624;0.7539;0.7556;0.8103;0.8243;0.8103;0.8126;0.8167;0.8234;0.8167;0.8178;0.8902;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
MLPClassifier;0.744;0.7523;0.744;0.7457;0.8517;0.8547;0.8517;0.8526;0.8167;0.8234;0.8167;0.8178;0.9065;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
SVC;0.7451;0.7528;0.7451;0.7462;0.8379;0.8743;0.8379;0.8417;0.8167;0.8304;0.8167;0.8176;0.8842;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7593;0.7695;0.7593;0.7606;0.7966;0.8263;0.7966;0.7972;0.8167;0.8304;0.8167;0.8176;0.8905;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7477;0.7527;0.7477;0.7492;0.8454;0.8598;0.8454;0.8462;0.8167;0.8304;0.8167;0.8176;0.889;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.7542;0.7622;0.7542;0.7563;0.7938;0.8225;0.7938;0.7956;0.8167;0.8304;0.8167;0.8176;0.8934;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7538;0.7613;0.7538;0.7556;0.8385;0.8623;0.8385;0.8404;0.8167;0.8304;0.8167;0.8176;0.8885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7417;0.7499;0.7417;0.7432;0.8103;0.8231;0.8103;0.8114;0.8167;0.8304;0.8167;0.8176;0.8893;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7532;0.7704;0.7532;0.7554;0.8448;0.8735;0.8448;0.8466;0.8167;0.8304;0.8167;0.8176;0.8905;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7524;0.765;0.7524;0.7546;0.8241;0.846;0.8241;0.8268;0.8167;0.8304;0.8167;0.8176;0.8914;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7424;0.7482;0.7424;0.7438;0.8207;0.8293;0.8207;0.8229;0.8167;0.8304;0.8167;0.8176;0.8885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7508;0.7589;0.7508;0.7529;0.8557;0.8661;0.8557;0.8558;0.8167;0.8304;0.8167;0.8176;0.8885;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7539;0.7616;0.7539;0.7556;0.8247;0.8549;0.8247;0.8271;0.8167;0.8304;0.8167;0.8176;0.892;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7538;0.7622;0.7538;0.7557;0.8247;0.8437;0.8247;0.8276;0.8167;0.8304;0.8167;0.8176;0.8899;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.7512;0.7595;0.7512;0.7532;0.8931;0.9043;0.8931;0.8943;0.8167;0.8304;0.8167;0.8176;0.8918;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7528;0.7591;0.7528;0.754;0.8414;0.8551;0.8414;0.8433;0.8167;0.8304;0.8167;0.8176;0.8888;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7524;0.7619;0.7524;0.754;0.7966;0.8283;0.7966;0.7997;0.8167;0.8304;0.8167;0.8176;0.8932;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7398;0.7477;0.7398;0.7417;0.8414;0.8709;0.8414;0.8443;0.8167;0.8304;0.8167;0.8176;0.8886;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.7534;0.7627;0.7534;0.7558;0.8041;0.8235;0.8041;0.8063;0.8167;0.8304;0.8167;0.8176;0.8919;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
SVC;0.7553;0.7645;0.7553;0.7565;0.8144;0.8455;0.8144;0.8177;0.8167;0.8304;0.8167;0.8176;0.8872;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.7616;0.7675;0.7616;0.7631;0.8103;0.8374;0.8103;0.8138;0.8167;0.8304;0.8167;0.8176;0.8913;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.747;0.7608;0.747;0.7496;0.8;0.8244;0.8;0.8015;0.8167;0.8304;0.8167;0.8176;0.8902;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.7524;0.7618;0.7524;0.7545;0.8379;0.8574;0.8379;0.8388;0.8167;0.8304;0.8167;0.8176;0.892;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.7497;0.7559;0.7497;0.7514;0.7931;0.8164;0.7931;0.7964;0.8167;0.8304;0.8167;0.8176;0.8883;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.7371;0.7447;0.7371;0.7386;0.8586;0.8677;0.8586;0.8601;0.8167;0.8304;0.8167;0.8176;0.8867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
DecisionTreeClassifier;0.85;0.8515;0.85;0.8502;0.8345;0.8385;0.8345;0.8357;0.8167;0.8224;0.8167;0.8173;0.8873;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)
DecisionTreeClassifier;0.8385;0.8398;0.8385;0.8386;0.8862;0.8878;0.8862;0.8863;0.8167;0.818;0.8167;0.817;0.8786;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8385;0.8398;0.8385;0.8388;0.869;0.8733;0.869;0.87;0.8167;0.818;0.8167;0.817;0.8787;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8442;0.8455;0.8442;0.8444;0.8931;0.8941;0.8931;0.8931;0.8167;0.818;0.8167;0.817;0.883;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)
DecisionTreeClassifier;0.8476;0.8497;0.8476;0.8477;0.8351;0.8351;0.8351;0.8351;0.8167;0.818;0.8167;0.817;0.8852;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
MLPClassifier;0.7496;0.7606;0.7496;0.752;0.8522;0.8521;0.8522;0.8521;0.8167;0.818;0.8167;0.817;0.9047;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
MLPClassifier;0.7558;0.7636;0.7558;0.7578;0.8517;0.8512;0.8517;0.8499;0.8167;0.818;0.8167;0.817;0.9098;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
KNeighborsClassifier;0.8335;0.8378;0.8335;0.8344;0.869;0.8728;0.869;0.8691;0.8167;0.8172;0.8167;0.8166;0.9443;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8492;0.85;0.8492;0.8494;0.8144;0.8256;0.8144;0.8154;0.8167;0.8175;0.8167;0.816;0.8867;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
MLPClassifier;0.7489;0.7543;0.7489;0.7501;0.8276;0.8304;0.8276;0.8286;0.8167;0.8175;0.8167;0.816;0.9073;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
DecisionTreeClassifier;0.8396;0.8414;0.8396;0.8396;0.8621;0.8653;0.8621;0.8628;0.8167;0.8175;0.8167;0.816;0.8792;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.84;0.841;0.84;0.8401;0.8729;0.8804;0.8729;0.8744;0.8167;0.8175;0.8167;0.816;0.8797;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
MLPClassifier;0.7493;0.7568;0.7493;0.7512;0.8138;0.8153;0.8138;0.8141;0.8167;0.8155;0.8167;0.8158;0.9089;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
DecisionTreeClassifier;0.8526;0.8545;0.8526;0.8527;0.8866;0.8867;0.8866;0.8866;0.8167;0.8166;0.8167;0.8156;0.889;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8408;0.8425;0.8408;0.8411;0.869;0.8741;0.869;0.87;0.8167;0.8166;0.8167;0.8156;0.8807;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)
MLPClassifier;0.7358;0.745;0.7358;0.7383;0.8729;0.8755;0.8729;0.8736;0.8167;0.8166;0.8167;0.8156;0.9058;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
MLPClassifier;0.7524;0.7601;0.7524;0.7545;0.8172;0.8163;0.8172;0.8163;0.8167;0.8166;0.8167;0.8156;0.9121;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
MLPClassifier;0.7519;0.7597;0.7519;0.754;0.8351;0.8356;0.8351;0.835;0.8167;0.8166;0.8167;0.8156;0.9085;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
MLPClassifier;0.749;0.7567;0.749;0.7506;0.7931;0.7966;0.7931;0.7921;0.8167;0.8166;0.8167;0.8156;0.9126;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
DecisionTreeClassifier;0.843;0.8447;0.843;0.843;0.89;0.8907;0.89;0.8902;0.8167;0.8195;0.8167;0.8148;0.8824;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=963)
SVC;0.7482;0.7566;0.7482;0.7504;0.8207;0.8446;0.8207;0.825;0.8;0.819;0.8;0.8014;0.8908;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
MLPClassifier;0.7578;0.7635;0.7578;0.759;0.7793;0.789;0.7793;0.7819;0.8;0.8109;0.8;0.8014;0.9106;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
MLPClassifier;0.7512;0.7596;0.7512;0.7533;0.8207;0.8286;0.8207;0.8225;0.8;0.8109;0.8;0.8014;0.9113;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
MLPClassifier;0.7555;0.7647;0.7555;0.7576;0.8345;0.8444;0.8345;0.8368;0.8;0.8038;0.8;0.801;0.9103;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 610, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=610)
DecisionTreeClassifier;0.8477;0.8495;0.8477;0.8477;0.8655;0.8665;0.8655;0.8657;0.8;0.8058;0.8;0.8007;0.8858;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8508;0.8515;0.8508;0.8507;0.8552;0.8606;0.8552;0.8558;0.8;0.8058;0.8;0.8007;0.8881;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.8435;0.8447;0.8435;0.8437;0.8414;0.845;0.8414;0.8422;0.8;0.8035;0.8;0.8005;0.8824;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=41)
MLPClassifier;0.7585;0.7661;0.7585;0.7604;0.8414;0.8508;0.8414;0.8419;0.8;0.8035;0.8;0.8005;0.9109;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
DecisionTreeClassifier;0.8393;0.8404;0.8393;0.8393;0.8966;0.9021;0.8966;0.8974;0.8;0.8035;0.8;0.8005;0.8792;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.8439;0.8457;0.8439;0.844;0.8586;0.8593;0.8586;0.8586;0.8;0.8035;0.8;0.8005;0.8826;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)
DecisionTreeClassifier;0.8423;0.8441;0.8423;0.8424;0.8488;0.8505;0.8488;0.8491;0.8;0.8089;0.8;0.8004;0.8822;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.8503;0.8517;0.8503;0.8507;0.866;0.8702;0.866;0.8664;0.8;0.8013;0.8;0.8003;0.8879;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)
DecisionTreeClassifier;0.8515;0.8522;0.8515;0.8517;0.8414;0.8418;0.8414;0.8415;0.8;0.8093;0.8;0.8;0.8892;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8431;0.845;0.8431;0.8433;0.8759;0.877;0.8759;0.8762;0.8;0.8005;0.8;0.7999;0.8821;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=963)
DecisionTreeClassifier;0.8351;0.8362;0.8351;0.8353;0.8828;0.8856;0.8828;0.8834;0.8;0.8005;0.8;0.7999;0.8759;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=41)
SVC;0.7482;0.7517;0.7482;0.7494;0.8276;0.8521;0.8276;0.8304;0.8;0.8124;0.8;0.7994;0.8891;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 987};SVC(C=10, probability=True, random_state=987)
SVC;0.742;0.7504;0.742;0.7439;0.8247;0.855;0.8247;0.827;0.8;0.8124;0.8;0.7994;0.8888;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 815};SVC(C=10, probability=True, random_state=815)
SVC;0.7478;0.7569;0.7478;0.749;0.7966;0.8319;0.7966;0.7993;0.8;0.8124;0.8;0.7994;0.8891;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 894};SVC(C=10, probability=True, random_state=894)
DecisionTreeClassifier;0.845;0.8465;0.845;0.8453;0.831;0.8438;0.831;0.83;0.8;0.8005;0.8;0.7989;0.8836;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=963)
DecisionTreeClassifier;0.8458;0.8468;0.8458;0.8459;0.8655;0.8679;0.8655;0.8661;0.8;0.8026;0.8;0.7989;0.8841;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
MLPClassifier;0.7523;0.7617;0.7523;0.7543;0.8797;0.8801;0.8797;0.8785;0.8;0.8005;0.8;0.7989;0.9072;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 96, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=96)
DecisionTreeClassifier;0.8403;0.8425;0.8403;0.8406;0.8488;0.8599;0.8488;0.8494;0.8;0.8005;0.8;0.7989;0.8798;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=963)
DecisionTreeClassifier;0.8488;0.8499;0.8488;0.8489;0.8552;0.8577;0.8552;0.8558;0.8;0.8005;0.8;0.7989;0.8865;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=41)
MLPClassifier;0.7405;0.7474;0.7405;0.7425;0.8207;0.8228;0.8207;0.8211;0.8;0.8008;0.8;0.7982;0.9058;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
DecisionTreeClassifier;0.8503;0.8522;0.8503;0.8502;0.8522;0.8565;0.8522;0.8532;0.8;0.8008;0.8;0.7982;0.8877;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=41)
DecisionTreeClassifier;0.8454;0.8461;0.8454;0.8455;0.8862;0.8889;0.8862;0.8868;0.8;0.8051;0.8;0.7977;0.8846;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)
MLPClassifier;0.7524;0.7591;0.7524;0.7541;0.7862;0.7866;0.7862;0.7849;0.7833;0.7904;0.7833;0.7847;0.9106;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
MLPClassifier;0.7527;0.7592;0.7527;0.7545;0.8419;0.8409;0.8419;0.8404;0.7833;0.7904;0.7833;0.7847;0.9088;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 411, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=411)
DecisionTreeClassifier;0.8404;0.842;0.8404;0.8405;0.8241;0.8236;0.8241;0.8227;0.7833;0.7853;0.7833;0.7819;0.8805;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)
DecisionTreeClassifier;0.8435;0.8453;0.8435;0.8437;0.8862;0.8881;0.8862;0.8866;0.7833;0.7856;0.7833;0.7805;0.8824;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 41};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=41)
LogisticRegression;0.6329;0.638;0.6329;0.6335;0.646;0.6572;0.646;0.646;0.7167;0.7231;0.7167;0.717;0.8115;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6341;0.641;0.6341;0.6351;0.6172;0.6255;0.6172;0.6167;0.7167;0.7254;0.7167;0.7169;0.8126;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6322;0.6396;0.6322;0.6334;0.6379;0.6556;0.6379;0.6363;0.7167;0.721;0.7167;0.7166;0.8134;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6352;0.6418;0.6352;0.6357;0.6186;0.6223;0.6186;0.6171;0.7167;0.7236;0.7167;0.715;0.8155;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6334;0.6393;0.6334;0.6337;0.6517;0.6522;0.6517;0.6518;0.7167;0.7236;0.7167;0.715;0.8153;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6397;0.6472;0.6397;0.6406;0.6082;0.6128;0.6082;0.6088;0.7167;0.7236;0.7167;0.715;0.8144;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6325;0.6368;0.6325;0.6327;0.6151;0.6218;0.6151;0.617;0.7;0.7091;0.7;0.7002;0.8117;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6307;0.6372;0.6307;0.6319;0.6345;0.6367;0.6345;0.6349;0.7;0.7091;0.7;0.7002;0.8138;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6357;0.6424;0.6357;0.6367;0.5862;0.5908;0.5862;0.5867;0.7;0.7091;0.7;0.7002;0.8159;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6322;0.6388;0.6322;0.6328;0.6138;0.6136;0.6138;0.6136;0.7;0.7091;0.7;0.7002;0.8156;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6337;0.6399;0.6337;0.635;0.631;0.6361;0.631;0.6308;0.7;0.7091;0.7;0.7002;0.8153;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6299;0.6356;0.6299;0.6306;0.6448;0.6462;0.6448;0.6449;0.7;0.7091;0.7;0.7002;0.8129;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6284;0.6347;0.6284;0.6291;0.6793;0.6814;0.6793;0.6792;0.7;0.7091;0.7;0.7002;0.8114;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6353;0.6414;0.6353;0.636;0.5897;0.5907;0.5897;0.5889;0.7;0.7091;0.7;0.7002;0.8155;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6332;0.6386;0.6332;0.634;0.6117;0.6182;0.6117;0.6103;0.7;0.7091;0.7;0.7002;0.8128;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6269;0.631;0.6269;0.6269;0.6448;0.645;0.6448;0.6449;0.7;0.7091;0.7;0.7002;0.8135;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6307;0.6372;0.6307;0.6313;0.6483;0.6551;0.6483;0.6508;0.7;0.7091;0.7;0.7002;0.8138;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6326;0.6381;0.6326;0.6332;0.6448;0.6501;0.6448;0.6449;0.7;0.7091;0.7;0.7002;0.8137;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6325;0.6387;0.6325;0.6335;0.6254;0.6247;0.6254;0.6248;0.7;0.7091;0.7;0.7002;0.8145;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6342;0.6402;0.6342;0.6352;0.6138;0.6338;0.6138;0.617;0.7;0.7091;0.7;0.7002;0.8143;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6365;0.6419;0.6365;0.6371;0.6586;0.6583;0.6586;0.6572;0.7;0.7091;0.7;0.7002;0.8116;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6271;0.6325;0.6271;0.6271;0.6632;0.6787;0.6632;0.665;0.7;0.6974;0.7;0.6951;0.8144;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6369;0.6417;0.6369;0.6365;0.6103;0.6234;0.6103;0.6073;0.7;0.6974;0.7;0.6951;0.8182;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.629;0.635;0.629;0.6297;0.6529;0.6539;0.6529;0.6532;0.6833;0.6931;0.6833;0.6832;0.8134;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 422, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=422)"
LogisticRegression;0.6376;0.6439;0.6376;0.6387;0.6103;0.619;0.6103;0.6103;0.6833;0.6931;0.6833;0.6832;0.8158;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6349;0.6415;0.6349;0.6357;0.5828;0.5857;0.5828;0.58;0.6833;0.6806;0.6833;0.6764;0.8156;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.6296;0.6351;0.6296;0.63;0.6724;0.6889;0.6724;0.6719;0.6833;0.6806;0.6833;0.6764;0.8141;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 367, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=367)"
LogisticRegression;0.629;0.6327;0.629;0.6293;0.6426;0.6524;0.6426;0.6436;0.6833;0.6806;0.6833;0.6764;0.8117;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6318;0.6389;0.6318;0.6325;0.6621;0.6769;0.6621;0.6641;0.6833;0.6806;0.6833;0.6764;0.8124;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
LogisticRegression;0.6253;0.631;0.6253;0.6262;0.6448;0.6557;0.6448;0.6453;0.6833;0.6806;0.6833;0.6764;0.8136;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 70, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=70)"
