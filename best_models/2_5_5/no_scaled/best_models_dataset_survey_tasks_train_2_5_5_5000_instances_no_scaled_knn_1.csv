Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9786;0.9786;0.9786;0.9786;0.9913;0.9914;0.9913;0.9913;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9803;0.9804;0.9803;0.9803;0.9833;0.9834;0.9833;0.9833;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9774;0.9775;0.9774;0.9774;0.9946;0.9946;0.9946;0.9946;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9791;0.9792;0.9791;0.9791;0.9886;0.9887;0.9886;0.9886;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9777;0.9777;0.9777;0.9777;0.988;0.988;0.988;0.988;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9791;0.9791;0.9791;0.9791;0.994;0.994;0.994;0.994;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9784;0.9784;0.9784;0.9783;0.99;0.99;0.99;0.99;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9799;0.98;0.9799;0.9799;0.9893;0.9893;0.9893;0.9893;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9779;0.978;0.9779;0.9779;0.992;0.992;0.992;0.992;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9787;0.9787;0.9787;0.9786;0.9933;0.9933;0.9933;0.9933;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9795;0.9795;0.9795;0.9795;0.9933;0.9933;0.9933;0.9933;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9794;0.9794;0.9794;0.9794;0.9946;0.9947;0.9946;0.9946;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9795;0.9796;0.9795;0.9795;0.9866;0.9867;0.9866;0.9866;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.979;0.9791;0.979;0.979;0.9846;0.9846;0.9846;0.9846;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9798;0.9798;0.9798;0.9798;0.9893;0.9893;0.9893;0.9893;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.979;0.9791;0.979;0.979;0.9926;0.9926;0.9926;0.9926;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9789;0.9789;0.9789;0.9789;0.99;0.99;0.99;0.99;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9778;0.9779;0.9778;0.9778;0.9926;0.9926;0.9926;0.9926;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9796;0.9797;0.9796;0.9796;0.99;0.99;0.99;0.99;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9797;0.9798;0.9797;0.9797;0.9906;0.9906;0.9906;0.9906;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9775;0.9776;0.9775;0.9775;0.9933;0.9934;0.9933;0.9933;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9786;0.9786;0.9786;0.9786;0.9906;0.9907;0.9906;0.9906;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9786;0.9786;0.9786;0.9786;0.9893;0.9893;0.9893;0.9893;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9769;0.9769;0.9769;0.9768;0.99;0.9901;0.99;0.99;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.979;0.9791;0.979;0.979;0.992;0.992;0.992;0.992;0.9;0.9015;0.9;0.9004;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9793;0.9793;0.9793;0.9792;0.994;0.994;0.994;0.994;0.8833;0.884;0.8833;0.8833;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9798;0.9799;0.9798;0.9798;0.99;0.99;0.99;0.99;0.8833;0.884;0.8833;0.8833;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9794;0.9794;0.9794;0.9794;0.9886;0.9886;0.9886;0.9886;0.8833;0.884;0.8833;0.8833;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.979;0.979;0.979;0.9789;0.9886;0.9886;0.9886;0.9886;0.8833;0.884;0.8833;0.8833;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9784;0.9785;0.9784;0.9784;0.9839;0.9839;0.9839;0.9839;0.8667;0.8677;0.8667;0.8661;smote;5000;no_scaled;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
