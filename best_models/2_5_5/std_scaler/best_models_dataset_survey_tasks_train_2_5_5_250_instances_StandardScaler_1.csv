Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9147;0.9186;0.9147;0.9145;0.8696;0.8751;0.8696;0.8677;0.9;0.9061;0.9;0.9015;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
RandomForestClassifier;0.9098;0.916;0.9098;0.91;0.971;0.9716;0.971;0.971;0.8833;0.8918;0.8833;0.8847;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
RandomForestClassifier;0.9146;0.9188;0.9146;0.9157;0.9275;0.9333;0.9275;0.9266;0.8833;0.8918;0.8833;0.8847;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
RandomForestClassifier;0.9146;0.9213;0.9146;0.9148;0.9565;0.9594;0.9565;0.9558;0.8833;0.8875;0.8833;0.884;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
KNeighborsClassifier;0.8261;0.8367;0.8261;0.8274;0.8841;0.8836;0.8841;0.8819;0.8833;0.8848;0.8833;0.8837;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.855;0.862;0.855;0.8557;0.8696;0.8689;0.8696;0.8681;0.8833;0.8848;0.8833;0.8837;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.921;0.9271;0.921;0.9207;0.8841;0.8847;0.8841;0.8819;0.8833;0.8884;0.8833;0.8834;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
DecisionTreeClassifier;0.8599;0.8669;0.8599;0.8591;0.8406;0.8483;0.8406;0.8347;0.8833;0.8827;0.8833;0.8815;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
DecisionTreeClassifier;0.8631;0.8737;0.8631;0.8631;0.8986;0.8976;0.8986;0.8972;0.8833;0.8844;0.8833;0.8814;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
KNeighborsClassifier;0.8519;0.8599;0.8519;0.8523;0.8551;0.8665;0.8551;0.8568;0.8667;0.8739;0.8667;0.8679;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9098;0.9166;0.9098;0.9103;0.913;0.9135;0.913;0.913;0.8667;0.8739;0.8667;0.8679;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
KNeighborsClassifier;0.8407;0.8527;0.8407;0.8411;0.913;0.9142;0.913;0.9133;0.8667;0.873;0.8667;0.8675;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8229;0.8347;0.8229;0.8232;0.9275;0.931;0.9275;0.9281;0.8667;0.873;0.8667;0.8675;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8503;0.8629;0.8503;0.8519;0.8551;0.8556;0.8551;0.8542;0.8667;0.873;0.8667;0.8675;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8406;0.8498;0.8406;0.8404;0.8841;0.8924;0.8841;0.8856;0.8667;0.869;0.8667;0.8674;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8454;0.8544;0.8454;0.8459;0.8841;0.8846;0.8841;0.884;0.8667;0.869;0.8667;0.8674;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9146;0.9175;0.9146;0.9143;0.9275;0.9297;0.9275;0.9278;0.8667;0.8704;0.8667;0.8674;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
RandomForestClassifier;0.9227;0.9259;0.9227;0.9228;0.9275;0.9293;0.9275;0.9281;0.8667;0.8704;0.8667;0.8674;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
DecisionTreeClassifier;0.8647;0.8705;0.8647;0.8644;0.8841;0.8885;0.8841;0.8852;0.8667;0.8705;0.8667;0.8672;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
RandomForestClassifier;0.9163;0.9232;0.9163;0.9166;0.8841;0.8859;0.8841;0.8839;0.8667;0.8681;0.8667;0.867;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 735};RandomForestClassifier(n_estimators=10, random_state=735)
MLPClassifier;0.8261;0.8332;0.8261;0.8263;0.8986;0.9105;0.8986;0.8981;0.8667;0.8681;0.8667;0.867;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
RandomForestClassifier;0.9211;0.9254;0.9211;0.9214;0.8696;0.8719;0.8696;0.8705;0.8667;0.8692;0.8667;0.8669;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
DecisionTreeClassifier;0.8922;0.8966;0.8922;0.8922;0.6957;0.7417;0.6957;0.6937;0.8667;0.8677;0.8667;0.8661;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
DecisionTreeClassifier;0.8856;0.892;0.8856;0.8851;0.7971;0.7937;0.7971;0.7946;0.8667;0.8656;0.8667;0.8658;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
DecisionTreeClassifier;0.8905;0.8996;0.8905;0.8904;0.7826;0.7892;0.7826;0.7792;0.8667;0.866;0.8667;0.8648;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
DecisionTreeClassifier;0.8664;0.8711;0.8664;0.866;0.8696;0.8687;0.8696;0.8689;0.8667;0.8746;0.8667;0.8624;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
MLPClassifier;0.8245;0.8324;0.8245;0.8238;0.942;0.9506;0.942;0.9427;0.85;0.8611;0.85;0.8517;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
KNeighborsClassifier;0.8374;0.8438;0.8374;0.8375;0.8986;0.9062;0.8986;0.8979;0.85;0.8611;0.85;0.8517;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8276;0.8388;0.8276;0.8262;0.8986;0.9003;0.8986;0.8991;0.85;0.8611;0.85;0.8517;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.868;0.8705;0.868;0.8679;0.8696;0.8824;0.8696;0.8714;0.85;0.8575;0.85;0.8515;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
RandomForestClassifier;0.9275;0.933;0.9275;0.9274;0.942;0.942;0.942;0.9417;0.85;0.8557;0.85;0.8514;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
SVC;0.7698;0.7905;0.7698;0.7722;0.7971;0.8199;0.7971;0.802;0.85;0.8541;0.85;0.851;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
MLPClassifier;0.8229;0.8314;0.8229;0.822;0.913;0.931;0.913;0.915;0.85;0.8541;0.85;0.851;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
SVC;0.7762;0.8;0.7762;0.7786;0.8261;0.8323;0.8261;0.8267;0.85;0.8541;0.85;0.851;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7841;0.8084;0.7841;0.7864;0.8551;0.858;0.8551;0.8532;0.85;0.8541;0.85;0.851;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
KNeighborsClassifier;0.8566;0.8634;0.8566;0.8575;0.8406;0.8611;0.8406;0.8419;0.85;0.8564;0.85;0.8508;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8454;0.8541;0.8454;0.8459;0.9275;0.9328;0.9275;0.9283;0.85;0.8564;0.85;0.8508;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8455;0.8505;0.8455;0.8458;0.9275;0.9347;0.9275;0.9279;0.85;0.8564;0.85;0.8508;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9034;0.9082;0.9034;0.9039;0.9565;0.9615;0.9565;0.9563;0.85;0.857;0.85;0.8508;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
KNeighborsClassifier;0.8487;0.8562;0.8487;0.8495;0.8406;0.8515;0.8406;0.8427;0.85;0.8564;0.85;0.8508;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9227;0.9287;0.9227;0.9227;0.8986;0.9047;0.8986;0.8991;0.85;0.857;0.85;0.8508;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
DecisionTreeClassifier;0.8856;0.8904;0.8856;0.8859;0.8696;0.8713;0.8696;0.8701;0.85;0.8625;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
MLPClassifier;0.8277;0.8327;0.8277;0.8279;0.913;0.9209;0.913;0.913;0.85;0.8539;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
MLPClassifier;0.8261;0.8329;0.8261;0.8256;0.8406;0.8422;0.8406;0.8411;0.85;0.8539;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
MLPClassifier;0.8244;0.8326;0.8244;0.8235;0.8696;0.8696;0.8696;0.8696;0.85;0.8539;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
MLPClassifier;0.8068;0.8108;0.8068;0.8057;0.9565;0.9571;0.9565;0.9565;0.85;0.8539;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
DecisionTreeClassifier;0.8744;0.8791;0.8744;0.8738;0.8841;0.8926;0.8841;0.885;0.85;0.8539;0.85;0.8505;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
KNeighborsClassifier;0.8422;0.8511;0.8422;0.8426;0.8696;0.8715;0.8696;0.8687;0.85;0.8514;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.921;0.9249;0.921;0.9211;0.8841;0.8956;0.8841;0.8864;0.85;0.8514;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
RandomForestClassifier;0.9177;0.9203;0.9177;0.9176;0.8986;0.9006;0.8986;0.8984;0.85;0.8563;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 612};RandomForestClassifier(n_estimators=10, random_state=612)
KNeighborsClassifier;0.8342;0.8401;0.8342;0.8336;0.8551;0.8653;0.8551;0.8517;0.85;0.8514;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.905;0.9115;0.905;0.9056;0.942;0.942;0.942;0.9417;0.85;0.8554;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
RandomForestClassifier;0.913;0.9186;0.913;0.9137;0.9275;0.9312;0.9275;0.9274;0.85;0.8514;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
DecisionTreeClassifier;0.8809;0.8876;0.8809;0.8803;0.6812;0.6742;0.6812;0.6633;0.85;0.8513;0.85;0.8503;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
MLPClassifier;0.8454;0.8522;0.8454;0.8458;0.8116;0.8257;0.8116;0.8118;0.85;0.85;0.85;0.85;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
KNeighborsClassifier;0.8437;0.8526;0.8437;0.8439;0.9275;0.9342;0.9275;0.9282;0.85;0.8623;0.85;0.85;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.802;0.8063;0.802;0.8015;0.8986;0.9006;0.8986;0.8984;0.85;0.85;0.85;0.85;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
RandomForestClassifier;0.9049;0.9082;0.9049;0.9047;0.913;0.9138;0.913;0.9123;0.85;0.8506;0.85;0.8499;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
KNeighborsClassifier;0.8616;0.8691;0.8616;0.862;0.8551;0.8697;0.8551;0.8565;0.85;0.8505;0.85;0.8499;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8808;0.8858;0.8808;0.8809;0.8696;0.8783;0.8696;0.8709;0.85;0.8591;0.85;0.8495;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
DecisionTreeClassifier;0.8728;0.8758;0.8728;0.8724;0.8116;0.812;0.8116;0.8115;0.85;0.8508;0.85;0.849;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
KNeighborsClassifier;0.855;0.8641;0.855;0.855;0.8261;0.8314;0.8261;0.827;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8552;0.8645;0.8552;0.8562;0.8841;0.8824;0.8841;0.8824;0.8333;0.8489;0.8333;0.8352;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9114;0.9169;0.9114;0.9107;0.9565;0.9615;0.9565;0.957;0.8333;0.8434;0.8333;0.8352;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
MLPClassifier;0.818;0.8258;0.818;0.8185;0.942;0.942;0.942;0.942;0.8333;0.8409;0.8333;0.8349;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
MLPClassifier;0.8164;0.821;0.8164;0.8163;0.9275;0.9297;0.9275;0.9278;0.8333;0.8409;0.8333;0.8349;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
KNeighborsClassifier;0.8518;0.8597;0.8518;0.8512;0.8841;0.8983;0.8841;0.8855;0.8333;0.8391;0.8333;0.8348;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8471;0.8547;0.8471;0.8468;0.8841;0.889;0.8841;0.8847;0.8333;0.8391;0.8333;0.8348;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8454;0.8509;0.8454;0.8459;0.8841;0.8862;0.8841;0.8839;0.8333;0.8391;0.8333;0.8348;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8423;0.8473;0.8423;0.8427;0.8841;0.8874;0.8841;0.8838;0.8333;0.8391;0.8333;0.8348;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9211;0.925;0.9211;0.9215;0.942;0.9448;0.942;0.9426;0.8333;0.8444;0.8333;0.8345;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
MLPClassifier;0.8342;0.8425;0.8342;0.835;0.8986;0.9003;0.8986;0.8991;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
SVC;0.7761;0.8016;0.7761;0.7796;0.8986;0.9222;0.8986;0.9002;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7762;0.803;0.7762;0.7783;0.8696;0.8796;0.8696;0.8685;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7826;0.806;0.7826;0.7847;0.8261;0.8477;0.8261;0.8291;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
SVC;0.7794;0.7997;0.7794;0.7812;0.7971;0.797;0.7971;0.7963;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
SVC;0.7875;0.8082;0.7875;0.7891;0.8406;0.8479;0.8406;0.8419;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
SVC;0.7892;0.8103;0.7892;0.7906;0.8406;0.8392;0.8406;0.8396;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7875;0.8055;0.7875;0.7898;0.8406;0.8556;0.8406;0.8435;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
RandomForestClassifier;0.9196;0.9233;0.9196;0.9197;0.8841;0.8917;0.8841;0.8834;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
SVC;0.773;0.7948;0.773;0.7752;0.8986;0.9071;0.8986;0.8988;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
SVC;0.7843;0.8075;0.7843;0.7865;0.8696;0.87;0.8696;0.8695;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
SVC;0.7906;0.8117;0.7906;0.7918;0.913;0.9136;0.913;0.913;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7778;0.8041;0.7778;0.7803;0.8986;0.8984;0.8986;0.8982;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.773;0.8015;0.773;0.7732;0.9275;0.9287;0.9275;0.9278;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
SVC;0.7795;0.8049;0.7795;0.7815;0.8696;0.8794;0.8696;0.8701;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
SVC;0.7811;0.8063;0.7811;0.7827;0.8841;0.8939;0.8841;0.8846;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
SVC;0.7843;0.8072;0.7843;0.7855;0.913;0.9123;0.913;0.9124;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
SVC;0.7777;0.7969;0.7777;0.7799;0.8696;0.874;0.8696;0.8707;0.8333;0.8355;0.8333;0.8341;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
KNeighborsClassifier;0.8341;0.8419;0.8341;0.8358;0.8841;0.8889;0.8841;0.8844;0.8333;0.8446;0.8333;0.834;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8422;0.8483;0.8422;0.8418;0.8841;0.8871;0.8841;0.8845;0.8333;0.8365;0.8333;0.8339;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8663;0.8721;0.8663;0.8657;0.8986;0.8983;0.8986;0.8964;0.8333;0.8405;0.8333;0.8338;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
MLPClassifier;0.8133;0.8192;0.8133;0.8132;0.971;0.971;0.971;0.971;0.8333;0.8347;0.8333;0.8337;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
DecisionTreeClassifier;0.8567;0.8639;0.8567;0.8559;0.942;0.9455;0.942;0.9426;0.8333;0.836;0.8333;0.8335;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
DecisionTreeClassifier;0.8905;0.8958;0.8905;0.89;0.8986;0.8984;0.8986;0.8982;0.8333;0.836;0.8333;0.8335;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
DecisionTreeClassifier;0.8729;0.8809;0.8729;0.8723;0.8551;0.8562;0.8551;0.8553;0.8333;0.8428;0.8333;0.8333;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
RandomForestClassifier;0.9146;0.9209;0.9146;0.9144;0.8986;0.9141;0.8986;0.8991;0.8333;0.8331;0.8333;0.8329;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
RandomForestClassifier;0.9164;0.9197;0.9164;0.9164;0.9565;0.9615;0.9565;0.9563;0.8333;0.8341;0.8333;0.8327;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
RandomForestClassifier;0.9131;0.918;0.9131;0.9126;0.913;0.9136;0.913;0.913;0.8333;0.8322;0.8333;0.8324;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
DecisionTreeClassifier;0.8776;0.8836;0.8776;0.8775;0.8551;0.8664;0.8551;0.8555;0.8333;0.836;0.8333;0.832;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
KNeighborsClassifier;0.8535;0.8588;0.8535;0.8535;0.8551;0.8589;0.8551;0.855;0.8167;0.8373;0.8167;0.8184;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8874;0.8924;0.8874;0.8869;0.8551;0.8576;0.8551;0.8556;0.8167;0.826;0.8167;0.8183;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
MLPClassifier;0.8228;0.8357;0.8228;0.8223;0.8986;0.899;0.8986;0.8985;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
MLPClassifier;0.8148;0.8191;0.8148;0.8142;0.9275;0.9293;0.9275;0.9281;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
SVC;0.7858;0.8079;0.7858;0.7882;0.8261;0.8394;0.8261;0.8245;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
MLPClassifier;0.8278;0.839;0.8278;0.8276;0.9275;0.9274;0.9275;0.9272;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8149;0.8231;0.8149;0.8144;0.8696;0.8709;0.8696;0.8694;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
MLPClassifier;0.823;0.8336;0.823;0.8238;0.913;0.9146;0.913;0.9119;0.8167;0.8224;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
MLPClassifier;0.8293;0.837;0.8293;0.8295;0.942;0.9455;0.942;0.9426;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8261;0.8346;0.8261;0.827;0.913;0.9238;0.913;0.9138;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
MLPClassifier;0.8294;0.8342;0.8294;0.8289;0.942;0.9506;0.942;0.9416;0.8167;0.8214;0.8167;0.8181;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
RandomForestClassifier;0.9115;0.9201;0.9115;0.9116;0.8551;0.8681;0.8551;0.8582;0.8167;0.8221;0.8167;0.818;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
DecisionTreeClassifier;0.8793;0.8836;0.8793;0.879;0.8986;0.8989;0.8986;0.8967;0.8167;0.8221;0.8167;0.818;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
KNeighborsClassifier;0.8566;0.8677;0.8566;0.856;0.8696;0.8709;0.8696;0.8694;0.8167;0.8234;0.8167;0.8178;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8485;0.8548;0.8485;0.849;0.8551;0.8634;0.8551;0.8567;0.8167;0.8189;0.8167;0.8174;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.7892;0.8085;0.7892;0.7898;0.8406;0.8425;0.8406;0.8404;0.8167;0.8201;0.8167;0.8173;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
SVC;0.7859;0.8102;0.7859;0.7866;0.8406;0.8433;0.8406;0.8411;0.8167;0.8201;0.8167;0.8173;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
RandomForestClassifier;0.9163;0.9198;0.9163;0.9166;0.942;0.9461;0.942;0.9419;0.8167;0.8238;0.8167;0.8172;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 612};RandomForestClassifier(n_estimators=5, random_state=612)
MLPClassifier;0.8294;0.8348;0.8294;0.8294;0.8261;0.8284;0.8261;0.827;0.8167;0.8181;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
RandomForestClassifier;0.9211;0.925;0.9211;0.9217;0.8696;0.8691;0.8696;0.8685;0.8167;0.818;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 735};RandomForestClassifier(n_estimators=20, random_state=735)
SVC;0.7843;0.8067;0.7843;0.7859;0.8551;0.8561;0.8551;0.8553;0.8167;0.8181;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
RandomForestClassifier;0.9082;0.9143;0.9082;0.909;0.913;0.913;0.913;0.913;0.8167;0.8181;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
SVC;0.781;0.8064;0.781;0.7826;0.8696;0.8758;0.8696;0.869;0.8167;0.8181;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 350};SVC(C=10, random_state=350)
SVC;0.7858;0.8115;0.7858;0.7887;0.8261;0.83;0.8261;0.8261;0.8167;0.8181;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
DecisionTreeClassifier;0.8857;0.8886;0.8857;0.8856;0.8551;0.8608;0.8551;0.8555;0.8167;0.8167;0.8167;0.8167;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
MLPClassifier;0.8277;0.8345;0.8277;0.8271;0.8261;0.8301;0.8261;0.8257;0.8167;0.8167;0.8167;0.8167;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8164;0.8211;0.8164;0.8154;0.8696;0.8708;0.8696;0.8683;0.8167;0.8167;0.8167;0.8167;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
DecisionTreeClassifier;0.8632;0.8706;0.8632;0.8626;0.8551;0.8568;0.8551;0.8557;0.8167;0.8164;0.8167;0.8162;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
DecisionTreeClassifier;0.8696;0.8763;0.8696;0.8694;0.8696;0.8709;0.8696;0.8694;0.8167;0.8172;0.8167;0.8155;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
DecisionTreeClassifier;0.8631;0.8672;0.8631;0.8627;0.8986;0.9079;0.8986;0.8983;0.8167;0.8147;0.8167;0.8154;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
DecisionTreeClassifier;0.8646;0.8686;0.8646;0.8643;0.7826;0.783;0.7826;0.7825;0.8167;0.8153;0.8167;0.8104;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
DecisionTreeClassifier;0.8664;0.8714;0.8664;0.8661;0.8551;0.8657;0.8551;0.8543;0.8;0.8079;0.8;0.8018;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
KNeighborsClassifier;0.8373;0.8463;0.8373;0.8382;0.9565;0.9571;0.9565;0.9565;0.8;0.8102;0.8;0.8014;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.7826;0.8039;0.7826;0.7844;0.8261;0.8253;0.8261;0.8254;0.8;0.8054;0.8;0.8013;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
MLPClassifier;0.8134;0.8207;0.8134;0.8128;0.913;0.9147;0.913;0.913;0.8;0.803;0.8;0.8012;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
RandomForestClassifier;0.9131;0.9166;0.9131;0.9133;0.8696;0.8803;0.8696;0.871;0.8;0.8021;0.8;0.8007;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 612};RandomForestClassifier(n_estimators=20, random_state=612)
SVC;0.781;0.803;0.781;0.7829;0.9275;0.9305;0.9275;0.9271;0.8;0.8039;0.8;0.8005;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
SVC;0.7793;0.8047;0.7793;0.781;0.8696;0.8707;0.8696;0.8698;0.8;0.8039;0.8;0.8005;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
DecisionTreeClassifier;0.8745;0.8805;0.8745;0.8741;0.7971;0.8051;0.7971;0.7994;0.8;0.799;0.8;0.7985;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
DecisionTreeClassifier;0.8872;0.8929;0.8872;0.8873;0.8551;0.8583;0.8551;0.8547;0.7833;0.7902;0.7833;0.7855;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 805};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=805)
MLPClassifier;0.8374;0.846;0.8374;0.8379;0.8551;0.8542;0.8551;0.8536;0.7833;0.7855;0.7833;0.7841;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.802;0.8093;0.802;0.8012;0.8841;0.8862;0.8841;0.8839;0.7833;0.7855;0.7833;0.7841;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 748, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=748)
RandomForestClassifier;0.9115;0.9164;0.9115;0.9116;0.942;0.942;0.942;0.942;0.7833;0.7855;0.7833;0.7841;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 733};RandomForestClassifier(n_estimators=20, random_state=733)
SVC;0.7826;0.8069;0.7826;0.7856;0.8551;0.8542;0.8551;0.8544;0.7833;0.7821;0.7833;0.7824;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
SVC;0.7843;0.8051;0.7843;0.7867;0.8841;0.8862;0.8841;0.8839;0.7833;0.7854;0.7833;0.7822;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 793};SVC(C=10, random_state=793)
DecisionTreeClassifier;0.8825;0.8863;0.8825;0.8822;0.8551;0.8594;0.8551;0.8517;0.7833;0.7793;0.7833;0.7791;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 140};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=140)
MLPClassifier;0.8308;0.8359;0.8308;0.8302;0.8841;0.8913;0.8841;0.8842;0.7667;0.7687;0.7667;0.7668;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.826;0.8292;0.826;0.8258;0.9275;0.9326;0.9275;0.9274;0.7667;0.7687;0.7667;0.7668;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=679)
MLPClassifier;0.8245;0.8328;0.8245;0.8243;0.8986;0.9032;0.8986;0.8997;0.7667;0.7687;0.7667;0.7668;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 107, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=107)
DecisionTreeClassifier;0.863;0.8686;0.863;0.8638;0.7536;0.7515;0.7536;0.7519;0.7667;0.7662;0.7667;0.7622;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 419};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=419)
LogisticRegression;0.6813;0.6874;0.6813;0.6794;0.6377;0.6555;0.6377;0.6388;0.7333;0.7369;0.7333;0.7338;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6682;0.6707;0.6682;0.6649;0.7246;0.7289;0.7246;0.725;0.7167;0.7202;0.7167;0.7163;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6779;0.6886;0.6779;0.6748;0.6522;0.6524;0.6522;0.6486;0.7167;0.7202;0.7167;0.7163;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6875;0.6938;0.6875;0.6865;0.6232;0.6612;0.6232;0.6198;0.7167;0.7202;0.7167;0.7163;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6956;0.702;0.6956;0.6947;0.5942;0.6014;0.5942;0.5952;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6635;0.6719;0.6635;0.6628;0.8406;0.846;0.8406;0.8387;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6667;0.6704;0.6667;0.6635;0.7246;0.7255;0.7246;0.7229;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6875;0.6936;0.6875;0.6844;0.5942;0.6019;0.5942;0.5922;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6795;0.6903;0.6795;0.6771;0.6957;0.725;0.6957;0.6956;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6795;0.6874;0.6795;0.6782;0.6957;0.7104;0.6957;0.6959;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.686;0.6923;0.686;0.6842;0.6812;0.6807;0.6812;0.6807;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6764;0.6793;0.6764;0.6742;0.6812;0.6905;0.6812;0.6827;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6875;0.6956;0.6875;0.6859;0.6377;0.6552;0.6377;0.6411;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6892;0.6999;0.6892;0.6878;0.6812;0.6952;0.6812;0.6707;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6877;0.6967;0.6877;0.6875;0.6232;0.6247;0.6232;0.6221;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6699;0.6741;0.6699;0.6684;0.6957;0.7045;0.6957;0.6899;0.7;0.7081;0.7;0.7028;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6795;0.6866;0.6795;0.676;0.7101;0.7143;0.7101;0.6994;0.7;0.7051;0.7;0.7013;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6845;0.6887;0.6845;0.6837;0.6377;0.6676;0.6377;0.6417;0.7;0.7037;0.7;0.6986;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6812;0.6891;0.6812;0.6791;0.6957;0.6971;0.6957;0.6962;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.67;0.6801;0.67;0.6668;0.7101;0.7123;0.7101;0.7083;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6747;0.683;0.6747;0.671;0.7246;0.7253;0.7246;0.7219;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6779;0.683;0.6779;0.6752;0.7246;0.7368;0.7246;0.7228;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6667;0.6732;0.6667;0.6646;0.7681;0.7684;0.7681;0.768;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.689;0.6974;0.689;0.6871;0.6812;0.6881;0.6812;0.6749;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
LogisticRegression;0.6828;0.6929;0.6828;0.682;0.6087;0.6233;0.6087;0.6001;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6765;0.6845;0.6765;0.6761;0.7391;0.74;0.7391;0.7379;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.686;0.695;0.686;0.6834;0.7681;0.7685;0.7681;0.7676;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6891;0.699;0.6891;0.6849;0.6812;0.6826;0.6812;0.6805;0.6833;0.6905;0.6833;0.6859;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 161, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=161)"
LogisticRegression;0.6778;0.6872;0.6778;0.6762;0.6522;0.665;0.6522;0.6495;0.6667;0.6763;0.6667;0.6703;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 965, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=965)"
LogisticRegression;0.6812;0.6941;0.6812;0.6772;0.7101;0.7079;0.7101;0.7088;0.6167;0.6302;0.6167;0.6212;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 94, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=94)"
