Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8342;0.8506;0.8342;0.8343;0.8406;0.8526;0.8406;0.8422;0.8333;0.8333;0.8333;0.8333;0.9335;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
RandomForestClassifier;0.9163;0.9209;0.9163;0.9164;0.942;0.9455;0.942;0.9426;0.8333;0.8465;0.8333;0.8328;0.9842;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
RandomForestClassifier;0.9259;0.9302;0.9259;0.926;0.8986;0.8986;0.8986;0.8986;0.8333;0.8465;0.8333;0.8328;0.9865;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
RandomForestClassifier;0.9164;0.9221;0.9164;0.9165;0.942;0.9441;0.942;0.9419;0.8333;0.8437;0.8333;0.8325;0.9875;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
RandomForestClassifier;0.9178;0.9233;0.9178;0.9176;0.9565;0.9582;0.9565;0.9565;0.8333;0.8431;0.8333;0.8323;0.9833;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
SVC;0.636;0.7098;0.636;0.6191;0.8551;0.8625;0.8551;0.857;0.8333;0.8338;0.8333;0.8322;0.7701;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 523};SVC(C=10, kernel='linear', probability=True, random_state=523)
RandomForestClassifier;0.9147;0.9201;0.9147;0.9144;0.9565;0.9583;0.9565;0.9565;0.8333;0.838;0.8333;0.8317;0.9844;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
SVC;0.6215;0.6998;0.6215;0.6091;0.8116;0.8497;0.8116;0.8135;0.8167;0.8189;0.8167;0.8174;0.7837;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 774};SVC(C=1, kernel='linear', probability=True, random_state=774)
RandomForestClassifier;0.9163;0.9225;0.9163;0.9159;0.913;0.9163;0.913;0.9135;0.8167;0.819;0.8167;0.8168;0.9875;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
SVC;0.6215;0.7036;0.6215;0.6026;0.7971;0.8006;0.7971;0.7981;0.8167;0.819;0.8167;0.8168;0.7766;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 523};SVC(C=10, kernel='linear', probability=True, random_state=523)
SVC;0.6393;0.7148;0.6393;0.6245;0.7681;0.8019;0.7681;0.7715;0.8167;0.8172;0.8167;0.8166;0.7874;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 774};SVC(C=10, kernel='linear', probability=True, random_state=774)
RandomForestClassifier;0.9211;0.9261;0.9211;0.9211;0.8841;0.8827;0.8841;0.8831;0.8167;0.8248;0.8167;0.8165;0.9875;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
KNeighborsClassifier;0.8244;0.8395;0.8244;0.8259;0.8551;0.8589;0.8551;0.855;0.8167;0.8248;0.8167;0.8165;0.9525;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.9195;0.9265;0.9195;0.9196;0.9275;0.9342;0.9275;0.9282;0.8167;0.8248;0.8167;0.8165;0.984;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
SVC;0.6168;0.6948;0.6168;0.6032;0.8116;0.8299;0.8116;0.8145;0.8167;0.8187;0.8167;0.8163;0.7776;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 662};SVC(C=10, kernel='linear', probability=True, random_state=662)
RandomForestClassifier;0.9308;0.9342;0.9308;0.9307;0.8841;0.9047;0.8841;0.8851;0.8167;0.8217;0.8167;0.816;0.9876;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
RandomForestClassifier;0.9083;0.9108;0.9083;0.908;0.9565;0.9565;0.9565;0.9562;0.8167;0.8217;0.8167;0.816;0.9819;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 867};RandomForestClassifier(n_estimators=20, random_state=867)
RandomForestClassifier;0.9131;0.9184;0.9131;0.9127;0.971;0.9716;0.971;0.971;0.8167;0.8318;0.8167;0.8159;0.9834;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 531};RandomForestClassifier(n_estimators=10, random_state=531)
RandomForestClassifier;0.9292;0.9329;0.9292;0.9286;0.9275;0.9275;0.9275;0.9275;0.8167;0.8318;0.8167;0.8159;0.9863;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 531};RandomForestClassifier(n_estimators=10, random_state=531)
RandomForestClassifier;0.9196;0.9232;0.9196;0.9192;0.942;0.947;0.942;0.9418;0.8167;0.8354;0.8167;0.8155;0.9839;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 531};RandomForestClassifier(n_estimators=5, random_state=531)
RandomForestClassifier;0.9162;0.9212;0.9162;0.9159;0.913;0.9135;0.913;0.913;0.8167;0.8307;0.8167;0.8129;0.9848;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 867};RandomForestClassifier(n_estimators=5, random_state=867)
DecisionTreeClassifier;0.9146;0.919;0.9146;0.9139;0.8841;0.9037;0.8841;0.8839;0.8;0.8125;0.8;0.8016;0.9689;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.913;0.9182;0.913;0.9125;0.913;0.917;0.913;0.9131;0.8;0.8125;0.8;0.8016;0.9617;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
DecisionTreeClassifier;0.9114;0.9176;0.9114;0.9112;0.913;0.917;0.913;0.9131;0.8;0.8125;0.8;0.8016;0.9613;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
KNeighborsClassifier;0.8566;0.8654;0.8566;0.8576;0.8986;0.9065;0.8986;0.8994;0.8;0.8072;0.8;0.8005;0.9502;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.6377;0.707;0.6377;0.6208;0.7681;0.769;0.7681;0.7683;0.8;0.8057;0.8;0.8003;0.7874;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 774};SVC(C=10, kernel='linear', probability=True, random_state=774)
SVC;0.62;0.7029;0.62;0.6081;0.7101;0.7696;0.7101;0.7105;0.8;0.8013;0.8;0.8003;0.7839;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 523};SVC(C=10, kernel='linear', probability=True, random_state=523)
SVC;0.6474;0.718;0.6474;0.6324;0.8551;0.8565;0.8551;0.8548;0.8;0.8013;0.8;0.8003;0.7897;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 662};SVC(C=10, kernel='linear', probability=True, random_state=662)
MLPClassifier;0.8646;0.8887;0.8646;0.8633;0.8696;0.8843;0.8696;0.8706;0.8;0.8049;0.8;0.8002;0.929;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.8534;0.8763;0.8534;0.8546;0.9565;0.9594;0.9565;0.9558;0.8;0.8049;0.8;0.8002;0.9363;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
SVC;0.6184;0.7001;0.6184;0.6049;0.8551;0.8778;0.8551;0.8574;0.8;0.8005;0.8;0.7999;0.7781;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 774};SVC(C=10, kernel='linear', probability=True, random_state=774)
LogisticRegression;0.7826;0.8069;0.7826;0.7838;0.8116;0.8462;0.8116;0.8146;0.8;0.802;0.8;0.7997;0.9072;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
RandomForestClassifier;0.9227;0.9279;0.9227;0.9224;0.8986;0.9056;0.8986;0.9002;0.8;0.802;0.8;0.7997;0.9864;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 867};RandomForestClassifier(n_estimators=10, random_state=867)
KNeighborsClassifier;0.8325;0.8439;0.8325;0.832;0.913;0.9238;0.913;0.9134;0.8;0.8083;0.8;0.7987;0.9479;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9243;0.9312;0.9243;0.9244;0.9275;0.9333;0.9275;0.9266;0.8;0.8083;0.8;0.7987;0.9854;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 867};RandomForestClassifier(n_estimators=10, random_state=867)
KNeighborsClassifier;0.8245;0.8391;0.8245;0.825;0.942;0.9457;0.942;0.9419;0.8;0.8083;0.8;0.7987;0.9413;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
LogisticRegression;0.8069;0.8284;0.8069;0.8072;0.7826;0.798;0.7826;0.7871;0.8;0.8018;0.8;0.7986;0.915;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.8116;0.828;0.8116;0.8131;0.8261;0.8367;0.8261;0.8293;0.8;0.8018;0.8;0.7986;0.9104;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
RandomForestClassifier;0.9356;0.9394;0.9356;0.9355;0.8986;0.9222;0.8986;0.8986;0.8;0.8018;0.8;0.7986;0.9872;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 867};RandomForestClassifier(n_estimators=20, random_state=867)
LogisticRegression;0.7956;0.8194;0.7956;0.7963;0.8551;0.8565;0.8551;0.8548;0.8;0.8065;0.8;0.7985;0.9107;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.789;0.8029;0.789;0.7895;0.8116;0.8214;0.8116;0.8122;0.8;0.8065;0.8;0.7985;0.9177;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
RandomForestClassifier;0.9195;0.9242;0.9195;0.9198;0.8986;0.9042;0.8986;0.8995;0.8;0.813;0.8;0.7978;0.9869;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 531};RandomForestClassifier(n_estimators=5, random_state=531)
RandomForestClassifier;0.9243;0.9291;0.9243;0.9237;0.913;0.9246;0.913;0.9138;0.8;0.8198;0.8;0.7969;0.9837;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 867};RandomForestClassifier(n_estimators=20, random_state=867)
RandomForestClassifier;0.9227;0.9283;0.9227;0.9225;0.942;0.9426;0.942;0.942;0.7833;0.8116;0.7833;0.7861;0.9865;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 867};RandomForestClassifier(n_estimators=10, random_state=867)
DecisionTreeClassifier;0.9179;0.9221;0.9179;0.9173;0.8986;0.9134;0.8986;0.9003;0.7833;0.8023;0.7833;0.786;0.9687;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=238)
DecisionTreeClassifier;0.9115;0.9154;0.9115;0.9115;0.942;0.9506;0.942;0.9427;0.7833;0.8023;0.7833;0.786;0.9667;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=969)
MLPClassifier;0.8551;0.8726;0.8551;0.8549;0.8551;0.8896;0.8551;0.8567;0.7833;0.7927;0.7833;0.785;0.9418;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
DecisionTreeClassifier;0.9259;0.9315;0.9259;0.9259;0.8841;0.9008;0.8841;0.883;0.7833;0.7898;0.7833;0.784;0.9724;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.9243;0.9302;0.9243;0.9244;0.9275;0.9281;0.9275;0.9275;0.7833;0.7898;0.7833;0.784;0.9743;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.8986;0.9027;0.8986;0.8979;0.942;0.9432;0.942;0.9423;0.7833;0.7898;0.7833;0.784;0.9582;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.9323;0.936;0.9323;0.9321;0.8696;0.8701;0.8696;0.8687;0.7833;0.7898;0.7833;0.784;0.9753;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
RandomForestClassifier;0.9147;0.9183;0.9147;0.9145;0.913;0.9184;0.913;0.9138;0.7833;0.7917;0.7833;0.7839;0.985;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 867};RandomForestClassifier(n_estimators=5, random_state=867)
MLPClassifier;0.8388;0.8589;0.8388;0.8391;0.913;0.9246;0.913;0.9138;0.7833;0.7869;0.7833;0.7838;0.9347;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
DecisionTreeClassifier;0.9178;0.9228;0.9178;0.9174;0.913;0.9186;0.913;0.9112;0.7833;0.7905;0.7833;0.7838;0.9664;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
SVC;0.6216;0.7012;0.6216;0.609;0.7536;0.8;0.7536;0.7535;0.7833;0.7847;0.7833;0.7837;0.781;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 662};SVC(C=10, kernel='linear', probability=True, random_state=662)
LogisticRegression;0.7987;0.8196;0.7987;0.8006;0.7971;0.8035;0.7971;0.7986;0.7833;0.7857;0.7833;0.7835;0.9103;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
SVC;0.6361;0.7104;0.6361;0.6214;0.7971;0.8061;0.7971;0.7996;0.7833;0.7857;0.7833;0.7835;0.7831;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 523};SVC(C=10, kernel='linear', probability=True, random_state=523)
MLPClassifier;0.855;0.8776;0.855;0.854;0.8116;0.8323;0.8116;0.8166;0.7833;0.7857;0.7833;0.7835;0.9427;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
MLPClassifier;0.8503;0.8691;0.8503;0.8511;0.8696;0.9062;0.8696;0.8731;0.7833;0.7857;0.7833;0.7835;0.9406;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
RandomForestClassifier;0.9259;0.9284;0.9259;0.9257;0.8986;0.8986;0.8986;0.8986;0.7833;0.7994;0.7833;0.7834;0.9855;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 531};RandomForestClassifier(n_estimators=5, random_state=531)
RandomForestClassifier;0.9195;0.9244;0.9195;0.9191;0.971;0.9733;0.971;0.971;0.7833;0.7913;0.7833;0.7833;0.9866;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 867};RandomForestClassifier(n_estimators=10, random_state=867)
RandomForestClassifier;0.9146;0.917;0.9146;0.9144;0.9275;0.9333;0.9275;0.9266;0.7833;0.7913;0.7833;0.7833;0.9856;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 531};RandomForestClassifier(n_estimators=20, random_state=531)
RandomForestClassifier;0.9258;0.9305;0.9258;0.926;0.942;0.9506;0.942;0.9416;0.7833;0.7913;0.7833;0.7833;0.9837;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 867};RandomForestClassifier(n_estimators=10, random_state=867)
RandomForestClassifier;0.9324;0.9376;0.9324;0.932;0.8986;0.9008;0.8986;0.8988;0.7833;0.7838;0.7833;0.7832;0.985;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 531};RandomForestClassifier(n_estimators=20, random_state=531)
MLPClassifier;0.8342;0.8538;0.8342;0.8336;0.8841;0.901;0.8841;0.8844;0.7833;0.7838;0.7833;0.7832;0.9343;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
KNeighborsClassifier;0.8389;0.8464;0.8389;0.8387;0.913;0.9142;0.913;0.9133;0.7833;0.7873;0.7833;0.7831;0.949;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.7907;0.8099;0.7907;0.7926;0.8116;0.8267;0.8116;0.8155;0.7833;0.7917;0.7833;0.7831;0.91;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.7938;0.8189;0.7938;0.7952;0.7971;0.8178;0.7971;0.8005;0.7833;0.7917;0.7833;0.7831;0.9102;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
KNeighborsClassifier;0.8357;0.8456;0.8357;0.8357;0.9275;0.9274;0.9275;0.9272;0.7833;0.792;0.7833;0.783;0.9494;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6359;0.7086;0.6359;0.6201;0.7391;0.7926;0.7391;0.7455;0.7833;0.7854;0.7833;0.783;0.7877;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 523};SVC(C=10, kernel='linear', probability=True, random_state=523)
KNeighborsClassifier;0.8455;0.8561;0.8455;0.8466;0.9275;0.9342;0.9275;0.9282;0.7833;0.792;0.7833;0.783;0.948;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8438;0.8577;0.8438;0.8445;0.8986;0.9065;0.8986;0.899;0.7833;0.792;0.7833;0.783;0.9431;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8503;0.863;0.8503;0.851;0.8696;0.8955;0.8696;0.8705;0.7833;0.792;0.7833;0.783;0.9484;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8455;0.855;0.8455;0.8457;0.8841;0.8911;0.8841;0.8854;0.7833;0.792;0.7833;0.783;0.9479;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8503;0.8633;0.8503;0.851;0.8406;0.8442;0.8406;0.8417;0.7833;0.792;0.7833;0.783;0.9488;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8422;0.8525;0.8422;0.8428;0.942;0.9461;0.942;0.9419;0.7833;0.792;0.7833;0.783;0.9441;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8342;0.8487;0.8342;0.8344;0.9275;0.9287;0.9275;0.9278;0.7833;0.792;0.7833;0.783;0.9458;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8439;0.854;0.8439;0.8444;0.913;0.9129;0.913;0.9127;0.7833;0.792;0.7833;0.783;0.9447;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9195;0.924;0.9195;0.9193;0.942;0.9456;0.942;0.9416;0.7833;0.792;0.7833;0.783;0.9852;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 531};RandomForestClassifier(n_estimators=20, random_state=531)
KNeighborsClassifier;0.8276;0.8402;0.8276;0.828;0.913;0.9186;0.913;0.9112;0.7833;0.792;0.7833;0.783;0.9451;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8454;0.853;0.8454;0.845;0.8986;0.9141;0.8986;0.8991;0.7833;0.792;0.7833;0.783;0.9443;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8454;0.86;0.8454;0.8458;0.913;0.9231;0.913;0.9145;0.7833;0.792;0.7833;0.783;0.9427;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.855;0.8686;0.855;0.8558;0.8696;0.8728;0.8696;0.8701;0.7833;0.792;0.7833;0.783;0.9461;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8471;0.856;0.8471;0.8478;0.942;0.9455;0.942;0.9426;0.7833;0.792;0.7833;0.783;0.9423;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9259;0.9293;0.9259;0.926;0.913;0.9135;0.913;0.913;0.7833;0.7863;0.7833;0.7827;0.969;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9196;0.9234;0.9196;0.9195;0.9275;0.9336;0.9275;0.9286;0.7833;0.7839;0.7833;0.7827;0.9622;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9243;0.931;0.9243;0.9237;0.8841;0.8847;0.8841;0.8819;0.7833;0.7839;0.7833;0.7827;0.9747;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9162;0.9224;0.9162;0.9161;0.9565;0.9583;0.9565;0.9565;0.7833;0.7839;0.7833;0.7827;0.97;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9227;0.9293;0.9227;0.9229;0.913;0.9177;0.913;0.9135;0.7833;0.7839;0.7833;0.7827;0.9704;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9211;0.9247;0.9211;0.9213;0.942;0.942;0.942;0.9417;0.7833;0.7863;0.7833;0.7827;0.9676;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
DecisionTreeClassifier;0.9339;0.9367;0.9339;0.9337;0.8841;0.8999;0.8841;0.8821;0.7833;0.7863;0.7833;0.7827;0.967;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.9065;0.9107;0.9065;0.9061;0.8986;0.9065;0.8986;0.899;0.7833;0.7863;0.7833;0.7827;0.96;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.9081;0.9127;0.9081;0.9076;0.9565;0.9583;0.9565;0.9565;0.7833;0.7839;0.7833;0.7827;0.9581;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.9113;0.9143;0.9113;0.9112;0.9275;0.9328;0.9275;0.9283;0.7833;0.7839;0.7833;0.7827;0.9632;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
DecisionTreeClassifier;0.9259;0.9304;0.9259;0.9261;0.913;0.9135;0.913;0.913;0.7833;0.7863;0.7833;0.7827;0.9692;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
DecisionTreeClassifier;0.9227;0.9263;0.9227;0.9228;0.8841;0.9037;0.8841;0.8867;0.7833;0.7863;0.7833;0.7827;0.9636;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
DecisionTreeClassifier;0.9227;0.9284;0.9227;0.9222;0.8986;0.9011;0.8986;0.8977;0.7833;0.7839;0.7833;0.7827;0.9674;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
LogisticRegression;0.818;0.8349;0.818;0.8199;0.7681;0.7984;0.7681;0.7722;0.7833;0.7839;0.7833;0.7827;0.9145;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
DecisionTreeClassifier;0.9293;0.933;0.9293;0.9292;0.8841;0.8935;0.8841;0.8827;0.7833;0.7863;0.7833;0.7827;0.9634;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=969)
DecisionTreeClassifier;0.926;0.9315;0.926;0.9262;0.942;0.9432;0.942;0.9423;0.7833;0.7863;0.7833;0.7827;0.9707;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
LogisticRegression;0.7907;0.8157;0.7907;0.7904;0.7826;0.8262;0.7826;0.7873;0.7833;0.7839;0.7833;0.7827;0.9089;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
DecisionTreeClassifier;0.9178;0.9215;0.9178;0.918;0.8551;0.8554;0.8551;0.8521;0.7833;0.7839;0.7833;0.7827;0.9681;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
RandomForestClassifier;0.9259;0.9315;0.9259;0.9259;0.913;0.9177;0.913;0.9142;0.7833;0.7876;0.7833;0.7825;0.9842;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 531};RandomForestClassifier(n_estimators=5, random_state=531)
LogisticRegression;0.8133;0.8335;0.8133;0.8137;0.7971;0.8067;0.7971;0.7999;0.7833;0.7861;0.7833;0.7823;0.917;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.8131;0.8319;0.8131;0.8145;0.8406;0.8521;0.8406;0.8413;0.7833;0.7861;0.7833;0.7823;0.915;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
KNeighborsClassifier;0.8261;0.8359;0.8261;0.8262;0.8696;0.8785;0.8696;0.8669;0.7833;0.7948;0.7833;0.7823;0.9463;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8341;0.8609;0.8341;0.8331;0.8986;0.9116;0.8986;0.8961;0.7833;0.787;0.7833;0.7815;0.9312;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
LogisticRegression;0.8004;0.822;0.8004;0.8019;0.7971;0.8184;0.7971;0.797;0.7833;0.7833;0.7833;0.7811;0.9129;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
SVC;0.6296;0.7105;0.6296;0.6152;0.7391;0.7508;0.7391;0.7371;0.7667;0.7746;0.7667;0.7681;0.7865;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 774};SVC(C=1, kernel='linear', probability=True, random_state=774)
DecisionTreeClassifier;0.9179;0.9216;0.9179;0.9175;0.8986;0.9065;0.8986;0.8994;0.7667;0.7711;0.7667;0.768;0.9657;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 969};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=969)
MLPClassifier;0.8551;0.8697;0.8551;0.8556;0.9275;0.9306;0.9275;0.9281;0.7667;0.7728;0.7667;0.7676;0.9322;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
SVC;0.6425;0.7145;0.6425;0.6291;0.7391;0.775;0.7391;0.7428;0.7667;0.7731;0.7667;0.767;0.7953;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 662};SVC(C=1, kernel='linear', probability=True, random_state=662)
SVC;0.612;0.6967;0.612;0.6018;0.7971;0.854;0.7971;0.7922;0.7667;0.7731;0.7667;0.767;0.7744;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 662};SVC(C=1, kernel='linear', probability=True, random_state=662)
SVC;0.612;0.6923;0.612;0.5955;0.7391;0.756;0.7391;0.744;0.7667;0.7731;0.7667;0.767;0.7751;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 774};SVC(C=10, kernel='linear', probability=True, random_state=774)
MLPClassifier;0.847;0.8637;0.847;0.8464;0.8406;0.8759;0.8406;0.8382;0.7667;0.7875;0.7667;0.7669;0.9412;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
KNeighborsClassifier;0.8115;0.825;0.8115;0.813;0.913;0.9177;0.913;0.9135;0.7667;0.7778;0.7667;0.7668;0.931;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.839;0.8552;0.839;0.8391;0.8696;0.8714;0.8696;0.8694;0.7667;0.7778;0.7667;0.7668;0.9478;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8471;0.8561;0.8471;0.847;0.9275;0.9297;0.9275;0.9278;0.7667;0.7778;0.7667;0.7668;0.9477;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
LogisticRegression;0.797;0.8152;0.797;0.7974;0.8261;0.8358;0.8261;0.8224;0.7667;0.7761;0.7667;0.7667;0.911;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
MLPClassifier;0.8503;0.8675;0.8503;0.8504;0.8841;0.8873;0.8841;0.8846;0.7667;0.7667;0.7667;0.7667;0.9412;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
LogisticRegression;0.8084;0.8302;0.8084;0.8101;0.7536;0.779;0.7536;0.7585;0.7667;0.7671;0.7667;0.7666;0.9219;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.7955;0.8193;0.7955;0.7977;0.8261;0.8349;0.8261;0.826;0.7667;0.7671;0.7667;0.7666;0.9131;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
LogisticRegression;0.7809;0.8038;0.7809;0.7834;0.8551;0.8706;0.8551;0.8556;0.7667;0.7709;0.7667;0.7664;0.909;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
MLPClassifier;0.8567;0.8713;0.8567;0.8563;0.913;0.9238;0.913;0.9138;0.7667;0.7687;0.7667;0.7663;0.9365;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
SVC;0.6378;0.7139;0.6378;0.6211;0.7826;0.8041;0.7826;0.7876;0.7667;0.7702;0.7667;0.766;0.7786;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 662};SVC(C=10, kernel='linear', probability=True, random_state=662)
SVC;0.6184;0.6983;0.6184;0.604;0.7681;0.816;0.7681;0.7686;0.7667;0.7702;0.7667;0.766;0.7839;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 662};SVC(C=1, kernel='linear', probability=True, random_state=662)
KNeighborsClassifier;0.8325;0.8411;0.8325;0.8317;0.8696;0.8862;0.8696;0.8712;0.7667;0.7709;0.7667;0.7658;0.9367;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8294;0.8422;0.8294;0.8292;0.9565;0.9565;0.9565;0.9562;0.7667;0.7709;0.7667;0.7658;0.9398;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.7922;0.821;0.7922;0.793;0.7826;0.8364;0.7826;0.7842;0.7667;0.7663;0.7667;0.7656;0.9076;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
KNeighborsClassifier;0.8454;0.8537;0.8454;0.8456;0.8841;0.8907;0.8841;0.8842;0.7667;0.7688;0.7667;0.7656;0.9407;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
LogisticRegression;0.8052;0.8234;0.8052;0.8063;0.7536;0.7863;0.7536;0.7569;0.7667;0.7668;0.7667;0.7655;0.912;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.7971;0.8262;0.7971;0.7997;0.7826;0.807;0.7826;0.7798;0.7667;0.7668;0.7667;0.7655;0.9123;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.7923;0.8183;0.7923;0.7943;0.8406;0.8501;0.8406;0.8424;0.7667;0.7668;0.7667;0.7655;0.9104;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.7938;0.8164;0.7938;0.7951;0.8696;0.8845;0.8696;0.8701;0.7667;0.7668;0.7667;0.7655;0.9067;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
LogisticRegression;0.7874;0.8133;0.7874;0.7891;0.8406;0.857;0.8406;0.8363;0.7667;0.7668;0.7667;0.7655;0.9143;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
MLPClassifier;0.8502;0.8732;0.8502;0.8498;0.8841;0.9077;0.8841;0.8817;0.7667;0.7798;0.7667;0.7654;0.9356;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
KNeighborsClassifier;0.8406;0.8524;0.8406;0.8411;0.8261;0.8363;0.8261;0.8279;0.7667;0.7777;0.7667;0.7652;0.9448;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8439;0.8521;0.8439;0.8434;0.8696;0.8859;0.8696;0.8696;0.7667;0.7777;0.7667;0.7652;0.9467;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.7972;0.8191;0.7972;0.799;0.7391;0.8082;0.7391;0.7422;0.7667;0.7708;0.7667;0.7646;0.9166;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
DecisionTreeClassifier;0.9082;0.9116;0.9082;0.908;0.913;0.9149;0.913;0.9137;0.7667;0.765;0.7667;0.7646;0.968;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
DecisionTreeClassifier;0.921;0.9237;0.921;0.9208;0.9275;0.9333;0.9275;0.9266;0.7667;0.765;0.7667;0.7646;0.9732;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 238};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=238)
LogisticRegression;0.7715;0.7909;0.7715;0.7753;0.8406;0.8556;0.8406;0.84;0.7667;0.7708;0.7667;0.7646;0.9119;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.7923;0.81;0.7923;0.7932;0.7681;0.7716;0.7681;0.7647;0.7667;0.7712;0.7667;0.7645;0.9127;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
DecisionTreeClassifier;0.9227;0.9282;0.9227;0.9222;0.8986;0.9034;0.8986;0.8971;0.7667;0.7679;0.7667;0.7645;0.9675;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 176};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=176)
MLPClassifier;0.8099;0.8257;0.8099;0.809;0.8841;0.8998;0.8841;0.8798;0.75;0.7747;0.75;0.7524;0.9195;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.8485;0.8674;0.8485;0.8492;0.8841;0.9037;0.8841;0.8867;0.75;0.7595;0.75;0.7523;0.9409;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
SVC;0.6394;0.713;0.6394;0.6193;0.8116;0.8227;0.8116;0.8138;0.75;0.7599;0.75;0.7511;0.7855;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 774};SVC(C=1, kernel='linear', probability=True, random_state=774)
SVC;0.6281;0.7015;0.6281;0.6164;0.7246;0.7649;0.7246;0.7303;0.75;0.7558;0.75;0.7505;0.7785;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 774};SVC(C=10, kernel='linear', probability=True, random_state=774)
RandomForestClassifier;0.934;0.9394;0.934;0.9342;0.9275;0.9296;0.9275;0.9274;0.75;0.7553;0.75;0.7505;0.9845;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 524};RandomForestClassifier(n_estimators=20, random_state=524)
SVC;0.6377;0.7152;0.6377;0.6236;0.7391;0.7689;0.7391;0.7456;0.75;0.7558;0.75;0.7505;0.7781;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 662};SVC(C=1, kernel='linear', probability=True, random_state=662)
MLPClassifier;0.8294;0.8468;0.8294;0.8282;0.8406;0.8448;0.8406;0.8416;0.75;0.7611;0.75;0.7502;0.9279;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
LogisticRegression;0.7955;0.8203;0.7955;0.7966;0.8406;0.8782;0.8406;0.8403;0.75;0.7496;0.75;0.7495;0.9105;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 662, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=662)"
LogisticRegression;0.7922;0.8117;0.7922;0.7931;0.8116;0.8615;0.8116;0.8153;0.75;0.7496;0.75;0.7495;0.9162;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 316, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=316)"
SVC;0.6328;0.7106;0.6328;0.62;0.7391;0.797;0.7391;0.7329;0.75;0.7542;0.75;0.7492;0.7876;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 523};SVC(C=1, kernel='linear', probability=True, random_state=523)
RandomForestClassifier;0.9227;0.9263;0.9227;0.9224;0.8696;0.8796;0.8696;0.8685;0.75;0.7593;0.75;0.7492;0.9847;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 531};RandomForestClassifier(n_estimators=10, random_state=531)
SVC;0.6329;0.7097;0.6329;0.6202;0.7826;0.8481;0.7826;0.7869;0.75;0.7562;0.75;0.7491;0.7843;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 662};SVC(C=1, kernel='linear', probability=True, random_state=662)
MLPClassifier;0.855;0.8681;0.855;0.8551;0.8551;0.8758;0.8551;0.852;0.75;0.7557;0.75;0.7487;0.9396;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
LogisticRegression;0.7971;0.8253;0.7971;0.7974;0.7681;0.8259;0.7681;0.7693;0.75;0.7488;0.75;0.7485;0.9132;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
LogisticRegression;0.7841;0.8065;0.7841;0.7861;0.7681;0.7991;0.7681;0.7693;0.75;0.7513;0.75;0.7484;0.912;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 72, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=72)"
KNeighborsClassifier;0.8469;0.8539;0.8469;0.8472;0.8551;0.8666;0.8551;0.8493;0.75;0.7569;0.75;0.7483;0.9511;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.855;0.8722;0.855;0.8547;0.8116;0.8119;0.8116;0.8115;0.75;0.7871;0.75;0.7441;0.9461;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.8501;0.8745;0.8501;0.851;0.913;0.9149;0.913;0.9129;0.75;0.7787;0.75;0.744;0.9376;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
SVC;0.62;0.7033;0.62;0.6064;0.8696;0.8805;0.8696;0.8716;0.7333;0.7397;0.7333;0.7336;0.7714;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 774};SVC(C=10, kernel='linear', probability=True, random_state=774)
SVC;0.6375;0.7184;0.6375;0.6265;0.8116;0.8336;0.8116;0.8108;0.7333;0.7397;0.7333;0.7336;0.7863;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 523};SVC(C=1, kernel='linear', probability=True, random_state=523)
SVC;0.6377;0.7092;0.6377;0.6213;0.7971;0.8524;0.7971;0.7972;0.7333;0.7368;0.7333;0.733;0.7842;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 774};SVC(C=0.1, kernel='linear', probability=True, random_state=774)
SVC;0.6215;0.7019;0.6215;0.6057;0.8116;0.8627;0.8116;0.8167;0.7333;0.7368;0.7333;0.733;0.7677;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 523};SVC(C=0.1, kernel='linear', probability=True, random_state=523)
SVC;0.6311;0.7036;0.6311;0.6183;0.7246;0.7524;0.7246;0.7309;0.7333;0.7368;0.7333;0.733;0.7924;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 523};SVC(C=0.1, kernel='linear', probability=True, random_state=523)
MLPClassifier;0.8325;0.8513;0.8325;0.8326;0.8116;0.8796;0.8116;0.8157;0.7333;0.7408;0.7333;0.7327;0.9337;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8439;0.8555;0.8439;0.8453;0.8551;0.8532;0.8551;0.8533;0.7333;0.7368;0.7333;0.7323;0.939;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
SVC;0.6392;0.7155;0.6392;0.6289;0.8116;0.8585;0.8116;0.8097;0.7333;0.7419;0.7333;0.7322;0.7859;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 523};SVC(C=1, kernel='linear', probability=True, random_state=523)
KNeighborsClassifier;0.8423;0.8512;0.8423;0.8424;0.8986;0.8976;0.8986;0.8972;0.7333;0.7361;0.7333;0.7313;0.9392;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.831;0.8512;0.831;0.8293;0.8406;0.8556;0.8406;0.8436;0.7333;0.7593;0.7333;0.7309;0.9301;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
MLPClassifier;0.8309;0.8454;0.8309;0.8323;0.6522;0.6815;0.6522;0.654;0.7333;0.7431;0.7333;0.7294;0.9341;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
MLPClassifier;0.8422;0.8617;0.8422;0.8434;0.7971;0.797;0.7971;0.7963;0.7167;0.7356;0.7167;0.7161;0.9312;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
SVC;0.6343;0.712;0.6343;0.6178;0.7971;0.8229;0.7971;0.7984;0.7167;0.7222;0.7167;0.7161;0.7807;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 662};SVC(C=0.1, kernel='linear', probability=True, random_state=662)
MLPClassifier;0.8486;0.866;0.8486;0.849;0.7681;0.8632;0.7681;0.7594;0.7167;0.7252;0.7167;0.7144;0.9352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
MLPClassifier;0.8343;0.8509;0.8343;0.8329;0.8696;0.8722;0.8696;0.8653;0.7167;0.736;0.7167;0.7122;0.9343;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
MLPClassifier;0.8357;0.8544;0.8357;0.8356;0.7536;0.8583;0.7536;0.747;0.7167;0.7594;0.7167;0.7113;0.9312;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 432, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=432)
MLPClassifier;0.8439;0.8649;0.8439;0.8427;0.7971;0.8207;0.7971;0.7794;0.7;0.7112;0.7;0.6963;0.9311;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
MLPClassifier;0.8342;0.8522;0.8342;0.8349;0.7246;0.7654;0.7246;0.6942;0.65;0.6884;0.65;0.6423;0.932;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 109, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=109)
