Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9214;0.922;0.9214;0.9215;0.9161;0.9167;0.9161;0.9163;0.9;0.9103;0.9;0.8998;0.984;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 317};RandomForestClassifier(n_estimators=20, random_state=317)
KNeighborsClassifier;0.899;0.9019;0.899;0.8993;0.9161;0.9162;0.9161;0.9162;0.9;0.9089;0.9;0.8991;0.9724;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8962;0.8981;0.8962;0.8965;0.9312;0.9317;0.9312;0.9313;0.9;0.9012;0.9;0.899;0.9705;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.916;0.9166;0.916;0.916;0.9351;0.9355;0.9351;0.9352;0.8833;0.8939;0.8833;0.8836;0.9838;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 123};RandomForestClassifier(n_estimators=20, random_state=123)
RandomForestClassifier;0.921;0.9217;0.921;0.9211;0.9323;0.9329;0.9323;0.9325;0.8833;0.8939;0.8833;0.8836;0.9846;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 961};RandomForestClassifier(n_estimators=20, random_state=961)
KNeighborsClassifier;0.9004;0.9028;0.9004;0.9006;0.9044;0.9046;0.9044;0.9044;0.8833;0.8939;0.8833;0.8836;0.9743;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9093;0.9095;0.9093;0.9093;0.863;0.8696;0.863;0.8632;0.8833;0.8988;0.8833;0.8825;0.9337;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 893};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=893)
DecisionTreeClassifier;0.9032;0.9036;0.9032;0.9033;0.8663;0.8746;0.8663;0.8668;0.8667;0.8821;0.8667;0.8664;0.9286;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 205};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=205)
DecisionTreeClassifier;0.9034;0.9039;0.9034;0.9033;0.8691;0.8729;0.8691;0.8695;0.85;0.858;0.85;0.8492;0.9284;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 918};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=918)
MLPClassifier;0.7999;0.8066;0.7999;0.7992;0.7824;0.7815;0.7824;0.7798;0.7667;0.7667;0.7667;0.7667;0.9383;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 490, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=490)
MLPClassifier;0.7954;0.8021;0.7954;0.7949;0.8009;0.8071;0.8009;0.8023;0.7667;0.7687;0.7667;0.7663;0.9407;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 423, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=423)
SVC;0.6516;0.7269;0.6516;0.6384;0.7931;0.8084;0.7931;0.7946;0.7667;0.7687;0.7667;0.7647;0.8175;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.6541;0.7319;0.6541;0.6399;0.7763;0.7929;0.7763;0.7786;0.7667;0.7687;0.7667;0.7647;0.8186;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 792};SVC(C=10, probability=True, random_state=792)
SVC;0.6523;0.7318;0.6523;0.64;0.7383;0.7539;0.7383;0.7389;0.7667;0.7687;0.7667;0.7647;0.8275;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 169};SVC(C=10, probability=True, random_state=169)
MLPClassifier;0.8012;0.8091;0.8012;0.8019;0.8059;0.8058;0.8059;0.8058;0.75;0.7512;0.75;0.7497;0.9397;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 217, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=217)
LogisticRegression;0.6991;0.7019;0.6991;0.6983;0.6974;0.7092;0.6974;0.6964;0.7167;0.7143;0.7167;0.7146;0.8778;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6988;0.702;0.6988;0.6983;0.7053;0.7138;0.7053;0.7046;0.7167;0.7143;0.7167;0.7146;0.8772;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 71, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=71)"
LogisticRegression;0.7037;0.7072;0.7037;0.7034;0.7002;0.705;0.7002;0.6977;0.7167;0.7143;0.7167;0.7146;0.8782;smote;3000;no_scaled;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 202, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=202)"
