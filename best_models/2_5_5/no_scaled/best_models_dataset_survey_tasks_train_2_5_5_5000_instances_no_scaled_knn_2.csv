Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8444;0.8463;0.8444;0.8441;0.8414;0.8408;0.8414;0.8382;0.8167;0.8193;0.8167;0.8157;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8463;0.8475;0.8463;0.846;0.8715;0.8705;0.8715;0.8693;0.8;0.8013;0.8;0.8003;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8411;0.8442;0.8411;0.8404;0.8548;0.8554;0.8548;0.855;0.8;0.8049;0.8;0.8002;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.843;0.8499;0.843;0.8435;0.8527;0.8523;0.8527;0.8521;0.8;0.8049;0.8;0.8002;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8496;0.8495;0.8496;0.849;0.8568;0.8578;0.8568;0.8571;0.8;0.8049;0.8;0.8002;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8463;0.8518;0.8463;0.8467;0.8655;0.8652;0.8655;0.8653;0.7833;0.7863;0.7833;0.7839;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8424;0.8482;0.8424;0.8431;0.8527;0.8519;0.8527;0.8522;0.7833;0.7863;0.7833;0.7839;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8427;0.8449;0.8427;0.8429;0.8561;0.8552;0.8561;0.8554;0.7833;0.7863;0.7833;0.7839;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8503;0.8539;0.8503;0.8503;0.8561;0.8569;0.8561;0.8563;0.7833;0.7863;0.7833;0.7839;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8449;0.8458;0.8449;0.8444;0.8414;0.8457;0.8414;0.8423;0.7833;0.7869;0.7833;0.7838;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8424;0.8453;0.8424;0.8425;0.8621;0.8614;0.8621;0.8605;0.7833;0.7847;0.7833;0.7837;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8468;0.8487;0.8468;0.8468;0.8635;0.872;0.8635;0.8653;0.7833;0.7913;0.7833;0.7833;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.846;0.848;0.846;0.8454;0.8481;0.8499;0.8481;0.8487;0.7667;0.7728;0.7667;0.7676;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8533;0.8569;0.8533;0.8538;0.8427;0.8431;0.8427;0.8429;0.7667;0.7728;0.7667;0.7676;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8403;0.8441;0.8403;0.8404;0.8574;0.8561;0.8574;0.8565;0.7667;0.7688;0.7667;0.7674;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.841;0.844;0.841;0.8408;0.8461;0.8447;0.8461;0.8438;0.7667;0.7688;0.7667;0.7674;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8461;0.8472;0.8461;0.8462;0.8601;0.8674;0.8601;0.8618;0.7667;0.779;0.7667;0.7673;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.843;0.8436;0.843;0.8427;0.8561;0.8589;0.8561;0.857;0.7667;0.7718;0.7667;0.7672;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8458;0.8475;0.8458;0.8456;0.8635;0.8637;0.8635;0.8635;0.7667;0.7718;0.7667;0.7672;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8368;0.8376;0.8368;0.8355;0.8461;0.8511;0.8461;0.8476;0.75;0.7593;0.75;0.7512;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8449;0.846;0.8449;0.8442;0.8581;0.857;0.8581;0.8573;0.75;0.7593;0.75;0.7512;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8363;0.8406;0.8363;0.8363;0.8601;0.8631;0.8601;0.861;0.75;0.7536;0.75;0.7509;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8402;0.8458;0.8402;0.841;0.8427;0.8415;0.8427;0.8416;0.7333;0.7381;0.7333;0.7347;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8524;0.8548;0.8524;0.8523;0.8561;0.8566;0.8561;0.8563;0.7333;0.7388;0.7333;0.7341;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8488;0.8503;0.8488;0.8486;0.8568;0.8666;0.8568;0.8587;0.7333;0.7388;0.7333;0.7341;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8446;0.8465;0.8446;0.8449;0.8628;0.8651;0.8628;0.8637;0.7333;0.7388;0.7333;0.7341;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8529;0.8534;0.8529;0.8526;0.8474;0.8486;0.8474;0.8479;0.7167;0.7196;0.7167;0.7178;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8395;0.8417;0.8395;0.8398;0.8641;0.8644;0.8641;0.8642;0.7;0.7033;0.7;0.7009;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.846;0.8488;0.846;0.846;0.8474;0.8455;0.8474;0.8461;0.7;0.7033;0.7;0.7009;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8481;0.8501;0.8481;0.8482;0.8614;0.8618;0.8614;0.8611;0.7;0.7033;0.7;0.7009;smote;5000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
