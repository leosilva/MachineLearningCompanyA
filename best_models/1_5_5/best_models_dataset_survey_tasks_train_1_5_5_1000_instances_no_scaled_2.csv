Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8741;0.8761;0.8741;0.8743;0.8367;0.8386;0.8367;0.8368;0.8667;0.8829;0.8667;0.8663;0.9649;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=513)
DecisionTreeClassifier;0.881;0.8824;0.881;0.8809;0.8469;0.8473;0.8469;0.847;0.8667;0.888;0.8667;0.8662;0.9675;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=513)
DecisionTreeClassifier;0.8738;0.8759;0.8738;0.8737;0.8639;0.8675;0.8639;0.8633;0.8667;0.888;0.8667;0.8662;0.9634;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=837)
DecisionTreeClassifier;0.8775;0.88;0.8775;0.8772;0.8571;0.8572;0.8571;0.857;0.8667;0.8774;0.8667;0.8647;0.9653;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=929)
RandomForestClassifier;0.881;0.883;0.881;0.881;0.8435;0.8486;0.8435;0.8436;0.8667;0.8841;0.8667;0.8637;0.9735;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 669};RandomForestClassifier(n_estimators=20, random_state=669)
RandomForestClassifier;0.8787;0.8807;0.8787;0.8785;0.8537;0.8546;0.8537;0.8537;0.85;0.8827;0.85;0.8535;0.973;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 855};RandomForestClassifier(n_estimators=20, random_state=855)
DecisionTreeClassifier;0.8704;0.8728;0.8704;0.8702;0.8605;0.8612;0.8605;0.8604;0.85;0.8636;0.85;0.8519;0.9624;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=929)
RandomForestClassifier;0.8737;0.8747;0.8737;0.8737;0.8639;0.8645;0.8639;0.8641;0.85;0.8752;0.85;0.8517;0.9735;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 654};RandomForestClassifier(n_estimators=10, random_state=654)
RandomForestClassifier;0.8832;0.8864;0.8832;0.8833;0.8776;0.8778;0.8776;0.8774;0.85;0.8752;0.85;0.8517;0.973;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 855};RandomForestClassifier(n_estimators=20, random_state=855)
RandomForestClassifier;0.8813;0.883;0.8813;0.8812;0.8707;0.8726;0.8707;0.8708;0.85;0.8752;0.85;0.8517;0.9716;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
DecisionTreeClassifier;0.8828;0.8844;0.8828;0.8828;0.8367;0.8396;0.8367;0.8362;0.85;0.87;0.85;0.8505;0.965;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=929)
MLPClassifier;0.8556;0.858;0.8556;0.8553;0.8333;0.8396;0.8333;0.8339;0.85;0.8506;0.85;0.8499;0.964;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
DecisionTreeClassifier;0.8768;0.8787;0.8768;0.8768;0.8639;0.8674;0.8639;0.864;0.85;0.8517;0.85;0.8498;0.9649;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=929)
MLPClassifier;0.8477;0.8542;0.8477;0.8477;0.8401;0.8519;0.8401;0.8399;0.85;0.8514;0.85;0.8483;0.963;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
KNeighborsClassifier;0.8375;0.8453;0.8375;0.8364;0.8639;0.8684;0.8639;0.8638;0.8333;0.8889;0.8333;0.8375;0.9441;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.873;0.8745;0.873;0.8729;0.8707;0.874;0.8707;0.8708;0.8333;0.8623;0.8333;0.8372;0.9699;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 669};RandomForestClassifier(n_estimators=20, random_state=669)
RandomForestClassifier;0.8708;0.873;0.8708;0.8707;0.898;0.8985;0.898;0.898;0.8333;0.8743;0.8333;0.8366;0.9712;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
DecisionTreeClassifier;0.8727;0.8751;0.8727;0.8726;0.881;0.8817;0.881;0.8812;0.8333;0.8524;0.8333;0.835;0.9633;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=513)
KNeighborsClassifier;0.8447;0.85;0.8447;0.8441;0.8741;0.8783;0.8741;0.8734;0.8333;0.8769;0.8333;0.8349;0.9446;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.836;0.8409;0.836;0.8352;0.8095;0.8128;0.8095;0.8086;0.8333;0.8769;0.8333;0.8349;0.9452;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8779;0.88;0.8779;0.8779;0.8639;0.8665;0.8639;0.864;0.8333;0.8661;0.8333;0.8346;0.9716;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 855};RandomForestClassifier(n_estimators=10, random_state=855)
RandomForestClassifier;0.8809;0.8828;0.8809;0.8808;0.8673;0.8676;0.8673;0.8672;0.8333;0.8661;0.8333;0.8346;0.9716;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.8783;0.8807;0.8783;0.8785;0.8741;0.8753;0.8741;0.8742;0.8333;0.8661;0.8333;0.8346;0.9723;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 669};RandomForestClassifier(n_estimators=20, random_state=669)
RandomForestClassifier;0.8776;0.8799;0.8776;0.8776;0.8741;0.8778;0.8741;0.8744;0.8333;0.8661;0.8333;0.8346;0.9708;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 669};RandomForestClassifier(n_estimators=20, random_state=669)
RandomForestClassifier;0.8753;0.8768;0.8753;0.8751;0.8844;0.8862;0.8844;0.8845;0.8333;0.8661;0.8333;0.8346;0.9714;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 669};RandomForestClassifier(n_estimators=20, random_state=669)
RandomForestClassifier;0.873;0.8748;0.873;0.8729;0.915;0.9161;0.915;0.9152;0.8333;0.8661;0.8333;0.8346;0.9727;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 855};RandomForestClassifier(n_estimators=10, random_state=855)
DecisionTreeClassifier;0.8753;0.8769;0.8753;0.8754;0.8741;0.8743;0.8741;0.8741;0.8333;0.8518;0.8333;0.8346;0.9648;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=929)
KNeighborsClassifier;0.8473;0.8504;0.8473;0.8468;0.8844;0.8842;0.8844;0.8838;0.8333;0.8661;0.8333;0.8346;0.9465;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8742;0.8778;0.8742;0.8744;0.8912;0.8916;0.8912;0.891;0.8333;0.8661;0.8333;0.8346;0.9719;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 855};RandomForestClassifier(n_estimators=20, random_state=855)
RandomForestClassifier;0.8798;0.8813;0.8798;0.8798;0.881;0.8839;0.881;0.8805;0.8333;0.8661;0.8333;0.8346;0.9717;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 855};RandomForestClassifier(n_estimators=10, random_state=855)
DecisionTreeClassifier;0.8723;0.8739;0.8723;0.8721;0.8946;0.8972;0.8946;0.8939;0.8333;0.8446;0.8333;0.834;0.9637;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=837)
DecisionTreeClassifier;0.8742;0.8758;0.8742;0.8741;0.8435;0.8496;0.8435;0.8441;0.8333;0.8446;0.8333;0.834;0.9629;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=837)
MLPClassifier;0.8443;0.8493;0.8443;0.8443;0.8333;0.838;0.8333;0.8315;0.8333;0.836;0.8333;0.8335;0.9619;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.85;0.8525;0.85;0.8497;0.8605;0.8646;0.8605;0.8609;0.8333;0.836;0.8333;0.8335;0.961;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8484;0.8552;0.8484;0.8479;0.8367;0.842;0.8367;0.8359;0.8333;0.836;0.8333;0.8335;0.9604;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
MLPClassifier;0.8606;0.8635;0.8606;0.8606;0.8469;0.8487;0.8469;0.8473;0.8333;0.836;0.8333;0.8335;0.9653;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8518;0.8538;0.8518;0.8516;0.8333;0.8494;0.8333;0.8335;0.8333;0.836;0.8333;0.8335;0.9623;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
MLPClassifier;0.8485;0.8521;0.8485;0.8482;0.8333;0.8329;0.8333;0.8322;0.8333;0.8428;0.8333;0.8333;0.9617;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8458;0.852;0.8458;0.8453;0.8707;0.8731;0.8707;0.8708;0.8333;0.836;0.8333;0.832;0.9653;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8325;0.8406;0.8325;0.8312;0.8741;0.8842;0.8741;0.8737;0.8333;0.838;0.8333;0.8317;0.9528;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8496;0.8539;0.8496;0.8496;0.881;0.8811;0.881;0.8809;0.8333;0.8348;0.8333;0.8317;0.9628;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
DecisionTreeClassifier;0.87;0.8724;0.87;0.8699;0.9048;0.9062;0.9048;0.9051;0.8333;0.8547;0.8333;0.8292;0.9629;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=513)
KNeighborsClassifier;0.8379;0.847;0.8379;0.8373;0.8639;0.8708;0.8639;0.864;0.8167;0.8817;0.8167;0.8217;0.9485;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8416;0.8488;0.8416;0.8402;0.8571;0.8607;0.8571;0.8572;0.8167;0.8817;0.8167;0.8217;0.9451;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8296;0.8376;0.8296;0.8285;0.8605;0.8634;0.8605;0.8602;0.8167;0.8817;0.8167;0.8217;0.9399;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8386;0.8441;0.8386;0.8379;0.8639;0.8709;0.8639;0.8637;0.8167;0.8817;0.8167;0.8217;0.9388;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8375;0.8472;0.8375;0.837;0.8571;0.8637;0.8571;0.8561;0.8167;0.8817;0.8167;0.8217;0.9444;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8333;0.8402;0.8333;0.8329;0.8605;0.8665;0.8605;0.8603;0.8167;0.8817;0.8167;0.8217;0.9443;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8318;0.8379;0.8318;0.8309;0.8605;0.8673;0.8605;0.8591;0.8167;0.8817;0.8167;0.8217;0.9421;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8413;0.8481;0.8413;0.8404;0.8435;0.8518;0.8435;0.8432;0.8167;0.8654;0.8167;0.8213;0.952;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8568;0.859;0.8568;0.8564;0.8333;0.8389;0.8333;0.8332;0.8167;0.8367;0.8167;0.8208;0.9636;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
RandomForestClassifier;0.8813;0.8834;0.8813;0.8813;0.8844;0.8846;0.8844;0.8844;0.8167;0.8558;0.8167;0.8191;0.9704;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 669};RandomForestClassifier(n_estimators=20, random_state=669)
KNeighborsClassifier;0.8447;0.8535;0.8447;0.8439;0.8299;0.8318;0.8299;0.8292;0.8167;0.8558;0.8167;0.8191;0.936;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8356;0.8412;0.8356;0.835;0.8912;0.8926;0.8912;0.8906;0.8167;0.8558;0.8167;0.8191;0.941;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8431;0.8502;0.8431;0.8422;0.8435;0.8472;0.8435;0.8427;0.8167;0.8558;0.8167;0.8191;0.9447;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8749;0.8768;0.8749;0.8749;0.8844;0.8873;0.8844;0.8845;0.8167;0.8558;0.8167;0.8191;0.9714;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 855};RandomForestClassifier(n_estimators=20, random_state=855)
RandomForestClassifier;0.8772;0.8793;0.8772;0.8771;0.8844;0.8846;0.8844;0.8842;0.8167;0.8558;0.8167;0.8191;0.9715;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
KNeighborsClassifier;0.8466;0.8517;0.8466;0.8462;0.8333;0.8401;0.8333;0.8316;0.8167;0.8558;0.8167;0.8191;0.9504;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8821;0.8841;0.8821;0.882;0.8673;0.8686;0.8673;0.8673;0.8167;0.8558;0.8167;0.8191;0.9699;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.8802;0.8821;0.8802;0.8801;0.881;0.8816;0.881;0.8811;0.8167;0.8558;0.8167;0.8191;0.9721;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
RandomForestClassifier;0.8726;0.8756;0.8726;0.8727;0.881;0.8827;0.881;0.8808;0.8167;0.8558;0.8167;0.8191;0.9704;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
KNeighborsClassifier;0.845;0.8487;0.845;0.8446;0.8299;0.8334;0.8299;0.8287;0.8167;0.8681;0.8167;0.819;0.9496;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8386;0.8452;0.8386;0.8381;0.8844;0.8884;0.8844;0.8848;0.8167;0.8474;0.8167;0.8187;0.9395;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8749;0.8766;0.8749;0.8748;0.8707;0.8766;0.8707;0.869;0.8167;0.8406;0.8167;0.8171;0.962;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=929)
RandomForestClassifier;0.8768;0.8792;0.8768;0.8768;0.8844;0.887;0.8844;0.8842;0.8167;0.8578;0.8167;0.8171;0.9724;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 855};RandomForestClassifier(n_estimators=10, random_state=855)
RandomForestClassifier;0.8817;0.8837;0.8817;0.8815;0.8571;0.8598;0.8571;0.8575;0.8167;0.8578;0.8167;0.8171;0.9728;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 855};RandomForestClassifier(n_estimators=20, random_state=855)
DecisionTreeClassifier;0.8723;0.8739;0.8723;0.8721;0.8946;0.8996;0.8946;0.8947;0.8167;0.8406;0.8167;0.8171;0.9601;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=513)
RandomForestClassifier;0.8768;0.88;0.8768;0.8768;0.8776;0.8869;0.8776;0.877;0.8167;0.8578;0.8167;0.8171;0.9724;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 669};RandomForestClassifier(n_estimators=20, random_state=669)
DecisionTreeClassifier;0.8794;0.8821;0.8794;0.8795;0.8844;0.8857;0.8844;0.8845;0.8167;0.8406;0.8167;0.8171;0.9632;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=837)
MLPClassifier;0.8567;0.859;0.8567;0.8564;0.8435;0.8447;0.8435;0.8437;0.8167;0.8223;0.8167;0.8169;0.9642;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
DecisionTreeClassifier;0.8772;0.8794;0.8772;0.8773;0.8844;0.8857;0.8844;0.8844;0.8167;0.8344;0.8167;0.8167;0.962;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=513)
MLPClassifier;0.856;0.8596;0.856;0.8558;0.8435;0.8453;0.8435;0.8435;0.8167;0.8208;0.8167;0.8161;0.9668;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
MLPClassifier;0.8534;0.8572;0.8534;0.8531;0.8333;0.8356;0.8333;0.8335;0.8167;0.8208;0.8167;0.8161;0.9634;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
DecisionTreeClassifier;0.8726;0.8747;0.8726;0.8726;0.8878;0.8894;0.8878;0.8879;0.8167;0.8302;0.8167;0.8159;0.9648;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=513)
DecisionTreeClassifier;0.8806;0.8823;0.8806;0.8805;0.8503;0.8514;0.8503;0.8503;0.8167;0.8302;0.8167;0.8159;0.9672;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=837)
DecisionTreeClassifier;0.876;0.8781;0.876;0.876;0.8707;0.8751;0.8707;0.8709;0.8167;0.8302;0.8167;0.8159;0.9641;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=837)
MLPClassifier;0.8465;0.8506;0.8465;0.8463;0.8469;0.8516;0.8469;0.8472;0.8167;0.8296;0.8167;0.8156;0.9629;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
RandomForestClassifier;0.8757;0.8788;0.8757;0.8754;0.9014;0.902;0.9014;0.9012;0.8167;0.8512;0.8167;0.8155;0.9703;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 669};RandomForestClassifier(n_estimators=10, random_state=669)
KNeighborsClassifier;0.8522;0.8551;0.8522;0.8519;0.8571;0.86;0.8571;0.8572;0.8167;0.8512;0.8167;0.8155;0.9522;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8428;0.8477;0.8428;0.8421;0.8503;0.8599;0.8503;0.8506;0.8167;0.8595;0.8167;0.8154;0.9422;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8738;0.8754;0.8738;0.8735;0.8912;0.8989;0.8912;0.8914;0.8167;0.8352;0.8167;0.8143;0.9719;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 669};RandomForestClassifier(n_estimators=5, random_state=669)
DecisionTreeClassifier;0.8783;0.8804;0.8783;0.8782;0.8537;0.8575;0.8537;0.8544;0.8167;0.8307;0.8167;0.8136;0.9624;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=513)
DecisionTreeClassifier;0.8775;0.8791;0.8775;0.8776;0.8707;0.871;0.8707;0.8708;0.8167;0.8307;0.8167;0.8136;0.9636;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=837)
DecisionTreeClassifier;0.8757;0.8773;0.8757;0.8756;0.8571;0.8626;0.8571;0.8562;0.8167;0.8307;0.8167;0.8136;0.9629;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=929)
DecisionTreeClassifier;0.8764;0.878;0.8764;0.8762;0.8333;0.834;0.8333;0.8331;0.8167;0.8307;0.8167;0.8136;0.9666;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=929)
RandomForestClassifier;0.8753;0.878;0.8753;0.8752;0.898;0.8987;0.898;0.8979;0.8;0.8391;0.8;0.805;0.9714;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 855};RandomForestClassifier(n_estimators=5, random_state=855)
MLPClassifier;0.8473;0.8495;0.8473;0.8469;0.8741;0.8756;0.8741;0.8744;0.8;0.8148;0.8;0.8038;0.9596;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
RandomForestClassifier;0.8753;0.8774;0.8753;0.8754;0.8673;0.8696;0.8673;0.8656;0.8;0.848;0.8;0.8018;0.9725;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 654};RandomForestClassifier(n_estimators=10, random_state=654)
MLPClassifier;0.8454;0.851;0.8454;0.845;0.8333;0.8338;0.8333;0.8331;0.8;0.8054;0.8;0.8013;0.9638;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8518;0.8548;0.8518;0.8516;0.8741;0.875;0.8741;0.8741;0.8;0.8054;0.8;0.8013;0.9623;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
RandomForestClassifier;0.8855;0.8867;0.8855;0.8855;0.8639;0.8719;0.8639;0.8646;0.8;0.8402;0.8;0.8;0.9711;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 654};RandomForestClassifier(n_estimators=20, random_state=654)
KNeighborsClassifier;0.8386;0.8446;0.8386;0.8382;0.8503;0.8527;0.8503;0.8502;0.8;0.8402;0.8;0.8;0.9454;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8416;0.8484;0.8416;0.8409;0.8605;0.8637;0.8605;0.861;0.8;0.8402;0.8;0.8;0.944;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8409;0.8468;0.8409;0.8401;0.8844;0.8869;0.8844;0.8843;0.8;0.8402;0.8;0.8;0.9474;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.853;0.8616;0.853;0.8522;0.8367;0.8377;0.8367;0.8368;0.8;0.8402;0.8;0.8;0.953;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8398;0.8472;0.8398;0.839;0.8503;0.8579;0.8503;0.8491;0.8;0.8402;0.8;0.8;0.9448;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8462;0.851;0.8462;0.8457;0.8776;0.8776;0.8776;0.8776;0.8;0.8339;0.8;0.7999;0.945;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8409;0.8464;0.8409;0.8401;0.8469;0.8531;0.8469;0.8473;0.8;0.8497;0.8;0.7996;0.9489;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8723;0.8748;0.8723;0.8721;0.8605;0.8645;0.8605;0.8611;0.8;0.832;0.8;0.7995;0.9703;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 669};RandomForestClassifier(n_estimators=10, random_state=669)
KNeighborsClassifier;0.8511;0.8566;0.8511;0.8508;0.8503;0.8512;0.8503;0.8502;0.8;0.832;0.8;0.7995;0.9424;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8738;0.8756;0.8738;0.8737;0.8333;0.834;0.8333;0.8327;0.8;0.8303;0.8;0.7993;0.9622;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=513)
DecisionTreeClassifier;0.8719;0.8737;0.8719;0.8719;0.8946;0.8948;0.8946;0.8945;0.8;0.8079;0.8;0.7992;0.9608;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=929)
DecisionTreeClassifier;0.8783;0.8807;0.8783;0.8781;0.8265;0.8321;0.8265;0.8248;0.8;0.8236;0.8;0.7991;0.9642;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=837)
MLPClassifier;0.8439;0.8481;0.8439;0.8434;0.8537;0.8562;0.8537;0.8532;0.8;0.8065;0.8;0.7985;0.9606;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
MLPClassifier;0.8519;0.8549;0.8519;0.8518;0.8469;0.8495;0.8469;0.8464;0.8;0.8065;0.8;0.7985;0.9632;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.8458;0.8528;0.8458;0.8456;0.8946;0.8947;0.8946;0.8945;0.8;0.8065;0.8;0.7985;0.9584;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
DecisionTreeClassifier;0.8787;0.8815;0.8787;0.8786;0.7993;0.8025;0.7993;0.7973;0.8;0.827;0.8;0.7903;0.963;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=837)
KNeighborsClassifier;0.836;0.8424;0.836;0.8354;0.8707;0.8733;0.8707;0.8709;0.7833;0.8173;0.7833;0.7885;0.9431;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8341;0.8419;0.8341;0.8334;0.8367;0.8457;0.8367;0.8367;0.7833;0.8386;0.7833;0.7862;0.9468;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8439;0.8459;0.8439;0.8436;0.898;0.8981;0.898;0.8979;0.7833;0.8044;0.7833;0.7852;0.9613;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
DecisionTreeClassifier;0.8719;0.8734;0.8719;0.8718;0.8333;0.8354;0.8333;0.8333;0.7833;0.7928;0.7833;0.781;0.963;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 513};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=513)
DecisionTreeClassifier;0.8726;0.8744;0.8726;0.8725;0.9218;0.9224;0.9218;0.9218;0.7833;0.7928;0.7833;0.781;0.9633;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 929};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=929)
DecisionTreeClassifier;0.8749;0.8764;0.8749;0.8749;0.9048;0.906;0.9048;0.9045;0.7833;0.7928;0.7833;0.781;0.9643;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 837};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=837)
MLPClassifier;0.8315;0.8379;0.8315;0.8314;0.8912;0.8923;0.8912;0.8912;0.7833;0.8053;0.7833;0.7789;0.9555;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8545;0.8583;0.8545;0.8543;0.8231;0.8276;0.8231;0.8225;0.7833;0.8041;0.7833;0.7787;0.9632;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 675, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=675)
MLPClassifier;0.839;0.8486;0.839;0.8392;0.8537;0.8581;0.8537;0.8532;0.7833;0.8233;0.7833;0.776;0.9584;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
SVC;0.624;0.7065;0.624;0.6098;0.7687;0.7836;0.7687;0.7693;0.7667;0.7973;0.7667;0.7679;0.7961;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6409;0.7176;0.6409;0.6253;0.7653;0.7865;0.7653;0.7632;0.7667;0.7973;0.7667;0.7679;0.8016;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.633;0.7118;0.633;0.6193;0.7551;0.8;0.7551;0.7509;0.7667;0.7973;0.7667;0.7679;0.8017;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6402;0.7172;0.6402;0.6243;0.7517;0.7808;0.7517;0.7542;0.7667;0.7973;0.7667;0.7679;0.8034;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6436;0.7205;0.6436;0.6265;0.7653;0.7869;0.7653;0.7657;0.7667;0.7973;0.7667;0.7679;0.8047;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6425;0.7171;0.6425;0.6272;0.7109;0.7522;0.7109;0.7099;0.7667;0.7973;0.7667;0.7679;0.8036;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6372;0.7147;0.6372;0.6218;0.7551;0.7853;0.7551;0.7544;0.7667;0.7973;0.7667;0.7679;0.8026;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6523;0.7266;0.6523;0.6337;0.6701;0.6974;0.6701;0.6691;0.7667;0.7973;0.7667;0.7679;0.811;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6383;0.716;0.6383;0.6198;0.7415;0.7662;0.7415;0.7434;0.7667;0.7973;0.7667;0.7679;0.7987;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6323;0.7147;0.6323;0.6175;0.7381;0.7648;0.7381;0.74;0.7667;0.7973;0.7667;0.7679;0.802;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.644;0.7221;0.644;0.6264;0.7517;0.7717;0.7517;0.7531;0.7667;0.7973;0.7667;0.7679;0.8016;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.636;0.7146;0.636;0.619;0.7211;0.7497;0.7211;0.7219;0.7667;0.7973;0.7667;0.7679;0.8034;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6372;0.7162;0.6372;0.6211;0.7109;0.7459;0.7109;0.7109;0.7667;0.7973;0.7667;0.7679;0.8049;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6391;0.7173;0.6391;0.6253;0.7279;0.7632;0.7279;0.7273;0.7667;0.7973;0.7667;0.7679;0.8041;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6406;0.7198;0.6406;0.6246;0.7143;0.7487;0.7143;0.7191;0.7667;0.7973;0.7667;0.7679;0.8052;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6255;0.7081;0.6255;0.6122;0.7245;0.7578;0.7245;0.7238;0.7667;0.7973;0.7667;0.7679;0.8007;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6395;0.7168;0.6395;0.6231;0.7415;0.7668;0.7415;0.7419;0.7667;0.7973;0.7667;0.7679;0.8037;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6342;0.7127;0.6342;0.6206;0.7415;0.771;0.7415;0.7408;0.7667;0.7973;0.7667;0.7679;0.8017;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6444;0.7188;0.6444;0.6268;0.7279;0.7578;0.7279;0.7268;0.7667;0.7973;0.7667;0.7679;0.8029;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6402;0.7197;0.6402;0.6241;0.7585;0.7865;0.7585;0.7575;0.7667;0.7973;0.7667;0.7679;0.805;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6383;0.7153;0.6383;0.6228;0.7313;0.7729;0.7313;0.7302;0.7667;0.7973;0.7667;0.7679;0.803;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6315;0.7137;0.6315;0.6171;0.7551;0.7825;0.7551;0.7532;0.7667;0.7973;0.7667;0.7679;0.8009;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6277;0.7073;0.6277;0.6149;0.7381;0.7713;0.7381;0.7401;0.7667;0.7973;0.7667;0.7679;0.7987;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6361;0.7118;0.6361;0.6195;0.7755;0.8057;0.7755;0.7731;0.7667;0.7973;0.7667;0.7679;0.7993;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6481;0.7228;0.6481;0.6315;0.7449;0.7749;0.7449;0.7429;0.7667;0.7973;0.7667;0.7679;0.8046;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6274;0.7092;0.6274;0.6127;0.7585;0.7895;0.7585;0.7576;0.7667;0.7973;0.7667;0.7679;0.7989;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
MLPClassifier;0.8443;0.8462;0.8443;0.8441;0.8197;0.8266;0.8197;0.819;0.7667;0.7797;0.7667;0.7621;0.9585;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
MLPClassifier;0.859;0.8624;0.859;0.8585;0.8231;0.8239;0.8231;0.8226;0.7667;0.7834;0.7667;0.7612;0.9643;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8537;0.8569;0.8537;0.8538;0.8707;0.8726;0.8707;0.8711;0.7667;0.7939;0.7667;0.7599;0.9648;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
SVC;0.6326;0.7138;0.6326;0.6177;0.7313;0.7641;0.7313;0.7293;0.75;0.7768;0.75;0.75;0.8014;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 762};SVC(C=10, probability=True, random_state=762)
SVC;0.6414;0.7201;0.6414;0.6264;0.6973;0.7441;0.6973;0.6928;0.75;0.7768;0.75;0.75;0.8077;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 357};SVC(C=10, probability=True, random_state=357)
SVC;0.6342;0.713;0.6342;0.6195;0.7211;0.7485;0.7211;0.7185;0.75;0.7768;0.75;0.75;0.8026;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
SVC;0.6376;0.7149;0.6376;0.6209;0.6837;0.7293;0.6837;0.6866;0.75;0.7768;0.75;0.75;0.8049;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 569};SVC(C=10, probability=True, random_state=569)
MLPClassifier;0.8466;0.8526;0.8466;0.8461;0.8537;0.8556;0.8537;0.8535;0.75;0.7668;0.75;0.7433;0.9651;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=317)
LogisticRegression;0.689;0.6972;0.689;0.6869;0.6599;0.6746;0.6599;0.66;0.7167;0.7433;0.7167;0.7128;0.8363;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6878;0.6956;0.6878;0.6855;0.6599;0.6633;0.6599;0.6573;0.7167;0.7433;0.7167;0.7128;0.8343;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6908;0.6987;0.6908;0.6887;0.6769;0.6855;0.6769;0.6762;0.7167;0.7433;0.7167;0.7128;0.835;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.692;0.7002;0.692;0.6903;0.7075;0.7127;0.7075;0.7031;0.7167;0.7433;0.7167;0.7128;0.8355;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6886;0.6979;0.6886;0.6861;0.7347;0.7397;0.7347;0.7312;0.7167;0.7433;0.7167;0.7128;0.832;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6882;0.6973;0.6882;0.6859;0.6837;0.6903;0.6837;0.6811;0.7167;0.7433;0.7167;0.7128;0.8334;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6901;0.6989;0.6901;0.6879;0.6735;0.6769;0.6735;0.665;0.7167;0.7433;0.7167;0.7128;0.8355;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.695;0.7022;0.695;0.6929;0.6463;0.6643;0.6463;0.6468;0.7167;0.7433;0.7167;0.7128;0.8361;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6879;0.6954;0.6879;0.6849;0.6871;0.6955;0.6871;0.6889;0.7;0.7226;0.7;0.6925;0.833;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6837;0.6911;0.6837;0.6817;0.7143;0.7209;0.7143;0.7126;0.7;0.7226;0.7;0.6925;0.8317;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6886;0.6958;0.6886;0.6855;0.6939;0.6958;0.6939;0.6922;0.7;0.7226;0.7;0.6925;0.8323;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6924;0.7004;0.6924;0.6906;0.6769;0.6848;0.6769;0.6742;0.7;0.7226;0.7;0.6925;0.836;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.681;0.6903;0.681;0.6784;0.7143;0.7204;0.7143;0.7109;0.6833;0.7027;0.6833;0.6772;0.8312;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6905;0.6982;0.6905;0.6874;0.6565;0.664;0.6565;0.6541;0.6833;0.7027;0.6833;0.6772;0.8357;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6791;0.6889;0.6791;0.6765;0.7143;0.7141;0.7143;0.7099;0.6833;0.7027;0.6833;0.6772;0.8319;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6909;0.6972;0.6909;0.6876;0.6633;0.6709;0.6633;0.6581;0.6833;0.7027;0.6833;0.6772;0.8365;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6814;0.6896;0.6814;0.6781;0.7245;0.7278;0.7245;0.7209;0.6833;0.7027;0.6833;0.6772;0.8327;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6863;0.6947;0.6863;0.6838;0.7041;0.7104;0.7041;0.699;0.6833;0.7027;0.6833;0.6772;0.8357;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6822;0.6906;0.6822;0.6795;0.7211;0.7278;0.7211;0.7167;0.6833;0.7027;0.6833;0.6772;0.8345;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6871;0.6955;0.6871;0.6848;0.6871;0.6886;0.6871;0.6849;0.6833;0.7027;0.6833;0.6772;0.8348;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6826;0.6913;0.6826;0.6801;0.6735;0.6822;0.6735;0.6713;0.6833;0.7027;0.6833;0.6772;0.8333;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6856;0.6943;0.6856;0.683;0.7143;0.7175;0.7143;0.713;0.6833;0.7027;0.6833;0.6772;0.8288;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6799;0.6882;0.6799;0.6767;0.6871;0.7035;0.6871;0.6844;0.6833;0.7027;0.6833;0.6772;0.8335;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6787;0.6872;0.6787;0.6757;0.7279;0.73;0.7279;0.7246;0.6833;0.7027;0.6833;0.6772;0.8297;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6928;0.6999;0.6928;0.6905;0.6531;0.6557;0.6531;0.6472;0.6833;0.7093;0.6833;0.6731;0.8349;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.6803;0.6869;0.6803;0.6775;0.7585;0.7654;0.7585;0.7554;0.6833;0.7093;0.6833;0.6731;0.8274;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
LogisticRegression;0.692;0.6991;0.692;0.69;0.6633;0.6679;0.6633;0.6599;0.6833;0.7093;0.6833;0.6731;0.8325;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 141, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=141)"
LogisticRegression;0.6867;0.6954;0.6867;0.6848;0.6735;0.6858;0.6735;0.6702;0.6667;0.6889;0.6667;0.659;0.8352;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6848;0.6905;0.6848;0.6812;0.6735;0.6778;0.6735;0.6708;0.6667;0.6889;0.6667;0.659;0.834;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 33, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=33)"
LogisticRegression;0.6867;0.6956;0.6867;0.6839;0.6395;0.6493;0.6395;0.6373;0.6667;0.6889;0.6667;0.659;0.8362;smote;1000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 622, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=622)"
