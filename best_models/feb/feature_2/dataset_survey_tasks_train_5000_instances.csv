Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
LogisticRegression,0.7931,0.8016,0.7931,0.7943,0.7821,0.793,0.7821,0.7839,0.7833,0.7805,0.7833,0.7805,0.9313,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 808, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=808)"
DecisionTreeClassifier,0.8344,0.8447,0.8344,0.8372,0.831,0.8426,0.831,0.8338,0.7833,0.8311,0.7833,0.7793,0.9504,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 963}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=963)"
KNeighborsClassifier,0.818,0.8372,0.818,0.8196,0.8143,0.8363,0.8143,0.8168,0.7667,0.7799,0.7667,0.7625,0.9428,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier,0.8093,0.8364,0.8093,0.8089,0.8146,0.8249,0.8146,0.8174,0.7333,0.7316,0.7333,0.7312,0.9439,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 560, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=560)"
MLPClassifier,0.8123,0.8402,0.8123,0.8131,0.8066,0.8627,0.8066,0.8063,0.7333,0.7905,0.7333,0.7171,0.9416,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=482)"
RandomForestClassifier,0.8337,0.8439,0.8337,0.8368,0.8333,0.8436,0.8333,0.8363,0.7167,0.7197,0.7167,0.7143,0.9512,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 912}","RandomForestClassifier(n_estimators=20, random_state=912)"
RandomForestClassifier,0.8326,0.8435,0.8326,0.8357,0.8297,0.84,0.8297,0.8326,0.7167,0.7471,0.7167,0.7059,0.9506,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 343}","RandomForestClassifier(n_estimators=20, random_state=343)"
DecisionTreeClassifier,0.8314,0.8427,0.8314,0.834,0.838,0.8471,0.838,0.8406,0.7,0.7058,0.7,0.7011,0.9506,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)"
KNeighborsClassifier,0.8275,0.8384,0.8275,0.8306,0.835,0.8439,0.835,0.8378,0.7,0.6965,0.7,0.697,0.9437,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
SVC,0.793,0.8463,0.793,0.7908,0.8025,0.8547,0.8025,0.8011,0.7,0.7761,0.7,0.6865,0.9217,smote,5000,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 583}","SVC(C=10, probability=True, random_state=583)"
SVC,0.7958,0.8481,0.7958,0.7936,0.7918,0.8469,0.7918,0.79,0.6833,0.7241,0.6833,0.679,0.9239,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 191}","SVC(C=10, probability=True, random_state=191)"
RandomForestClassifier,0.8307,0.8416,0.8307,0.8336,0.8404,0.8491,0.8404,0.8431,0.65,0.6599,0.65,0.6372,0.9495,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 306}","RandomForestClassifier(n_estimators=20, random_state=306)"
SVC,0.7973,0.8494,0.7973,0.7952,0.7885,0.8448,0.7885,0.7869,0.65,0.7362,0.65,0.6299,0.9233,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 832}","SVC(C=10, probability=True, random_state=832)"
LogisticRegression,0.7987,0.8064,0.7987,0.7999,0.7999,0.8114,0.7999,0.8008,0.6333,0.6358,0.6333,0.6246,0.9325,smote,5000,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 914, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=914)"
LogisticRegression,0.7903,0.7998,0.7903,0.792,0.7928,0.8005,0.7928,0.7941,0.6,0.6117,0.6,0.6042,0.9306,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 661, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=661)"
DecisionTreeClassifier,0.8348,0.8463,0.8348,0.8376,0.8313,0.841,0.8313,0.8342,0.6,0.5992,0.6,0.5985,0.9516,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 39}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=39)"
KNeighborsClassifier,0.8217,0.8387,0.8217,0.8238,0.8079,0.8349,0.8079,0.8091,0.6,0.6111,0.6,0.5909,0.9419,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=15, weights='distance')"
MLPClassifier,0.8174,0.83,0.8174,0.8184,0.7938,0.8478,0.7938,0.7906,0.6,0.6387,0.6,0.586,0.9429,smote,5000,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 541, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=541)"
