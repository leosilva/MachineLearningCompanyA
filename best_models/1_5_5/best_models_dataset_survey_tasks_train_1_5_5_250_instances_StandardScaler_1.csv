Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8438;0.8546;0.8438;0.844;0.8841;0.8867;0.8841;0.8835;0.9;0.9094;0.9;0.8999;0.9405;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8407;0.8525;0.8407;0.8396;0.8986;0.9052;0.8986;0.8993;0.8833;0.9015;0.8833;0.886;0.9396;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8084;0.8209;0.8084;0.8079;0.8841;0.8885;0.8841;0.8827;0.8833;0.8955;0.8833;0.8848;0.9329;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8246;0.8375;0.8246;0.8242;0.8841;0.8839;0.8841;0.8837;0.8833;0.9046;0.8833;0.8844;0.9391;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8148;0.8309;0.8148;0.8145;0.8986;0.9065;0.8986;0.8994;0.8833;0.8952;0.8833;0.8828;0.9412;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8438;0.8559;0.8438;0.8432;0.8261;0.8277;0.8261;0.8259;0.8833;0.8952;0.8833;0.8828;0.9425;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.826;0.8426;0.826;0.827;0.8696;0.8715;0.8696;0.8687;0.8833;0.8889;0.8833;0.882;0.9446;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8148;0.8249;0.8148;0.8136;0.9275;0.9287;0.9275;0.9278;0.8833;0.8889;0.8833;0.882;0.9383;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8407;0.8514;0.8407;0.8404;0.8406;0.8487;0.8406;0.8412;0.8667;0.8819;0.8667;0.868;0.9401;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8213;0.8317;0.8213;0.8205;0.8696;0.8769;0.8696;0.8714;0.8667;0.8839;0.8667;0.8664;0.9399;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8294;0.8396;0.8294;0.8282;0.9275;0.9297;0.9275;0.9278;0.8667;0.8839;0.8667;0.8664;0.9417;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8358;0.8511;0.8358;0.8354;0.8696;0.8981;0.8696;0.8703;0.8667;0.8839;0.8667;0.8664;0.9445;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8133;0.828;0.8133;0.813;0.8841;0.8883;0.8841;0.8841;0.8667;0.8839;0.8667;0.8664;0.9396;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8277;0.8472;0.8277;0.825;0.913;0.9221;0.913;0.9114;0.8667;0.8837;0.8667;0.8659;0.9423;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8325;0.8497;0.8325;0.8331;0.8696;0.8756;0.8696;0.8687;0.8667;0.8699;0.8667;0.8659;0.9386;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8197;0.8326;0.8197;0.8194;0.913;0.9176;0.913;0.9127;0.8667;0.8767;0.8667;0.8653;0.9331;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8325;0.845;0.8325;0.8313;0.8841;0.8846;0.8841;0.8832;0.8667;0.8767;0.8667;0.8653;0.9396;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8246;0.8377;0.8246;0.8253;0.8406;0.8466;0.8406;0.8418;0.85;0.8667;0.85;0.8524;0.9445;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
MLPClassifier;0.8197;0.8308;0.8197;0.8198;0.8551;0.8623;0.8551;0.853;0.85;0.8564;0.85;0.8508;0.947;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
KNeighborsClassifier;0.8276;0.8355;0.8276;0.8276;0.7681;0.773;0.7681;0.7527;0.85;0.8634;0.85;0.8505;0.9383;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8262;0.8379;0.8262;0.8246;0.8406;0.8623;0.8406;0.8395;0.85;0.8731;0.85;0.8498;0.9402;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8422;0.8545;0.8422;0.8415;0.8116;0.8194;0.8116;0.81;0.85;0.8583;0.85;0.8497;0.9396;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8084;0.8231;0.8084;0.8075;0.7826;0.7993;0.7826;0.7842;0.85;0.8583;0.85;0.8497;0.9395;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8134;0.8276;0.8134;0.8124;0.9275;0.931;0.9275;0.9281;0.85;0.8583;0.85;0.8497;0.9348;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8343;0.8442;0.8343;0.8334;0.8261;0.8359;0.8261;0.8266;0.85;0.8652;0.85;0.8483;0.9389;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8068;0.8197;0.8068;0.8066;0.8696;0.8767;0.8696;0.8693;0.85;0.8571;0.85;0.8473;0.9338;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8342;0.8421;0.8342;0.8332;0.8841;0.8948;0.8841;0.8848;0.85;0.8611;0.85;0.8463;0.9435;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8277;0.8435;0.8277;0.8286;0.8696;0.8713;0.8696;0.8702;0.8333;0.85;0.8333;0.8357;0.9477;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
MLPClassifier;0.8261;0.8403;0.8261;0.8269;0.8696;0.8687;0.8696;0.8689;0.8333;0.8605;0.8333;0.8344;0.9466;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
MLPClassifier;0.8164;0.8283;0.8164;0.8175;0.8841;0.8895;0.8841;0.8829;0.8333;0.8413;0.8333;0.834;0.9458;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
RandomForestClassifier;0.884;0.8881;0.884;0.8838;0.8986;0.9127;0.8986;0.9007;0.8333;0.8565;0.8333;0.8324;0.9691;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.8952;0.8984;0.8952;0.8956;0.8986;0.9004;0.8986;0.8984;0.8333;0.8535;0.8333;0.8317;0.9756;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
KNeighborsClassifier;0.8149;0.8288;0.8149;0.8145;0.8261;0.8254;0.8261;0.825;0.8333;0.8543;0.8333;0.8311;0.9389;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8212;0.8342;0.8212;0.8201;0.8551;0.8594;0.8551;0.8565;0.8333;0.8446;0.8333;0.8304;0.9383;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8889;0.8928;0.8889;0.8887;0.913;0.9156;0.913;0.9122;0.8333;0.8482;0.8333;0.83;0.9719;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
RandomForestClassifier;0.8874;0.8921;0.8874;0.8864;0.8696;0.8714;0.8696;0.8681;0.8333;0.8482;0.8333;0.83;0.9727;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
KNeighborsClassifier;0.8293;0.8402;0.8293;0.8278;0.8406;0.8649;0.8406;0.8441;0.8333;0.8444;0.8333;0.8298;0.9339;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8888;0.8952;0.8888;0.8882;0.8986;0.9031;0.8986;0.8982;0.8333;0.839;0.8333;0.8291;0.9741;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
KNeighborsClassifier;0.839;0.8502;0.839;0.8391;0.8406;0.8463;0.8406;0.841;0.8333;0.846;0.8333;0.8276;0.9388;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.81;0.8229;0.81;0.8098;0.913;0.9159;0.913;0.9118;0.8167;0.8365;0.8167;0.8194;0.9464;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
SVC;0.7761;0.8021;0.7761;0.7786;0.8116;0.8267;0.8116;0.8155;0.8167;0.8253;0.8167;0.8183;0.8964;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
SVC;0.7795;0.8036;0.7795;0.7828;0.8261;0.8296;0.8261;0.8255;0.8167;0.8253;0.8167;0.8183;0.8958;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
MLPClassifier;0.8116;0.8229;0.8116;0.8118;0.8696;0.8748;0.8696;0.8691;0.8167;0.8315;0.8167;0.8181;0.9438;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
MLPClassifier;0.8197;0.8305;0.8197;0.8199;0.8841;0.8951;0.8841;0.883;0.8167;0.8315;0.8167;0.8181;0.9473;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
MLPClassifier;0.818;0.8312;0.818;0.8189;0.8696;0.8869;0.8696;0.8688;0.8167;0.8315;0.8167;0.8181;0.9474;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8228;0.8313;0.8228;0.8228;0.8696;0.8776;0.8696;0.8718;0.8167;0.8315;0.8167;0.8181;0.944;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8133;0.8234;0.8133;0.8119;0.8986;0.9025;0.8986;0.8968;0.8167;0.8315;0.8167;0.8181;0.9453;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8101;0.8259;0.8101;0.8111;0.9275;0.9296;0.9275;0.9274;0.8167;0.8401;0.8167;0.8175;0.9412;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
MLPClassifier;0.8309;0.8409;0.8309;0.831;0.8406;0.8471;0.8406;0.8406;0.8167;0.8269;0.8167;0.8174;0.9435;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.826;0.839;0.826;0.8266;0.8551;0.8576;0.8551;0.8556;0.8167;0.8269;0.8167;0.8174;0.9454;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
RandomForestClassifier;0.9115;0.9165;0.9115;0.9113;0.8406;0.8423;0.8406;0.8412;0.8167;0.829;0.8167;0.8157;0.977;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.8921;0.8957;0.8921;0.8918;0.8551;0.8617;0.8551;0.8566;0.8167;0.8296;0.8167;0.8156;0.9777;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
DecisionTreeClassifier;0.8678;0.8721;0.8678;0.8675;0.8696;0.8736;0.8696;0.8691;0.8167;0.8191;0.8167;0.8136;0.9007;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
RandomForestClassifier;0.8954;0.8992;0.8954;0.8949;0.913;0.9129;0.913;0.9127;0.8167;0.8321;0.8167;0.812;0.9781;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
SVC;0.7665;0.7947;0.7665;0.7696;0.8696;0.8776;0.8696;0.8718;0.8;0.8101;0.8;0.8024;0.8898;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.7729;0.8033;0.7729;0.7749;0.8696;0.8803;0.8696;0.871;0.8;0.8101;0.8;0.8024;0.8876;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
SVC;0.781;0.8063;0.781;0.7834;0.8116;0.8195;0.8116;0.8131;0.8;0.8101;0.8;0.8024;0.897;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.7939;0.8148;0.7939;0.7969;0.8986;0.9105;0.8986;0.8981;0.8;0.8101;0.8;0.8024;0.8983;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
MLPClassifier;0.8261;0.841;0.8261;0.8271;0.8841;0.8926;0.8841;0.885;0.8;0.813;0.8;0.8023;0.9459;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8325;0.843;0.8325;0.8322;0.8406;0.8482;0.8406;0.8427;0.8;0.813;0.8;0.8023;0.9455;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
MLPClassifier;0.8196;0.8312;0.8196;0.8201;0.913;0.9199;0.913;0.9124;0.8;0.8101;0.8;0.8019;0.9425;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8228;0.8389;0.8228;0.8245;0.913;0.9164;0.913;0.9139;0.8;0.819;0.8;0.8014;0.9415;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
SVC;0.7745;0.8051;0.7745;0.7779;0.8406;0.8393;0.8406;0.8346;0.8;0.8058;0.8;0.8007;0.8877;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
MLPClassifier;0.8166;0.8292;0.8166;0.8171;0.913;0.9177;0.913;0.9135;0.8;0.813;0.8;0.8006;0.9425;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
MLPClassifier;0.8261;0.8356;0.8261;0.8258;0.913;0.913;0.913;0.913;0.8;0.813;0.8;0.8006;0.9437;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8262;0.8356;0.8262;0.8262;0.8116;0.8257;0.8116;0.8144;0.8;0.813;0.8;0.8006;0.9467;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
MLPClassifier;0.8294;0.8394;0.8294;0.8293;0.8551;0.8595;0.8551;0.8562;0.8;0.813;0.8;0.8006;0.945;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
MLPClassifier;0.8195;0.8306;0.8195;0.8193;0.8986;0.9049;0.8986;0.8999;0.8;0.813;0.8;0.8006;0.9448;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
RandomForestClassifier;0.8872;0.8911;0.8872;0.8864;0.8551;0.8675;0.8551;0.8566;0.8;0.8225;0.8;0.8004;0.9727;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 568};RandomForestClassifier(n_estimators=10, random_state=568)
KNeighborsClassifier;0.8342;0.8429;0.8342;0.8344;0.7826;0.8048;0.7826;0.7831;0.8;0.8052;0.8;0.7985;0.9407;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8873;0.8915;0.8873;0.8863;0.8551;0.8582;0.8551;0.8532;0.8;0.8327;0.8;0.798;0.9763;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
RandomForestClassifier;0.8872;0.894;0.8872;0.8873;0.9275;0.9347;0.9275;0.9279;0.8;0.813;0.8;0.7978;0.9744;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 518};RandomForestClassifier(n_estimators=10, random_state=518)
DecisionTreeClassifier;0.8615;0.8632;0.8615;0.8609;0.7971;0.7968;0.7971;0.7967;0.8;0.8082;0.8;0.7972;0.8962;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
RandomForestClassifier;0.8937;0.8985;0.8937;0.8935;0.8986;0.9025;0.8986;0.8986;0.8;0.8237;0.8;0.7967;0.975;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.8873;0.8934;0.8873;0.8866;0.8841;0.8886;0.8841;0.8837;0.8;0.8237;0.8;0.7967;0.971;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.8905;0.8941;0.8905;0.8903;0.9275;0.9281;0.9275;0.9275;0.8;0.8214;0.8;0.7963;0.9772;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
RandomForestClassifier;0.9017;0.9048;0.9017;0.9017;0.8841;0.885;0.8841;0.8825;0.8;0.8131;0.8;0.7952;0.9786;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
RandomForestClassifier;0.8873;0.8916;0.8873;0.8867;0.8696;0.8688;0.8696;0.8689;0.8;0.8131;0.8;0.7952;0.9702;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
RandomForestClassifier;0.8971;0.9036;0.8971;0.8973;0.8841;0.8856;0.8841;0.8828;0.8;0.8159;0.8;0.7948;0.9719;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
RandomForestClassifier;0.8985;0.9018;0.8985;0.8985;0.8986;0.9103;0.8986;0.8956;0.8;0.8054;0.8;0.7944;0.9765;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
SVC;0.7938;0.819;0.7938;0.7964;0.7681;0.7799;0.7681;0.768;0.7833;0.7956;0.7833;0.7864;0.9008;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
SVC;0.7778;0.8006;0.7778;0.7808;0.8551;0.8643;0.8551;0.8549;0.7833;0.7956;0.7833;0.7864;0.8907;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
SVC;0.7776;0.8032;0.7776;0.7787;0.7971;0.8396;0.7971;0.8016;0.7833;0.7956;0.7833;0.7864;0.8992;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.7825;0.8036;0.7825;0.786;0.8696;0.8748;0.8696;0.8691;0.7833;0.7956;0.7833;0.7864;0.8949;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
SVC;0.7729;0.8004;0.7729;0.7762;0.8986;0.9105;0.8986;0.8981;0.7833;0.7956;0.7833;0.7864;0.8893;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
SVC;0.773;0.794;0.773;0.7758;0.8696;0.873;0.8696;0.8704;0.7833;0.7956;0.7833;0.7864;0.8886;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.7713;0.8006;0.7713;0.774;0.8696;0.8955;0.8696;0.8705;0.7833;0.7956;0.7833;0.7864;0.8892;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
SVC;0.776;0.8034;0.776;0.7796;0.8261;0.8259;0.8261;0.8257;0.7833;0.7956;0.7833;0.7864;0.8944;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
SVC;0.7857;0.8043;0.7857;0.7879;0.7681;0.7981;0.7681;0.7711;0.7833;0.7956;0.7833;0.7864;0.892;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
SVC;0.7761;0.8;0.7761;0.7779;0.8551;0.8752;0.8551;0.8528;0.7833;0.7956;0.7833;0.7864;0.8867;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
MLPClassifier;0.8357;0.8449;0.8357;0.8361;0.8696;0.8736;0.8696;0.8691;0.7833;0.7963;0.7833;0.7863;0.9478;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
MLPClassifier;0.8228;0.8345;0.8228;0.8239;0.8986;0.9067;0.8986;0.8988;0.7833;0.7997;0.7833;0.7858;0.9443;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
MLPClassifier;0.8228;0.8377;0.8228;0.8232;0.8551;0.8571;0.8551;0.8553;0.7833;0.7955;0.7833;0.7852;0.9413;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
MLPClassifier;0.8132;0.8246;0.8132;0.8137;0.8551;0.8594;0.8551;0.8565;0.7833;0.7955;0.7833;0.7852;0.9458;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 869, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=869)
MLPClassifier;0.8197;0.8312;0.8197;0.8207;0.8261;0.8272;0.8261;0.8236;0.7833;0.797;0.7833;0.7852;0.9449;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 12, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=12)
SVC;0.7843;0.8081;0.7843;0.7852;0.8261;0.8433;0.8261;0.8303;0.7833;0.7887;0.7833;0.7847;0.8941;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
SVC;0.7793;0.8011;0.7793;0.7812;0.8551;0.861;0.8551;0.8546;0.7833;0.7917;0.7833;0.7839;0.8891;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
DecisionTreeClassifier;0.8485;0.853;0.8485;0.8476;0.7826;0.7901;0.7826;0.7809;0.7833;0.7994;0.7833;0.7834;0.8864;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
DecisionTreeClassifier;0.847;0.8525;0.847;0.847;0.7971;0.8202;0.7971;0.8;0.7833;0.7934;0.7833;0.7826;0.8854;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
DecisionTreeClassifier;0.8695;0.8756;0.8695;0.8695;0.7681;0.7703;0.7681;0.7685;0.7833;0.7833;0.7833;0.7811;0.9019;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
RandomForestClassifier;0.9034;0.9062;0.9034;0.9031;0.9275;0.9326;0.9275;0.9274;0.7833;0.8222;0.7833;0.781;0.9766;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
RandomForestClassifier;0.8873;0.8944;0.8873;0.8866;0.8551;0.8628;0.8551;0.8551;0.7833;0.8031;0.7833;0.7803;0.9759;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
RandomForestClassifier;0.897;0.8991;0.897;0.8965;0.9275;0.9328;0.9275;0.9283;0.7833;0.7945;0.7833;0.7802;0.9746;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
RandomForestClassifier;0.8873;0.8909;0.8873;0.8872;0.8696;0.8722;0.8696;0.8689;0.7833;0.7945;0.7833;0.7802;0.9733;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 12};RandomForestClassifier(n_estimators=10, random_state=12)
DecisionTreeClassifier;0.8793;0.8832;0.8793;0.8788;0.7681;0.7732;0.7681;0.7672;0.7833;0.7824;0.7833;0.78;0.9093;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
DecisionTreeClassifier;0.8406;0.8437;0.8406;0.84;0.7681;0.7656;0.7681;0.7652;0.7833;0.7857;0.7833;0.78;0.8805;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=400)
DecisionTreeClassifier;0.8534;0.8607;0.8534;0.8524;0.7681;0.7678;0.7681;0.7677;0.7833;0.7926;0.7833;0.7799;0.8899;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
RandomForestClassifier;0.8937;0.8992;0.8937;0.8937;0.8406;0.8422;0.8406;0.8372;0.7833;0.7871;0.7833;0.7793;0.9703;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
DecisionTreeClassifier;0.8583;0.8615;0.8583;0.8586;0.7971;0.7973;0.7971;0.7939;0.7833;0.7824;0.7833;0.7791;0.8939;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
DecisionTreeClassifier;0.8374;0.8419;0.8374;0.8367;0.8551;0.857;0.8551;0.8523;0.7833;0.7819;0.7833;0.7785;0.8778;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=671)
RandomForestClassifier;0.8872;0.8947;0.8872;0.8874;0.8986;0.8986;0.8986;0.8986;0.7833;0.8154;0.7833;0.7777;0.9742;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
RandomForestClassifier;0.8922;0.894;0.8922;0.8916;0.8986;0.9141;0.8986;0.8991;0.7833;0.7923;0.7833;0.7767;0.9745;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
MLPClassifier;0.8133;0.8275;0.8133;0.8144;0.8986;0.9152;0.8986;0.8995;0.7667;0.7925;0.7667;0.7719;0.9409;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
SVC;0.7761;0.8012;0.7761;0.7784;0.8696;0.8805;0.8696;0.8716;0.7667;0.7791;0.7667;0.7703;0.8946;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
SVC;0.7858;0.8072;0.7858;0.7885;0.8406;0.852;0.8406;0.8378;0.7667;0.7791;0.7667;0.7703;0.8963;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.7746;0.8001;0.7746;0.7776;0.8406;0.8503;0.8406;0.8393;0.7667;0.7791;0.7667;0.7703;0.8926;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.7858;0.8101;0.7858;0.7877;0.7536;0.7901;0.7536;0.7565;0.7667;0.7791;0.7667;0.7703;0.9027;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.773;0.7951;0.773;0.7764;0.8841;0.8933;0.8841;0.8849;0.7667;0.7791;0.7667;0.7703;0.8935;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
SVC;0.7761;0.8024;0.7761;0.7789;0.8986;0.9056;0.8986;0.9002;0.7667;0.7816;0.7667;0.77;0.8959;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
MLPClassifier;0.8052;0.8142;0.8052;0.8056;0.8986;0.9081;0.8986;0.8994;0.7667;0.7816;0.7667;0.77;0.9423;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 168, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=168)
SVC;0.7651;0.7914;0.7651;0.7681;0.8841;0.8845;0.8841;0.884;0.7667;0.7738;0.7667;0.7681;0.8866;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
SVC;0.7844;0.8114;0.7844;0.7865;0.8261;0.8446;0.8261;0.8284;0.7667;0.7738;0.7667;0.7681;0.8938;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 886};SVC(C=10, probability=True, random_state=886)
SVC;0.7761;0.7993;0.7761;0.7776;0.8261;0.842;0.8261;0.8196;0.7667;0.7738;0.7667;0.7681;0.8905;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
SVC;0.7891;0.8119;0.7891;0.7923;0.7971;0.8067;0.7971;0.7941;0.7667;0.7738;0.7667;0.7681;0.8955;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 220};SVC(C=10, probability=True, random_state=220)
DecisionTreeClassifier;0.8616;0.8662;0.8616;0.8616;0.8406;0.8411;0.8406;0.8398;0.7667;0.7727;0.7667;0.7641;0.8959;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
RandomForestClassifier;0.8938;0.8993;0.8938;0.8932;0.942;0.9448;0.942;0.9426;0.7667;0.7897;0.7667;0.7637;0.9763;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 12};RandomForestClassifier(n_estimators=20, random_state=12)
DecisionTreeClassifier;0.8358;0.8434;0.8358;0.8348;0.8261;0.8271;0.8261;0.8263;0.7667;0.7648;0.7667;0.7636;0.8764;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
RandomForestClassifier;0.8857;0.8895;0.8857;0.8857;0.942;0.9506;0.942;0.943;0.7667;0.7811;0.7667;0.763;0.9746;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 518};RandomForestClassifier(n_estimators=20, random_state=518)
DecisionTreeClassifier;0.8712;0.877;0.8712;0.871;0.8696;0.8754;0.8696;0.8713;0.7667;0.7667;0.7667;0.7616;0.9032;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
SVC;0.7714;0.7936;0.7714;0.7723;0.8696;0.8796;0.8696;0.872;0.75;0.7569;0.75;0.7521;0.8912;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 133};SVC(C=10, probability=True, random_state=133)
DecisionTreeClassifier;0.8583;0.8693;0.8583;0.8584;0.8986;0.9071;0.8986;0.8981;0.75;0.7632;0.75;0.7482;0.894;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
DecisionTreeClassifier;0.855;0.8591;0.855;0.8547;0.8261;0.8337;0.8261;0.8248;0.75;0.7597;0.75;0.7481;0.8907;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
DecisionTreeClassifier;0.8599;0.864;0.8599;0.8601;0.942;0.9444;0.942;0.9423;0.75;0.7602;0.75;0.7474;0.8949;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
DecisionTreeClassifier;0.8615;0.8662;0.8615;0.8615;0.8116;0.8111;0.8116;0.8095;0.75;0.7602;0.75;0.7474;0.8965;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
RandomForestClassifier;0.8969;0.9003;0.8969;0.8972;0.8841;0.8921;0.8841;0.8831;0.75;0.7853;0.75;0.7465;0.9763;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
DecisionTreeClassifier;0.8615;0.8655;0.8615;0.8611;0.8116;0.823;0.8116;0.8129;0.75;0.7665;0.75;0.7462;0.896;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
RandomForestClassifier;0.9066;0.9125;0.9066;0.9064;0.8261;0.8336;0.8261;0.8231;0.75;0.7679;0.75;0.7454;0.9791;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 518};RandomForestClassifier(n_estimators=10, random_state=518)
RandomForestClassifier;0.8905;0.8944;0.8905;0.8909;0.7826;0.7836;0.7826;0.7829;0.75;0.7674;0.75;0.7447;0.9759;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 568};RandomForestClassifier(n_estimators=20, random_state=568)
DecisionTreeClassifier;0.8615;0.8656;0.8615;0.861;0.7826;0.8262;0.7826;0.7873;0.75;0.7559;0.75;0.7425;0.8963;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
DecisionTreeClassifier;0.8711;0.8771;0.8711;0.8707;0.7826;0.8095;0.7826;0.7854;0.75;0.7559;0.75;0.7425;0.9033;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
DecisionTreeClassifier;0.8519;0.8565;0.8519;0.8511;0.8116;0.8149;0.8116;0.8054;0.75;0.7596;0.75;0.7416;0.8889;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
DecisionTreeClassifier;0.8487;0.8523;0.8487;0.8492;0.7971;0.8325;0.7971;0.8003;0.7333;0.7367;0.7333;0.7294;0.8864;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
DecisionTreeClassifier;0.8438;0.8503;0.8438;0.8438;0.8261;0.8271;0.8261;0.8263;0.7333;0.7323;0.7333;0.7268;0.8827;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
DecisionTreeClassifier;0.8406;0.8446;0.8406;0.8403;0.7391;0.7515;0.7391;0.7431;0.7333;0.7344;0.7333;0.7262;0.8805;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
DecisionTreeClassifier;0.8582;0.8639;0.8582;0.8578;0.7971;0.8013;0.7971;0.7976;0.7333;0.7383;0.7333;0.7246;0.8941;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
DecisionTreeClassifier;0.8583;0.8632;0.8583;0.8577;0.7971;0.7948;0.7971;0.795;0.7333;0.7504;0.7333;0.7217;0.8939;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
LogisticRegression;0.7262;0.7379;0.7262;0.7249;0.6812;0.7181;0.6812;0.6843;0.7167;0.7697;0.7167;0.7188;0.894;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.7085;0.7187;0.7085;0.7083;0.7246;0.7671;0.7246;0.7261;0.7167;0.7697;0.7167;0.7188;0.8883;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.7345;0.7466;0.7345;0.7336;0.6232;0.6984;0.6232;0.6314;0.7167;0.7595;0.7167;0.7171;0.8961;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7036;0.7202;0.7036;0.7038;0.7536;0.7674;0.7536;0.7546;0.7167;0.7595;0.7167;0.7171;0.8903;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7022;0.7142;0.7022;0.7022;0.7391;0.7778;0.7391;0.7395;0.7167;0.7595;0.7167;0.7171;0.8862;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.7005;0.715;0.7005;0.7021;0.6957;0.7039;0.6957;0.6984;0.7167;0.7595;0.7167;0.7171;0.8901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.7054;0.718;0.7054;0.7061;0.6957;0.696;0.6957;0.6908;0.7167;0.7595;0.7167;0.7171;0.8907;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.7054;0.7183;0.7054;0.7056;0.7391;0.7409;0.7391;0.737;0.7167;0.7595;0.7167;0.7171;0.8904;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7199;0.7312;0.7199;0.72;0.6377;0.6517;0.6377;0.6395;0.7167;0.7595;0.7167;0.7171;0.8977;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7167;0.7285;0.7167;0.7178;0.6957;0.7195;0.6957;0.695;0.7167;0.7595;0.7167;0.7171;0.892;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7181;0.7284;0.7181;0.7186;0.6667;0.6746;0.6667;0.6669;0.7167;0.7595;0.7167;0.7171;0.8923;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.6958;0.7076;0.6958;0.6947;0.7536;0.7733;0.7536;0.7575;0.7167;0.7595;0.7167;0.7171;0.8828;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.7085;0.7225;0.7085;0.7091;0.7826;0.7921;0.7826;0.7843;0.7167;0.7595;0.7167;0.7171;0.8901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
DecisionTreeClassifier;0.8599;0.864;0.8599;0.8591;0.7971;0.808;0.7971;0.794;0.7167;0.721;0.7167;0.7113;0.8949;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=400)
DecisionTreeClassifier;0.8534;0.8622;0.8534;0.8541;0.8841;0.8839;0.8841;0.8837;0.7167;0.7208;0.7167;0.7097;0.8901;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 131};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=131)
DecisionTreeClassifier;0.8471;0.8518;0.8471;0.8464;0.8986;0.8994;0.8986;0.897;0.7167;0.7243;0.7167;0.7049;0.885;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 400};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=400)
LogisticRegression;0.7118;0.7238;0.7118;0.7122;0.7101;0.7594;0.7101;0.7095;0.7;0.7619;0.7;0.7018;0.8895;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.7068;0.7139;0.7068;0.7063;0.7681;0.7681;0.7681;0.7681;0.7;0.7343;0.7;0.7011;0.8865;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.7149;0.7251;0.7149;0.7142;0.7536;0.7548;0.7536;0.7473;0.7;0.7122;0.7;0.7;0.8869;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.7197;0.7324;0.7197;0.7201;0.6812;0.7222;0.6812;0.6867;0.7;0.7512;0.7;0.6999;0.8904;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.702;0.7198;0.702;0.703;0.6957;0.7104;0.6957;0.6873;0.7;0.7512;0.7;0.6999;0.89;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.7117;0.7205;0.7117;0.71;0.6522;0.6498;0.6522;0.6508;0.7;0.7237;0.7;0.6987;0.8938;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.6988;0.7064;0.6988;0.6987;0.7971;0.8082;0.7971;0.7985;0.7;0.743;0.7;0.6986;0.8865;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7055;0.7215;0.7055;0.7056;0.7536;0.7787;0.7536;0.7548;0.7;0.743;0.7;0.6986;0.8843;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.694;0.7071;0.694;0.6918;0.8116;0.8237;0.8116;0.8111;0.7;0.743;0.7;0.6986;0.8835;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.7086;0.7206;0.7086;0.7077;0.7681;0.7863;0.7681;0.7691;0.7;0.743;0.7;0.6986;0.8888;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7069;0.715;0.7069;0.7047;0.6812;0.6987;0.6812;0.6802;0.7;0.743;0.7;0.6986;0.8895;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.7246;0.7371;0.7246;0.7259;0.6522;0.6581;0.6522;0.6526;0.7;0.743;0.7;0.6986;0.8915;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.6957;0.7047;0.6957;0.6943;0.8116;0.8323;0.8116;0.815;0.7;0.743;0.7;0.6986;0.8871;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
LogisticRegression;0.702;0.7143;0.702;0.702;0.7246;0.7491;0.7246;0.7305;0.6833;0.7113;0.6833;0.6852;0.8919;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 710, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=710)"
LogisticRegression;0.7311;0.7378;0.7311;0.7308;0.6087;0.6365;0.6087;0.6132;0.6833;0.7043;0.6833;0.6809;0.8951;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
LogisticRegression;0.6988;0.7116;0.6988;0.6991;0.7826;0.7915;0.7826;0.7829;0.6833;0.6966;0.6833;0.6768;0.8875;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 344, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=344)"
DecisionTreeClassifier;0.8535;0.8585;0.8535;0.8533;0.8116;0.8273;0.8116;0.8111;0.6833;0.6815;0.6833;0.6743;0.8902;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 671};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=671)
LogisticRegression;0.715;0.7275;0.715;0.7153;0.6522;0.6603;0.6522;0.6525;0.6667;0.6756;0.6667;0.6616;0.8995;smote;250;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 885, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=885)"
