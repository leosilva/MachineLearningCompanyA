Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.8004,0.8125,0.8004,0.8022,0.8299,0.8416,0.8299,0.8329,0.75,0.7506,0.75,0.748,0.9312,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 895}","RandomForestClassifier(n_estimators=10, random_state=895)"
KNeighborsClassifier,0.7969,0.8109,0.7969,0.7985,0.7743,0.7853,0.7743,0.7773,0.7333,0.7327,0.7333,0.731,0.9154,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier,0.7803,0.8172,0.7803,0.7781,0.7674,0.7821,0.7674,0.7666,0.7167,0.7196,0.7167,0.7172,0.9258,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 679, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=679)"
DecisionTreeClassifier,0.8298,0.8443,0.8298,0.8332,0.8125,0.8382,0.8125,0.8176,0.7167,0.7194,0.7167,0.7131,0.9411,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 2}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=2)"
LogisticRegression,0.7709,0.7789,0.7709,0.7718,0.7847,0.7864,0.7847,0.7854,0.7167,0.7539,0.7167,0.7131,0.9185,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 73, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=73)"
DecisionTreeClassifier,0.8282,0.8408,0.8282,0.8321,0.8299,0.8427,0.8299,0.8331,0.6833,0.6944,0.6833,0.6866,0.9378,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 220}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=220)"
SVC,0.7829,0.8251,0.7829,0.781,0.7812,0.8202,0.7812,0.786,0.6833,0.7084,0.6833,0.6824,0.8977,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 618}","SVC(C=1, kernel='linear', probability=True, random_state=618)"
RandomForestClassifier,0.8134,0.8215,0.8134,0.8143,0.8299,0.8357,0.8299,0.832,0.6833,0.6879,0.6833,0.6757,0.937,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 626}","RandomForestClassifier(n_estimators=20, random_state=626)"
SVC,0.7717,0.8219,0.7717,0.7686,0.7326,0.7918,0.7326,0.7292,0.6833,0.6851,0.6833,0.6752,0.9031,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 316}","SVC(C=0.1, kernel='linear', probability=True, random_state=316)"
LogisticRegression,0.796,0.803,0.796,0.797,0.7778,0.7891,0.7778,0.7813,0.6667,0.6656,0.6667,0.6642,0.9308,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 5, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=5)"
KNeighborsClassifier,0.822,0.8315,0.822,0.8239,0.7847,0.8043,0.7847,0.7887,0.6667,0.679,0.6667,0.6627,0.9279,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier,0.7499,0.7786,0.7499,0.7517,0.8264,0.832,0.8264,0.8283,0.6667,0.6603,0.6667,0.66,0.9174,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 317, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=317)"
MLPClassifier,0.7578,0.7815,0.7578,0.7567,0.7674,0.7729,0.7674,0.7689,0.6667,0.6952,0.6667,0.6584,0.9233,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 372, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=372)"
DecisionTreeClassifier,0.822,0.8392,0.822,0.8242,0.8542,0.8629,0.8542,0.8559,0.65,0.662,0.65,0.6531,0.9374,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 620}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=620)"
KNeighborsClassifier,0.8056,0.8187,0.8056,0.8065,0.809,0.8143,0.809,0.8103,0.65,0.6459,0.65,0.6471,0.9242,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
LogisticRegression,0.7648,0.7734,0.7648,0.7656,0.809,0.815,0.809,0.8109,0.65,0.6511,0.65,0.6449,0.9205,smote,500,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 164, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=164)"
SVC,0.7726,0.819,0.7726,0.7694,0.7326,0.8108,0.7326,0.7374,0.6667,0.7473,0.6667,0.6432,0.9092,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 919}","SVC(C=10, probability=True, random_state=919)"
RandomForestClassifier,0.8246,0.8346,0.8246,0.8265,0.8021,0.8085,0.8021,0.8043,0.6167,0.6156,0.6167,0.6154,0.9397,smote,500,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 734}","RandomForestClassifier(n_estimators=10, random_state=734)"
