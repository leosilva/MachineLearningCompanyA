Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8698;0.8704;0.8698;0.8699;0.8866;0.8866;0.8866;0.8866;0.9;0.9;0.9;0.9;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
KNeighborsClassifier;0.8388;0.8408;0.8388;0.839;0.8729;0.874;0.8729;0.8731;0.9;0.9019;0.9;0.8999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8466;0.8487;0.8466;0.847;0.8276;0.8287;0.8276;0.828;0.8833;0.8884;0.8833;0.8834;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8657;0.8666;0.8657;0.8659;0.8931;0.8933;0.8931;0.8932;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
RandomForestClassifier;0.8634;0.8644;0.8634;0.8634;0.9;0.9032;0.9;0.9007;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8745;0.8757;0.8745;0.8744;0.8483;0.8478;0.8483;0.8478;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8699;0.8708;0.8699;0.87;0.8483;0.8566;0.8483;0.8491;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 426};RandomForestClassifier(n_estimators=10, random_state=426)
RandomForestClassifier;0.8649;0.8669;0.8649;0.865;0.8763;0.8758;0.8763;0.8758;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
KNeighborsClassifier;0.837;0.8397;0.837;0.8375;0.8793;0.8794;0.8793;0.8794;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8683;0.8692;0.8683;0.8684;0.8522;0.8567;0.8522;0.8533;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
KNeighborsClassifier;0.8442;0.8464;0.8442;0.8445;0.8419;0.8467;0.8419;0.8417;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8354;0.8379;0.8354;0.8359;0.8862;0.8891;0.8862;0.8869;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8427;0.845;0.8427;0.8433;0.8552;0.8564;0.8552;0.8554;0.8833;0.884;0.8833;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.837;0.8405;0.837;0.8375;0.8552;0.856;0.8552;0.8547;0.8667;0.8739;0.8667;0.8679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8431;0.8445;0.8431;0.8431;0.9034;0.9087;0.9034;0.9041;0.8667;0.8739;0.8667;0.8679;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.8446;0.8467;0.8446;0.8451;0.8483;0.8487;0.8483;0.8484;0.8667;0.8746;0.8667;0.8674;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8389;0.8422;0.8389;0.8395;0.8759;0.878;0.8759;0.8762;0.8667;0.8746;0.8667;0.8674;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8365;0.8406;0.8365;0.8372;0.89;0.8909;0.89;0.89;0.8667;0.8692;0.8667;0.8669;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.842;0.8456;0.842;0.8429;0.8621;0.8624;0.8621;0.8622;0.8667;0.8692;0.8667;0.8669;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8753;0.8765;0.8753;0.8756;0.8379;0.8396;0.8379;0.838;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
RandomForestClassifier;0.8703;0.8718;0.8703;0.8703;0.8897;0.8978;0.8897;0.8901;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
KNeighborsClassifier;0.8546;0.8578;0.8546;0.8552;0.8034;0.805;0.8034;0.8036;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8484;0.8502;0.8484;0.8488;0.831;0.8315;0.831;0.8312;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8756;0.877;0.8756;0.8755;0.8621;0.8627;0.8621;0.8623;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
RandomForestClassifier;0.8691;0.871;0.8691;0.8691;0.8759;0.8783;0.8759;0.8764;0.8667;0.8667;0.8667;0.8667;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
KNeighborsClassifier;0.8347;0.8371;0.8347;0.8354;0.8586;0.8585;0.8586;0.8576;0.8667;0.8673;0.8667;0.8666;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8691;0.8703;0.8691;0.8693;0.8862;0.8875;0.8862;0.8866;0.8667;0.869;0.8667;0.8664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8684;0.8698;0.8684;0.8685;0.9034;0.9098;0.9034;0.9032;0.8667;0.869;0.8667;0.8664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 426};RandomForestClassifier(n_estimators=20, random_state=426)
RandomForestClassifier;0.8699;0.8716;0.8699;0.87;0.8931;0.8952;0.8931;0.8935;0.8667;0.869;0.8667;0.8664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 426};RandomForestClassifier(n_estimators=20, random_state=426)
MLPClassifier;0.7573;0.7658;0.7573;0.759;0.8419;0.8455;0.8419;0.8425;0.8667;0.869;0.8667;0.8664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
RandomForestClassifier;0.8714;0.8726;0.8714;0.8715;0.8621;0.8618;0.8621;0.8616;0.8667;0.869;0.8667;0.8664;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8668;0.8676;0.8668;0.8668;0.8832;0.8829;0.8832;0.8827;0.8667;0.8664;0.8667;0.8662;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8711;0.8726;0.8711;0.8712;0.8724;0.8731;0.8724;0.8726;0.8667;0.8677;0.8667;0.8661;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 426};RandomForestClassifier(n_estimators=20, random_state=426)
RandomForestClassifier;0.8733;0.8756;0.8733;0.8736;0.8552;0.8572;0.8552;0.8555;0.8667;0.8677;0.8667;0.8661;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8764;0.8774;0.8764;0.8763;0.8621;0.862;0.8621;0.8619;0.8667;0.875;0.8667;0.8658;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
KNeighborsClassifier;0.8465;0.8481;0.8465;0.8469;0.8454;0.8468;0.8454;0.8455;0.85;0.8611;0.85;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8453;0.8479;0.8453;0.8461;0.8797;0.8823;0.8797;0.88;0.85;0.862;0.85;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8679;0.8692;0.8679;0.868;0.8385;0.8402;0.8385;0.8383;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 426};RandomForestClassifier(n_estimators=20, random_state=426)
MLPClassifier;0.757;0.768;0.757;0.7584;0.7931;0.8062;0.7931;0.7958;0.85;0.8554;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
KNeighborsClassifier;0.8427;0.845;0.8427;0.8431;0.8414;0.8403;0.8414;0.8404;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8718;0.8726;0.8718;0.8717;0.8655;0.8655;0.8655;0.8653;0.85;0.8514;0.85;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 426};RandomForestClassifier(n_estimators=10, random_state=426)
KNeighborsClassifier;0.8507;0.8535;0.8507;0.8512;0.8247;0.8265;0.8247;0.8253;0.85;0.8505;0.85;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8707;0.8722;0.8707;0.8708;0.8517;0.8516;0.8517;0.8516;0.85;0.8519;0.85;0.8498;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8752;0.8769;0.8752;0.8754;0.8694;0.8703;0.8694;0.8696;0.85;0.8519;0.85;0.8498;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
KNeighborsClassifier;0.8423;0.8464;0.8423;0.8427;0.8552;0.8607;0.8552;0.8564;0.85;0.8517;0.85;0.8498;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8458;0.8484;0.8458;0.8465;0.8552;0.8542;0.8552;0.8538;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8335;0.8376;0.8335;0.8342;0.8729;0.8753;0.8729;0.8737;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.842;0.8455;0.842;0.8427;0.8414;0.8485;0.8414;0.8423;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8446;0.848;0.8446;0.8454;0.8793;0.881;0.8793;0.8795;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8423;0.8454;0.8423;0.8427;0.8414;0.8466;0.8414;0.842;0.8333;0.85;0.8333;0.8357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8434;0.8463;0.8434;0.844;0.8591;0.8632;0.8591;0.8601;0.8333;0.8434;0.8333;0.8352;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8381;0.8409;0.8381;0.8386;0.8793;0.8816;0.8793;0.879;0.8333;0.8434;0.8333;0.8352;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.7566;0.7637;0.7566;0.7583;0.8552;0.8545;0.8552;0.8543;0.8333;0.8365;0.8333;0.8339;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
MLPClassifier;0.75;0.7579;0.75;0.7522;0.8179;0.8243;0.8179;0.8185;0.8333;0.8424;0.8333;0.8336;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
MLPClassifier;0.7501;0.7604;0.7501;0.7522;0.8483;0.8504;0.8483;0.8485;0.8333;0.8424;0.8333;0.8336;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
MLPClassifier;0.7515;0.7594;0.7515;0.753;0.8179;0.8365;0.8179;0.8208;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
DecisionTreeClassifier;0.8461;0.8473;0.8461;0.8464;0.8797;0.8938;0.8797;0.8798;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
DecisionTreeClassifier;0.8407;0.8422;0.8407;0.8408;0.8797;0.8858;0.8797;0.8802;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=268)
MLPClassifier;0.7616;0.7704;0.7616;0.7636;0.8552;0.8569;0.8552;0.8557;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
MLPClassifier;0.7559;0.763;0.7559;0.7577;0.8241;0.8234;0.8241;0.8237;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
MLPClassifier;0.7497;0.7569;0.7497;0.7516;0.8897;0.8895;0.8897;0.8894;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
MLPClassifier;0.7546;0.7642;0.7546;0.7566;0.8351;0.842;0.8351;0.8356;0.8333;0.8354;0.8333;0.833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
MLPClassifier;0.7547;0.7626;0.7547;0.7567;0.8207;0.82;0.8207;0.8202;0.8333;0.8331;0.8333;0.8329;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
RandomForestClassifier;0.8706;0.8722;0.8706;0.8709;0.8935;0.8941;0.8935;0.8933;0.8333;0.8331;0.8333;0.8329;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 426};RandomForestClassifier(n_estimators=20, random_state=426)
DecisionTreeClassifier;0.8411;0.8419;0.8411;0.8413;0.8557;0.8621;0.8557;0.8571;0.8333;0.8331;0.8333;0.8329;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
RandomForestClassifier;0.871;0.8719;0.871;0.8711;0.8625;0.8652;0.8625;0.8628;0.8333;0.8374;0.8333;0.8328;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
RandomForestClassifier;0.873;0.8737;0.873;0.873;0.8724;0.8725;0.8724;0.8724;0.8333;0.8374;0.8333;0.8328;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 803};RandomForestClassifier(n_estimators=20, random_state=803)
MLPClassifier;0.7604;0.7683;0.7604;0.7625;0.8276;0.8318;0.8276;0.828;0.8333;0.8374;0.8333;0.8328;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
MLPClassifier;0.7477;0.7578;0.7477;0.7496;0.8041;0.8045;0.8041;0.803;0.8333;0.8417;0.8333;0.832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
MLPClassifier;0.7551;0.7665;0.7551;0.7574;0.8931;0.8935;0.8931;0.8927;0.8333;0.8338;0.8333;0.8312;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
MLPClassifier;0.7516;0.7606;0.7516;0.7533;0.831;0.8303;0.831;0.8305;0.8333;0.8338;0.8333;0.8312;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
KNeighborsClassifier;0.8469;0.8488;0.8469;0.8474;0.8276;0.8276;0.8276;0.8275;0.8167;0.8396;0.8167;0.8193;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8362;0.8384;0.8362;0.8367;0.8759;0.8839;0.8759;0.8776;0.8167;0.8287;0.8167;0.819;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8419;0.8451;0.8419;0.8427;0.8729;0.8763;0.8729;0.8732;0.8167;0.8319;0.8167;0.8187;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.7528;0.7613;0.7528;0.7548;0.8207;0.8232;0.8207;0.8212;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
SVC;0.7463;0.753;0.7463;0.7477;0.7966;0.8145;0.7966;0.7985;0.8167;0.8234;0.8167;0.8178;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7444;0.7534;0.7444;0.7466;0.8517;0.8627;0.8517;0.8532;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7524;0.7621;0.7524;0.7548;0.8586;0.883;0.8586;0.8606;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7596;0.7686;0.7596;0.7614;0.8316;0.8566;0.8316;0.8343;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7478;0.7533;0.7478;0.7496;0.7897;0.818;0.7897;0.792;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7543;0.7619;0.7543;0.756;0.8172;0.8339;0.8172;0.8193;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7535;0.765;0.7535;0.7556;0.8241;0.8586;0.8241;0.8272;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7423;0.7498;0.7423;0.7439;0.8488;0.8658;0.8488;0.8513;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7382;0.7438;0.7382;0.7398;0.8517;0.8707;0.8517;0.854;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7481;0.7536;0.7481;0.7496;0.8007;0.8241;0.8007;0.8038;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
SVC;0.7504;0.7632;0.7504;0.7526;0.8454;0.8576;0.8454;0.8465;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
MLPClassifier;0.7509;0.7589;0.7509;0.7527;0.8241;0.8289;0.8241;0.8254;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
SVC;0.7409;0.7482;0.7409;0.7427;0.8517;0.8712;0.8517;0.8534;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7565;0.7672;0.7565;0.759;0.8385;0.8702;0.8385;0.8405;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.749;0.7597;0.749;0.7507;0.7931;0.8247;0.7931;0.7967;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7386;0.7422;0.7386;0.7399;0.831;0.854;0.831;0.833;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7528;0.7624;0.7528;0.7548;0.8241;0.844;0.8241;0.8266;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7458;0.7571;0.7458;0.7481;0.8591;0.8727;0.8591;0.8609;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7481;0.7542;0.7481;0.7492;0.8282;0.8559;0.8282;0.8307;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7554;0.7629;0.7554;0.7568;0.8207;0.8489;0.8207;0.8235;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7451;0.7543;0.7451;0.7469;0.8345;0.8518;0.8345;0.8357;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7554;0.76;0.7554;0.7569;0.8241;0.8458;0.8241;0.8254;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7444;0.7516;0.7444;0.7461;0.8103;0.8217;0.8103;0.8133;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7531;0.761;0.7531;0.7545;0.811;0.8307;0.811;0.8126;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.7577;0.7682;0.7577;0.7596;0.7828;0.8074;0.7828;0.7847;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7409;0.7462;0.7409;0.7426;0.8621;0.8731;0.8621;0.8636;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7444;0.7593;0.7444;0.7473;0.8552;0.8686;0.8552;0.8569;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
SVC;0.7524;0.761;0.7524;0.7532;0.8207;0.8493;0.8207;0.824;0.8167;0.8304;0.8167;0.8176;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
MLPClassifier;0.7558;0.7632;0.7558;0.7577;0.8345;0.8402;0.8345;0.8357;0.8167;0.8224;0.8167;0.8173;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 424, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=424)
DecisionTreeClassifier;0.8461;0.8473;0.8461;0.8461;0.8655;0.869;0.8655;0.8662;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.8439;0.8462;0.8439;0.8439;0.8345;0.8359;0.8345;0.8347;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=327)
DecisionTreeClassifier;0.837;0.8382;0.837;0.837;0.8621;0.8639;0.8621;0.8624;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
DecisionTreeClassifier;0.838;0.8396;0.838;0.8382;0.8832;0.8871;0.8832;0.8837;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
DecisionTreeClassifier;0.8443;0.8467;0.8443;0.8448;0.8897;0.8936;0.8897;0.8903;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.8431;0.8443;0.8431;0.8433;0.8655;0.8663;0.8655;0.8654;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=268)
MLPClassifier;0.7528;0.7609;0.7528;0.7551;0.8103;0.8148;0.8103;0.8115;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
MLPClassifier;0.7562;0.7644;0.7562;0.7574;0.8172;0.8179;0.8172;0.8173;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
MLPClassifier;0.7488;0.7582;0.7488;0.7511;0.8385;0.8401;0.8385;0.8371;0.8167;0.818;0.8167;0.817;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
DecisionTreeClassifier;0.8477;0.8484;0.8477;0.8479;0.8448;0.8486;0.8448;0.8452;0.8167;0.8278;0.8167;0.8168;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
RandomForestClassifier;0.8703;0.8727;0.8703;0.8706;0.8276;0.8285;0.8276;0.8276;0.8167;0.8171;0.8167;0.8166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 426};RandomForestClassifier(n_estimators=20, random_state=426)
RandomForestClassifier;0.8714;0.873;0.8714;0.8716;0.8488;0.85;0.8488;0.8488;0.8167;0.8175;0.8167;0.816;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 426};RandomForestClassifier(n_estimators=20, random_state=426)
RandomForestClassifier;0.8718;0.874;0.8718;0.8719;0.869;0.8704;0.869;0.8692;0.8167;0.8175;0.8167;0.816;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 426};RandomForestClassifier(n_estimators=10, random_state=426)
DecisionTreeClassifier;0.8361;0.8377;0.8361;0.8364;0.8763;0.8796;0.8763;0.8769;0.8167;0.8175;0.8167;0.816;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.8427;0.844;0.8427;0.8428;0.8517;0.8566;0.8517;0.8505;0.8167;0.8175;0.8167;0.816;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=268)
MLPClassifier;0.7466;0.7558;0.7466;0.7488;0.8724;0.8724;0.8724;0.8721;0.8167;0.8155;0.8167;0.8158;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
RandomForestClassifier;0.8699;0.8716;0.8699;0.8701;0.831;0.8333;0.831;0.8302;0.8167;0.8166;0.8167;0.8156;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 803};RandomForestClassifier(n_estimators=10, random_state=803)
SVC;0.757;0.7662;0.757;0.7592;0.8172;0.8466;0.8172;0.8202;0.8;0.819;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 103};SVC(C=10, random_state=103)
SVC;0.752;0.7638;0.752;0.7545;0.8241;0.8499;0.8241;0.8274;0.8;0.819;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 231};SVC(C=10, random_state=231)
MLPClassifier;0.7558;0.7638;0.7558;0.7576;0.869;0.8696;0.869;0.8688;0.8;0.8038;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
MLPClassifier;0.7523;0.759;0.7523;0.7541;0.8316;0.851;0.8316;0.8347;0.8;0.8038;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 558, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=558)
MLPClassifier;0.7493;0.7571;0.7493;0.7512;0.8207;0.8263;0.8207;0.8218;0.8;0.8038;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
DecisionTreeClassifier;0.8461;0.8484;0.8461;0.8462;0.8586;0.8611;0.8586;0.8588;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=268)
DecisionTreeClassifier;0.8435;0.8446;0.8435;0.8438;0.8828;0.8878;0.8828;0.8834;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.842;0.8426;0.842;0.8419;0.869;0.874;0.869;0.8702;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.8393;0.8404;0.8393;0.8393;0.8483;0.8545;0.8483;0.8492;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
DecisionTreeClassifier;0.8408;0.8419;0.8408;0.841;0.9;0.9004;0.9;0.9001;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
MLPClassifier;0.7566;0.7652;0.7566;0.7588;0.7724;0.7735;0.7724;0.7728;0.8;0.8035;0.8;0.8005;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
DecisionTreeClassifier;0.8481;0.8491;0.8481;0.848;0.8172;0.8225;0.8172;0.8186;0.8;0.8089;0.8;0.8004;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.8424;0.8439;0.8424;0.8425;0.8931;0.8938;0.8931;0.8925;0.8;0.8005;0.8;0.7999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.8412;0.8421;0.8412;0.8414;0.8724;0.8769;0.8724;0.8728;0.8;0.8005;0.8;0.7999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
DecisionTreeClassifier;0.85;0.8517;0.85;0.8501;0.831;0.8388;0.831;0.8321;0.8;0.8005;0.8;0.7999;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=268)
SVC;0.7638;0.7712;0.7638;0.7657;0.7835;0.8151;0.7835;0.7871;0.8;0.8124;0.8;0.7994;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 216};SVC(C=10, random_state=216)
MLPClassifier;0.7596;0.7675;0.7596;0.7612;0.8069;0.8072;0.8069;0.8066;0.8;0.8005;0.8;0.7989;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
DecisionTreeClassifier;0.8385;0.8395;0.8385;0.8385;0.8931;0.8991;0.8931;0.8942;0.8;0.8005;0.8;0.7989;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=268)
DecisionTreeClassifier;0.8408;0.842;0.8408;0.841;0.9;0.9061;0.9;0.9011;0.8;0.8005;0.8;0.7989;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=268)
DecisionTreeClassifier;0.843;0.844;0.843;0.8432;0.8488;0.8551;0.8488;0.8501;0.8;0.8005;0.8;0.7989;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 327};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=327)
DecisionTreeClassifier;0.8446;0.8457;0.8446;0.8448;0.8282;0.8282;0.8282;0.828;0.8;0.8008;0.8;0.7982;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
DecisionTreeClassifier;0.8519;0.853;0.8519;0.8518;0.8483;0.8579;0.8483;0.8493;0.7833;0.7897;0.7833;0.7836;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=268)
MLPClassifier;0.7524;0.7609;0.7524;0.7536;0.7828;0.7864;0.7828;0.784;0.7833;0.7857;0.7833;0.7835;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
DecisionTreeClassifier;0.8542;0.8553;0.8542;0.8545;0.8552;0.8609;0.8552;0.8561;0.7833;0.785;0.7833;0.7829;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=845)
MLPClassifier;0.7454;0.7542;0.7454;0.7468;0.8454;0.855;0.8454;0.8476;0.7833;0.7831;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
DecisionTreeClassifier;0.8346;0.8367;0.8346;0.8349;0.8729;0.876;0.8729;0.8733;0.7833;0.7856;0.7833;0.7805;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=268)
MLPClassifier;0.7473;0.7563;0.7473;0.7498;0.8041;0.8063;0.8041;0.8044;0.7667;0.7774;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 487, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=487)
DecisionTreeClassifier;0.838;0.8393;0.838;0.838;0.8625;0.8624;0.8625;0.8619;0.7667;0.7716;0.7667;0.7668;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 268};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=268)
DecisionTreeClassifier;0.8412;0.8425;0.8412;0.8414;0.8655;0.8669;0.8655;0.8659;0.7667;0.7678;0.7667;0.7651;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 845};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=845)
LogisticRegression;0.6387;0.6453;0.6387;0.6389;0.5931;0.5977;0.5931;0.5927;0.7167;0.7231;0.7167;0.717;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6351;0.642;0.6351;0.6359;0.6289;0.6298;0.6289;0.6288;0.7167;0.7231;0.7167;0.717;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6355;0.6414;0.6355;0.6367;0.6151;0.6237;0.6151;0.6166;0.7167;0.7254;0.7167;0.7169;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6296;0.6367;0.6296;0.6306;0.6655;0.6678;0.6655;0.6633;0.7167;0.7236;0.7167;0.715;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.6292;0.6339;0.6292;0.6288;0.6276;0.6324;0.6276;0.629;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.6361;0.6416;0.6361;0.6367;0.5897;0.5928;0.5897;0.5905;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.6345;0.6411;0.6345;0.6352;0.5966;0.6042;0.5966;0.5983;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.631;0.6361;0.631;0.6317;0.6667;0.6711;0.6667;0.6681;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6315;0.6379;0.6315;0.6319;0.6276;0.6293;0.6276;0.6277;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.6258;0.6316;0.6258;0.6265;0.6448;0.6466;0.6448;0.644;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6238;0.6294;0.6238;0.6246;0.6862;0.6891;0.6862;0.6868;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6349;0.6405;0.6349;0.6357;0.5897;0.5917;0.5897;0.5899;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6284;0.6341;0.6284;0.6291;0.6655;0.6733;0.6655;0.666;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6341;0.6408;0.6341;0.6352;0.6103;0.6158;0.6103;0.609;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6294;0.6342;0.6294;0.6294;0.677;0.6847;0.677;0.6768;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6332;0.6384;0.6332;0.6343;0.6289;0.6331;0.6289;0.6252;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6364;0.6434;0.6364;0.6374;0.5828;0.5831;0.5828;0.582;0.7;0.7091;0.7;0.7002;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6386;0.6452;0.6386;0.6389;0.5945;0.6095;0.5945;0.5951;0.7;0.7037;0.7;0.6996;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6284;0.6351;0.6284;0.6295;0.6966;0.6992;0.6966;0.6968;0.7;0.708;0.7;0.6977;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6287;0.6336;0.6287;0.6291;0.6138;0.6438;0.6138;0.62;0.7;0.6974;0.7;0.6951;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6414;0.6477;0.6414;0.6424;0.569;0.5719;0.569;0.5676;0.6833;0.6931;0.6833;0.6832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.629;0.6358;0.629;0.6296;0.6873;0.6908;0.6873;0.6879;0.6833;0.6931;0.6833;0.6832;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.6294;0.6347;0.6294;0.6301;0.6495;0.6611;0.6495;0.6523;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.6284;0.6342;0.6284;0.6286;0.6552;0.6627;0.6552;0.656;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6322;0.6379;0.6322;0.6331;0.6172;0.6316;0.6172;0.6174;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 721, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=721)"
LogisticRegression;0.6273;0.6325;0.6273;0.6275;0.6379;0.6458;0.6379;0.6386;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6399;0.6457;0.6399;0.6407;0.5655;0.571;0.5655;0.5614;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6318;0.6373;0.6318;0.6331;0.6345;0.6391;0.6345;0.6335;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
LogisticRegression;0.6276;0.6329;0.6276;0.6286;0.6517;0.6676;0.6517;0.6511;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 660, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=660)"
LogisticRegression;0.6244;0.629;0.6244;0.6249;0.6357;0.6521;0.6357;0.6351;0.6833;0.6806;0.6833;0.6764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 585, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=585)"
