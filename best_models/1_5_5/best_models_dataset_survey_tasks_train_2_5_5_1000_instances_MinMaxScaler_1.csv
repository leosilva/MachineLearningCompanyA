Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9365;0.9374;0.9365;0.9366;0.9072;0.9073;0.9072;0.9072;0.95;0.95;0.95;0.95;0.9775;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
RandomForestClassifier;0.9345;0.935;0.9345;0.9345;0.9313;0.9328;0.9313;0.9316;0.9333;0.934;0.9333;0.9333;0.9775;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9319;0.9325;0.9319;0.9321;0.9276;0.9276;0.9276;0.9274;0.9333;0.934;0.9333;0.9333;0.9771;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
RandomForestClassifier;0.9277;0.9284;0.9277;0.9278;0.9345;0.9349;0.9345;0.9342;0.9333;0.934;0.9333;0.9333;0.9766;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
RandomForestClassifier;0.9319;0.9322;0.9319;0.9319;0.9414;0.9422;0.9414;0.9415;0.9333;0.934;0.9333;0.9333;0.9777;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
KNeighborsClassifier;0.8955;0.8975;0.8955;0.8957;0.9276;0.9279;0.9276;0.9277;0.9333;0.9346;0.9333;0.9328;0.9623;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8986;0.9;0.8986;0.8988;0.9069;0.9087;0.9069;0.9063;0.9333;0.9346;0.9333;0.9328;0.9659;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8963;0.8978;0.8963;0.8967;0.9138;0.914;0.9138;0.9139;0.9333;0.9346;0.9333;0.9328;0.9633;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9013;0.9005;0.9007;0.9069;0.9075;0.9069;0.9067;0.9333;0.9346;0.9333;0.9328;0.9639;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8917;0.8934;0.8917;0.8921;0.9107;0.9119;0.9107;0.9102;0.9167;0.9195;0.9167;0.917;0.9611;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9292;0.9298;0.9292;0.9293;0.9276;0.9306;0.9276;0.9273;0.9167;0.9174;0.9167;0.9166;0.9764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9353;0.9362;0.9353;0.9354;0.9072;0.9076;0.9072;0.9073;0.9167;0.9174;0.9167;0.9166;0.978;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
RandomForestClassifier;0.9292;0.93;0.9292;0.9293;0.9379;0.9379;0.9379;0.9379;0.9167;0.9174;0.9167;0.9166;0.9781;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9261;0.9268;0.9261;0.9262;0.9552;0.9554;0.9552;0.9552;0.9167;0.9174;0.9167;0.9166;0.9776;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
RandomForestClassifier;0.9307;0.9314;0.9307;0.9306;0.9244;0.9253;0.9244;0.9244;0.9167;0.9174;0.9167;0.9166;0.9783;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
RandomForestClassifier;0.9265;0.9275;0.9265;0.9266;0.9207;0.921;0.9207;0.9202;0.9167;0.9174;0.9167;0.9166;0.9782;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 428};RandomForestClassifier(n_estimators=10, random_state=428)
KNeighborsClassifier;0.8894;0.8902;0.8894;0.8894;0.9207;0.9211;0.9207;0.9206;0.9167;0.9174;0.9167;0.9166;0.9635;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8967;0.8979;0.8967;0.8971;0.9103;0.9116;0.9103;0.9103;0.9167;0.9174;0.9167;0.9166;0.9659;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8913;0.8916;0.8913;0.8915;0.9141;0.9147;0.9141;0.914;0.9167;0.9174;0.9167;0.9166;0.9618;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8982;0.8989;0.8982;0.8983;0.9313;0.9329;0.9313;0.9308;0.9167;0.9174;0.9167;0.9166;0.9628;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8932;0.895;0.8932;0.8936;0.921;0.9216;0.921;0.9211;0.9167;0.9174;0.9167;0.9166;0.9607;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8982;0.8989;0.8982;0.8983;0.9034;0.9034;0.9034;0.9032;0.9167;0.9174;0.9167;0.9166;0.9629;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8982;0.8992;0.8982;0.8984;0.9034;0.9047;0.9034;0.9037;0.9167;0.9174;0.9167;0.9166;0.9633;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9296;0.9303;0.9296;0.9297;0.9552;0.9567;0.9552;0.9554;0.9167;0.9194;0.9167;0.9165;0.9753;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
RandomForestClassifier;0.9307;0.9314;0.9307;0.9308;0.9172;0.9178;0.9172;0.9173;0.9167;0.9194;0.9167;0.9165;0.9781;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
RandomForestClassifier;0.9277;0.9288;0.9277;0.9278;0.9172;0.9181;0.9172;0.9174;0.9167;0.9194;0.9167;0.9165;0.9776;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
KNeighborsClassifier;0.9032;0.9038;0.9032;0.9032;0.9103;0.9108;0.9103;0.9102;0.9167;0.9178;0.9167;0.9157;0.9629;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8962;0.8973;0.8962;0.8965;0.9072;0.9073;0.9072;0.9072;0.9167;0.9178;0.9167;0.9157;0.9626;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9349;0.9355;0.9349;0.935;0.9175;0.9177;0.9175;0.9174;0.9;0.906;0.9;0.9005;0.9777;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
DecisionTreeClassifier;0.8963;0.8975;0.8963;0.8962;0.8862;0.8858;0.8862;0.8859;0.9;0.9015;0.9;0.9004;0.9222;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
RandomForestClassifier;0.925;0.9258;0.925;0.9252;0.9276;0.9283;0.9276;0.9275;0.9;0.9021;0.9;0.8999;0.9775;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
RandomForestClassifier;0.9342;0.9353;0.9342;0.9343;0.9103;0.9106;0.9103;0.9104;0.9;0.9019;0.9;0.8999;0.9784;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
KNeighborsClassifier;0.9001;0.9015;0.9001;0.9003;0.8966;0.8973;0.8966;0.8963;0.9;0.9021;0.9;0.8999;0.9629;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.933;0.9335;0.933;0.9331;0.9038;0.9058;0.9038;0.9039;0.9;0.9021;0.9;0.8999;0.9782;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
KNeighborsClassifier;0.9009;0.9023;0.9009;0.901;0.9107;0.911;0.9107;0.9107;0.9;0.9021;0.9;0.8999;0.9628;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8928;0.8938;0.8928;0.8931;0.9345;0.935;0.9345;0.9346;0.9;0.9021;0.9;0.8999;0.9621;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9284;0.929;0.9284;0.9285;0.9416;0.9417;0.9416;0.9415;0.9;0.9019;0.9;0.8999;0.9766;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
RandomForestClassifier;0.9334;0.9338;0.9334;0.9334;0.9103;0.9112;0.9103;0.9102;0.9;0.9019;0.9;0.8999;0.9768;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
KNeighborsClassifier;0.8928;0.8939;0.8928;0.8932;0.9517;0.9529;0.9517;0.9519;0.9;0.9021;0.9;0.8999;0.9601;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8909;0.8931;0.8909;0.891;0.9313;0.932;0.9313;0.931;0.9;0.9021;0.9;0.8999;0.9608;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.93;0.9307;0.93;0.9301;0.9483;0.9489;0.9483;0.9485;0.9;0.9021;0.9;0.8999;0.9772;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
KNeighborsClassifier;0.8974;0.8985;0.8974;0.8975;0.9278;0.9309;0.9278;0.9278;0.9;0.9019;0.9;0.8999;0.9628;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8894;0.8902;0.8894;0.8894;0.9379;0.9395;0.9379;0.9381;0.9;0.9027;0.9;0.8998;0.962;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9269;0.9275;0.9269;0.9269;0.9241;0.9245;0.9241;0.924;0.9;0.9027;0.9;0.8998;0.978;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9353;0.9357;0.9353;0.9354;0.9276;0.9278;0.9276;0.9274;0.9;0.9058;0.9;0.8995;0.977;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
RandomForestClassifier;0.9307;0.9313;0.9307;0.9308;0.9345;0.9347;0.9345;0.9345;0.9;0.9058;0.9;0.8995;0.9773;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
RandomForestClassifier;0.9269;0.9279;0.9269;0.927;0.9241;0.9253;0.9241;0.9244;0.9;0.9058;0.9;0.8995;0.9772;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
RandomForestClassifier;0.9319;0.9323;0.9319;0.9319;0.9379;0.9379;0.9379;0.9379;0.9;0.9058;0.9;0.8995;0.9776;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 428};RandomForestClassifier(n_estimators=20, random_state=428)
KNeighborsClassifier;0.897;0.8986;0.897;0.897;0.931;0.9322;0.931;0.9313;0.9;0.9032;0.9;0.8988;0.9622;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9288;0.9295;0.9288;0.9289;0.9278;0.9281;0.9278;0.9277;0.8833;0.8935;0.8833;0.8844;0.9762;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 619};RandomForestClassifier(n_estimators=10, random_state=619)
DecisionTreeClassifier;0.8886;0.8891;0.8886;0.8886;0.9172;0.918;0.9172;0.9174;0.8833;0.8875;0.8833;0.884;0.9165;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
KNeighborsClassifier;0.8986;0.8994;0.8986;0.8988;0.9103;0.913;0.9103;0.9104;0.8833;0.884;0.8833;0.8833;0.9607;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.897;0.8984;0.897;0.8974;0.8969;0.8972;0.8969;0.8968;0.8833;0.884;0.8833;0.8833;0.9621;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8936;0.8955;0.8936;0.894;0.9345;0.9345;0.9345;0.9344;0.8833;0.884;0.8833;0.8833;0.9628;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8924;0.8942;0.8924;0.8929;0.9069;0.9073;0.9069;0.9068;0.8833;0.884;0.8833;0.8833;0.964;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.899;0.8996;0.899;0.8992;0.9241;0.9246;0.9241;0.9242;0.8833;0.884;0.8833;0.8833;0.9639;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8883;0.8899;0.8883;0.8886;0.9207;0.9209;0.9207;0.9207;0.8833;0.884;0.8833;0.8833;0.9161;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
KNeighborsClassifier;0.8959;0.8976;0.8959;0.8961;0.9;0.9016;0.9;0.9004;0.8833;0.886;0.8833;0.8832;0.9632;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9311;0.9317;0.9311;0.9311;0.9244;0.926;0.9244;0.9244;0.8833;0.886;0.8833;0.8832;0.9778;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 619};RandomForestClassifier(n_estimators=10, random_state=619)
DecisionTreeClassifier;0.889;0.8909;0.889;0.8892;0.8935;0.8947;0.8935;0.8934;0.8833;0.8874;0.8833;0.883;0.9167;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
RandomForestClassifier;0.9296;0.9302;0.9296;0.9297;0.9172;0.9175;0.9172;0.9171;0.8833;0.888;0.8833;0.8829;0.9783;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 619};RandomForestClassifier(n_estimators=20, random_state=619)
MLPClassifier;0.8365;0.8373;0.8365;0.8366;0.9038;0.9063;0.9038;0.9036;0.8667;0.8746;0.8667;0.8674;0.9435;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
KNeighborsClassifier;0.8963;0.8968;0.8963;0.8963;0.9;0.9044;0.9;0.9008;0.8667;0.8746;0.8667;0.8674;0.9625;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.8404;0.8417;0.8404;0.841;0.8931;0.8955;0.8931;0.8931;0.8667;0.8759;0.8667;0.8668;0.9454;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
MLPClassifier;0.8338;0.8352;0.8338;0.8341;0.8969;0.8989;0.8969;0.8974;0.8667;0.8759;0.8667;0.8668;0.9434;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
DecisionTreeClassifier;0.8875;0.8888;0.8875;0.8875;0.8966;0.8973;0.8966;0.8962;0.8667;0.8667;0.8667;0.8667;0.9155;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
KNeighborsClassifier;0.8982;0.9001;0.8982;0.8985;0.9138;0.9142;0.9138;0.9137;0.8667;0.8722;0.8667;0.8667;0.962;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
DecisionTreeClassifier;0.8894;0.8911;0.8894;0.8894;0.8935;0.8951;0.8935;0.894;0.8667;0.8714;0.8667;0.8663;0.917;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
RandomForestClassifier;0.9326;0.9331;0.9326;0.9326;0.9276;0.9282;0.9276;0.9277;0.8667;0.875;0.8667;0.8658;0.9778;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 638};RandomForestClassifier(n_estimators=20, random_state=638)
MLPClassifier;0.8358;0.8368;0.8358;0.8359;0.8763;0.8788;0.8763;0.877;0.85;0.862;0.85;0.8516;0.9463;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
MLPClassifier;0.8335;0.8354;0.8335;0.8339;0.9;0.9;0.9;0.8992;0.85;0.862;0.85;0.8516;0.9425;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
DecisionTreeClassifier;0.8948;0.8954;0.8948;0.8949;0.8655;0.8662;0.8655;0.8658;0.85;0.8523;0.85;0.8508;0.9211;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
SVC;0.819;0.8202;0.819;0.8191;0.9069;0.9085;0.9069;0.9069;0.85;0.8564;0.85;0.8508;0.9204;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
DecisionTreeClassifier;0.8913;0.8926;0.8913;0.8914;0.8586;0.8617;0.8586;0.8589;0.85;0.857;0.85;0.8508;0.9184;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8974;0.8985;0.8974;0.8974;0.9;0.901;0.9;0.8997;0.85;0.857;0.85;0.8508;0.923;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
SVC;0.8109;0.8157;0.8109;0.8113;0.8969;0.899;0.8969;0.8971;0.85;0.8564;0.85;0.8508;0.9216;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
SVC;0.8205;0.8207;0.8205;0.8205;0.8724;0.8769;0.8724;0.8733;0.85;0.8564;0.85;0.8508;0.9213;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
MLPClassifier;0.8282;0.8291;0.8282;0.8283;0.8862;0.8876;0.8862;0.8852;0.85;0.8539;0.85;0.8505;0.9469;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
DecisionTreeClassifier;0.8863;0.8868;0.8863;0.8862;0.9;0.8998;0.9;0.8999;0.85;0.8625;0.85;0.8505;0.9147;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
DecisionTreeClassifier;0.8893;0.8908;0.8893;0.8895;0.9003;0.9003;0.9003;0.9003;0.85;0.8514;0.85;0.8504;0.917;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
MLPClassifier;0.8412;0.8434;0.8412;0.8415;0.8483;0.8517;0.8483;0.8482;0.85;0.8554;0.85;0.8504;0.9465;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
MLPClassifier;0.8301;0.8314;0.8301;0.8304;0.8862;0.886;0.8862;0.8857;0.85;0.8554;0.85;0.8504;0.9447;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
MLPClassifier;0.8446;0.8455;0.8446;0.8448;0.8552;0.8693;0.8552;0.8564;0.85;0.8554;0.85;0.8504;0.9473;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
DecisionTreeClassifier;0.8875;0.8889;0.8875;0.8876;0.9;0.9041;0.9;0.9001;0.85;0.8554;0.85;0.8504;0.9155;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
MLPClassifier;0.8381;0.8396;0.8381;0.8383;0.8931;0.8965;0.8931;0.8931;0.85;0.8554;0.85;0.8504;0.9454;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
DecisionTreeClassifier;0.8879;0.8888;0.8879;0.8881;0.8931;0.8954;0.8931;0.8937;0.85;0.8554;0.85;0.8504;0.9159;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
MLPClassifier;0.8331;0.8344;0.8331;0.8334;0.8935;0.8943;0.8935;0.8938;0.85;0.8554;0.85;0.8504;0.9452;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
MLPClassifier;0.8393;0.8405;0.8393;0.8395;0.8931;0.8955;0.8931;0.893;0.85;0.8554;0.85;0.8504;0.9433;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
DecisionTreeClassifier;0.902;0.903;0.902;0.902;0.9103;0.9103;0.9103;0.9101;0.85;0.8505;0.85;0.8499;0.9265;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
DecisionTreeClassifier;0.8967;0.8976;0.8967;0.8968;0.9103;0.9121;0.9103;0.9105;0.85;0.8517;0.85;0.8498;0.9225;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
DecisionTreeClassifier;0.8836;0.8857;0.8836;0.8841;0.9278;0.9319;0.9278;0.9281;0.85;0.8558;0.85;0.8495;0.9127;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8917;0.8923;0.8917;0.8919;0.9072;0.9076;0.9072;0.9072;0.85;0.8497;0.85;0.8495;0.9188;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
DecisionTreeClassifier;0.8897;0.8909;0.8897;0.89;0.9003;0.9021;0.9003;0.8998;0.8333;0.8434;0.8333;0.8352;0.9173;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
MLPClassifier;0.8328;0.8348;0.8328;0.8329;0.8828;0.8839;0.8828;0.8821;0.8333;0.8409;0.8333;0.8349;0.946;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
MLPClassifier;0.8431;0.8471;0.8431;0.8439;0.8655;0.8669;0.8655;0.866;0.8333;0.8409;0.8333;0.8349;0.9459;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
DecisionTreeClassifier;0.8951;0.896;0.8951;0.8952;0.9103;0.911;0.9103;0.9105;0.8333;0.8404;0.8333;0.8342;0.9213;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
DecisionTreeClassifier;0.8844;0.8854;0.8844;0.8845;0.921;0.9222;0.921;0.9212;0.8333;0.8446;0.8333;0.834;0.9132;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
MLPClassifier;0.8351;0.8359;0.8351;0.8353;0.8931;0.8948;0.8931;0.8921;0.8333;0.8365;0.8333;0.8339;0.9447;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
SVC;0.8144;0.8152;0.8144;0.8146;0.9172;0.9236;0.9172;0.9181;0.8333;0.8365;0.8333;0.8339;0.917;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.817;0.8194;0.817;0.8171;0.8729;0.8811;0.8729;0.8729;0.8333;0.8365;0.8333;0.8339;0.9258;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8174;0.8183;0.8174;0.8174;0.9038;0.9047;0.9038;0.9037;0.8333;0.8365;0.8333;0.8339;0.9229;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8178;0.8185;0.8178;0.8177;0.8897;0.8927;0.8897;0.8897;0.8333;0.8365;0.8333;0.8339;0.928;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
MLPClassifier;0.835;0.8372;0.835;0.8355;0.9175;0.9172;0.9175;0.9168;0.8333;0.8365;0.8333;0.8339;0.944;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
SVC;0.8217;0.8221;0.8217;0.8212;0.8966;0.9001;0.8966;0.8962;0.8333;0.8365;0.8333;0.8339;0.9226;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
SVC;0.8197;0.8203;0.8197;0.8198;0.8931;0.8956;0.8931;0.8928;0.8333;0.8365;0.8333;0.8339;0.9235;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
SVC;0.814;0.8142;0.814;0.814;0.8862;0.8937;0.8862;0.887;0.8333;0.8365;0.8333;0.8339;0.9231;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
SVC;0.8175;0.8203;0.8175;0.8178;0.9034;0.9068;0.9034;0.9042;0.8333;0.8365;0.8333;0.8339;0.9228;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8144;0.8151;0.8144;0.8144;0.8966;0.9002;0.8966;0.8967;0.8333;0.8365;0.8333;0.8339;0.9228;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8159;0.8184;0.8159;0.8159;0.8793;0.883;0.8793;0.8793;0.8333;0.8365;0.8333;0.8339;0.9224;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8201;0.8203;0.8201;0.8197;0.9241;0.9241;0.9241;0.9238;0.8333;0.8365;0.8333;0.8339;0.9216;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
MLPClassifier;0.8278;0.8288;0.8278;0.8277;0.9034;0.9035;0.9034;0.9031;0.8333;0.8365;0.8333;0.8339;0.944;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
MLPClassifier;0.8416;0.843;0.8416;0.842;0.8759;0.8755;0.8759;0.8757;0.8333;0.8365;0.8333;0.8339;0.9467;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
MLPClassifier;0.8358;0.8375;0.8358;0.836;0.8724;0.873;0.8724;0.8724;0.8333;0.8365;0.8333;0.8339;0.946;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
SVC;0.8147;0.8158;0.8147;0.8151;0.9072;0.9094;0.9072;0.907;0.8333;0.8365;0.8333;0.8339;0.9215;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
MLPClassifier;0.8296;0.8306;0.8296;0.8298;0.89;0.8896;0.89;0.8897;0.8333;0.8365;0.8333;0.8339;0.9453;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
MLPClassifier;0.8362;0.8373;0.8362;0.8366;0.8828;0.8833;0.8828;0.8823;0.8333;0.8365;0.8333;0.8339;0.9449;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
MLPClassifier;0.8385;0.8395;0.8385;0.8386;0.869;0.869;0.869;0.8688;0.8333;0.8365;0.8333;0.8339;0.9463;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
SVC;0.8079;0.8104;0.8079;0.8079;0.9069;0.9107;0.9069;0.9076;0.8333;0.8365;0.8333;0.8339;0.9209;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
MLPClassifier;0.8381;0.839;0.8381;0.8383;0.8351;0.8462;0.8351;0.8367;0.8333;0.8365;0.8333;0.8339;0.946;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 229, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=229)
SVC;0.8243;0.8248;0.8243;0.8243;0.9069;0.915;0.9069;0.9066;0.8333;0.8365;0.8333;0.8339;0.9221;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
SVC;0.8152;0.8151;0.8152;0.8149;0.9034;0.9058;0.9034;0.9037;0.8333;0.8365;0.8333;0.8339;0.9208;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
SVC;0.8102;0.8134;0.8102;0.8106;0.8759;0.8823;0.8759;0.8761;0.8333;0.8365;0.8333;0.8339;0.9184;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
SVC;0.8178;0.8191;0.8178;0.8175;0.8797;0.8853;0.8797;0.8788;0.8333;0.8365;0.8333;0.8339;0.9237;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
SVC;0.8159;0.817;0.8159;0.8163;0.8797;0.8838;0.8797;0.8799;0.8333;0.8365;0.8333;0.8339;0.9256;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
SVC;0.8162;0.8173;0.8162;0.8161;0.9038;0.9135;0.9038;0.904;0.8333;0.8365;0.8333;0.8339;0.9232;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
SVC;0.8205;0.8214;0.8205;0.8206;0.9034;0.9051;0.9034;0.9036;0.8333;0.8365;0.8333;0.8339;0.9213;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8217;0.8217;0.8217;0.8214;0.8828;0.8862;0.8828;0.8834;0.8333;0.8365;0.8333;0.8339;0.9237;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
SVC;0.8129;0.8131;0.8129;0.8128;0.9;0.9044;0.9;0.9001;0.8333;0.8365;0.8333;0.8339;0.9238;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
MLPClassifier;0.83;0.8316;0.83;0.8303;0.8969;0.9037;0.8969;0.8974;0.8333;0.8524;0.8333;0.8338;0.9436;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
DecisionTreeClassifier;0.8897;0.8906;0.8897;0.8899;0.8935;0.895;0.8935;0.8936;0.8333;0.8348;0.8333;0.8337;0.9172;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
DecisionTreeClassifier;0.8856;0.8869;0.8856;0.8857;0.9103;0.916;0.9103;0.9111;0.8167;0.8319;0.8167;0.8187;0.9142;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=975)
MLPClassifier;0.8282;0.8306;0.8282;0.8281;0.869;0.8735;0.869;0.8704;0.8167;0.8285;0.8167;0.8184;0.9437;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
DecisionTreeClassifier;0.8859;0.8875;0.8859;0.8861;0.9379;0.9393;0.9379;0.938;0.8167;0.8246;0.8167;0.8174;0.9144;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
DecisionTreeClassifier;0.8871;0.8882;0.8871;0.8871;0.9072;0.9069;0.9072;0.9068;0.8167;0.8224;0.8167;0.8173;0.9152;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
MLPClassifier;0.8324;0.8325;0.8324;0.8323;0.8828;0.8836;0.8828;0.883;0.8167;0.8224;0.8167;0.8173;0.9459;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
SVC;0.8224;0.8234;0.8224;0.8228;0.8969;0.9021;0.8969;0.8966;0.8167;0.818;0.8167;0.817;0.9267;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
MLPClassifier;0.8354;0.8364;0.8354;0.8353;0.8621;0.8621;0.8621;0.8618;0.8167;0.818;0.8167;0.817;0.9448;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 509, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=509)
SVC;0.8091;0.8112;0.8091;0.8088;0.9138;0.9158;0.9138;0.9142;0.8167;0.818;0.8167;0.817;0.9212;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
MLPClassifier;0.8339;0.8349;0.8339;0.8343;0.869;0.8701;0.869;0.8686;0.8167;0.818;0.8167;0.817;0.9461;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
SVC;0.8144;0.8152;0.8144;0.8143;0.8759;0.8819;0.8759;0.8767;0.8167;0.818;0.8167;0.817;0.9254;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 665};SVC(C=10, probability=True, random_state=665)
SVC;0.8159;0.8163;0.8159;0.8158;0.9138;0.9145;0.9138;0.9139;0.8167;0.818;0.8167;0.817;0.9177;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 801};SVC(C=10, probability=True, random_state=801)
SVC;0.8147;0.8148;0.8147;0.8144;0.8969;0.9013;0.8969;0.8965;0.8167;0.818;0.8167;0.817;0.9219;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 697};SVC(C=10, probability=True, random_state=697)
DecisionTreeClassifier;0.8886;0.8894;0.8886;0.8888;0.8862;0.8869;0.8862;0.8863;0.8167;0.819;0.8167;0.8164;0.9166;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=232)
DecisionTreeClassifier;0.8986;0.8996;0.8986;0.8988;0.9138;0.914;0.9138;0.9138;0.8167;0.8208;0.8167;0.8161;0.9239;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8818;0.8835;0.8818;0.882;0.9207;0.9214;0.9207;0.9207;0.8167;0.8241;0.8167;0.8144;0.9113;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
MLPClassifier;0.8305;0.8316;0.8305;0.8307;0.8724;0.872;0.8724;0.872;0.8;0.8035;0.8;0.8005;0.9429;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
DecisionTreeClassifier;0.8917;0.8929;0.8917;0.8919;0.9;0.9019;0.9;0.8984;0.8;0.8005;0.8;0.7999;0.9187;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8951;0.896;0.8951;0.8952;0.9172;0.917;0.9172;0.9169;0.8;0.805;0.8;0.7993;0.9213;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
DecisionTreeClassifier;0.8936;0.8942;0.8936;0.8935;0.9241;0.9268;0.9241;0.9244;0.7833;0.7927;0.7833;0.785;0.9202;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 748};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=748)
MLPClassifier;0.8334;0.8345;0.8334;0.8338;0.8763;0.8767;0.8763;0.8756;0.7833;0.7857;0.7833;0.7835;0.9439;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 38, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=38)
LogisticRegression;0.6755;0.6817;0.6755;0.6748;0.7207;0.7332;0.7207;0.7221;0.75;0.75;0.75;0.75;0.848;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6873;0.6948;0.6873;0.6873;0.6655;0.6686;0.6655;0.6659;0.75;0.75;0.75;0.75;0.8528;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6758;0.682;0.6758;0.6757;0.6828;0.7002;0.6828;0.6827;0.75;0.75;0.75;0.75;0.8491;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6827;0.6903;0.6827;0.6828;0.6862;0.6912;0.6862;0.6869;0.75;0.75;0.75;0.75;0.8526;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6788;0.6868;0.6788;0.6786;0.6735;0.6758;0.6735;0.673;0.75;0.75;0.75;0.75;0.8503;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6858;0.6927;0.6858;0.6855;0.6621;0.6681;0.6621;0.6608;0.75;0.75;0.75;0.75;0.8518;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6854;0.693;0.6854;0.6856;0.6759;0.6782;0.6759;0.6752;0.75;0.75;0.75;0.75;0.8524;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6793;0.6869;0.6793;0.6795;0.7;0.7041;0.7;0.699;0.75;0.75;0.75;0.75;0.8525;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6793;0.6852;0.6793;0.6788;0.6793;0.6905;0.6793;0.6796;0.75;0.75;0.75;0.75;0.8505;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6811;0.6873;0.6811;0.6808;0.6598;0.6635;0.6598;0.6585;0.75;0.75;0.75;0.75;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6835;0.6901;0.6835;0.6835;0.6517;0.6559;0.6517;0.6488;0.75;0.75;0.75;0.75;0.8535;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6799;0.6862;0.6799;0.6793;0.6976;0.6991;0.6976;0.697;0.7333;0.732;0.7333;0.7324;0.8518;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6793;0.6855;0.6793;0.6783;0.6828;0.6868;0.6828;0.6835;0.7333;0.732;0.7333;0.7324;0.8518;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6751;0.6819;0.6751;0.675;0.6724;0.6826;0.6724;0.674;0.7167;0.7142;0.7167;0.7134;0.8517;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6856;0.6931;0.6856;0.6852;0.646;0.6547;0.646;0.6467;0.7;0.6974;0.7;0.6951;0.8559;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6784;0.6845;0.6784;0.6783;0.7045;0.7249;0.7045;0.7037;0.7;0.6974;0.7;0.6951;0.8498;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.678;0.685;0.678;0.6782;0.7148;0.7234;0.7148;0.7149;0.7;0.6974;0.7;0.6951;0.8479;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6782;0.6861;0.6782;0.6781;0.7;0.7038;0.7;0.7006;0.7;0.6974;0.7;0.6951;0.8491;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6793;0.6851;0.6793;0.6793;0.7379;0.754;0.7379;0.7369;0.7;0.6974;0.7;0.6951;0.8526;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6862;0.6918;0.6862;0.6862;0.6517;0.6845;0.6517;0.6551;0.7;0.6974;0.7;0.6951;0.8546;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6819;0.689;0.6819;0.6819;0.6931;0.706;0.6931;0.6939;0.7;0.6974;0.7;0.6951;0.8511;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6824;0.6905;0.6824;0.6824;0.6483;0.6504;0.6483;0.6483;0.7;0.6974;0.7;0.6951;0.8538;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 481, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=481)"
LogisticRegression;0.6804;0.687;0.6804;0.6802;0.6931;0.7042;0.6931;0.6946;0.7;0.6974;0.7;0.6951;0.8518;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6822;0.6903;0.6822;0.682;0.6426;0.6557;0.6426;0.6435;0.7;0.6974;0.7;0.6951;0.852;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6854;0.6919;0.6854;0.6851;0.6207;0.6394;0.6207;0.6229;0.7;0.6974;0.7;0.6951;0.8543;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.678;0.6855;0.678;0.6777;0.6907;0.7028;0.6907;0.6919;0.7;0.6974;0.7;0.6951;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6766;0.6829;0.6766;0.6764;0.7207;0.7303;0.7207;0.7191;0.7;0.6974;0.7;0.6951;0.8503;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.6801;0.6872;0.6801;0.6798;0.6793;0.6938;0.6793;0.6794;0.7;0.6974;0.7;0.6951;0.8496;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
LogisticRegression;0.6803;0.6868;0.6803;0.6799;0.7079;0.722;0.7079;0.7075;0.7;0.6974;0.7;0.6951;0.8516;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
LogisticRegression;0.685;0.6937;0.685;0.6852;0.6483;0.6586;0.6483;0.6455;0.7;0.6974;0.7;0.6951;0.8515;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 918, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=918)"
