Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8844;0.8848;0.8844;0.8843;0.8779;0.8786;0.8779;0.8779;0.8667;0.8759;0.8667;0.8684;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
DecisionTreeClassifier;0.8835;0.8839;0.8835;0.8835;0.8879;0.888;0.8879;0.8879;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8838;0.8842;0.8838;0.8837;0.886;0.8864;0.886;0.8858;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
DecisionTreeClassifier;0.8849;0.8853;0.8849;0.8848;0.8846;0.8847;0.8846;0.8844;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8831;0.8834;0.8831;0.883;0.8907;0.8914;0.8907;0.8906;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8853;0.8858;0.8853;0.8852;0.8753;0.8753;0.8753;0.8752;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8846;0.8851;0.8846;0.8845;0.8799;0.8802;0.8799;0.8799;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8828;0.8833;0.8828;0.8827;0.8866;0.8867;0.8866;0.8866;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8824;0.8829;0.8824;0.8824;0.8859;0.8861;0.8859;0.8857;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8842;0.8846;0.8842;0.8841;0.8866;0.8868;0.8866;0.8866;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.884;0.8844;0.884;0.8839;0.8839;0.8845;0.8839;0.8839;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8846;0.8851;0.8846;0.8845;0.8753;0.8753;0.8753;0.8753;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
DecisionTreeClassifier;0.8845;0.885;0.8845;0.8845;0.8812;0.8813;0.8812;0.8812;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8842;0.8847;0.8842;0.8841;0.8759;0.8769;0.8759;0.8758;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8835;0.8838;0.8835;0.8834;0.8806;0.8808;0.8806;0.8806;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8829;0.8833;0.8829;0.8829;0.8872;0.8875;0.8872;0.8872;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
DecisionTreeClassifier;0.8846;0.885;0.8846;0.8845;0.8765;0.8782;0.8765;0.8764;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
DecisionTreeClassifier;0.8835;0.8841;0.8835;0.8835;0.8879;0.888;0.8879;0.8879;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
DecisionTreeClassifier;0.8838;0.8843;0.8838;0.8837;0.8846;0.8848;0.8846;0.8846;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
DecisionTreeClassifier;0.8838;0.8843;0.8838;0.8838;0.8886;0.8894;0.8886;0.8883;0.85;0.864;0.85;0.8518;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
RandomForestClassifier;0.8856;0.886;0.8856;0.8855;0.8766;0.8766;0.8766;0.8766;0.85;0.8542;0.85;0.8506;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
RandomForestClassifier;0.8842;0.8845;0.8842;0.8842;0.8826;0.8827;0.8826;0.8824;0.85;0.8542;0.85;0.8506;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
RandomForestClassifier;0.8816;0.882;0.8816;0.8815;0.8954;0.8962;0.8954;0.8951;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 869};RandomForestClassifier(n_estimators=20, random_state=869)
RandomForestClassifier;0.8832;0.8836;0.8832;0.8832;0.8879;0.8887;0.8879;0.8878;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 610};RandomForestClassifier(n_estimators=5, random_state=610)
RandomForestClassifier;0.8847;0.8852;0.8847;0.8846;0.8685;0.8685;0.8685;0.8684;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 610};RandomForestClassifier(n_estimators=5, random_state=610)
RandomForestClassifier;0.884;0.8842;0.884;0.8839;0.8852;0.886;0.8852;0.8852;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 610};RandomForestClassifier(n_estimators=20, random_state=610)
RandomForestClassifier;0.8858;0.8862;0.8858;0.8857;0.8719;0.8722;0.8719;0.8719;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 869};RandomForestClassifier(n_estimators=10, random_state=869)
RandomForestClassifier;0.8832;0.8836;0.8832;0.8832;0.8919;0.8922;0.8919;0.8919;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 547};RandomForestClassifier(n_estimators=20, random_state=547)
RandomForestClassifier;0.8847;0.8851;0.8847;0.8846;0.8806;0.8815;0.8806;0.8807;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 869};RandomForestClassifier(n_estimators=20, random_state=869)
RandomForestClassifier;0.8844;0.8849;0.8844;0.8843;0.8799;0.8803;0.8799;0.8797;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 869};RandomForestClassifier(n_estimators=20, random_state=869)
RandomForestClassifier;0.8857;0.8861;0.8857;0.8856;0.8705;0.8707;0.8705;0.8704;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 869};RandomForestClassifier(n_estimators=20, random_state=869)
RandomForestClassifier;0.8849;0.8855;0.8849;0.8849;0.8785;0.8791;0.8785;0.8785;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 869};RandomForestClassifier(n_estimators=20, random_state=869)
RandomForestClassifier;0.8816;0.8821;0.8816;0.8815;0.902;0.9024;0.902;0.902;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 869};RandomForestClassifier(n_estimators=20, random_state=869)
RandomForestClassifier;0.8855;0.8859;0.8855;0.8854;0.8699;0.8701;0.8699;0.8699;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 547};RandomForestClassifier(n_estimators=5, random_state=547)
RandomForestClassifier;0.8858;0.8863;0.8858;0.8858;0.8753;0.8757;0.8753;0.8752;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 547};RandomForestClassifier(n_estimators=10, random_state=547)
RandomForestClassifier;0.8827;0.8832;0.8827;0.8827;0.902;0.9021;0.902;0.9019;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 547};RandomForestClassifier(n_estimators=20, random_state=547)
RandomForestClassifier;0.8837;0.8842;0.8837;0.8836;0.8839;0.8847;0.8839;0.8838;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 547};RandomForestClassifier(n_estimators=20, random_state=547)
RandomForestClassifier;0.8844;0.8849;0.8844;0.8843;0.8792;0.8794;0.8792;0.8792;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 547};RandomForestClassifier(n_estimators=20, random_state=547)
RandomForestClassifier;0.8836;0.8841;0.8836;0.8836;0.8852;0.8855;0.8852;0.8852;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 547};RandomForestClassifier(n_estimators=20, random_state=547)
RandomForestClassifier;0.8832;0.8836;0.8832;0.8831;0.8899;0.8907;0.8899;0.8899;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 547};RandomForestClassifier(n_estimators=5, random_state=547)
RandomForestClassifier;0.883;0.8834;0.883;0.8829;0.898;0.8991;0.898;0.8979;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 869};RandomForestClassifier(n_estimators=20, random_state=869)
RandomForestClassifier;0.8841;0.8846;0.8841;0.8841;0.8867;0.8876;0.8867;0.8866;0.85;0.8517;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 610};RandomForestClassifier(n_estimators=5, random_state=610)
RandomForestClassifier;0.8825;0.8828;0.8825;0.8824;0.8919;0.8922;0.8919;0.8919;0.85;0.8563;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 547};RandomForestClassifier(n_estimators=5, random_state=547)
DecisionTreeClassifier;0.8841;0.8846;0.8841;0.8841;0.8773;0.8783;0.8773;0.877;0.8333;0.85;0.8333;0.8357;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8842;0.8847;0.8842;0.8841;0.8765;0.8772;0.8765;0.8765;0.8333;0.85;0.8333;0.8357;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
RandomForestClassifier;0.8825;0.8831;0.8825;0.8824;0.89;0.8903;0.89;0.89;0.8333;0.8406;0.8333;0.8355;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
RandomForestClassifier;0.8824;0.8827;0.8824;0.8823;0.8946;0.8948;0.8946;0.8945;0.8333;0.8406;0.8333;0.8355;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
DecisionTreeClassifier;0.8856;0.8859;0.8856;0.8855;0.8597;0.8607;0.8597;0.8594;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8842;0.8845;0.8842;0.8842;0.8745;0.8752;0.8745;0.8743;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8829;0.8834;0.8829;0.8828;0.8812;0.8812;0.8812;0.8812;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8845;0.8849;0.8845;0.8844;0.8685;0.8689;0.8685;0.8684;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
DecisionTreeClassifier;0.8841;0.8846;0.8841;0.884;0.8671;0.868;0.8671;0.867;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8853;0.8855;0.8853;0.8852;0.8638;0.8648;0.8638;0.8634;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 706};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=706)
DecisionTreeClassifier;0.8846;0.885;0.8846;0.8845;0.8691;0.8702;0.8691;0.8691;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 90};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=90)
DecisionTreeClassifier;0.8837;0.884;0.8837;0.8836;0.8624;0.863;0.8624;0.8621;0.8333;0.8532;0.8333;0.8349;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
KNeighborsClassifier;0.8599;0.8619;0.8599;0.8595;0.8679;0.8682;0.8679;0.8679;0.8333;0.8372;0.8333;0.8339;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8613;0.8632;0.8613;0.861;0.8705;0.8743;0.8705;0.8707;0.8333;0.8372;0.8333;0.8339;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8653;0.8673;0.8653;0.865;0.8705;0.8716;0.8705;0.8702;0.8333;0.8372;0.8333;0.8339;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.857;0.86;0.857;0.8567;0.8698;0.8732;0.8698;0.8701;0.8333;0.8372;0.8333;0.8339;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8842;0.8847;0.8842;0.8842;0.8766;0.8767;0.8766;0.8765;0.8333;0.8379;0.8333;0.8333;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 547};RandomForestClassifier(n_estimators=5, random_state=547)
KNeighborsClassifier;0.8633;0.8661;0.8633;0.8631;0.8779;0.8782;0.8779;0.8779;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8661;0.8671;0.8661;0.866;0.8785;0.8808;0.8785;0.8782;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8617;0.8635;0.8617;0.8614;0.8644;0.8649;0.8644;0.8642;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8559;0.8577;0.8559;0.8556;0.8752;0.8755;0.8752;0.8752;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8584;0.8599;0.8584;0.8581;0.8853;0.8857;0.8853;0.8852;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8693;0.8704;0.8693;0.8691;0.8839;0.8839;0.8839;0.8839;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8644;0.8657;0.8644;0.8644;0.8691;0.8692;0.8691;0.8691;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.858;0.8632;0.858;0.8574;0.8685;0.8692;0.8685;0.8683;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
KNeighborsClassifier;0.8536;0.8568;0.8536;0.8532;0.8906;0.8907;0.8906;0.8906;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8608;0.8636;0.8608;0.8606;0.8826;0.8829;0.8826;0.8826;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8593;0.8642;0.8593;0.8586;0.8591;0.8595;0.8591;0.8589;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
KNeighborsClassifier;0.858;0.8616;0.858;0.8577;0.8879;0.888;0.8879;0.8879;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8495;0.8529;0.8495;0.8493;0.8859;0.8861;0.8859;0.8859;0.8333;0.8357;0.8333;0.8331;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8588;0.8639;0.8588;0.8581;0.8711;0.8723;0.8711;0.8706;0.8333;0.8369;0.8333;0.8328;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
RandomForestClassifier;0.8855;0.8858;0.8855;0.8854;0.8805;0.8815;0.8805;0.8805;0.8167;0.8228;0.8167;0.8186;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 610};RandomForestClassifier(n_estimators=10, random_state=610)
DecisionTreeClassifier;0.8827;0.8832;0.8827;0.8826;0.8852;0.8854;0.8852;0.8852;0.8167;0.8201;0.8167;0.8173;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 612};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=612)
KNeighborsClassifier;0.8643;0.8665;0.8643;0.8641;0.882;0.8829;0.882;0.8819;0.8167;0.8201;0.8167;0.8173;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8827;0.8832;0.8827;0.8827;0.8799;0.8806;0.8799;0.8799;0.8167;0.8181;0.8167;0.817;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 869};RandomForestClassifier(n_estimators=5, random_state=869)
KNeighborsClassifier;0.8526;0.8562;0.8526;0.8524;0.8759;0.8766;0.8759;0.8758;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8788;0.8796;0.8788;0.8786;0.8732;0.8747;0.8732;0.8732;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8803;0.881;0.8803;0.8802;0.8826;0.8828;0.8826;0.8825;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
RandomForestClassifier;0.8847;0.8851;0.8847;0.8846;0.8772;0.8777;0.8772;0.8771;0.8167;0.8241;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 869};RandomForestClassifier(n_estimators=5, random_state=869)
MLPClassifier;0.8786;0.8795;0.8786;0.8786;0.8926;0.8939;0.8926;0.8926;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8781;0.8791;0.8781;0.878;0.8907;0.8913;0.8907;0.8907;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8774;0.8782;0.8774;0.8772;0.8846;0.8851;0.8846;0.8846;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8803;0.881;0.8803;0.8801;0.884;0.8841;0.884;0.8838;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.878;0.8787;0.878;0.8779;0.894;0.8943;0.894;0.8939;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8812;0.882;0.8812;0.8812;0.8732;0.8732;0.8732;0.8731;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8811;0.8816;0.8811;0.8811;0.8839;0.8848;0.8839;0.8838;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8799;0.8808;0.8799;0.8798;0.8678;0.868;0.8678;0.8677;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8829;0.8834;0.8829;0.8828;0.8651;0.8651;0.8651;0.8651;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8766;0.8776;0.8766;0.8765;0.8867;0.8871;0.8867;0.8865;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8785;0.8794;0.8785;0.8784;0.8899;0.8901;0.8899;0.8899;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8804;0.881;0.8804;0.8803;0.8758;0.8768;0.8758;0.8757;0.8167;0.8172;0.8167;0.8166;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
KNeighborsClassifier;0.8604;0.8632;0.8604;0.8602;0.8893;0.8913;0.8893;0.8892;0.8167;0.8215;0.8167;0.8165;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8594;0.8645;0.8594;0.8588;0.8659;0.8667;0.8659;0.8653;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.8578;0.8628;0.8578;0.8571;0.8772;0.8781;0.8772;0.8771;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.8583;0.8634;0.8583;0.8575;0.8738;0.8747;0.8738;0.8738;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
KNeighborsClassifier;0.8642;0.8668;0.8642;0.8638;0.8691;0.8704;0.8691;0.8691;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8582;0.8634;0.8582;0.8576;0.8752;0.8753;0.8752;0.8749;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.8571;0.8624;0.8571;0.8564;0.8732;0.8733;0.8732;0.8732;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.8569;0.8623;0.8569;0.8563;0.8879;0.8881;0.8879;0.8878;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.8563;0.8615;0.8563;0.8556;0.8933;0.8935;0.8933;0.8932;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.856;0.8611;0.856;0.8552;0.892;0.8926;0.892;0.8918;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.8589;0.8641;0.8589;0.8583;0.8805;0.8806;0.8805;0.8804;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.857;0.8623;0.857;0.8563;0.8846;0.8851;0.8846;0.8844;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.8575;0.8627;0.8575;0.8567;0.8785;0.8786;0.8785;0.8784;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.8571;0.8623;0.8571;0.8564;0.8805;0.8807;0.8805;0.8805;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.8566;0.8617;0.8566;0.8559;0.8819;0.8826;0.8819;0.8818;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.859;0.8639;0.859;0.8583;0.8725;0.8732;0.8725;0.8722;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 303};SVC(C=10, random_state=303)
SVC;0.8561;0.8614;0.8561;0.8554;0.8886;0.8887;0.8886;0.8886;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.858;0.863;0.858;0.8573;0.8812;0.8815;0.8812;0.8809;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.8586;0.8637;0.8586;0.858;0.8732;0.8736;0.8732;0.8731;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.8584;0.8637;0.8584;0.8577;0.8745;0.8746;0.8745;0.8744;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.858;0.8632;0.858;0.8572;0.8792;0.8796;0.8792;0.8792;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.8586;0.8634;0.8586;0.858;0.8725;0.8746;0.8725;0.8723;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.8576;0.863;0.8576;0.8569;0.8765;0.8771;0.8765;0.8763;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.8589;0.8641;0.8589;0.8582;0.8652;0.8659;0.8652;0.865;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.857;0.8622;0.857;0.8563;0.886;0.8863;0.886;0.8857;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.858;0.8633;0.858;0.8574;0.8617;0.862;0.8617;0.8614;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.8574;0.8627;0.8574;0.8567;0.884;0.8841;0.884;0.8838;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
SVC;0.8583;0.8635;0.8583;0.8575;0.8732;0.8738;0.8732;0.8731;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 617};SVC(C=10, random_state=617)
SVC;0.857;0.8618;0.857;0.8563;0.8867;0.8883;0.8867;0.8866;0.8167;0.8203;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 40};SVC(C=10, random_state=40)
KNeighborsClassifier;0.8515;0.8539;0.8515;0.8513;0.8732;0.8739;0.8732;0.8729;0.8167;0.8208;0.8167;0.8161;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8636;0.8648;0.8636;0.8633;0.8597;0.8614;0.8597;0.8595;0.8167;0.8217;0.8167;0.816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8574;0.8591;0.8574;0.8571;0.8879;0.8888;0.8879;0.8878;0.8167;0.8166;0.8167;0.8156;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8516;0.8534;0.8516;0.8514;0.8785;0.8796;0.8785;0.8786;0.8;0.8035;0.8;0.8005;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8771;0.8781;0.8771;0.877;0.8927;0.8932;0.8927;0.8927;0.8;0.8;0.8;0.8;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8804;0.8812;0.8804;0.8803;0.8779;0.8786;0.8779;0.8777;0.8;0.8;0.8;0.8;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8786;0.8792;0.8786;0.8786;0.8792;0.8796;0.8792;0.8791;0.8;0.8;0.8;0.8;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8793;0.88;0.8793;0.8792;0.8718;0.8727;0.8718;0.8716;0.8;0.8;0.8;0.8;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8791;0.8799;0.8791;0.879;0.8765;0.8766;0.8765;0.8765;0.8;0.8;0.8;0.8;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8806;0.8815;0.8806;0.8806;0.8718;0.8734;0.8718;0.8717;0.8;0.8;0.8;0.8;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8793;0.8799;0.8793;0.8793;0.8839;0.886;0.8839;0.8835;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8806;0.8813;0.8806;0.8806;0.8779;0.8792;0.8779;0.878;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8821;0.8826;0.8821;0.882;0.8758;0.8758;0.8758;0.8758;0.8;0.8016;0.8;0.7997;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
KNeighborsClassifier;0.863;0.8656;0.863;0.8629;0.8711;0.8715;0.8711;0.871;0.8;0.8073;0.8;0.7994;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8592;0.8625;0.8592;0.8589;0.8705;0.8714;0.8705;0.8701;0.8;0.8079;0.8;0.7992;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8563;0.859;0.8563;0.8559;0.8852;0.8861;0.8852;0.8851;0.8;0.8018;0.8;0.7986;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8631;0.8651;0.8631;0.8629;0.8585;0.8617;0.8585;0.858;0.8;0.7987;0.8;0.798;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8765;0.8776;0.8765;0.8765;0.8833;0.8837;0.8833;0.8832;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8776;0.8786;0.8776;0.8774;0.8879;0.8887;0.8879;0.8879;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8791;0.8799;0.8791;0.879;0.8766;0.8781;0.8766;0.8766;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
MLPClassifier;0.8803;0.8811;0.8803;0.8802;0.8638;0.8642;0.8638;0.8637;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8797;0.8805;0.8797;0.8796;0.8738;0.8747;0.8738;0.8737;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 429, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=429)
MLPClassifier;0.8799;0.8805;0.8799;0.8798;0.8712;0.8738;0.8712;0.8712;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 304, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=304)
MLPClassifier;0.8793;0.8801;0.8793;0.8792;0.8846;0.8849;0.8846;0.8845;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 32, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=32)
KNeighborsClassifier;0.8605;0.8627;0.8605;0.8603;0.8578;0.8601;0.8578;0.8573;0.7833;0.7833;0.7833;0.7811;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8543;0.8561;0.8543;0.854;0.8752;0.8771;0.8752;0.875;0.7667;0.7777;0.7667;0.7652;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8594;0.861;0.8594;0.8592;0.8671;0.8716;0.8671;0.8669;0.7667;0.7646;0.7667;0.7647;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.7124;0.7221;0.7124;0.7102;0.7056;0.7173;0.7056;0.705;0.6833;0.7122;0.6833;0.6812;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7108;0.7204;0.7108;0.7086;0.704;0.7188;0.704;0.7032;0.6833;0.7122;0.6833;0.6812;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.7108;0.7201;0.7108;0.709;0.7148;0.7345;0.7148;0.7105;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7103;0.7199;0.7103;0.7084;0.7109;0.7225;0.7109;0.7077;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7106;0.7198;0.7106;0.7085;0.7228;0.7355;0.7228;0.7202;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7115;0.7214;0.7115;0.7096;0.7154;0.7286;0.7154;0.7129;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7108;0.7206;0.7108;0.7087;0.7087;0.7193;0.7087;0.7064;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.7093;0.7191;0.7093;0.7072;0.7197;0.7307;0.7197;0.7176;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.7126;0.7218;0.7126;0.7104;0.6995;0.7143;0.6995;0.6979;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.7083;0.7174;0.7083;0.7061;0.7183;0.7282;0.7183;0.7171;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.712;0.7221;0.712;0.7098;0.7027;0.7099;0.7027;0.7015;0.6667;0.6926;0.6667;0.6632;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7127;0.7221;0.7127;0.7107;0.7034;0.7151;0.7034;0.7014;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7121;0.7222;0.7121;0.7098;0.7161;0.7216;0.7161;0.7149;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.7135;0.7234;0.7135;0.7114;0.6933;0.7021;0.6933;0.6918;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.713;0.7226;0.713;0.7107;0.698;0.7084;0.698;0.6972;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7089;0.7185;0.7089;0.7066;0.725;0.7324;0.725;0.724;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7129;0.7228;0.7129;0.7107;0.6982;0.7066;0.6982;0.6962;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7114;0.7209;0.7114;0.7089;0.7217;0.7305;0.7217;0.7194;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7107;0.72;0.7107;0.7085;0.7188;0.7289;0.7188;0.7154;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7119;0.7213;0.7119;0.7096;0.7188;0.7271;0.7188;0.7179;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.713;0.723;0.713;0.7108;0.6987;0.7067;0.6987;0.6972;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7155;0.7247;0.7155;0.7133;0.698;0.7083;0.698;0.6946;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7095;0.7197;0.7095;0.7075;0.7262;0.7309;0.7262;0.7242;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7107;0.7204;0.7107;0.7086;0.7221;0.7289;0.7221;0.7193;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7097;0.7191;0.7097;0.7072;0.7302;0.7418;0.7302;0.7292;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7136;0.7232;0.7136;0.7115;0.6987;0.7098;0.6987;0.6953;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.7088;0.7182;0.7088;0.7067;0.7217;0.7353;0.7217;0.719;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.7088;0.7182;0.7088;0.7062;0.7342;0.743;0.7342;0.7321;0.65;0.6702;0.65;0.648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
LogisticRegression;0.7108;0.7191;0.7108;0.7083;0.7047;0.7133;0.7047;0.7035;0.6333;0.6508;0.6333;0.6288;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 737, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=737)"
LogisticRegression;0.7092;0.7175;0.7092;0.7068;0.7101;0.7193;0.7101;0.7064;0.6333;0.6508;0.6333;0.6288;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 129, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=129)"
