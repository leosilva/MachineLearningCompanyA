Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8389;0.8513;0.8389;0.8384;0.8551;0.8666;0.8551;0.8539;0.85;0.8571;0.85;0.8473;0.9614;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 541};RandomForestClassifier(n_estimators=10, random_state=541)
RandomForestClassifier;0.8487;0.8555;0.8487;0.8477;0.8406;0.8457;0.8406;0.835;0.8333;0.8603;0.8333;0.8332;0.9671;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.8374;0.8435;0.8374;0.8373;0.8406;0.8406;0.8406;0.8398;0.8167;0.8457;0.8167;0.8184;0.9619;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 541};RandomForestClassifier(n_estimators=10, random_state=541)
RandomForestClassifier;0.8518;0.8604;0.8518;0.8503;0.8406;0.8504;0.8406;0.84;0.8167;0.8433;0.8167;0.8147;0.9642;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.8551;0.8582;0.8551;0.8545;0.8406;0.8466;0.8406;0.8418;0.8167;0.8433;0.8167;0.8147;0.9647;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 16};RandomForestClassifier(n_estimators=20, random_state=16)
RandomForestClassifier;0.8551;0.8599;0.8551;0.8542;0.8261;0.8261;0.8261;0.8261;0.8;0.8373;0.8;0.8016;0.9697;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 541};RandomForestClassifier(n_estimators=10, random_state=541)
KNeighborsClassifier;0.8293;0.8379;0.8293;0.8253;0.8551;0.8551;0.8551;0.8551;0.8;0.8269;0.8;0.7999;0.9399;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.818;0.8262;0.818;0.8149;0.7971;0.8007;0.7971;0.7956;0.8;0.8269;0.8;0.7999;0.935;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8099;0.815;0.8099;0.8081;0.8551;0.8657;0.8551;0.8543;0.8;0.8269;0.8;0.7999;0.9335;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8244;0.8361;0.8244;0.8213;0.8841;0.8842;0.8841;0.8833;0.8;0.8216;0.8;0.7995;0.9455;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
RandomForestClassifier;0.8439;0.8522;0.8439;0.8438;0.8696;0.87;0.8696;0.8695;0.8;0.8179;0.8;0.7984;0.9661;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
KNeighborsClassifier;0.8325;0.8377;0.8325;0.8318;0.8116;0.8135;0.8116;0.8117;0.8;0.8144;0.8;0.7981;0.94;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8196;0.8267;0.8196;0.8174;0.8116;0.8116;0.8116;0.8116;0.8;0.8144;0.8;0.7981;0.9404;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8261;0.8327;0.8261;0.8247;0.7826;0.823;0.7826;0.781;0.7833;0.8116;0.7833;0.7861;0.9409;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8372;0.8466;0.8372;0.8352;0.8406;0.8595;0.8406;0.8402;0.7833;0.8032;0.7833;0.7855;0.944;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.81;0.8195;0.81;0.8078;0.9275;0.9296;0.9275;0.9274;0.7833;0.8032;0.7833;0.7855;0.9334;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.818;0.834;0.818;0.815;0.8116;0.8202;0.8116;0.8047;0.7833;0.7986;0.7833;0.7854;0.9489;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
RandomForestClassifier;0.8535;0.8616;0.8535;0.8524;0.8551;0.8677;0.8551;0.8495;0.7833;0.8012;0.7833;0.7844;0.9653;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 16};RandomForestClassifier(n_estimators=20, random_state=16)
MLPClassifier;0.8212;0.8345;0.8212;0.8169;0.8986;0.8988;0.8986;0.8978;0.7833;0.8025;0.7833;0.7843;0.9447;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
RandomForestClassifier;0.8647;0.8718;0.8647;0.8642;0.8261;0.8277;0.8261;0.8259;0.7833;0.8227;0.7833;0.7829;0.9641;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 541};RandomForestClassifier(n_estimators=10, random_state=541)
RandomForestClassifier;0.8422;0.8472;0.8422;0.8406;0.7826;0.7855;0.7826;0.7833;0.7833;0.8118;0.7833;0.7828;0.9674;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.852;0.8585;0.852;0.8483;0.8551;0.858;0.8551;0.8532;0.7833;0.8049;0.7833;0.7818;0.9646;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 16};RandomForestClassifier(n_estimators=20, random_state=16)
KNeighborsClassifier;0.81;0.8218;0.81;0.8066;0.8261;0.8255;0.8261;0.825;0.7833;0.801;0.7833;0.7803;0.9433;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8533;0.8571;0.8533;0.8529;0.8406;0.8512;0.8406;0.8402;0.7833;0.8104;0.7833;0.779;0.9638;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 16};RandomForestClassifier(n_estimators=20, random_state=16)
DecisionTreeClassifier;0.8405;0.8439;0.8405;0.8397;0.7826;0.8046;0.7826;0.7827;0.7833;0.786;0.7833;0.7789;0.9352;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=764)
MLPClassifier;0.8134;0.8301;0.8134;0.8117;0.8551;0.8582;0.8551;0.8532;0.7667;0.7925;0.7667;0.7719;0.9416;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
RandomForestClassifier;0.8358;0.8427;0.8358;0.8347;0.8986;0.9032;0.8986;0.8997;0.7667;0.8069;0.7667;0.7701;0.961;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
RandomForestClassifier;0.8421;0.8485;0.8421;0.8415;0.8406;0.8482;0.8406;0.8427;0.7667;0.8069;0.7667;0.7701;0.9637;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 16};RandomForestClassifier(n_estimators=20, random_state=16)
RandomForestClassifier;0.8454;0.8529;0.8454;0.8449;0.8116;0.8194;0.8116;0.81;0.7667;0.7825;0.7667;0.7697;0.9645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 541};RandomForestClassifier(n_estimators=10, random_state=541)
MLPClassifier;0.8213;0.8316;0.8213;0.8189;0.8116;0.8168;0.8116;0.8109;0.7667;0.7848;0.7667;0.7689;0.9483;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
RandomForestClassifier;0.8308;0.8372;0.8308;0.8294;0.8841;0.8861;0.8841;0.8843;0.7667;0.7854;0.7667;0.7687;0.9633;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 16};RandomForestClassifier(n_estimators=20, random_state=16)
RandomForestClassifier;0.8423;0.8517;0.8423;0.8416;0.8551;0.8533;0.8551;0.8523;0.7667;0.7878;0.7667;0.7685;0.9637;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 541};RandomForestClassifier(n_estimators=20, random_state=541)
RandomForestClassifier;0.8503;0.8606;0.8503;0.8501;0.7681;0.7767;0.7681;0.7662;0.7667;0.8056;0.7667;0.7679;0.9685;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 541};RandomForestClassifier(n_estimators=20, random_state=541)
RandomForestClassifier;0.8357;0.8439;0.8357;0.8347;0.8986;0.8988;0.8986;0.8978;0.7667;0.7926;0.7667;0.7676;0.969;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 541};RandomForestClassifier(n_estimators=20, random_state=541)
KNeighborsClassifier;0.8083;0.814;0.8083;0.8067;0.8406;0.8519;0.8406;0.8401;0.7667;0.7893;0.7667;0.7672;0.9318;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8308;0.8416;0.8308;0.8273;0.8261;0.8472;0.8261;0.8202;0.7667;0.7893;0.7667;0.7672;0.9397;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8035;0.8118;0.8035;0.8011;0.8551;0.8706;0.8551;0.8556;0.7667;0.7893;0.7667;0.7672;0.9403;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.818;0.8295;0.818;0.8151;0.8116;0.8116;0.8116;0.8116;0.7667;0.7893;0.7667;0.7672;0.9365;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8228;0.833;0.8228;0.8209;0.7826;0.8069;0.7826;0.7757;0.7667;0.7893;0.7667;0.7672;0.9339;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8181;0.8279;0.8181;0.8176;0.8841;0.885;0.8841;0.8825;0.7667;0.7893;0.7667;0.7672;0.9357;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8165;0.8272;0.8165;0.8127;0.8406;0.8436;0.8406;0.841;0.7667;0.7893;0.7667;0.7672;0.9417;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8051;0.8212;0.8051;0.8029;0.8696;0.8918;0.8696;0.8676;0.7667;0.7893;0.7667;0.7672;0.9425;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.81;0.8198;0.81;0.8089;0.8406;0.8506;0.8406;0.839;0.7667;0.7893;0.7667;0.7672;0.9393;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.826;0.8316;0.826;0.8246;0.8261;0.8506;0.8261;0.8272;0.7667;0.7893;0.7667;0.7672;0.9468;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8147;0.8217;0.8147;0.8146;0.8261;0.8291;0.8261;0.8269;0.7667;0.7893;0.7667;0.7672;0.9388;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8134;0.8208;0.8134;0.8119;0.8696;0.8774;0.8696;0.8677;0.7667;0.7893;0.7667;0.7672;0.9381;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8084;0.8131;0.8084;0.8062;0.8406;0.8413;0.8406;0.8401;0.7667;0.7893;0.7667;0.7672;0.9433;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8245;0.8297;0.8245;0.8234;0.8551;0.8679;0.8551;0.8514;0.7667;0.7893;0.7667;0.7672;0.9302;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8181;0.8267;0.8181;0.8157;0.8551;0.8591;0.8551;0.8546;0.7667;0.7878;0.7667;0.7665;0.9401;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8359;0.8462;0.8359;0.8341;0.8986;0.9041;0.8986;0.8967;0.7667;0.7881;0.7667;0.7664;0.9609;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 16};RandomForestClassifier(n_estimators=20, random_state=16)
DecisionTreeClassifier;0.818;0.824;0.818;0.8165;0.8696;0.8769;0.8696;0.8674;0.7667;0.7672;0.7667;0.7659;0.93;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
MLPClassifier;0.8278;0.8442;0.8278;0.8238;0.8116;0.8134;0.8116;0.8108;0.7667;0.7922;0.7667;0.7648;0.9493;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
KNeighborsClassifier;0.8405;0.8483;0.8405;0.8391;0.7536;0.7851;0.7536;0.7552;0.7667;0.8095;0.7667;0.7639;0.9409;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8517;0.856;0.8517;0.8516;0.8696;0.8856;0.8696;0.869;0.7667;0.7811;0.7667;0.763;0.9645;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 19};RandomForestClassifier(n_estimators=5, random_state=19)
RandomForestClassifier;0.8535;0.8561;0.8535;0.8523;0.8696;0.8726;0.8696;0.87;0.7667;0.7811;0.7667;0.763;0.9662;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
DecisionTreeClassifier;0.8454;0.8518;0.8454;0.8455;0.8116;0.8217;0.8116;0.81;0.7667;0.7617;0.7667;0.762;0.9293;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8357;0.8407;0.8357;0.8333;0.8261;0.8259;0.8261;0.8257;0.7667;0.7617;0.7667;0.762;0.931;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.815;0.8207;0.815;0.8139;0.913;0.9135;0.913;0.913;0.7667;0.7686;0.7667;0.7618;0.9243;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=232)
DecisionTreeClassifier;0.8164;0.8227;0.8164;0.8167;0.8406;0.8455;0.8406;0.8375;0.7667;0.773;0.7667;0.7618;0.9336;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8132;0.8176;0.8132;0.8124;0.7681;0.7764;0.7681;0.7673;0.7667;0.7644;0.7667;0.7614;0.9256;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8324;0.8377;0.8324;0.8309;0.8696;0.8688;0.8696;0.8689;0.7667;0.7644;0.7667;0.7614;0.9275;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.826;0.83;0.826;0.8258;0.8696;0.8772;0.8696;0.8689;0.7667;0.7644;0.7667;0.7614;0.9286;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
MLPClassifier;0.826;0.84;0.826;0.8231;0.8406;0.8406;0.8406;0.8398;0.75;0.78;0.75;0.7561;0.9482;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
RandomForestClassifier;0.8373;0.8407;0.8373;0.8354;0.8551;0.8595;0.8551;0.8539;0.75;0.7848;0.75;0.7554;0.9647;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 541};RandomForestClassifier(n_estimators=20, random_state=541)
MLPClassifier;0.8212;0.8352;0.8212;0.8192;0.8261;0.8324;0.8261;0.8256;0.75;0.7769;0.75;0.7553;0.9455;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
MLPClassifier;0.818;0.8283;0.818;0.8135;0.8696;0.8988;0.8696;0.8686;0.75;0.7769;0.75;0.7553;0.9479;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
MLPClassifier;0.8197;0.8376;0.8197;0.817;0.913;0.9129;0.913;0.9127;0.75;0.7828;0.75;0.755;0.944;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
SVC;0.7972;0.824;0.7972;0.7961;0.8406;0.8619;0.8406;0.8389;0.75;0.7714;0.75;0.7541;0.8984;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
SVC;0.8019;0.83;0.8019;0.796;0.7971;0.8208;0.7971;0.8009;0.75;0.7714;0.75;0.7541;0.9022;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
SVC;0.7923;0.823;0.7923;0.7892;0.8551;0.8742;0.8551;0.8526;0.75;0.7714;0.75;0.7541;0.8944;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
SVC;0.802;0.828;0.802;0.7998;0.8551;0.8561;0.8551;0.8553;0.75;0.7714;0.75;0.7541;0.8965;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
SVC;0.7906;0.8193;0.7906;0.7882;0.8116;0.8439;0.8116;0.8072;0.75;0.7714;0.75;0.7541;0.8944;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
SVC;0.7971;0.8231;0.7971;0.7947;0.8261;0.8397;0.8261;0.8284;0.75;0.7714;0.75;0.7541;0.8938;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
MLPClassifier;0.8213;0.8396;0.8213;0.8172;0.7971;0.8173;0.7971;0.7916;0.75;0.7714;0.75;0.7541;0.9478;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
MLPClassifier;0.8228;0.838;0.8228;0.8178;0.8696;0.8794;0.8696;0.8697;0.75;0.7714;0.75;0.7541;0.9464;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
SVC;0.7986;0.8269;0.7986;0.7969;0.8551;0.8574;0.8551;0.8538;0.75;0.7714;0.75;0.7541;0.9019;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
MLPClassifier;0.818;0.8308;0.818;0.8137;0.8841;0.8841;0.8841;0.8841;0.75;0.7822;0.75;0.754;0.946;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
RandomForestClassifier;0.8471;0.8506;0.8471;0.8457;0.8406;0.8406;0.8406;0.8406;0.75;0.7951;0.75;0.7536;0.9615;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 541};RandomForestClassifier(n_estimators=20, random_state=541)
MLPClassifier;0.8341;0.8511;0.8341;0.8315;0.8261;0.846;0.8261;0.8249;0.75;0.7681;0.75;0.7535;0.9484;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
MLPClassifier;0.8163;0.8333;0.8163;0.8132;0.8406;0.8519;0.8406;0.8401;0.75;0.7681;0.75;0.7535;0.9479;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8229;0.8398;0.8229;0.8182;0.8116;0.8194;0.8116;0.8097;0.75;0.7681;0.75;0.7535;0.9449;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
SVC;0.7938;0.82;0.7938;0.7923;0.8261;0.8545;0.8261;0.8198;0.75;0.7773;0.75;0.7531;0.8988;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
SVC;0.8035;0.8261;0.8035;0.8027;0.7536;0.814;0.7536;0.7296;0.75;0.7773;0.75;0.7531;0.9081;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
SVC;0.8132;0.8387;0.8132;0.8122;0.7246;0.762;0.7246;0.7146;0.75;0.7773;0.75;0.7531;0.9076;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
SVC;0.7972;0.8256;0.7972;0.7965;0.8696;0.887;0.8696;0.8662;0.75;0.7773;0.75;0.7531;0.8992;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
RandomForestClassifier;0.8503;0.8603;0.8503;0.8482;0.7971;0.8271;0.7971;0.7994;0.75;0.7747;0.75;0.7524;0.9669;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 16};RandomForestClassifier(n_estimators=10, random_state=16)
KNeighborsClassifier;0.8231;0.8282;0.8231;0.8223;0.8261;0.8477;0.8261;0.8218;0.75;0.7768;0.75;0.7521;0.9431;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8165;0.8224;0.8165;0.8161;0.8841;0.8924;0.8841;0.8856;0.75;0.7768;0.75;0.7521;0.9329;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.826;0.8399;0.826;0.8238;0.8261;0.8324;0.8261;0.8211;0.75;0.7614;0.75;0.7513;0.9454;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
RandomForestClassifier;0.8647;0.8729;0.8647;0.8651;0.7101;0.7063;0.7101;0.7073;0.75;0.7733;0.75;0.751;0.9678;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 19};RandomForestClassifier(n_estimators=20, random_state=19)
DecisionTreeClassifier;0.8277;0.8416;0.8277;0.8245;0.7971;0.8025;0.7971;0.797;0.75;0.7512;0.75;0.7503;0.9337;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8502;0.8554;0.8502;0.8487;0.7826;0.801;0.7826;0.7776;0.75;0.7543;0.75;0.7497;0.9363;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8471;0.8519;0.8471;0.8474;0.7681;0.7639;0.7681;0.7643;0.75;0.7513;0.75;0.7497;0.9301;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8341;0.8438;0.8341;0.833;0.8116;0.8128;0.8116;0.8044;0.75;0.7513;0.75;0.7495;0.9262;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.826;0.8365;0.826;0.8228;0.8116;0.8142;0.8116;0.8077;0.75;0.7542;0.75;0.7492;0.9413;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8198;0.8232;0.8198;0.818;0.7536;0.7619;0.7536;0.7552;0.75;0.7542;0.75;0.7492;0.9345;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.826;0.8368;0.826;0.8243;0.8406;0.8602;0.8406;0.8417;0.75;0.7488;0.75;0.7491;0.9335;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
RandomForestClassifier;0.8455;0.8531;0.8455;0.8448;0.8261;0.8303;0.8261;0.8245;0.75;0.7688;0.75;0.7488;0.9646;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 19};RandomForestClassifier(n_estimators=10, random_state=19)
KNeighborsClassifier;0.8115;0.8182;0.8115;0.8105;0.8841;0.8856;0.8841;0.8828;0.75;0.7766;0.75;0.7472;0.9388;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8261;0.8313;0.8261;0.8252;0.8406;0.8435;0.8406;0.8403;0.75;0.7482;0.75;0.7469;0.9304;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8503;0.8555;0.8503;0.8499;0.8406;0.8442;0.8406;0.8417;0.75;0.7472;0.75;0.7465;0.9348;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8326;0.8406;0.8326;0.8311;0.7971;0.7974;0.7971;0.7962;0.75;0.7472;0.75;0.7465;0.9365;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8357;0.8413;0.8357;0.8335;0.7971;0.801;0.7971;0.7956;0.75;0.7603;0.75;0.7445;0.9289;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8374;0.8437;0.8374;0.8376;0.8261;0.8338;0.8261;0.8282;0.75;0.7559;0.75;0.7432;0.9391;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8051;0.813;0.8051;0.8037;0.8261;0.8265;0.8261;0.826;0.75;0.7559;0.75;0.7432;0.9223;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8341;0.8389;0.8341;0.833;0.8261;0.8254;0.8261;0.825;0.75;0.7489;0.75;0.743;0.9242;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
MLPClassifier;0.8374;0.8478;0.8374;0.8354;0.7681;0.7822;0.7681;0.7645;0.7333;0.7765;0.7333;0.7408;0.9485;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
MLPClassifier;0.8229;0.8379;0.8229;0.8197;0.7971;0.803;0.7971;0.7969;0.7333;0.7689;0.7333;0.7392;0.9479;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
MLPClassifier;0.839;0.8531;0.839;0.8368;0.7826;0.7944;0.7826;0.7742;0.7333;0.7542;0.7333;0.7384;0.9484;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
SVC;0.7889;0.8213;0.7889;0.7882;0.8841;0.885;0.8841;0.8825;0.7333;0.7619;0.7333;0.7379;0.8936;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
SVC;0.8035;0.8303;0.8035;0.8022;0.8116;0.8309;0.8116;0.8101;0.7333;0.7584;0.7333;0.7377;0.9019;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
SVC;0.7988;0.8232;0.7988;0.7974;0.8406;0.8538;0.8406;0.8357;0.7333;0.7584;0.7333;0.7377;0.8937;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
RandomForestClassifier;0.8278;0.8335;0.8278;0.8254;0.9275;0.9281;0.9275;0.9275;0.7333;0.7578;0.7333;0.737;0.963;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 19};RandomForestClassifier(n_estimators=5, random_state=19)
MLPClassifier;0.818;0.8349;0.818;0.8155;0.913;0.9197;0.913;0.9137;0.7333;0.7556;0.7333;0.7367;0.9422;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
RandomForestClassifier;0.8439;0.8549;0.8439;0.8432;0.7826;0.7903;0.7826;0.7801;0.7333;0.7617;0.7333;0.7359;0.9708;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 16};RandomForestClassifier(n_estimators=10, random_state=16)
DecisionTreeClassifier;0.8502;0.8583;0.8502;0.8482;0.7826;0.779;0.7826;0.7798;0.7333;0.7333;0.7333;0.7333;0.9371;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8196;0.8265;0.8196;0.8188;0.8406;0.8411;0.8406;0.8389;0.7333;0.7405;0.7333;0.7328;0.9271;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 764};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=764)
DecisionTreeClassifier;0.8214;0.8296;0.8214;0.8201;0.8261;0.8265;0.8261;0.821;0.7333;0.7394;0.7333;0.7319;0.9259;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
DecisionTreeClassifier;0.8502;0.8532;0.8502;0.85;0.7391;0.7446;0.7391;0.7404;0.7333;0.7457;0.7333;0.7318;0.9305;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8518;0.8547;0.8518;0.85;0.7826;0.7953;0.7826;0.7825;0.7333;0.7316;0.7333;0.7312;0.9407;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
DecisionTreeClassifier;0.8486;0.8572;0.8486;0.8467;0.7971;0.8067;0.7971;0.7969;0.7333;0.7343;0.7333;0.7257;0.9444;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 232};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=232)
MLPClassifier;0.8229;0.8373;0.8229;0.8198;0.8696;0.8712;0.8696;0.8693;0.7167;0.7722;0.7167;0.7234;0.9507;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 955, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=955)
SVC;0.802;0.83;0.802;0.7996;0.7971;0.7999;0.7971;0.795;0.7167;0.7403;0.7167;0.7232;0.9045;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
KNeighborsClassifier;0.8229;0.832;0.8229;0.821;0.8406;0.8497;0.8406;0.8366;0.7167;0.7593;0.7167;0.7227;0.9414;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1)
MLPClassifier;0.8148;0.8311;0.8148;0.8117;0.913;0.9246;0.913;0.9138;0.7167;0.7444;0.7167;0.7222;0.9435;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8293;0.8433;0.8293;0.8249;0.8406;0.8453;0.8406;0.8392;0.7167;0.7367;0.7167;0.7222;0.9454;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
SVC;0.7987;0.8271;0.7987;0.7959;0.8261;0.8325;0.8261;0.8223;0.7167;0.7406;0.7167;0.7222;0.9008;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
SVC;0.8068;0.8298;0.8068;0.8051;0.7681;0.7955;0.7681;0.7641;0.7167;0.7406;0.7167;0.7222;0.8987;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
SVC;0.7938;0.82;0.7938;0.7906;0.8116;0.8191;0.8116;0.8086;0.7167;0.753;0.7167;0.7222;0.9021;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
SVC;0.7971;0.8224;0.7971;0.795;0.8551;0.873;0.8551;0.8546;0.7167;0.7453;0.7167;0.7209;0.9009;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
SVC;0.7875;0.8148;0.7875;0.7853;0.8696;0.8811;0.8696;0.8684;0.7167;0.7453;0.7167;0.7209;0.8962;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
SVC;0.7987;0.8266;0.7987;0.7964;0.7971;0.8006;0.7971;0.7965;0.7167;0.7453;0.7167;0.7209;0.9021;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
MLPClassifier;0.8246;0.8375;0.8246;0.8213;0.8406;0.8507;0.8406;0.8399;0.7167;0.7453;0.7167;0.7209;0.9472;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
KNeighborsClassifier;0.8439;0.8513;0.8439;0.842;0.7536;0.7534;0.7536;0.7498;0.7167;0.7657;0.7167;0.72;0.9454;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
MLPClassifier;0.8293;0.8359;0.8293;0.8264;0.8116;0.8292;0.8116;0.8087;0.7167;0.7333;0.7167;0.7199;0.9479;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 583, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=583)
MLPClassifier;0.8244;0.8394;0.8244;0.8214;0.8696;0.8736;0.8696;0.8691;0.7;0.7391;0.7;0.7086;0.9452;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
SVC;0.7922;0.8172;0.7922;0.79;0.7826;0.8135;0.7826;0.7731;0.7;0.733;0.7;0.7068;0.9015;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
SVC;0.7987;0.8262;0.7987;0.7962;0.8116;0.8225;0.8116;0.8135;0.7;0.733;0.7;0.7068;0.8938;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
MLPClassifier;0.8229;0.838;0.8229;0.8197;0.8261;0.8358;0.8261;0.8274;0.7;0.7278;0.7;0.7064;0.9466;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
MLPClassifier;0.818;0.8274;0.818;0.8152;0.8406;0.8729;0.8406;0.8414;0.7;0.7278;0.7;0.7064;0.9461;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
SVC;0.797;0.8243;0.797;0.7955;0.8261;0.8521;0.8261;0.8243;0.7;0.7315;0.7;0.7063;0.8998;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
SVC;0.7955;0.824;0.7955;0.794;0.8841;0.8848;0.8841;0.8806;0.7;0.7315;0.7;0.7063;0.8959;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
MLPClassifier;0.8165;0.8321;0.8165;0.8126;0.8406;0.8449;0.8406;0.8393;0.7;0.7261;0.7;0.7059;0.9486;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 523, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=523)
SVC;0.7987;0.8248;0.7987;0.7971;0.7826;0.8283;0.7826;0.7808;0.7;0.7369;0.7;0.7051;0.9036;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 546};SVC(C=10, probability=True, random_state=546)
SVC;0.7908;0.8201;0.7908;0.7884;0.8551;0.864;0.8551;0.8538;0.7;0.7369;0.7;0.7051;0.8936;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
LogisticRegression;0.6974;0.7116;0.6974;0.6957;0.7391;0.747;0.7391;0.7369;0.7;0.7589;0.7;0.7014;0.827;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6795;0.6972;0.6795;0.6748;0.7536;0.7975;0.7536;0.7524;0.7;0.7589;0.7;0.7014;0.828;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.7068;0.7199;0.7068;0.7058;0.7391;0.758;0.7391;0.7365;0.7;0.7459;0.7;0.6992;0.8293;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.6763;0.6907;0.6763;0.6737;0.7681;0.7857;0.7681;0.7616;0.7;0.7459;0.7;0.6992;0.8296;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
DecisionTreeClassifier;0.8212;0.826;0.8212;0.8202;0.6957;0.6966;0.6957;0.6905;0.7;0.6978;0.7;0.6986;0.9189;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 705};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=705)
LogisticRegression;0.7053;0.7147;0.7053;0.7024;0.6522;0.6553;0.6522;0.6524;0.7;0.7357;0.7;0.6975;0.8317;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.6923;0.7039;0.6923;0.6899;0.6957;0.6964;0.6957;0.6954;0.7;0.7357;0.7;0.6975;0.8239;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
SVC;0.7939;0.8237;0.7939;0.7924;0.8116;0.8246;0.8116;0.8124;0.6833;0.7185;0.6833;0.69;0.8929;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, probability=True, random_state=423)
RandomForestClassifier;0.8518;0.8601;0.8518;0.8516;0.7971;0.802;0.7971;0.7979;0.6833;0.7054;0.6833;0.6837;0.9638;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 16};RandomForestClassifier(n_estimators=5, random_state=16)
LogisticRegression;0.6795;0.6863;0.6795;0.6747;0.7101;0.7084;0.7101;0.7084;0.6833;0.7351;0.6833;0.6817;0.8272;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.686;0.6942;0.686;0.6828;0.7681;0.7761;0.7681;0.7598;0.6833;0.7351;0.6833;0.6817;0.8199;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.6763;0.6899;0.6763;0.6724;0.8406;0.8443;0.8406;0.8391;0.6833;0.7351;0.6833;0.6817;0.8222;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6811;0.6888;0.6811;0.6781;0.7391;0.7856;0.7391;0.74;0.6833;0.7351;0.6833;0.6817;0.8206;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7182;0.7285;0.7182;0.7162;0.5362;0.567;0.5362;0.5373;0.6833;0.7351;0.6833;0.6817;0.8407;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7036;0.7157;0.7036;0.7008;0.5652;0.5778;0.5652;0.5562;0.6833;0.7362;0.6833;0.6816;0.8449;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7166;0.7288;0.7166;0.7144;0.5942;0.6171;0.5942;0.5997;0.6833;0.7362;0.6833;0.6816;0.8378;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6842;0.697;0.6842;0.6823;0.7391;0.7524;0.7391;0.7417;0.6833;0.7237;0.6833;0.6801;0.8236;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.7069;0.7194;0.7069;0.7047;0.7101;0.7161;0.7101;0.7114;0.6833;0.7237;0.6833;0.6801;0.8287;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.702;0.7093;0.702;0.6997;0.6377;0.651;0.6377;0.6352;0.6833;0.7237;0.6833;0.6801;0.8321;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.6699;0.6848;0.6699;0.6663;0.8116;0.8193;0.8116;0.8087;0.6833;0.7237;0.6833;0.6801;0.8198;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7004;0.7103;0.7004;0.6986;0.6522;0.6632;0.6522;0.6548;0.6833;0.7237;0.6833;0.6801;0.8316;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.6891;0.701;0.6891;0.6869;0.6957;0.7004;0.6957;0.6924;0.6833;0.7237;0.6833;0.6801;0.826;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.7067;0.7243;0.7067;0.7063;0.6232;0.639;0.6232;0.608;0.6833;0.7221;0.6833;0.6796;0.8367;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.686;0.6993;0.686;0.6834;0.7246;0.7233;0.7246;0.7219;0.6833;0.7221;0.6833;0.6796;0.8233;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.6794;0.6913;0.6794;0.6772;0.7681;0.7935;0.7681;0.7684;0.6833;0.7221;0.6833;0.6796;0.8233;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
SVC;0.7907;0.8181;0.7907;0.7905;0.8551;0.8787;0.8551;0.8462;0.6667;0.7011;0.6667;0.6747;0.9015;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
SVC;0.8019;0.8279;0.8019;0.7995;0.7681;0.8061;0.7681;0.7675;0.6667;0.7165;0.6667;0.6719;0.8997;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 324};SVC(C=10, probability=True, random_state=324)
LogisticRegression;0.6811;0.6863;0.6811;0.6786;0.7826;0.7921;0.7826;0.7843;0.6667;0.7239;0.6667;0.6637;0.8199;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.6909;0.7018;0.6909;0.6874;0.7391;0.7769;0.7391;0.7475;0.6667;0.7263;0.6667;0.6633;0.826;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.699;0.7047;0.699;0.6968;0.6522;0.6687;0.6522;0.6432;0.6667;0.714;0.6667;0.6625;0.8344;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 126, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=126)"
LogisticRegression;0.7053;0.7136;0.7053;0.7041;0.7391;0.7516;0.7391;0.7324;0.6667;0.7113;0.6667;0.6621;0.8278;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.7263;0.7361;0.7263;0.7245;0.6087;0.6385;0.6087;0.5983;0.6667;0.6983;0.6667;0.6599;0.837;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.7052;0.7159;0.7052;0.7021;0.7391;0.8093;0.7391;0.7406;0.6667;0.6985;0.6667;0.657;0.8289;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
LogisticRegression;0.6763;0.691;0.6763;0.6729;0.7971;0.8194;0.7971;0.7918;0.65;0.6849;0.65;0.6412;0.8165;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 992, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=992)"
LogisticRegression;0.699;0.7135;0.699;0.6973;0.7101;0.7403;0.7101;0.7033;0.6;0.6199;0.6;0.5953;0.8326;smote;250;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 756, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=756)"
