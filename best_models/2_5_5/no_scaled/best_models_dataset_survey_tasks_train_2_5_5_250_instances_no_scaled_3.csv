Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8408;0.8552;0.8408;0.842;0.7826;0.7855;0.7826;0.7838;0.8833;0.8894;0.8833;0.8848;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=440)
RandomForestClassifier;0.8664;0.8725;0.8664;0.8658;0.7681;0.7905;0.7681;0.7708;0.8833;0.8884;0.8833;0.8834;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 295};RandomForestClassifier(n_estimators=10, random_state=295)
RandomForestClassifier;0.8583;0.8686;0.8583;0.8592;0.8696;0.8691;0.8696;0.8685;0.8833;0.8952;0.8833;0.8828;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
RandomForestClassifier;0.8518;0.8566;0.8518;0.8516;0.9275;0.9336;0.9275;0.9286;0.8833;0.8897;0.8833;0.8819;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
RandomForestClassifier;0.8486;0.8532;0.8486;0.8486;0.8261;0.8384;0.8261;0.8266;0.8833;0.895;0.8833;0.8818;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 369};RandomForestClassifier(n_estimators=5, random_state=369)
RandomForestClassifier;0.8405;0.8482;0.8405;0.8407;0.8261;0.8338;0.8261;0.8282;0.8833;0.8903;0.8833;0.8808;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
DecisionTreeClassifier;0.8439;0.8521;0.8439;0.8448;0.7536;0.7599;0.7536;0.7426;0.8667;0.8816;0.8667;0.867;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=655)
DecisionTreeClassifier;0.8261;0.8439;0.8261;0.8269;0.8841;0.8939;0.8841;0.8846;0.8667;0.8692;0.8667;0.8669;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=655)
DecisionTreeClassifier;0.8213;0.8364;0.8213;0.8219;0.8986;0.9003;0.8986;0.8991;0.8667;0.8709;0.8667;0.8663;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
RandomForestClassifier;0.8662;0.8729;0.8662;0.8666;0.8406;0.863;0.8406;0.8425;0.8667;0.8699;0.8667;0.8659;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 369};RandomForestClassifier(n_estimators=5, random_state=369)
RandomForestClassifier;0.8664;0.8716;0.8664;0.8662;0.8696;0.8759;0.8696;0.8695;0.8667;0.8699;0.8667;0.8659;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 369};RandomForestClassifier(n_estimators=20, random_state=369)
RandomForestClassifier;0.8517;0.8589;0.8517;0.8519;0.8551;0.8573;0.8551;0.8544;0.8667;0.8774;0.8667;0.8647;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 278};RandomForestClassifier(n_estimators=5, random_state=278)
RandomForestClassifier;0.8567;0.86;0.8567;0.8568;0.8841;0.8908;0.8841;0.8832;0.8667;0.8774;0.8667;0.8647;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 295};RandomForestClassifier(n_estimators=10, random_state=295)
RandomForestClassifier;0.8487;0.8569;0.8487;0.849;0.8986;0.9003;0.8986;0.8991;0.8667;0.8774;0.8667;0.8647;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 295};RandomForestClassifier(n_estimators=20, random_state=295)
RandomForestClassifier;0.8389;0.8466;0.8389;0.8399;0.8841;0.8859;0.8841;0.8839;0.8667;0.8774;0.8667;0.8647;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 295};RandomForestClassifier(n_estimators=20, random_state=295)
RandomForestClassifier;0.8584;0.8636;0.8584;0.8582;0.8261;0.8274;0.8261;0.8259;0.8667;0.8833;0.8667;0.8642;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 295};RandomForestClassifier(n_estimators=20, random_state=295)
LogisticRegression;0.8197;0.8277;0.8197;0.8209;0.7681;0.7709;0.7681;0.7667;0.85;0.862;0.85;0.8516;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
DecisionTreeClassifier;0.847;0.8556;0.847;0.848;0.8116;0.8185;0.8116;0.8128;0.85;0.8523;0.85;0.8508;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=440)
DecisionTreeClassifier;0.831;0.8452;0.831;0.8324;0.8696;0.8746;0.8696;0.8681;0.85;0.8523;0.85;0.8508;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
RandomForestClassifier;0.8471;0.8529;0.8471;0.8479;0.8841;0.8871;0.8841;0.8845;0.85;0.8564;0.85;0.8508;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 369};RandomForestClassifier(n_estimators=20, random_state=369)
DecisionTreeClassifier;0.8325;0.8453;0.8325;0.8332;0.8696;0.8936;0.8696;0.8725;0.85;0.8542;0.85;0.8506;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=440)
DecisionTreeClassifier;0.8375;0.8476;0.8375;0.8393;0.8116;0.8155;0.8116;0.8127;0.85;0.8542;0.85;0.8506;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
DecisionTreeClassifier;0.8324;0.846;0.8324;0.8326;0.7971;0.8061;0.7971;0.7996;0.85;0.8542;0.85;0.8506;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=655)
DecisionTreeClassifier;0.8391;0.8492;0.8391;0.8407;0.8116;0.808;0.8116;0.8047;0.85;0.8544;0.85;0.8499;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=655)
KNeighborsClassifier;0.7552;0.7625;0.7552;0.7521;0.7971;0.8199;0.7971;0.802;0.85;0.8497;0.85;0.8495;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8471;0.8529;0.8471;0.8476;0.913;0.9138;0.913;0.9123;0.85;0.8524;0.85;0.8488;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 369};RandomForestClassifier(n_estimators=5, random_state=369)
RandomForestClassifier;0.8582;0.8643;0.8582;0.8583;0.8841;0.8822;0.8841;0.882;0.85;0.8563;0.85;0.8487;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 278};RandomForestClassifier(n_estimators=20, random_state=278)
RandomForestClassifier;0.8535;0.8613;0.8535;0.8541;0.8261;0.8372;0.8261;0.8275;0.85;0.8563;0.85;0.8487;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 369};RandomForestClassifier(n_estimators=20, random_state=369)
RandomForestClassifier;0.8534;0.8583;0.8534;0.8538;0.8406;0.8435;0.8406;0.8418;0.85;0.8563;0.85;0.8487;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
RandomForestClassifier;0.8598;0.8702;0.8598;0.8606;0.8696;0.873;0.8696;0.8704;0.85;0.8563;0.85;0.8487;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
RandomForestClassifier;0.8598;0.8668;0.8598;0.8599;0.8406;0.8458;0.8406;0.8398;0.85;0.8728;0.85;0.8486;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 369};RandomForestClassifier(n_estimators=10, random_state=369)
RandomForestClassifier;0.8389;0.849;0.8389;0.8394;0.8986;0.8984;0.8986;0.8982;0.85;0.8658;0.85;0.8471;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 295};RandomForestClassifier(n_estimators=20, random_state=295)
MLPClassifier;0.8244;0.8375;0.8244;0.8243;0.7536;0.7705;0.7536;0.759;0.8333;0.8528;0.8333;0.8372;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
DecisionTreeClassifier;0.8343;0.8482;0.8343;0.8348;0.8841;0.8917;0.8841;0.8857;0.8333;0.8496;0.8333;0.8363;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
LogisticRegression;0.8245;0.8293;0.8245;0.8245;0.7826;0.7861;0.7826;0.7815;0.8333;0.85;0.8333;0.8357;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
SVC;0.599;0.6117;0.599;0.597;0.8696;0.87;0.8696;0.8695;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
LogisticRegression;0.8099;0.8173;0.8099;0.811;0.7826;0.7968;0.7826;0.7854;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
SVC;0.6071;0.6103;0.6071;0.6047;0.8551;0.858;0.8551;0.8547;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
SVC;0.6104;0.6413;0.6104;0.6084;0.7391;0.7494;0.7391;0.7424;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
SVC;0.6021;0.6232;0.6021;0.6021;0.8841;0.8941;0.8841;0.8857;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
SVC;0.586;0.6054;0.586;0.5861;0.8551;0.8636;0.8551;0.8508;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
SVC;0.6009;0.6823;0.6009;0.5864;0.8116;0.8206;0.8116;0.8141;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
LogisticRegression;0.8083;0.8191;0.8083;0.8088;0.8551;0.8746;0.8551;0.858;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
SVC;0.5975;0.6124;0.5975;0.5921;0.8696;0.8726;0.8696;0.8708;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
SVC;0.5989;0.6213;0.5989;0.5987;0.8406;0.8411;0.8406;0.8398;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
SVC;0.6055;0.6219;0.6055;0.6036;0.8696;0.8973;0.8696;0.8712;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
SVC;0.596;0.6697;0.596;0.5863;0.8261;0.8287;0.8261;0.8264;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
SVC;0.6087;0.6819;0.6087;0.5966;0.7681;0.7654;0.7681;0.7659;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
SVC;0.5974;0.6127;0.5974;0.5973;0.8406;0.8442;0.8406;0.8421;0.8333;0.8434;0.8333;0.8352;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
DecisionTreeClassifier;0.8308;0.8374;0.8308;0.8322;0.8261;0.8405;0.8261;0.8287;0.8333;0.8386;0.8333;0.8348;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=655)
DecisionTreeClassifier;0.8293;0.8403;0.8293;0.8306;0.942;0.9448;0.942;0.9426;0.8333;0.8386;0.8333;0.8348;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
DecisionTreeClassifier;0.8422;0.8548;0.8422;0.8439;0.8261;0.8387;0.8261;0.8259;0.8333;0.8386;0.8333;0.8348;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=440)
DecisionTreeClassifier;0.8453;0.8503;0.8453;0.8453;0.7681;0.8037;0.7681;0.774;0.8333;0.8399;0.8333;0.8344;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=440)
RandomForestClassifier;0.8631;0.8704;0.8631;0.864;0.7681;0.8;0.7681;0.7724;0.8333;0.8426;0.8333;0.8341;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
MLPClassifier;0.8261;0.8394;0.8261;0.8272;0.7971;0.8326;0.7971;0.7931;0.8333;0.8348;0.8333;0.8337;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
DecisionTreeClassifier;0.8308;0.843;0.8308;0.832;0.8986;0.8972;0.8986;0.8976;0.8333;0.8475;0.8333;0.8336;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=440)
DecisionTreeClassifier;0.847;0.854;0.847;0.8467;0.7826;0.7889;0.7826;0.7838;0.8333;0.8475;0.8333;0.8336;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=608)
DecisionTreeClassifier;0.8406;0.8489;0.8406;0.8411;0.8406;0.8441;0.8406;0.8368;0.8333;0.8403;0.8333;0.8327;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 10, 'random_state': 655};DecisionTreeClassifier(max_depth=5, min_samples_leaf=10, random_state=655)
KNeighborsClassifier;0.7568;0.7754;0.7568;0.7572;0.8406;0.8433;0.8406;0.8411;0.8333;0.8333;0.8333;0.8323;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8566;0.8601;0.8566;0.8567;0.8116;0.8107;0.8116;0.8109;0.8333;0.8432;0.8333;0.8313;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 369};RandomForestClassifier(n_estimators=10, random_state=369)
RandomForestClassifier;0.8422;0.8495;0.8422;0.8427;0.8841;0.8902;0.8841;0.8846;0.8333;0.8432;0.8333;0.8313;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 295};RandomForestClassifier(n_estimators=5, random_state=295)
RandomForestClassifier;0.8678;0.8742;0.8678;0.8684;0.8406;0.8434;0.8406;0.841;0.8333;0.8432;0.8333;0.8313;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 278};RandomForestClassifier(n_estimators=10, random_state=278)
RandomForestClassifier;0.8631;0.8688;0.8631;0.8642;0.8261;0.8247;0.8261;0.8251;0.8333;0.8432;0.8333;0.8313;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 295};RandomForestClassifier(n_estimators=10, random_state=295)
RandomForestClassifier;0.8599;0.8659;0.8599;0.8596;0.8986;0.9003;0.8986;0.8991;0.8333;0.8432;0.8333;0.8313;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 295};RandomForestClassifier(n_estimators=20, random_state=295)
RandomForestClassifier;0.8406;0.8514;0.8406;0.841;0.8261;0.8261;0.8261;0.8261;0.8333;0.8432;0.8333;0.8313;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 278};RandomForestClassifier(n_estimators=5, random_state=278)
DecisionTreeClassifier;0.8357;0.8434;0.8357;0.8372;0.8261;0.8267;0.8261;0.8244;0.8333;0.8383;0.8333;0.831;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=655)
DecisionTreeClassifier;0.8261;0.8414;0.8261;0.8275;0.8406;0.8516;0.8406;0.833;0.8333;0.8486;0.8333;0.8291;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=655)
DecisionTreeClassifier;0.8535;0.8614;0.8535;0.8545;0.8406;0.8442;0.8406;0.8417;0.8167;0.8337;0.8167;0.82;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
SVC;0.6183;0.642;0.6183;0.6191;0.8696;0.8722;0.8696;0.8689;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
LogisticRegression;0.8098;0.8182;0.8098;0.8115;0.8696;0.8796;0.8696;0.868;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
SVC;0.5974;0.659;0.5974;0.5923;0.8116;0.8257;0.8116;0.8144;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
SVC;0.5957;0.6386;0.5957;0.5923;0.7536;0.7862;0.7536;0.7556;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
SVC;0.5958;0.6292;0.5958;0.5971;0.7826;0.8116;0.7826;0.7881;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 598};SVC(C=1, kernel='linear', random_state=598)
SVC;0.5877;0.6506;0.5877;0.5731;0.7971;0.8095;0.7971;0.8006;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
SVC;0.6072;0.6276;0.6072;0.6079;0.8696;0.8727;0.8696;0.8704;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
SVC;0.5943;0.6285;0.5943;0.5895;0.913;0.9189;0.913;0.9138;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
SVC;0.6103;0.653;0.6103;0.6073;0.9275;0.9286;0.9275;0.9271;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
LogisticRegression;0.8116;0.826;0.8116;0.8129;0.7681;0.7653;0.7681;0.7637;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
LogisticRegression;0.8116;0.8199;0.8116;0.8125;0.8696;0.8754;0.8696;0.8713;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
LogisticRegression;0.81;0.8227;0.81;0.811;0.8406;0.8392;0.8406;0.8396;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
SVC;0.5972;0.6189;0.5972;0.593;0.8116;0.8339;0.8116;0.8133;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
LogisticRegression;0.8181;0.8294;0.8181;0.8191;0.7826;0.7855;0.7826;0.7838;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
SVC;0.5957;0.6191;0.5957;0.5935;0.7536;0.7781;0.7536;0.7537;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
SVC;0.6085;0.6331;0.6085;0.6065;0.7826;0.7906;0.7826;0.7847;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
SVC;0.5862;0.6475;0.5862;0.5776;0.7536;0.7565;0.7536;0.7548;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 598};SVC(C=0.1, kernel='linear', random_state=598)
LogisticRegression;0.8068;0.8195;0.8068;0.8076;0.8841;0.8839;0.8841;0.8837;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.8229;0.8407;0.8229;0.824;0.7391;0.747;0.7391;0.7356;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
SVC;0.607;0.6519;0.607;0.6032;0.7971;0.7937;0.7971;0.7944;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
LogisticRegression;0.8115;0.8211;0.8115;0.8129;0.8261;0.8271;0.8261;0.8263;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
SVC;0.612;0.6667;0.612;0.6105;0.7391;0.7606;0.7391;0.745;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
SVC;0.5926;0.6743;0.5926;0.5844;0.8261;0.8444;0.8261;0.8277;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
SVC;0.5796;0.6259;0.5796;0.5746;0.7971;0.8051;0.7971;0.7994;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
LogisticRegression;0.8148;0.8278;0.8148;0.8163;0.8406;0.8422;0.8406;0.8395;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
SVC;0.6006;0.6179;0.6006;0.5992;0.913;0.9184;0.913;0.9138;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 21};SVC(C=0.1, kernel='linear', random_state=21)
SVC;0.5892;0.6315;0.5892;0.5847;0.8986;0.9065;0.8986;0.8994;0.8167;0.8305;0.8167;0.8194;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 478};SVC(C=0.1, kernel='linear', random_state=478)
MLPClassifier;0.8259;0.8401;0.8259;0.8271;0.8116;0.8371;0.8116;0.816;0.8167;0.8373;0.8167;0.8191;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
MLPClassifier;0.7939;0.8085;0.7939;0.7946;0.8406;0.8783;0.8406;0.8451;0.8167;0.84;0.8167;0.819;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8084;0.8206;0.8084;0.8098;0.8261;0.8647;0.8261;0.8236;0.8167;0.8268;0.8167;0.8185;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
MLPClassifier;0.818;0.8372;0.818;0.8181;0.8406;0.8613;0.8406;0.844;0.8167;0.8253;0.8167;0.8183;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
DecisionTreeClassifier;0.8455;0.854;0.8455;0.847;0.7971;0.8072;0.7971;0.8002;0.8167;0.8224;0.8167;0.8181;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
DecisionTreeClassifier;0.8212;0.8313;0.8212;0.8229;0.8841;0.8829;0.8841;0.8827;0.8167;0.8224;0.8167;0.8181;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=440)
MLPClassifier;0.8179;0.8299;0.8179;0.8183;0.8261;0.8361;0.8261;0.828;0.8167;0.8221;0.8167;0.818;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
DecisionTreeClassifier;0.834;0.8425;0.834;0.8345;0.7971;0.8341;0.7971;0.803;0.8167;0.8214;0.8167;0.8169;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=655)
MLPClassifier;0.8117;0.8288;0.8117;0.8115;0.8116;0.824;0.8116;0.8121;0.8167;0.8167;0.8167;0.8167;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
DecisionTreeClassifier;0.8518;0.8586;0.8518;0.8511;0.8261;0.825;0.8261;0.8245;0.8167;0.8241;0.8167;0.8166;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=440)
MLPClassifier;0.7938;0.8089;0.7938;0.7944;0.8841;0.8941;0.8841;0.8857;0.8167;0.8164;0.8167;0.8162;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
KNeighborsClassifier;0.7809;0.7864;0.7809;0.7788;0.8261;0.8318;0.8261;0.8258;0.8167;0.8163;0.8167;0.8162;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7617;0.7698;0.7617;0.7629;0.8986;0.9003;0.8986;0.8991;0.8167;0.8175;0.8167;0.816;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.781;0.7922;0.781;0.782;0.7681;0.7909;0.7681;0.7733;0.8167;0.8175;0.8167;0.816;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7666;0.7773;0.7666;0.7659;0.7971;0.8069;0.7971;0.7976;0.8167;0.8155;0.8167;0.8158;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8421;0.8545;0.8421;0.8428;0.8841;0.8889;0.8841;0.8844;0.8167;0.8209;0.8167;0.8158;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=440)
DecisionTreeClassifier;0.8406;0.8507;0.8406;0.842;0.7971;0.7971;0.7971;0.7971;0.8167;0.8209;0.8167;0.8158;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 440};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=440)
KNeighborsClassifier;0.7683;0.7799;0.7683;0.7681;0.7681;0.7681;0.7681;0.7681;0.8167;0.8155;0.8167;0.8158;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.8615;0.8703;0.8615;0.8621;0.8406;0.8489;0.8406;0.843;0.8167;0.8228;0.8167;0.8156;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 295};RandomForestClassifier(n_estimators=20, random_state=295)
RandomForestClassifier;0.8536;0.8572;0.8536;0.854;0.8406;0.8482;0.8406;0.8427;0.8167;0.8228;0.8167;0.8156;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 369};RandomForestClassifier(n_estimators=5, random_state=369)
KNeighborsClassifier;0.7745;0.791;0.7745;0.7755;0.7101;0.722;0.7101;0.714;0.8167;0.8172;0.8167;0.8155;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7729;0.7809;0.7729;0.7739;0.7391;0.7361;0.7391;0.7369;0.8167;0.8178;0.8167;0.8148;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7762;0.7909;0.7762;0.7754;0.7391;0.7319;0.7391;0.7327;0.8167;0.8171;0.8167;0.8144;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7713;0.7795;0.7713;0.7722;0.7536;0.7961;0.7536;0.7594;0.8167;0.8171;0.8167;0.8144;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7696;0.7786;0.7696;0.7692;0.8841;0.8871;0.8841;0.8845;0.8167;0.8171;0.8167;0.8144;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7731;0.7825;0.7731;0.7727;0.7681;0.7744;0.7681;0.7703;0.8167;0.8171;0.8167;0.8144;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7793;0.7929;0.7793;0.7782;0.8261;0.8591;0.8261;0.831;0.8167;0.8171;0.8167;0.8144;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8324;0.8407;0.8324;0.833;0.8551;0.8555;0.8551;0.8517;0.8167;0.8289;0.8167;0.8143;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=608)
MLPClassifier;0.8019;0.8209;0.8019;0.8021;0.8261;0.8287;0.8261;0.8218;0.8167;0.8246;0.8167;0.813;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
RandomForestClassifier;0.8503;0.8597;0.8503;0.8505;0.7681;0.7659;0.7681;0.7668;0.8167;0.8379;0.8167;0.8094;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 369};RandomForestClassifier(n_estimators=5, random_state=369)
LogisticRegression;0.8116;0.8188;0.8116;0.8127;0.8551;0.8746;0.8551;0.858;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
LogisticRegression;0.8165;0.8239;0.8165;0.8172;0.8116;0.8388;0.8116;0.814;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression;0.8148;0.8238;0.8148;0.8162;0.8261;0.8309;0.8261;0.8278;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression;0.8308;0.8398;0.8308;0.8311;0.7246;0.7522;0.7246;0.7274;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.8067;0.8154;0.8067;0.8073;0.8841;0.8841;0.8841;0.8841;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression;0.8212;0.8295;0.8212;0.8218;0.8261;0.8335;0.8261;0.8264;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
LogisticRegression;0.8244;0.8344;0.8244;0.8257;0.7826;0.7891;0.7826;0.7849;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression;0.8133;0.8268;0.8133;0.8142;0.8116;0.8158;0.8116;0.8126;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression;0.8198;0.8305;0.8198;0.8206;0.8116;0.8183;0.8116;0.8139;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
LogisticRegression;0.8244;0.8334;0.8244;0.8258;0.8116;0.824;0.8116;0.8146;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression;0.8115;0.8206;0.8115;0.8121;0.8406;0.8593;0.8406;0.8445;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 975, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=975)"
LogisticRegression;0.8101;0.8196;0.8101;0.811;0.8551;0.8608;0.8551;0.8527;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.8083;0.8203;0.8083;0.8096;0.8406;0.871;0.8406;0.842;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.8181;0.8239;0.8181;0.8193;0.8116;0.8359;0.8116;0.8158;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 571, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=571)"
LogisticRegression;0.8147;0.8219;0.8147;0.8149;0.8116;0.8374;0.8116;0.8123;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.8294;0.8394;0.8294;0.831;0.6957;0.7032;0.6957;0.6964;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
LogisticRegression;0.8131;0.8257;0.8131;0.814;0.8551;0.873;0.8551;0.8573;0.8;0.8182;0.8;0.8033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 399, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=399)"
MLPClassifier;0.8228;0.843;0.8228;0.8238;0.8116;0.8238;0.8116;0.8132;0.8;0.8153;0.8;0.802;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
MLPClassifier;0.8131;0.8219;0.8131;0.8134;0.7681;0.7813;0.7681;0.767;0.8;0.8021;0.8;0.8007;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
MLPClassifier;0.8164;0.8373;0.8164;0.8179;0.8116;0.8265;0.8116;0.8109;0.8;0.8021;0.8;0.8007;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
MLPClassifier;0.8244;0.836;0.8244;0.8252;0.8406;0.8569;0.8406;0.8434;0.8;0.8039;0.8;0.8005;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
MLPClassifier;0.8148;0.8334;0.8148;0.8158;0.8551;0.8636;0.8551;0.8562;0.8;0.8039;0.8;0.8005;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
KNeighborsClassifier;0.7728;0.7804;0.7728;0.7708;0.7826;0.8162;0.7826;0.7858;0.8;0.8005;0.8;0.7989;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7874;0.7956;0.7874;0.7885;0.7101;0.7264;0.7101;0.7139;0.8;0.7987;0.8;0.798;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7713;0.7819;0.7713;0.7695;0.8406;0.868;0.8406;0.8426;0.8;0.7987;0.8;0.798;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7906;0.8013;0.7906;0.7908;0.7681;0.7826;0.7681;0.7724;0.8;0.7987;0.8;0.798;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8406;0.8498;0.8406;0.8413;0.8551;0.8567;0.8551;0.8524;0.8;0.8029;0.8;0.797;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=655)
KNeighborsClassifier;0.7923;0.809;0.7923;0.7921;0.7391;0.7389;0.7391;0.7387;0.8;0.8042;0.8;0.7968;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7553;0.7703;0.7553;0.7529;0.7536;0.7722;0.7536;0.7589;0.8;0.8011;0.8;0.7963;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7761;0.7848;0.7761;0.7765;0.8116;0.8391;0.8116;0.8123;0.8;0.8015;0.8;0.7962;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8035;0.8108;0.8035;0.8032;0.8551;0.8671;0.8551;0.8567;0.7833;0.8044;0.7833;0.7852;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8085;0.8237;0.8085;0.8072;0.7971;0.8258;0.7971;0.7937;0.7833;0.7904;0.7833;0.7847;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
KNeighborsClassifier;0.7794;0.7859;0.7794;0.7797;0.8406;0.8452;0.8406;0.842;0.7833;0.7855;0.7833;0.7841;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8165;0.8308;0.8165;0.8177;0.8406;0.8495;0.8406;0.8409;0.7833;0.7898;0.7833;0.784;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
KNeighborsClassifier;0.7826;0.7927;0.7826;0.7835;0.8116;0.8196;0.8116;0.8116;0.7833;0.7857;0.7833;0.7835;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7955;0.8121;0.7955;0.7967;0.8841;0.9057;0.8841;0.8818;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 23, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=23)
MLPClassifier;0.8019;0.8189;0.8019;0.8037;0.8986;0.9222;0.8986;0.9002;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
DecisionTreeClassifier;0.8535;0.8652;0.8535;0.8548;0.7246;0.7299;0.7246;0.7226;0.7833;0.7854;0.7833;0.7822;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 608};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=608)
MLPClassifier;0.826;0.8432;0.826;0.8278;0.7971;0.8091;0.7971;0.7996;0.7833;0.7843;0.7833;0.7815;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
KNeighborsClassifier;0.781;0.7933;0.781;0.7824;0.7971;0.7947;0.7971;0.7921;0.7833;0.783;0.7833;0.7809;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7665;0.7771;0.7665;0.7662;0.8116;0.809;0.8116;0.8053;0.7833;0.7823;0.7833;0.7805;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7569;0.768;0.7569;0.7546;0.8551;0.8881;0.8551;0.8562;0.7833;0.7824;0.7833;0.78;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8116;0.8267;0.8116;0.8127;0.7826;0.8114;0.7826;0.7861;0.7667;0.779;0.7667;0.7673;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8083;0.817;0.8083;0.8093;0.8116;0.819;0.8116;0.8129;0.7667;0.765;0.7667;0.7646;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
KNeighborsClassifier;0.7825;0.7897;0.7825;0.7822;0.7971;0.8102;0.7971;0.7976;0.7667;0.7664;0.7667;0.7642;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7827;0.7898;0.7827;0.7828;0.7246;0.7459;0.7246;0.7285;0.7667;0.7648;0.7667;0.7615;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7666;0.783;0.7666;0.7675;0.8696;0.8719;0.8696;0.8705;0.75;0.7513;0.75;0.7478;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8148;0.8271;0.8148;0.8156;0.7246;0.7753;0.7246;0.7194;0.75;0.7493;0.75;0.7476;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
KNeighborsClassifier;0.7407;0.7478;0.7407;0.738;0.8551;0.855;0.8551;0.8531;0.75;0.75;0.75;0.7449;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8196;0.8385;0.8196;0.8213;0.7536;0.774;0.7536;0.7532;0.75;0.7559;0.75;0.7439;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
MLPClassifier;0.8229;0.8352;0.8229;0.824;0.7681;0.7886;0.7681;0.7726;0.75;0.757;0.75;0.7393;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
MLPClassifier;0.8134;0.83;0.8134;0.8111;0.7246;0.7318;0.7246;0.6954;0.7333;0.751;0.7333;0.7232;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8182;0.8451;0.8182;0.8193;0.7246;0.7556;0.7246;0.7256;0.7167;0.7143;0.7167;0.7093;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 305, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=305)
MLPClassifier;0.7987;0.816;0.7987;0.8007;0.7826;0.8009;0.7826;0.7859;0.7167;0.7297;0.7167;0.7051;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8133;0.8295;0.8133;0.8148;0.7971;0.7946;0.7971;0.7879;0.6833;0.7134;0.6833;0.6546;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
