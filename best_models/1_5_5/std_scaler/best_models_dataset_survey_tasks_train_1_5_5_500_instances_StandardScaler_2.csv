Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8387;0.847;0.8387;0.8374;0.8819;0.8858;0.8819;0.8822;0.85;0.8518;0.85;0.8483;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
KNeighborsClassifier;0.8534;0.8571;0.8534;0.8532;0.8264;0.8274;0.8264;0.8267;0.8333;0.8348;0.8333;0.8337;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8487;0.8561;0.8487;0.8485;0.8403;0.8416;0.8403;0.8401;0.8333;0.8424;0.8333;0.8336;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8426;0.8455;0.8426;0.8422;0.8542;0.8569;0.8542;0.8533;0.8333;0.8428;0.8333;0.8333;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.841;0.8444;0.841;0.841;0.8681;0.8709;0.8681;0.8678;0.8333;0.8374;0.8333;0.8328;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8418;0.8476;0.8418;0.8407;0.8472;0.8538;0.8472;0.8482;0.8333;0.8387;0.8333;0.8317;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
MLPClassifier;0.8449;0.8524;0.8449;0.844;0.8542;0.8703;0.8542;0.8559;0.8333;0.8387;0.8333;0.8317;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
KNeighborsClassifier;0.841;0.8491;0.841;0.8409;0.9028;0.9053;0.9028;0.903;0.8333;0.844;0.8333;0.8311;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8581;0.8651;0.8581;0.8576;0.7778;0.7778;0.7778;0.7778;0.8333;0.844;0.8333;0.8311;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8426;0.8539;0.8426;0.8418;0.9028;0.9039;0.9028;0.9031;0.8333;0.8448;0.8333;0.831;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
KNeighborsClassifier;0.8449;0.8523;0.8449;0.8445;0.8819;0.8827;0.8819;0.8821;0.8333;0.8371;0.8333;0.8307;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8642;0.8678;0.8642;0.8639;0.8958;0.8962;0.8958;0.8956;0.8333;0.8461;0.8333;0.8285;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 458};RandomForestClassifier(n_estimators=10, random_state=458)
SVC;0.811;0.8339;0.811;0.8098;0.8611;0.8631;0.8611;0.8604;0.8167;0.8167;0.8167;0.8167;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8126;0.8357;0.8126;0.8118;0.8542;0.8636;0.8542;0.8538;0.8167;0.8167;0.8167;0.8167;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
KNeighborsClassifier;0.8511;0.8547;0.8511;0.8504;0.8264;0.8285;0.8264;0.8253;0.8167;0.8299;0.8167;0.8165;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.8125;0.8372;0.8125;0.8109;0.7847;0.7862;0.7847;0.7828;0.8167;0.8215;0.8167;0.8165;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
KNeighborsClassifier;0.8479;0.8522;0.8479;0.8474;0.8333;0.8372;0.8333;0.8328;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8441;0.8474;0.8441;0.8439;0.8819;0.8825;0.8819;0.8822;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8457;0.8491;0.8457;0.8454;0.9028;0.9072;0.9028;0.9029;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8418;0.8442;0.8418;0.8414;0.8681;0.8697;0.8681;0.8679;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.848;0.8533;0.848;0.8471;0.8264;0.8281;0.8264;0.8269;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8503;0.8539;0.8503;0.8492;0.8542;0.8546;0.8542;0.8543;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8488;0.8518;0.8488;0.8479;0.9028;0.9028;0.9028;0.9028;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8558;0.8588;0.8558;0.8557;0.8194;0.8197;0.8194;0.8181;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8581;0.864;0.8581;0.8581;0.8333;0.8422;0.8333;0.8326;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8396;0.8436;0.8396;0.8391;0.8819;0.8819;0.8819;0.8819;0.8167;0.8238;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8449;0.8518;0.8449;0.8441;0.875;0.8773;0.875;0.8748;0.8167;0.821;0.8167;0.814;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
MLPClassifier;0.8472;0.8512;0.8472;0.8467;0.8542;0.8545;0.8542;0.8539;0.8167;0.821;0.8167;0.814;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
MLPClassifier;0.848;0.854;0.848;0.8474;0.8819;0.8821;0.8819;0.8818;0.8167;0.821;0.8167;0.814;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8395;0.848;0.8395;0.8389;0.8889;0.8894;0.8889;0.8889;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
MLPClassifier;0.8465;0.8568;0.8465;0.8453;0.8819;0.882;0.8819;0.8815;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
MLPClassifier;0.8411;0.8477;0.8411;0.8401;0.8333;0.842;0.8333;0.8334;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
MLPClassifier;0.8457;0.8526;0.8457;0.8447;0.8958;0.8975;0.8958;0.8958;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8434;0.8506;0.8434;0.8425;0.8958;0.8975;0.8958;0.894;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
MLPClassifier;0.8418;0.8506;0.8418;0.8408;0.875;0.8801;0.875;0.8749;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8525;0.8605;0.8525;0.8522;0.8611;0.8624;0.8611;0.8613;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8464;0.8524;0.8464;0.8454;0.8264;0.8272;0.8264;0.8264;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8488;0.856;0.8488;0.8475;0.8333;0.8359;0.8333;0.8323;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8372;0.8435;0.8372;0.836;0.9028;0.9032;0.9028;0.9025;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.855;0.8595;0.855;0.8548;0.8542;0.859;0.8542;0.8541;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.841;0.8508;0.841;0.8396;0.8819;0.8823;0.8819;0.8817;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
MLPClassifier;0.8434;0.8497;0.8434;0.8428;0.8889;0.89;0.8889;0.8888;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
MLPClassifier;0.8402;0.8472;0.8402;0.8392;0.8333;0.8359;0.8333;0.8333;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
MLPClassifier;0.845;0.8519;0.845;0.844;0.8889;0.8891;0.8889;0.889;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
MLPClassifier;0.8388;0.8487;0.8388;0.8377;0.8472;0.8571;0.8472;0.8466;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
MLPClassifier;0.8434;0.8501;0.8434;0.8422;0.9028;0.9033;0.9028;0.9028;0.8167;0.8222;0.8167;0.8138;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
KNeighborsClassifier;0.8587;0.863;0.8587;0.8585;0.8611;0.8702;0.8611;0.8626;0.8167;0.8313;0.8167;0.813;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8442;0.8484;0.8442;0.844;0.9375;0.938;0.9375;0.9375;0.8167;0.8313;0.8167;0.813;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.8048;0.829;0.8048;0.8032;0.8611;0.8665;0.8611;0.8593;0.8;0.8102;0.8;0.8014;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
RandomForestClassifier;0.8596;0.8629;0.8596;0.8595;0.8403;0.8408;0.8403;0.8405;0.8;0.8014;0.8;0.7998;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 458};RandomForestClassifier(n_estimators=10, random_state=458)
SVC;0.8109;0.8336;0.8109;0.8098;0.8403;0.8452;0.8403;0.84;0.8;0.802;0.8;0.7997;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8071;0.829;0.8071;0.8054;0.8611;0.8647;0.8611;0.8601;0.8;0.8016;0.8;0.7997;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8087;0.8315;0.8087;0.8076;0.8333;0.8332;0.8333;0.8331;0.8;0.8016;0.8;0.7997;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8094;0.8318;0.8094;0.8082;0.8681;0.8761;0.8681;0.8666;0.8;0.8016;0.8;0.7997;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8124;0.8361;0.8124;0.8111;0.8403;0.8461;0.8403;0.8407;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
SVC;0.8063;0.8291;0.8063;0.8058;0.8611;0.8703;0.8611;0.8595;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
SVC;0.8048;0.8281;0.8048;0.8026;0.875;0.8778;0.875;0.8748;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8117;0.8339;0.8117;0.8109;0.8611;0.8679;0.8611;0.8612;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8125;0.8337;0.8125;0.8107;0.9097;0.9097;0.9097;0.9096;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
SVC;0.8102;0.8326;0.8102;0.809;0.875;0.8774;0.875;0.8752;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8056;0.8291;0.8056;0.8042;0.8264;0.8281;0.8264;0.8248;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8109;0.8354;0.8109;0.8098;0.8819;0.8855;0.8819;0.8815;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8133;0.8358;0.8133;0.8114;0.8681;0.8716;0.8681;0.8679;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8056;0.8299;0.8056;0.8037;0.9236;0.926;0.9236;0.9239;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
KNeighborsClassifier;0.8403;0.8448;0.8403;0.8403;0.8264;0.8291;0.8264;0.8264;0.8;0.8042;0.8;0.7992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8603;0.8631;0.8603;0.8602;0.7778;0.7776;0.7778;0.7776;0.8;0.8042;0.8;0.7992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8535;0.8585;0.8535;0.853;0.8472;0.8476;0.8472;0.8466;0.8;0.8042;0.8;0.7992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8388;0.8426;0.8388;0.8383;0.9097;0.9106;0.9097;0.9093;0.8;0.8068;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8441;0.8496;0.8441;0.8433;0.8681;0.8715;0.8681;0.8679;0.8;0.802;0.8;0.798;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
MLPClassifier;0.8479;0.8557;0.8479;0.8472;0.8194;0.8222;0.8194;0.8193;0.8;0.802;0.8;0.798;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
RandomForestClassifier;0.8681;0.8709;0.8681;0.868;0.8681;0.8677;0.8681;0.8678;0.8;0.802;0.8;0.798;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 458};RandomForestClassifier(n_estimators=5, random_state=458)
MLPClassifier;0.848;0.8565;0.848;0.8473;0.8125;0.8133;0.8125;0.812;0.8;0.802;0.8;0.798;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
KNeighborsClassifier;0.8441;0.849;0.8441;0.8425;0.8681;0.8685;0.8681;0.868;0.8;0.8107;0.8;0.7979;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8426;0.8502;0.8426;0.842;0.8611;0.8706;0.8611;0.8613;0.8;0.8082;0.8;0.7972;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 360, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=360)
MLPClassifier;0.8504;0.8556;0.8504;0.8499;0.875;0.8806;0.875;0.8755;0.8;0.8082;0.8;0.7972;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 669, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=669)
MLPClassifier;0.8372;0.8464;0.8372;0.8363;0.8889;0.8903;0.8889;0.889;0.8;0.8082;0.8;0.7972;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 53, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=53)
RandomForestClassifier;0.8673;0.8698;0.8673;0.8671;0.8333;0.8389;0.8333;0.8321;0.8;0.8132;0.8;0.7965;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
KNeighborsClassifier;0.8487;0.8513;0.8487;0.8483;0.8611;0.8679;0.8611;0.8619;0.8;0.8067;0.8;0.7962;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8681;0.8707;0.8681;0.868;0.8681;0.8679;0.8681;0.8675;0.8;0.8089;0.8;0.7958;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 458};RandomForestClassifier(n_estimators=20, random_state=458)
SVC;0.8133;0.8369;0.8133;0.8105;0.7708;0.777;0.7708;0.7687;0.7833;0.7934;0.7833;0.7843;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8095;0.8322;0.8095;0.8082;0.8819;0.8879;0.8819;0.882;0.7833;0.7934;0.7833;0.7843;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
SVC;0.8156;0.8369;0.8156;0.8146;0.8333;0.8443;0.8333;0.8333;0.7833;0.7934;0.7833;0.7843;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8079;0.8313;0.8079;0.8057;0.8819;0.8861;0.8819;0.8811;0.7833;0.7934;0.7833;0.7843;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8079;0.8309;0.8079;0.8062;0.8542;0.857;0.8542;0.8537;0.7833;0.7934;0.7833;0.7843;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.8063;0.8307;0.8063;0.8041;0.8542;0.8536;0.8542;0.8526;0.7833;0.7917;0.7833;0.7839;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
SVC;0.8094;0.8331;0.8094;0.8082;0.8472;0.8557;0.8472;0.848;0.7833;0.7917;0.7833;0.7839;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
SVC;0.8133;0.8358;0.8133;0.8123;0.8194;0.8262;0.8194;0.8198;0.7833;0.7833;0.7833;0.7833;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, random_state=44)
SVC;0.811;0.8338;0.811;0.8103;0.8403;0.8479;0.8403;0.839;0.7833;0.7833;0.7833;0.7833;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
SVC;0.8125;0.8374;0.8125;0.8117;0.8472;0.8467;0.8472;0.8457;0.7833;0.7833;0.7833;0.7833;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.807;0.8293;0.807;0.8053;0.8472;0.8515;0.8472;0.8461;0.7833;0.7873;0.7833;0.7831;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.8094;0.833;0.8094;0.8078;0.8681;0.8692;0.8681;0.8676;0.7833;0.7839;0.7833;0.7827;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 849};SVC(C=10, random_state=849)
KNeighborsClassifier;0.8388;0.8433;0.8388;0.8377;0.8542;0.8536;0.8542;0.8537;0.7833;0.7863;0.7833;0.7827;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8434;0.8506;0.8434;0.8434;0.8611;0.8621;0.8611;0.861;0.7833;0.7863;0.7833;0.7827;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8411;0.8493;0.8411;0.8407;0.8333;0.8337;0.8333;0.8333;0.7833;0.7934;0.7833;0.7826;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8534;0.8557;0.8534;0.8533;0.9028;0.9067;0.9028;0.9025;0.7833;0.7861;0.7833;0.7823;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8557;0.8571;0.8557;0.8553;0.875;0.875;0.875;0.875;0.7833;0.7917;0.7833;0.782;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
KNeighborsClassifier;0.8434;0.85;0.8434;0.8432;0.8889;0.8892;0.8889;0.8878;0.7833;0.7935;0.7833;0.7814;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8518;0.855;0.8518;0.8508;0.9028;0.9062;0.9028;0.9031;0.7833;0.7929;0.7833;0.7805;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
RandomForestClassifier;0.8719;0.8753;0.8719;0.8718;0.8819;0.8872;0.8819;0.8817;0.7833;0.7857;0.7833;0.78;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 872};RandomForestClassifier(n_estimators=10, random_state=872)
RandomForestClassifier;0.8618;0.8637;0.8618;0.8619;0.8542;0.8566;0.8542;0.8537;0.7833;0.7956;0.7833;0.7794;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 56};RandomForestClassifier(n_estimators=10, random_state=56)
RandomForestClassifier;0.8658;0.8693;0.8658;0.8659;0.8958;0.8965;0.8958;0.8953;0.7833;0.8041;0.7833;0.7787;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 872};RandomForestClassifier(n_estimators=20, random_state=872)
RandomForestClassifier;0.8603;0.8631;0.8603;0.86;0.8611;0.8643;0.8611;0.8621;0.7833;0.8041;0.7833;0.7787;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 872};RandomForestClassifier(n_estimators=10, random_state=872)
RandomForestClassifier;0.8565;0.8584;0.8565;0.8563;0.9097;0.9104;0.9097;0.9098;0.7833;0.8041;0.7833;0.7787;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 872};RandomForestClassifier(n_estimators=20, random_state=872)
RandomForestClassifier;0.8611;0.8652;0.8611;0.8613;0.8819;0.8842;0.8819;0.8818;0.7833;0.793;0.7833;0.7769;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 458};RandomForestClassifier(n_estimators=10, random_state=458)
RandomForestClassifier;0.8642;0.8672;0.8642;0.8644;0.8958;0.8966;0.8958;0.896;0.7833;0.793;0.7833;0.7769;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 458};RandomForestClassifier(n_estimators=10, random_state=458)
DecisionTreeClassifier;0.8457;0.8511;0.8457;0.8456;0.9236;0.9237;0.9236;0.9236;0.7667;0.7738;0.7667;0.7662;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
DecisionTreeClassifier;0.8688;0.8705;0.8688;0.8689;0.8264;0.8373;0.8264;0.8259;0.7667;0.7738;0.7667;0.7662;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
RandomForestClassifier;0.8618;0.8661;0.8618;0.8618;0.8958;0.8976;0.8958;0.8963;0.7667;0.7822;0.7667;0.7661;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 872};RandomForestClassifier(n_estimators=20, random_state=872)
DecisionTreeClassifier;0.8619;0.8647;0.8619;0.8615;0.8403;0.8424;0.8403;0.8395;0.7667;0.7668;0.7667;0.7655;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=475)
DecisionTreeClassifier;0.8673;0.8697;0.8673;0.8672;0.8542;0.8588;0.8542;0.8525;0.7667;0.7828;0.7667;0.7649;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
RandomForestClassifier;0.8673;0.8711;0.8673;0.8672;0.8403;0.8449;0.8403;0.8394;0.7667;0.7708;0.7667;0.7646;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
DecisionTreeClassifier;0.8457;0.8508;0.8457;0.8453;0.9306;0.9325;0.9306;0.9307;0.7667;0.7712;0.7667;0.7645;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8649;0.8694;0.8649;0.8645;0.8681;0.8703;0.8681;0.8672;0.7667;0.7712;0.7667;0.7645;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
DecisionTreeClassifier;0.8627;0.864;0.8627;0.862;0.8264;0.8309;0.8264;0.8259;0.7667;0.7712;0.7667;0.7645;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8789;0.8804;0.8789;0.8788;0.8125;0.8188;0.8125;0.8107;0.7667;0.7712;0.7667;0.7645;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8657;0.8671;0.8657;0.8656;0.8403;0.8427;0.8403;0.8397;0.7667;0.7712;0.7667;0.7645;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
RandomForestClassifier;0.8526;0.8553;0.8526;0.8527;0.9167;0.9177;0.9167;0.9163;0.7667;0.7789;0.7667;0.7643;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 56};RandomForestClassifier(n_estimators=10, random_state=56)
RandomForestClassifier;0.8549;0.8584;0.8549;0.8543;0.9028;0.9044;0.9028;0.9028;0.7667;0.7789;0.7667;0.7643;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
DecisionTreeClassifier;0.8596;0.8632;0.8596;0.8591;0.8819;0.8827;0.8819;0.8819;0.7667;0.7789;0.7667;0.7643;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8557;0.8592;0.8557;0.8555;0.8958;0.8993;0.8958;0.8951;0.7667;0.7789;0.7667;0.7643;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8596;0.8628;0.8596;0.8592;0.8958;0.8969;0.8958;0.8959;0.7667;0.7789;0.7667;0.7643;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
RandomForestClassifier;0.8688;0.872;0.8688;0.8687;0.8264;0.8316;0.8264;0.8256;0.7667;0.7901;0.7667;0.7631;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 458};RandomForestClassifier(n_estimators=20, random_state=458)
DecisionTreeClassifier;0.8534;0.8562;0.8534;0.8531;0.875;0.878;0.875;0.8746;0.7667;0.7797;0.7667;0.7621;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
RandomForestClassifier;0.8688;0.8723;0.8688;0.8689;0.875;0.8762;0.875;0.8754;0.7667;0.7781;0.7667;0.762;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 872};RandomForestClassifier(n_estimators=20, random_state=872)
RandomForestClassifier;0.8688;0.8711;0.8688;0.8688;0.875;0.8779;0.875;0.8754;0.7667;0.7781;0.7667;0.762;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 872};RandomForestClassifier(n_estimators=20, random_state=872)
RandomForestClassifier;0.8696;0.872;0.8696;0.8697;0.8819;0.8843;0.8819;0.8817;0.7667;0.7781;0.7667;0.762;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 56};RandomForestClassifier(n_estimators=10, random_state=56)
RandomForestClassifier;0.8712;0.8738;0.8712;0.8709;0.8194;0.8195;0.8194;0.818;0.7667;0.7781;0.7667;0.762;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 872};RandomForestClassifier(n_estimators=10, random_state=872)
RandomForestClassifier;0.8665;0.8696;0.8665;0.8664;0.8681;0.873;0.8681;0.8689;0.7667;0.7781;0.7667;0.762;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
RandomForestClassifier;0.8666;0.8709;0.8666;0.8661;0.8194;0.8268;0.8194;0.818;0.7667;0.7781;0.7667;0.762;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
RandomForestClassifier;0.8711;0.8735;0.8711;0.8707;0.8819;0.8816;0.8819;0.8809;0.7667;0.7781;0.7667;0.762;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 56};RandomForestClassifier(n_estimators=20, random_state=56)
RandomForestClassifier;0.8681;0.8713;0.8681;0.8679;0.8264;0.8343;0.8264;0.8252;0.7667;0.7706;0.7667;0.7615;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 458};RandomForestClassifier(n_estimators=20, random_state=458)
RandomForestClassifier;0.8735;0.8772;0.8735;0.8734;0.8472;0.8552;0.8472;0.8468;0.7667;0.7793;0.7667;0.7607;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 458};RandomForestClassifier(n_estimators=10, random_state=458)
RandomForestClassifier;0.8611;0.8633;0.8611;0.861;0.8611;0.8655;0.8611;0.8593;0.7667;0.7793;0.7667;0.7607;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 458};RandomForestClassifier(n_estimators=20, random_state=458)
DecisionTreeClassifier;0.8665;0.8674;0.8665;0.8661;0.8542;0.8555;0.8542;0.8537;0.75;0.7496;0.75;0.7495;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
RandomForestClassifier;0.8765;0.8785;0.8765;0.8766;0.8194;0.8258;0.8194;0.8183;0.75;0.7625;0.75;0.7493;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 872};RandomForestClassifier(n_estimators=20, random_state=872)
DecisionTreeClassifier;0.8572;0.8601;0.8572;0.8568;0.8611;0.8621;0.8611;0.861;0.75;0.7569;0.75;0.7483;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8596;0.8631;0.8596;0.8588;0.8681;0.8736;0.8681;0.8685;0.75;0.7569;0.75;0.7483;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
DecisionTreeClassifier;0.8673;0.8698;0.8673;0.8671;0.8681;0.8744;0.8681;0.8684;0.75;0.7569;0.75;0.7483;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
DecisionTreeClassifier;0.8696;0.872;0.8696;0.8693;0.8264;0.8304;0.8264;0.8244;0.75;0.7569;0.75;0.7483;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8564;0.8597;0.8564;0.856;0.9167;0.9179;0.9167;0.9168;0.75;0.7569;0.75;0.7483;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8603;0.8625;0.8603;0.8599;0.8819;0.8821;0.8819;0.8818;0.75;0.7569;0.75;0.7483;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8688;0.8704;0.8688;0.8686;0.8264;0.8307;0.8264;0.8273;0.75;0.7567;0.75;0.7463;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8503;0.8539;0.8503;0.8501;0.9028;0.9057;0.9028;0.9026;0.75;0.7567;0.75;0.7463;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8557;0.8596;0.8557;0.8555;0.8542;0.8558;0.8542;0.8526;0.75;0.7665;0.75;0.7462;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8596;0.8629;0.8596;0.8593;0.875;0.8759;0.875;0.8746;0.75;0.7665;0.75;0.7462;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.865;0.8679;0.865;0.8647;0.8403;0.8429;0.8403;0.8385;0.75;0.7665;0.75;0.7462;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
RandomForestClassifier;0.8573;0.861;0.8573;0.8572;0.8819;0.8836;0.8819;0.882;0.75;0.7559;0.75;0.7432;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 872};RandomForestClassifier(n_estimators=5, random_state=872)
RandomForestClassifier;0.8633;0.8668;0.8633;0.8631;0.8403;0.8403;0.8403;0.8403;0.7333;0.7634;0.7333;0.7334;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 56};RandomForestClassifier(n_estimators=10, random_state=56)
DecisionTreeClassifier;0.8573;0.8604;0.8573;0.8571;0.8889;0.8895;0.8889;0.889;0.7333;0.7433;0.7333;0.7304;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 861};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=861)
DecisionTreeClassifier;0.8627;0.8653;0.8627;0.8624;0.8403;0.8399;0.8403;0.8388;0.7333;0.7361;0.7333;0.7298;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 475};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=475)
LogisticRegression;0.7068;0.7204;0.7068;0.7046;0.7153;0.734;0.7153;0.7126;0.65;0.6591;0.65;0.6482;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.699;0.7147;0.699;0.6981;0.7361;0.739;0.7361;0.7303;0.6333;0.6375;0.6333;0.631;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7106;0.7218;0.7106;0.7093;0.7222;0.7336;0.7222;0.7217;0.6167;0.6297;0.6167;0.6149;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7107;0.726;0.7107;0.7103;0.7083;0.7191;0.7083;0.7046;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7091;0.7179;0.7091;0.7068;0.7361;0.7506;0.7361;0.7324;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7114;0.7247;0.7114;0.7103;0.7083;0.7201;0.7083;0.699;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7006;0.7111;0.7006;0.6994;0.7153;0.7333;0.7153;0.7173;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7038;0.714;0.7038;0.7011;0.7292;0.7546;0.7292;0.7301;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.7059;0.716;0.7059;0.7033;0.7083;0.7288;0.7083;0.7086;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7114;0.7225;0.7114;0.7097;0.7639;0.7724;0.7639;0.7603;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7106;0.7237;0.7106;0.7086;0.6944;0.6926;0.6944;0.6905;0.6167;0.6221;0.6167;0.614;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.7144;0.728;0.7144;0.7124;0.6458;0.6535;0.6458;0.6396;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7014;0.7151;0.7014;0.6991;0.7847;0.7893;0.7847;0.7831;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7082;0.7186;0.7082;0.7075;0.7222;0.7373;0.7222;0.7184;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.7061;0.7185;0.7061;0.7034;0.7083;0.7343;0.7083;0.7068;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.713;0.7207;0.713;0.7107;0.6528;0.661;0.6528;0.6512;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.7114;0.723;0.7114;0.7104;0.7083;0.7084;0.7083;0.7012;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.6905;0.7012;0.6905;0.6868;0.7569;0.7596;0.7569;0.7571;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7083;0.7195;0.7083;0.7064;0.6875;0.6931;0.6875;0.6884;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.6999;0.7076;0.6999;0.697;0.7431;0.745;0.7431;0.7433;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7067;0.7195;0.7067;0.705;0.7292;0.7337;0.7292;0.7296;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7083;0.7201;0.7083;0.7063;0.6944;0.7253;0.6944;0.6948;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7006;0.7137;0.7006;0.7;0.7222;0.7396;0.7222;0.7202;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.6967;0.706;0.6967;0.6949;0.7639;0.7646;0.7639;0.7633;0.6;0.6069;0.6;0.5992;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.7106;0.7222;0.7106;0.7086;0.6944;0.6963;0.6944;0.6934;0.6;0.6067;0.6;0.5965;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7014;0.7124;0.7014;0.6995;0.7708;0.7944;0.7708;0.7691;0.6;0.6067;0.6;0.5965;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 708, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=708)"
LogisticRegression;0.7068;0.7205;0.7068;0.7053;0.7153;0.7281;0.7153;0.7119;0.6;0.6067;0.6;0.5965;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 820, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=820)"
LogisticRegression;0.7137;0.7239;0.7137;0.7131;0.6875;0.7099;0.6875;0.6888;0.6;0.6067;0.6;0.5965;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.706;0.7189;0.706;0.7037;0.7292;0.7342;0.7292;0.7292;0.5833;0.5913;0.5833;0.5821;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
LogisticRegression;0.6998;0.7124;0.6998;0.6987;0.7639;0.7715;0.7639;0.7609;0.55;0.5618;0.55;0.5524;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 98, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=98)"
