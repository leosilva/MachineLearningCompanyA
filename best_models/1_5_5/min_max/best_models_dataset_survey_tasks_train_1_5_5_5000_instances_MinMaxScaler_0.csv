Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9201;0.9205;0.9201;0.9202;0.9041;0.9043;0.9041;0.9042;0.8833;0.886;0.8833;0.8832;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9178;0.9182;0.9178;0.9179;0.9155;0.9157;0.9155;0.9154;0.8833;0.886;0.8833;0.8832;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
RandomForestClassifier;0.916;0.9164;0.916;0.9161;0.9262;0.9263;0.9262;0.9262;0.8833;0.886;0.8833;0.8832;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9149;0.9152;0.9149;0.915;0.9262;0.9264;0.9262;0.9262;0.8833;0.886;0.8833;0.8832;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
RandomForestClassifier;0.9172;0.9176;0.9172;0.9173;0.9228;0.9234;0.9228;0.9228;0.8833;0.8832;0.8833;0.8829;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
RandomForestClassifier;0.9179;0.9184;0.9179;0.918;0.9154;0.9164;0.9154;0.9156;0.8833;0.8832;0.8833;0.8829;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
RandomForestClassifier;0.9163;0.9166;0.9163;0.9164;0.9148;0.9155;0.9148;0.9148;0.8833;0.8842;0.8833;0.8823;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9205;0.9209;0.9205;0.9205;0.9087;0.9095;0.9087;0.9088;0.8833;0.8836;0.8833;0.8823;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9176;0.918;0.9176;0.9177;0.9195;0.9196;0.9195;0.9195;0.8667;0.8692;0.8667;0.8669;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 124};RandomForestClassifier(n_estimators=10, random_state=124)
RandomForestClassifier;0.9166;0.9169;0.9166;0.9166;0.9107;0.9112;0.9107;0.9109;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9163;0.9168;0.9163;0.9164;0.9268;0.9268;0.9268;0.9268;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9178;0.9183;0.9178;0.9178;0.9188;0.9189;0.9188;0.9188;0.8667;0.8673;0.8667;0.8666;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9173;0.9178;0.9173;0.9174;0.9188;0.9193;0.9188;0.9188;0.8667;0.8673;0.8667;0.8666;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
KNeighborsClassifier;0.9084;0.9094;0.9084;0.9085;0.9161;0.9168;0.9161;0.9161;0.8667;0.869;0.8667;0.8664;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9151;0.9154;0.9151;0.9152;0.9289;0.929;0.9289;0.9289;0.8667;0.869;0.8667;0.8664;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
KNeighborsClassifier;0.9081;0.9092;0.9081;0.9082;0.9168;0.9168;0.9168;0.9168;0.8667;0.869;0.8667;0.8664;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9114;0.9125;0.9114;0.9115;0.9168;0.9184;0.9168;0.917;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9107;0.9115;0.9107;0.9108;0.9087;0.9095;0.9087;0.9088;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9128;0.9139;0.9128;0.9129;0.8966;0.8983;0.8966;0.897;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.9108;0.9119;0.9108;0.9109;0.9182;0.9186;0.9182;0.9182;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9126;0.9137;0.9126;0.9127;0.9107;0.9112;0.9107;0.9108;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9122;0.9131;0.9122;0.9124;0.9141;0.9152;0.9141;0.9143;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9095;0.9106;0.9095;0.9096;0.9174;0.9178;0.9174;0.9175;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9108;0.9117;0.9108;0.9109;0.9135;0.9135;0.9135;0.9134;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9075;0.9086;0.9075;0.9077;0.9168;0.9175;0.9168;0.9169;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9132;0.9139;0.9132;0.9133;0.906;0.9066;0.906;0.9061;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9126;0.9135;0.9126;0.9128;0.9134;0.9146;0.9134;0.9136;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.91;0.9112;0.91;0.9101;0.9195;0.9206;0.9195;0.9197;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.911;0.9119;0.911;0.9111;0.9188;0.9192;0.9188;0.9189;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9106;0.9116;0.9106;0.9107;0.9142;0.9154;0.9142;0.9143;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.911;0.9119;0.911;0.9111;0.9181;0.9192;0.9181;0.9183;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.913;0.9139;0.913;0.9131;0.906;0.9075;0.906;0.906;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9115;0.9123;0.9115;0.9116;0.9142;0.9147;0.9142;0.9143;0.8667;0.8709;0.8667;0.8663;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
RandomForestClassifier;0.9144;0.9148;0.9144;0.9145;0.9282;0.9282;0.9282;0.9282;0.8667;0.8665;0.8667;0.8662;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9168;0.9173;0.9168;0.9169;0.9188;0.919;0.9188;0.9189;0.8667;0.8665;0.8667;0.8662;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
RandomForestClassifier;0.9176;0.9179;0.9176;0.9177;0.9074;0.9078;0.9074;0.9075;0.8667;0.8677;0.8667;0.8661;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9191;0.9195;0.9191;0.9192;0.9229;0.9231;0.9229;0.9229;0.8667;0.8656;0.8667;0.8658;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9172;0.9176;0.9172;0.9173;0.902;0.9028;0.902;0.9021;0.8667;0.8668;0.8667;0.8657;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 848};RandomForestClassifier(n_estimators=10, random_state=848)
RandomForestClassifier;0.9184;0.9188;0.9184;0.9185;0.9181;0.9186;0.9181;0.9182;0.85;0.8505;0.85;0.8499;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9193;0.9196;0.9193;0.9194;0.9174;0.9178;0.9174;0.9175;0.85;0.8505;0.85;0.8499;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9199;0.9203;0.9199;0.92;0.9135;0.9136;0.9135;0.9135;0.85;0.8519;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9173;0.9176;0.9173;0.9174;0.9094;0.9101;0.9094;0.9095;0.85;0.8497;0.85;0.8495;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
RandomForestClassifier;0.9167;0.917;0.9167;0.9168;0.9248;0.9251;0.9248;0.9249;0.85;0.8497;0.85;0.8495;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
RandomForestClassifier;0.917;0.9174;0.917;0.9171;0.9135;0.914;0.9135;0.9135;0.85;0.8497;0.85;0.8495;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9191;0.9194;0.9191;0.9192;0.9128;0.9128;0.9128;0.9128;0.85;0.8508;0.85;0.849;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 120};RandomForestClassifier(n_estimators=20, random_state=120)
RandomForestClassifier;0.9149;0.9153;0.9149;0.915;0.9302;0.9303;0.9302;0.9302;0.85;0.8524;0.85;0.8488;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 848};RandomForestClassifier(n_estimators=20, random_state=848)
KNeighborsClassifier;0.9113;0.9125;0.9113;0.9115;0.9081;0.9092;0.9081;0.9081;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9094;0.9105;0.9094;0.9096;0.9074;0.9077;0.9074;0.9075;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9105;0.9116;0.9105;0.9107;0.9095;0.9102;0.9095;0.9095;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9122;0.9132;0.9122;0.9123;0.9128;0.913;0.9128;0.9128;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9089;0.9099;0.9089;0.909;0.9107;0.9116;0.9107;0.9108;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9099;0.9109;0.9099;0.9101;0.9161;0.9167;0.9161;0.9161;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9195;0.92;0.9195;0.9196;0.9013;0.9014;0.9013;0.9014;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
KNeighborsClassifier;0.9111;0.9123;0.9111;0.9113;0.9067;0.9068;0.9067;0.9068;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.912;0.9129;0.912;0.9122;0.9134;0.9135;0.9134;0.9135;0.85;0.8526;0.85;0.8487;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9195;0.9198;0.9195;0.9195;0.9128;0.9128;0.9128;0.9128;0.85;0.8514;0.85;0.8483;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
KNeighborsClassifier;0.9104;0.9114;0.9104;0.9105;0.9282;0.9283;0.9282;0.9282;0.85;0.8514;0.85;0.8483;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8978;0.8981;0.8978;0.8978;0.8705;0.8721;0.8705;0.871;0.8333;0.8348;0.8333;0.8337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
KNeighborsClassifier;0.9086;0.9096;0.9086;0.9087;0.9215;0.9226;0.9215;0.9217;0.8333;0.8367;0.8333;0.8324;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.916;0.9164;0.916;0.916;0.9242;0.9249;0.9242;0.9243;0.8333;0.8333;0.8333;0.8323;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 124};RandomForestClassifier(n_estimators=20, random_state=124)
KNeighborsClassifier;0.9105;0.9115;0.9105;0.9107;0.902;0.9027;0.902;0.9021;0.8333;0.8338;0.8333;0.8322;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.899;0.8995;0.899;0.899;0.8691;0.8719;0.8691;0.8697;0.8167;0.8285;0.8167;0.8184;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.9025;0.9028;0.9025;0.9025;0.8786;0.8804;0.8786;0.879;0.8167;0.8285;0.8167;0.8184;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.9024;0.9027;0.9024;0.9025;0.8483;0.8536;0.8483;0.8492;0.8167;0.8285;0.8167;0.8184;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.8979;0.8981;0.8979;0.8979;0.8833;0.8855;0.8833;0.8833;0.8167;0.8285;0.8167;0.8184;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.897;0.8972;0.897;0.897;0.8879;0.8897;0.8879;0.8881;0.8167;0.8285;0.8167;0.8184;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.901;0.9013;0.901;0.901;0.8671;0.8719;0.8671;0.868;0.8167;0.8234;0.8167;0.8178;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.8976;0.8979;0.8976;0.8976;0.8759;0.879;0.8759;0.8764;0.8167;0.8224;0.8167;0.8173;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.8991;0.8994;0.8991;0.8992;0.8705;0.874;0.8705;0.871;0.8167;0.8224;0.8167;0.8173;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
MLPClassifier;0.8368;0.8398;0.8368;0.8375;0.8819;0.8824;0.8819;0.882;0.8167;0.8187;0.8167;0.8163;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
MLPClassifier;0.8387;0.8417;0.8387;0.8392;0.8618;0.8658;0.8618;0.8627;0.8167;0.8163;0.8167;0.8162;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
MLPClassifier;0.8334;0.8369;0.8334;0.834;0.8745;0.8758;0.8745;0.8749;0.8167;0.8172;0.8167;0.8155;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
DecisionTreeClassifier;0.9005;0.9007;0.9005;0.9005;0.8692;0.877;0.8692;0.8697;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.9006;0.9008;0.9006;0.9007;0.8772;0.8812;0.8772;0.8777;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8981;0.8983;0.8981;0.8981;0.8872;0.8905;0.8872;0.8878;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8996;0.8999;0.8996;0.8996;0.8906;0.8935;0.8906;0.8911;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.9007;0.901;0.9007;0.9008;0.8711;0.8742;0.8711;0.872;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.898;0.8983;0.898;0.8981;0.888;0.8892;0.888;0.8882;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8999;0.9001;0.8999;0.8999;0.8618;0.8716;0.8618;0.8628;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
DecisionTreeClassifier;0.8976;0.8979;0.8976;0.8976;0.8692;0.871;0.8692;0.8695;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8967;0.8969;0.8967;0.8967;0.8886;0.8912;0.8886;0.8887;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.9014;0.9016;0.9014;0.9015;0.8638;0.8672;0.8638;0.8645;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8987;0.8989;0.8987;0.8987;0.8711;0.874;0.8711;0.8717;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8963;0.8966;0.8963;0.8963;0.8826;0.8868;0.8826;0.8834;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.898;0.8984;0.898;0.8981;0.8698;0.8731;0.8698;0.8706;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
DecisionTreeClassifier;0.8975;0.898;0.8975;0.8975;0.8819;0.8833;0.8819;0.8821;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.9012;0.9014;0.9012;0.9013;0.8758;0.8773;0.8758;0.8763;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.8974;0.8976;0.8974;0.8975;0.8779;0.8833;0.8779;0.8787;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.8995;0.8998;0.8995;0.8995;0.8813;0.8865;0.8813;0.8821;0.8;0.8102;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
SVC;0.8012;0.8162;0.8012;0.8028;0.8282;0.8412;0.8282;0.8297;0.8;0.813;0.8;0.8006;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
SVC;0.8008;0.8154;0.8008;0.8025;0.8558;0.8605;0.8558;0.8562;0.8;0.813;0.8;0.8006;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.803;0.8182;0.803;0.8045;0.8357;0.8422;0.8357;0.8367;0.8;0.813;0.8;0.8006;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
SVC;0.8034;0.8181;0.8034;0.805;0.8309;0.8416;0.8309;0.8321;0.8;0.813;0.8;0.8006;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.8018;0.8176;0.8018;0.8034;0.8369;0.8425;0.8369;0.8376;0.8;0.813;0.8;0.8006;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.7995;0.8143;0.7995;0.8011;0.8463;0.8549;0.8463;0.8475;0.8;0.813;0.8;0.8006;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
MLPClassifier;0.8348;0.8376;0.8348;0.8354;0.882;0.8854;0.882;0.8823;0.8;0.8013;0.8;0.8003;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8349;0.8372;0.8349;0.8354;0.8471;0.849;0.8471;0.8477;0.8;0.7997;0.8;0.7995;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
DecisionTreeClassifier;0.8991;0.8993;0.8991;0.8992;0.8913;0.8938;0.8913;0.8915;0.7833;0.7934;0.7833;0.7843;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 943};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=943)
SVC;0.8;0.8164;0.8;0.8016;0.8282;0.8341;0.8282;0.8294;0.7833;0.8025;0.7833;0.7843;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
DecisionTreeClassifier;0.8978;0.8982;0.8978;0.8978;0.8766;0.8796;0.8766;0.8772;0.7833;0.7934;0.7833;0.7843;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
DecisionTreeClassifier;0.8987;0.899;0.8987;0.8987;0.8919;0.8969;0.8919;0.8926;0.7833;0.7934;0.7833;0.7843;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 341};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=341)
SVC;0.8027;0.8182;0.8027;0.8043;0.8376;0.8419;0.8376;0.8384;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
SVC;0.8023;0.8179;0.8023;0.8039;0.8283;0.8337;0.8283;0.829;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
SVC;0.799;0.8146;0.799;0.8007;0.8416;0.8462;0.8416;0.8424;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.8017;0.8168;0.8017;0.8033;0.8262;0.8348;0.8262;0.8273;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.7994;0.8155;0.7994;0.801;0.8403;0.8443;0.8403;0.8409;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.8003;0.8163;0.8003;0.8019;0.8437;0.8504;0.8437;0.845;0.7833;0.7917;0.7833;0.7839;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
MLPClassifier;0.8348;0.8402;0.8348;0.8355;0.8805;0.885;0.8805;0.881;0.7833;0.7869;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
SVC;0.7998;0.8159;0.7998;0.8014;0.8477;0.8532;0.8477;0.8486;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
SVC;0.801;0.8166;0.801;0.8027;0.8404;0.8444;0.8404;0.8411;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.802;0.8176;0.802;0.8035;0.8431;0.8488;0.8431;0.8441;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.7977;0.8145;0.7977;0.7993;0.8477;0.857;0.8477;0.8486;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.8008;0.816;0.8008;0.8023;0.833;0.8432;0.833;0.8345;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.7996;0.8157;0.7996;0.8012;0.8551;0.8605;0.8551;0.8558;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.803;0.8173;0.803;0.8046;0.8383;0.8423;0.8383;0.8389;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
SVC;0.8008;0.8156;0.8008;0.8023;0.8369;0.847;0.8369;0.8385;0.7833;0.7981;0.7833;0.7838;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
MLPClassifier;0.8382;0.8426;0.8382;0.839;0.8752;0.8788;0.8752;0.8757;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
MLPClassifier;0.8336;0.838;0.8336;0.8342;0.8826;0.8844;0.8826;0.8829;0.7833;0.7838;0.7833;0.7832;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
MLPClassifier;0.8377;0.8406;0.8377;0.8384;0.8705;0.8742;0.8705;0.8704;0.7833;0.7839;0.7833;0.7827;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
DecisionTreeClassifier;0.9009;0.9012;0.9009;0.9009;0.8846;0.8864;0.8846;0.8851;0.7667;0.776;0.7667;0.7683;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 363};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=363)
MLPClassifier;0.8395;0.8417;0.8395;0.8398;0.8591;0.8603;0.8591;0.8595;0.7667;0.7728;0.7667;0.7676;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8399;0.8426;0.8399;0.8404;0.8753;0.8788;0.8753;0.8758;0.7667;0.7728;0.7667;0.7676;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
SVC;0.8006;0.8158;0.8006;0.8022;0.843;0.8482;0.843;0.8439;0.7667;0.7758;0.7667;0.7672;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.8024;0.8166;0.8024;0.804;0.8302;0.8379;0.8302;0.8314;0.7667;0.7758;0.7667;0.7672;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.8053;0.8197;0.8053;0.8068;0.8115;0.8209;0.8115;0.8131;0.7667;0.7758;0.7667;0.7672;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.7994;0.8147;0.7994;0.801;0.8396;0.8464;0.8396;0.8407;0.7667;0.7758;0.7667;0.7672;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.7995;0.8159;0.7995;0.8011;0.8396;0.845;0.8396;0.8408;0.7667;0.7758;0.7667;0.7672;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
SVC;0.8033;0.8179;0.8033;0.8047;0.8356;0.8432;0.8356;0.8369;0.7667;0.7758;0.7667;0.7672;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
SVC;0.8036;0.8199;0.8036;0.805;0.8235;0.8391;0.8235;0.8261;0.7667;0.7875;0.7667;0.7669;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 549};SVC(C=10, random_state=549)
SVC;0.8009;0.8166;0.8009;0.8025;0.843;0.8528;0.843;0.8438;0.7667;0.7875;0.7667;0.7669;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 602};SVC(C=10, random_state=602)
MLPClassifier;0.8365;0.8416;0.8365;0.8371;0.8826;0.8841;0.8826;0.8828;0.7667;0.7687;0.7667;0.7668;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8382;0.8422;0.8382;0.839;0.8658;0.8681;0.8658;0.8662;0.7667;0.7687;0.7667;0.7668;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
MLPClassifier;0.8393;0.8431;0.8393;0.8401;0.89;0.8914;0.89;0.8903;0.7667;0.7687;0.7667;0.7668;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8338;0.8371;0.8338;0.8343;0.8792;0.8819;0.8792;0.8798;0.7667;0.7671;0.7667;0.7666;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
MLPClassifier;0.8344;0.837;0.8344;0.8349;0.8545;0.8621;0.8545;0.8553;0.7667;0.7684;0.7667;0.7662;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
MLPClassifier;0.8319;0.8347;0.8319;0.8325;0.8919;0.894;0.8919;0.8923;0.7667;0.7684;0.7667;0.7662;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 482, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=482)
SVC;0.8006;0.8164;0.8006;0.8021;0.8302;0.8386;0.8302;0.8318;0.75;0.7639;0.75;0.7504;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 863};SVC(C=10, random_state=863)
MLPClassifier;0.837;0.8416;0.837;0.8378;0.8544;0.8558;0.8544;0.8548;0.75;0.7513;0.75;0.7503;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8364;0.8394;0.8364;0.837;0.8584;0.8658;0.8584;0.859;0.75;0.7543;0.75;0.7501;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.837;0.8412;0.837;0.8378;0.8738;0.8771;0.8738;0.8744;0.75;0.7543;0.75;0.7501;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8338;0.837;0.8338;0.8345;0.8805;0.885;0.8805;0.8814;0.7333;0.7423;0.7333;0.734;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8356;0.8384;0.8356;0.8359;0.8678;0.8688;0.8678;0.868;0.7333;0.7365;0.7333;0.7337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8394;0.8433;0.8394;0.8403;0.8638;0.8655;0.8638;0.8641;0.7333;0.7365;0.7333;0.7337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8338;0.8363;0.8338;0.8342;0.8598;0.8625;0.8598;0.8602;0.7333;0.7365;0.7333;0.7337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8344;0.8373;0.8344;0.8349;0.8706;0.8707;0.8706;0.8701;0.7333;0.7365;0.7333;0.7337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8346;0.8387;0.8346;0.8352;0.8786;0.8818;0.8786;0.8793;0.7333;0.7365;0.7333;0.7337;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8393;0.8423;0.8393;0.8399;0.8664;0.8799;0.8664;0.8671;0.7167;0.7223;0.7167;0.7175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 975, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=975)
MLPClassifier;0.8397;0.8424;0.8397;0.84;0.8611;0.8617;0.8611;0.8613;0.7167;0.7223;0.7167;0.7175;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8319;0.8356;0.8319;0.8326;0.8765;0.8786;0.8765;0.8765;0.7167;0.7178;0.7167;0.717;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.8402;0.8425;0.8402;0.8407;0.8705;0.8735;0.8705;0.8711;0.7;0.7047;0.7;0.7012;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
LogisticRegression;0.6841;0.6873;0.6841;0.6834;0.6848;0.6894;0.6848;0.6851;0.6833;0.6881;0.6833;0.6801;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6849;0.6887;0.6849;0.6844;0.6926;0.7088;0.6926;0.6937;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6848;0.6879;0.6848;0.6842;0.6819;0.6931;0.6819;0.6812;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6811;0.6839;0.6811;0.6804;0.6987;0.7086;0.6987;0.6992;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.685;0.6886;0.685;0.6846;0.7007;0.7127;0.7007;0.6988;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.6837;0.6868;0.6837;0.6831;0.7;0.7126;0.7;0.7002;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.6838;0.6874;0.6838;0.6833;0.6913;0.6998;0.6913;0.6912;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.6857;0.689;0.6857;0.6851;0.6799;0.6931;0.6799;0.6796;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.684;0.6876;0.684;0.6834;0.7114;0.7246;0.7114;0.7108;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.6816;0.6849;0.6816;0.681;0.704;0.7107;0.704;0.704;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.6848;0.6879;0.6848;0.6844;0.6781;0.6868;0.6781;0.6773;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.6822;0.6855;0.6822;0.6817;0.6989;0.7093;0.6989;0.698;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.6857;0.6891;0.6857;0.6852;0.6935;0.7055;0.6935;0.6932;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 997, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=997)"
LogisticRegression;0.682;0.6854;0.682;0.6816;0.6946;0.703;0.6946;0.6937;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6848;0.688;0.6848;0.6842;0.6738;0.6849;0.6738;0.6737;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6828;0.6863;0.6828;0.6823;0.7074;0.7187;0.7074;0.7075;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6796;0.6825;0.6796;0.6791;0.715;0.7251;0.715;0.7144;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6857;0.6892;0.6857;0.6851;0.6779;0.6897;0.6779;0.6784;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6837;0.6873;0.6837;0.6832;0.6859;0.6941;0.6859;0.685;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6859;0.6897;0.6859;0.6855;0.6772;0.6931;0.6772;0.6761;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6802;0.6835;0.6802;0.6797;0.7027;0.7157;0.7027;0.7028;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.682;0.6854;0.682;0.6815;0.7181;0.7319;0.7181;0.7174;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6864;0.6902;0.6864;0.6859;0.6975;0.7075;0.6975;0.6966;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6831;0.687;0.6831;0.6827;0.7029;0.7101;0.7029;0.7021;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6813;0.6845;0.6813;0.6807;0.7217;0.7343;0.7217;0.7215;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 448, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=448)"
LogisticRegression;0.6842;0.6876;0.6842;0.6837;0.6868;0.6967;0.6868;0.6867;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6834;0.6865;0.6834;0.6828;0.696;0.7095;0.696;0.6952;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6852;0.6886;0.6852;0.6846;0.6906;0.6973;0.6906;0.6901;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6843;0.6879;0.6843;0.6838;0.6906;0.698;0.6906;0.6904;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
LogisticRegression;0.6829;0.6862;0.6829;0.6825;0.696;0.707;0.696;0.6945;0.6667;0.6689;0.6667;0.6608;smote;5000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 961, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=961)"
