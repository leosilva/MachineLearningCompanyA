Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.9427,0.9452,0.9427,0.9427,0.934,0.9341,0.934,0.9339,0.85,0.8542,0.85,0.8506,0.9896,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 627}","RandomForestClassifier(n_estimators=20, random_state=627)"
RandomForestClassifier,0.9349,0.9374,0.9349,0.9348,0.9375,0.9376,0.9375,0.9375,0.8333,0.8383,0.8333,0.8327,0.982,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 963}","RandomForestClassifier(n_estimators=10, random_state=963)"
DecisionTreeClassifier,0.9115,0.9146,0.9115,0.9114,0.8889,0.8986,0.8889,0.8899,0.8167,0.8172,0.8167,0.8166,0.9692,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 873}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=873)"
KNeighborsClassifier,0.9089,0.9124,0.9089,0.9086,0.8854,0.8907,0.8854,0.8854,0.8,0.8124,0.8,0.7994,0.9655,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
SVC,0.8481,0.8522,0.8481,0.8482,0.8438,0.8459,0.8438,0.844,0.8,0.8079,0.8,0.7992,0.9389,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 388}","SVC(C=10, kernel='linear', probability=True, random_state=388)"
LogisticRegression,0.9001,0.9021,0.9001,0.8998,0.8611,0.8619,0.8611,0.861,0.7833,0.8027,0.7833,0.7875,0.9619,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 945, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=945)"
KNeighborsClassifier,0.9028,0.908,0.9028,0.9027,0.9201,0.9214,0.9201,0.9202,0.7833,0.7948,0.7833,0.7862,0.965,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
RandomForestClassifier,0.9349,0.9367,0.9349,0.9348,0.9549,0.958,0.9549,0.9543,0.7833,0.7912,0.7833,0.7848,0.9878,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 156}","RandomForestClassifier(n_estimators=20, random_state=156)"
MLPClassifier,0.8203,0.8278,0.8203,0.82,0.8611,0.8618,0.8611,0.8611,0.7833,0.7869,0.7833,0.7838,0.9367,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 688, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=688)"
DecisionTreeClassifier,0.8941,0.8974,0.8941,0.8938,0.8889,0.8895,0.8889,0.889,0.7833,0.807,0.7833,0.7824,0.9652,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 152}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=152)"
KNeighborsClassifier,0.908,0.9115,0.908,0.908,0.9028,0.9063,0.9028,0.9033,0.7833,0.7857,0.7833,0.78,0.9641,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
SVC,0.8837,0.8857,0.8837,0.883,0.8958,0.8978,0.8958,0.895,0.7667,0.7841,0.7667,0.77,0.947,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 57}","SVC(C=10, kernel='linear', probability=True, random_state=57)"
LogisticRegression,0.8411,0.8436,0.8411,0.8408,0.8472,0.8474,0.8472,0.8469,0.7667,0.7873,0.7667,0.7693,0.9493,smote,500,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 521, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=521)"
DecisionTreeClassifier,0.9037,0.9073,0.9037,0.9033,0.8993,0.9013,0.8993,0.8995,0.7667,0.7709,0.7667,0.7664,0.9639,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 603}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=603)"
MLPClassifier,0.7864,0.8006,0.7864,0.7812,0.8368,0.8462,0.8368,0.8344,0.75,0.7578,0.75,0.7502,0.935,smote,500,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 298, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=298)"
SVC,0.8593,0.8641,0.8593,0.8595,0.8438,0.8472,0.8438,0.8446,0.7333,0.7659,0.7333,0.7346,0.9411,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 510}","SVC(C=10, kernel='linear', probability=True, random_state=510)"
LogisticRegression,0.868,0.8693,0.868,0.8677,0.8125,0.8125,0.8125,0.8116,0.7167,0.7389,0.7167,0.7198,0.9625,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 852, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=852)"
MLPClassifier,0.8437,0.853,0.8437,0.8446,0.9028,0.9071,0.9028,0.9024,0.7167,0.7187,0.7167,0.711,0.9528,smote,500,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 825, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=825)"
