Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8766;0.878;0.8766;0.8761;0.8881;0.8881;0.8881;0.8877;0.8833;0.8874;0.8833;0.883;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8685;0.8719;0.8685;0.8679;0.8837;0.8846;0.8837;0.8838;0.8833;0.8874;0.8833;0.883;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8683;0.8717;0.8683;0.868;0.8792;0.8811;0.8792;0.8796;0.8833;0.8874;0.8833;0.883;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.877;0.8802;0.877;0.877;0.887;0.8884;0.887;0.8873;0.8667;0.8692;0.8667;0.8669;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8648;0.8665;0.8648;0.8645;0.8982;0.901;0.8982;0.899;0.8667;0.8692;0.8667;0.8669;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8755;0.8781;0.8755;0.8753;0.8826;0.8854;0.8826;0.8832;0.8667;0.8692;0.8667;0.8669;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8742;0.8767;0.8742;0.8736;0.8725;0.8732;0.8725;0.8727;0.8667;0.8692;0.8667;0.8669;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8736;0.8759;0.8736;0.8734;0.8937;0.8953;0.8937;0.8942;0.8667;0.8692;0.8667;0.8669;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8758;0.8776;0.8758;0.8759;0.8702;0.8718;0.8702;0.8709;0.8667;0.8738;0.8667;0.8658;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8746;0.8789;0.8746;0.8744;0.8602;0.8603;0.8602;0.8594;0.8667;0.8756;0.8667;0.8648;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8732;0.8754;0.8732;0.8731;0.8691;0.8864;0.8691;0.8687;0.85;0.8685;0.85;0.8532;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.874;0.8793;0.874;0.8741;0.906;0.9118;0.906;0.9066;0.85;0.8523;0.85;0.8508;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8664;0.8704;0.8664;0.8664;0.9049;0.9075;0.9049;0.905;0.85;0.8523;0.85;0.8508;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8726;0.8744;0.8726;0.872;0.8971;0.8993;0.8971;0.8976;0.85;0.8523;0.85;0.8508;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8603;0.8616;0.8603;0.8597;0.8993;0.9002;0.8993;0.8994;0.85;0.8523;0.85;0.8508;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8725;0.8761;0.8725;0.8727;0.8982;0.8977;0.8982;0.8979;0.85;0.8542;0.85;0.8506;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8765;0.8784;0.8765;0.8763;0.896;0.8986;0.896;0.8964;0.85;0.8542;0.85;0.8506;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8787;0.8835;0.8787;0.8784;0.8993;0.9009;0.8993;0.8998;0.85;0.8542;0.85;0.8506;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.868;0.8748;0.868;0.8681;0.8848;0.8875;0.8848;0.8855;0.85;0.8544;0.85;0.8499;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8778;0.8822;0.8778;0.878;0.8781;0.8804;0.8781;0.8784;0.85;0.8544;0.85;0.8499;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8756;0.8784;0.8756;0.8757;0.8792;0.8787;0.8792;0.8789;0.85;0.8544;0.85;0.8499;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8787;0.8793;0.8787;0.8783;0.8523;0.8667;0.8523;0.8524;0.8333;0.846;0.8333;0.8355;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8771;0.8809;0.8771;0.8772;0.8971;0.8977;0.8971;0.8973;0.8333;0.8365;0.8333;0.8339;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8666;0.8696;0.8666;0.866;0.8937;0.8935;0.8937;0.8933;0.8333;0.8365;0.8333;0.8339;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.874;0.875;0.874;0.8735;0.8792;0.8814;0.8792;0.8797;0.8333;0.8365;0.8333;0.8339;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8668;0.8707;0.8668;0.8666;0.8859;0.8881;0.8859;0.8866;0.8167;0.8224;0.8167;0.8181;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8773;0.8826;0.8773;0.8776;0.8837;0.8862;0.8837;0.8842;0.8167;0.8224;0.8167;0.8181;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.875;0.8761;0.875;0.8747;0.8937;0.8934;0.8937;0.8935;0.8167;0.8214;0.8167;0.8169;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8781;0.8818;0.8781;0.8781;0.8747;0.8744;0.8747;0.8741;0.8167;0.8214;0.8167;0.8169;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8697;0.8741;0.8697;0.8696;0.8915;0.8914;0.8915;0.8913;0.8167;0.8214;0.8167;0.8169;smote;3000;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
