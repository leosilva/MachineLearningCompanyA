Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.912;0.9133;0.912;0.9121;0.9138;0.9139;0.9138;0.9138;0.9;0.9021;0.9;0.8999;0.9695;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.9036;0.9046;0.9036;0.9037;0.9345;0.9351;0.9345;0.9343;0.9;0.9029;0.9;0.8989;0.9704;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9092;0.9099;0.9092;0.9094;0.9313;0.932;0.9313;0.9312;0.9;0.9029;0.9;0.8989;0.968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9043;0.9056;0.9043;0.9044;0.9138;0.9181;0.9138;0.9134;0.9;0.9029;0.9;0.8989;0.9692;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
KNeighborsClassifier;0.9116;0.9129;0.9116;0.9118;0.8966;0.8975;0.8966;0.8966;0.8833;0.8868;0.8833;0.884;0.9701;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9078;0.9089;0.9078;0.9079;0.9;0.9007;0.9;0.9001;0.8833;0.8868;0.8833;0.884;0.9704;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9089;0.9097;0.9089;0.9089;0.9313;0.933;0.9313;0.9314;0.8833;0.8868;0.8833;0.884;0.9688;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8998;0.9013;0.8998;0.8998;0.9034;0.9054;0.9034;0.9032;0.8833;0.8868;0.8833;0.884;0.9683;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9139;0.9155;0.9139;0.914;0.9038;0.904;0.9038;0.9036;0.8833;0.8868;0.8833;0.884;0.9678;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9116;0.9125;0.9116;0.9116;0.9069;0.9086;0.9069;0.9071;0.8833;0.8868;0.8833;0.884;0.9698;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8875;0.8886;0.8875;0.8876;0.8862;0.886;0.8862;0.8852;0.8833;0.8868;0.8833;0.884;0.9156;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
KNeighborsClassifier;0.9051;0.906;0.9051;0.905;0.9069;0.908;0.9069;0.9068;0.8833;0.8868;0.8833;0.884;0.9676;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9097;0.9104;0.9097;0.9099;0.9172;0.9182;0.9172;0.9171;0.8833;0.8868;0.8833;0.884;0.9701;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.902;0.9031;0.902;0.9022;0.9485;0.9486;0.9485;0.9483;0.8833;0.886;0.8833;0.8832;0.9676;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9054;0.9061;0.9054;0.9056;0.9175;0.9203;0.9175;0.917;0.8833;0.886;0.8833;0.8832;0.9689;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9062;0.9072;0.9062;0.9064;0.9138;0.9141;0.9138;0.9138;0.8833;0.886;0.8833;0.8832;0.9669;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
DecisionTreeClassifier;0.8909;0.8919;0.8909;0.8909;0.9483;0.9485;0.9483;0.9483;0.8833;0.886;0.8833;0.8832;0.9181;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
MLPClassifier;0.9043;0.9057;0.9043;0.9045;0.9414;0.942;0.9414;0.9415;0.8833;0.886;0.8833;0.8832;0.9675;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9085;0.9098;0.9085;0.9086;0.9034;0.9041;0.9034;0.9027;0.8833;0.886;0.8833;0.8832;0.97;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9059;0.9069;0.9059;0.906;0.9138;0.9148;0.9138;0.9136;0.8833;0.886;0.8833;0.8832;0.9692;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9047;0.9054;0.9047;0.9049;0.9069;0.9069;0.9069;0.9067;0.8833;0.886;0.8833;0.8832;0.9694;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9066;0.9081;0.9066;0.9068;0.8969;0.8975;0.8969;0.8967;0.8833;0.886;0.8833;0.8832;0.9698;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.9016;0.9028;0.9016;0.9017;0.9416;0.9417;0.9416;0.9413;0.8833;0.886;0.8833;0.8832;0.9686;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.9024;0.9035;0.9024;0.9026;0.9483;0.9483;0.9483;0.9482;0.8833;0.886;0.8833;0.8832;0.9682;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.899;0.9006;0.899;0.8992;0.9414;0.9418;0.9414;0.9413;0.8833;0.886;0.8833;0.8832;0.968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
RandomForestClassifier;0.9345;0.9357;0.9345;0.9346;0.9103;0.9106;0.9103;0.9104;0.8833;0.886;0.8833;0.8832;0.9788;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
SVC;0.853;0.8545;0.853;0.8534;0.9;0.9001;0.9;0.9;0.8833;0.8874;0.8833;0.883;0.9431;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
MLPClassifier;0.9001;0.9006;0.9001;0.9002;0.931;0.932;0.931;0.9311;0.8833;0.8832;0.8833;0.8829;0.9683;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.9028;0.9041;0.9028;0.9029;0.9276;0.9279;0.9276;0.9275;0.8833;0.8832;0.8833;0.8829;0.9674;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.9054;0.9068;0.9054;0.9058;0.9141;0.914;0.9141;0.9139;0.8833;0.8844;0.8833;0.8814;0.9689;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.8994;0.9005;0.8994;0.8994;0.9207;0.9208;0.9207;0.9207;0.8833;0.8844;0.8833;0.8814;0.9675;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.9028;0.9038;0.9028;0.903;0.9;0.9004;0.9;0.8994;0.8833;0.8844;0.8833;0.8814;0.9683;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
KNeighborsClassifier;0.9147;0.9157;0.9147;0.9148;0.9172;0.9182;0.9172;0.9175;0.8667;0.8739;0.8667;0.8679;0.9683;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9055;0.9067;0.9055;0.9057;0.9207;0.9208;0.9207;0.9207;0.8667;0.869;0.8667;0.8674;0.9644;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9288;0.9294;0.9288;0.9289;0.9069;0.9071;0.9069;0.9069;0.8667;0.8709;0.8667;0.8673;0.977;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 473};RandomForestClassifier(n_estimators=10, random_state=473)
KNeighborsClassifier;0.9131;0.9141;0.9131;0.9132;0.9414;0.942;0.9414;0.9415;0.8667;0.8681;0.8667;0.867;0.9692;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9131;0.9138;0.9131;0.9133;0.8966;0.8967;0.8966;0.8966;0.8667;0.8681;0.8667;0.867;0.9663;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9116;0.9134;0.9116;0.9118;0.9241;0.9257;0.9241;0.924;0.8667;0.8681;0.8667;0.867;0.9681;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.8607;0.8616;0.8607;0.8611;0.8931;0.8954;0.8931;0.893;0.8667;0.875;0.8667;0.8668;0.9423;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.8527;0.8544;0.8527;0.8528;0.9;0.906;0.9;0.9005;0.8667;0.875;0.8667;0.8668;0.9422;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.8588;0.8598;0.8588;0.8589;0.8862;0.8863;0.8862;0.8853;0.8667;0.875;0.8667;0.8668;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.8561;0.8576;0.8561;0.8561;0.8759;0.8773;0.8759;0.8747;0.8667;0.875;0.8667;0.8668;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.8591;0.8599;0.8591;0.8594;0.8969;0.9014;0.8969;0.8975;0.8667;0.875;0.8667;0.8668;0.9431;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.8572;0.8574;0.8572;0.8574;0.8969;0.9019;0.8969;0.8973;0.8667;0.875;0.8667;0.8668;0.9421;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
SVC;0.8649;0.8664;0.8649;0.8654;0.9103;0.912;0.9103;0.9093;0.8667;0.8738;0.8667;0.8658;0.9453;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
MLPClassifier;0.9027;0.9037;0.9027;0.9031;0.921;0.9221;0.921;0.9205;0.8667;0.8668;0.8667;0.8657;0.9688;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.9024;0.9037;0.9024;0.9025;0.931;0.9313;0.931;0.9308;0.8667;0.8668;0.8667;0.8657;0.968;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=154)
MLPClassifier;0.9062;0.9075;0.9062;0.9065;0.9241;0.9243;0.9241;0.9239;0.8667;0.8668;0.8667;0.8657;0.9672;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.9047;0.9061;0.9047;0.9048;0.9172;0.9172;0.9172;0.9168;0.8667;0.8668;0.8667;0.8657;0.9686;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.9096;0.9109;0.9096;0.9099;0.921;0.9227;0.921;0.9203;0.8667;0.8668;0.8667;0.8657;0.9691;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.9016;0.903;0.9016;0.9016;0.9138;0.9169;0.9138;0.9138;0.8667;0.8668;0.8667;0.8657;0.9688;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
MLPClassifier;0.9089;0.9099;0.9089;0.909;0.9141;0.9143;0.9141;0.914;0.8667;0.8668;0.8667;0.8657;0.9691;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.902;0.9032;0.902;0.9022;0.9207;0.921;0.9207;0.9207;0.8667;0.8668;0.8667;0.8657;0.9676;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 696, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=696)
RandomForestClassifier;0.928;0.9283;0.928;0.9281;0.9381;0.9383;0.9381;0.9382;0.85;0.8557;0.85;0.8514;0.9754;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
RandomForestClassifier;0.9277;0.9281;0.9277;0.9277;0.9345;0.9344;0.9345;0.9344;0.85;0.8557;0.85;0.8514;0.9787;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
RandomForestClassifier;0.933;0.9333;0.933;0.933;0.9207;0.9216;0.9207;0.9208;0.85;0.8557;0.85;0.8514;0.9782;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
RandomForestClassifier;0.9261;0.9267;0.9261;0.9262;0.9207;0.9217;0.9207;0.9209;0.85;0.8557;0.85;0.8514;0.9776;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
RandomForestClassifier;0.9292;0.9303;0.9292;0.9292;0.9655;0.9662;0.9655;0.9655;0.85;0.8557;0.85;0.8514;0.9754;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
RandomForestClassifier;0.9323;0.9327;0.9323;0.9323;0.9379;0.939;0.9379;0.9381;0.85;0.8557;0.85;0.8514;0.9774;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9296;0.9306;0.9296;0.9296;0.9416;0.9418;0.9416;0.9415;0.85;0.8557;0.85;0.8514;0.9788;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
RandomForestClassifier;0.9326;0.9331;0.9326;0.9328;0.931;0.9315;0.931;0.9311;0.85;0.8557;0.85;0.8514;0.9791;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
KNeighborsClassifier;0.9139;0.9151;0.9139;0.9141;0.9381;0.9387;0.9381;0.9383;0.85;0.8541;0.85;0.851;0.9689;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9146;0.9151;0.9146;0.9147;0.9069;0.9071;0.9069;0.9065;0.85;0.8541;0.85;0.851;0.9719;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9292;0.9303;0.9292;0.9292;0.9241;0.924;0.9241;0.924;0.85;0.8564;0.85;0.8508;0.9762;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
RandomForestClassifier;0.9346;0.9354;0.9346;0.9346;0.9138;0.9159;0.9138;0.914;0.85;0.8542;0.85;0.8506;0.9767;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
SVC;0.8526;0.853;0.8526;0.8525;0.921;0.9248;0.921;0.9203;0.85;0.8623;0.85;0.85;0.9395;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.861;0.863;0.861;0.8615;0.9244;0.9276;0.9244;0.9244;0.85;0.8623;0.85;0.85;0.9416;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.8553;0.8572;0.8553;0.8558;0.9038;0.9077;0.9038;0.9046;0.85;0.8623;0.85;0.85;0.9429;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.8562;0.8565;0.8562;0.8563;0.9103;0.9107;0.9103;0.9098;0.85;0.8623;0.85;0.85;0.9396;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.8565;0.8572;0.8565;0.8569;0.931;0.9314;0.931;0.9309;0.85;0.8623;0.85;0.85;0.9407;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.8511;0.8522;0.8511;0.8507;0.9;0.9041;0.9;0.9003;0.85;0.8623;0.85;0.85;0.9387;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 276};SVC(C=10, probability=True, random_state=276)
SVC;0.8534;0.8543;0.8534;0.8538;0.9107;0.9119;0.9107;0.9106;0.85;0.8623;0.85;0.85;0.9411;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.8591;0.8596;0.8591;0.8593;0.9141;0.9156;0.9141;0.9141;0.85;0.8623;0.85;0.85;0.9424;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
KNeighborsClassifier;0.9058;0.9067;0.9058;0.906;0.9313;0.9317;0.9313;0.9313;0.85;0.85;0.85;0.85;0.969;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.8404;0.8419;0.8404;0.8403;0.9276;0.9298;0.9276;0.9275;0.85;0.8623;0.85;0.85;0.9376;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
SVC;0.8603;0.8613;0.8603;0.8607;0.8828;0.8889;0.8828;0.883;0.85;0.8623;0.85;0.85;0.9438;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.8538;0.8563;0.8538;0.8539;0.8966;0.9017;0.8966;0.8973;0.85;0.8623;0.85;0.85;0.9422;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.8538;0.8549;0.8538;0.8538;0.9207;0.9243;0.9207;0.9203;0.85;0.8623;0.85;0.85;0.9392;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
SVC;0.8619;0.8622;0.8619;0.8619;0.931;0.9329;0.931;0.9312;0.85;0.8623;0.85;0.85;0.9431;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.8637;0.8642;0.8637;0.864;0.8793;0.8798;0.8793;0.8793;0.85;0.8623;0.85;0.85;0.9425;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
SVC;0.8453;0.8461;0.8453;0.8452;0.9175;0.9201;0.9175;0.9169;0.85;0.8623;0.85;0.85;0.941;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
KNeighborsClassifier;0.9077;0.9089;0.9077;0.9078;0.9244;0.9244;0.9244;0.9244;0.85;0.85;0.85;0.85;0.9681;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.8553;0.8573;0.8553;0.8557;0.8969;0.9026;0.8969;0.8975;0.85;0.8623;0.85;0.85;0.944;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
SVC;0.858;0.8583;0.858;0.8582;0.9241;0.9271;0.9241;0.9244;0.85;0.8623;0.85;0.85;0.9395;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
SVC;0.858;0.859;0.858;0.8584;0.9069;0.9084;0.9069;0.9067;0.85;0.8623;0.85;0.85;0.9397;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
SVC;0.8588;0.8598;0.8588;0.8595;0.9;0.9005;0.9;0.8993;0.85;0.8623;0.85;0.85;0.9433;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
SVC;0.8435;0.8456;0.8435;0.8434;0.9241;0.9308;0.9241;0.9233;0.85;0.8623;0.85;0.85;0.9384;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 943};SVC(C=10, probability=True, random_state=943)
RandomForestClassifier;0.9227;0.9231;0.9227;0.9227;0.9345;0.9354;0.9345;0.9345;0.85;0.8506;0.85;0.8499;0.9765;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9311;0.9316;0.9311;0.9312;0.9241;0.9246;0.9241;0.9241;0.85;0.8506;0.85;0.8499;0.9771;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
MLPClassifier;0.8978;0.8993;0.8978;0.8981;0.9345;0.9346;0.9345;0.9342;0.85;0.8506;0.85;0.8499;0.9671;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
RandomForestClassifier;0.9322;0.933;0.9322;0.9323;0.9175;0.918;0.9175;0.9175;0.85;0.8506;0.85;0.8499;0.9787;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
KNeighborsClassifier;0.9059;0.9068;0.9059;0.9061;0.9276;0.9276;0.9276;0.9276;0.85;0.8506;0.85;0.8499;0.9704;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9281;0.9288;0.9281;0.9282;0.9241;0.9267;0.9241;0.924;0.85;0.8506;0.85;0.8499;0.9766;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 199};RandomForestClassifier(n_estimators=10, random_state=199)
RandomForestClassifier;0.9323;0.9326;0.9323;0.9323;0.9207;0.9207;0.9207;0.9207;0.85;0.8506;0.85;0.8499;0.978;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9376;0.9382;0.9376;0.9377;0.8966;0.8971;0.8966;0.8967;0.85;0.8506;0.85;0.8499;0.9767;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
DecisionTreeClassifier;0.8906;0.891;0.8906;0.8905;0.9172;0.9176;0.9172;0.917;0.85;0.8506;0.85;0.8499;0.9179;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
DecisionTreeClassifier;0.8898;0.8908;0.8898;0.89;0.9207;0.9206;0.9207;0.9207;0.85;0.8506;0.85;0.8499;0.9174;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
KNeighborsClassifier;0.907;0.9083;0.907;0.9072;0.9175;0.9176;0.9175;0.9175;0.85;0.8497;0.85;0.8495;0.9676;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9097;0.911;0.9097;0.9098;0.9138;0.9142;0.9138;0.9136;0.85;0.8497;0.85;0.8495;0.9697;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9035;0.9052;0.9035;0.9036;0.9175;0.9175;0.9175;0.9175;0.85;0.8497;0.85;0.8495;0.9687;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8883;0.8894;0.8883;0.8883;0.9138;0.9151;0.9138;0.9137;0.85;0.8514;0.85;0.8483;0.9162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
DecisionTreeClassifier;0.8932;0.8943;0.8932;0.8932;0.8935;0.8941;0.8935;0.8936;0.85;0.8514;0.85;0.8483;0.9198;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
DecisionTreeClassifier;0.8851;0.8863;0.8851;0.8851;0.9313;0.9323;0.9313;0.9313;0.85;0.849;0.85;0.8481;0.9137;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
DecisionTreeClassifier;0.894;0.8952;0.894;0.8939;0.8897;0.8898;0.8897;0.8897;0.85;0.849;0.85;0.8481;0.9205;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
DecisionTreeClassifier;0.8894;0.8913;0.8894;0.8894;0.9241;0.9262;0.9241;0.9242;0.85;0.849;0.85;0.8481;0.917;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
MLPClassifier;0.9028;0.9043;0.9028;0.903;0.9414;0.942;0.9414;0.9412;0.85;0.849;0.85;0.8481;0.9665;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
DecisionTreeClassifier;0.8886;0.8893;0.8886;0.8887;0.9207;0.9221;0.9207;0.9209;0.85;0.849;0.85;0.8481;0.9164;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
DecisionTreeClassifier;0.9009;0.9018;0.9009;0.901;0.8793;0.8798;0.8793;0.8794;0.85;0.849;0.85;0.8481;0.9256;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
DecisionTreeClassifier;0.8944;0.896;0.8944;0.8945;0.8897;0.8897;0.8897;0.8893;0.85;0.849;0.85;0.8481;0.9208;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
DecisionTreeClassifier;0.889;0.8906;0.889;0.8892;0.9207;0.9217;0.9207;0.9202;0.85;0.849;0.85;0.8481;0.9167;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
DecisionTreeClassifier;0.8978;0.8986;0.8978;0.8979;0.9003;0.9012;0.9003;0.9004;0.85;0.849;0.85;0.8481;0.9232;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
DecisionTreeClassifier;0.9016;0.9028;0.9016;0.9017;0.89;0.8901;0.89;0.89;0.85;0.849;0.85;0.8481;0.9261;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
RandomForestClassifier;0.9364;0.9368;0.9364;0.9365;0.9244;0.9248;0.9244;0.9243;0.8333;0.8419;0.8333;0.8353;0.9775;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9311;0.9313;0.9311;0.9311;0.9038;0.9042;0.9038;0.9038;0.8333;0.8386;0.8333;0.8348;0.9791;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
RandomForestClassifier;0.928;0.9289;0.928;0.9282;0.9379;0.9393;0.9379;0.938;0.8333;0.8386;0.8333;0.8348;0.9753;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
RandomForestClassifier;0.928;0.9286;0.928;0.928;0.9347;0.9347;0.9347;0.9346;0.8333;0.8386;0.8333;0.8348;0.9754;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9284;0.9291;0.9284;0.9283;0.9241;0.9272;0.9241;0.9243;0.8333;0.8411;0.8333;0.8346;0.9743;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
RandomForestClassifier;0.9288;0.9292;0.9288;0.9289;0.9207;0.9211;0.9207;0.9206;0.8333;0.8355;0.8333;0.8341;0.976;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
SVC;0.8561;0.8568;0.8561;0.856;0.8931;0.8956;0.8931;0.8931;0.8333;0.8426;0.8333;0.8341;0.9412;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
RandomForestClassifier;0.9376;0.9379;0.9376;0.9376;0.8966;0.9005;0.8966;0.8956;0.8333;0.8355;0.8333;0.8341;0.9791;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
DecisionTreeClassifier;0.8898;0.8914;0.8898;0.8898;0.9241;0.925;0.9241;0.9243;0.8333;0.8355;0.8333;0.8341;0.9172;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
RandomForestClassifier;0.9311;0.9322;0.9311;0.9312;0.9207;0.9211;0.9207;0.9207;0.8333;0.8355;0.8333;0.8341;0.978;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
DecisionTreeClassifier;0.8936;0.8948;0.8936;0.8936;0.89;0.8898;0.89;0.8896;0.8333;0.8355;0.8333;0.8341;0.9201;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
SVC;0.8557;0.857;0.8557;0.8557;0.9172;0.9209;0.9172;0.9177;0.8333;0.8424;0.8333;0.8336;0.94;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 504};SVC(C=10, probability=True, random_state=504)
RandomForestClassifier;0.9269;0.9279;0.9269;0.927;0.945;0.9468;0.945;0.9451;0.8333;0.8333;0.8333;0.8333;0.9742;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 160};RandomForestClassifier(n_estimators=20, random_state=160)
DecisionTreeClassifier;0.8959;0.8967;0.8959;0.8959;0.8862;0.8873;0.8862;0.8863;0.8333;0.8333;0.8333;0.8333;0.9219;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
DecisionTreeClassifier;0.8879;0.8891;0.8879;0.8879;0.9138;0.9154;0.9138;0.9142;0.8333;0.8341;0.8333;0.8327;0.9158;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
DecisionTreeClassifier;0.8909;0.8931;0.8909;0.891;0.8866;0.8911;0.8866;0.8873;0.8333;0.8322;0.8333;0.8324;0.9181;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
DecisionTreeClassifier;0.8825;0.8836;0.8825;0.8825;0.931;0.9314;0.931;0.931;0.8333;0.8322;0.8333;0.8324;0.9119;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
DecisionTreeClassifier;0.8917;0.8924;0.8917;0.8918;0.8866;0.891;0.8866;0.887;0.8333;0.8322;0.8333;0.8324;0.9188;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
KNeighborsClassifier;0.9116;0.9128;0.9116;0.9116;0.9276;0.9302;0.9276;0.9279;0.8333;0.8322;0.8333;0.8324;0.9688;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9051;0.9058;0.9051;0.9053;0.9172;0.9185;0.9172;0.9171;0.8333;0.8322;0.8333;0.8324;0.966;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8997;0.9008;0.8997;0.8999;0.9103;0.9108;0.9103;0.9104;0.8333;0.8322;0.8333;0.8324;0.9248;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
KNeighborsClassifier;0.9051;0.9063;0.9051;0.9053;0.9241;0.9245;0.9241;0.924;0.8333;0.8322;0.8333;0.8324;0.9686;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9085;0.9095;0.9085;0.9087;0.9276;0.9281;0.9276;0.9277;0.8333;0.8322;0.8333;0.8324;0.9674;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9131;0.9149;0.9131;0.9132;0.9175;0.9181;0.9175;0.9173;0.8333;0.8322;0.8333;0.8324;0.9683;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
DecisionTreeClassifier;0.8932;0.8941;0.8932;0.8933;0.9034;0.9037;0.9034;0.9029;0.8333;0.8333;0.8333;0.8323;0.9199;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
KNeighborsClassifier;0.9082;0.9094;0.9082;0.9083;0.931;0.9332;0.931;0.9308;0.8333;0.8338;0.8333;0.8322;0.967;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9315;0.932;0.9315;0.9315;0.9276;0.9291;0.9276;0.9275;0.8167;0.8239;0.8167;0.8189;0.9773;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
RandomForestClassifier;0.9296;0.9301;0.9296;0.9296;0.9519;0.9522;0.9519;0.9518;0.8167;0.8214;0.8167;0.8181;0.9767;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 199};RandomForestClassifier(n_estimators=20, random_state=199)
RandomForestClassifier;0.9303;0.9307;0.9303;0.9304;0.9278;0.9298;0.9278;0.9279;0.8167;0.8181;0.8167;0.817;0.9762;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 473};RandomForestClassifier(n_estimators=20, random_state=473)
DecisionTreeClassifier;0.8856;0.8862;0.8856;0.8856;0.931;0.9317;0.931;0.9312;0.8167;0.8167;0.8167;0.8167;0.9141;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
DecisionTreeClassifier;0.8947;0.8957;0.8947;0.8949;0.8935;0.8972;0.8935;0.8936;0.8167;0.8167;0.8167;0.8167;0.921;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
DecisionTreeClassifier;0.8901;0.8912;0.8901;0.8902;0.89;0.8896;0.89;0.8895;0.8167;0.8167;0.8167;0.8167;0.9176;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
KNeighborsClassifier;0.907;0.9083;0.907;0.9071;0.9414;0.9412;0.9414;0.9412;0.8167;0.8163;0.8167;0.8162;0.9663;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9066;0.9083;0.9066;0.9067;0.9416;0.9416;0.9416;0.9416;0.8167;0.8175;0.8167;0.816;0.9711;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9055;0.9067;0.9055;0.9056;0.9103;0.9122;0.9103;0.9107;0.8167;0.8153;0.8167;0.8147;0.9693;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8932;0.8942;0.8932;0.8932;0.8931;0.8929;0.8931;0.8929;0.8;0.8021;0.8;0.8007;0.9199;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 373};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=373)
DecisionTreeClassifier;0.8871;0.8883;0.8871;0.8872;0.8862;0.8871;0.8862;0.8864;0.8;0.7988;0.8;0.7991;0.9152;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 118};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=118)
DecisionTreeClassifier;0.8875;0.8885;0.8875;0.8876;0.8931;0.8934;0.8931;0.8928;0.8;0.8002;0.8;0.7988;0.9156;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 675};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=675)
LogisticRegression;0.673;0.6787;0.673;0.6723;0.701;0.7044;0.701;0.6997;0.6333;0.629;0.6333;0.6293;0.8517;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6704;0.6748;0.6704;0.6695;0.756;0.7609;0.756;0.7554;0.6333;0.629;0.6333;0.6293;0.8467;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6801;0.6844;0.6801;0.6792;0.6414;0.6457;0.6414;0.6423;0.6333;0.629;0.6333;0.6293;0.8547;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6743;0.6793;0.6743;0.6737;0.6759;0.6804;0.6759;0.674;0.6333;0.629;0.6333;0.6293;0.8523;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.677;0.6816;0.677;0.6758;0.6828;0.6839;0.6828;0.6828;0.6333;0.629;0.6333;0.6293;0.8544;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6732;0.6782;0.6732;0.6726;0.6931;0.6953;0.6931;0.6917;0.6333;0.629;0.6333;0.6293;0.8498;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.677;0.6822;0.677;0.6764;0.6793;0.6808;0.6793;0.6782;0.6333;0.629;0.6333;0.6293;0.8554;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.68;0.6841;0.68;0.6794;0.6586;0.6667;0.6586;0.658;0.6333;0.629;0.6333;0.6293;0.8552;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6766;0.6808;0.6766;0.6758;0.6724;0.6732;0.6724;0.6726;0.6333;0.629;0.6333;0.6293;0.8541;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6793;0.6833;0.6793;0.6786;0.6621;0.6657;0.6621;0.6614;0.6333;0.629;0.6333;0.6293;0.8529;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6819;0.6854;0.6819;0.6814;0.6426;0.6509;0.6426;0.6407;0.6333;0.629;0.6333;0.6293;0.8531;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6716;0.6754;0.6716;0.6708;0.7103;0.7134;0.7103;0.711;0.6333;0.629;0.6333;0.6293;0.8497;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6807;0.6865;0.6807;0.6802;0.6289;0.6292;0.6289;0.6279;0.6333;0.629;0.6333;0.6293;0.8589;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.6785;0.6827;0.6785;0.6778;0.6793;0.6811;0.6793;0.6789;0.6333;0.629;0.6333;0.6293;0.8545;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6803;0.686;0.6803;0.6799;0.6564;0.6613;0.6564;0.6548;0.6333;0.629;0.6333;0.6293;0.8562;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6736;0.6769;0.6736;0.6726;0.6931;0.7051;0.6931;0.6942;0.6333;0.629;0.6333;0.6293;0.8513;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6759;0.6792;0.6759;0.6749;0.6966;0.6972;0.6966;0.6966;0.6333;0.629;0.6333;0.6293;0.8551;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6757;0.6801;0.6757;0.6749;0.6735;0.6754;0.6735;0.6731;0.6333;0.629;0.6333;0.6293;0.8515;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6839;0.6882;0.6839;0.6834;0.6414;0.6548;0.6414;0.6393;0.6333;0.629;0.6333;0.6293;0.853;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6784;0.6827;0.6784;0.6777;0.6942;0.6983;0.6942;0.694;0.6333;0.629;0.6333;0.6293;0.8511;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 589, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=589)"
LogisticRegression;0.6804;0.6848;0.6804;0.6797;0.7103;0.7182;0.7103;0.7099;0.6333;0.629;0.6333;0.6293;0.8519;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.6795;0.686;0.6795;0.6789;0.677;0.6811;0.677;0.677;0.6333;0.629;0.6333;0.6293;0.8546;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.6739;0.6777;0.6739;0.6733;0.6724;0.6702;0.6724;0.6699;0.6333;0.629;0.6333;0.6293;0.8518;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.6678;0.6723;0.6678;0.6667;0.7276;0.7316;0.7276;0.7272;0.6333;0.629;0.6333;0.6293;0.8474;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.6782;0.6823;0.6782;0.6776;0.6897;0.7066;0.6897;0.6887;0.6333;0.629;0.6333;0.6293;0.8545;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.6808;0.6865;0.6808;0.6801;0.6759;0.6844;0.6759;0.6743;0.6333;0.629;0.6333;0.6293;0.8543;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.678;0.6832;0.678;0.6773;0.6289;0.63;0.6289;0.6291;0.6333;0.629;0.6333;0.6293;0.8569;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.672;0.676;0.672;0.671;0.7172;0.7292;0.7172;0.7172;0.6167;0.616;0.6167;0.6146;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
LogisticRegression;0.6778;0.6828;0.6778;0.6768;0.6828;0.6827;0.6828;0.6811;0.6167;0.6099;0.6167;0.6099;0.8533;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 215, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=215)"
LogisticRegression;0.6766;0.6824;0.6766;0.6755;0.6724;0.6743;0.6724;0.6726;0.6167;0.6099;0.6167;0.6099;0.8519;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 200, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=200)"
