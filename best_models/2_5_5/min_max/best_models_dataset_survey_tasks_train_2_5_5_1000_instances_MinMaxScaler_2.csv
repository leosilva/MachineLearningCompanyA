Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8094;0.8129;0.8094;0.8088;0.8069;0.8064;0.8069;0.8064;0.85;0.8558;0.85;0.8495;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8002;0.8056;0.8002;0.7998;0.8034;0.8199;0.8034;0.8053;0.8167;0.8374;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8028;0.806;0.8028;0.8024;0.7973;0.8214;0.7973;0.797;0.8167;0.8374;0.8167;0.8202;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8021;0.8062;0.8021;0.8023;0.8241;0.8356;0.8241;0.8261;0.8167;0.8378;0.8167;0.8185;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8385;0.8433;0.8385;0.8395;0.8552;0.8559;0.8552;0.8552;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 706};RandomForestClassifier(n_estimators=20, random_state=706)
RandomForestClassifier;0.8342;0.8386;0.8342;0.8352;0.811;0.8141;0.811;0.8119;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 706};RandomForestClassifier(n_estimators=5, random_state=706)
RandomForestClassifier;0.8324;0.8374;0.8324;0.8332;0.8586;0.858;0.8586;0.8577;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
RandomForestClassifier;0.8316;0.8357;0.8316;0.8326;0.8517;0.8548;0.8517;0.8525;0.8167;0.8221;0.8167;0.818;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
KNeighborsClassifier;0.8174;0.823;0.8174;0.8171;0.8007;0.8091;0.8007;0.8027;0.8167;0.826;0.8167;0.8163;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8009;0.8072;0.8009;0.8017;0.8247;0.8246;0.8247;0.8246;0.8167;0.8212;0.8167;0.8146;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8056;0.8079;0.8056;0.806;0.8414;0.8457;0.8414;0.8414;0.8;0.8267;0.8;0.8049;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7894;0.7912;0.7894;0.7883;0.811;0.8231;0.811;0.8122;0.8;0.8181;0.8;0.8035;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8347;0.8396;0.8347;0.8355;0.8207;0.8222;0.8207;0.8212;0.8;0.8171;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 646};RandomForestClassifier(n_estimators=10, random_state=646)
DecisionTreeClassifier;0.8301;0.8353;0.8301;0.8309;0.8621;0.8683;0.8621;0.8631;0.8;0.8171;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
DecisionTreeClassifier;0.825;0.8297;0.825;0.8259;0.8385;0.8408;0.8385;0.8392;0.8;0.8171;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
DecisionTreeClassifier;0.8301;0.835;0.8301;0.8311;0.8138;0.8153;0.8138;0.8136;0.8;0.8171;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
KNeighborsClassifier;0.7994;0.8043;0.7994;0.7995;0.8557;0.8555;0.8557;0.8538;0.8;0.8108;0.8;0.8028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.7497;0.7752;0.7497;0.7489;0.8172;0.8198;0.8172;0.8176;0.8;0.8296;0.8;0.8027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.7424;0.7684;0.7424;0.7416;0.8448;0.8507;0.8448;0.8455;0.8;0.8296;0.8;0.8027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.742;0.769;0.742;0.7412;0.8522;0.8575;0.8522;0.8527;0.8;0.8296;0.8;0.8027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.7516;0.7789;0.7516;0.7508;0.7897;0.7957;0.7897;0.7891;0.8;0.8296;0.8;0.8027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7455;0.773;0.7455;0.7451;0.8276;0.8348;0.8276;0.8261;0.8;0.8296;0.8;0.8027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7462;0.7738;0.7462;0.7445;0.811;0.8134;0.811;0.8115;0.8;0.8296;0.8;0.8027;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
DecisionTreeClassifier;0.8247;0.8311;0.8247;0.8259;0.8552;0.8596;0.8552;0.8558;0.8;0.8089;0.8;0.8023;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
DecisionTreeClassifier;0.8274;0.8332;0.8274;0.8285;0.8483;0.853;0.8483;0.8493;0.8;0.8089;0.8;0.8023;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=504)
DecisionTreeClassifier;0.8339;0.84;0.8339;0.8352;0.8138;0.821;0.8138;0.8139;0.8;0.8089;0.8;0.8023;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
RandomForestClassifier;0.8351;0.8393;0.8351;0.8355;0.831;0.8398;0.831;0.8327;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 646};RandomForestClassifier(n_estimators=20, random_state=646)
RandomForestClassifier;0.8312;0.8344;0.8312;0.8319;0.8517;0.8558;0.8517;0.8525;0.8;0.8093;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 706};RandomForestClassifier(n_estimators=20, random_state=706)
RandomForestClassifier;0.8354;0.8402;0.8354;0.8363;0.8241;0.8328;0.8241;0.8252;0.8;0.8166;0.8;0.8017;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 646};RandomForestClassifier(n_estimators=10, random_state=646)
KNeighborsClassifier;0.7899;0.791;0.7899;0.7899;0.8655;0.8718;0.8655;0.8664;0.8;0.8125;0.8;0.8016;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8029;0.8062;0.8029;0.803;0.8517;0.8515;0.8517;0.8513;0.8;0.8125;0.8;0.8016;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8052;0.8089;0.8052;0.8054;0.8207;0.823;0.8207;0.8213;0.8;0.8125;0.8;0.8016;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8247;0.8287;0.8247;0.8254;0.8621;0.8616;0.8621;0.8617;0.8;0.8125;0.8;0.8016;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 706};RandomForestClassifier(n_estimators=5, random_state=706)
KNeighborsClassifier;0.8087;0.8136;0.8087;0.8078;0.831;0.8387;0.831;0.8328;0.8;0.8125;0.8;0.8016;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8029;0.8071;0.8029;0.8033;0.7931;0.7991;0.7931;0.7944;0.8;0.8125;0.8;0.8016;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8266;0.8309;0.8266;0.8275;0.8419;0.8441;0.8419;0.8422;0.8;0.8109;0.8;0.8014;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
KNeighborsClassifier;0.8124;0.8163;0.8124;0.8126;0.811;0.8157;0.811;0.8116;0.8;0.8038;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8312;0.8343;0.8312;0.8317;0.8414;0.8426;0.8414;0.8419;0.8;0.8042;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 706};RandomForestClassifier(n_estimators=10, random_state=706)
RandomForestClassifier;0.8362;0.8398;0.8362;0.8367;0.8069;0.8142;0.8069;0.8086;0.8;0.8042;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 646};RandomForestClassifier(n_estimators=10, random_state=646)
RandomForestClassifier;0.8282;0.8317;0.8282;0.8287;0.8862;0.8903;0.8862;0.8871;0.8;0.8042;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
RandomForestClassifier;0.8293;0.8352;0.8293;0.8302;0.8797;0.8809;0.8797;0.8801;0.8;0.8042;0.8;0.801;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 646};RandomForestClassifier(n_estimators=5, random_state=646)
KNeighborsClassifier;0.7956;0.7989;0.7956;0.796;0.7724;0.7716;0.7724;0.7719;0.8;0.8049;0.8;0.7999;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8037;0.8092;0.8037;0.8038;0.7931;0.793;0.7931;0.7924;0.8;0.8097;0.8;0.799;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8097;0.811;0.8097;0.809;0.8144;0.8184;0.8144;0.8154;0.8;0.8097;0.8;0.799;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8044;0.8101;0.8044;0.8048;0.8103;0.8127;0.8103;0.8109;0.8;0.8131;0.8;0.7958;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8017;0.8057;0.8017;0.8021;0.8138;0.8164;0.8138;0.8138;0.7833;0.8078;0.7833;0.787;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8334;0.8394;0.8334;0.8345;0.8316;0.8334;0.8316;0.8322;0.7833;0.8195;0.7833;0.7869;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
DecisionTreeClassifier;0.8231;0.8295;0.8231;0.8241;0.8488;0.8503;0.8488;0.8492;0.7833;0.8195;0.7833;0.7869;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=613)
DecisionTreeClassifier;0.8305;0.8351;0.8305;0.8315;0.8483;0.8594;0.8483;0.8501;0.7833;0.8195;0.7833;0.7869;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=994)
DecisionTreeClassifier;0.827;0.8331;0.827;0.8284;0.8414;0.8439;0.8414;0.8416;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=994)
DecisionTreeClassifier;0.8251;0.8309;0.8251;0.8262;0.8414;0.8417;0.8414;0.8402;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=504)
SVC;0.7436;0.7669;0.7436;0.7431;0.8552;0.8727;0.8552;0.8565;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7459;0.7734;0.7459;0.7447;0.8207;0.832;0.8207;0.8218;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.7435;0.773;0.7435;0.7422;0.8419;0.8475;0.8419;0.8429;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
DecisionTreeClassifier;0.8171;0.8242;0.8171;0.8183;0.8483;0.8516;0.8483;0.8487;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=994)
DecisionTreeClassifier;0.8274;0.8338;0.8274;0.8286;0.8345;0.841;0.8345;0.836;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=994)
SVC;0.7455;0.7748;0.7455;0.7445;0.8345;0.8378;0.8345;0.8355;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7416;0.7674;0.7416;0.7403;0.8385;0.8406;0.8385;0.8389;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7447;0.7695;0.7447;0.7438;0.8454;0.8493;0.8454;0.8457;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7417;0.7698;0.7417;0.7403;0.8483;0.852;0.8483;0.8489;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7428;0.7727;0.7428;0.7421;0.8414;0.8484;0.8414;0.8419;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
DecisionTreeClassifier;0.8251;0.8309;0.8251;0.826;0.8517;0.8522;0.8517;0.8516;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=613)
SVC;0.7413;0.7688;0.7413;0.7408;0.8448;0.8597;0.8448;0.8448;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.7379;0.7635;0.7379;0.7372;0.8724;0.8815;0.8724;0.8732;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.7455;0.7721;0.7455;0.745;0.8069;0.8223;0.8069;0.8085;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7474;0.771;0.7474;0.7468;0.8069;0.8172;0.8069;0.8079;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.7459;0.7722;0.7459;0.7453;0.8069;0.8139;0.8069;0.8076;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.7405;0.7669;0.7405;0.7393;0.8345;0.8383;0.8345;0.8349;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.7427;0.7691;0.7427;0.7422;0.8041;0.8119;0.8041;0.8041;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.7451;0.7738;0.7451;0.7442;0.8276;0.8335;0.8276;0.8286;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.7413;0.7682;0.7413;0.7405;0.8172;0.8291;0.8172;0.8182;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.7398;0.7675;0.7398;0.7387;0.8517;0.8592;0.8517;0.8512;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
SVC;0.744;0.7692;0.744;0.7431;0.8483;0.8521;0.8483;0.8478;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.7459;0.7729;0.7459;0.745;0.8069;0.8156;0.8069;0.8067;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.74;0.7691;0.74;0.7395;0.8694;0.8811;0.8694;0.8708;0.7833;0.8059;0.7833;0.7863;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
DecisionTreeClassifier;0.8301;0.8345;0.8301;0.8309;0.8207;0.8266;0.8207;0.8218;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
DecisionTreeClassifier;0.8239;0.8302;0.8239;0.8252;0.8419;0.8459;0.8419;0.8429;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=994)
DecisionTreeClassifier;0.832;0.8376;0.832;0.8333;0.831;0.8342;0.831;0.8316;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
DecisionTreeClassifier;0.8328;0.8384;0.8328;0.8338;0.8552;0.8581;0.8552;0.8556;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=994)
DecisionTreeClassifier;0.8301;0.8373;0.8301;0.8315;0.8;0.8072;0.8;0.8002;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=994)
DecisionTreeClassifier;0.8282;0.8348;0.8282;0.8291;0.8414;0.8519;0.8414;0.8432;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
DecisionTreeClassifier;0.8239;0.8305;0.8239;0.825;0.8345;0.8351;0.8345;0.8346;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=994)
DecisionTreeClassifier;0.8342;0.8395;0.8342;0.8355;0.8213;0.8273;0.8213;0.8226;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
DecisionTreeClassifier;0.8236;0.8288;0.8236;0.8249;0.8379;0.8407;0.8379;0.8386;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
DecisionTreeClassifier;0.8384;0.8455;0.8384;0.8398;0.8144;0.8156;0.8144;0.8149;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 613};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=613)
DecisionTreeClassifier;0.8259;0.8315;0.8259;0.8269;0.8379;0.8405;0.8379;0.8386;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
DecisionTreeClassifier;0.8331;0.8373;0.8331;0.834;0.8282;0.8325;0.8282;0.8275;0.7833;0.797;0.7833;0.7862;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=994)
RandomForestClassifier;0.8404;0.844;0.8404;0.8413;0.8007;0.8071;0.8007;0.8025;0.7833;0.7972;0.7833;0.785;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 437};RandomForestClassifier(n_estimators=5, random_state=437)
RandomForestClassifier;0.8393;0.8437;0.8393;0.84;0.8207;0.8306;0.8207;0.8224;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 706};RandomForestClassifier(n_estimators=10, random_state=706)
RandomForestClassifier;0.8393;0.8439;0.8393;0.8402;0.8207;0.8261;0.8207;0.8206;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 646};RandomForestClassifier(n_estimators=20, random_state=646)
RandomForestClassifier;0.8389;0.8432;0.8389;0.8395;0.8241;0.8273;0.8241;0.8251;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 706};RandomForestClassifier(n_estimators=20, random_state=706)
RandomForestClassifier;0.8361;0.8419;0.8361;0.8368;0.8316;0.8319;0.8316;0.8314;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
RandomForestClassifier;0.8412;0.8442;0.8412;0.8417;0.7793;0.795;0.7793;0.7813;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
RandomForestClassifier;0.8385;0.8435;0.8385;0.8395;0.8172;0.8235;0.8172;0.8189;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 706};RandomForestClassifier(n_estimators=20, random_state=706)
RandomForestClassifier;0.8369;0.8425;0.8369;0.8381;0.8282;0.8299;0.8282;0.8287;0.7833;0.7912;0.7833;0.7848;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 706};RandomForestClassifier(n_estimators=20, random_state=706)
RandomForestClassifier;0.8308;0.8361;0.8308;0.8318;0.8763;0.878;0.8763;0.8763;0.7833;0.7904;0.7833;0.7847;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 646};RandomForestClassifier(n_estimators=5, random_state=646)
KNeighborsClassifier;0.7876;0.7919;0.7876;0.7869;0.8172;0.8167;0.8172;0.8164;0.7833;0.7956;0.7833;0.7845;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8006;0.8056;0.8006;0.8011;0.8;0.8026;0.8;0.7993;0.7833;0.7857;0.7833;0.7835;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7999;0.8052;0.7999;0.8001;0.8862;0.8862;0.8862;0.8862;0.7833;0.7857;0.7833;0.7835;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8017;0.807;0.8017;0.8022;0.8144;0.8145;0.8144;0.8142;0.7833;0.7972;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7933;0.7974;0.7933;0.7938;0.8483;0.8505;0.8483;0.8485;0.7833;0.7972;0.7833;0.7822;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8144;0.8163;0.8144;0.8144;0.7966;0.8009;0.7966;0.7978;0.7667;0.8076;0.7667;0.773;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8335;0.8387;0.8335;0.8346;0.8414;0.8466;0.8414;0.8428;0.7667;0.8097;0.7667;0.7708;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
DecisionTreeClassifier;0.8342;0.8409;0.8342;0.8355;0.8041;0.8144;0.8041;0.8063;0.7667;0.8097;0.7667;0.7708;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 994};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=994)
MLPClassifier;0.8125;0.8168;0.8125;0.813;0.7966;0.8004;0.7966;0.7978;0.7667;0.7957;0.7667;0.7707;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8086;0.8152;0.8086;0.8097;0.8247;0.8265;0.8247;0.8243;0.7667;0.7957;0.7667;0.7707;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8109;0.8172;0.8109;0.8115;0.8;0.7986;0.8;0.7973;0.7667;0.7957;0.7667;0.7707;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
DecisionTreeClassifier;0.824;0.8305;0.824;0.8254;0.8103;0.8245;0.8103;0.8121;0.7667;0.7957;0.7667;0.7707;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 504};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=504)
MLPClassifier;0.8014;0.8073;0.8014;0.8023;0.8621;0.8622;0.8621;0.862;0.7667;0.7852;0.7667;0.7705;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8132;0.8206;0.8132;0.8148;0.8103;0.8162;0.8103;0.8101;0.7667;0.8105;0.7667;0.7701;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
RandomForestClassifier;0.8285;0.8332;0.8285;0.8293;0.8454;0.8469;0.8454;0.8459;0.7667;0.7951;0.7667;0.7695;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 706};RandomForestClassifier(n_estimators=10, random_state=706)
SVC;0.7412;0.7705;0.7412;0.7397;0.8282;0.8324;0.8282;0.8291;0.7667;0.7866;0.7667;0.7689;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, random_state=280)
SVC;0.7412;0.7673;0.7412;0.7403;0.7938;0.7959;0.7938;0.7935;0.7667;0.7866;0.7667;0.7689;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 347};SVC(C=10, random_state=347)
SVC;0.7432;0.7711;0.7432;0.7419;0.8345;0.8356;0.8345;0.8348;0.7667;0.7866;0.7667;0.7689;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 78};SVC(C=10, random_state=78)
MLPClassifier;0.8022;0.81;0.8022;0.8033;0.8276;0.8281;0.8276;0.8277;0.7667;0.7874;0.7667;0.7688;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8079;0.8139;0.8079;0.8086;0.8172;0.8209;0.8172;0.8182;0.7667;0.7874;0.7667;0.7688;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
RandomForestClassifier;0.8358;0.8402;0.8358;0.8366;0.8247;0.8266;0.8247;0.8252;0.7667;0.7789;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 646};RandomForestClassifier(n_estimators=10, random_state=646)
KNeighborsClassifier;0.8106;0.8169;0.8106;0.8113;0.8;0.7995;0.8;0.7992;0.7667;0.7789;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8384;0.8434;0.8384;0.8391;0.8144;0.8135;0.8144;0.8138;0.7667;0.7789;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 437};RandomForestClassifier(n_estimators=10, random_state=437)
RandomForestClassifier;0.8324;0.8381;0.8324;0.8335;0.8172;0.8202;0.8172;0.815;0.7667;0.7789;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 437};RandomForestClassifier(n_estimators=5, random_state=437)
RandomForestClassifier;0.8362;0.8406;0.8362;0.8373;0.8448;0.8536;0.8448;0.8466;0.7667;0.7789;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
RandomForestClassifier;0.832;0.8382;0.832;0.8328;0.831;0.8334;0.831;0.8313;0.7667;0.7789;0.7667;0.7682;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 646};RandomForestClassifier(n_estimators=20, random_state=646)
KNeighborsClassifier;0.8071;0.8118;0.8071;0.8076;0.8351;0.8432;0.8351;0.8365;0.7667;0.7856;0.7667;0.768;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8301;0.8346;0.8301;0.8311;0.8379;0.8485;0.8379;0.8399;0.7667;0.7739;0.7667;0.7678;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 437};RandomForestClassifier(n_estimators=20, random_state=437)
KNeighborsClassifier;0.8094;0.8111;0.8094;0.8091;0.769;0.7713;0.769;0.7672;0.7667;0.7631;0.7667;0.7637;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8094;0.8157;0.8094;0.8104;0.8172;0.8191;0.8172;0.8172;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8079;0.8149;0.8079;0.8089;0.7931;0.7966;0.7931;0.7943;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8036;0.8098;0.8036;0.8047;0.8316;0.8317;0.8316;0.8317;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8109;0.8162;0.8109;0.8118;0.8276;0.8285;0.8276;0.8277;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8071;0.8126;0.8071;0.8081;0.8414;0.8439;0.8414;0.8412;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8047;0.8118;0.8047;0.8058;0.8213;0.8266;0.8213;0.8204;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.807;0.813;0.807;0.8079;0.8419;0.8444;0.8419;0.8427;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.812;0.8173;0.812;0.8127;0.8488;0.8555;0.8488;0.8501;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8051;0.8129;0.8051;0.8064;0.8454;0.8458;0.8454;0.8456;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8033;0.8092;0.8033;0.8039;0.8207;0.8211;0.8207;0.8209;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8094;0.8147;0.8094;0.8099;0.8276;0.827;0.8276;0.8271;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8079;0.8123;0.8079;0.8085;0.7931;0.7959;0.7931;0.794;0.75;0.7746;0.75;0.7543;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8075;0.8134;0.8075;0.8084;0.7828;0.7815;0.7828;0.7818;0.75;0.7897;0.75;0.7542;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8025;0.8094;0.8025;0.8032;0.8172;0.8244;0.8172;0.819;0.75;0.7897;0.75;0.7542;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8109;0.8174;0.8109;0.8115;0.8007;0.805;0.8007;0.8018;0.75;0.7897;0.75;0.7542;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.7995;0.8048;0.7995;0.8;0.8379;0.8379;0.8379;0.8378;0.75;0.7897;0.75;0.7542;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
KNeighborsClassifier;0.7964;0.7986;0.7964;0.7956;0.8207;0.8263;0.8207;0.8205;0.75;0.7854;0.75;0.754;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8109;0.8168;0.8109;0.8119;0.8207;0.8215;0.8207;0.821;0.75;0.7682;0.75;0.7527;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 224, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=224)
MLPClassifier;0.8051;0.8114;0.8051;0.8062;0.8007;0.8039;0.8007;0.8017;0.75;0.7682;0.75;0.7527;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8121;0.8169;0.8121;0.8128;0.8103;0.8101;0.8103;0.8101;0.75;0.7682;0.75;0.7527;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8121;0.8177;0.8121;0.8128;0.8207;0.8253;0.8207;0.8216;0.75;0.7682;0.75;0.7527;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.807;0.813;0.807;0.8079;0.8213;0.8249;0.8213;0.8219;0.75;0.7682;0.75;0.7527;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
MLPClassifier;0.8075;0.8128;0.8075;0.8083;0.8448;0.8493;0.8448;0.8452;0.75;0.7682;0.75;0.7527;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 325, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=325)
MLPClassifier;0.8086;0.8152;0.8086;0.8094;0.8414;0.8443;0.8414;0.8422;0.75;0.7682;0.75;0.7527;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 386, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=386)
RandomForestClassifier;0.8366;0.8403;0.8366;0.8373;0.8276;0.8302;0.8276;0.8281;0.7333;0.7444;0.7333;0.7342;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 646};RandomForestClassifier(n_estimators=10, random_state=646)
LogisticRegression;0.6964;0.7149;0.6964;0.6958;0.6907;0.7095;0.6907;0.6873;0.7167;0.7342;0.7167;0.7186;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6923;0.7106;0.6923;0.6915;0.7034;0.7206;0.7034;0.7051;0.7167;0.7342;0.7167;0.7186;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6977;0.7159;0.6977;0.697;0.7172;0.7276;0.7172;0.7164;0.7167;0.7329;0.7167;0.7179;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6956;0.7138;0.6956;0.6948;0.7148;0.7301;0.7148;0.7137;0.7167;0.7329;0.7167;0.7179;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6931;0.7121;0.6931;0.6925;0.7172;0.7298;0.7172;0.7178;0.7167;0.7329;0.7167;0.7179;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6953;0.7141;0.6953;0.6945;0.732;0.7427;0.732;0.7298;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6931;0.7113;0.6931;0.6924;0.6966;0.7209;0.6966;0.6966;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6973;0.7144;0.6973;0.6971;0.6621;0.6808;0.6621;0.6596;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6915;0.7089;0.6915;0.6906;0.7172;0.7352;0.7172;0.7175;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.7;0.7171;0.7;0.6994;0.6655;0.6926;0.6655;0.666;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6961;0.7134;0.6961;0.6953;0.6966;0.7139;0.6966;0.6946;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6942;0.7123;0.6942;0.6939;0.7034;0.7169;0.7034;0.7044;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6923;0.711;0.6923;0.6919;0.7345;0.7515;0.7345;0.7295;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6992;0.7158;0.6992;0.6982;0.6724;0.7042;0.6724;0.6728;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6926;0.71;0.6926;0.6915;0.6873;0.7137;0.6873;0.6871;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6888;0.7061;0.6888;0.6882;0.7448;0.7702;0.7448;0.7438;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6903;0.7097;0.6903;0.6895;0.7388;0.7548;0.7388;0.7403;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7;0.7166;0.7;0.6993;0.6759;0.6946;0.6759;0.6767;0.7;0.7214;0.7;0.7036;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6931;0.7106;0.6931;0.692;0.6931;0.7081;0.6931;0.6923;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7007;0.7166;0.7007;0.7003;0.7;0.7253;0.7;0.6933;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7019;0.721;0.7019;0.701;0.6448;0.6639;0.6448;0.6472;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6945;0.7128;0.6945;0.6939;0.732;0.7459;0.732;0.7322;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7007;0.7183;0.7007;0.7;0.6379;0.6703;0.6379;0.6367;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6983;0.7162;0.6983;0.6968;0.6838;0.6958;0.6838;0.6854;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6984;0.7151;0.6984;0.6978;0.6828;0.7051;0.6828;0.681;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.7019;0.719;0.7019;0.7017;0.6586;0.6794;0.6586;0.6539;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6961;0.7156;0.6961;0.6953;0.7276;0.7388;0.7276;0.7258;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 789, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=789)"
LogisticRegression;0.6914;0.7093;0.6914;0.6906;0.7285;0.7463;0.7285;0.7316;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6979;0.7167;0.6979;0.6976;0.6873;0.6982;0.6873;0.6864;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
LogisticRegression;0.6957;0.7137;0.6957;0.6947;0.6897;0.7054;0.6897;0.6901;0.7;0.7191;0.7;0.7028;smote;1000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 777, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=777)"
