Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8271;0.8361;0.8271;0.8278;0.875;0.8816;0.875;0.8754;0.85;0.8564;0.85;0.8508;0.9386;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8179;0.8287;0.8179;0.8191;0.875;0.8831;0.875;0.8762;0.8333;0.8365;0.8333;0.8339;0.9434;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8256;0.8359;0.8256;0.8267;0.875;0.8821;0.875;0.8762;0.8333;0.8369;0.8333;0.8328;0.938;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8117;0.8189;0.8117;0.8124;0.8542;0.8628;0.8542;0.8559;0.8333;0.838;0.8333;0.8317;0.9426;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8287;0.8382;0.8287;0.829;0.8264;0.842;0.8264;0.8283;0.8167;0.8189;0.8167;0.8174;0.9426;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8233;0.8333;0.8233;0.8246;0.7708;0.7745;0.7708;0.771;0.8167;0.8181;0.8167;0.817;0.9431;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8966;0.9001;0.8966;0.8969;0.8958;0.898;0.8958;0.8962;0.8167;0.8167;0.8167;0.8167;0.9722;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 471};RandomForestClassifier(n_estimators=20, random_state=471)
KNeighborsClassifier;0.8148;0.8228;0.8148;0.8157;0.8819;0.8839;0.8819;0.8821;0.8167;0.8248;0.8167;0.8165;0.9387;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8804;0.8829;0.8804;0.8806;0.8958;0.9;0.8958;0.8962;0.8167;0.8187;0.8167;0.8163;0.9695;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
KNeighborsClassifier;0.8317;0.8417;0.8317;0.833;0.8958;0.8953;0.8958;0.8954;0.8167;0.8187;0.8167;0.8163;0.9398;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8309;0.8379;0.8309;0.8318;0.875;0.876;0.875;0.8752;0.8167;0.8187;0.8167;0.8163;0.9419;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8372;0.8465;0.8372;0.8383;0.875;0.8805;0.875;0.8758;0.8167;0.8187;0.8167;0.8163;0.9394;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8256;0.835;0.8256;0.8264;0.8889;0.8944;0.8889;0.8897;0.8167;0.8203;0.8167;0.8162;0.9349;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8326;0.8429;0.8326;0.8331;0.8194;0.8391;0.8194;0.8202;0.8167;0.8203;0.8167;0.8162;0.9397;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8225;0.8295;0.8225;0.8231;0.8472;0.8495;0.8472;0.8478;0.8167;0.8203;0.8167;0.8162;0.9438;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8264;0.834;0.8264;0.827;0.8194;0.8263;0.8194;0.8207;0.8167;0.8203;0.8167;0.8162;0.9397;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8248;0.8369;0.8248;0.8254;0.8611;0.864;0.8611;0.8618;0.8167;0.8203;0.8167;0.8162;0.9395;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8265;0.8355;0.8265;0.8271;0.875;0.876;0.875;0.8753;0.8167;0.8203;0.8167;0.8162;0.9381;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8318;0.8391;0.8318;0.8323;0.8542;0.8553;0.8542;0.8516;0.8167;0.8203;0.8167;0.8162;0.9379;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.831;0.8407;0.831;0.832;0.8472;0.8482;0.8472;0.8475;0.8167;0.8166;0.8167;0.8156;0.9374;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8233;0.8346;0.8233;0.8244;0.8542;0.8555;0.8542;0.854;0.8167;0.8166;0.8167;0.8156;0.9424;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.824;0.8336;0.824;0.8249;0.8542;0.8583;0.8542;0.8542;0.8167;0.8171;0.8167;0.8144;0.9424;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8179;0.8277;0.8179;0.8186;0.8819;0.8874;0.8819;0.8818;0.8;0.8058;0.8;0.8007;0.9399;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8172;0.8292;0.8172;0.8177;0.8611;0.863;0.8611;0.8608;0.8;0.8058;0.8;0.8007;0.9404;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8194;0.8302;0.8194;0.8207;0.8611;0.8619;0.8611;0.861;0.8;0.8039;0.8;0.8005;0.9398;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8719;0.874;0.8719;0.872;0.8472;0.8553;0.8472;0.8494;0.8;0.8013;0.8;0.8003;0.904;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
KNeighborsClassifier;0.8332;0.8441;0.8332;0.8338;0.8472;0.8534;0.8472;0.8452;0.8;0.8;0.8;0.8;0.9429;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8156;0.8257;0.8156;0.8162;0.8819;0.9008;0.8819;0.8834;0.8;0.8005;0.8;0.7999;0.9337;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8827;0.8856;0.8827;0.8827;0.8958;0.8965;0.8958;0.8957;0.8;0.8016;0.8;0.7997;0.9706;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
RandomForestClassifier;0.8796;0.8823;0.8796;0.8797;0.8889;0.8924;0.8889;0.8889;0.8;0.7997;0.8;0.7995;0.9701;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
KNeighborsClassifier;0.8203;0.8323;0.8203;0.8216;0.9028;0.9025;0.9028;0.9026;0.8;0.7997;0.8;0.7995;0.9382;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8812;0.8849;0.8812;0.8816;0.8472;0.8509;0.8472;0.8477;0.8;0.7997;0.8;0.7995;0.9702;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 471};RandomForestClassifier(n_estimators=10, random_state=471)
RandomForestClassifier;0.8797;0.8831;0.8797;0.8798;0.9028;0.9096;0.9028;0.9039;0.8;0.7997;0.8;0.7995;0.9684;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
RandomForestClassifier;0.8797;0.8822;0.8797;0.8799;0.8333;0.835;0.8333;0.8332;0.8;0.7997;0.8;0.7995;0.969;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 412};RandomForestClassifier(n_estimators=20, random_state=412)
KNeighborsClassifier;0.8225;0.8311;0.8225;0.8237;0.8681;0.8699;0.8681;0.8684;0.8;0.8042;0.8;0.7992;0.9387;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8766;0.88;0.8766;0.877;0.875;0.8768;0.875;0.8753;0.8;0.7989;0.8;0.7985;0.9684;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 249};RandomForestClassifier(n_estimators=10, random_state=249)
DecisionTreeClassifier;0.8635;0.865;0.8635;0.8633;0.8819;0.8826;0.8819;0.8814;0.7833;0.7863;0.7833;0.7839;0.8976;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
DecisionTreeClassifier;0.8557;0.8577;0.8557;0.8554;0.8542;0.858;0.8542;0.8545;0.7833;0.7863;0.7833;0.7839;0.8918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
RandomForestClassifier;0.8781;0.8816;0.8781;0.8783;0.8819;0.8825;0.8819;0.8822;0.7833;0.7869;0.7833;0.7838;0.9701;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 412};RandomForestClassifier(n_estimators=20, random_state=412)
MLPClassifier;0.716;0.7297;0.716;0.7161;0.8125;0.8216;0.8125;0.8117;0.7833;0.7846;0.7833;0.7836;0.8989;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
DecisionTreeClassifier;0.8534;0.857;0.8534;0.8529;0.8611;0.8624;0.8611;0.8566;0.7833;0.7833;0.7833;0.7833;0.8901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8588;0.8613;0.8588;0.8586;0.7708;0.7731;0.7708;0.7704;0.7833;0.7833;0.7833;0.7833;0.8941;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=537)
RandomForestClassifier;0.8734;0.8765;0.8734;0.8738;0.9028;0.9111;0.9028;0.9033;0.7833;0.7833;0.7833;0.7833;0.9655;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 471};RandomForestClassifier(n_estimators=10, random_state=471)
RandomForestClassifier;0.8866;0.8888;0.8866;0.8866;0.8958;0.9042;0.8958;0.8965;0.7833;0.7854;0.7833;0.783;0.9693;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 471};RandomForestClassifier(n_estimators=5, random_state=471)
RandomForestClassifier;0.8866;0.8897;0.8866;0.8869;0.8611;0.8625;0.8611;0.8612;0.7833;0.783;0.7833;0.7828;0.9702;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 412};RandomForestClassifier(n_estimators=20, random_state=412)
RandomForestClassifier;0.8804;0.8853;0.8804;0.8808;0.9167;0.9185;0.9167;0.9163;0.7833;0.783;0.7833;0.7828;0.9687;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 412};RandomForestClassifier(n_estimators=20, random_state=412)
RandomForestClassifier;0.8812;0.8849;0.8812;0.8814;0.8958;0.897;0.8958;0.8962;0.7833;0.783;0.7833;0.7828;0.9683;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 412};RandomForestClassifier(n_estimators=10, random_state=412)
RandomForestClassifier;0.8758;0.8786;0.8758;0.8762;0.9028;0.9064;0.9028;0.903;0.7833;0.783;0.7833;0.7828;0.9651;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
RandomForestClassifier;0.8843;0.8876;0.8843;0.8848;0.8819;0.8817;0.8819;0.8814;0.7833;0.783;0.7833;0.7828;0.9694;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 471};RandomForestClassifier(n_estimators=20, random_state=471)
RandomForestClassifier;0.8842;0.8885;0.8842;0.8844;0.8542;0.8628;0.8542;0.8544;0.7833;0.783;0.7833;0.7828;0.969;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 471};RandomForestClassifier(n_estimators=20, random_state=471)
RandomForestClassifier;0.8812;0.8859;0.8812;0.8816;0.9167;0.9162;0.9167;0.9164;0.7833;0.7863;0.7833;0.7827;0.9694;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 412};RandomForestClassifier(n_estimators=10, random_state=412)
KNeighborsClassifier;0.821;0.8276;0.821;0.8221;0.8333;0.8648;0.8333;0.8361;0.7833;0.7863;0.7833;0.7827;0.9375;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8773;0.8797;0.8773;0.8774;0.8819;0.8815;0.8819;0.8815;0.7833;0.7831;0.7833;0.7822;0.9668;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 412};RandomForestClassifier(n_estimators=20, random_state=412)
KNeighborsClassifier;0.8294;0.8379;0.8294;0.8301;0.8889;0.8952;0.8889;0.8893;0.7833;0.7831;0.7833;0.7822;0.9392;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8202;0.8294;0.8202;0.8217;0.8958;0.8978;0.8958;0.896;0.7833;0.7835;0.7833;0.7821;0.9397;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7222;0.7374;0.7222;0.7208;0.7917;0.7911;0.7917;0.7912;0.7667;0.7811;0.7667;0.7708;0.9006;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
SVC;0.7415;0.7823;0.7415;0.7385;0.8403;0.8473;0.8403;0.8417;0.7667;0.7789;0.7667;0.7682;0.8718;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
DecisionTreeClassifier;0.851;0.8529;0.851;0.8505;0.8611;0.8616;0.8611;0.8612;0.7667;0.7688;0.7667;0.7674;0.8883;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
DecisionTreeClassifier;0.8611;0.8634;0.8611;0.8611;0.8958;0.8983;0.8958;0.8966;0.7667;0.7688;0.7667;0.7674;0.8958;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8558;0.8583;0.8558;0.8555;0.9097;0.9122;0.9097;0.9099;0.7667;0.767;0.7667;0.7666;0.8918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
DecisionTreeClassifier;0.8581;0.8606;0.8581;0.858;0.875;0.8822;0.875;0.876;0.7667;0.767;0.7667;0.7666;0.8935;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
RandomForestClassifier;0.8805;0.884;0.8805;0.8807;0.8542;0.8567;0.8542;0.8536;0.7667;0.7698;0.7667;0.766;0.9695;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
RandomForestClassifier;0.8843;0.8866;0.8843;0.8844;0.8819;0.887;0.8819;0.8818;0.7667;0.7672;0.7667;0.7659;0.9689;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 471};RandomForestClassifier(n_estimators=10, random_state=471)
RandomForestClassifier;0.8843;0.8896;0.8843;0.8845;0.875;0.8877;0.875;0.8744;0.7667;0.7672;0.7667;0.7659;0.9696;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 471};RandomForestClassifier(n_estimators=20, random_state=471)
RandomForestClassifier;0.8743;0.8764;0.8743;0.8746;0.8542;0.8647;0.8542;0.8558;0.7667;0.7672;0.7667;0.7659;0.9683;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 412};RandomForestClassifier(n_estimators=10, random_state=412)
DecisionTreeClassifier;0.8781;0.8794;0.8781;0.8778;0.8542;0.8557;0.8542;0.8541;0.7667;0.7655;0.7667;0.7657;0.9086;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
RandomForestClassifier;0.8827;0.8868;0.8827;0.8831;0.8958;0.8977;0.8958;0.8963;0.7667;0.7663;0.7667;0.7656;0.9691;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
RandomForestClassifier;0.8812;0.8842;0.8812;0.8812;0.8889;0.8912;0.8889;0.8895;0.7667;0.7663;0.7667;0.7656;0.9674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 412};RandomForestClassifier(n_estimators=20, random_state=412)
RandomForestClassifier;0.8843;0.8875;0.8843;0.8843;0.8889;0.8916;0.8889;0.8897;0.7667;0.7663;0.7667;0.7656;0.9663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 471};RandomForestClassifier(n_estimators=20, random_state=471)
MLPClassifier;0.7184;0.7325;0.7184;0.7169;0.8125;0.8101;0.8125;0.8091;0.7667;0.7635;0.7667;0.7638;0.895;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
SVC;0.7322;0.7745;0.7322;0.7306;0.7778;0.8167;0.7778;0.7822;0.75;0.7746;0.75;0.7543;0.8764;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
MLPClassifier;0.7152;0.7276;0.7152;0.7139;0.8472;0.8484;0.8472;0.8467;0.75;0.7615;0.75;0.7528;0.8966;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
MLPClassifier;0.713;0.7277;0.713;0.7117;0.8194;0.8203;0.8194;0.8184;0.75;0.756;0.75;0.7521;0.8958;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
MLPClassifier;0.7044;0.7178;0.7044;0.7041;0.8264;0.8284;0.8264;0.827;0.75;0.7574;0.75;0.7517;0.8919;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
DecisionTreeClassifier;0.8681;0.8694;0.8681;0.8679;0.875;0.8825;0.875;0.8766;0.75;0.7551;0.75;0.7513;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8549;0.8569;0.8549;0.8546;0.8403;0.8434;0.8403;0.8414;0.75;0.7551;0.75;0.7513;0.8912;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
SVC;0.7422;0.7831;0.7422;0.7406;0.8125;0.8234;0.8125;0.8137;0.75;0.7671;0.75;0.7513;0.8712;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
DecisionTreeClassifier;0.8565;0.8596;0.8565;0.8565;0.8125;0.8154;0.8125;0.8135;0.75;0.754;0.75;0.751;0.8924;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8557;0.8576;0.8557;0.8558;0.8819;0.888;0.8819;0.8833;0.75;0.7536;0.75;0.7509;0.8918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8519;0.8538;0.8519;0.8519;0.8542;0.8558;0.8542;0.8548;0.75;0.7536;0.75;0.7509;0.889;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
DecisionTreeClassifier;0.8565;0.8587;0.8565;0.8566;0.8681;0.8821;0.8681;0.8686;0.75;0.7536;0.75;0.7509;0.8924;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
DecisionTreeClassifier;0.8681;0.8707;0.8681;0.868;0.7917;0.7918;0.7917;0.7893;0.75;0.7532;0.75;0.7504;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8727;0.8754;0.8727;0.8725;0.8125;0.8126;0.8125;0.8125;0.75;0.75;0.75;0.75;0.9045;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
MLPClassifier;0.7237;0.7376;0.7237;0.7229;0.8542;0.8536;0.8542;0.8531;0.75;0.7513;0.75;0.7497;0.9002;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
RandomForestClassifier;0.8804;0.8831;0.8804;0.8805;0.875;0.885;0.875;0.8742;0.75;0.7502;0.75;0.7488;0.9662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 412};RandomForestClassifier(n_estimators=20, random_state=412)
RandomForestClassifier;0.8696;0.8739;0.8696;0.8693;0.9375;0.9379;0.9375;0.9375;0.75;0.7483;0.75;0.7479;0.9649;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 471};RandomForestClassifier(n_estimators=20, random_state=471)
SVC;0.7268;0.7712;0.7268;0.7248;0.8681;0.8853;0.8681;0.8704;0.7333;0.7702;0.7333;0.7383;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7369;0.7786;0.7369;0.735;0.8611;0.8662;0.8611;0.862;0.7333;0.7702;0.7333;0.7383;0.8709;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
SVC;0.7268;0.7664;0.7268;0.725;0.8264;0.83;0.8264;0.8261;0.7333;0.7548;0.7333;0.7379;0.8735;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
SVC;0.7307;0.7718;0.7307;0.7292;0.7917;0.821;0.7917;0.7925;0.7333;0.7548;0.7333;0.7379;0.8692;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
SVC;0.7284;0.774;0.7284;0.727;0.8403;0.849;0.8403;0.8413;0.7333;0.7642;0.7333;0.7377;0.8712;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7307;0.7743;0.7307;0.7287;0.8125;0.8369;0.8125;0.8144;0.7333;0.7642;0.7333;0.7377;0.8714;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7314;0.7705;0.7314;0.73;0.8194;0.8345;0.8194;0.8212;0.7333;0.7642;0.7333;0.7377;0.8733;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
MLPClassifier;0.7191;0.7376;0.7191;0.7185;0.8264;0.8367;0.8264;0.829;0.7333;0.7481;0.7333;0.7369;0.9017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.7307;0.7498;0.7307;0.7306;0.8125;0.8416;0.8125;0.8155;0.7333;0.7481;0.7333;0.7369;0.9017;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
MLPClassifier;0.7168;0.7318;0.7168;0.716;0.8056;0.8067;0.8056;0.8057;0.7333;0.7438;0.7333;0.7366;0.8989;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
MLPClassifier;0.7099;0.7235;0.7099;0.7096;0.8056;0.807;0.8056;0.8051;0.7333;0.7438;0.7333;0.7366;0.8976;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
SVC;0.7369;0.7755;0.7369;0.7345;0.7778;0.797;0.7778;0.7822;0.7333;0.7556;0.7333;0.7365;0.8791;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
SVC;0.7315;0.7702;0.7315;0.7296;0.7986;0.8076;0.7986;0.8007;0.7333;0.7556;0.7333;0.7365;0.8704;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
MLPClassifier;0.72;0.7347;0.72;0.7192;0.8403;0.8387;0.8403;0.8392;0.7333;0.7454;0.7333;0.736;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.7222;0.74;0.7222;0.7221;0.8125;0.814;0.8125;0.813;0.7333;0.7454;0.7333;0.736;0.8991;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
DecisionTreeClassifier;0.8665;0.8681;0.8665;0.8663;0.8264;0.8457;0.8264;0.8292;0.7333;0.7408;0.7333;0.735;0.8999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.8588;0.8618;0.8588;0.8588;0.875;0.8787;0.875;0.876;0.7333;0.7408;0.7333;0.735;0.8941;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
DecisionTreeClassifier;0.868;0.8697;0.868;0.8676;0.8264;0.8387;0.8264;0.8281;0.7333;0.7381;0.7333;0.7347;0.901;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
DecisionTreeClassifier;0.8703;0.8738;0.8703;0.8701;0.8611;0.8713;0.8611;0.8609;0.7333;0.7398;0.7333;0.7346;0.9027;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
DecisionTreeClassifier;0.8727;0.8772;0.8727;0.8731;0.9097;0.9116;0.9097;0.9099;0.7333;0.7363;0.7333;0.7345;0.9045;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
MLPClassifier;0.7082;0.7219;0.7082;0.7083;0.8125;0.8178;0.8125;0.8103;0.7333;0.738;0.7333;0.7345;0.8984;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
MLPClassifier;0.7184;0.7328;0.7184;0.7182;0.8125;0.8172;0.8125;0.8131;0.7333;0.738;0.7333;0.7345;0.8956;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
MLPClassifier;0.7245;0.7354;0.7245;0.7222;0.8333;0.8365;0.8333;0.8314;0.7333;0.738;0.7333;0.7345;0.8994;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
DecisionTreeClassifier;0.8634;0.8657;0.8634;0.8634;0.8819;0.8835;0.8819;0.8825;0.7333;0.7354;0.7333;0.7341;0.8975;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
MLPClassifier;0.7261;0.7453;0.7261;0.7252;0.7847;0.7861;0.7847;0.7822;0.7333;0.7369;0.7333;0.7329;0.8992;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
RandomForestClassifier;0.8743;0.8772;0.8743;0.8746;0.9167;0.9204;0.9167;0.9173;0.7333;0.732;0.7333;0.7324;0.9663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
MLPClassifier;0.7114;0.7272;0.7114;0.7108;0.7986;0.8035;0.7986;0.7999;0.7333;0.7321;0.7333;0.7324;0.8986;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
RandomForestClassifier;0.8905;0.8941;0.8905;0.8908;0.8542;0.8553;0.8542;0.8546;0.7333;0.7313;0.7333;0.7314;0.9714;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 249};RandomForestClassifier(n_estimators=20, random_state=249)
SVC;0.7284;0.7714;0.7284;0.7275;0.8194;0.8348;0.8194;0.8204;0.7167;0.7539;0.7167;0.7221;0.8704;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
SVC;0.7292;0.7725;0.7292;0.7293;0.8333;0.8521;0.8333;0.8352;0.7167;0.7539;0.7167;0.7221;0.8721;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
SVC;0.7346;0.7759;0.7346;0.7327;0.7639;0.7782;0.7639;0.7636;0.7167;0.7539;0.7167;0.7221;0.8797;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7362;0.777;0.7362;0.7348;0.8125;0.8415;0.8125;0.8157;0.7167;0.7539;0.7167;0.7221;0.8682;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
SVC;0.7323;0.7692;0.7323;0.7315;0.7986;0.8297;0.7986;0.8015;0.7167;0.7539;0.7167;0.7221;0.8719;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
SVC;0.7346;0.7787;0.7346;0.734;0.7917;0.8029;0.7917;0.7915;0.7167;0.7539;0.7167;0.7221;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
SVC;0.733;0.7765;0.733;0.7315;0.7708;0.7822;0.7708;0.7718;0.7167;0.7444;0.7167;0.7214;0.8726;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7214;0.7665;0.7214;0.7203;0.8472;0.8575;0.8472;0.8482;0.7167;0.7444;0.7167;0.7214;0.872;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
MLPClassifier;0.7114;0.7228;0.7114;0.7104;0.75;0.7519;0.75;0.7493;0.7167;0.7327;0.7167;0.7196;0.8968;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.7184;0.7331;0.7184;0.7179;0.8125;0.8214;0.8125;0.8117;0.7167;0.7327;0.7167;0.7196;0.8975;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.7075;0.721;0.7075;0.7067;0.8542;0.8542;0.8542;0.8542;0.7167;0.7327;0.7167;0.7196;0.8917;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.7276;0.7429;0.7276;0.7273;0.7986;0.7967;0.7986;0.7965;0.7167;0.7253;0.7167;0.7191;0.8984;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
MLPClassifier;0.7037;0.7181;0.7037;0.7027;0.8194;0.8195;0.8194;0.8177;0.7167;0.7253;0.7167;0.7191;0.8954;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
MLPClassifier;0.7168;0.7315;0.7168;0.7161;0.8542;0.8619;0.8542;0.855;0.7167;0.7253;0.7167;0.7191;0.8939;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.7129;0.728;0.7129;0.7124;0.8472;0.849;0.8472;0.8476;0.7167;0.7243;0.7167;0.7186;0.8952;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
LogisticRegression;0.7052;0.7216;0.7052;0.7026;0.7986;0.8077;0.7986;0.7982;0.7167;0.7247;0.7167;0.7184;0.8656;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7083;0.724;0.7083;0.7069;0.7569;0.7688;0.7569;0.7563;0.7167;0.7247;0.7167;0.7184;0.8658;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
MLPClassifier;0.7098;0.721;0.7098;0.708;0.8403;0.846;0.8403;0.8421;0.7167;0.7307;0.7167;0.7179;0.8989;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 872, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=872)
MLPClassifier;0.7099;0.7237;0.7099;0.7091;0.8056;0.8103;0.8056;0.8067;0.7167;0.7264;0.7167;0.7179;0.8947;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
DecisionTreeClassifier;0.8557;0.8585;0.8557;0.8558;0.8056;0.8101;0.8056;0.8059;0.7167;0.7187;0.7167;0.7174;0.8918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
DecisionTreeClassifier;0.8711;0.874;0.8711;0.8714;0.8403;0.8541;0.8403;0.8417;0.7167;0.7167;0.7167;0.7167;0.9033;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 537};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=537)
DecisionTreeClassifier;0.8619;0.8639;0.8619;0.8616;0.875;0.8823;0.875;0.8763;0.7167;0.7167;0.7167;0.7167;0.8964;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
SVC;0.7353;0.7777;0.7353;0.7339;0.75;0.7778;0.75;0.7485;0.7;0.7333;0.7;0.706;0.8718;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
SVC;0.7338;0.7757;0.7338;0.7321;0.7708;0.7989;0.7708;0.7712;0.7;0.7333;0.7;0.706;0.8742;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
SVC;0.7307;0.7724;0.7307;0.7303;0.8194;0.8249;0.8194;0.8193;0.7;0.7333;0.7;0.706;0.8729;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
SVC;0.7338;0.7734;0.7338;0.7327;0.8194;0.8468;0.8194;0.8217;0.7;0.7333;0.7;0.706;0.8647;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7369;0.7773;0.7369;0.7357;0.7778;0.819;0.7778;0.7779;0.7;0.7333;0.7;0.706;0.8707;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
MLPClassifier;0.7276;0.7428;0.7276;0.7277;0.7986;0.8088;0.7986;0.8011;0.7;0.7201;0.7;0.7028;0.9015;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
DecisionTreeClassifier;0.8557;0.8579;0.8557;0.8557;0.8542;0.8619;0.8542;0.8554;0.7;0.7063;0.7;0.7022;0.8918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
LogisticRegression;0.7029;0.7206;0.7029;0.7018;0.7292;0.7458;0.7292;0.7267;0.7;0.7081;0.7;0.7017;0.869;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7075;0.7215;0.7075;0.7059;0.7083;0.7362;0.7083;0.7029;0.7;0.7081;0.7;0.7017;0.8695;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.7091;0.7276;0.7091;0.7083;0.6667;0.6703;0.6667;0.6619;0.7;0.7081;0.7;0.7017;0.8691;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.713;0.7309;0.713;0.7111;0.6875;0.7053;0.6875;0.6861;0.7;0.7081;0.7;0.7017;0.8705;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7068;0.7218;0.7068;0.7054;0.7292;0.7469;0.7292;0.7265;0.7;0.7081;0.7;0.7017;0.8679;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7075;0.7262;0.7075;0.7064;0.7222;0.7396;0.7222;0.7188;0.7;0.7081;0.7;0.7017;0.869;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
DecisionTreeClassifier;0.8665;0.869;0.8665;0.8665;0.8125;0.8253;0.8125;0.8118;0.7;0.7109;0.7;0.7017;0.8999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 584};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=584)
LogisticRegression;0.7021;0.7184;0.7021;0.701;0.7361;0.7358;0.7361;0.7346;0.7;0.7081;0.7;0.7017;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7191;0.7336;0.7191;0.7172;0.6389;0.6672;0.6389;0.6321;0.7;0.7081;0.7;0.7017;0.8746;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
MLPClassifier;0.7168;0.733;0.7168;0.7159;0.7986;0.8024;0.7986;0.7999;0.7;0.7111;0.7;0.6984;0.8994;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
SVC;0.7253;0.7654;0.7253;0.7254;0.7986;0.8127;0.7986;0.8;0.6833;0.7373;0.6833;0.6905;0.8703;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7354;0.777;0.7354;0.7347;0.7917;0.8121;0.7917;0.7932;0.6833;0.7224;0.6833;0.6902;0.8786;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 771};SVC(C=10, probability=True, random_state=771)
SVC;0.7276;0.7695;0.7276;0.7254;0.8264;0.8464;0.8264;0.8269;0.6833;0.7224;0.6833;0.6902;0.8737;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
SVC;0.7307;0.7718;0.7307;0.73;0.7778;0.8245;0.7778;0.7794;0.6833;0.7224;0.6833;0.6902;0.8753;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 430};SVC(C=10, probability=True, random_state=430)
LogisticRegression;0.709;0.7251;0.709;0.7082;0.7014;0.72;0.7014;0.6995;0.6833;0.6937;0.6833;0.6862;0.8686;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.706;0.7212;0.706;0.7044;0.6736;0.6981;0.6736;0.6776;0.6833;0.6937;0.6833;0.6862;0.872;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6952;0.7095;0.6952;0.694;0.7778;0.8051;0.7778;0.7773;0.6833;0.6937;0.6833;0.6862;0.8646;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.7045;0.7224;0.7045;0.7032;0.7153;0.7221;0.7153;0.7126;0.6833;0.6878;0.6833;0.6846;0.8678;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
MLPClassifier;0.7137;0.7257;0.7137;0.7126;0.8194;0.8367;0.8194;0.8227;0.6833;0.6893;0.6833;0.6844;0.8962;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 958, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=958)
DecisionTreeClassifier;0.8696;0.8721;0.8696;0.869;0.7986;0.8057;0.7986;0.7996;0.6833;0.6853;0.6833;0.684;0.9022;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 3};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=3)
SVC;0.7307;0.7728;0.7307;0.7294;0.8056;0.8378;0.8056;0.8044;0.6667;0.7113;0.6667;0.6739;0.8667;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 454};SVC(C=10, probability=True, random_state=454)
LogisticRegression;0.6953;0.7094;0.6953;0.6937;0.7153;0.7237;0.7153;0.7156;0.6667;0.6796;0.6667;0.6705;0.8664;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.7068;0.724;0.7068;0.7063;0.7292;0.7589;0.7292;0.7308;0.6667;0.6856;0.6667;0.6704;0.8672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7091;0.7236;0.7091;0.7079;0.6667;0.692;0.6667;0.6673;0.6667;0.6729;0.6667;0.6686;0.8703;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.7075;0.7206;0.7075;0.7062;0.6806;0.6874;0.6806;0.6741;0.6667;0.6686;0.6667;0.6674;0.8696;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.7068;0.7191;0.7068;0.7047;0.6736;0.6827;0.6736;0.6686;0.6667;0.6686;0.6667;0.6674;0.8699;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7152;0.7291;0.7152;0.7137;0.6111;0.6153;0.6111;0.6048;0.6667;0.6686;0.6667;0.6674;0.8737;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7045;0.7202;0.7045;0.7033;0.6667;0.7061;0.6667;0.6711;0.65;0.6681;0.65;0.6544;0.8709;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7029;0.7188;0.7029;0.7015;0.6875;0.7186;0.6875;0.685;0.65;0.6582;0.65;0.6523;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6999;0.717;0.6999;0.6987;0.6944;0.7004;0.6944;0.6947;0.65;0.6582;0.65;0.6523;0.8686;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.693;0.7079;0.693;0.6918;0.7014;0.7051;0.7014;0.6961;0.65;0.6582;0.65;0.6523;0.8664;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7083;0.7279;0.7083;0.7076;0.6528;0.6697;0.6528;0.6499;0.65;0.6531;0.65;0.6508;0.8723;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.7038;0.7167;0.7038;0.7025;0.6944;0.6985;0.6944;0.6944;0.65;0.6531;0.65;0.6508;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.6959;0.7111;0.6959;0.695;0.7431;0.7511;0.7431;0.7447;0.6333;0.6377;0.6333;0.6338;0.8672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
LogisticRegression;0.6953;0.7113;0.6953;0.6939;0.6944;0.7247;0.6944;0.6968;0.6167;0.6494;0.6167;0.6235;0.8701;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 253, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=253)"
LogisticRegression;0.6952;0.7093;0.6952;0.6939;0.7222;0.766;0.7222;0.7259;0.6167;0.6494;0.6167;0.6235;0.8669;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 211, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=211)"
LogisticRegression;0.7014;0.7179;0.7014;0.7013;0.7014;0.7494;0.7014;0.7074;0.6167;0.6494;0.6167;0.6235;0.8667;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 936, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=936)"
