Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8261;0.8369;0.8261;0.8267;0.8116;0.8088;0.8116;0.81;0.9167;0.9167;0.9167;0.9167;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
MLPClassifier;0.8374;0.8463;0.8374;0.8378;0.7536;0.7787;0.7536;0.7548;0.8833;0.8868;0.8833;0.884;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
SVC;0.8213;0.8298;0.8213;0.8215;0.8116;0.8155;0.8116;0.8127;0.8833;0.8894;0.8833;0.8839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 818};SVC(C=10, random_state=818)
KNeighborsClassifier;0.8084;0.8167;0.8084;0.8093;0.7971;0.8101;0.7971;0.8006;0.8833;0.8848;0.8833;0.8837;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7842;0.8015;0.7842;0.7847;0.8406;0.8556;0.8406;0.8435;0.8833;0.8848;0.8833;0.8837;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7906;0.8;0.7906;0.7912;0.7681;0.7716;0.7681;0.7696;0.8833;0.8848;0.8833;0.8837;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8214;0.8342;0.8214;0.8223;0.8261;0.8348;0.8261;0.8272;0.8833;0.8833;0.8833;0.8833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
MLPClassifier;0.8229;0.8306;0.8229;0.8233;0.8116;0.8102;0.8116;0.8091;0.8833;0.8833;0.8833;0.8833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
KNeighborsClassifier;0.8099;0.8155;0.8099;0.81;0.8406;0.8452;0.8406;0.842;0.8833;0.884;0.8833;0.8833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8277;0.8353;0.8277;0.8279;0.8116;0.8085;0.8116;0.8093;0.8833;0.8857;0.8833;0.8831;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
RandomForestClassifier;0.8343;0.842;0.8343;0.8352;0.8986;0.8997;0.8986;0.8988;0.8667;0.8759;0.8667;0.8684;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 311};RandomForestClassifier(n_estimators=5, random_state=311)
DecisionTreeClassifier;0.8406;0.8553;0.8406;0.8429;0.8261;0.8302;0.8261;0.8226;0.8667;0.8799;0.8667;0.868;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
RandomForestClassifier;0.8341;0.8422;0.8341;0.8349;0.9275;0.9336;0.9275;0.9286;0.8667;0.8819;0.8667;0.868;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 247};RandomForestClassifier(n_estimators=10, random_state=247)
KNeighborsClassifier;0.8164;0.8277;0.8164;0.8186;0.7971;0.804;0.7971;0.7946;0.8667;0.8739;0.8667;0.8679;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8502;0.8551;0.8502;0.8498;0.8406;0.8385;0.8406;0.8385;0.8667;0.8806;0.8667;0.8675;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 625};RandomForestClassifier(n_estimators=10, random_state=625)
RandomForestClassifier;0.8631;0.8719;0.8631;0.864;0.7971;0.7994;0.7971;0.798;0.8667;0.8704;0.8667;0.8674;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 247};RandomForestClassifier(n_estimators=10, random_state=247)
RandomForestClassifier;0.8292;0.8393;0.8292;0.8295;0.8986;0.8986;0.8986;0.8986;0.8667;0.869;0.8667;0.8674;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 625};RandomForestClassifier(n_estimators=10, random_state=625)
KNeighborsClassifier;0.7956;0.8083;0.7956;0.7959;0.8551;0.8764;0.8551;0.8545;0.8667;0.8692;0.8667;0.8669;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7922;0.8081;0.7922;0.7923;0.8551;0.8651;0.8551;0.8575;0.8667;0.8692;0.8667;0.8669;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.8196;0.831;0.8196;0.8198;0.7681;0.8083;0.7681;0.7738;0.8667;0.875;0.8667;0.8668;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 748};SVC(C=10, random_state=748)
KNeighborsClassifier;0.8212;0.828;0.8212;0.8222;0.7971;0.805;0.7971;0.7986;0.8667;0.8667;0.8667;0.8667;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8084;0.8173;0.8084;0.8092;0.8116;0.8188;0.8116;0.8136;0.8667;0.8667;0.8667;0.8667;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8228;0.8311;0.8228;0.8239;0.7681;0.7892;0.7681;0.7726;0.8667;0.8667;0.8667;0.8667;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8116;0.8225;0.8116;0.8126;0.8696;0.8738;0.8696;0.8699;0.8667;0.8672;0.8667;0.8666;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
RandomForestClassifier;0.847;0.8531;0.847;0.848;0.8261;0.8377;0.8261;0.8291;0.8667;0.8724;0.8667;0.8662;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 311};RandomForestClassifier(n_estimators=10, random_state=311)
RandomForestClassifier;0.8358;0.841;0.8358;0.8362;0.8406;0.8484;0.8406;0.842;0.85;0.864;0.85;0.8518;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 311};RandomForestClassifier(n_estimators=10, random_state=311)
RandomForestClassifier;0.8228;0.8275;0.8228;0.8224;0.8986;0.9159;0.8986;0.8987;0.85;0.8611;0.85;0.8517;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 625};RandomForestClassifier(n_estimators=20, random_state=625)
MLPClassifier;0.81;0.8245;0.81;0.8106;0.8406;0.858;0.8406;0.8429;0.85;0.8541;0.85;0.851;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
RandomForestClassifier;0.8551;0.8611;0.8551;0.8557;0.8116;0.821;0.8116;0.8146;0.85;0.8541;0.85;0.851;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 625};RandomForestClassifier(n_estimators=20, random_state=625)
MLPClassifier;0.8228;0.8321;0.8228;0.8232;0.8116;0.8195;0.8116;0.8131;0.85;0.8542;0.85;0.8506;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
SVC;0.8164;0.829;0.8164;0.818;0.8551;0.8746;0.8551;0.8528;0.85;0.8686;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
SVC;0.8212;0.8307;0.8212;0.8226;0.7101;0.7393;0.7101;0.7062;0.85;0.8686;0.85;0.8504;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 748};SVC(C=10, random_state=748)
KNeighborsClassifier;0.8034;0.8096;0.8034;0.803;0.8116;0.8472;0.8116;0.8126;0.85;0.8505;0.85;0.8499;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8132;0.824;0.8132;0.8149;0.8406;0.8573;0.8406;0.8422;0.85;0.8544;0.85;0.8499;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
KNeighborsClassifier;0.81;0.8227;0.81;0.812;0.8261;0.8317;0.8261;0.8269;0.85;0.8505;0.85;0.8499;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8198;0.8317;0.8198;0.8203;0.8551;0.8576;0.8551;0.8556;0.85;0.8519;0.85;0.8498;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
MLPClassifier;0.8003;0.8117;0.8003;0.8013;0.8696;0.8824;0.8696;0.8714;0.85;0.8519;0.85;0.8498;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
MLPClassifier;0.8244;0.8381;0.8244;0.8252;0.8116;0.8151;0.8116;0.811;0.85;0.8519;0.85;0.8498;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
KNeighborsClassifier;0.789;0.8034;0.789;0.7901;0.8116;0.8155;0.8116;0.8127;0.85;0.852;0.85;0.8497;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8534;0.8623;0.8534;0.854;0.8116;0.8175;0.8116;0.8137;0.85;0.8583;0.85;0.8497;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 625};RandomForestClassifier(n_estimators=20, random_state=625)
RandomForestClassifier;0.8615;0.8692;0.8615;0.862;0.7826;0.7824;0.7826;0.7822;0.85;0.8558;0.85;0.8495;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 311};RandomForestClassifier(n_estimators=20, random_state=311)
KNeighborsClassifier;0.7889;0.8008;0.7889;0.7881;0.8261;0.8227;0.8261;0.8233;0.85;0.8497;0.85;0.8495;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8342;0.8431;0.8342;0.8341;0.8986;0.8972;0.8986;0.8976;0.85;0.8577;0.85;0.8488;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
MLPClassifier;0.8179;0.8286;0.8179;0.819;0.8986;0.9171;0.8986;0.8946;0.85;0.8493;0.85;0.8486;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
SVC;0.8115;0.8219;0.8115;0.8125;0.8696;0.8726;0.8696;0.87;0.8333;0.862;0.8333;0.8361;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 748};SVC(C=10, random_state=748)
SVC;0.8084;0.8213;0.8084;0.8095;0.8841;0.8841;0.8841;0.8841;0.8333;0.8429;0.8333;0.8358;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 818};SVC(C=10, random_state=818)
SVC;0.8229;0.8321;0.8229;0.8241;0.8116;0.8307;0.8116;0.8127;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 748};SVC(C=0.1, kernel='linear', random_state=748)
SVC;0.826;0.8379;0.826;0.8259;0.8116;0.8202;0.8116;0.8143;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 748};SVC(C=0.1, kernel='linear', random_state=748)
SVC;0.8213;0.8351;0.8213;0.8225;0.7826;0.7829;0.7826;0.7825;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 748};SVC(C=0.1, kernel='linear', random_state=748)
SVC;0.8195;0.8331;0.8195;0.8203;0.8261;0.8323;0.8261;0.8275;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 748};SVC(C=10, kernel='linear', random_state=748)
SVC;0.8196;0.8291;0.8196;0.8206;0.7971;0.8203;0.7971;0.7977;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 818};SVC(C=0.1, kernel='linear', random_state=818)
SVC;0.8179;0.8298;0.8179;0.8195;0.7826;0.7966;0.7826;0.7835;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 65};SVC(C=1, kernel='linear', random_state=65)
SVC;0.8117;0.8245;0.8117;0.8122;0.8406;0.8506;0.8406;0.8435;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 65};SVC(C=1, kernel='linear', random_state=65)
SVC;0.8229;0.8317;0.8229;0.8237;0.7681;0.7745;0.7681;0.7692;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 65};SVC(C=10, kernel='linear', random_state=65)
SVC;0.815;0.8284;0.815;0.8163;0.8406;0.8516;0.8406;0.8415;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 65};SVC(C=1, kernel='linear', random_state=65)
SVC;0.8148;0.8239;0.8148;0.8156;0.8261;0.8317;0.8261;0.8278;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 65};SVC(C=0.1, kernel='linear', random_state=65)
SVC;0.8197;0.8281;0.8197;0.8203;0.8551;0.8681;0.8551;0.8582;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 65};SVC(C=1, kernel='linear', random_state=65)
SVC;0.8149;0.8269;0.8149;0.8155;0.8406;0.8406;0.8406;0.8398;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 65};SVC(C=1, kernel='linear', random_state=65)
SVC;0.8083;0.8203;0.8083;0.809;0.8696;0.8778;0.8696;0.8715;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 818};SVC(C=0.1, kernel='linear', random_state=818)
SVC;0.8182;0.8267;0.8182;0.8194;0.7971;0.7975;0.7971;0.7971;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 818};SVC(C=0.1, kernel='linear', random_state=818)
SVC;0.8197;0.8324;0.8197;0.8202;0.7971;0.8132;0.7971;0.799;0.8333;0.85;0.8333;0.8357;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 818};SVC(C=1, kernel='linear', random_state=818)
MLPClassifier;0.8212;0.8356;0.8212;0.8215;0.8116;0.8209;0.8116;0.8132;0.8333;0.8489;0.8333;0.8352;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
RandomForestClassifier;0.8358;0.8452;0.8358;0.8372;0.8116;0.812;0.8116;0.8115;0.8333;0.8524;0.8333;0.835;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 247};RandomForestClassifier(n_estimators=10, random_state=247)
KNeighborsClassifier;0.7971;0.8132;0.7971;0.7967;0.7681;0.8073;0.7681;0.7695;0.8333;0.8409;0.8333;0.8349;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8229;0.8336;0.8229;0.8239;0.7536;0.7923;0.7536;0.7571;0.8333;0.8478;0.8333;0.8347;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 818};SVC(C=10, random_state=818)
SVC;0.815;0.8243;0.815;0.8148;0.8116;0.8309;0.8116;0.8146;0.8333;0.8478;0.8333;0.8347;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 65};SVC(C=10, random_state=65)
RandomForestClassifier;0.8373;0.8455;0.8373;0.8377;0.8261;0.8377;0.8261;0.8291;0.8333;0.8411;0.8333;0.8346;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 625};RandomForestClassifier(n_estimators=20, random_state=625)
RandomForestClassifier;0.8438;0.8531;0.8438;0.8445;0.8551;0.8589;0.8551;0.8539;0.8333;0.8411;0.8333;0.8346;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
RandomForestClassifier;0.8518;0.8593;0.8518;0.8521;0.8261;0.8254;0.8261;0.8247;0.8333;0.8411;0.8333;0.8346;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 311};RandomForestClassifier(n_estimators=10, random_state=311)
MLPClassifier;0.8083;0.8185;0.8083;0.8085;0.8551;0.8675;0.8551;0.8566;0.8333;0.8413;0.8333;0.834;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
RandomForestClassifier;0.8326;0.8425;0.8326;0.8324;0.913;0.9224;0.913;0.9145;0.8333;0.8413;0.8333;0.834;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 311};RandomForestClassifier(n_estimators=20, random_state=311)
KNeighborsClassifier;0.8035;0.8218;0.8035;0.8065;0.8551;0.8625;0.8551;0.8519;0.8333;0.8372;0.8333;0.8339;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8519;0.8576;0.8519;0.8516;0.8406;0.8409;0.8406;0.8397;0.8333;0.8388;0.8333;0.8337;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 311};RandomForestClassifier(n_estimators=20, random_state=311)
MLPClassifier;0.8228;0.8295;0.8228;0.8229;0.7971;0.8006;0.7971;0.7981;0.8333;0.8339;0.8333;0.8333;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
MLPClassifier;0.8115;0.8213;0.8115;0.813;0.8551;0.8624;0.8551;0.8558;0.8333;0.8339;0.8333;0.8333;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
MLPClassifier;0.8165;0.8278;0.8165;0.818;0.8986;0.9062;0.8986;0.8979;0.8333;0.8339;0.8333;0.8333;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
MLPClassifier;0.839;0.8502;0.839;0.84;0.6232;0.6169;0.6232;0.6127;0.8333;0.8339;0.8333;0.8333;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
MLPClassifier;0.8181;0.8296;0.8181;0.8191;0.8261;0.83;0.8261;0.8261;0.8333;0.8333;0.8333;0.8333;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
KNeighborsClassifier;0.8018;0.8107;0.8018;0.8028;0.7536;0.77;0.7536;0.756;0.8333;0.8357;0.8333;0.8331;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8099;0.826;0.8099;0.8108;0.7826;0.8204;0.7826;0.7883;0.8333;0.8331;0.8333;0.8329;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.839;0.8473;0.839;0.8396;0.8696;0.873;0.8696;0.8704;0.8333;0.8448;0.8333;0.8329;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 311};RandomForestClassifier(n_estimators=20, random_state=311)
MLPClassifier;0.8165;0.8254;0.8165;0.8165;0.8261;0.8389;0.8261;0.828;0.8333;0.8333;0.8333;0.8323;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
KNeighborsClassifier;0.8052;0.8167;0.8052;0.8059;0.8116;0.8206;0.8116;0.8138;0.8333;0.8361;0.8333;0.8315;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
DecisionTreeClassifier;0.8326;0.8463;0.8326;0.8343;0.8116;0.8214;0.8116;0.8122;0.8167;0.8519;0.8167;0.8217;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 510};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=510)
RandomForestClassifier;0.8406;0.8484;0.8406;0.8416;0.8696;0.8774;0.8696;0.8702;0.8167;0.8305;0.8167;0.8194;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 625};RandomForestClassifier(n_estimators=10, random_state=625)
SVC;0.8196;0.8316;0.8196;0.8207;0.8116;0.8122;0.8116;0.8101;0.8167;0.8365;0.8167;0.8194;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 818};SVC(C=10, random_state=818)
SVC;0.81;0.8245;0.81;0.8114;0.7826;0.7958;0.7826;0.7852;0.8167;0.8386;0.8167;0.8194;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 748};SVC(C=10, random_state=748)
MLPClassifier;0.8116;0.8235;0.8116;0.8114;0.8551;0.8593;0.8551;0.8561;0.8167;0.8386;0.8167;0.8194;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
DecisionTreeClassifier;0.8259;0.8379;0.8259;0.8286;0.8696;0.8719;0.8696;0.8705;0.8167;0.8319;0.8167;0.8187;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 510};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=510)
DecisionTreeClassifier;0.8278;0.8384;0.8278;0.8289;0.7971;0.8024;0.7971;0.7897;0.8167;0.8373;0.8167;0.8186;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=860)
RandomForestClassifier;0.8454;0.85;0.8454;0.8458;0.8551;0.8556;0.8551;0.855;0.8167;0.8253;0.8167;0.8183;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 625};RandomForestClassifier(n_estimators=20, random_state=625)
RandomForestClassifier;0.8534;0.8605;0.8534;0.8536;0.8116;0.8196;0.8116;0.8116;0.8167;0.8253;0.8167;0.8183;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
MLPClassifier;0.8147;0.8257;0.8147;0.8145;0.8841;0.8981;0.8841;0.8847;0.8167;0.8234;0.8167;0.8178;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
MLPClassifier;0.8244;0.8345;0.8244;0.8249;0.7971;0.8177;0.7971;0.8;0.8167;0.818;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
RandomForestClassifier;0.8406;0.8478;0.8406;0.8415;0.7971;0.8266;0.7971;0.798;0.8167;0.8273;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 311};RandomForestClassifier(n_estimators=5, random_state=311)
MLPClassifier;0.8148;0.8238;0.8148;0.8162;0.7681;0.7858;0.7681;0.7685;0.8167;0.818;0.8167;0.817;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
MLPClassifier;0.8196;0.8292;0.8196;0.8209;0.8116;0.8256;0.8116;0.8126;0.8167;0.819;0.8167;0.8168;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
MLPClassifier;0.8261;0.832;0.8261;0.8265;0.8261;0.8394;0.8261;0.8276;0.8167;0.8167;0.8167;0.8167;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 712, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=712)
KNeighborsClassifier;0.7986;0.8087;0.7986;0.799;0.7971;0.8249;0.7971;0.7973;0.8167;0.8171;0.8167;0.8166;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7906;0.8022;0.7906;0.7915;0.7971;0.8001;0.7971;0.7975;0.8167;0.8171;0.8167;0.8166;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.797;0.8044;0.797;0.797;0.7971;0.8123;0.7971;0.7991;0.8167;0.8195;0.8167;0.8148;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7907;0.8056;0.7907;0.791;0.8406;0.858;0.8406;0.8429;0.8167;0.8212;0.8167;0.8146;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1)
SVC;0.8148;0.8272;0.8148;0.8159;0.8551;0.8666;0.8551;0.8575;0.8;0.8301;0.8;0.8039;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 748};SVC(C=10, random_state=748)
SVC;0.8181;0.8277;0.8181;0.8189;0.7971;0.8202;0.7971;0.7965;0.8;0.8301;0.8;0.8039;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 818};SVC(C=10, random_state=818)
RandomForestClassifier;0.8439;0.8483;0.8439;0.844;0.8551;0.8576;0.8551;0.8556;0.8;0.8101;0.8;0.8024;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 625};RandomForestClassifier(n_estimators=20, random_state=625)
MLPClassifier;0.8132;0.8229;0.8132;0.8131;0.8696;0.8854;0.8696;0.8676;0.8;0.813;0.8;0.8023;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
KNeighborsClassifier;0.7793;0.7846;0.7793;0.7777;0.8696;0.875;0.8696;0.8702;0.8;0.8093;0.8;0.8017;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
RandomForestClassifier;0.8294;0.8358;0.8294;0.8298;0.8116;0.8101;0.8116;0.8106;0.8;0.8125;0.8;0.8016;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 625};RandomForestClassifier(n_estimators=20, random_state=625)
RandomForestClassifier;0.8453;0.8523;0.8453;0.8458;0.8261;0.8466;0.8261;0.8301;0.8;0.8125;0.8;0.8016;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
DecisionTreeClassifier;0.8454;0.8546;0.8454;0.8468;0.7536;0.7589;0.7536;0.7531;0.8;0.8109;0.8;0.8014;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=860)
LogisticRegression;0.8132;0.8209;0.8132;0.8144;0.8116;0.8145;0.8116;0.8128;0.8;0.8054;0.8;0.8013;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8116;0.8194;0.8116;0.8118;0.8261;0.8429;0.8261;0.8277;0.8;0.8054;0.8;0.8013;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
KNeighborsClassifier;0.7875;0.801;0.7875;0.7868;0.8696;0.8681;0.8696;0.8686;0.8;0.8038;0.8;0.801;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8374;0.8485;0.8374;0.8383;0.8841;0.8862;0.8841;0.8839;0.8;0.8115;0.8;0.8007;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 510};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=510)
MLPClassifier;0.8245;0.8335;0.8245;0.8247;0.7681;0.79;0.7681;0.7739;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 876, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=876)
MLPClassifier;0.8197;0.8292;0.8197;0.8204;0.7971;0.8066;0.7971;0.7964;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 440, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=440)
SVC;0.81;0.8217;0.81;0.8107;0.8551;0.8693;0.8551;0.8532;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 818};SVC(C=10, kernel='linear', random_state=818)
SVC;0.8132;0.8207;0.8132;0.8139;0.8116;0.8219;0.8116;0.8139;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 65};SVC(C=1, kernel='linear', random_state=65)
LogisticRegression;0.8118;0.8216;0.8118;0.8127;0.8261;0.8305;0.8261;0.8272;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.8066;0.8134;0.8066;0.8069;0.8406;0.8563;0.8406;0.8439;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
SVC;0.8036;0.8174;0.8036;0.8053;0.8986;0.9022;0.8986;0.8983;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 748};SVC(C=10, kernel='linear', random_state=748)
LogisticRegression;0.81;0.8167;0.81;0.8105;0.8261;0.8311;0.8261;0.8266;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8085;0.8176;0.8085;0.8095;0.8551;0.8536;0.8551;0.8519;0.8;0.8013;0.8;0.8003;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
DecisionTreeClassifier;0.8357;0.8499;0.8357;0.8368;0.8116;0.8132;0.8116;0.8121;0.8;0.8049;0.8;0.8002;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 510};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=510)
LogisticRegression;0.8148;0.8221;0.8148;0.8159;0.7826;0.7824;0.7826;0.7816;0.8;0.7997;0.8;0.7995;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
RandomForestClassifier;0.8405;0.8502;0.8405;0.8398;0.8551;0.8747;0.8551;0.8584;0.8;0.805;0.8;0.7993;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
LogisticRegression;0.8035;0.8115;0.8035;0.8037;0.8696;0.8689;0.8696;0.8673;0.8;0.7987;0.8;0.798;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8101;0.8192;0.8101;0.8094;0.8261;0.8378;0.8261;0.8295;0.8;0.7987;0.8;0.798;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8101;0.8187;0.8101;0.8114;0.8261;0.8381;0.8261;0.8277;0.8;0.7987;0.8;0.798;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
DecisionTreeClassifier;0.8292;0.8401;0.8292;0.8302;0.8116;0.826;0.8116;0.8059;0.7833;0.7986;0.7833;0.7854;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=365)
LogisticRegression;0.81;0.8186;0.81;0.8095;0.7826;0.8116;0.7826;0.7881;0.7833;0.7913;0.7833;0.7852;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
DecisionTreeClassifier;0.8357;0.8453;0.8357;0.8368;0.7681;0.7813;0.7681;0.7721;0.7833;0.797;0.7833;0.7852;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8438;0.854;0.8438;0.8454;0.7971;0.8;0.7971;0.7983;0.7833;0.797;0.7833;0.7852;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
KNeighborsClassifier;0.8051;0.8125;0.8051;0.8044;0.7681;0.7805;0.7681;0.7665;0.7833;0.7972;0.7833;0.785;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
DecisionTreeClassifier;0.8292;0.8378;0.8292;0.83;0.8696;0.873;0.8696;0.8704;0.7833;0.7904;0.7833;0.7847;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=860)
RandomForestClassifier;0.8341;0.8416;0.8341;0.8349;0.8696;0.8687;0.8696;0.8689;0.7833;0.7898;0.7833;0.784;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 247};RandomForestClassifier(n_estimators=20, random_state=247)
DecisionTreeClassifier;0.8422;0.8529;0.8422;0.8432;0.7826;0.7992;0.7826;0.7867;0.7833;0.7917;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
LogisticRegression;0.8067;0.8149;0.8067;0.8071;0.8406;0.8499;0.8406;0.842;0.7833;0.7863;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
LogisticRegression;0.8117;0.8221;0.8117;0.8122;0.8261;0.8342;0.8261;0.8273;0.7833;0.7863;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.8147;0.8238;0.8147;0.8156;0.7681;0.8025;0.7681;0.7715;0.7833;0.7863;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
LogisticRegression;0.8149;0.8248;0.8149;0.8159;0.7971;0.804;0.7971;0.7951;0.7833;0.7863;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.8148;0.8238;0.8148;0.8159;0.8116;0.8227;0.8116;0.813;0.7833;0.7863;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
DecisionTreeClassifier;0.831;0.8435;0.831;0.8316;0.8551;0.8701;0.8551;0.8581;0.7833;0.7917;0.7833;0.7839;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=860)
RandomForestClassifier;0.8407;0.8484;0.8407;0.8409;0.7536;0.756;0.7536;0.7539;0.7833;0.7847;0.7833;0.7837;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 247};RandomForestClassifier(n_estimators=5, random_state=247)
DecisionTreeClassifier;0.8292;0.841;0.8292;0.8309;0.8986;0.9028;0.8986;0.8997;0.7833;0.7857;0.7833;0.7835;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
LogisticRegression;0.8131;0.8217;0.8131;0.8133;0.7826;0.7885;0.7826;0.784;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
LogisticRegression;0.8051;0.8115;0.8051;0.8061;0.8261;0.8309;0.8261;0.8278;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8179;0.8285;0.8179;0.8188;0.7536;0.7511;0.7536;0.7514;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.8053;0.8178;0.8053;0.8061;0.8406;0.8416;0.8406;0.8408;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.818;0.8229;0.818;0.8182;0.7391;0.7454;0.7391;0.7413;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8019;0.8109;0.8019;0.8025;0.8841;0.8841;0.8841;0.8841;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
LogisticRegression;0.8116;0.8177;0.8116;0.8119;0.8406;0.8458;0.8406;0.8409;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8101;0.8188;0.8101;0.8107;0.8261;0.8313;0.8261;0.8264;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
LogisticRegression;0.8083;0.8179;0.8083;0.8089;0.8696;0.8778;0.8696;0.8715;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
LogisticRegression;0.8228;0.8303;0.8228;0.8232;0.7826;0.8024;0.7826;0.7834;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8212;0.83;0.8212;0.8216;0.7246;0.7285;0.7246;0.7259;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 144, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=144)"
LogisticRegression;0.8181;0.826;0.8181;0.8183;0.7391;0.7381;0.7391;0.7379;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
LogisticRegression;0.815;0.8252;0.815;0.8159;0.7826;0.7772;0.7826;0.7782;0.7833;0.7833;0.7833;0.7833;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
DecisionTreeClassifier;0.8309;0.8421;0.8309;0.831;0.8696;0.8755;0.8696;0.8708;0.7667;0.7917;0.7667;0.7709;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=860)
DecisionTreeClassifier;0.8406;0.8534;0.8406;0.8423;0.7826;0.7836;0.7826;0.7824;0.7667;0.7897;0.7667;0.7698;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 510};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=510)
DecisionTreeClassifier;0.8343;0.846;0.8343;0.8351;0.8261;0.8314;0.8261;0.827;0.7667;0.7825;0.7667;0.7697;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=860)
KNeighborsClassifier;0.8067;0.8185;0.8067;0.8069;0.8551;0.8593;0.8551;0.8561;0.7667;0.7789;0.7667;0.7682;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.81;0.8262;0.81;0.8096;0.7826;0.793;0.7826;0.7862;0.7667;0.7789;0.7667;0.7682;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7938;0.8029;0.7938;0.794;0.8696;0.8696;0.8696;0.8696;0.7667;0.7789;0.7667;0.7682;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7922;0.7981;0.7922;0.7915;0.7681;0.7969;0.7681;0.7697;0.7667;0.7765;0.7667;0.7672;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8358;0.8466;0.8358;0.837;0.7826;0.8004;0.7826;0.7866;0.7667;0.7702;0.7667;0.7671;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8438;0.8548;0.8438;0.8455;0.8116;0.8139;0.8116;0.812;0.7667;0.7702;0.7667;0.7671;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=365)
LogisticRegression;0.81;0.8172;0.81;0.8106;0.8116;0.8314;0.8116;0.8149;0.7667;0.7679;0.7667;0.767;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 886, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=886)"
RandomForestClassifier;0.8357;0.8413;0.8357;0.8362;0.8116;0.8195;0.8116;0.8131;0.7667;0.7731;0.7667;0.7663;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 311};RandomForestClassifier(n_estimators=20, random_state=311)
DecisionTreeClassifier;0.8423;0.8505;0.8423;0.8434;0.8116;0.8091;0.8116;0.8069;0.7667;0.7889;0.7667;0.7661;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8292;0.8444;0.8292;0.8309;0.7826;0.7799;0.7826;0.781;0.75;0.7593;0.75;0.7512;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=860)
DecisionTreeClassifier;0.8598;0.8697;0.8598;0.8601;0.7536;0.7812;0.7536;0.7536;0.75;0.754;0.75;0.751;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 510};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=510)
DecisionTreeClassifier;0.8294;0.8464;0.8294;0.831;0.8116;0.8294;0.8116;0.816;0.75;0.754;0.75;0.751;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 510};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=510)
DecisionTreeClassifier;0.8486;0.8562;0.8486;0.8497;0.8986;0.9006;0.8986;0.8984;0.75;0.754;0.75;0.751;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 510};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=510)
DecisionTreeClassifier;0.8503;0.8573;0.8503;0.8496;0.8116;0.8234;0.8116;0.8121;0.75;0.754;0.75;0.751;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 860};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=860)
DecisionTreeClassifier;0.8292;0.8385;0.8292;0.8313;0.8116;0.8151;0.8116;0.8103;0.75;0.7666;0.75;0.7503;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8132;0.8282;0.8132;0.8153;0.8406;0.8466;0.8406;0.8373;0.75;0.7666;0.75;0.7503;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 860};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=860)
DecisionTreeClassifier;0.8406;0.8476;0.8406;0.8419;0.7826;0.7822;0.7826;0.7807;0.7333;0.746;0.7333;0.7344;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 510};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=510)
DecisionTreeClassifier;0.8487;0.8624;0.8487;0.8502;0.7971;0.8177;0.7971;0.8;0.7333;0.746;0.7333;0.7344;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 860};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=860)
DecisionTreeClassifier;0.8389;0.8508;0.8389;0.8396;0.7536;0.765;0.7536;0.7573;0.7333;0.7358;0.7333;0.7325;smote;250;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 10, 'random_state': 510};DecisionTreeClassifier(max_depth=5, min_samples_leaf=10, random_state=510)
