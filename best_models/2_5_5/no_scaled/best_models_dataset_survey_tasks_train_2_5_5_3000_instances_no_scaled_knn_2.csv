Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8362;0.8418;0.8362;0.8367;0.8613;0.863;0.8613;0.8619;0.8667;0.8709;0.8667;0.8663;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8342;0.8377;0.8342;0.8338;0.8412;0.8399;0.8412;0.8368;0.8667;0.8709;0.8667;0.8663;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8491;0.8506;0.8491;0.849;0.8669;0.8677;0.8669;0.8672;0.85;0.8565;0.85;0.8493;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8444;0.8468;0.8444;0.8444;0.8322;0.8346;0.8322;0.8313;0.85;0.8514;0.85;0.8483;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8315;0.8367;0.8315;0.8312;0.8579;0.8567;0.8579;0.857;0.8333;0.8388;0.8333;0.8337;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8376;0.8429;0.8376;0.8384;0.8445;0.8435;0.8445;0.8438;0.8333;0.8341;0.8333;0.8327;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8494;0.8508;0.8494;0.849;0.8602;0.8634;0.8602;0.8611;0.8333;0.8341;0.8333;0.8327;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8326;0.8349;0.8326;0.8323;0.8602;0.8597;0.8602;0.8597;0.8333;0.8366;0.8333;0.8307;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8309;0.837;0.8309;0.8308;0.8591;0.8597;0.8591;0.8593;0.8167;0.8246;0.8167;0.8174;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8379;0.8422;0.8379;0.8382;0.8647;0.8662;0.8647;0.8653;0.8167;0.8181;0.8167;0.817;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8468;0.8479;0.8468;0.8462;0.8669;0.8686;0.8669;0.8675;0.8167;0.8181;0.8167;0.817;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8469;0.8498;0.8469;0.8468;0.8837;0.8842;0.8837;0.8839;0.8167;0.819;0.8167;0.8164;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8415;0.8476;0.8415;0.8428;0.8266;0.8282;0.8266;0.8273;0.8167;0.8184;0.8167;0.8153;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.834;0.8356;0.834;0.8337;0.8523;0.8506;0.8523;0.8509;0.8167;0.8194;0.8167;0.8142;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8453;0.8475;0.8453;0.8451;0.8445;0.8536;0.8445;0.8469;0.8;0.8228;0.8;0.8036;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.843;0.846;0.843;0.8436;0.8479;0.8505;0.8479;0.8484;0.8;0.8042;0.8;0.801;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8438;0.8463;0.8438;0.8429;0.8523;0.8548;0.8523;0.8531;0.8;0.8042;0.8;0.801;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8356;0.8398;0.8356;0.8354;0.8647;0.8715;0.8647;0.8663;0.8;0.8042;0.8;0.801;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8389;0.8421;0.8389;0.8388;0.8546;0.854;0.8546;0.8542;0.8;0.8049;0.8;0.7999;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8469;0.8488;0.8469;0.847;0.8691;0.8687;0.8691;0.8689;0.8;0.8005;0.8;0.7999;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8379;0.8435;0.8379;0.8386;0.868;0.8695;0.868;0.8683;0.8;0.8014;0.8;0.7998;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.838;0.8436;0.838;0.8387;0.8523;0.852;0.8523;0.8519;0.8;0.8028;0.8;0.7991;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8248;0.8299;0.8248;0.8242;0.8568;0.8588;0.8568;0.8571;0.8;0.799;0.8;0.7985;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8521;0.8564;0.8521;0.8527;0.8535;0.8539;0.8535;0.8536;0.8;0.8042;0.8;0.7968;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8439;0.8465;0.8439;0.8434;0.8512;0.8638;0.8512;0.8526;0.7833;0.8037;0.7833;0.788;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8491;0.8536;0.8491;0.8495;0.8512;0.8516;0.8512;0.8513;0.7833;0.7973;0.7833;0.7857;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8443;0.8465;0.8443;0.8445;0.8702;0.872;0.8702;0.8709;0.7833;0.7883;0.7833;0.7827;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8413;0.8427;0.8413;0.8405;0.8591;0.8608;0.8591;0.8597;0.7833;0.7883;0.7833;0.7827;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8453;0.8465;0.8453;0.8454;0.8691;0.8684;0.8691;0.8687;0.7833;0.787;0.7833;0.7815;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8272;0.83;0.8272;0.8266;0.8456;0.8465;0.8456;0.8441;0.7833;0.7834;0.7833;0.7734;smote;3000;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
