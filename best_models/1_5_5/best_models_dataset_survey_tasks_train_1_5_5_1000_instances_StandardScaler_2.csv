Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8477;0.8517;0.8477;0.8477;0.8724;0.8729;0.8724;0.8726;0.8667;0.8737;0.8667;0.8625;0.9528;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 207};RandomForestClassifier(n_estimators=20, random_state=207)
KNeighborsClassifier;0.8297;0.8366;0.8297;0.829;0.8552;0.8558;0.8552;0.8547;0.85;0.8541;0.85;0.8473;0.9331;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8488;0.8513;0.8488;0.849;0.7897;0.7891;0.7897;0.7886;0.85;0.8483;0.85;0.8467;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
MLPClassifier;0.8511;0.8524;0.8511;0.8505;0.8379;0.8434;0.8379;0.8386;0.85;0.8523;0.85;0.8466;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8503;0.8514;0.8503;0.8502;0.8414;0.8412;0.8414;0.8412;0.85;0.8523;0.85;0.8466;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8557;0.8569;0.8557;0.8553;0.8069;0.8088;0.8069;0.8066;0.85;0.8523;0.85;0.8466;0.9582;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
KNeighborsClassifier;0.8254;0.8299;0.8254;0.8249;0.8419;0.8432;0.8419;0.8412;0.85;0.8587;0.85;0.8461;0.9288;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8259;0.8289;0.8259;0.8253;0.8724;0.873;0.8724;0.8726;0.85;0.8587;0.85;0.8461;0.9329;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8511;0.8547;0.8511;0.8508;0.8207;0.8247;0.8207;0.8201;0.85;0.8514;0.85;0.8458;0.9483;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8454;0.8484;0.8454;0.8454;0.8345;0.836;0.8345;0.8331;0.85;0.8514;0.85;0.8458;0.9463;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8473;0.8512;0.8473;0.8474;0.8591;0.8631;0.8591;0.8579;0.85;0.8514;0.85;0.8458;0.9464;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
RandomForestClassifier;0.8523;0.856;0.8523;0.8523;0.8448;0.8507;0.8448;0.8445;0.85;0.8644;0.85;0.8453;0.9552;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 351};RandomForestClassifier(n_estimators=10, random_state=351)
RandomForestClassifier;0.8538;0.8548;0.8538;0.8538;0.8179;0.818;0.8179;0.8179;0.85;0.8613;0.85;0.8444;0.9559;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8538;0.8563;0.8538;0.8537;0.8517;0.854;0.8517;0.8518;0.85;0.8613;0.85;0.8444;0.9563;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 207};RandomForestClassifier(n_estimators=10, random_state=207)
KNeighborsClassifier;0.8332;0.8351;0.8332;0.8326;0.8621;0.8631;0.8621;0.862;0.85;0.8602;0.85;0.844;0.9344;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8262;0.8308;0.8262;0.8257;0.869;0.8753;0.869;0.8684;0.85;0.8602;0.85;0.844;0.9337;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8542;0.8575;0.8542;0.8541;0.8621;0.8663;0.8621;0.8622;0.85;0.8602;0.85;0.844;0.9531;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
KNeighborsClassifier;0.822;0.8251;0.822;0.8215;0.8276;0.8278;0.8276;0.8274;0.85;0.8602;0.85;0.844;0.9341;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8355;0.8384;0.8355;0.8347;0.8655;0.8669;0.8655;0.8659;0.85;0.8602;0.85;0.844;0.9329;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.863;0.8671;0.863;0.8631;0.8069;0.8089;0.8069;0.8072;0.85;0.86;0.85;0.8436;0.9561;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8438;0.8456;0.8438;0.8439;0.8552;0.8635;0.8552;0.856;0.85;0.86;0.85;0.8436;0.9538;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8553;0.8598;0.8553;0.8554;0.8517;0.8536;0.8517;0.8513;0.85;0.86;0.85;0.8436;0.956;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8592;0.8622;0.8592;0.8592;0.8345;0.8371;0.8345;0.8345;0.85;0.86;0.85;0.8436;0.9546;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8572;0.8606;0.8572;0.8571;0.8522;0.8593;0.8522;0.8535;0.85;0.86;0.85;0.8436;0.9543;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.8496;0.8535;0.8496;0.8497;0.8897;0.8921;0.8897;0.8895;0.85;0.86;0.85;0.8436;0.9534;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.8603;0.8641;0.8603;0.8602;0.8282;0.8322;0.8282;0.8286;0.85;0.86;0.85;0.8436;0.9579;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 207};RandomForestClassifier(n_estimators=20, random_state=207)
RandomForestClassifier;0.8519;0.8568;0.8519;0.852;0.8759;0.8763;0.8759;0.8759;0.85;0.8776;0.85;0.8414;0.9565;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
KNeighborsClassifier;0.848;0.8505;0.848;0.848;0.8247;0.8256;0.8247;0.8247;0.8333;0.8489;0.8333;0.8352;0.939;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8392;0.8426;0.8392;0.839;0.8276;0.8276;0.8276;0.8276;0.8333;0.8333;0.8333;0.8323;0.9335;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
MLPClassifier;0.8484;0.851;0.8484;0.8482;0.8488;0.8486;0.8488;0.8485;0.8333;0.8315;0.8333;0.8299;0.9547;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8462;0.8489;0.8462;0.8458;0.8517;0.8516;0.8517;0.8516;0.8333;0.8315;0.8333;0.8299;0.957;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.8473;0.8488;0.8473;0.8472;0.8931;0.8947;0.8931;0.8929;0.8333;0.8315;0.8333;0.8299;0.9537;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8503;0.8517;0.8503;0.8501;0.8488;0.8526;0.8488;0.8481;0.8333;0.8355;0.8333;0.8295;0.9548;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8542;0.855;0.8542;0.8541;0.8448;0.8447;0.8448;0.8441;0.8333;0.8355;0.8333;0.8295;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.8484;0.8499;0.8484;0.8481;0.8454;0.8531;0.8454;0.8463;0.8333;0.8355;0.8333;0.8295;0.9551;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.8488;0.85;0.8488;0.8486;0.869;0.8693;0.869;0.8681;0.8333;0.8355;0.8333;0.8295;0.9542;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8496;0.8508;0.8496;0.8493;0.8724;0.8737;0.8724;0.8721;0.8333;0.8355;0.8333;0.8295;0.9543;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
RandomForestClassifier;0.8573;0.8607;0.8573;0.8573;0.8103;0.8147;0.8103;0.8105;0.8333;0.8458;0.8333;0.8285;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 207};RandomForestClassifier(n_estimators=20, random_state=207)
KNeighborsClassifier;0.8342;0.8381;0.8342;0.8345;0.8419;0.8417;0.8419;0.8417;0.8333;0.8449;0.8333;0.8278;0.9351;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8312;0.8354;0.8312;0.8308;0.8729;0.8735;0.8729;0.8723;0.8333;0.8449;0.8333;0.8278;0.9309;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8239;0.8253;0.8239;0.8235;0.8724;0.8724;0.8724;0.8722;0.8333;0.8449;0.8333;0.8278;0.9289;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8259;0.8293;0.8259;0.8256;0.8621;0.863;0.8621;0.8621;0.8333;0.8449;0.8333;0.8278;0.9322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8335;0.8358;0.8335;0.8331;0.831;0.8352;0.831;0.8311;0.8333;0.8449;0.8333;0.8278;0.9388;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8274;0.8295;0.8274;0.8271;0.8379;0.8401;0.8379;0.8384;0.8333;0.8449;0.8333;0.8278;0.9288;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8301;0.8366;0.8301;0.8299;0.8241;0.8239;0.8241;0.824;0.8333;0.8449;0.8333;0.8278;0.9361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8392;0.8412;0.8392;0.839;0.8625;0.8636;0.8625;0.8626;0.8333;0.8449;0.8333;0.8278;0.9337;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8527;0.8561;0.8527;0.8527;0.8655;0.8677;0.8655;0.8659;0.8333;0.846;0.8333;0.8276;0.9544;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
KNeighborsClassifier;0.8273;0.8296;0.8273;0.8269;0.8729;0.8776;0.8729;0.8732;0.8333;0.8363;0.8333;0.8275;0.9327;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8269;0.8324;0.8269;0.8263;0.8213;0.8218;0.8213;0.8208;0.8333;0.8363;0.8333;0.8275;0.9317;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8519;0.8557;0.8519;0.8519;0.8276;0.8293;0.8276;0.8273;0.8333;0.8365;0.8333;0.8271;0.9482;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8526;0.8552;0.8526;0.8528;0.8172;0.8189;0.8172;0.8165;0.8333;0.8365;0.8333;0.8271;0.9474;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
DecisionTreeClassifier;0.8511;0.855;0.8511;0.8508;0.8316;0.8388;0.8316;0.8312;0.8333;0.8365;0.8333;0.8271;0.9459;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8557;0.8582;0.8557;0.8557;0.8034;0.8114;0.8034;0.8029;0.8333;0.8365;0.8333;0.8271;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
RandomForestClassifier;0.8514;0.8551;0.8514;0.8514;0.8625;0.8654;0.8625;0.8628;0.8333;0.8625;0.8333;0.8256;0.955;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.8542;0.8581;0.8542;0.8539;0.8621;0.8667;0.8621;0.8621;0.8333;0.8489;0.8333;0.8255;0.9543;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.8511;0.8545;0.8511;0.8514;0.8797;0.881;0.8797;0.8794;0.8333;0.8489;0.8333;0.8255;0.9525;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 207};RandomForestClassifier(n_estimators=20, random_state=207)
RandomForestClassifier;0.8518;0.8559;0.8518;0.8518;0.8866;0.889;0.8866;0.887;0.8333;0.8609;0.8333;0.8254;0.9536;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
RandomForestClassifier;0.853;0.8578;0.853;0.8531;0.8586;0.8594;0.8586;0.8578;0.8333;0.8463;0.8333;0.8245;0.9542;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.8569;0.8597;0.8569;0.8569;0.8552;0.8605;0.8552;0.8553;0.8333;0.8463;0.8333;0.8245;0.9553;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
RandomForestClassifier;0.8507;0.8542;0.8507;0.8506;0.8969;0.8999;0.8969;0.8968;0.8333;0.8471;0.8333;0.8244;0.9555;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 360};RandomForestClassifier(n_estimators=20, random_state=360)
KNeighborsClassifier;0.8335;0.8385;0.8335;0.833;0.8586;0.8615;0.8586;0.8582;0.8167;0.8231;0.8167;0.8128;0.9319;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.853;0.8562;0.853;0.8531;0.8621;0.8656;0.8621;0.8616;0.8167;0.8437;0.8167;0.8126;0.9551;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 207};RandomForestClassifier(n_estimators=10, random_state=207)
RandomForestClassifier;0.853;0.8569;0.853;0.8531;0.8448;0.8498;0.8448;0.8454;0.8167;0.831;0.8167;0.8126;0.9544;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 360};RandomForestClassifier(n_estimators=5, random_state=360)
MLPClassifier;0.8458;0.848;0.8458;0.8456;0.8897;0.8895;0.8897;0.8895;0.8167;0.8144;0.8167;0.8123;0.9529;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8503;0.8521;0.8503;0.8502;0.8552;0.8586;0.8552;0.8547;0.8167;0.8144;0.8167;0.8123;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8538;0.8549;0.8538;0.8536;0.8483;0.8503;0.8483;0.8478;0.8167;0.8144;0.8167;0.8123;0.9558;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.85;0.8521;0.85;0.8496;0.831;0.8311;0.831;0.8309;0.8167;0.8144;0.8167;0.8123;0.9563;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.8515;0.8542;0.8515;0.8512;0.8724;0.8738;0.8724;0.8723;0.8167;0.8144;0.8167;0.8123;0.9539;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.8484;0.8497;0.8484;0.8481;0.8591;0.8588;0.8591;0.8587;0.8167;0.8144;0.8167;0.8123;0.9549;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8503;0.8523;0.8503;0.8501;0.8488;0.8553;0.8488;0.8487;0.8167;0.8144;0.8167;0.8123;0.9547;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8491;0.8508;0.8491;0.8488;0.8488;0.849;0.8488;0.8487;0.8167;0.8144;0.8167;0.8123;0.9567;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8527;0.8539;0.8527;0.8524;0.8448;0.8446;0.8448;0.8447;0.8167;0.8144;0.8167;0.8123;0.9569;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8435;0.8449;0.8435;0.8433;0.8966;0.8965;0.8966;0.8965;0.8167;0.8144;0.8167;0.8123;0.9525;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8462;0.8478;0.8462;0.8457;0.8862;0.8863;0.8862;0.8858;0.8167;0.8144;0.8167;0.8123;0.954;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8523;0.8532;0.8523;0.8521;0.8379;0.8379;0.8379;0.8379;0.8167;0.8144;0.8167;0.8123;0.9568;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 709, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=709)
MLPClassifier;0.8534;0.8547;0.8534;0.853;0.8557;0.8557;0.8557;0.8557;0.8167;0.8144;0.8167;0.8123;0.956;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.8527;0.8541;0.8527;0.8525;0.8448;0.8457;0.8448;0.8445;0.8167;0.8144;0.8167;0.8123;0.9562;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8465;0.8485;0.8465;0.8463;0.8797;0.8857;0.8797;0.8796;0.8167;0.8144;0.8167;0.8123;0.9548;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
MLPClassifier;0.8519;0.8525;0.8519;0.8517;0.8448;0.8474;0.8448;0.8443;0.8167;0.8144;0.8167;0.8123;0.9555;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8484;0.8492;0.8484;0.8482;0.866;0.8687;0.866;0.8655;0.8167;0.8144;0.8167;0.8123;0.9547;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 182, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=182)
MLPClassifier;0.8492;0.8508;0.8492;0.8488;0.8517;0.8534;0.8517;0.8513;0.8167;0.8144;0.8167;0.8123;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
DecisionTreeClassifier;0.845;0.8476;0.845;0.845;0.869;0.8688;0.869;0.8688;0.8167;0.8123;0.8167;0.8121;0.9466;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=326)
RandomForestClassifier;0.8481;0.8514;0.8481;0.8477;0.8724;0.8725;0.8724;0.8724;0.8167;0.8326;0.8167;0.8114;0.9527;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 207};RandomForestClassifier(n_estimators=10, random_state=207)
RandomForestClassifier;0.8511;0.855;0.8511;0.8511;0.8862;0.8873;0.8862;0.8862;0.8167;0.8326;0.8167;0.8114;0.9534;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 207};RandomForestClassifier(n_estimators=20, random_state=207)
KNeighborsClassifier;0.8361;0.8398;0.8361;0.836;0.8385;0.839;0.8385;0.8387;0.8167;0.8206;0.8167;0.8108;0.9382;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8541;0.8576;0.8541;0.8541;0.8488;0.8504;0.8488;0.8485;0.8167;0.8153;0.8167;0.8104;0.9469;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
DecisionTreeClassifier;0.8462;0.8492;0.8462;0.8462;0.869;0.8689;0.869;0.8687;0.8167;0.8153;0.8167;0.8104;0.9476;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
RandomForestClassifier;0.8503;0.8551;0.8503;0.8504;0.8454;0.8481;0.8454;0.8458;0.8167;0.8325;0.8167;0.8094;0.959;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 207};RandomForestClassifier(n_estimators=20, random_state=207)
RandomForestClassifier;0.8569;0.8609;0.8569;0.8568;0.8034;0.8112;0.8034;0.8041;0.8167;0.8325;0.8167;0.8094;0.9569;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
KNeighborsClassifier;0.8381;0.8412;0.8381;0.8377;0.8345;0.8373;0.8345;0.8346;0.8167;0.8319;0.8167;0.8086;0.931;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8266;0.8299;0.8266;0.826;0.8419;0.8449;0.8419;0.8421;0.8167;0.8319;0.8167;0.8086;0.933;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8074;0.8266;0.8074;0.8053;0.8557;0.8553;0.8557;0.8547;0.8;0.8064;0.8;0.8007;0.9215;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.8094;0.8278;0.8094;0.807;0.8345;0.8357;0.8345;0.8348;0.8;0.8111;0.8;0.8002;0.9206;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
KNeighborsClassifier;0.845;0.8475;0.845;0.8447;0.8241;0.8325;0.8241;0.8245;0.8;0.8236;0.8;0.7991;0.9394;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.832;0.8356;0.832;0.8318;0.7931;0.808;0.7931;0.7956;0.8;0.8236;0.8;0.7991;0.9355;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8484;0.8498;0.8484;0.8483;0.831;0.8332;0.831;0.8308;0.8;0.8026;0.8;0.7989;0.944;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=780)
KNeighborsClassifier;0.8293;0.8307;0.8293;0.8288;0.8448;0.8476;0.8448;0.8437;0.8;0.7988;0.8;0.7947;0.933;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
DecisionTreeClassifier;0.8442;0.8467;0.8442;0.8443;0.8138;0.8168;0.8138;0.8119;0.8;0.8085;0.8;0.7939;0.9459;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=326)
DecisionTreeClassifier;0.8473;0.8499;0.8473;0.8473;0.8483;0.8485;0.8483;0.8481;0.8;0.8085;0.8;0.7939;0.9485;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=326)
DecisionTreeClassifier;0.8481;0.8514;0.8481;0.8479;0.8379;0.838;0.8379;0.8367;0.8;0.7958;0.8;0.7937;0.9464;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
DecisionTreeClassifier;0.8439;0.8468;0.8439;0.8439;0.8414;0.8452;0.8414;0.8394;0.8;0.8007;0.8;0.7934;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=326)
DecisionTreeClassifier;0.8469;0.8498;0.8469;0.8471;0.7966;0.8011;0.7966;0.7942;0.8;0.8007;0.8;0.7934;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=897)
DecisionTreeClassifier;0.8488;0.852;0.8488;0.8488;0.7793;0.7935;0.7793;0.7757;0.8;0.8007;0.8;0.7934;0.9498;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=780)
DecisionTreeClassifier;0.845;0.8493;0.845;0.8451;0.8276;0.8291;0.8276;0.8267;0.8;0.8007;0.8;0.7934;0.9442;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=780)
KNeighborsClassifier;0.8339;0.8371;0.8339;0.8335;0.8655;0.8678;0.8655;0.8659;0.8;0.8063;0.8;0.7918;0.9311;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8412;0.8434;0.8412;0.8408;0.831;0.841;0.831;0.8314;0.7833;0.7963;0.7833;0.7863;0.9351;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
SVC;0.8113;0.831;0.8113;0.8088;0.8522;0.8532;0.8522;0.852;0.7833;0.7934;0.7833;0.7837;0.9207;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.8124;0.831;0.8124;0.8099;0.8247;0.8254;0.8247;0.8242;0.7833;0.7934;0.7833;0.7837;0.9255;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
SVC;0.8086;0.8276;0.8086;0.8071;0.866;0.8662;0.866;0.8655;0.7833;0.7934;0.7833;0.7837;0.9178;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
SVC;0.8086;0.827;0.8086;0.8062;0.8797;0.8798;0.8797;0.8796;0.7833;0.7934;0.7833;0.7837;0.9215;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.8055;0.8246;0.8055;0.8035;0.8591;0.8596;0.8591;0.8588;0.7833;0.7897;0.7833;0.7836;0.9209;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
SVC;0.8117;0.8305;0.8117;0.8094;0.831;0.8333;0.831;0.8305;0.7833;0.7897;0.7833;0.7836;0.923;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
KNeighborsClassifier;0.8289;0.8315;0.8289;0.8285;0.8172;0.8272;0.8172;0.8163;0.7833;0.806;0.7833;0.7832;0.9316;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.837;0.8402;0.837;0.8362;0.8103;0.8116;0.8103;0.8103;0.7833;0.806;0.7833;0.7832;0.9381;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.809;0.8269;0.809;0.8063;0.8385;0.8405;0.8385;0.8387;0.7833;0.7917;0.7833;0.7831;0.9209;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.8006;0.8199;0.8006;0.798;0.8966;0.8975;0.8966;0.8968;0.7833;0.7917;0.7833;0.7831;0.9182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.8087;0.8262;0.8087;0.8063;0.8483;0.8485;0.8483;0.8483;0.7833;0.7917;0.7833;0.7831;0.9234;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
SVC;0.8079;0.8279;0.8079;0.8062;0.8414;0.8422;0.8414;0.8409;0.7833;0.7917;0.7833;0.7831;0.9219;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.8159;0.8325;0.8159;0.8138;0.8345;0.8352;0.8345;0.8346;0.7833;0.7868;0.7833;0.7826;0.9239;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
DecisionTreeClassifier;0.8446;0.8468;0.8446;0.8446;0.8316;0.8365;0.8316;0.831;0.7833;0.7831;0.7833;0.7822;0.9436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=897)
DecisionTreeClassifier;0.8462;0.8496;0.8462;0.8462;0.8379;0.8376;0.8379;0.8376;0.7833;0.7831;0.7833;0.7822;0.9465;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=897)
SVC;0.8064;0.8241;0.8064;0.8036;0.8793;0.8794;0.8793;0.879;0.7833;0.8023;0.7833;0.782;0.9204;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.8106;0.8295;0.8106;0.8083;0.8414;0.843;0.8414;0.8413;0.7833;0.8023;0.7833;0.782;0.92;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
DecisionTreeClassifier;0.8434;0.8463;0.8434;0.8434;0.8351;0.8361;0.8351;0.8352;0.7833;0.7853;0.7833;0.7819;0.9432;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=326)
SVC;0.8063;0.8265;0.8063;0.8041;0.869;0.869;0.869;0.8686;0.7833;0.8019;0.7833;0.7816;0.9212;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
SVC;0.814;0.8311;0.814;0.8119;0.8414;0.8413;0.8414;0.8404;0.7833;0.7922;0.7833;0.7807;0.9236;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
DecisionTreeClassifier;0.8446;0.8474;0.8446;0.8448;0.8379;0.8403;0.8379;0.8373;0.7833;0.786;0.7833;0.7804;0.9469;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=780)
RandomForestClassifier;0.8553;0.8588;0.8553;0.8556;0.8414;0.8458;0.8414;0.8417;0.7833;0.7915;0.7833;0.7803;0.9549;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 207};RandomForestClassifier(n_estimators=10, random_state=207)
DecisionTreeClassifier;0.8427;0.8463;0.8427;0.8428;0.8552;0.8555;0.8552;0.8551;0.7833;0.7778;0.7833;0.7767;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8511;0.8544;0.8511;0.8511;0.7869;0.7877;0.7869;0.7861;0.7833;0.7865;0.7833;0.7762;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=897)
RandomForestClassifier;0.8476;0.852;0.8476;0.8478;0.8488;0.8577;0.8488;0.8485;0.7833;0.8233;0.7833;0.7755;0.9554;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 351};RandomForestClassifier(n_estimators=20, random_state=351)
DecisionTreeClassifier;0.8549;0.8582;0.8549;0.8551;0.7663;0.7689;0.7663;0.763;0.7833;0.7958;0.7833;0.7754;0.9468;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=326)
DecisionTreeClassifier;0.8492;0.8529;0.8492;0.8493;0.8419;0.8476;0.8419;0.8412;0.7833;0.7862;0.7833;0.7748;0.9464;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=780)
MLPClassifier;0.8496;0.8507;0.8496;0.8493;0.8517;0.857;0.8517;0.8522;0.7667;0.7752;0.7667;0.7681;0.9545;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 598, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=598)
SVC;0.8116;0.8291;0.8116;0.8088;0.8316;0.8319;0.8316;0.8312;0.7667;0.7716;0.7667;0.7668;0.9253;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.806;0.8245;0.806;0.8037;0.869;0.8701;0.869;0.8688;0.7667;0.7716;0.7667;0.7668;0.92;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
SVC;0.8079;0.8288;0.8079;0.8061;0.8586;0.8617;0.8586;0.8577;0.7667;0.7716;0.7667;0.7668;0.9238;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.8083;0.828;0.8083;0.8064;0.8483;0.8502;0.8483;0.8482;0.7667;0.7716;0.7667;0.7668;0.9242;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.8102;0.8274;0.8102;0.8081;0.8379;0.8386;0.8379;0.837;0.7667;0.7716;0.7667;0.7668;0.9222;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.8132;0.8301;0.8132;0.8109;0.8483;0.8492;0.8483;0.8482;0.7667;0.7716;0.7667;0.7668;0.9237;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
LogisticRegression;0.6789;0.6902;0.6789;0.6771;0.6655;0.6864;0.6655;0.666;0.7667;0.8089;0.7667;0.7662;0.8185;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
SVC;0.8102;0.8285;0.8102;0.808;0.8138;0.8143;0.8138;0.8136;0.7667;0.7702;0.7667;0.766;0.9232;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.8132;0.8309;0.8132;0.8111;0.831;0.8313;0.831;0.8309;0.7667;0.7702;0.7667;0.766;0.9231;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
SVC;0.806;0.8263;0.806;0.804;0.8552;0.8558;0.8552;0.8541;0.7667;0.7702;0.7667;0.766;0.921;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.8082;0.8268;0.8082;0.8058;0.8488;0.8488;0.8488;0.8485;0.7667;0.7702;0.7667;0.766;0.92;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.8102;0.8287;0.8102;0.808;0.8552;0.8549;0.8552;0.8548;0.7667;0.777;0.7667;0.7648;0.9208;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 314};SVC(C=10, probability=True, random_state=314)
SVC;0.8102;0.8287;0.8102;0.8077;0.8517;0.8522;0.8517;0.8517;0.7667;0.777;0.7667;0.7648;0.922;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
DecisionTreeClassifier;0.8511;0.8535;0.8511;0.8512;0.831;0.8336;0.831;0.8307;0.7667;0.777;0.7667;0.7642;0.9482;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 897};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=897)
DecisionTreeClassifier;0.8381;0.841;0.8381;0.8379;0.8041;0.8059;0.8041;0.8045;0.7667;0.7662;0.7667;0.7583;0.9448;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=780)
LogisticRegression;0.6884;0.6987;0.6884;0.6869;0.6907;0.7035;0.6907;0.6886;0.75;0.8111;0.75;0.7532;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.6801;0.6942;0.6801;0.6786;0.7069;0.7187;0.7069;0.7048;0.75;0.8034;0.75;0.7513;0.8164;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
SVC;0.8132;0.8309;0.8132;0.8107;0.8379;0.8405;0.8379;0.8385;0.75;0.7671;0.75;0.7513;0.9256;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 975};SVC(C=10, probability=True, random_state=975)
LogisticRegression;0.6762;0.6861;0.6762;0.6746;0.669;0.6892;0.669;0.6663;0.75;0.8008;0.75;0.7475;0.8181;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
DecisionTreeClassifier;0.8519;0.854;0.8519;0.8518;0.8241;0.8345;0.8241;0.8238;0.75;0.7638;0.75;0.7459;0.9478;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 780};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=780)
LogisticRegression;0.6754;0.6861;0.6754;0.6737;0.7113;0.7198;0.7113;0.7106;0.7333;0.7919;0.7333;0.7377;0.8142;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.687;0.6982;0.687;0.6849;0.6379;0.6596;0.6379;0.6347;0.7333;0.7965;0.7333;0.733;0.822;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6728;0.6833;0.6728;0.6713;0.7069;0.7324;0.7069;0.7088;0.7333;0.7965;0.7333;0.733;0.8137;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.677;0.6846;0.677;0.6741;0.6759;0.6928;0.6759;0.673;0.7333;0.7965;0.7333;0.733;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6849;0.6927;0.6849;0.6827;0.6701;0.6858;0.6701;0.6722;0.7333;0.7965;0.7333;0.733;0.8169;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6796;0.6913;0.6796;0.6782;0.6804;0.7061;0.6804;0.6746;0.7333;0.7965;0.7333;0.733;0.8164;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6755;0.6846;0.6755;0.6731;0.6862;0.699;0.6862;0.6863;0.7333;0.7965;0.7333;0.733;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.677;0.6874;0.677;0.6756;0.6517;0.6611;0.6517;0.6517;0.7333;0.7897;0.7333;0.7328;0.8157;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.6807;0.6893;0.6807;0.6792;0.6701;0.6768;0.6701;0.6669;0.7333;0.7897;0.7333;0.7328;0.8175;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.6766;0.6873;0.6766;0.6755;0.6586;0.6782;0.6586;0.6593;0.7333;0.7897;0.7333;0.7328;0.8197;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6682;0.6801;0.6682;0.667;0.7241;0.7323;0.7241;0.7216;0.7333;0.7897;0.7333;0.7328;0.8126;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6751;0.6853;0.6751;0.6733;0.6793;0.6881;0.6793;0.6781;0.7167;0.7787;0.7167;0.7179;0.8196;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.6788;0.6944;0.6788;0.6773;0.6873;0.7163;0.6873;0.6854;0.7167;0.7787;0.7167;0.7179;0.816;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.6781;0.6875;0.6781;0.6757;0.6276;0.6389;0.6276;0.6255;0.7167;0.7787;0.7167;0.7179;0.8182;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6732;0.681;0.6732;0.6709;0.7276;0.7483;0.7276;0.7257;0.7167;0.7787;0.7167;0.7179;0.8117;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6808;0.6919;0.6808;0.6795;0.7069;0.7256;0.7069;0.7067;0.7167;0.7787;0.7167;0.7179;0.8179;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.6742;0.6845;0.6742;0.6721;0.6873;0.6944;0.6873;0.6849;0.7167;0.7787;0.7167;0.7179;0.8138;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6738;0.6841;0.6738;0.672;0.7182;0.7226;0.7182;0.7165;0.7167;0.7787;0.7167;0.7179;0.8142;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6728;0.6832;0.6728;0.6711;0.7103;0.7262;0.7103;0.7099;0.7167;0.7787;0.7167;0.7179;0.8158;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6759;0.6849;0.6759;0.6745;0.6897;0.7126;0.6897;0.6881;0.7167;0.7787;0.7167;0.7179;0.8176;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
LogisticRegression;0.6743;0.6838;0.6743;0.673;0.7;0.7249;0.7;0.6939;0.7167;0.7787;0.7167;0.7179;0.8167;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6835;0.6943;0.6835;0.6822;0.6931;0.7111;0.6931;0.6946;0.7167;0.7787;0.7167;0.7179;0.8175;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6803;0.6924;0.6803;0.6781;0.7148;0.7251;0.7148;0.7153;0.7167;0.7833;0.7167;0.7122;0.8159;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6931;0.7041;0.6931;0.6916;0.6517;0.6709;0.6517;0.6467;0.7167;0.7833;0.7167;0.7122;0.8161;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 198, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=198)"
LogisticRegression;0.6816;0.6944;0.6816;0.6801;0.6759;0.6832;0.6759;0.6732;0.7167;0.7833;0.7167;0.7122;0.8161;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 573, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=573)"
LogisticRegression;0.6843;0.6949;0.6843;0.682;0.7034;0.7235;0.7034;0.7031;0.7167;0.7833;0.7167;0.7122;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 79, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=79)"
