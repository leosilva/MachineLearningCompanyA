Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9436;0.9452;0.9436;0.9438;0.9306;0.9331;0.9306;0.9308;0.9333;0.9379;0.9333;0.934;0.9924;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.946;0.9477;0.946;0.9461;0.9444;0.9447;0.9444;0.9444;0.9167;0.9228;0.9167;0.9168;0.992;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9537;0.9554;0.9537;0.9537;0.9097;0.9148;0.9097;0.9103;0.9167;0.9228;0.9167;0.9168;0.9918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9459;0.948;0.9459;0.946;0.9514;0.9553;0.9514;0.9516;0.9167;0.9228;0.9167;0.9168;0.9925;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9444;0.9458;0.9444;0.9446;0.9653;0.9655;0.9653;0.9652;0.9167;0.9228;0.9167;0.9168;0.9927;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9475;0.9492;0.9475;0.9475;0.9444;0.9447;0.9444;0.9444;0.9167;0.9228;0.9167;0.9168;0.9929;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.9452;0.9473;0.9452;0.9454;0.9514;0.9522;0.9514;0.9515;0.9167;0.9228;0.9167;0.9168;0.9924;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9453;0.9463;0.9453;0.9455;0.9306;0.9347;0.9306;0.9312;0.9167;0.9228;0.9167;0.9168;0.993;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9437;0.9458;0.9437;0.9436;0.9583;0.9591;0.9583;0.9585;0.9167;0.9248;0.9167;0.9153;0.9933;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
DecisionTreeClassifier;0.9136;0.9155;0.9136;0.9135;0.875;0.8737;0.875;0.8739;0.9;0.9076;0.9;0.901;0.9352;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
RandomForestClassifier;0.9491;0.9504;0.9491;0.9492;0.9236;0.9237;0.9236;0.9232;0.9;0.9087;0.9;0.9009;0.9934;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9506;0.9521;0.9506;0.9507;0.9097;0.9155;0.9097;0.9102;0.9;0.9091;0.9;0.8995;0.9932;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9483;0.9494;0.9483;0.9483;0.9514;0.953;0.9514;0.9516;0.9;0.9091;0.9;0.8995;0.9926;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9429;0.945;0.9429;0.943;0.9444;0.9457;0.9444;0.9446;0.9;0.9091;0.9;0.8995;0.9922;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 154};RandomForestClassifier(n_estimators=10, random_state=154)
RandomForestClassifier;0.9529;0.9542;0.9529;0.9529;0.9306;0.9312;0.9306;0.9307;0.9;0.9091;0.9;0.8995;0.9929;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9444;0.9455;0.9444;0.9443;0.9514;0.9524;0.9514;0.9517;0.9;0.9091;0.9;0.8995;0.9923;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9475;0.9499;0.9475;0.9477;0.9583;0.9586;0.9583;0.9582;0.9;0.9091;0.9;0.8995;0.9918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9444;0.9458;0.9444;0.9445;0.9444;0.9454;0.9444;0.9444;0.9;0.9091;0.9;0.8995;0.9925;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9483;0.9497;0.9483;0.9484;0.9306;0.9304;0.9306;0.9304;0.9;0.9091;0.9;0.8995;0.9928;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9475;0.9494;0.9475;0.9477;0.9444;0.9461;0.9444;0.9444;0.9;0.9091;0.9;0.8995;0.9913;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9444;0.9464;0.9444;0.9447;0.9028;0.902;0.9028;0.9022;0.9;0.9091;0.9;0.8995;0.9911;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.9491;0.9505;0.9491;0.9492;0.9444;0.9442;0.9444;0.9441;0.9;0.9091;0.9;0.8995;0.9925;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9468;0.9495;0.9468;0.9471;0.9653;0.9668;0.9653;0.9655;0.9;0.9091;0.9;0.8995;0.9924;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9414;0.9431;0.9414;0.9415;0.9722;0.9729;0.9722;0.9724;0.9;0.9091;0.9;0.8995;0.9923;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9468;0.9483;0.9468;0.9468;0.9653;0.9658;0.9653;0.9653;0.9;0.9091;0.9;0.8995;0.9928;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9391;0.9409;0.9391;0.9392;0.9722;0.9722;0.9722;0.9722;0.8833;0.8944;0.8833;0.8836;0.9923;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9475;0.9487;0.9475;0.9476;0.9375;0.94;0.9375;0.9375;0.8833;0.8944;0.8833;0.8836;0.9918;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
DecisionTreeClassifier;0.9144;0.9159;0.9144;0.914;0.9514;0.9527;0.9514;0.9511;0.8833;0.8944;0.8833;0.8836;0.9357;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
DecisionTreeClassifier;0.9028;0.9057;0.9028;0.903;0.9097;0.9096;0.9097;0.9096;0.8833;0.8944;0.8833;0.8836;0.9271;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
MLPClassifier;0.774;0.7806;0.774;0.7741;0.8958;0.8985;0.8958;0.8967;0.8833;0.8944;0.8833;0.8836;0.941;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
KNeighborsClassifier;0.8727;0.8751;0.8727;0.8727;0.9097;0.9127;0.9097;0.9102;0.8833;0.8966;0.8833;0.8819;0.9654;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9475;0.9494;0.9475;0.9476;0.9444;0.9484;0.9444;0.9447;0.8833;0.8966;0.8833;0.8819;0.9927;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9468;0.9481;0.9468;0.9469;0.9375;0.9379;0.9375;0.9376;0.8833;0.8966;0.8833;0.8819;0.9933;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 154};RandomForestClassifier(n_estimators=20, random_state=154)
RandomForestClassifier;0.9475;0.9494;0.9475;0.9477;0.9583;0.9605;0.9583;0.9586;0.8833;0.8966;0.8833;0.8819;0.9935;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 447};RandomForestClassifier(n_estimators=20, random_state=447)
RandomForestClassifier;0.9475;0.949;0.9475;0.9476;0.9444;0.9447;0.9444;0.9444;0.8833;0.8966;0.8833;0.8819;0.9916;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
KNeighborsClassifier;0.8642;0.8686;0.8642;0.8645;0.9306;0.9304;0.9306;0.9304;0.8833;0.8966;0.8833;0.8819;0.9647;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8758;0.8805;0.8758;0.8764;0.9028;0.9038;0.9028;0.903;0.8833;0.8966;0.8833;0.8819;0.9679;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8704;0.8743;0.8704;0.8705;0.9722;0.9733;0.9722;0.9719;0.8833;0.8966;0.8833;0.8819;0.9642;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8743;0.8771;0.8743;0.874;0.9236;0.9236;0.9236;0.9236;0.8833;0.8966;0.8833;0.8819;0.9643;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8658;0.8691;0.8658;0.8659;0.9375;0.9396;0.9375;0.9377;0.8833;0.8966;0.8833;0.8819;0.9675;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8719;0.8772;0.8719;0.8723;0.9306;0.9316;0.9306;0.9308;0.8833;0.8966;0.8833;0.8819;0.9666;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8673;0.8719;0.8673;0.8671;0.9167;0.9183;0.9167;0.9171;0.8833;0.8966;0.8833;0.8819;0.9672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8735;0.8775;0.8735;0.8736;0.9653;0.9661;0.9653;0.9652;0.8833;0.8966;0.8833;0.8819;0.964;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8712;0.8747;0.8712;0.8714;0.9167;0.9191;0.9167;0.9173;0.8833;0.8966;0.8833;0.8819;0.9694;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8665;0.8696;0.8665;0.8664;0.9375;0.9389;0.9375;0.9377;0.8833;0.8966;0.8833;0.8819;0.9669;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8657;0.869;0.8657;0.8657;0.9236;0.9271;0.9236;0.9232;0.8833;0.8966;0.8833;0.8819;0.9675;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8657;0.8702;0.8657;0.8657;0.9167;0.9168;0.9167;0.9167;0.8833;0.8966;0.8833;0.8819;0.9666;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8789;0.8824;0.8789;0.8788;0.9514;0.9516;0.9514;0.9512;0.8833;0.8966;0.8833;0.8819;0.9681;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8735;0.8777;0.8735;0.874;0.9097;0.9136;0.9097;0.9098;0.8833;0.8966;0.8833;0.8819;0.9668;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8688;0.8718;0.8688;0.8689;0.9444;0.9454;0.9444;0.9447;0.8833;0.8966;0.8833;0.8819;0.9627;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8757;0.8795;0.8757;0.8751;0.9097;0.9103;0.9097;0.9099;0.8833;0.8966;0.8833;0.8819;0.9652;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8749;0.8775;0.8749;0.8749;0.8542;0.8658;0.8542;0.8529;0.8833;0.8966;0.8833;0.8819;0.9662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8635;0.8683;0.8635;0.8635;0.9444;0.9489;0.9444;0.9431;0.8833;0.8966;0.8833;0.8819;0.9644;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8581;0.8629;0.8581;0.858;0.9653;0.9671;0.9653;0.9654;0.8833;0.8966;0.8833;0.8819;0.9634;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8688;0.873;0.8688;0.8689;0.9236;0.925;0.9236;0.9234;0.8833;0.8966;0.8833;0.8819;0.9686;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8727;0.8745;0.8727;0.8726;0.9444;0.9455;0.9444;0.9447;0.8833;0.8966;0.8833;0.8819;0.9691;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8842;0.8879;0.8842;0.8845;0.9167;0.9173;0.9167;0.9161;0.8833;0.8966;0.8833;0.8819;0.9709;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8742;0.8777;0.8742;0.8743;0.9028;0.9085;0.9028;0.902;0.8833;0.8966;0.8833;0.8819;0.9685;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8619;0.867;0.8619;0.8624;0.9444;0.9476;0.9444;0.9448;0.8833;0.8966;0.8833;0.8819;0.9674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9159;0.9172;0.9159;0.9157;0.9167;0.9181;0.9167;0.9166;0.8667;0.8806;0.8667;0.8675;0.9369;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
MLPClassifier;0.7809;0.7861;0.7809;0.7809;0.9097;0.9128;0.9097;0.9089;0.8667;0.8806;0.8667;0.8675;0.942;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
KNeighborsClassifier;0.8673;0.8719;0.8673;0.8671;0.9167;0.9171;0.9167;0.9166;0.8667;0.8829;0.8667;0.8663;0.9668;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9174;0.9188;0.9174;0.9172;0.8819;0.8938;0.8819;0.8841;0.8667;0.8724;0.8667;0.8662;0.9381;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9082;0.9094;0.9082;0.9083;0.9236;0.9243;0.9236;0.9234;0.8667;0.8724;0.8667;0.8662;0.9312;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9074;0.9098;0.9074;0.9072;0.8958;0.8965;0.8958;0.8956;0.8667;0.8724;0.8667;0.8662;0.9305;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9066;0.9074;0.9066;0.9063;0.9375;0.9379;0.9375;0.9376;0.8667;0.8724;0.8667;0.8662;0.93;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9113;0.9137;0.9113;0.911;0.9028;0.9066;0.9028;0.9034;0.8667;0.8724;0.8667;0.8662;0.9335;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
DecisionTreeClassifier;0.9236;0.9243;0.9236;0.9234;0.9028;0.9029;0.9028;0.9028;0.8667;0.8724;0.8667;0.8662;0.9427;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
DecisionTreeClassifier;0.9074;0.909;0.9074;0.9074;0.9167;0.9225;0.9167;0.9176;0.8667;0.8814;0.8667;0.866;0.9306;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
DecisionTreeClassifier;0.9067;0.9088;0.9067;0.9066;0.9097;0.9108;0.9097;0.9101;0.8667;0.8814;0.8667;0.866;0.93;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
KNeighborsClassifier;0.8727;0.8766;0.8727;0.8731;0.9167;0.9174;0.9167;0.9157;0.8667;0.8851;0.8667;0.864;0.9649;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8611;0.8657;0.8611;0.8613;0.9444;0.9446;0.9444;0.9441;0.8667;0.8851;0.8667;0.864;0.9674;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8782;0.8825;0.8782;0.8785;0.9028;0.9066;0.9028;0.9004;0.8667;0.8841;0.8667;0.8637;0.9699;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.7878;0.8036;0.7878;0.7885;0.8542;0.8555;0.8542;0.8546;0.85;0.8667;0.85;0.8524;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.7909;0.8061;0.7909;0.7915;0.8819;0.8866;0.8819;0.8826;0.85;0.8667;0.85;0.8524;0.9184;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.7871;0.8006;0.7871;0.7886;0.8889;0.8887;0.8889;0.8883;0.85;0.8667;0.85;0.8524;0.9163;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.7817;0.7965;0.7817;0.7829;0.8819;0.8877;0.8819;0.8832;0.85;0.8667;0.85;0.8524;0.9147;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.7839;0.8015;0.7839;0.7849;0.8889;0.8969;0.8889;0.8897;0.85;0.8636;0.85;0.8519;0.9171;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
MLPClassifier;0.7801;0.784;0.7801;0.7796;0.9167;0.9206;0.9167;0.9172;0.85;0.864;0.85;0.8518;0.9446;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.7809;0.7881;0.7809;0.7807;0.9097;0.9119;0.9097;0.9104;0.85;0.864;0.85;0.8518;0.9452;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.784;0.7873;0.784;0.7835;0.9444;0.9463;0.9444;0.9449;0.85;0.864;0.85;0.8518;0.9418;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7786;0.7843;0.7786;0.7783;0.9097;0.9112;0.9097;0.9099;0.85;0.864;0.85;0.8518;0.9452;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7894;0.7936;0.7894;0.7897;0.8611;0.8625;0.8611;0.8589;0.85;0.864;0.85;0.8518;0.944;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7909;0.7961;0.7909;0.7912;0.9306;0.9316;0.9306;0.9309;0.85;0.864;0.85;0.8518;0.9412;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7794;0.7821;0.7794;0.7789;0.9583;0.9585;0.9583;0.9583;0.85;0.864;0.85;0.8518;0.9406;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.767;0.772;0.767;0.767;0.9306;0.9339;0.9306;0.931;0.85;0.864;0.85;0.8518;0.9396;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.7878;0.7919;0.7878;0.788;0.9167;0.9195;0.9167;0.9172;0.85;0.864;0.85;0.8518;0.9441;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.7785;0.7808;0.7785;0.7785;0.9444;0.9463;0.9444;0.9449;0.85;0.8674;0.85;0.8513;0.9414;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.7709;0.7729;0.7709;0.7702;0.9097;0.9096;0.9097;0.9096;0.85;0.8671;0.85;0.85;0.9389;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
DecisionTreeClassifier;0.9159;0.9173;0.9159;0.9155;0.9444;0.9461;0.9444;0.9448;0.85;0.8583;0.85;0.8497;0.9369;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9051;0.9068;0.9051;0.9051;0.9097;0.9093;0.9097;0.9094;0.85;0.8497;0.85;0.8495;0.9288;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
DecisionTreeClassifier;0.9136;0.9152;0.9136;0.9134;0.8472;0.8624;0.8472;0.8498;0.85;0.8597;0.85;0.849;0.9352;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
DecisionTreeClassifier;0.9229;0.9248;0.9229;0.9227;0.8611;0.8625;0.8611;0.861;0.85;0.8524;0.85;0.8488;0.9422;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
DecisionTreeClassifier;0.9151;0.9168;0.9151;0.9146;0.8819;0.8826;0.8819;0.8814;0.85;0.8577;0.85;0.8488;0.9363;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
DecisionTreeClassifier;0.9158;0.9183;0.9158;0.9155;0.8958;0.8996;0.8958;0.8963;0.85;0.8577;0.85;0.8488;0.9368;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
DecisionTreeClassifier;0.9167;0.9185;0.9167;0.9166;0.9097;0.9104;0.9097;0.91;0.85;0.8524;0.85;0.8488;0.9375;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
DecisionTreeClassifier;0.9082;0.9102;0.9082;0.9083;0.9583;0.9583;0.9583;0.9583;0.85;0.8577;0.85;0.8488;0.9311;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9105;0.9117;0.9105;0.9106;0.8819;0.889;0.8819;0.8823;0.85;0.8699;0.85;0.8481;0.9329;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9051;0.9069;0.9051;0.9049;0.8819;0.8841;0.8819;0.8826;0.85;0.8592;0.85;0.847;0.9287;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
SVC;0.7832;0.8003;0.7832;0.7842;0.8889;0.8933;0.8889;0.8897;0.8333;0.854;0.8333;0.8365;0.9151;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
SVC;0.7832;0.7998;0.7832;0.7843;0.9514;0.9526;0.9514;0.9514;0.8333;0.854;0.8333;0.8365;0.9149;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.784;0.7999;0.784;0.7847;0.9306;0.9305;0.9306;0.9302;0.8333;0.854;0.8333;0.8365;0.9148;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
MLPClassifier;0.7832;0.7885;0.7832;0.7831;0.9306;0.9311;0.9306;0.9306;0.8333;0.8485;0.8333;0.836;0.9422;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.7676;0.7715;0.7676;0.7671;0.9444;0.9448;0.9444;0.9441;0.8333;0.8485;0.8333;0.836;0.9388;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.7893;0.7952;0.7893;0.7897;0.9375;0.9402;0.9375;0.9374;0.8333;0.8485;0.8333;0.836;0.9449;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.7847;0.7881;0.7847;0.7845;0.9236;0.9261;0.9236;0.9241;0.8333;0.8485;0.8333;0.836;0.9422;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7816;0.7843;0.7816;0.7812;0.9306;0.9313;0.9306;0.9299;0.8333;0.85;0.8333;0.8357;0.9414;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
MLPClassifier;0.78;0.7832;0.78;0.7795;0.9028;0.9026;0.9028;0.9022;0.8333;0.85;0.8333;0.8357;0.9423;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7925;0.7959;0.7925;0.7922;0.8958;0.8975;0.8958;0.8962;0.8333;0.8532;0.8333;0.8349;0.9446;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
SVC;0.7886;0.804;0.7886;0.7899;0.8611;0.8621;0.8611;0.8612;0.8333;0.8532;0.8333;0.8349;0.9169;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
SVC;0.7877;0.8036;0.7877;0.7889;0.8958;0.8978;0.8958;0.8957;0.8333;0.8532;0.8333;0.8349;0.9151;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.7886;0.804;0.7886;0.7894;0.9097;0.9102;0.9097;0.9097;0.8333;0.8532;0.8333;0.8349;0.9126;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.7924;0.8079;0.7924;0.7944;0.875;0.8827;0.875;0.8762;0.8333;0.8532;0.8333;0.8349;0.9131;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.7855;0.8019;0.7855;0.7856;0.8611;0.8635;0.8611;0.8619;0.8333;0.8532;0.8333;0.8349;0.9153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.7909;0.8092;0.7909;0.7923;0.9236;0.9276;0.9236;0.9242;0.8333;0.8532;0.8333;0.8349;0.9173;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.7916;0.8091;0.7916;0.7925;0.8681;0.8711;0.8681;0.8691;0.8333;0.8532;0.8333;0.8349;0.9127;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
MLPClassifier;0.784;0.7902;0.784;0.7841;0.8958;0.9042;0.8958;0.8968;0.8333;0.8532;0.8333;0.8349;0.9409;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
SVC;0.7871;0.8031;0.7871;0.7884;0.8958;0.8973;0.8958;0.8957;0.8333;0.8532;0.8333;0.8349;0.9144;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
MLPClassifier;0.7777;0.7835;0.7777;0.7779;0.9375;0.9388;0.9375;0.9377;0.8333;0.8411;0.8333;0.8346;0.9385;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
DecisionTreeClassifier;0.9174;0.9185;0.9174;0.9174;0.8889;0.897;0.8889;0.8885;0.8333;0.8533;0.8333;0.8339;0.9381;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 171};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=171)
KNeighborsClassifier;0.8704;0.8731;0.8704;0.8705;0.9375;0.9389;0.9375;0.9377;0.8333;0.8603;0.8333;0.8332;0.966;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9005;0.9025;0.9005;0.9007;0.8681;0.8711;0.8681;0.8691;0.8333;0.8357;0.8333;0.8331;0.9254;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
MLPClassifier;0.7909;0.7947;0.7909;0.7909;0.9028;0.9043;0.9028;0.9029;0.8333;0.8431;0.8333;0.8323;0.9435;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
DecisionTreeClassifier;0.9082;0.91;0.9082;0.9081;0.9236;0.9242;0.9236;0.923;0.8333;0.8338;0.8333;0.8322;0.9311;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
DecisionTreeClassifier;0.9097;0.9111;0.9097;0.9098;0.8681;0.8694;0.8681;0.8646;0.8333;0.8361;0.8333;0.8315;0.9323;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9121;0.914;0.9121;0.9119;0.9236;0.9247;0.9236;0.9239;0.8333;0.8361;0.8333;0.8315;0.9341;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 542};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=542)
DecisionTreeClassifier;0.9105;0.9109;0.9105;0.9105;0.8819;0.8867;0.8819;0.8832;0.8333;0.8369;0.8333;0.8303;0.9329;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
MLPClassifier;0.7724;0.7768;0.7724;0.7727;0.9097;0.9102;0.9097;0.9098;0.8167;0.8337;0.8167;0.82;0.9387;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7755;0.7779;0.7755;0.7751;0.8889;0.8992;0.8889;0.8904;0.8167;0.8337;0.8167;0.82;0.9382;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
MLPClassifier;0.7723;0.7751;0.7723;0.772;0.9097;0.9101;0.9097;0.9099;0.8167;0.8365;0.8167;0.8194;0.9412;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 854, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=854)
SVC;0.7909;0.8062;0.7909;0.7919;0.8819;0.8938;0.8819;0.8837;0.8167;0.8373;0.8167;0.8191;0.9179;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
SVC;0.7763;0.7943;0.7763;0.7781;0.9236;0.927;0.9236;0.9244;0.8167;0.84;0.8167;0.819;0.9081;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.7917;0.8099;0.7917;0.7929;0.9236;0.9251;0.9236;0.9239;0.8167;0.84;0.8167;0.819;0.9138;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.7863;0.8049;0.7863;0.7877;0.875;0.8787;0.875;0.8756;0.8167;0.84;0.8167;0.819;0.916;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
MLPClassifier;0.7685;0.7725;0.7685;0.7683;0.8889;0.8911;0.8889;0.8887;0.8167;0.8253;0.8167;0.8183;0.9404;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
MLPClassifier;0.7654;0.772;0.7654;0.7657;0.8681;0.8712;0.8681;0.869;0.8167;0.8269;0.8167;0.8174;0.938;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
SVC;0.8002;0.8166;0.8002;0.8019;0.8958;0.898;0.8958;0.8962;0.8167;0.8409;0.8167;0.8171;0.9181;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.787;0.8027;0.787;0.788;0.9167;0.9179;0.9167;0.9171;0.8167;0.8409;0.8167;0.8171;0.9128;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.794;0.8095;0.794;0.7956;0.8403;0.842;0.8403;0.841;0.8167;0.8409;0.8167;0.8171;0.9163;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.7855;0.8018;0.7855;0.7873;0.8819;0.8832;0.8819;0.8821;0.8167;0.8409;0.8167;0.8171;0.9125;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.794;0.8121;0.794;0.7958;0.9028;0.9064;0.9028;0.9032;0.8167;0.8409;0.8167;0.8171;0.9164;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
SVC;0.7833;0.8015;0.7833;0.784;0.9306;0.9324;0.9306;0.9306;0.8167;0.8409;0.8167;0.8171;0.9122;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
MLPClassifier;0.7785;0.7834;0.7785;0.7787;0.9236;0.9272;0.9236;0.9234;0.8167;0.8273;0.8167;0.817;0.945;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 799, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=799)
DecisionTreeClassifier;0.9043;0.9059;0.9043;0.904;0.9375;0.9379;0.9375;0.9375;0.8167;0.8212;0.8167;0.8146;0.9281;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
DecisionTreeClassifier;0.9121;0.9145;0.9121;0.9121;0.8958;0.9008;0.8958;0.8963;0.8167;0.8212;0.8167;0.8146;0.9341;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 342};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=342)
SVC;0.8009;0.8173;0.8009;0.803;0.8819;0.8854;0.8819;0.8823;0.8;0.8234;0.8;0.8035;0.9209;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
SVC;0.7879;0.8052;0.7879;0.7886;0.9028;0.9069;0.9028;0.9031;0.8;0.8234;0.8;0.8035;0.9054;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 968};SVC(C=10, probability=True, random_state=968)
SVC;0.7924;0.8121;0.7924;0.794;0.8819;0.8818;0.8819;0.8818;0.8;0.8234;0.8;0.8035;0.9163;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 317};SVC(C=10, probability=True, random_state=317)
SVC;0.7925;0.8081;0.7925;0.7934;0.875;0.875;0.875;0.875;0.8;0.8273;0.8;0.803;0.9146;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 586};SVC(C=10, probability=True, random_state=586)
MLPClassifier;0.7909;0.7942;0.7909;0.7905;0.8472;0.8505;0.8472;0.8479;0.7833;0.8119;0.7833;0.7861;0.9449;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 737, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=737)
LogisticRegression;0.7006;0.7089;0.7006;0.7012;0.7153;0.7347;0.7153;0.7175;0.65;0.6573;0.65;0.6449;0.8621;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.7007;0.7094;0.7007;0.7013;0.7083;0.7217;0.7083;0.7109;0.6333;0.6439;0.6333;0.6302;0.858;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7022;0.7086;0.7022;0.7032;0.7014;0.7075;0.7014;0.7021;0.6333;0.6439;0.6333;0.6302;0.8606;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.703;0.7127;0.703;0.7036;0.6667;0.6812;0.6667;0.6696;0.6333;0.6439;0.6333;0.6302;0.8644;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.6984;0.7062;0.6984;0.6988;0.7292;0.734;0.7292;0.73;0.6333;0.6439;0.6333;0.6302;0.8605;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.6891;0.6957;0.6891;0.6885;0.7361;0.7389;0.7361;0.7369;0.6333;0.6439;0.6333;0.6302;0.8576;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6952;0.7031;0.6952;0.6954;0.6944;0.7054;0.6944;0.6961;0.6333;0.6439;0.6333;0.6302;0.8572;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.6983;0.706;0.6983;0.6973;0.6597;0.6679;0.6597;0.6616;0.6333;0.6439;0.6333;0.6302;0.864;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.7037;0.7099;0.7037;0.7037;0.6736;0.6747;0.6736;0.6738;0.6333;0.6439;0.6333;0.6302;0.8641;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6991;0.7071;0.6991;0.6994;0.6597;0.6661;0.6597;0.6613;0.6333;0.6439;0.6333;0.6302;0.8617;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6944;0.7034;0.6944;0.6954;0.75;0.7545;0.75;0.7492;0.6167;0.6227;0.6167;0.6142;0.8555;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6905;0.6995;0.6905;0.6909;0.7708;0.7802;0.7708;0.7734;0.6167;0.6227;0.6167;0.6142;0.8545;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7006;0.7093;0.7006;0.7012;0.6875;0.6878;0.6875;0.6876;0.6167;0.6227;0.6167;0.6142;0.8613;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.6944;0.7027;0.6944;0.6942;0.7292;0.7279;0.7292;0.7281;0.6167;0.6227;0.6167;0.6142;0.8557;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6991;0.7074;0.6991;0.6996;0.6736;0.677;0.6736;0.6748;0.6167;0.6227;0.6167;0.6142;0.8588;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.6945;0.7044;0.6945;0.6948;0.6736;0.6767;0.6736;0.6744;0.6167;0.6227;0.6167;0.6142;0.8593;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.6906;0.6998;0.6906;0.6912;0.7292;0.7343;0.7292;0.7271;0.6167;0.6227;0.6167;0.6142;0.8606;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.6967;0.7057;0.6967;0.6976;0.7014;0.7058;0.7014;0.7014;0.6167;0.6227;0.6167;0.6142;0.8592;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.6914;0.6981;0.6914;0.6913;0.7222;0.7258;0.7222;0.7219;0.6167;0.6227;0.6167;0.6142;0.8554;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.6906;0.697;0.6906;0.6907;0.7292;0.7475;0.7292;0.7258;0.6167;0.6227;0.6167;0.6142;0.8567;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 337, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=337)"
LogisticRegression;0.7006;0.7091;0.7006;0.7009;0.6597;0.6645;0.6597;0.6617;0.6167;0.6227;0.6167;0.6142;0.8619;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6906;0.7013;0.6906;0.6919;0.7222;0.7219;0.7222;0.7211;0.6167;0.6227;0.6167;0.6142;0.8615;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.6998;0.707;0.6998;0.6999;0.6667;0.6754;0.6667;0.6669;0.6167;0.6227;0.6167;0.6142;0.8594;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6937;0.7043;0.6937;0.6953;0.7153;0.7156;0.7153;0.7139;0.6167;0.6227;0.6167;0.6142;0.8565;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7029;0.7107;0.7029;0.7036;0.6389;0.6447;0.6389;0.6402;0.6167;0.6227;0.6167;0.6142;0.8636;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.6992;0.7059;0.6992;0.6993;0.6806;0.6979;0.6806;0.6838;0.6167;0.6227;0.6167;0.6142;0.8604;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.6975;0.7067;0.6975;0.6978;0.7153;0.7199;0.7153;0.7129;0.6167;0.6227;0.6167;0.6142;0.8603;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6959;0.7042;0.6959;0.6971;0.7222;0.7347;0.7222;0.7203;0.6167;0.6389;0.6167;0.6117;0.8596;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
LogisticRegression;0.6868;0.6942;0.6868;0.6869;0.7153;0.7132;0.7153;0.7123;0.6;0.607;0.6;0.5957;0.858;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 125, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=125)"
LogisticRegression;0.7022;0.7093;0.7022;0.7022;0.6806;0.6906;0.6806;0.6839;0.6;0.607;0.6;0.5957;0.8613;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 928, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=928)"
