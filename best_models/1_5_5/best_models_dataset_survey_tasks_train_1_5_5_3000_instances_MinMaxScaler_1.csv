Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9475;0.9479;0.9475;0.9475;0.9635;0.9637;0.9635;0.9635;0.9167;0.918;0.9167;0.9161;0.984;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9688;0.9689;0.9688;0.9688;0.9702;0.9703;0.9702;0.9702;0.9167;0.9205;0.9167;0.916;0.9917;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 58};RandomForestClassifier(n_estimators=20, random_state=58)
KNeighborsClassifier;0.9438;0.9441;0.9438;0.9438;0.9657;0.9657;0.9657;0.9657;0.9167;0.9202;0.9167;0.915;0.985;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.948;0.9483;0.948;0.948;0.9652;0.9652;0.9652;0.9652;0.9167;0.9202;0.9167;0.915;0.9847;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9671;0.9673;0.9671;0.9671;0.9736;0.9737;0.9736;0.9736;0.9;0.9087;0.9;0.9009;0.9914;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.9666;0.9668;0.9666;0.9666;0.9708;0.9708;0.9708;0.9708;0.8833;0.9035;0.8833;0.8844;0.991;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 779};RandomForestClassifier(n_estimators=20, random_state=779)
MLPClassifier;0.8557;0.8561;0.8557;0.8549;0.9124;0.9128;0.9124;0.9116;0.8667;0.8788;0.8667;0.8677;0.9653;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 391, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=391)
DecisionTreeClassifier;0.9462;0.9465;0.9462;0.9461;0.8692;0.8723;0.8692;0.8687;0.8667;0.8673;0.8667;0.8666;0.9596;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 655};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=655)
MLPClassifier;0.8523;0.8529;0.8523;0.8516;0.9107;0.9104;0.9107;0.9106;0.8667;0.8702;0.8667;0.865;0.9646;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 78, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=78)
DecisionTreeClassifier;0.9451;0.9454;0.9451;0.9451;0.8883;0.8894;0.8883;0.8878;0.85;0.8542;0.85;0.8506;0.959;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 9};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=9)
DecisionTreeClassifier;0.9485;0.9486;0.9485;0.9485;0.8821;0.8814;0.8821;0.8816;0.85;0.8517;0.85;0.8498;0.9614;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 208};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=208)
SVC;0.8326;0.8417;0.8326;0.8343;0.8798;0.8813;0.8798;0.8788;0.7833;0.7833;0.7833;0.7833;0.9313;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 857};SVC(C=10, probability=True, random_state=857)
SVC;0.834;0.8441;0.834;0.8356;0.8709;0.871;0.8709;0.8697;0.7833;0.7831;0.7833;0.7822;0.9348;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 223};SVC(C=10, probability=True, random_state=223)
MLPClassifier;0.8544;0.8545;0.8544;0.8536;0.9298;0.9319;0.9298;0.9299;0.7833;0.8071;0.7833;0.78;0.9638;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 700, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=700)
SVC;0.8312;0.8419;0.8312;0.8329;0.8877;0.8889;0.8877;0.887;0.7667;0.7678;0.7667;0.767;0.932;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 35};SVC(C=10, probability=True, random_state=35)
LogisticRegression;0.7294;0.7332;0.7294;0.7299;0.7524;0.7689;0.7524;0.7551;0.65;0.7022;0.65;0.654;0.8955;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 219, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=219)"
LogisticRegression;0.7335;0.7382;0.7335;0.7345;0.7221;0.7257;0.7221;0.7231;0.65;0.6742;0.65;0.6537;0.8985;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 881, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=881)"
LogisticRegression;0.7345;0.7386;0.7345;0.7359;0.7238;0.7283;0.7238;0.7251;0.65;0.6742;0.65;0.6537;0.8971;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 671, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=671)"
