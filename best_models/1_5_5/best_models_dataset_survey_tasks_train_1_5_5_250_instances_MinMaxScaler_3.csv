Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8566;0.8715;0.8566;0.8565;0.8986;0.9116;0.8986;0.8961;0.8667;0.875;0.8667;0.8668;0.9571;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
MLPClassifier;0.8599;0.8747;0.8599;0.8602;0.8841;0.887;0.8841;0.882;0.8667;0.875;0.8667;0.8668;0.9622;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
DecisionTreeClassifier;0.9227;0.9287;0.9227;0.9225;0.8841;0.8902;0.8841;0.8846;0.8667;0.8673;0.8667;0.8666;0.9583;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
DecisionTreeClassifier;0.9196;0.9231;0.9196;0.9193;0.8551;0.8625;0.8551;0.8552;0.8667;0.8673;0.8667;0.8666;0.9535;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9276;0.9312;0.9276;0.9274;0.8696;0.8687;0.8696;0.8689;0.8667;0.8673;0.8667;0.8666;0.9642;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9147;0.9211;0.9147;0.9143;0.913;0.9173;0.913;0.9113;0.8667;0.8673;0.8667;0.8666;0.9634;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
KNeighborsClassifier;0.8776;0.8817;0.8776;0.8769;0.9275;0.931;0.9275;0.9281;0.8667;0.8665;0.8667;0.8662;0.9632;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8808;0.8847;0.8808;0.8803;0.913;0.9147;0.913;0.913;0.8667;0.8665;0.8667;0.8662;0.9682;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9051;0.9099;0.9051;0.905;0.9275;0.9297;0.9275;0.9278;0.8667;0.8724;0.8667;0.8662;0.9626;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=260)
KNeighborsClassifier;0.8858;0.8915;0.8858;0.8844;0.8551;0.8597;0.8551;0.853;0.8667;0.8665;0.8667;0.8662;0.9703;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8776;0.882;0.8776;0.8759;0.8696;0.8926;0.8696;0.8713;0.8667;0.8665;0.8667;0.8662;0.962;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8857;0.8921;0.8857;0.8845;0.913;0.9127;0.913;0.912;0.8667;0.8665;0.8667;0.8662;0.9735;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8857;0.8905;0.8857;0.884;0.8986;0.9047;0.8986;0.8991;0.8667;0.8665;0.8667;0.8662;0.9644;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8728;0.8782;0.8728;0.8707;0.971;0.9733;0.971;0.9713;0.8667;0.8665;0.8667;0.8662;0.9581;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.884;0.8894;0.884;0.8829;0.8986;0.9159;0.8986;0.8987;0.8667;0.8665;0.8667;0.8662;0.9618;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8857;0.8893;0.8857;0.8846;0.9565;0.9583;0.9565;0.9565;0.8667;0.8665;0.8667;0.8662;0.968;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.9067;0.911;0.9067;0.9064;0.913;0.9181;0.913;0.9129;0.8667;0.8724;0.8667;0.8662;0.9625;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=535)
KNeighborsClassifier;0.8905;0.8987;0.8905;0.8883;0.942;0.947;0.942;0.9418;0.8667;0.8665;0.8667;0.8662;0.9655;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8761;0.8825;0.8761;0.8745;0.942;0.9448;0.942;0.9426;0.8667;0.8665;0.8667;0.8662;0.9649;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8889;0.8946;0.8889;0.8882;0.8986;0.911;0.8986;0.8992;0.8667;0.8665;0.8667;0.8662;0.9691;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8872;0.8904;0.8872;0.8857;0.8986;0.9031;0.8986;0.8982;0.8667;0.8665;0.8667;0.8662;0.9678;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8712;0.8762;0.8712;0.8706;0.9275;0.9279;0.9275;0.9269;0.8667;0.8665;0.8667;0.8662;0.9682;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8856;0.8893;0.8856;0.8844;0.9275;0.9361;0.9275;0.9271;0.8667;0.8665;0.8667;0.8662;0.9661;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8599;0.8701;0.8599;0.8604;0.8406;0.8474;0.8406;0.8397;0.8667;0.8699;0.8667;0.8659;0.9635;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
MLPClassifier;0.8535;0.8676;0.8535;0.8538;0.8986;0.8994;0.8986;0.8981;0.8667;0.8699;0.8667;0.8659;0.9613;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
RandomForestClassifier;0.9259;0.9307;0.9259;0.9259;0.8841;0.8878;0.8841;0.8838;0.8667;0.8699;0.8667;0.8659;0.9855;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 795};RandomForestClassifier(n_estimators=10, random_state=795)
RandomForestClassifier;0.9243;0.9272;0.9243;0.9241;0.8986;0.9025;0.8986;0.8968;0.8667;0.8731;0.8667;0.8651;0.987;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.921;0.926;0.921;0.9211;0.942;0.9467;0.942;0.9405;0.8667;0.8731;0.8667;0.8651;0.985;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
RandomForestClassifier;0.9227;0.9302;0.9227;0.9223;0.913;0.9138;0.913;0.9123;0.8667;0.8731;0.8667;0.8651;0.9876;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
KNeighborsClassifier;0.897;0.9008;0.897;0.8966;0.8696;0.8754;0.8696;0.8713;0.8667;0.8651;0.8667;0.8648;0.9615;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8953;0.9058;0.8953;0.8941;0.8551;0.8549;0.8551;0.8547;0.8667;0.8657;0.8667;0.8647;0.9744;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.934;0.9367;0.934;0.9336;0.9275;0.9326;0.9275;0.9274;0.8667;0.8677;0.8667;0.8645;0.9884;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.9356;0.9392;0.9356;0.9354;0.8261;0.8746;0.8261;0.8282;0.8667;0.8673;0.8667;0.8637;0.9879;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 795};RandomForestClassifier(n_estimators=10, random_state=795)
KNeighborsClassifier;0.8776;0.8822;0.8776;0.8763;0.913;0.9145;0.913;0.913;0.85;0.8523;0.85;0.8508;0.9671;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8454;0.8585;0.8454;0.8455;0.913;0.9126;0.913;0.9117;0.85;0.8634;0.85;0.8505;0.9569;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
MLPClassifier;0.8583;0.8686;0.8583;0.8583;0.8406;0.8397;0.8406;0.8391;0.85;0.8634;0.85;0.8505;0.9612;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
MLPClassifier;0.8615;0.875;0.8615;0.8608;0.8551;0.8632;0.8551;0.8537;0.85;0.8634;0.85;0.8505;0.9606;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8631;0.8777;0.8631;0.8633;0.8406;0.8532;0.8406;0.8422;0.85;0.8554;0.85;0.8504;0.9635;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
KNeighborsClassifier;0.8937;0.9;0.8937;0.8923;0.8406;0.8544;0.8406;0.8405;0.85;0.85;0.85;0.85;0.9657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.876;0.8816;0.876;0.875;0.942;0.9426;0.942;0.942;0.85;0.85;0.85;0.85;0.963;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8696;0.8736;0.8696;0.8693;0.8841;0.8869;0.8841;0.8846;0.85;0.85;0.85;0.85;0.9697;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8921;0.8984;0.8921;0.8909;0.8406;0.8573;0.8406;0.8422;0.85;0.85;0.85;0.85;0.9685;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8857;0.8899;0.8857;0.8845;0.9565;0.9588;0.9565;0.9565;0.85;0.85;0.85;0.85;0.9678;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8729;0.8773;0.8729;0.8713;0.971;0.9716;0.971;0.971;0.85;0.85;0.85;0.85;0.96;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8905;0.9008;0.8905;0.8884;0.942;0.947;0.942;0.9418;0.85;0.85;0.85;0.85;0.9657;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.9211;0.9248;0.9211;0.9213;0.8841;0.8917;0.8841;0.8834;0.85;0.8524;0.85;0.8497;0.9626;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
DecisionTreeClassifier;0.9147;0.9197;0.9147;0.9143;0.8696;0.8807;0.8696;0.8696;0.85;0.8524;0.85;0.8497;0.9572;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
DecisionTreeClassifier;0.9002;0.9037;0.9002;0.8999;0.8841;0.8942;0.8841;0.8852;0.85;0.8524;0.85;0.8497;0.9579;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=535)
DecisionTreeClassifier;0.9098;0.9146;0.9098;0.9097;0.9275;0.9285;0.9275;0.9268;0.85;0.8524;0.85;0.8497;0.9629;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
DecisionTreeClassifier;0.9051;0.9128;0.9051;0.9044;0.9275;0.9287;0.9275;0.9278;0.85;0.8524;0.85;0.8497;0.9546;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
DecisionTreeClassifier;0.9339;0.9411;0.9339;0.9339;0.8406;0.8517;0.8406;0.8405;0.85;0.8524;0.85;0.8497;0.9706;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
DecisionTreeClassifier;0.9066;0.9156;0.9066;0.9069;0.942;0.9448;0.942;0.9426;0.85;0.8524;0.85;0.8497;0.9541;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
DecisionTreeClassifier;0.91;0.9142;0.91;0.9095;0.913;0.9123;0.913;0.9124;0.85;0.8524;0.85;0.8497;0.9624;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9067;0.913;0.9067;0.9064;0.9565;0.9582;0.9565;0.9565;0.85;0.8524;0.85;0.8497;0.9548;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9115;0.9156;0.9115;0.9114;0.8551;0.8552;0.8551;0.8517;0.85;0.8524;0.85;0.8497;0.9593;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9164;0.9217;0.9164;0.9161;0.913;0.9164;0.913;0.9139;0.85;0.8524;0.85;0.8497;0.9624;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9308;0.9338;0.9308;0.9307;0.8696;0.8861;0.8696;0.8708;0.85;0.8524;0.85;0.8497;0.9681;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9132;0.9192;0.9132;0.9122;0.942;0.9443;0.942;0.942;0.85;0.8524;0.85;0.8497;0.9648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9131;0.9188;0.9131;0.9127;0.913;0.9209;0.913;0.913;0.85;0.8524;0.85;0.8497;0.9584;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 260};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=260)
DecisionTreeClassifier;0.9226;0.9295;0.9226;0.9226;0.9565;0.9582;0.9565;0.9565;0.85;0.8524;0.85;0.8497;0.959;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
MLPClassifier;0.8518;0.8679;0.8518;0.8518;0.9565;0.9565;0.9565;0.9562;0.85;0.8524;0.85;0.8497;0.9569;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
MLPClassifier;0.8551;0.8686;0.8551;0.8547;0.8696;0.8746;0.8696;0.8702;0.85;0.8524;0.85;0.8497;0.9609;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
DecisionTreeClassifier;0.921;0.9255;0.921;0.9209;0.8841;0.8839;0.8841;0.8837;0.85;0.8524;0.85;0.8497;0.9571;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
DecisionTreeClassifier;0.9034;0.9075;0.9034;0.9032;0.9275;0.9321;0.9275;0.9272;0.85;0.8524;0.85;0.8497;0.9589;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
DecisionTreeClassifier;0.9065;0.9112;0.9065;0.9066;0.8986;0.9049;0.8986;0.8983;0.85;0.8524;0.85;0.8497;0.9547;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
DecisionTreeClassifier;0.9114;0.916;0.9114;0.9115;0.9565;0.9583;0.9565;0.9565;0.85;0.8524;0.85;0.8497;0.9604;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
DecisionTreeClassifier;0.9146;0.9193;0.9146;0.9148;0.8986;0.8976;0.8986;0.8972;0.85;0.8524;0.85;0.8497;0.9705;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
MLPClassifier;0.8583;0.8727;0.8583;0.8585;0.8406;0.8439;0.8406;0.8402;0.85;0.8524;0.85;0.8497;0.9634;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
DecisionTreeClassifier;0.9242;0.9308;0.9242;0.9245;0.8551;0.8602;0.8551;0.854;0.85;0.8524;0.85;0.8497;0.9642;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
DecisionTreeClassifier;0.9226;0.9264;0.9226;0.923;0.8551;0.8666;0.8551;0.8575;0.85;0.8524;0.85;0.8497;0.9672;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
DecisionTreeClassifier;0.9243;0.9288;0.9243;0.924;0.8551;0.8664;0.8551;0.8555;0.85;0.8524;0.85;0.8497;0.9613;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 349};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=349)
MLPClassifier;0.8551;0.8686;0.8551;0.8544;0.8986;0.901;0.8986;0.8995;0.85;0.8524;0.85;0.8497;0.961;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
DecisionTreeClassifier;0.9259;0.9299;0.9259;0.926;0.8696;0.8758;0.8696;0.869;0.85;0.8524;0.85;0.8497;0.9648;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 535};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=535)
MLPClassifier;0.8566;0.872;0.8566;0.8561;0.8841;0.895;0.8841;0.8837;0.85;0.8524;0.85;0.8497;0.9593;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
RandomForestClassifier;0.9179;0.9226;0.9179;0.9179;0.942;0.9432;0.942;0.9423;0.85;0.855;0.85;0.8493;0.9863;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.926;0.9293;0.926;0.9262;0.8986;0.9022;0.8986;0.8983;0.85;0.855;0.85;0.8493;0.9863;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.9275;0.9316;0.9275;0.9272;0.9275;0.9317;0.9275;0.9274;0.85;0.855;0.85;0.8493;0.9864;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 795};RandomForestClassifier(n_estimators=10, random_state=795)
RandomForestClassifier;0.9163;0.9217;0.9163;0.9159;0.913;0.9228;0.913;0.9114;0.85;0.855;0.85;0.8493;0.9865;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
MLPClassifier;0.8551;0.868;0.8551;0.8548;0.8116;0.8116;0.8116;0.8116;0.85;0.8565;0.85;0.8493;0.9631;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
MLPClassifier;0.8517;0.867;0.8517;0.8516;0.9275;0.9274;0.9275;0.9272;0.85;0.8565;0.85;0.8493;0.9578;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
MLPClassifier;0.8471;0.8591;0.8471;0.8475;0.8841;0.8902;0.8841;0.8816;0.85;0.8565;0.85;0.8493;0.9597;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
RandomForestClassifier;0.9371;0.941;0.9371;0.9365;0.8551;0.8591;0.8551;0.8534;0.85;0.858;0.85;0.8492;0.9873;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
SVC;0.8503;0.8661;0.8503;0.8497;0.913;0.9136;0.913;0.913;0.85;0.8533;0.85;0.8491;0.9279;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
KNeighborsClassifier;0.8873;0.8922;0.8873;0.8862;0.913;0.931;0.913;0.9135;0.85;0.8481;0.85;0.8487;0.9616;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8794;0.8833;0.8794;0.8779;0.913;0.9246;0.913;0.9138;0.85;0.8481;0.85;0.8487;0.9649;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8906;0.897;0.8906;0.8889;0.8986;0.903;0.8986;0.8949;0.85;0.8493;0.85;0.8486;0.967;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.934;0.9404;0.934;0.9342;0.8986;0.9018;0.8986;0.899;0.85;0.8492;0.85;0.8485;0.9859;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
SVC;0.8568;0.8739;0.8568;0.8563;0.9275;0.9279;0.9275;0.9269;0.85;0.8492;0.85;0.8485;0.9313;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
RandomForestClassifier;0.9098;0.9186;0.9098;0.9102;0.9855;0.9861;0.9855;0.9855;0.85;0.8492;0.85;0.8485;0.9846;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
RandomForestClassifier;0.905;0.9135;0.905;0.9048;0.971;0.9716;0.971;0.971;0.85;0.8518;0.85;0.8483;0.9815;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 133};RandomForestClassifier(n_estimators=5, random_state=133)
RandomForestClassifier;0.9179;0.9237;0.9179;0.9176;0.8986;0.8988;0.8986;0.8978;0.85;0.8518;0.85;0.8483;0.9883;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
MLPClassifier;0.8647;0.8744;0.8647;0.8643;0.8116;0.8139;0.8116;0.812;0.85;0.8528;0.85;0.8482;0.9605;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8583;0.875;0.8583;0.8568;0.8551;0.8567;0.8551;0.8524;0.85;0.8528;0.85;0.8482;0.9637;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8469;0.8633;0.8469;0.8482;0.913;0.9138;0.913;0.9123;0.85;0.8528;0.85;0.8482;0.9597;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8534;0.8662;0.8534;0.8541;0.8696;0.8697;0.8696;0.8672;0.85;0.8528;0.85;0.8482;0.9615;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8469;0.8602;0.8469;0.8463;0.8841;0.889;0.8841;0.8847;0.85;0.8528;0.85;0.8482;0.9577;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8502;0.8663;0.8502;0.8499;0.8986;0.8997;0.8986;0.8988;0.85;0.8528;0.85;0.8482;0.9586;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
RandomForestClassifier;0.9162;0.92;0.9162;0.9161;0.913;0.926;0.913;0.9122;0.85;0.8571;0.85;0.8473;0.9865;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
RandomForestClassifier;0.9178;0.9207;0.9178;0.9179;0.9275;0.9286;0.9275;0.9271;0.85;0.8526;0.85;0.8468;0.9862;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
SVC;0.8584;0.8718;0.8584;0.8579;0.8696;0.8742;0.8696;0.8675;0.8333;0.8399;0.8333;0.8344;0.9397;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
KNeighborsClassifier;0.8873;0.8945;0.8873;0.8859;0.8986;0.9009;0.8986;0.8972;0.8333;0.8365;0.8333;0.8339;0.9692;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8487;0.8622;0.8487;0.8482;0.8986;0.8989;0.8986;0.8967;0.8333;0.8524;0.8333;0.8338;0.9641;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
MLPClassifier;0.8633;0.8762;0.8633;0.8634;0.8406;0.8631;0.8406;0.8426;0.8333;0.8379;0.8333;0.8333;0.9624;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
RandomForestClassifier;0.9244;0.9289;0.9244;0.9243;0.8406;0.8495;0.8406;0.8409;0.8333;0.8354;0.8333;0.833;0.9857;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.9179;0.9232;0.9179;0.9182;0.942;0.942;0.942;0.9417;0.8333;0.8374;0.8333;0.8328;0.9852;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
RandomForestClassifier;0.9098;0.9153;0.9098;0.9096;0.9565;0.9615;0.9565;0.957;0.8333;0.8374;0.8333;0.8328;0.9856;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.9227;0.927;0.9227;0.9225;0.8986;0.9127;0.8986;0.9007;0.8333;0.8374;0.8333;0.8328;0.9878;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 583};RandomForestClassifier(n_estimators=10, random_state=583)
RandomForestClassifier;0.9324;0.9355;0.9324;0.9322;0.8696;0.8753;0.8696;0.87;0.8333;0.8374;0.8333;0.8328;0.9872;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
RandomForestClassifier;0.9276;0.9329;0.9276;0.9276;0.9275;0.9333;0.9275;0.9266;0.8333;0.8374;0.8333;0.8328;0.9837;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.9292;0.9338;0.9292;0.9289;0.9565;0.9571;0.9565;0.9565;0.8333;0.8374;0.8333;0.8328;0.9849;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
MLPClassifier;0.8551;0.8711;0.8551;0.8557;0.8841;0.8932;0.8841;0.8846;0.8333;0.8341;0.8333;0.8327;0.9591;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
MLPClassifier;0.8552;0.8695;0.8552;0.8552;0.8551;0.8656;0.8551;0.8548;0.8333;0.8437;0.8333;0.8325;0.9653;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
MLPClassifier;0.8518;0.8646;0.8518;0.8514;0.8696;0.8687;0.8696;0.8689;0.8333;0.8437;0.8333;0.8325;0.961;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
MLPClassifier;0.8487;0.861;0.8487;0.8494;0.8841;0.8899;0.8841;0.8858;0.8333;0.8367;0.8333;0.8324;0.9561;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
MLPClassifier;0.8598;0.8735;0.8598;0.8608;0.8406;0.8452;0.8406;0.842;0.8333;0.8367;0.8333;0.8324;0.9577;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 58, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=58)
RandomForestClassifier;0.9227;0.9252;0.9227;0.922;0.8841;0.8951;0.8841;0.8805;0.8333;0.8367;0.8333;0.8324;0.986;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 795};RandomForestClassifier(n_estimators=10, random_state=795)
RandomForestClassifier;0.9227;0.9304;0.9227;0.9225;0.9565;0.9577;0.9565;0.9568;0.8333;0.8333;0.8333;0.8323;0.9836;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 583};RandomForestClassifier(n_estimators=20, random_state=583)
RandomForestClassifier;0.926;0.9301;0.926;0.9259;0.913;0.913;0.913;0.913;0.8333;0.8333;0.8333;0.8323;0.9869;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
SVC;0.8535;0.8662;0.8535;0.8531;0.8841;0.8891;0.8841;0.8829;0.8333;0.836;0.8333;0.832;0.9341;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
MLPClassifier;0.8535;0.8652;0.8535;0.8536;0.8116;0.8251;0.8116;0.8134;0.8333;0.8387;0.8333;0.8317;0.9591;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 931, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=931)
SVC;0.8503;0.8665;0.8503;0.8503;0.8986;0.8984;0.8986;0.8982;0.8333;0.838;0.8333;0.8317;0.9291;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.8551;0.8709;0.8551;0.8543;0.8986;0.9122;0.8986;0.8931;0.8333;0.838;0.8333;0.8317;0.9335;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
SVC;0.8631;0.8733;0.8631;0.8623;0.8551;0.8597;0.8551;0.853;0.8333;0.8387;0.8333;0.8317;0.9247;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8503;0.864;0.8503;0.8488;0.8841;0.8897;0.8841;0.885;0.8333;0.8361;0.8333;0.8315;0.9346;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.8486;0.8611;0.8486;0.8487;0.8841;0.8897;0.8841;0.885;0.8333;0.8361;0.8333;0.8315;0.9381;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
RandomForestClassifier;0.9099;0.914;0.9099;0.9092;0.9565;0.9615;0.9565;0.957;0.8333;0.8361;0.8333;0.8315;0.9836;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 795};RandomForestClassifier(n_estimators=20, random_state=795)
SVC;0.8535;0.867;0.8535;0.8533;0.8841;0.8869;0.8841;0.8829;0.8333;0.8361;0.8333;0.8315;0.9351;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
SVC;0.8518;0.8657;0.8518;0.8507;0.913;0.9154;0.913;0.9123;0.8333;0.8338;0.8333;0.8312;0.9384;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
SVC;0.8551;0.8676;0.8551;0.8547;0.8406;0.8411;0.8406;0.8389;0.8333;0.8338;0.8333;0.8312;0.9299;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.855;0.8694;0.855;0.8551;0.8841;0.8906;0.8841;0.8835;0.8333;0.8338;0.8333;0.8312;0.9403;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.847;0.8582;0.847;0.8464;0.913;0.9199;0.913;0.9124;0.8333;0.8338;0.8333;0.8312;0.9312;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8486;0.8615;0.8486;0.8487;0.8696;0.8744;0.8696;0.8699;0.8333;0.8338;0.8333;0.8312;0.9375;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
RandomForestClassifier;0.9195;0.9258;0.9195;0.9196;0.942;0.9506;0.942;0.9416;0.8333;0.8333;0.8333;0.8293;0.9813;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 583};RandomForestClassifier(n_estimators=5, random_state=583)
SVC;0.847;0.8614;0.847;0.8453;0.913;0.9229;0.913;0.9123;0.8167;0.8212;0.8167;0.8146;0.9278;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8504;0.8645;0.8504;0.8504;0.8841;0.8836;0.8841;0.8819;0.8167;0.8194;0.8167;0.8142;0.9249;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8468;0.8642;0.8468;0.8443;0.913;0.9189;0.913;0.9138;0.8167;0.8194;0.8167;0.8142;0.9264;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.8503;0.8661;0.8503;0.8494;0.9565;0.9577;0.9565;0.9568;0.8167;0.8194;0.8167;0.8142;0.9422;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.8567;0.8705;0.8567;0.857;0.8986;0.9002;0.8986;0.8974;0.8167;0.8194;0.8167;0.8142;0.9314;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.8615;0.8726;0.8615;0.8615;0.8696;0.874;0.8696;0.8707;0.8167;0.8194;0.8167;0.8142;0.9366;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
SVC;0.8535;0.8685;0.8535;0.854;0.8986;0.9004;0.8986;0.8984;0.8167;0.8194;0.8167;0.8142;0.9308;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
SVC;0.8551;0.8666;0.8551;0.8543;0.8986;0.8988;0.8986;0.8978;0.8167;0.8194;0.8167;0.8142;0.9356;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
SVC;0.847;0.8606;0.847;0.8468;0.9275;0.9304;0.9275;0.9263;0.8167;0.8194;0.8167;0.8142;0.9362;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.8567;0.8717;0.8567;0.8565;0.8551;0.8587;0.8551;0.8521;0.8167;0.8194;0.8167;0.8142;0.9387;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
KNeighborsClassifier;0.8825;0.8904;0.8825;0.88;0.9275;0.9348;0.9275;0.9271;0.8167;0.8174;0.8167;0.8125;0.9639;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.8551;0.871;0.8551;0.8542;0.8551;0.8718;0.8551;0.8548;0.8;0.8171;0.8;0.8028;0.9363;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.8599;0.8705;0.8599;0.8596;0.8406;0.8488;0.8406;0.8389;0.8;0.805;0.8;0.7993;0.9396;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
RandomForestClassifier;0.9147;0.923;0.9147;0.9145;0.9275;0.928;0.9275;0.9275;0.8;0.8068;0.8;0.7989;0.9844;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 133};RandomForestClassifier(n_estimators=5, random_state=133)
SVC;0.868;0.8776;0.868;0.8675;0.7971;0.8399;0.7971;0.7796;0.8;0.8056;0.8;0.7969;0.9302;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 270};SVC(C=10, probability=True, random_state=270)
SVC;0.8599;0.8752;0.8599;0.8589;0.8406;0.8409;0.8406;0.8355;0.8;0.8056;0.8;0.7969;0.9291;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, probability=True, random_state=596)
SVC;0.8518;0.8641;0.8518;0.8501;0.8986;0.9035;0.8986;0.8952;0.7833;0.7873;0.7833;0.7831;0.9307;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 382};SVC(C=10, probability=True, random_state=382)
LogisticRegression;0.7843;0.816;0.7843;0.7864;0.7971;0.8;0.7971;0.7912;0.7833;0.7815;0.7833;0.7814;0.9085;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7907;0.8216;0.7907;0.7924;0.7681;0.7837;0.7681;0.7587;0.7833;0.7815;0.7833;0.7814;0.9091;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.7939;0.8282;0.7939;0.7949;0.8261;0.8337;0.8261;0.8248;0.7667;0.7655;0.7667;0.7657;0.9045;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.797;0.8276;0.797;0.7994;0.6812;0.7024;0.6812;0.6624;0.75;0.7488;0.75;0.7485;0.9139;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.7908;0.823;0.7908;0.7913;0.8551;0.8686;0.8551;0.8549;0.75;0.7487;0.75;0.7484;0.9036;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.7843;0.8139;0.7843;0.7864;0.7971;0.8371;0.7971;0.7994;0.75;0.7487;0.75;0.7484;0.9066;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.7874;0.8145;0.7874;0.7889;0.7971;0.8147;0.7971;0.8007;0.75;0.7487;0.75;0.7484;0.912;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.8004;0.8295;0.8004;0.803;0.7971;0.8111;0.7971;0.7974;0.75;0.7487;0.75;0.7484;0.9094;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.7857;0.821;0.7857;0.7874;0.8261;0.8342;0.8261;0.8273;0.75;0.7487;0.75;0.7484;0.904;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.789;0.8211;0.789;0.7884;0.7971;0.8223;0.7971;0.7989;0.75;0.7487;0.75;0.7484;0.9051;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.7955;0.8283;0.7955;0.7972;0.7971;0.8254;0.7971;0.8018;0.75;0.7487;0.75;0.7484;0.9072;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7971;0.8273;0.7971;0.7984;0.8116;0.8438;0.8116;0.812;0.75;0.7487;0.75;0.7484;0.9099;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7954;0.8264;0.7954;0.7975;0.8116;0.8333;0.8116;0.8138;0.75;0.7487;0.75;0.7484;0.9052;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.7907;0.8237;0.7907;0.7895;0.8551;0.8764;0.8551;0.8545;0.75;0.7487;0.75;0.7484;0.9057;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7857;0.8175;0.7857;0.7867;0.8551;0.8836;0.8551;0.8565;0.75;0.7487;0.75;0.7484;0.9041;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7987;0.8288;0.7987;0.8012;0.8116;0.848;0.8116;0.8113;0.75;0.7487;0.75;0.7484;0.9035;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.776;0.8093;0.776;0.7773;0.8261;0.8438;0.8261;0.8266;0.75;0.7487;0.75;0.7484;0.9006;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.7778;0.8027;0.7778;0.7786;0.8551;0.8591;0.8551;0.8562;0.75;0.7487;0.75;0.7484;0.9089;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7908;0.823;0.7908;0.7914;0.7681;0.791;0.7681;0.7704;0.75;0.7487;0.75;0.7484;0.9067;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7956;0.8229;0.7956;0.7972;0.7681;0.7944;0.7681;0.7731;0.75;0.7487;0.75;0.7484;0.9108;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7859;0.8138;0.7859;0.7872;0.8116;0.8417;0.8116;0.8094;0.75;0.7487;0.75;0.7484;0.904;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.7907;0.8209;0.7907;0.7933;0.8551;0.8763;0.8551;0.8587;0.75;0.7487;0.75;0.7484;0.9029;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.7713;0.8027;0.7713;0.7732;0.913;0.9228;0.913;0.9114;0.75;0.7487;0.75;0.7484;0.9016;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.7761;0.8029;0.7761;0.7767;0.7101;0.7554;0.7101;0.7172;0.75;0.7487;0.75;0.7484;0.9124;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.7843;0.8162;0.7843;0.7838;0.7826;0.7998;0.7826;0.7812;0.75;0.7487;0.75;0.7484;0.9103;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.7825;0.8118;0.7825;0.7839;0.8116;0.8157;0.8116;0.812;0.75;0.7487;0.75;0.7484;0.9066;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.8003;0.8286;0.8003;0.8023;0.7971;0.8312;0.7971;0.7921;0.7333;0.731;0.7333;0.73;0.9087;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
LogisticRegression;0.8052;0.8344;0.8052;0.8062;0.7536;0.7686;0.7536;0.7536;0.7333;0.731;0.7333;0.73;0.9115;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.7956;0.8274;0.7956;0.7967;0.8116;0.8264;0.8116;0.8071;0.7333;0.731;0.7333;0.73;0.906;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 855, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=855)"
LogisticRegression;0.789;0.8154;0.789;0.7889;0.8116;0.8316;0.8116;0.8131;0.7333;0.731;0.7333;0.73;0.9051;smote;250;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 75, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=75)"
