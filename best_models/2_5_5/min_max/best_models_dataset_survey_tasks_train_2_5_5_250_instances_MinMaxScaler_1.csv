Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9323;0.9351;0.9323;0.9326;0.913;0.9189;0.913;0.9138;0.9;0.9015;0.9;0.9004;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
RandomForestClassifier;0.9242;0.9272;0.9242;0.9244;0.8841;0.8887;0.8841;0.8852;0.9;0.9021;0.9;0.8999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
RandomForestClassifier;0.9195;0.9235;0.9195;0.9196;0.913;0.9142;0.913;0.9133;0.9;0.9019;0.9;0.8999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 939};RandomForestClassifier(n_estimators=10, random_state=939)
RandomForestClassifier;0.9243;0.9287;0.9243;0.9239;0.8841;0.8861;0.8841;0.8831;0.9;0.9019;0.9;0.8999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
RandomForestClassifier;0.9276;0.9311;0.9276;0.9279;0.8986;0.9127;0.8986;0.9007;0.9;0.9019;0.9;0.8999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
DecisionTreeClassifier;0.9034;0.9059;0.9034;0.9027;0.7971;0.84;0.7971;0.7992;0.8833;0.8868;0.8833;0.884;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.8906;0.8968;0.8906;0.8911;0.8986;0.899;0.8986;0.8985;0.8833;0.8848;0.8833;0.8837;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
RandomForestClassifier;0.9162;0.9194;0.9162;0.9164;0.942;0.9464;0.942;0.9422;0.8833;0.8848;0.8833;0.8837;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
RandomForestClassifier;0.9131;0.9186;0.9131;0.9139;0.942;0.9426;0.942;0.942;0.8833;0.884;0.8833;0.8833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
RandomForestClassifier;0.9307;0.934;0.9307;0.9307;0.9565;0.9582;0.9565;0.9565;0.8833;0.8833;0.8833;0.8833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.9291;0.9309;0.9291;0.929;0.8841;0.8839;0.8841;0.8837;0.8833;0.886;0.8833;0.8832;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.9243;0.9279;0.9243;0.9246;0.8986;0.9049;0.8986;0.8999;0.8833;0.886;0.8833;0.8832;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
RandomForestClassifier;0.9179;0.9219;0.9179;0.9188;0.9565;0.9582;0.9565;0.9565;0.8833;0.886;0.8833;0.8832;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.9178;0.9236;0.9178;0.9178;0.8986;0.9065;0.8986;0.899;0.8833;0.8832;0.8833;0.8829;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 322};RandomForestClassifier(n_estimators=10, random_state=322)
RandomForestClassifier;0.9276;0.9321;0.9276;0.928;0.913;0.931;0.913;0.9146;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 178};RandomForestClassifier(n_estimators=10, random_state=178)
RandomForestClassifier;0.913;0.918;0.913;0.9129;0.8841;0.8848;0.8841;0.8806;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.9243;0.9273;0.9243;0.9244;0.913;0.9177;0.913;0.9135;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
RandomForestClassifier;0.921;0.923;0.921;0.9211;0.913;0.9163;0.913;0.9135;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
RandomForestClassifier;0.9275;0.9305;0.9275;0.9278;0.913;0.9253;0.913;0.9134;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.9227;0.9259;0.9227;0.9228;0.971;0.9733;0.971;0.971;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
RandomForestClassifier;0.9211;0.9259;0.9211;0.9207;0.913;0.9197;0.913;0.9137;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
RandomForestClassifier;0.9211;0.9247;0.9211;0.9209;0.913;0.9176;0.913;0.9127;0.8667;0.8704;0.8667;0.8674;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
RandomForestClassifier;0.9211;0.9249;0.9211;0.9213;0.8986;0.9052;0.8986;0.8982;0.8667;0.8709;0.8667;0.8673;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
KNeighborsClassifier;0.8309;0.8408;0.8309;0.8306;0.8986;0.9012;0.8986;0.8991;0.8667;0.8673;0.8667;0.8666;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8213;0.8264;0.8213;0.8217;0.8841;0.8852;0.8841;0.8843;0.8667;0.8673;0.8667;0.8666;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.9227;0.9286;0.9227;0.9233;0.8986;0.9047;0.8986;0.8991;0.8667;0.8664;0.8667;0.8662;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
RandomForestClassifier;0.9226;0.9267;0.9226;0.9231;0.971;0.9733;0.971;0.971;0.8667;0.8668;0.8667;0.8657;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
RandomForestClassifier;0.9227;0.9286;0.9227;0.9228;0.8696;0.8796;0.8696;0.872;0.85;0.8557;0.85;0.8514;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
SVC;0.7522;0.7714;0.7522;0.7533;0.8551;0.8594;0.8551;0.8554;0.85;0.8557;0.85;0.8514;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
RandomForestClassifier;0.9211;0.9262;0.9211;0.9212;0.8841;0.902;0.8841;0.8826;0.85;0.857;0.85;0.8508;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 939};RandomForestClassifier(n_estimators=10, random_state=939)
KNeighborsClassifier;0.818;0.8325;0.818;0.8181;0.8841;0.902;0.8841;0.8859;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8036;0.8161;0.8036;0.8045;0.8406;0.845;0.8406;0.8417;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8132;0.8245;0.8132;0.814;0.8841;0.8956;0.8841;0.8864;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8051;0.8165;0.8051;0.8056;0.913;0.917;0.913;0.9131;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.818;0.8328;0.818;0.8188;0.8406;0.8922;0.8406;0.8422;0.85;0.8514;0.85;0.8504;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.884;0.8906;0.884;0.8847;0.913;0.9189;0.913;0.9138;0.85;0.85;0.85;0.85;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
RandomForestClassifier;0.926;0.9284;0.926;0.926;0.942;0.9425;0.942;0.9413;0.85;0.8506;0.85;0.8499;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
KNeighborsClassifier;0.8325;0.8439;0.8325;0.8334;0.8986;0.9025;0.8986;0.8968;0.85;0.8497;0.85;0.8495;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8245;0.8346;0.8245;0.8239;0.8551;0.8594;0.8551;0.8565;0.85;0.8497;0.85;0.8495;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.802;0.8127;0.802;0.8027;0.8696;0.8845;0.8696;0.8701;0.85;0.855;0.85;0.8493;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8228;0.8377;0.8228;0.8233;0.8986;0.9081;0.8986;0.8994;0.85;0.8526;0.85;0.8487;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8696;0.8742;0.8696;0.8695;0.9275;0.9328;0.9275;0.9283;0.85;0.8527;0.85;0.8465;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
DecisionTreeClassifier;0.8873;0.8919;0.8873;0.8871;0.8116;0.8371;0.8116;0.816;0.8333;0.8419;0.8333;0.8353;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.9035;0.9078;0.9035;0.9032;0.8696;0.8861;0.8696;0.8708;0.8333;0.8386;0.8333;0.8348;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
RandomForestClassifier;0.913;0.9161;0.913;0.9128;0.942;0.9455;0.942;0.9426;0.8333;0.8386;0.8333;0.8348;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
KNeighborsClassifier;0.8149;0.8308;0.8149;0.8156;0.913;0.9224;0.913;0.9145;0.8333;0.8426;0.8333;0.8341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8165;0.8282;0.8165;0.8177;0.8841;0.8871;0.8841;0.8845;0.8333;0.8426;0.8333;0.8341;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8083;0.821;0.8083;0.8104;0.8841;0.8956;0.8841;0.8864;0.8333;0.836;0.8333;0.8335;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8293;0.8442;0.8293;0.8309;0.8551;0.8666;0.8551;0.8575;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8229;0.8338;0.8229;0.8235;0.8986;0.8986;0.8986;0.8986;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8276;0.838;0.8276;0.8292;0.8406;0.8407;0.8406;0.8373;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.81;0.8226;0.81;0.8121;0.8696;0.8713;0.8696;0.8701;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8067;0.8155;0.8067;0.8073;0.913;0.9142;0.913;0.9133;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8083;0.8195;0.8083;0.8092;0.8406;0.8393;0.8406;0.8391;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8166;0.8287;0.8166;0.8183;0.913;0.9165;0.913;0.9136;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8133;0.8304;0.8133;0.8154;0.8841;0.8846;0.8841;0.884;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8212;0.8302;0.8212;0.8224;0.8841;0.8897;0.8841;0.885;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8197;0.8292;0.8197;0.8201;0.8841;0.8897;0.8841;0.885;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8294;0.8424;0.8294;0.8314;0.8986;0.9079;0.8986;0.8983;0.8333;0.8333;0.8333;0.8333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8778;0.8805;0.8778;0.8771;0.942;0.942;0.942;0.942;0.8333;0.833;0.8333;0.8328;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
SVC;0.7473;0.7685;0.7473;0.7484;0.8696;0.8719;0.8696;0.8682;0.8333;0.8341;0.8333;0.8327;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
DecisionTreeClassifier;0.8986;0.9023;0.8986;0.8986;0.7826;0.7854;0.7826;0.7824;0.8333;0.8341;0.8333;0.8327;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
SVC;0.7536;0.7758;0.7536;0.7548;0.8116;0.8151;0.8116;0.811;0.8333;0.8366;0.8333;0.8307;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7521;0.767;0.7521;0.7516;0.8841;0.914;0.8841;0.8867;0.8167;0.826;0.8167;0.8187;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
KNeighborsClassifier;0.818;0.8271;0.818;0.8187;0.8696;0.8859;0.8696;0.8696;0.8167;0.8234;0.8167;0.8178;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8841;0.8874;0.8841;0.8833;0.8406;0.8411;0.8406;0.8389;0.8167;0.8188;0.8167;0.8174;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=765)
SVC;0.744;0.766;0.744;0.7433;0.8551;0.8606;0.8551;0.8568;0.8167;0.8181;0.8167;0.817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
KNeighborsClassifier;0.8036;0.8169;0.8036;0.8056;0.913;0.9149;0.913;0.9137;0.8167;0.818;0.8167;0.817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9146;0.9192;0.9146;0.9145;0.9275;0.9336;0.9275;0.9286;0.8167;0.8181;0.8167;0.817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 178};RandomForestClassifier(n_estimators=20, random_state=178)
SVC;0.744;0.7697;0.744;0.7435;0.8841;0.8906;0.8841;0.8835;0.8167;0.8181;0.8167;0.817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
RandomForestClassifier;0.9227;0.9256;0.9227;0.923;0.8986;0.9049;0.8986;0.8999;0.8167;0.818;0.8167;0.817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 322};RandomForestClassifier(n_estimators=20, random_state=322)
SVC;0.752;0.7711;0.752;0.7524;0.7681;0.7793;0.7681;0.768;0.8167;0.8181;0.8167;0.817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
DecisionTreeClassifier;0.8873;0.89;0.8873;0.886;0.8841;0.8906;0.8841;0.8835;0.8167;0.819;0.8167;0.8168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
RandomForestClassifier;0.9195;0.9249;0.9195;0.9204;0.8841;0.8904;0.8841;0.8854;0.8167;0.819;0.8167;0.8164;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 939};RandomForestClassifier(n_estimators=20, random_state=939)
SVC;0.7376;0.7711;0.7376;0.7371;0.8406;0.842;0.8406;0.8403;0.8167;0.819;0.8167;0.8164;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
KNeighborsClassifier;0.8148;0.8275;0.8148;0.8161;0.8261;0.8525;0.8261;0.8264;0.8167;0.8163;0.8167;0.8162;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8084;0.8211;0.8084;0.8088;0.8406;0.8466;0.8406;0.8418;0.8167;0.8163;0.8167;0.8162;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
SVC;0.7455;0.7718;0.7455;0.7459;0.8696;0.8696;0.8696;0.8696;0.8167;0.8184;0.8167;0.8153;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
SVC;0.7391;0.7655;0.7391;0.7403;0.8841;0.8839;0.8841;0.8837;0.8167;0.8184;0.8167;0.8153;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
DecisionTreeClassifier;0.8841;0.8886;0.8841;0.8833;0.8841;0.8949;0.8841;0.8834;0.8167;0.8174;0.8167;0.8125;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
SVC;0.7487;0.7719;0.7487;0.7493;0.7971;0.8011;0.7971;0.7981;0.8;0.803;0.8;0.8012;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
SVC;0.7505;0.7794;0.7505;0.7497;0.8116;0.828;0.8116;0.8134;0.8;0.803;0.8;0.8012;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
SVC;0.7423;0.7636;0.7423;0.7416;0.7536;0.7498;0.7536;0.75;0.8;0.803;0.8;0.8012;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.76;0.7876;0.76;0.7611;0.8696;0.8689;0.8696;0.8673;0.8;0.803;0.8;0.8012;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
SVC;0.752;0.774;0.752;0.7528;0.8406;0.8398;0.8406;0.8399;0.8;0.8042;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
SVC;0.7503;0.7741;0.7503;0.7497;0.7971;0.7981;0.7971;0.7974;0.8;0.8042;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7634;0.7786;0.7634;0.7626;0.7826;0.7817;0.7826;0.7819;0.8;0.8042;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
DecisionTreeClassifier;0.8696;0.8732;0.8696;0.8682;0.8551;0.8576;0.8551;0.8556;0.8;0.8038;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
SVC;0.7489;0.7719;0.7489;0.7478;0.8261;0.8398;0.8261;0.8236;0.8;0.8042;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
DecisionTreeClassifier;0.8874;0.8895;0.8874;0.8865;0.9275;0.9342;0.9275;0.9282;0.8;0.8021;0.8;0.8007;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
DecisionTreeClassifier;0.8889;0.8922;0.8889;0.8879;0.942;0.9444;0.942;0.9423;0.8;0.8021;0.8;0.8007;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
KNeighborsClassifier;0.8164;0.8295;0.8164;0.8171;0.8551;0.8649;0.8551;0.8556;0.8;0.8111;0.8;0.8002;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8727;0.8773;0.8727;0.8724;0.7971;0.8009;0.7971;0.798;0.8;0.8005;0.8;0.7999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
SVC;0.757;0.7811;0.757;0.7571;0.8986;0.9008;0.8986;0.8988;0.8;0.8014;0.8;0.7998;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7424;0.7621;0.7424;0.7411;0.8406;0.8425;0.8406;0.8404;0.8;0.8014;0.8;0.7998;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
SVC;0.7584;0.7736;0.7584;0.7563;0.8261;0.8372;0.8261;0.8275;0.8;0.8014;0.8;0.7998;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7359;0.7605;0.7359;0.7372;0.8696;0.8796;0.8696;0.8685;0.8;0.8028;0.8;0.7991;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
DecisionTreeClassifier;0.8889;0.8938;0.8889;0.8888;0.913;0.9136;0.913;0.913;0.8;0.7988;0.8;0.7991;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
DecisionTreeClassifier;0.897;0.9016;0.897;0.8978;0.8986;0.9065;0.8986;0.8994;0.8;0.7988;0.8;0.7991;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.905;0.9073;0.905;0.9046;0.913;0.9135;0.913;0.913;0.8;0.8002;0.8;0.7988;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
DecisionTreeClassifier;0.8824;0.887;0.8824;0.8816;0.8841;0.8852;0.8841;0.8843;0.8;0.798;0.8;0.7987;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
MLPClassifier;0.7262;0.7402;0.7262;0.7253;0.8551;0.858;0.8551;0.8532;0.8;0.799;0.8;0.7985;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
DecisionTreeClassifier;0.8888;0.8915;0.8888;0.8885;0.8696;0.8755;0.8696;0.8708;0.8;0.8008;0.8;0.7982;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
MLPClassifier;0.7294;0.7392;0.7294;0.7289;0.8116;0.8116;0.8116;0.8116;0.8;0.7968;0.8;0.7971;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
MLPClassifier;0.7521;0.7614;0.7521;0.7521;0.7246;0.7349;0.7246;0.7258;0.8;0.7955;0.8;0.7937;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
SVC;0.7473;0.7732;0.7473;0.7473;0.8551;0.8635;0.8551;0.8535;0.7833;0.7902;0.7833;0.7855;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7456;0.7724;0.7456;0.7471;0.8551;0.8536;0.8551;0.8541;0.7833;0.7902;0.7833;0.7855;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
DecisionTreeClassifier;0.8921;0.897;0.8921;0.8918;0.8261;0.8387;0.8261;0.8259;0.7833;0.7902;0.7833;0.7855;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
SVC;0.7375;0.7609;0.7375;0.7377;0.8696;0.8756;0.8696;0.8687;0.7833;0.7872;0.7833;0.7839;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
SVC;0.7553;0.7725;0.7553;0.7542;0.8841;0.8839;0.8841;0.8837;0.7833;0.7872;0.7833;0.7839;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 596};SVC(C=10, random_state=596)
SVC;0.7359;0.7617;0.7359;0.7374;0.9275;0.9405;0.9275;0.9267;0.7833;0.7872;0.7833;0.7839;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
DecisionTreeClassifier;0.884;0.8881;0.884;0.8838;0.8116;0.8169;0.8116;0.8132;0.7833;0.7833;0.7833;0.7833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
MLPClassifier;0.7134;0.7282;0.7134;0.7136;0.8986;0.9127;0.8986;0.9007;0.7833;0.7839;0.7833;0.7833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
SVC;0.7504;0.7759;0.7504;0.7517;0.8841;0.914;0.8841;0.8871;0.7833;0.7833;0.7833;0.7833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
MLPClassifier;0.7277;0.7345;0.7277;0.7266;0.8116;0.8224;0.8116;0.8139;0.7833;0.7839;0.7833;0.7833;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
MLPClassifier;0.7263;0.7395;0.7263;0.7265;0.8841;0.8822;0.8841;0.882;0.7833;0.7838;0.7833;0.7822;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7343;0.7402;0.7343;0.7309;0.7971;0.8043;0.7971;0.7958;0.7833;0.7815;0.7833;0.7814;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
MLPClassifier;0.7246;0.7339;0.7246;0.7218;0.8261;0.8303;0.8261;0.8271;0.7833;0.7815;0.7833;0.7814;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
MLPClassifier;0.7374;0.7477;0.7374;0.7377;0.8841;0.8917;0.8841;0.8857;0.7833;0.7815;0.7833;0.7814;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
SVC;0.7487;0.7713;0.7487;0.7481;0.8551;0.858;0.8551;0.8505;0.7833;0.7816;0.7833;0.7812;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 69};SVC(C=10, random_state=69)
DecisionTreeClassifier;0.8745;0.8806;0.8745;0.8738;0.942;0.9426;0.942;0.942;0.7833;0.7816;0.7833;0.7812;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
MLPClassifier;0.7327;0.7468;0.7327;0.7334;0.8406;0.8433;0.8406;0.8411;0.7833;0.7823;0.7833;0.7806;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7197;0.7333;0.7197;0.7197;0.8696;0.8719;0.8696;0.8647;0.7833;0.7823;0.7833;0.7806;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7374;0.7473;0.7374;0.7363;0.8116;0.8113;0.8116;0.8091;0.7833;0.7823;0.7833;0.7806;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
MLPClassifier;0.7118;0.7185;0.7118;0.71;0.8406;0.8417;0.8406;0.8392;0.7833;0.7823;0.7833;0.7806;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
MLPClassifier;0.7342;0.7463;0.7342;0.734;0.8551;0.8549;0.8551;0.8547;0.7833;0.7823;0.7833;0.7806;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
MLPClassifier;0.7408;0.7481;0.7408;0.7404;0.8696;0.8778;0.8696;0.8715;0.7833;0.7823;0.7833;0.7806;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7277;0.7373;0.7277;0.7272;0.8116;0.8083;0.8116;0.8082;0.7833;0.7851;0.7833;0.7736;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
SVC;0.7631;0.7805;0.7631;0.7625;0.8551;0.8574;0.8551;0.856;0.7667;0.7746;0.7667;0.7681;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 503};SVC(C=10, random_state=503)
DecisionTreeClassifier;0.8873;0.8892;0.8873;0.8863;0.8551;0.8574;0.8551;0.856;0.7667;0.7663;0.7667;0.7656;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
LogisticRegression;0.6924;0.7085;0.6924;0.6913;0.6667;0.6661;0.6667;0.6657;0.7667;0.7759;0.7667;0.7655;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
MLPClassifier;0.7392;0.7498;0.7392;0.7402;0.8551;0.8594;0.8551;0.8554;0.7667;0.7667;0.7667;0.7644;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
MLPClassifier;0.7326;0.7412;0.7326;0.7303;0.7971;0.8299;0.7971;0.8024;0.7667;0.7667;0.7667;0.7644;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7407;0.7519;0.7407;0.7393;0.8116;0.8138;0.8116;0.8125;0.7667;0.7667;0.7667;0.7644;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7407;0.7443;0.7407;0.74;0.7246;0.7315;0.7246;0.7225;0.7667;0.7667;0.7667;0.7644;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
MLPClassifier;0.7311;0.7493;0.7311;0.7282;0.8986;0.8981;0.8986;0.8972;0.7667;0.7667;0.7667;0.7644;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7214;0.7282;0.7214;0.7204;0.8696;0.869;0.8696;0.8685;0.7667;0.7616;0.7667;0.7629;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
DecisionTreeClassifier;0.8807;0.8855;0.8807;0.8799;0.8841;0.8907;0.8841;0.8842;0.7667;0.762;0.7667;0.7621;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=661)
DecisionTreeClassifier;0.884;0.8869;0.884;0.883;0.8841;0.8907;0.8841;0.8848;0.7667;0.7628;0.7667;0.762;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
MLPClassifier;0.7294;0.7387;0.7294;0.7263;0.8696;0.8701;0.8696;0.8695;0.7667;0.7628;0.7667;0.762;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
MLPClassifier;0.7344;0.7474;0.7344;0.7331;0.8261;0.8358;0.8261;0.8274;0.7667;0.7664;0.7667;0.7609;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 165, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=165)
MLPClassifier;0.7215;0.7297;0.7215;0.7209;0.7826;0.7889;0.7826;0.7838;0.7667;0.7664;0.7667;0.7609;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
MLPClassifier;0.7391;0.7477;0.7391;0.7385;0.8261;0.8277;0.8261;0.8259;0.7667;0.7595;0.7667;0.7593;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
LogisticRegression;0.694;0.7049;0.694;0.6933;0.6377;0.6597;0.6377;0.6247;0.75;0.7797;0.75;0.7526;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
DecisionTreeClassifier;0.8953;0.8986;0.8953;0.8953;0.8116;0.821;0.8116;0.8146;0.75;0.75;0.75;0.75;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
DecisionTreeClassifier;0.8922;0.8959;0.8922;0.8922;0.7971;0.8127;0.7971;0.7959;0.75;0.7505;0.75;0.7499;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 937};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=937)
MLPClassifier;0.7343;0.7437;0.7343;0.7343;0.8116;0.8225;0.8116;0.8109;0.75;0.752;0.75;0.7497;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
LogisticRegression;0.6956;0.7028;0.6956;0.6928;0.6522;0.6652;0.6522;0.6487;0.75;0.763;0.75;0.7496;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.6746;0.6877;0.6746;0.6723;0.7971;0.8011;0.7971;0.7981;0.75;0.763;0.75;0.7496;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
LogisticRegression;0.6779;0.6959;0.6779;0.6779;0.6957;0.712;0.6957;0.6967;0.75;0.7546;0.75;0.7481;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
MLPClassifier;0.744;0.7558;0.744;0.7438;0.7536;0.7625;0.7536;0.7548;0.75;0.752;0.75;0.748;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 351, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=351)
LogisticRegression;0.6666;0.679;0.6666;0.6637;0.7246;0.7269;0.7246;0.7204;0.75;0.7464;0.75;0.7473;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.6989;0.7114;0.6989;0.6974;0.5797;0.5737;0.5797;0.5738;0.75;0.7464;0.75;0.7473;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
DecisionTreeClassifier;0.8969;0.9009;0.8969;0.8958;0.8551;0.8591;0.8551;0.8562;0.75;0.7465;0.75;0.747;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 765};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=765)
MLPClassifier;0.7231;0.734;0.7231;0.7217;0.8261;0.8253;0.8261;0.8239;0.75;0.7462;0.75;0.746;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
LogisticRegression;0.7023;0.7174;0.7023;0.7029;0.6812;0.6789;0.6812;0.6798;0.7333;0.7486;0.7333;0.7354;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.7036;0.7161;0.7036;0.7014;0.6667;0.6771;0.6667;0.665;0.7333;0.7486;0.7333;0.7354;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
DecisionTreeClassifier;0.8663;0.8729;0.8663;0.8655;0.942;0.9426;0.942;0.942;0.7333;0.7392;0.7333;0.7339;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 661};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=661)
MLPClassifier;0.7246;0.7341;0.7246;0.724;0.8116;0.8167;0.8116;0.8122;0.7333;0.7384;0.7333;0.7335;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 141, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=141)
LogisticRegression;0.6844;0.6986;0.6844;0.6826;0.7246;0.735;0.7246;0.7252;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.686;0.6987;0.686;0.6841;0.7971;0.8058;0.7971;0.7962;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
LogisticRegression;0.7068;0.7217;0.7068;0.7052;0.6232;0.6287;0.6232;0.6232;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
LogisticRegression;0.6814;0.6929;0.6814;0.6809;0.7246;0.7243;0.7246;0.7242;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.6907;0.7018;0.6907;0.6884;0.7246;0.7778;0.7246;0.7201;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.6827;0.692;0.6827;0.6814;0.6957;0.7056;0.6957;0.6969;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
LogisticRegression;0.6909;0.7059;0.6909;0.6889;0.7101;0.73;0.7101;0.7126;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.6957;0.7114;0.6957;0.6948;0.6667;0.6874;0.6667;0.6559;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
LogisticRegression;0.6957;0.7058;0.6957;0.6939;0.7101;0.7243;0.7101;0.7074;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.7005;0.7109;0.7005;0.6976;0.6667;0.6705;0.6667;0.6672;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.6876;0.6979;0.6876;0.6845;0.6812;0.6895;0.6812;0.68;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.6875;0.6969;0.6875;0.6866;0.6957;0.7032;0.6957;0.6964;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.6954;0.7131;0.6954;0.6948;0.6377;0.6812;0.6377;0.6269;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.6908;0.7013;0.6908;0.6889;0.6812;0.713;0.6812;0.6744;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.6892;0.6976;0.6892;0.6874;0.7391;0.7508;0.7391;0.7409;0.7333;0.7511;0.7333;0.7333;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.6811;0.6903;0.6811;0.6802;0.7101;0.7151;0.7101;0.7094;0.7167;0.7377;0.7167;0.7194;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
LogisticRegression;0.6988;0.7166;0.6988;0.699;0.6377;0.6277;0.6377;0.6234;0.7167;0.7349;0.7167;0.7156;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
LogisticRegression;0.678;0.6904;0.678;0.6761;0.7536;0.7647;0.7536;0.7551;0.7167;0.7349;0.7167;0.7156;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.6958;0.7174;0.6958;0.6947;0.6667;0.6756;0.6667;0.668;0.7167;0.7349;0.7167;0.7156;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 697, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=697)"
LogisticRegression;0.6795;0.6901;0.6795;0.6776;0.7391;0.7718;0.7391;0.7313;0.7167;0.7349;0.7167;0.7156;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 382, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=382)"
LogisticRegression;0.6924;0.701;0.6924;0.69;0.6667;0.6777;0.6667;0.6676;0.7167;0.7349;0.7167;0.7156;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 371, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=371)"
