Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
RandomForestClassifier,0.8026,0.8119,0.8026,0.8054,0.7899,0.7997,0.7899,0.7935,0.7667,0.7663,0.7667,0.7662,0.9227,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 5, 'random_state': 90}","RandomForestClassifier(n_estimators=5, random_state=90)"
KNeighborsClassifier,0.79,0.8008,0.79,0.7906,0.7971,0.8192,0.7971,0.8019,0.75,0.7581,0.75,0.7497,0.8997,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier,0.7826,0.7993,0.7826,0.7825,0.7826,0.7956,0.7826,0.7853,0.75,0.7766,0.75,0.7472,0.929,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 692, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=692)"
DecisionTreeClassifier,0.8189,0.8395,0.8189,0.8218,0.8043,0.8226,0.8043,0.8092,0.7333,0.7454,0.7333,0.736,0.9298,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 125}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=125)"
KNeighborsClassifier,0.7898,0.7999,0.7898,0.7916,0.7754,0.7874,0.7754,0.7794,0.7333,0.7578,0.7333,0.7347,0.9018,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
LogisticRegression,0.7879,0.8028,0.7879,0.7852,0.7826,0.8082,0.7826,0.7873,0.7333,0.7624,0.7333,0.7333,0.9245,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 615, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=615)"
SVC,0.7592,0.7852,0.7592,0.7569,0.8043,0.8088,0.8043,0.8058,0.7333,0.756,0.7333,0.7315,0.8849,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 591}","SVC(C=1, kernel='linear', probability=True, random_state=591)"
RandomForestClassifier,0.8096,0.8225,0.8096,0.8115,0.7971,0.807,0.7971,0.8005,0.7167,0.7277,0.7167,0.718,0.9192,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 463}","RandomForestClassifier(n_estimators=10, random_state=463)"
DecisionTreeClassifier,0.8024,0.8178,0.8024,0.8024,0.8333,0.84,0.8333,0.8346,0.7167,0.7215,0.7167,0.7112,0.9266,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 936}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=936)"
MLPClassifier,0.7917,0.8014,0.7917,0.7929,0.7899,0.812,0.7899,0.7927,0.7,0.7237,0.7,0.6987,0.93,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 367, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=367)"
LogisticRegression,0.7736,0.7884,0.7736,0.7744,0.8116,0.8188,0.8116,0.8125,0.7,0.743,0.7,0.6986,0.927,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 795, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=795)"
SVC,0.761,0.804,0.761,0.7563,0.7899,0.8446,0.7899,0.7926,0.7,0.7417,0.7,0.696,0.9153,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 997}","SVC(C=0.1, kernel='linear', probability=True, random_state=997)"
RandomForestClassifier,0.8024,0.8155,0.8024,0.8025,0.8188,0.8254,0.8188,0.8203,0.7,0.7074,0.7,0.6929,0.9251,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 727}","RandomForestClassifier(n_estimators=20, random_state=727)"
SVC,0.7608,0.7909,0.7608,0.7587,0.7899,0.852,0.7899,0.7936,0.6833,0.7402,0.6833,0.6815,0.915,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'kernel': 'linear', 'random_state': 49}","SVC(C=0.1, kernel='linear', probability=True, random_state=49)"
LogisticRegression,0.7682,0.7807,0.7682,0.7654,0.7826,0.7793,0.7826,0.7798,0.6833,0.7149,0.6833,0.679,0.9178,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 985, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=985)"
KNeighborsClassifier,0.7751,0.7979,0.7751,0.7766,0.8333,0.8378,0.8333,0.8337,0.6833,0.7127,0.6833,0.6755,0.9064,smote,250,StandardScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'}",KNeighborsClassifier(n_neighbors=7)
MLPClassifier,0.7481,0.7882,0.7481,0.7456,0.7609,0.8389,0.7609,0.7619,0.65,0.7246,0.65,0.6544,0.9186,smote,250,no_scaled,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 59, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=59)"
DecisionTreeClassifier,0.8081,0.8727,0.8081,0.8068,0.7754,0.87,0.7754,0.7804,0.6667,0.7962,0.6667,0.6543,0.9174,smote,250,MinMaxScaler,"['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 715}","DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=715)"
