Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9747;0.9748;0.9747;0.9747;0.9819;0.9819;0.9819;0.9819;0.9333;0.9333;0.9333;0.9333;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9754;0.9754;0.9754;0.9754;0.9879;0.988;0.9879;0.9879;0.9167;0.9174;0.9167;0.9166;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9754;0.9754;0.9754;0.9754;0.9832;0.9833;0.9832;0.9832;0.9167;0.9174;0.9167;0.9166;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9769;0.9769;0.9769;0.9769;0.9839;0.9839;0.9839;0.9839;0.9167;0.9174;0.9167;0.9166;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9762;0.9762;0.9762;0.9762;0.9839;0.9839;0.9839;0.9839;0.9167;0.9174;0.9167;0.9166;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9753;0.9754;0.9753;0.9753;0.9805;0.9806;0.9805;0.9806;0.9167;0.9174;0.9167;0.9166;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9747;0.9747;0.9747;0.9746;0.9859;0.9859;0.9859;0.9859;0.9167;0.9174;0.9167;0.9166;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9755;0.9756;0.9755;0.9755;0.9832;0.9833;0.9832;0.9832;0.9167;0.9174;0.9167;0.9166;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9753;0.9754;0.9753;0.9753;0.9866;0.9866;0.9866;0.9866;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9743;0.9743;0.9743;0.9743;0.9846;0.9847;0.9846;0.9846;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9749;0.975;0.9749;0.9749;0.9846;0.9847;0.9846;0.9846;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9761;0.9762;0.9761;0.9761;0.9839;0.984;0.9839;0.9839;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9741;0.9741;0.9741;0.974;0.9759;0.9759;0.9759;0.9758;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9763;0.9763;0.9763;0.9763;0.9785;0.9786;0.9785;0.9785;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9747;0.9747;0.9747;0.9746;0.9872;0.9872;0.9872;0.9872;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9748;0.9749;0.9748;0.9748;0.9832;0.9833;0.9832;0.9832;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9763;0.9763;0.9763;0.9763;0.9832;0.9832;0.9832;0.9832;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9744;0.9745;0.9744;0.9744;0.9839;0.9839;0.9839;0.9839;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9745;0.9746;0.9745;0.9745;0.9839;0.984;0.9839;0.9839;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.975;0.9751;0.975;0.975;0.9819;0.9819;0.9819;0.9819;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9752;0.9753;0.9752;0.9752;0.9846;0.9846;0.9846;0.9846;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9755;0.9756;0.9755;0.9755;0.9779;0.978;0.9779;0.9778;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9758;0.9759;0.9758;0.9758;0.9859;0.9859;0.9859;0.9859;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9744;0.9745;0.9744;0.9744;0.9852;0.9853;0.9852;0.9852;0.9;0.9;0.9;0.9;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.977;0.9771;0.977;0.977;0.9846;0.9846;0.9846;0.9846;0.9;0.8998;0.9;0.8995;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9755;0.9756;0.9755;0.9755;0.9805;0.9806;0.9805;0.9805;0.8833;0.884;0.8833;0.8833;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9747;0.9747;0.9747;0.9746;0.9832;0.9833;0.9832;0.9832;0.8833;0.884;0.8833;0.8833;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9745;0.9745;0.9745;0.9745;0.9866;0.9866;0.9866;0.9866;0.8833;0.884;0.8833;0.8833;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9754;0.9755;0.9754;0.9754;0.9832;0.9832;0.9832;0.9832;0.8833;0.884;0.8833;0.8833;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9759;0.9759;0.9759;0.9759;0.9846;0.9846;0.9846;0.9846;0.8833;0.884;0.8833;0.8833;smote;5000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
