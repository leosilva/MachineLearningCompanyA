Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.882;0.8828;0.882;0.8819;0.8799;0.8818;0.8799;0.8799;0.7833;0.7861;0.7833;0.7823;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.8803;0.8811;0.8803;0.8802;0.8872;0.8878;0.8872;0.8872;0.7833;0.7861;0.7833;0.7823;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
MLPClassifier;0.8814;0.8823;0.8814;0.8813;0.8893;0.8902;0.8893;0.8891;0.7833;0.7835;0.7833;0.7821;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.8801;0.8809;0.8801;0.88;0.898;0.8985;0.898;0.8979;0.7833;0.7835;0.7833;0.7821;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.8824;0.8834;0.8824;0.8822;0.8866;0.8867;0.8866;0.8865;0.7833;0.7835;0.7833;0.7821;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.8838;0.8845;0.8838;0.8837;0.8739;0.875;0.8739;0.8737;0.7833;0.7835;0.7833;0.7821;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
KNeighborsClassifier;0.8654;0.8666;0.8654;0.8653;0.8752;0.8768;0.8752;0.8751;0.7833;0.7922;0.7833;0.7791;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8809;0.8817;0.8809;0.8809;0.8832;0.8839;0.8832;0.8832;0.7667;0.7709;0.7667;0.7664;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
RandomForestClassifier;0.8838;0.8845;0.8838;0.8838;0.8926;0.8929;0.8926;0.8926;0.7667;0.7738;0.7667;0.7662;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
MLPClassifier;0.8821;0.8829;0.8821;0.882;0.8732;0.8743;0.8732;0.8732;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
SVC;0.864;0.8691;0.864;0.8635;0.8766;0.8776;0.8766;0.8765;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8633;0.8686;0.8633;0.8627;0.8745;0.8765;0.8745;0.8744;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8643;0.8696;0.8643;0.8637;0.8773;0.8779;0.8773;0.8771;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8626;0.8681;0.8626;0.8621;0.8758;0.8766;0.8758;0.8758;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.8622;0.868;0.8622;0.8618;0.8779;0.8797;0.8779;0.8778;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8626;0.8677;0.8626;0.8621;0.8893;0.8898;0.8893;0.8892;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8618;0.8674;0.8618;0.8612;0.8792;0.8796;0.8792;0.8791;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.8635;0.8689;0.8635;0.863;0.8819;0.884;0.8819;0.8817;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.861;0.8664;0.861;0.8605;0.8933;0.8944;0.8933;0.8934;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.8624;0.868;0.8624;0.862;0.8805;0.8814;0.8805;0.8804;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8627;0.8678;0.8627;0.862;0.8752;0.8759;0.8752;0.8752;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8629;0.8681;0.8629;0.8623;0.8711;0.8735;0.8711;0.8708;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.862;0.8673;0.862;0.8614;0.8926;0.8936;0.8926;0.8927;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8619;0.8675;0.8619;0.8613;0.8906;0.8912;0.8906;0.8906;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 813};SVC(C=10, random_state=813)
SVC;0.8628;0.8682;0.8628;0.8623;0.8772;0.8778;0.8772;0.877;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.8629;0.8681;0.8629;0.8623;0.89;0.8923;0.89;0.8897;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8629;0.8685;0.8629;0.8624;0.8692;0.8702;0.8692;0.869;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8633;0.8687;0.8633;0.8628;0.8766;0.8769;0.8766;0.8766;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8613;0.867;0.8613;0.8607;0.8859;0.8862;0.8859;0.8858;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8619;0.8672;0.8619;0.8612;0.8839;0.8851;0.8839;0.8839;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8605;0.8661;0.8605;0.86;0.8899;0.8911;0.8899;0.8897;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8616;0.867;0.8616;0.861;0.8879;0.8883;0.8879;0.8878;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8629;0.8684;0.8629;0.8623;0.8819;0.8825;0.8819;0.8818;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.8632;0.8684;0.8632;0.8627;0.8819;0.8838;0.8819;0.8819;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8638;0.8693;0.8638;0.8632;0.8758;0.8765;0.8758;0.8757;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
MLPClassifier;0.8824;0.8831;0.8824;0.8822;0.8758;0.8771;0.8758;0.8758;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
MLPClassifier;0.8811;0.8818;0.8811;0.881;0.8893;0.8905;0.8893;0.8891;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.8835;0.8844;0.8835;0.8834;0.8679;0.8688;0.8679;0.8678;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.884;0.8847;0.884;0.8839;0.8719;0.8724;0.8719;0.8717;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.8793;0.8804;0.8793;0.8792;0.8913;0.8916;0.8913;0.8912;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
MLPClassifier;0.8826;0.8831;0.8826;0.8825;0.8772;0.8784;0.8772;0.8771;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
MLPClassifier;0.8815;0.8826;0.8815;0.8815;0.8805;0.8806;0.8805;0.8805;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
MLPClassifier;0.8808;0.8815;0.8808;0.8807;0.8913;0.8918;0.8913;0.8912;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
MLPClassifier;0.8819;0.883;0.8819;0.8818;0.8826;0.8832;0.8826;0.8824;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
SVC;0.8627;0.868;0.8627;0.8621;0.8766;0.8769;0.8766;0.8765;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
MLPClassifier;0.8819;0.8827;0.8819;0.8818;0.8812;0.8817;0.8812;0.8811;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
MLPClassifier;0.8815;0.8822;0.8815;0.8813;0.8772;0.8777;0.8772;0.8771;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
MLPClassifier;0.8821;0.883;0.8821;0.882;0.8799;0.881;0.8799;0.8796;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
MLPClassifier;0.8821;0.8828;0.8821;0.882;0.8887;0.8888;0.8887;0.8886;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
MLPClassifier;0.8823;0.8832;0.8823;0.8822;0.882;0.8831;0.882;0.8818;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
MLPClassifier;0.8822;0.8831;0.8822;0.8821;0.8887;0.8901;0.8887;0.8887;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
SVC;0.8623;0.8678;0.8623;0.8617;0.8765;0.8766;0.8765;0.8764;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
SVC;0.8626;0.8681;0.8626;0.862;0.8813;0.8818;0.8813;0.881;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.8628;0.8681;0.8628;0.8624;0.8934;0.8939;0.8934;0.8933;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 376};SVC(C=10, random_state=376)
SVC;0.8647;0.8702;0.8647;0.8641;0.8732;0.8742;0.8732;0.8731;0.7667;0.7672;0.7667;0.7659;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 988};SVC(C=10, random_state=988)
MLPClassifier;0.8811;0.8817;0.8811;0.881;0.8879;0.8878;0.8879;0.8878;0.7667;0.7688;0.7667;0.7656;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
KNeighborsClassifier;0.8616;0.8641;0.8616;0.8614;0.8745;0.8766;0.8745;0.8747;0.7667;0.7668;0.7667;0.7655;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.885;0.8856;0.885;0.885;0.8772;0.8773;0.8772;0.8771;0.7667;0.7828;0.7667;0.7649;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 274};RandomForestClassifier(n_estimators=5, random_state=274)
KNeighborsClassifier;0.8556;0.8584;0.8556;0.8555;0.8893;0.8896;0.8893;0.8891;0.7667;0.7708;0.7667;0.7635;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8579;0.8602;0.8579;0.8576;0.8792;0.8819;0.8792;0.8793;0.7667;0.7708;0.7667;0.7635;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8665;0.8691;0.8665;0.8663;0.8772;0.8774;0.8772;0.8772;0.7667;0.7708;0.7667;0.7635;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8668;0.8685;0.8668;0.8667;0.8812;0.8825;0.8812;0.8813;0.7667;0.7708;0.7667;0.7635;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8831;0.8835;0.8831;0.883;0.8927;0.8929;0.8927;0.8927;0.7667;0.7897;0.7667;0.7623;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 900};RandomForestClassifier(n_estimators=20, random_state=900)
KNeighborsClassifier;0.8547;0.8576;0.8547;0.8543;0.8859;0.8875;0.8859;0.8859;0.7667;0.7793;0.7667;0.7607;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.883;0.8834;0.883;0.8829;0.8906;0.8915;0.8906;0.8904;0.75;0.7543;0.75;0.7501;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.8835;0.884;0.8835;0.8835;0.8879;0.8887;0.8879;0.8878;0.75;0.7543;0.75;0.7501;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.8827;0.8833;0.8827;0.8827;0.8906;0.891;0.8906;0.8906;0.75;0.7543;0.75;0.7501;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8836;0.884;0.8836;0.8836;0.8732;0.8738;0.8732;0.8731;0.75;0.7543;0.75;0.7501;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8865;0.887;0.8865;0.8864;0.8624;0.8628;0.8624;0.8624;0.75;0.7543;0.75;0.7501;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
KNeighborsClassifier;0.8633;0.8656;0.8633;0.8631;0.8758;0.8765;0.8758;0.8757;0.75;0.7513;0.75;0.7497;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8592;0.8621;0.8592;0.8588;0.8826;0.8826;0.8826;0.8823;0.75;0.7513;0.75;0.7497;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8799;0.881;0.8799;0.8799;0.8879;0.8879;0.8879;0.8878;0.75;0.7517;0.75;0.7496;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
RandomForestClassifier;0.8844;0.8849;0.8844;0.8844;0.8913;0.8921;0.8913;0.8912;0.75;0.7517;0.75;0.7496;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 900};RandomForestClassifier(n_estimators=5, random_state=900)
RandomForestClassifier;0.8816;0.882;0.8816;0.8815;0.9074;0.9077;0.9074;0.9073;0.75;0.7496;0.75;0.7495;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 901};RandomForestClassifier(n_estimators=10, random_state=901)
RandomForestClassifier;0.8827;0.8832;0.8827;0.8826;0.9007;0.9012;0.9007;0.9008;0.75;0.7631;0.75;0.7491;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
DecisionTreeClassifier;0.8853;0.8858;0.8853;0.8852;0.8617;0.8619;0.8617;0.8616;0.75;0.7607;0.75;0.749;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
KNeighborsClassifier;0.8569;0.8588;0.8569;0.8568;0.8638;0.8688;0.8638;0.8628;0.75;0.7567;0.75;0.749;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8843;0.8847;0.8843;0.8842;0.8812;0.8816;0.8812;0.8812;0.75;0.7607;0.75;0.749;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
KNeighborsClassifier;0.8624;0.8652;0.8624;0.8623;0.8765;0.8767;0.8765;0.8764;0.75;0.7513;0.75;0.7485;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8835;0.884;0.8835;0.8834;0.8792;0.8804;0.8792;0.8792;0.75;0.7513;0.75;0.7484;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 240, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=240)
MLPClassifier;0.8814;0.8821;0.8814;0.8813;0.8926;0.8928;0.8926;0.8926;0.75;0.7513;0.75;0.7484;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
MLPClassifier;0.8851;0.8857;0.8851;0.885;0.8651;0.8659;0.8651;0.865;0.75;0.7513;0.75;0.7484;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
MLPClassifier;0.8838;0.8844;0.8838;0.8837;0.8671;0.868;0.8671;0.8671;0.75;0.7513;0.75;0.7484;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 138, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=138)
KNeighborsClassifier;0.8643;0.8665;0.8643;0.8641;0.8919;0.8923;0.8919;0.892;0.75;0.7553;0.75;0.7482;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8642;0.866;0.8642;0.8642;0.8524;0.8548;0.8524;0.8525;0.75;0.7513;0.75;0.7478;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8651;0.8659;0.8651;0.8651;0.8872;0.8878;0.8872;0.8872;0.75;0.7513;0.75;0.7478;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8857;0.8863;0.8857;0.8856;0.8638;0.864;0.8638;0.8636;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8841;0.8846;0.8841;0.884;0.8758;0.876;0.8758;0.8757;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.8835;0.8839;0.8835;0.8834;0.8853;0.8855;0.8853;0.8853;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.885;0.8855;0.885;0.8849;0.8792;0.8792;0.8792;0.879;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.8847;0.8851;0.8847;0.8847;0.8872;0.8873;0.8872;0.8872;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.8847;0.8852;0.8847;0.8847;0.8819;0.8824;0.8819;0.8817;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8823;0.8827;0.8823;0.8822;0.9;0.9003;0.9;0.9001;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
DecisionTreeClassifier;0.8844;0.8847;0.8844;0.8843;0.8899;0.8903;0.8899;0.8899;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8826;0.8831;0.8826;0.8825;0.8859;0.8863;0.8859;0.8857;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8844;0.8848;0.8844;0.8843;0.8887;0.8894;0.8887;0.8884;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
DecisionTreeClassifier;0.8829;0.8832;0.8829;0.8828;0.8786;0.8789;0.8786;0.8786;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8851;0.8855;0.8851;0.885;0.8658;0.8662;0.8658;0.8654;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
DecisionTreeClassifier;0.886;0.8864;0.886;0.8859;0.8799;0.8802;0.8799;0.88;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8828;0.8833;0.8828;0.8827;0.8886;0.8888;0.8886;0.8885;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
DecisionTreeClassifier;0.8857;0.8862;0.8857;0.8856;0.8785;0.8787;0.8785;0.8785;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
DecisionTreeClassifier;0.8853;0.8858;0.8853;0.8853;0.8819;0.883;0.8819;0.8817;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.8824;0.8829;0.8824;0.8823;0.8872;0.8874;0.8872;0.887;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
DecisionTreeClassifier;0.8844;0.8848;0.8844;0.8843;0.8758;0.8761;0.8758;0.8758;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
RandomForestClassifier;0.8855;0.8859;0.8855;0.8854;0.8726;0.873;0.8726;0.8725;0.75;0.7711;0.75;0.747;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 900};RandomForestClassifier(n_estimators=5, random_state=900)
KNeighborsClassifier;0.8594;0.8628;0.8594;0.8589;0.8712;0.8729;0.8712;0.8714;0.75;0.7505;0.75;0.7463;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8621;0.8645;0.8621;0.8619;0.8678;0.8696;0.8678;0.8682;0.75;0.7567;0.75;0.7452;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8586;0.8615;0.8586;0.8586;0.888;0.8882;0.888;0.888;0.75;0.7567;0.75;0.7452;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8832;0.8837;0.8832;0.8832;0.8893;0.8898;0.8893;0.8892;0.75;0.7567;0.75;0.7452;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 900};RandomForestClassifier(n_estimators=5, random_state=900)
KNeighborsClassifier;0.8678;0.8703;0.8678;0.8677;0.8766;0.8767;0.8766;0.8766;0.75;0.7567;0.75;0.7452;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8685;0.8697;0.8685;0.8684;0.8758;0.8763;0.8758;0.8758;0.75;0.7567;0.75;0.7452;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8868;0.8872;0.8868;0.8867;0.8752;0.8754;0.8752;0.8752;0.7333;0.7354;0.7333;0.7334;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 900};RandomForestClassifier(n_estimators=20, random_state=900)
KNeighborsClassifier;0.8586;0.8612;0.8586;0.8582;0.8745;0.8756;0.8745;0.8742;0.7333;0.7337;0.7333;0.7332;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8841;0.8844;0.8841;0.884;0.8812;0.8818;0.8812;0.8811;0.7333;0.7431;0.7333;0.7332;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.885;0.8855;0.885;0.8849;0.8832;0.8837;0.8832;0.8832;0.7333;0.7403;0.7333;0.7331;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 274};RandomForestClassifier(n_estimators=5, random_state=274)
DecisionTreeClassifier;0.8848;0.8852;0.8848;0.8847;0.8813;0.8815;0.8813;0.8813;0.7333;0.7403;0.7333;0.7331;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 254};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=254)
DecisionTreeClassifier;0.8855;0.8859;0.8855;0.8854;0.8712;0.8724;0.8712;0.8714;0.7333;0.7368;0.7333;0.733;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
DecisionTreeClassifier;0.8858;0.8863;0.8858;0.8857;0.8712;0.8713;0.8712;0.8711;0.7333;0.7368;0.7333;0.733;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 566};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=566)
RandomForestClassifier;0.8847;0.8853;0.8847;0.8847;0.8826;0.8826;0.8826;0.8825;0.7333;0.7408;0.7333;0.7327;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 274};RandomForestClassifier(n_estimators=5, random_state=274)
RandomForestClassifier;0.8834;0.8838;0.8834;0.8833;0.8833;0.8842;0.8833;0.8833;0.7333;0.7408;0.7333;0.7327;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 274};RandomForestClassifier(n_estimators=5, random_state=274)
RandomForestClassifier;0.8867;0.8872;0.8867;0.8867;0.8659;0.8663;0.8659;0.8656;0.7333;0.7408;0.7333;0.7327;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 901};RandomForestClassifier(n_estimators=20, random_state=901)
RandomForestClassifier;0.8853;0.8857;0.8853;0.8852;0.8819;0.882;0.8819;0.8818;0.7333;0.7408;0.7333;0.7327;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 274};RandomForestClassifier(n_estimators=10, random_state=274)
RandomForestClassifier;0.8827;0.8832;0.8827;0.8827;0.8852;0.8857;0.8852;0.8851;0.7333;0.7361;0.7333;0.7325;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 900};RandomForestClassifier(n_estimators=10, random_state=900)
RandomForestClassifier;0.8848;0.8853;0.8848;0.8847;0.8718;0.8721;0.8718;0.8717;0.7333;0.7368;0.7333;0.7323;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 901};RandomForestClassifier(n_estimators=5, random_state=901)
KNeighborsClassifier;0.8572;0.8606;0.8572;0.8573;0.8786;0.8787;0.8786;0.8782;0.7333;0.7354;0.7333;0.7321;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8808;0.8815;0.8808;0.8807;0.8887;0.8888;0.8887;0.8886;0.7333;0.7354;0.7333;0.7321;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 62, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=62)
RandomForestClassifier;0.8844;0.8848;0.8844;0.8844;0.8866;0.8876;0.8866;0.8863;0.7333;0.7537;0.7333;0.7317;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 900};RandomForestClassifier(n_estimators=5, random_state=900)
RandomForestClassifier;0.8843;0.8848;0.8843;0.8842;0.89;0.8901;0.89;0.8899;0.7333;0.7537;0.7333;0.7317;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8844;0.8849;0.8844;0.8843;0.8893;0.8896;0.8893;0.8892;0.7333;0.7537;0.7333;0.7317;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 900};RandomForestClassifier(n_estimators=10, random_state=900)
RandomForestClassifier;0.884;0.8845;0.884;0.8839;0.8954;0.8962;0.8954;0.8953;0.7333;0.7537;0.7333;0.7317;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8851;0.8855;0.8851;0.885;0.8867;0.8869;0.8867;0.8867;0.7333;0.7478;0.7333;0.7314;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 900};RandomForestClassifier(n_estimators=20, random_state=900)
RandomForestClassifier;0.8856;0.8861;0.8856;0.8855;0.8839;0.8843;0.8839;0.8838;0.7333;0.7478;0.7333;0.7314;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8855;0.8858;0.8855;0.8854;0.8792;0.8793;0.8792;0.879;0.7333;0.7505;0.7333;0.731;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 900};RandomForestClassifier(n_estimators=20, random_state=900)
RandomForestClassifier;0.8854;0.8859;0.8854;0.8853;0.8826;0.883;0.8826;0.8826;0.7333;0.7433;0.7333;0.7304;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 901};RandomForestClassifier(n_estimators=5, random_state=901)
RandomForestClassifier;0.8836;0.884;0.8836;0.8836;0.8887;0.8889;0.8887;0.8887;0.7333;0.7433;0.7333;0.7304;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 901};RandomForestClassifier(n_estimators=10, random_state=901)
KNeighborsClassifier;0.8547;0.8593;0.8547;0.8545;0.8725;0.8727;0.8725;0.8725;0.7333;0.7409;0.7333;0.73;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8566;0.8592;0.8566;0.8564;0.8711;0.8715;0.8711;0.8711;0.7333;0.7409;0.7333;0.73;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.858;0.8604;0.858;0.8576;0.8799;0.8802;0.8799;0.8798;0.7333;0.7361;0.7333;0.7298;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8604;0.8622;0.8604;0.8602;0.8792;0.8795;0.8792;0.879;0.7333;0.7361;0.7333;0.7298;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8506;0.8539;0.8506;0.8504;0.8779;0.8785;0.8779;0.878;0.7333;0.7498;0.7333;0.7295;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8834;0.8838;0.8834;0.8833;0.8907;0.8913;0.8907;0.8906;0.7333;0.7481;0.7333;0.7295;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
DecisionTreeClassifier;0.8856;0.8861;0.8856;0.8856;0.8799;0.8801;0.8799;0.8799;0.7333;0.7481;0.7333;0.7295;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 35};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=35)
KNeighborsClassifier;0.8652;0.8673;0.8652;0.8652;0.8698;0.8709;0.8698;0.8695;0.7167;0.7169;0.7167;0.7159;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8848;0.8853;0.8848;0.8848;0.8738;0.8745;0.8738;0.8738;0.7167;0.73;0.7167;0.7156;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 274};RandomForestClassifier(n_estimators=10, random_state=274)
RandomForestClassifier;0.8838;0.8843;0.8838;0.8838;0.8846;0.8847;0.8846;0.8845;0.7167;0.727;0.7167;0.7149;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 901};RandomForestClassifier(n_estimators=10, random_state=901)
RandomForestClassifier;0.8856;0.886;0.8856;0.8855;0.8826;0.8827;0.8826;0.8826;0.7167;0.72;0.7167;0.7142;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 901};RandomForestClassifier(n_estimators=10, random_state=901)
RandomForestClassifier;0.8859;0.8862;0.8859;0.8858;0.8826;0.8831;0.8826;0.8824;0.7167;0.72;0.7167;0.7142;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 901};RandomForestClassifier(n_estimators=10, random_state=901)
KNeighborsClassifier;0.8508;0.8541;0.8508;0.8503;0.8725;0.873;0.8725;0.8722;0.7167;0.7223;0.7167;0.7134;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8589;0.862;0.8589;0.8588;0.8618;0.8649;0.8618;0.8611;0.7167;0.716;0.7167;0.711;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8617;0.8633;0.8617;0.8616;0.8772;0.8774;0.8772;0.8771;0.7;0.7045;0.7;0.6984;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
LogisticRegression;0.7025;0.71;0.7025;0.7005;0.7;0.711;0.7;0.698;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7;0.7066;0.7;0.6976;0.7154;0.7249;0.7154;0.7139;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.6984;0.7059;0.6984;0.6961;0.7094;0.7177;0.7094;0.7076;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.6968;0.7038;0.6968;0.6947;0.7357;0.7434;0.7357;0.7339;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.6996;0.7069;0.6996;0.6976;0.7067;0.7169;0.7067;0.7032;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7002;0.7083;0.7002;0.6982;0.7181;0.7262;0.7181;0.7159;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.6981;0.705;0.6981;0.6961;0.7248;0.7365;0.7248;0.7218;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.704;0.7113;0.704;0.7019;0.6973;0.7034;0.6973;0.6952;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7016;0.7085;0.7016;0.6995;0.7168;0.7289;0.7168;0.7143;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7001;0.7075;0.7001;0.698;0.7027;0.7097;0.7027;0.7002;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.704;0.7118;0.704;0.7021;0.7114;0.7233;0.7114;0.7081;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.6999;0.707;0.6999;0.6979;0.694;0.7022;0.694;0.6909;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7007;0.708;0.7007;0.6987;0.7107;0.7185;0.7107;0.7075;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7017;0.7091;0.7017;0.6995;0.7087;0.7139;0.7087;0.7058;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.6992;0.7058;0.6992;0.6969;0.7183;0.7297;0.7183;0.7167;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.7049;0.7114;0.7049;0.7027;0.6995;0.7091;0.6995;0.6976;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7002;0.7076;0.7002;0.698;0.7163;0.7259;0.7163;0.713;0.6333;0.6437;0.6333;0.6231;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7039;0.7112;0.7039;0.7017;0.6955;0.7014;0.6955;0.6937;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7026;0.7095;0.7026;0.7005;0.715;0.7273;0.715;0.7128;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7025;0.7091;0.7025;0.7002;0.7128;0.7231;0.7128;0.7113;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7025;0.7091;0.7025;0.7004;0.7121;0.7211;0.7121;0.709;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7023;0.7101;0.7023;0.7001;0.7029;0.7099;0.7029;0.7008;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7021;0.7093;0.7021;0.6999;0.7074;0.7102;0.7074;0.7051;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.6984;0.7059;0.6984;0.6963;0.7174;0.7269;0.7174;0.7158;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 932, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=932)"
LogisticRegression;0.7048;0.7119;0.7048;0.7027;0.6881;0.6943;0.6881;0.6858;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.698;0.7053;0.698;0.6955;0.7221;0.7283;0.7221;0.7214;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7033;0.71;0.7033;0.7008;0.7242;0.73;0.7242;0.7233;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.7028;0.7105;0.7028;0.7007;0.7154;0.7223;0.7154;0.7128;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 262, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=262)"
LogisticRegression;0.7019;0.7085;0.7019;0.6997;0.7036;0.7123;0.7036;0.7008;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
LogisticRegression;0.7003;0.7076;0.7003;0.6981;0.7121;0.7191;0.7121;0.7098;0.6167;0.6283;0.6167;0.6088;smote;5000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 325, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=325)"
