Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8615;0.8621;0.8615;0.8617;0.869;0.8704;0.869;0.8687;0.8833;0.9025;0.8833;0.8855;0.954;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8668;0.8679;0.8668;0.8669;0.8586;0.8585;0.8586;0.8585;0.8667;0.8917;0.8667;0.8699;0.9556;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
RandomForestClassifier;0.8695;0.8716;0.8695;0.8695;0.8448;0.8492;0.8448;0.8452;0.8667;0.8819;0.8667;0.868;0.9551;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
DecisionTreeClassifier;0.8358;0.8367;0.8358;0.8358;0.8552;0.8594;0.8552;0.8562;0.8667;0.8709;0.8667;0.8673;0.8775;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8354;0.8361;0.8354;0.8355;0.8316;0.8362;0.8316;0.8324;0.8667;0.8709;0.8667;0.8673;0.8763;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
DecisionTreeClassifier;0.8293;0.8305;0.8293;0.8293;0.8655;0.8681;0.8655;0.8657;0.8667;0.8709;0.8667;0.8673;0.8719;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
DecisionTreeClassifier;0.8369;0.8378;0.8369;0.8371;0.8522;0.8517;0.8522;0.851;0.8667;0.8709;0.8667;0.8673;0.8792;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8362;0.8371;0.8362;0.8365;0.8414;0.8418;0.8414;0.8411;0.8667;0.8709;0.8667;0.8673;0.8776;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8458;0.8467;0.8458;0.8461;0.869;0.8695;0.869;0.869;0.8667;0.8709;0.8667;0.8673;0.8847;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8427;0.8442;0.8427;0.843;0.7966;0.799;0.7966;0.7968;0.8667;0.8709;0.8667;0.8673;0.8823;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8431;0.8446;0.8431;0.8434;0.8517;0.8515;0.8517;0.8513;0.8667;0.8724;0.8667;0.8662;0.8823;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
RandomForestClassifier;0.8741;0.8746;0.8741;0.874;0.8655;0.867;0.8655;0.8655;0.85;0.871;0.85;0.8519;0.9561;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
KNeighborsClassifier;0.8426;0.8457;0.8426;0.843;0.8694;0.8712;0.8694;0.8699;0.85;0.8611;0.85;0.8517;0.9357;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8404;0.8436;0.8404;0.8409;0.8655;0.8698;0.8655;0.8653;0.85;0.862;0.85;0.8516;0.9392;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8282;0.8294;0.8282;0.8281;0.8414;0.8425;0.8414;0.8414;0.85;0.8541;0.85;0.851;0.8709;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
DecisionTreeClassifier;0.8377;0.8394;0.8377;0.838;0.8345;0.8377;0.8345;0.8349;0.85;0.8579;0.85;0.8507;0.8788;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
DecisionTreeClassifier;0.8331;0.8342;0.8331;0.8331;0.9;0.904;0.9;0.8992;0.85;0.8514;0.85;0.8504;0.8749;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8301;0.8314;0.8301;0.8303;0.8103;0.8185;0.8103;0.8112;0.85;0.8563;0.85;0.8504;0.8729;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
DecisionTreeClassifier;0.8332;0.8348;0.8332;0.8333;0.8379;0.8401;0.8379;0.8381;0.85;0.8563;0.85;0.8504;0.8745;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8374;0.8381;0.8374;0.8375;0.8931;0.8931;0.8931;0.8931;0.85;0.8563;0.85;0.8504;0.8782;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
DecisionTreeClassifier;0.8339;0.8348;0.8339;0.8342;0.8069;0.8088;0.8069;0.8072;0.85;0.8514;0.85;0.8504;0.8764;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
DecisionTreeClassifier;0.8434;0.8442;0.8434;0.8438;0.8351;0.8372;0.8351;0.8341;0.85;0.8563;0.85;0.8504;0.8825;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
RandomForestClassifier;0.8729;0.8748;0.8729;0.8731;0.866;0.8665;0.866;0.8657;0.85;0.8641;0.85;0.8499;0.9542;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
DecisionTreeClassifier;0.8434;0.8442;0.8434;0.8436;0.8144;0.8145;0.8144;0.8133;0.85;0.8506;0.85;0.8499;0.8833;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
RandomForestClassifier;0.8641;0.8658;0.8641;0.8643;0.8351;0.8345;0.8351;0.8344;0.8333;0.8623;0.8333;0.8372;0.956;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
RandomForestClassifier;0.8622;0.8628;0.8622;0.8623;0.8797;0.8832;0.8797;0.8803;0.8333;0.85;0.8333;0.8357;0.9536;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.863;0.8646;0.863;0.863;0.8931;0.8932;0.8931;0.893;0.8333;0.8608;0.8333;0.8356;0.9573;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
KNeighborsClassifier;0.8373;0.842;0.8373;0.8379;0.8414;0.8418;0.8414;0.8415;0.8333;0.8489;0.8333;0.8352;0.9347;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8722;0.873;0.8722;0.8723;0.8379;0.8443;0.8379;0.837;0.8333;0.8489;0.8333;0.8352;0.9573;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 915};RandomForestClassifier(n_estimators=10, random_state=915)
KNeighborsClassifier;0.8419;0.846;0.8419;0.8422;0.8385;0.8385;0.8385;0.8385;0.8333;0.8507;0.8333;0.835;0.9384;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8415;0.8455;0.8415;0.8417;0.8282;0.8286;0.8282;0.828;0.8333;0.8409;0.8333;0.8349;0.9385;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8691;0.8711;0.8691;0.8693;0.8448;0.8465;0.8448;0.844;0.8333;0.8409;0.8333;0.8349;0.9589;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
KNeighborsClassifier;0.8339;0.8381;0.8339;0.8344;0.8897;0.8912;0.8897;0.8895;0.8333;0.8409;0.8333;0.8349;0.9356;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.835;0.838;0.835;0.8354;0.866;0.8669;0.866;0.8662;0.8333;0.8409;0.8333;0.8349;0.9377;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.871;0.8723;0.871;0.8709;0.8759;0.8759;0.8759;0.8759;0.8333;0.8532;0.8333;0.8349;0.9577;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
KNeighborsClassifier;0.8446;0.8484;0.8446;0.8449;0.8591;0.8626;0.8591;0.8593;0.8333;0.8409;0.8333;0.8349;0.9402;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8346;0.8387;0.8346;0.835;0.8729;0.8752;0.8729;0.8726;0.8333;0.8409;0.8333;0.8349;0.9374;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.837;0.8407;0.837;0.8373;0.869;0.8689;0.869;0.8688;0.8333;0.8409;0.8333;0.8349;0.938;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8328;0.8372;0.8328;0.8332;0.8586;0.8632;0.8586;0.8587;0.8333;0.8409;0.8333;0.8349;0.9371;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8309;0.836;0.8309;0.8313;0.8828;0.884;0.8828;0.8825;0.8333;0.8409;0.8333;0.8349;0.9367;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8411;0.8444;0.8411;0.8416;0.866;0.8696;0.866;0.8665;0.8333;0.8409;0.8333;0.8349;0.938;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8362;0.8404;0.8362;0.8366;0.869;0.8687;0.869;0.8686;0.8333;0.8409;0.8333;0.8349;0.9349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.84;0.8446;0.84;0.8406;0.8797;0.8807;0.8797;0.8796;0.8333;0.8409;0.8333;0.8349;0.9377;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8358;0.8392;0.8358;0.8358;0.8828;0.8841;0.8828;0.8831;0.8333;0.8409;0.8333;0.8349;0.9369;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8649;0.866;0.8649;0.8649;0.8414;0.8443;0.8414;0.8418;0.8333;0.8426;0.8333;0.8341;0.9549;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 157};RandomForestClassifier(n_estimators=5, random_state=157)
DecisionTreeClassifier;0.8384;0.8397;0.8384;0.8386;0.8247;0.8258;0.8247;0.8249;0.8333;0.8355;0.8333;0.8341;0.8799;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
RandomForestClassifier;0.8664;0.8674;0.8664;0.8667;0.8522;0.8546;0.8522;0.8524;0.8333;0.8524;0.8333;0.8338;0.9543;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
RandomForestClassifier;0.8668;0.8681;0.8668;0.8669;0.8759;0.8773;0.8759;0.8758;0.8333;0.8458;0.8333;0.8338;0.9558;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
DecisionTreeClassifier;0.832;0.8344;0.832;0.8322;0.831;0.8314;0.831;0.8311;0.8333;0.8333;0.8333;0.8333;0.8739;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
MLPClassifier;0.7539;0.7646;0.7539;0.7552;0.8069;0.8064;0.8069;0.8064;0.8333;0.8333;0.8333;0.8333;0.9083;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
DecisionTreeClassifier;0.835;0.8363;0.835;0.8352;0.8247;0.8284;0.8247;0.8258;0.8333;0.8333;0.8333;0.8333;0.8765;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.837;0.8379;0.837;0.8371;0.8414;0.8417;0.8414;0.8415;0.8333;0.8333;0.8333;0.8333;0.8778;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
DecisionTreeClassifier;0.8404;0.8415;0.8404;0.8406;0.8172;0.8196;0.8172;0.8179;0.8333;0.8379;0.8333;0.8333;0.8801;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8347;0.8358;0.8347;0.8348;0.7966;0.8006;0.7966;0.7977;0.8333;0.8333;0.8333;0.8333;0.8766;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
DecisionTreeClassifier;0.8427;0.8439;0.8427;0.8431;0.8069;0.8077;0.8069;0.8064;0.8333;0.8357;0.8333;0.8331;0.8829;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=822)
DecisionTreeClassifier;0.8358;0.8374;0.8358;0.8359;0.8557;0.8637;0.8557;0.856;0.8333;0.8366;0.8333;0.8307;0.8767;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
RandomForestClassifier;0.8726;0.8733;0.8726;0.8725;0.8586;0.8589;0.8586;0.8582;0.8167;0.8287;0.8167;0.819;0.9555;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 172};RandomForestClassifier(n_estimators=10, random_state=172)
KNeighborsClassifier;0.8423;0.8469;0.8423;0.8425;0.869;0.875;0.869;0.8691;0.8167;0.8287;0.8167;0.819;0.9365;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8366;0.8402;0.8366;0.837;0.8621;0.8636;0.8621;0.8619;0.8167;0.8287;0.8167;0.819;0.9369;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8714;0.8722;0.8714;0.8715;0.8621;0.8624;0.8621;0.8618;0.8167;0.8319;0.8167;0.8187;0.9557;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
KNeighborsClassifier;0.8393;0.8441;0.8393;0.8399;0.8448;0.844;0.8448;0.844;0.8167;0.8285;0.8167;0.8184;0.9373;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8286;0.8335;0.8286;0.8292;0.8759;0.8788;0.8759;0.8747;0.8167;0.8285;0.8167;0.8184;0.9405;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8634;0.8648;0.8634;0.8634;0.8862;0.889;0.8862;0.8862;0.8167;0.8332;0.8167;0.8179;0.9551;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
RandomForestClassifier;0.8768;0.8777;0.8768;0.8768;0.8586;0.8591;0.8586;0.8586;0.8167;0.8332;0.8167;0.8179;0.9565;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
RandomForestClassifier;0.8726;0.8733;0.8726;0.8727;0.8862;0.8871;0.8862;0.886;0.8167;0.8332;0.8167;0.8179;0.9546;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8638;0.8649;0.8638;0.8637;0.8586;0.8593;0.8586;0.8585;0.8167;0.8332;0.8167;0.8179;0.9545;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
KNeighborsClassifier;0.8469;0.8503;0.8469;0.8474;0.8345;0.8362;0.8345;0.8339;0.8167;0.8234;0.8167;0.8178;0.9416;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8316;0.8358;0.8316;0.832;0.8828;0.8918;0.8828;0.8819;0.8167;0.8234;0.8167;0.8178;0.9374;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8741;0.8752;0.8741;0.8741;0.8454;0.8451;0.8454;0.8447;0.8167;0.8234;0.8167;0.8178;0.9577;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
RandomForestClassifier;0.8633;0.8649;0.8633;0.8633;0.8832;0.8832;0.8832;0.8831;0.8167;0.8412;0.8167;0.8176;0.9548;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
KNeighborsClassifier;0.8373;0.8405;0.8373;0.8377;0.8557;0.8566;0.8557;0.8554;0.8167;0.8344;0.8167;0.8167;0.9399;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.758;0.767;0.758;0.7595;0.8351;0.8365;0.8351;0.8346;0.8167;0.8172;0.8167;0.8166;0.9077;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
MLPClassifier;0.749;0.7617;0.749;0.7506;0.7966;0.8046;0.7966;0.7962;0.8167;0.8172;0.8167;0.8166;0.9078;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
MLPClassifier;0.7355;0.7517;0.7355;0.737;0.8448;0.8506;0.8448;0.8439;0.8167;0.8172;0.8167;0.8166;0.8993;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
MLPClassifier;0.7608;0.7683;0.7608;0.7628;0.8;0.8042;0.8;0.7995;0.8167;0.8172;0.8167;0.8166;0.9066;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.7348;0.7466;0.7348;0.7363;0.8586;0.8597;0.8586;0.859;0.8167;0.8172;0.8167;0.8166;0.9018;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
DecisionTreeClassifier;0.8431;0.8448;0.8431;0.8435;0.869;0.8713;0.869;0.868;0.8167;0.8172;0.8167;0.8166;0.8825;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=287)
DecisionTreeClassifier;0.832;0.8327;0.832;0.8321;0.769;0.7723;0.769;0.7701;0.8167;0.8172;0.8167;0.8166;0.8737;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
MLPClassifier;0.7505;0.7614;0.7505;0.7515;0.8138;0.8152;0.8138;0.814;0.8167;0.8172;0.8167;0.8166;0.9078;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.7539;0.7645;0.7539;0.7551;0.7966;0.8011;0.7966;0.7978;0.8167;0.8172;0.8167;0.8166;0.9075;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
DecisionTreeClassifier;0.8338;0.835;0.8338;0.8341;0.8729;0.8727;0.8729;0.8727;0.8167;0.8172;0.8167;0.8166;0.8754;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=822)
RandomForestClassifier;0.8676;0.8685;0.8676;0.8677;0.866;0.8661;0.866;0.8659;0.8167;0.8299;0.8167;0.8165;0.9549;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
RandomForestClassifier;0.8626;0.8629;0.8626;0.8626;0.8724;0.8725;0.8724;0.8722;0.8167;0.8423;0.8167;0.815;0.9549;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
RandomForestClassifier;0.8676;0.869;0.8676;0.8677;0.8966;0.8975;0.8966;0.8967;0.8;0.8109;0.8;0.8014;0.9554;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
RandomForestClassifier;0.8606;0.862;0.8606;0.8606;0.9038;0.9057;0.9038;0.904;0.8;0.8109;0.8;0.8014;0.953;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
KNeighborsClassifier;0.8373;0.841;0.8373;0.8376;0.9;0.9011;0.9;0.9001;0.8;0.8109;0.8;0.8014;0.9349;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8328;0.8373;0.8328;0.8333;0.8448;0.8453;0.8448;0.8448;0.8;0.8109;0.8;0.8014;0.9391;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.8599;0.8615;0.8599;0.8601;0.8862;0.8882;0.8862;0.8851;0.8;0.8314;0.8;0.8008;0.952;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 157};RandomForestClassifier(n_estimators=20, random_state=157)
KNeighborsClassifier;0.8366;0.8407;0.8366;0.837;0.869;0.8692;0.869;0.8691;0.8;0.8072;0.8;0.8005;0.937;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.7558;0.765;0.7558;0.7576;0.8483;0.8516;0.8483;0.849;0.8;0.8013;0.8;0.8003;0.9073;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.7524;0.7635;0.7524;0.7542;0.8621;0.8617;0.8621;0.8614;0.8;0.8057;0.8;0.8003;0.9073;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
RandomForestClassifier;0.8683;0.87;0.8683;0.8684;0.8591;0.8606;0.8591;0.8594;0.8;0.8111;0.8;0.8002;0.956;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
KNeighborsClassifier;0.8393;0.8423;0.8393;0.8394;0.8414;0.8454;0.8414;0.8419;0.8;0.8119;0.8;0.8001;0.9383;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.7597;0.7683;0.7597;0.761;0.7655;0.7656;0.7655;0.7647;0.8;0.8;0.8;0.8;0.9114;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.7566;0.7651;0.7566;0.7574;0.8069;0.8127;0.8069;0.808;0.8;0.8;0.8;0.8;0.9058;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.7551;0.7658;0.7551;0.7572;0.8276;0.8276;0.8276;0.8267;0.8;0.8;0.8;0.8;0.908;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.7542;0.764;0.7542;0.7555;0.7869;0.7941;0.7869;0.7891;0.8;0.8;0.8;0.8;0.9081;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.7599;0.7679;0.7599;0.7617;0.8282;0.8353;0.8282;0.8296;0.8;0.8;0.8;0.8;0.9078;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.7439;0.7525;0.7439;0.7449;0.8591;0.8599;0.8591;0.8592;0.8;0.8;0.8;0.8;0.9031;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
MLPClassifier;0.7531;0.7636;0.7531;0.7544;0.8076;0.8125;0.8076;0.8083;0.8;0.8;0.8;0.8;0.9076;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.7574;0.765;0.7574;0.7584;0.8241;0.8228;0.8241;0.8232;0.8;0.8;0.8;0.8;0.9067;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
MLPClassifier;0.7528;0.7622;0.7528;0.754;0.7828;0.7845;0.7828;0.7828;0.8;0.8;0.8;0.8;0.9063;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.7455;0.7551;0.7455;0.747;0.8241;0.8238;0.8241;0.8229;0.8;0.8;0.8;0.8;0.9062;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.7553;0.7632;0.7553;0.757;0.7973;0.7964;0.7973;0.7963;0.8;0.8;0.8;0.8;0.9097;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
DecisionTreeClassifier;0.8369;0.838;0.8369;0.8372;0.8419;0.844;0.8419;0.8418;0.8;0.7997;0.8;0.7995;0.8775;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 822};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=822)
KNeighborsClassifier;0.8389;0.8422;0.8389;0.8393;0.8724;0.8733;0.8724;0.8724;0.7833;0.8059;0.7833;0.7863;0.9414;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8393;0.8437;0.8393;0.8396;0.8759;0.8763;0.8759;0.8759;0.7833;0.799;0.7833;0.7846;0.9353;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8657;0.8669;0.8657;0.8657;0.869;0.8697;0.869;0.869;0.7833;0.799;0.7833;0.7846;0.9538;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 172};RandomForestClassifier(n_estimators=20, random_state=172)
KNeighborsClassifier;0.8362;0.8402;0.8362;0.8367;0.8483;0.8483;0.8483;0.8482;0.7833;0.799;0.7833;0.7846;0.9358;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7554;0.7654;0.7554;0.7564;0.8316;0.8314;0.8316;0.8314;0.7833;0.7863;0.7833;0.7839;0.9066;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
RandomForestClassifier;0.8657;0.8664;0.8657;0.8656;0.8793;0.8797;0.8793;0.8795;0.7833;0.8124;0.7833;0.7837;0.9566;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 915};RandomForestClassifier(n_estimators=20, random_state=915)
MLPClassifier;0.752;0.7634;0.752;0.7529;0.769;0.7668;0.769;0.7671;0.7833;0.7838;0.7833;0.7832;0.9052;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
MLPClassifier;0.7523;0.7602;0.7523;0.7536;0.7869;0.7903;0.7869;0.7846;0.7833;0.7838;0.7833;0.7832;0.906;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
MLPClassifier;0.75;0.7605;0.75;0.7513;0.8351;0.8377;0.8351;0.8338;0.7833;0.7838;0.7833;0.7832;0.9079;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.7608;0.7707;0.7608;0.7619;0.7966;0.7992;0.7966;0.7954;0.7833;0.7838;0.7833;0.7832;0.91;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 329, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=329)
DecisionTreeClassifier;0.8374;0.8397;0.8374;0.8375;0.8379;0.8392;0.8379;0.8379;0.7833;0.7876;0.7833;0.7825;0.8781;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 287};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=287)
MLPClassifier;0.7616;0.7695;0.7616;0.7634;0.7862;0.8003;0.7862;0.7846;0.7833;0.7861;0.7833;0.7823;0.9094;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
SVC;0.7328;0.7675;0.7328;0.7323;0.7938;0.8073;0.7938;0.7928;0.7833;0.7854;0.7833;0.7813;0.8726;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7321;0.7657;0.7321;0.7314;0.7724;0.7859;0.7724;0.7737;0.7833;0.7854;0.7833;0.7813;0.8687;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7321;0.7679;0.7321;0.7307;0.8207;0.82;0.8207;0.8203;0.7833;0.7854;0.7833;0.7813;0.8744;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7306;0.7667;0.7306;0.7297;0.7897;0.7924;0.7897;0.7885;0.7833;0.7854;0.7833;0.7813;0.8724;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7286;0.7648;0.7286;0.7278;0.7552;0.7798;0.7552;0.7574;0.7833;0.7854;0.7833;0.7813;0.8714;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7359;0.7698;0.7359;0.7347;0.8069;0.8114;0.8069;0.8069;0.7833;0.7854;0.7833;0.7813;0.8676;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7308;0.7644;0.7308;0.7301;0.7869;0.7994;0.7869;0.7886;0.7833;0.7854;0.7833;0.7813;0.8708;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7251;0.7598;0.7251;0.724;0.8076;0.8148;0.8076;0.8078;0.7833;0.7854;0.7833;0.7813;0.8661;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7237;0.7592;0.7237;0.7236;0.7966;0.8073;0.7966;0.7971;0.7833;0.7854;0.7833;0.7813;0.8645;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7271;0.7628;0.7271;0.7262;0.8276;0.8342;0.8276;0.8273;0.7833;0.7854;0.7833;0.7813;0.8642;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7328;0.7661;0.7328;0.7323;0.7724;0.7876;0.7724;0.774;0.7833;0.7854;0.7833;0.7813;0.8741;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7252;0.7605;0.7252;0.7247;0.7862;0.8011;0.7862;0.7886;0.7833;0.7854;0.7833;0.7813;0.8669;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7306;0.7644;0.7306;0.7298;0.8;0.8102;0.8;0.8015;0.7833;0.7854;0.7833;0.7813;0.8694;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7229;0.7601;0.7229;0.7222;0.8069;0.8152;0.8069;0.8083;0.7833;0.7854;0.7833;0.7813;0.8621;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7294;0.7643;0.7294;0.7287;0.7828;0.799;0.7828;0.785;0.7833;0.7854;0.7833;0.7813;0.8726;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7287;0.7638;0.7287;0.7286;0.7897;0.8069;0.7897;0.7903;0.7833;0.7854;0.7833;0.7813;0.8656;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.726;0.7624;0.726;0.7251;0.8207;0.8299;0.8207;0.8212;0.7833;0.7854;0.7833;0.7813;0.8716;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7336;0.7669;0.7336;0.7326;0.811;0.8206;0.811;0.8114;0.7833;0.7854;0.7833;0.7813;0.8696;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.7282;0.7651;0.7282;0.7267;0.7973;0.7994;0.7973;0.7964;0.7833;0.7854;0.7833;0.7813;0.8676;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.7279;0.7658;0.7279;0.7269;0.8241;0.8338;0.8241;0.8233;0.7833;0.7854;0.7833;0.7813;0.8714;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.7386;0.7723;0.7386;0.737;0.7759;0.7813;0.7759;0.7773;0.7833;0.7854;0.7833;0.7813;0.8714;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.724;0.758;0.724;0.7239;0.8276;0.8428;0.8276;0.8294;0.7833;0.7854;0.7833;0.7813;0.8657;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.7321;0.7677;0.7321;0.7309;0.7483;0.7575;0.7483;0.7474;0.7833;0.7854;0.7833;0.7813;0.8733;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.729;0.7623;0.729;0.7283;0.7897;0.8021;0.7897;0.7926;0.7833;0.7854;0.7833;0.7813;0.868;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.7314;0.7656;0.7314;0.7302;0.7897;0.8062;0.7897;0.792;0.7833;0.7854;0.7833;0.7813;0.8703;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.7259;0.764;0.7259;0.7238;0.7904;0.7921;0.7904;0.791;0.7833;0.7854;0.7833;0.7813;0.8688;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
SVC;0.7301;0.7665;0.7301;0.7286;0.7629;0.7666;0.7629;0.7618;0.7833;0.7854;0.7833;0.7813;0.876;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 280};SVC(C=10, probability=True, random_state=280)
LogisticRegression;0.6717;0.6811;0.6717;0.6712;0.7345;0.7507;0.7345;0.733;0.7833;0.7922;0.7833;0.7807;0.8467;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6835;0.6922;0.6835;0.6823;0.669;0.6891;0.669;0.6667;0.7833;0.7922;0.7833;0.7807;0.8527;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
MLPClassifier;0.7524;0.7618;0.7524;0.7539;0.7759;0.774;0.7759;0.7741;0.7667;0.7684;0.7667;0.7662;0.909;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
MLPClassifier;0.7539;0.7641;0.7539;0.7554;0.8;0.8107;0.8;0.8009;0.7667;0.7684;0.7667;0.7662;0.9095;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.7505;0.7611;0.7505;0.752;0.7966;0.7993;0.7966;0.7973;0.7667;0.7684;0.7667;0.7662;0.9065;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 194, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=194)
SVC;0.7201;0.7577;0.7201;0.7192;0.8316;0.8345;0.8316;0.831;0.7667;0.7702;0.7667;0.766;0.8702;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
SVC;0.7266;0.7633;0.7266;0.7268;0.7766;0.7889;0.7766;0.7778;0.7667;0.7701;0.7667;0.7643;0.8697;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 24};SVC(C=10, probability=True, random_state=24)
SVC;0.7371;0.7704;0.7371;0.7362;0.7483;0.7666;0.7483;0.7499;0.7667;0.7701;0.7667;0.7643;0.8697;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 781};SVC(C=10, probability=True, random_state=781)
LogisticRegression;0.677;0.6839;0.677;0.6763;0.7241;0.7534;0.7241;0.7273;0.7667;0.777;0.7667;0.7642;0.8461;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6793;0.6881;0.6793;0.6787;0.6862;0.705;0.6862;0.6848;0.7667;0.777;0.7667;0.7642;0.8491;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6801;0.6885;0.6801;0.6792;0.6552;0.6947;0.6552;0.656;0.7667;0.777;0.7667;0.7642;0.8514;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6751;0.6844;0.6751;0.6746;0.6793;0.697;0.6793;0.6824;0.7667;0.777;0.7667;0.7642;0.8494;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6728;0.6823;0.6728;0.6723;0.6966;0.7263;0.6966;0.7;0.7667;0.777;0.7667;0.7642;0.8465;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6788;0.6882;0.6788;0.6784;0.6873;0.7225;0.6873;0.6904;0.7667;0.777;0.7667;0.7642;0.8518;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.669;0.6764;0.669;0.6685;0.7034;0.7379;0.7034;0.7071;0.7667;0.777;0.7667;0.7642;0.8478;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6864;0.6963;0.6864;0.6861;0.646;0.6554;0.646;0.6458;0.7333;0.7368;0.7333;0.7323;0.8519;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6801;0.6886;0.6801;0.6796;0.6552;0.667;0.6552;0.6548;0.7333;0.7368;0.7333;0.7323;0.8501;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6765;0.685;0.6765;0.676;0.6942;0.7043;0.6942;0.694;0.7333;0.7368;0.7333;0.7323;0.8504;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6774;0.6861;0.6774;0.6765;0.7034;0.7126;0.7034;0.7031;0.7333;0.7368;0.7333;0.7323;0.8481;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6804;0.6897;0.6804;0.6798;0.6931;0.7082;0.6931;0.6919;0.7333;0.7368;0.7333;0.7323;0.8493;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6838;0.6916;0.6838;0.6827;0.6667;0.6735;0.6667;0.6648;0.7333;0.7354;0.7333;0.7321;0.8502;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6861;0.6947;0.6861;0.6843;0.6426;0.6479;0.6426;0.6414;0.7333;0.7332;0.7333;0.732;0.8519;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6858;0.6935;0.6858;0.6846;0.6586;0.6686;0.6586;0.6545;0.7333;0.7332;0.7333;0.732;0.8494;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6842;0.6939;0.6842;0.683;0.6564;0.6638;0.6564;0.6562;0.7333;0.7332;0.7333;0.732;0.8515;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6719;0.6792;0.6719;0.6711;0.732;0.7421;0.732;0.7327;0.7167;0.718;0.7167;0.7162;0.8464;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6912;0.7005;0.6912;0.6902;0.6172;0.6235;0.6172;0.6153;0.7167;0.7203;0.7167;0.7162;0.8563;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6742;0.6822;0.6742;0.6735;0.7113;0.7182;0.7113;0.7127;0.7167;0.718;0.7167;0.7162;0.8473;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6796;0.6871;0.6796;0.6789;0.677;0.6796;0.677;0.6764;0.7167;0.7182;0.7167;0.7154;0.85;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6877;0.6965;0.6877;0.6871;0.6483;0.6538;0.6483;0.6467;0.7167;0.7182;0.7167;0.7154;0.8511;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6843;0.6943;0.6843;0.6837;0.7034;0.7164;0.7034;0.7049;0.7167;0.7182;0.7167;0.7154;0.8499;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
LogisticRegression;0.6858;0.6944;0.6858;0.6845;0.6828;0.6918;0.6828;0.6802;0.7167;0.7182;0.7167;0.7154;0.8505;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.687;0.694;0.687;0.6859;0.6552;0.6728;0.6552;0.6527;0.7167;0.7182;0.7167;0.7154;0.8524;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6843;0.6927;0.6843;0.6833;0.6448;0.6605;0.6448;0.6466;0.7167;0.7182;0.7167;0.7154;0.8515;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6854;0.6944;0.6854;0.6846;0.6966;0.7074;0.6966;0.6958;0.7167;0.7182;0.7167;0.7154;0.8523;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 387, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=387)"
LogisticRegression;0.6758;0.6848;0.6758;0.675;0.7103;0.7138;0.7103;0.7097;0.7167;0.7182;0.7167;0.7154;0.8492;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 533, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=533)"
LogisticRegression;0.6839;0.6922;0.6839;0.6832;0.6793;0.6921;0.6793;0.6785;0.7167;0.7182;0.7167;0.7154;0.8502;smote;1000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 980, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=980)"
