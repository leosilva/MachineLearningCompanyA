Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9139;0.9145;0.9139;0.914;0.9068;0.9077;0.9068;0.907;0.8833;0.886;0.8833;0.8832;0.9767;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 103};RandomForestClassifier(n_estimators=20, random_state=103)
KNeighborsClassifier;0.8961;0.8983;0.8961;0.8963;0.9012;0.9017;0.9012;0.9012;0.8667;0.8764;0.8667;0.8657;0.9683;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8906;0.8925;0.8906;0.8909;0.9197;0.9198;0.9197;0.9197;0.8667;0.8778;0.8667;0.863;0.9672;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8916;0.8934;0.8916;0.8919;0.9068;0.907;0.9068;0.9068;0.85;0.8641;0.85;0.8499;0.9673;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.912;0.9126;0.912;0.9121;0.9079;0.9079;0.9079;0.9078;0.85;0.8597;0.85;0.849;0.9779;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 896};RandomForestClassifier(n_estimators=20, random_state=896)
RandomForestClassifier;0.9092;0.9095;0.9092;0.9093;0.9186;0.9187;0.9186;0.9186;0.8333;0.8461;0.8333;0.8285;0.9759;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 850};RandomForestClassifier(n_estimators=10, random_state=850)
MLPClassifier;0.811;0.8148;0.811;0.8114;0.8535;0.8598;0.8535;0.8546;0.8167;0.8187;0.8167;0.8147;0.9423;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 932, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=932)
MLPClassifier;0.8099;0.8124;0.8099;0.81;0.8563;0.8577;0.8563;0.8562;0.8167;0.8225;0.8167;0.8124;0.9413;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 91, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=91)
DecisionTreeClassifier;0.8905;0.8909;0.8905;0.8905;0.872;0.8759;0.872;0.872;0.8;0.8013;0.8;0.8003;0.9188;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
MLPClassifier;0.812;0.8138;0.812;0.8123;0.8495;0.85;0.8495;0.8493;0.8;0.8015;0.8;0.7962;0.9418;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 759, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=759)
DecisionTreeClassifier;0.887;0.8875;0.887;0.8871;0.8579;0.8599;0.8579;0.8585;0.7833;0.7863;0.7833;0.7827;0.9174;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 702};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=702)
DecisionTreeClassifier;0.8868;0.8875;0.8868;0.8868;0.8827;0.8852;0.8827;0.883;0.7667;0.7667;0.7667;0.7667;0.9165;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 616};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=616)
SVC;0.7884;0.8081;0.7884;0.7904;0.8231;0.8292;0.8231;0.8239;0.7333;0.7381;0.7333;0.7347;0.9039;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 445};SVC(C=10, probability=True, random_state=445)
SVC;0.793;0.8107;0.793;0.7952;0.8164;0.8222;0.8164;0.8171;0.7333;0.7381;0.7333;0.7347;0.9067;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 413};SVC(C=10, probability=True, random_state=413)
SVC;0.7995;0.815;0.7995;0.801;0.8282;0.8328;0.8282;0.8288;0.7333;0.7381;0.7333;0.7347;0.908;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 482};SVC(C=10, probability=True, random_state=482)
LogisticRegression;0.6976;0.7008;0.6976;0.6964;0.6934;0.716;0.6934;0.6955;0.65;0.6853;0.65;0.6512;0.872;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 764, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=764)"
LogisticRegression;0.7005;0.7045;0.7005;0.7003;0.6889;0.7105;0.6889;0.689;0.65;0.6853;0.65;0.6512;0.8751;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 23, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=23)"
LogisticRegression;0.7019;0.7064;0.7019;0.7014;0.7002;0.7209;0.7002;0.6994;0.65;0.6853;0.65;0.6512;0.8719;smote;3000;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 31, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=31)"
