Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8523;0.8543;0.8523;0.8528;0.8862;0.8889;0.8862;0.8866;0.85;0.85;0.85;0.85;0.9469;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.8442;0.85;0.8442;0.8455;0.8763;0.8785;0.8763;0.8769;0.85;0.8528;0.85;0.8456;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.8419;0.8475;0.8419;0.8431;0.869;0.874;0.869;0.8701;0.85;0.8528;0.85;0.8456;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
KNeighborsClassifier;0.8462;0.8481;0.8462;0.8464;0.869;0.8723;0.869;0.8691;0.8333;0.8409;0.8333;0.8349;0.9479;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.85;0.8514;0.85;0.8502;0.8655;0.8693;0.8655;0.8663;0.8333;0.8372;0.8333;0.8339;0.9494;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8469;0.8491;0.8469;0.8474;0.8557;0.859;0.8557;0.8562;0.8333;0.8347;0.8333;0.8337;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8511;0.8531;0.8511;0.8512;0.8522;0.8524;0.8522;0.852;0.8333;0.8347;0.8333;0.8337;0.9464;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8347;0.8357;0.8347;0.8347;0.8517;0.8535;0.8517;0.8523;0.8333;0.8339;0.8333;0.8333;0.946;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
SVC;0.7867;0.8024;0.7867;0.7891;0.8385;0.8537;0.8385;0.8396;0.8333;0.8333;0.8333;0.8323;0.9033;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.7708;0.7825;0.7708;0.7729;0.8448;0.8597;0.8448;0.8469;0.8333;0.8333;0.8333;0.8323;0.8982;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
SVC;0.7933;0.8095;0.7933;0.7953;0.8034;0.8212;0.8034;0.8046;0.8333;0.8333;0.8333;0.8323;0.9047;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
RandomForestClassifier;0.8729;0.8741;0.8729;0.8731;0.8724;0.8729;0.8724;0.8726;0.8333;0.8432;0.8333;0.8313;0.9601;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
MLPClassifier;0.8523;0.8567;0.8523;0.853;0.8379;0.8486;0.8379;0.8403;0.8333;0.8332;0.8333;0.8302;0.9465;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.8431;0.8468;0.8431;0.8442;0.8897;0.8908;0.8897;0.8897;0.8333;0.8332;0.8333;0.8302;0.9446;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.8523;0.8566;0.8523;0.8532;0.8379;0.8423;0.8379;0.8391;0.8333;0.833;0.8333;0.8288;0.9458;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8549;0.8585;0.8549;0.8557;0.8625;0.8659;0.8625;0.8632;0.8333;0.833;0.8333;0.8288;0.9475;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8542;0.8591;0.8542;0.8552;0.8483;0.8492;0.8483;0.8482;0.8333;0.8389;0.8333;0.8272;0.9475;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8454;0.8497;0.8454;0.8463;0.8655;0.8707;0.8655;0.8666;0.8333;0.8389;0.8333;0.8272;0.9455;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
KNeighborsClassifier;0.8462;0.849;0.8462;0.8467;0.8621;0.8638;0.8621;0.8625;0.8167;0.8214;0.8167;0.8181;0.9485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8462;0.8485;0.8462;0.8465;0.8517;0.8538;0.8517;0.8516;0.8167;0.8214;0.8167;0.8181;0.9456;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8504;0.8523;0.8504;0.8505;0.8586;0.8645;0.8586;0.8596;0.8167;0.8214;0.8167;0.8181;0.9471;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.843;0.845;0.843;0.8434;0.8419;0.8505;0.8419;0.8425;0.8167;0.818;0.8167;0.817;0.9483;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.7814;0.7961;0.7814;0.7832;0.8454;0.8658;0.8454;0.8463;0.8167;0.819;0.8167;0.8168;0.9039;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.7819;0.7957;0.7819;0.7844;0.8345;0.8587;0.8345;0.8374;0.8167;0.819;0.8167;0.8168;0.9024;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
KNeighborsClassifier;0.8411;0.8437;0.8411;0.8416;0.8729;0.8743;0.8729;0.8726;0.8167;0.8167;0.8167;0.8167;0.9484;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8534;0.855;0.8534;0.8535;0.8483;0.8482;0.8483;0.8482;0.8167;0.8172;0.8167;0.8166;0.9492;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
SVC;0.7899;0.8037;0.7899;0.792;0.8276;0.8486;0.8276;0.8301;0.8167;0.8187;0.8167;0.8163;0.906;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
SVC;0.8002;0.8182;0.8002;0.8025;0.8345;0.8676;0.8345;0.8374;0.8167;0.8187;0.8167;0.8163;0.9078;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
SVC;0.7711;0.7829;0.7711;0.7733;0.8488;0.8619;0.8488;0.8499;0.8167;0.8187;0.8167;0.8163;0.899;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
SVC;0.7834;0.7937;0.7834;0.785;0.8207;0.8306;0.8207;0.8224;0.8167;0.8187;0.8167;0.8163;0.9032;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
SVC;0.7914;0.8091;0.7914;0.7932;0.831;0.8557;0.831;0.8335;0.8167;0.8187;0.8167;0.8163;0.9012;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
SVC;0.7861;0.7986;0.7861;0.788;0.8069;0.8241;0.8069;0.8082;0.8167;0.8187;0.8167;0.8163;0.9053;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.7903;0.8013;0.7903;0.7918;0.8069;0.8358;0.8069;0.811;0.8167;0.8187;0.8167;0.8163;0.9055;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.7822;0.7984;0.7822;0.7841;0.8448;0.861;0.8448;0.8473;0.8167;0.8187;0.8167;0.8163;0.8995;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.789;0.8033;0.789;0.7911;0.8282;0.8429;0.8282;0.8296;0.8167;0.8187;0.8167;0.8163;0.9058;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
SVC;0.7852;0.8037;0.7852;0.7873;0.8282;0.8551;0.8282;0.8314;0.8167;0.8187;0.8167;0.8163;0.9007;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.7861;0.8006;0.7861;0.7883;0.8345;0.8592;0.8345;0.8365;0.8167;0.8187;0.8167;0.8163;0.903;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
SVC;0.7856;0.8;0.7856;0.7879;0.8419;0.8666;0.8419;0.8446;0.8167;0.8187;0.8167;0.8163;0.9026;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
SVC;0.7925;0.8069;0.7925;0.7942;0.7938;0.8157;0.7938;0.797;0.8167;0.8187;0.8167;0.8163;0.9069;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
SVC;0.7898;0.8044;0.7898;0.7921;0.8385;0.8525;0.8385;0.84;0.8167;0.8187;0.8167;0.8163;0.9034;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
SVC;0.7914;0.8098;0.7914;0.7939;0.8103;0.8431;0.8103;0.813;0.8167;0.8187;0.8167;0.8163;0.9049;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
RandomForestClassifier;0.8745;0.8755;0.8745;0.8746;0.8759;0.8783;0.8759;0.8763;0.8167;0.8217;0.8167;0.816;0.9598;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
SVC;0.7838;0.7983;0.7838;0.7858;0.8103;0.8246;0.8103;0.8113;0.8167;0.8238;0.8167;0.8155;0.9035;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
SVC;0.7753;0.791;0.7753;0.7774;0.8517;0.864;0.8517;0.8529;0.8167;0.8178;0.8167;0.8148;0.899;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
MLPClassifier;0.8408;0.8453;0.8408;0.8417;0.8897;0.8906;0.8897;0.8898;0.8167;0.8153;0.8167;0.8147;0.9452;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.8434;0.8487;0.8434;0.8444;0.8797;0.8859;0.8797;0.8804;0.8167;0.8153;0.8167;0.8137;0.9448;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8473;0.8529;0.8473;0.8484;0.869;0.8692;0.869;0.869;0.8167;0.8153;0.8167;0.8137;0.9451;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8523;0.8586;0.8523;0.8535;0.8552;0.8587;0.8552;0.8561;0.8167;0.8153;0.8167;0.8137;0.9467;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.8488;0.8543;0.8488;0.8498;0.8729;0.8743;0.8729;0.873;0.8167;0.8181;0.8167;0.812;0.9466;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.85;0.8547;0.85;0.8508;0.8655;0.8663;0.8655;0.8656;0.8167;0.8148;0.8167;0.8118;0.9444;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
KNeighborsClassifier;0.8351;0.837;0.8351;0.8349;0.8793;0.8801;0.8793;0.8796;0.8;0.803;0.8;0.8012;0.9432;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.7826;0.7963;0.7826;0.7851;0.869;0.8876;0.869;0.8712;0.8;0.8035;0.8;0.8005;0.9034;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.7857;0.8021;0.7857;0.7879;0.8379;0.853;0.8379;0.8403;0.8;0.8013;0.8;0.8003;0.901;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 51};SVC(C=10, probability=True, random_state=51)
KNeighborsClassifier;0.8488;0.8514;0.8488;0.8492;0.8586;0.8587;0.8586;0.8585;0.8;0.8;0.8;0.8;0.9448;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8423;0.8441;0.8423;0.8427;0.8759;0.8782;0.8759;0.8757;0.8;0.8005;0.8;0.7999;0.9417;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.7784;0.7913;0.7784;0.7806;0.831;0.8359;0.831;0.8322;0.8;0.8016;0.8;0.7997;0.9006;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
SVC;0.7868;0.798;0.7868;0.7886;0.8069;0.816;0.8069;0.8083;0.8;0.8016;0.8;0.7997;0.9035;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
KNeighborsClassifier;0.8515;0.853;0.8515;0.8517;0.8655;0.8678;0.8655;0.866;0.8;0.7997;0.8;0.7995;0.9461;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8484;0.851;0.8484;0.8488;0.869;0.8708;0.869;0.869;0.8;0.7997;0.8;0.7995;0.9487;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
SVC;0.7845;0.7971;0.7845;0.7864;0.8552;0.8636;0.8552;0.8572;0.8;0.8042;0.8;0.7992;0.9028;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
KNeighborsClassifier;0.8377;0.8404;0.8377;0.8378;0.8797;0.8819;0.8797;0.8793;0.8;0.8079;0.8;0.7992;0.9455;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
SVC;0.7803;0.795;0.7803;0.7827;0.8454;0.8603;0.8454;0.8472;0.8;0.8042;0.8;0.7992;0.9008;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 731};SVC(C=10, probability=True, random_state=731)
SVC;0.7853;0.8013;0.7853;0.7877;0.8276;0.8414;0.8276;0.829;0.8;0.8042;0.8;0.7992;0.9035;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
KNeighborsClassifier;0.8446;0.8468;0.8446;0.845;0.8759;0.8756;0.8759;0.8751;0.8;0.7989;0.8;0.7991;0.9443;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8641;0.8661;0.8641;0.8641;0.8316;0.8327;0.8316;0.832;0.8;0.799;0.8;0.7985;0.9592;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 974};RandomForestClassifier(n_estimators=10, random_state=974)
RandomForestClassifier;0.8699;0.871;0.8699;0.8699;0.8483;0.8503;0.8483;0.8489;0.8;0.799;0.8;0.7985;0.958;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
RandomForestClassifier;0.8699;0.8711;0.8699;0.8702;0.8483;0.8485;0.8483;0.8484;0.8;0.7989;0.8;0.7985;0.961;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
MLPClassifier;0.8504;0.8555;0.8504;0.8516;0.8655;0.8673;0.8655;0.8659;0.8;0.799;0.8;0.7985;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
KNeighborsClassifier;0.8381;0.8406;0.8381;0.8386;0.8552;0.8564;0.8552;0.8553;0.8;0.7987;0.8;0.798;0.9473;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8534;0.8574;0.8534;0.8543;0.8694;0.884;0.8694;0.8715;0.8;0.7988;0.8;0.797;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.848;0.8544;0.848;0.8492;0.8591;0.8709;0.8591;0.8612;0.8;0.7988;0.8;0.797;0.945;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.853;0.8577;0.853;0.8542;0.8448;0.8458;0.8448;0.8452;0.8;0.7991;0.8;0.7966;0.9468;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
RandomForestClassifier;0.8672;0.8691;0.8672;0.8672;0.8694;0.8686;0.8694;0.8687;0.8;0.7991;0.8;0.7966;0.9581;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
MLPClassifier;0.8485;0.8529;0.8485;0.8495;0.8793;0.8802;0.8793;0.8793;0.8;0.7991;0.8;0.7966;0.946;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 193, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=193)
MLPClassifier;0.8488;0.854;0.8488;0.8497;0.8763;0.8776;0.8763;0.8767;0.8;0.7991;0.8;0.7966;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
MLPClassifier;0.8514;0.8571;0.8514;0.8524;0.8385;0.8418;0.8385;0.8393;0.8;0.7991;0.8;0.7966;0.9464;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
MLPClassifier;0.8442;0.8493;0.8442;0.8453;0.8694;0.8697;0.8694;0.8695;0.8;0.7991;0.8;0.7966;0.9452;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
MLPClassifier;0.85;0.8537;0.85;0.8509;0.9;0.902;0.9;0.9005;0.8;0.7995;0.8;0.7956;0.9431;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
MLPClassifier;0.8511;0.8561;0.8511;0.8521;0.8517;0.8588;0.8517;0.8526;0.8;0.7995;0.8;0.7956;0.946;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8565;0.8611;0.8565;0.8573;0.8276;0.8377;0.8276;0.8274;0.8;0.7995;0.8;0.7956;0.9488;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
MLPClassifier;0.8523;0.8555;0.8523;0.8531;0.8483;0.8531;0.8483;0.8491;0.8;0.7995;0.8;0.7956;0.9475;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
MLPClassifier;0.8435;0.8478;0.8435;0.8443;0.8586;0.8647;0.8586;0.8598;0.8;0.7995;0.8;0.7956;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
DecisionTreeClassifier;0.8373;0.8382;0.8373;0.8372;0.8488;0.8498;0.8488;0.849;0.7833;0.7912;0.7833;0.7848;0.878;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
RandomForestClassifier;0.8722;0.8738;0.8722;0.8723;0.8897;0.8893;0.8897;0.8893;0.7833;0.7917;0.7833;0.7839;0.959;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
SVC;0.7937;0.8055;0.7937;0.7958;0.7724;0.792;0.7724;0.7754;0.7833;0.7869;0.7833;0.7838;0.9067;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 483};SVC(C=10, probability=True, random_state=483)
RandomForestClassifier;0.8722;0.8735;0.8722;0.8724;0.8828;0.8844;0.8828;0.8831;0.7833;0.7905;0.7833;0.7838;0.9569;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
KNeighborsClassifier;0.8515;0.8533;0.8515;0.852;0.8414;0.8413;0.8414;0.8405;0.7833;0.7846;0.7833;0.7836;0.9495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8427;0.8444;0.8427;0.8429;0.9003;0.9009;0.9003;0.9005;0.7833;0.7857;0.7833;0.7835;0.9445;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8358;0.837;0.8358;0.836;0.869;0.8706;0.869;0.8694;0.7833;0.7839;0.7833;0.7833;0.8767;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
KNeighborsClassifier;0.8492;0.852;0.8492;0.8495;0.8586;0.8595;0.8586;0.8584;0.7833;0.783;0.7833;0.7828;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8445;0.8461;0.8445;0.8448;0.8522;0.8543;0.8522;0.8528;0.7833;0.783;0.7833;0.7828;0.9461;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8462;0.8483;0.8462;0.8464;0.8448;0.8481;0.8448;0.8447;0.7833;0.783;0.7833;0.7828;0.9474;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8465;0.8487;0.8465;0.8468;0.8483;0.85;0.8483;0.8485;0.7833;0.783;0.7833;0.7828;0.9485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.868;0.869;0.868;0.868;0.8724;0.8744;0.8724;0.8728;0.7833;0.7863;0.7833;0.7827;0.9587;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
RandomForestClassifier;0.8619;0.8637;0.8619;0.8619;0.8931;0.8933;0.8931;0.8927;0.7833;0.7839;0.7833;0.7827;0.9578;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 355};RandomForestClassifier(n_estimators=10, random_state=355)
RandomForestClassifier;0.8676;0.8689;0.8676;0.8678;0.8897;0.8898;0.8897;0.8897;0.7833;0.7839;0.7833;0.7827;0.957;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
KNeighborsClassifier;0.8435;0.845;0.8435;0.8439;0.8793;0.8788;0.8793;0.8789;0.7833;0.7868;0.7833;0.7826;0.9466;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8733;0.8749;0.8733;0.8735;0.8557;0.8553;0.8557;0.8549;0.7833;0.787;0.7833;0.7815;0.9586;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
DecisionTreeClassifier;0.8362;0.8382;0.8362;0.8364;0.8966;0.8974;0.8966;0.8969;0.7833;0.7922;0.7833;0.7807;0.8771;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=284)
MLPClassifier;0.8503;0.8553;0.8503;0.851;0.8862;0.8887;0.8862;0.8868;0.7833;0.7823;0.7833;0.7806;0.9446;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
MLPClassifier;0.8592;0.8636;0.8592;0.8602;0.831;0.831;0.831;0.8306;0.7833;0.7823;0.7833;0.7806;0.9485;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
RandomForestClassifier;0.8706;0.8721;0.8706;0.8706;0.8759;0.8758;0.8759;0.8757;0.7833;0.7823;0.7833;0.7805;0.9594;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 974};RandomForestClassifier(n_estimators=10, random_state=974)
RandomForestClassifier;0.8641;0.8659;0.8641;0.8644;0.8935;0.8931;0.8935;0.893;0.7833;0.7823;0.7833;0.7805;0.9584;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 974};RandomForestClassifier(n_estimators=5, random_state=974)
RandomForestClassifier;0.8657;0.8671;0.8657;0.8659;0.8621;0.862;0.8621;0.8615;0.7833;0.7856;0.7833;0.7805;0.9565;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
MLPClassifier;0.8473;0.8528;0.8473;0.8482;0.8828;0.8864;0.8828;0.8832;0.7833;0.7824;0.7833;0.7791;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 689, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=689)
RandomForestClassifier;0.8759;0.8768;0.8759;0.8759;0.8729;0.8757;0.8729;0.8721;0.7833;0.79;0.7833;0.7786;0.9595;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
RandomForestClassifier;0.8722;0.8731;0.8722;0.8724;0.8621;0.8633;0.8621;0.8625;0.7833;0.7865;0.7833;0.7777;0.9568;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
RandomForestClassifier;0.8672;0.8693;0.8672;0.8674;0.8655;0.867;0.8655;0.8656;0.7833;0.7865;0.7833;0.7777;0.9546;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
DecisionTreeClassifier;0.8407;0.8419;0.8407;0.8409;0.8522;0.8572;0.8522;0.8528;0.7667;0.7806;0.7667;0.7684;0.8808;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
RandomForestClassifier;0.8734;0.8742;0.8734;0.8735;0.8448;0.847;0.8448;0.8452;0.7667;0.78;0.7667;0.7677;0.9565;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
RandomForestClassifier;0.8733;0.8748;0.8733;0.8733;0.8454;0.8508;0.8454;0.8465;0.7667;0.7687;0.7667;0.7663;0.9584;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
RandomForestClassifier;0.8707;0.8715;0.8707;0.8708;0.8552;0.8573;0.8552;0.8557;0.7667;0.7663;0.7667;0.7656;0.9607;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
KNeighborsClassifier;0.8389;0.841;0.8389;0.8394;0.869;0.869;0.869;0.8689;0.7667;0.7663;0.7667;0.7656;0.9445;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.843;0.8458;0.843;0.8436;0.8694;0.8696;0.8694;0.8695;0.7667;0.7663;0.7667;0.7656;0.9465;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8503;0.8519;0.8503;0.8504;0.8557;0.8584;0.8557;0.8564;0.7667;0.7668;0.7667;0.7655;0.9478;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8764;0.8779;0.8764;0.8764;0.8483;0.8504;0.8483;0.8488;0.7667;0.7646;0.7667;0.7653;0.9606;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
DecisionTreeClassifier;0.8416;0.8423;0.8416;0.8416;0.8897;0.8901;0.8897;0.8897;0.7667;0.7646;0.7667;0.7653;0.8814;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
RandomForestClassifier;0.8783;0.8797;0.8783;0.8785;0.8832;0.8836;0.8832;0.8833;0.7667;0.774;0.7667;0.7638;0.962;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
DecisionTreeClassifier;0.8366;0.8391;0.8366;0.8367;0.8483;0.8479;0.8483;0.8473;0.7667;0.7681;0.7667;0.7634;0.8777;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=284)
RandomForestClassifier;0.8676;0.8697;0.8676;0.8678;0.9103;0.9114;0.9103;0.9106;0.7667;0.7627;0.7667;0.7625;0.9591;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 355};RandomForestClassifier(n_estimators=20, random_state=355)
RandomForestClassifier;0.8694;0.8708;0.8694;0.8695;0.8694;0.875;0.8694;0.8707;0.7667;0.7733;0.7667;0.7619;0.9586;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
RandomForestClassifier;0.8703;0.8718;0.8703;0.8704;0.8862;0.8874;0.8862;0.8866;0.7667;0.773;0.7667;0.7618;0.9577;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
DecisionTreeClassifier;0.8434;0.8445;0.8434;0.8434;0.8419;0.8479;0.8419;0.8427;0.75;0.752;0.75;0.7507;0.8826;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=284)
DecisionTreeClassifier;0.8473;0.8486;0.8473;0.8473;0.8517;0.8587;0.8517;0.8534;0.75;0.7651;0.75;0.7502;0.8854;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
RandomForestClassifier;0.8683;0.87;0.8683;0.8685;0.8931;0.8973;0.8931;0.8938;0.75;0.7512;0.75;0.7497;0.9551;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
RandomForestClassifier;0.8683;0.8699;0.8683;0.8686;0.8454;0.8467;0.8454;0.8458;0.75;0.7632;0.75;0.7496;0.9612;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 355};RandomForestClassifier(n_estimators=10, random_state=355)
DecisionTreeClassifier;0.845;0.8461;0.845;0.8452;0.8448;0.8451;0.8448;0.8445;0.75;0.7497;0.75;0.7495;0.8838;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=284)
DecisionTreeClassifier;0.8458;0.8475;0.8458;0.8459;0.8966;0.9034;0.8966;0.8973;0.75;0.7542;0.75;0.7492;0.8846;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8504;0.852;0.8504;0.8502;0.8241;0.8234;0.8241;0.8236;0.75;0.7546;0.75;0.7488;0.8879;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=75)
DecisionTreeClassifier;0.8485;0.8506;0.8485;0.8484;0.8276;0.8283;0.8276;0.8275;0.7333;0.7464;0.7333;0.7333;0.8862;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8527;0.8538;0.8527;0.8526;0.8414;0.8413;0.8414;0.8408;0.7333;0.7332;0.7333;0.732;0.89;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.845;0.846;0.845;0.845;0.866;0.8664;0.866;0.8655;0.7333;0.7312;0.7333;0.732;0.8839;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
RandomForestClassifier;0.873;0.8741;0.873;0.8731;0.8586;0.8594;0.8586;0.8589;0.7333;0.7431;0.7333;0.7319;0.9582;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 978};RandomForestClassifier(n_estimators=20, random_state=978)
DecisionTreeClassifier;0.8553;0.8572;0.8553;0.8553;0.8379;0.8373;0.8379;0.8373;0.7333;0.7337;0.7333;0.7314;0.8915;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=284)
DecisionTreeClassifier;0.8515;0.853;0.8515;0.8516;0.8241;0.8248;0.8241;0.8243;0.7333;0.7433;0.7333;0.7304;0.8886;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=284)
DecisionTreeClassifier;0.8446;0.8466;0.8446;0.8447;0.8414;0.8499;0.8414;0.8423;0.7167;0.7217;0.7167;0.7179;0.8837;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=284)
DecisionTreeClassifier;0.8484;0.8499;0.8484;0.8486;0.8483;0.851;0.8483;0.849;0.7167;0.7222;0.7167;0.7161;0.8866;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
RandomForestClassifier;0.8756;0.8778;0.8756;0.8757;0.8655;0.8689;0.8655;0.8657;0.7167;0.7295;0.7167;0.7152;0.9585;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 974};RandomForestClassifier(n_estimators=20, random_state=974)
DecisionTreeClassifier;0.845;0.847;0.845;0.8452;0.8586;0.8642;0.8586;0.8595;0.7167;0.7172;0.7167;0.7143;0.8837;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8458;0.8471;0.8458;0.8459;0.8552;0.8549;0.8552;0.8547;0.7167;0.7223;0.7167;0.7142;0.8849;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8515;0.8526;0.8515;0.8516;0.8557;0.8557;0.8557;0.8556;0.7167;0.7176;0.7167;0.7137;0.8885;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8404;0.8415;0.8404;0.8405;0.8694;0.8743;0.8694;0.87;0.7;0.7011;0.7;0.697;0.8805;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=284)
DecisionTreeClassifier;0.8434;0.8445;0.8434;0.8435;0.8522;0.8612;0.8522;0.8531;0.7;0.7016;0.7;0.6957;0.8825;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8465;0.8477;0.8465;0.8467;0.8828;0.883;0.8828;0.8826;0.7;0.7016;0.7;0.6957;0.8851;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8454;0.8469;0.8454;0.8454;0.8552;0.858;0.8552;0.856;0.7;0.7014;0.7;0.6933;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8526;0.8537;0.8526;0.8526;0.8793;0.885;0.8793;0.8799;0.6833;0.6868;0.6833;0.6823;0.8899;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.845;0.846;0.845;0.8451;0.866;0.872;0.866;0.8662;0.6833;0.6868;0.6833;0.6823;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 856};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=856)
DecisionTreeClassifier;0.8435;0.8448;0.8435;0.8434;0.8483;0.8528;0.8483;0.8476;0.6833;0.6832;0.6833;0.6813;0.8825;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 75};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=75)
DecisionTreeClassifier;0.8469;0.8483;0.8469;0.847;0.8379;0.8422;0.8379;0.8392;0.6833;0.6853;0.6833;0.6791;0.8853;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=284)
DecisionTreeClassifier;0.8476;0.8489;0.8476;0.848;0.8694;0.8714;0.8694;0.8701;0.6833;0.6853;0.6833;0.6791;0.8857;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 284};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=284)
LogisticRegression;0.6276;0.6328;0.6276;0.6274;0.6552;0.6576;0.6552;0.6558;0.5833;0.5795;0.5833;0.5781;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6234;0.6268;0.6234;0.6236;0.6414;0.6437;0.6414;0.6422;0.5833;0.5795;0.5833;0.5781;0.8145;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6219;0.6255;0.6219;0.6221;0.6621;0.6627;0.6621;0.6617;0.5667;0.5605;0.5667;0.5614;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6305;0.6336;0.6305;0.6307;0.6495;0.6609;0.6495;0.6473;0.5667;0.5605;0.5667;0.5614;0.8151;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6322;0.6344;0.6322;0.6321;0.6034;0.6064;0.6034;0.6038;0.5667;0.5605;0.5667;0.5614;0.8193;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6322;0.6355;0.6322;0.6324;0.5759;0.5894;0.5759;0.577;0.5667;0.5605;0.5667;0.5614;0.8206;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6276;0.6296;0.6276;0.6269;0.6586;0.6591;0.6586;0.6578;0.5667;0.5605;0.5667;0.5614;0.8127;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6242;0.6285;0.6242;0.6247;0.6345;0.6355;0.6345;0.6348;0.5667;0.5605;0.5667;0.5614;0.8149;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6303;0.6319;0.6303;0.6301;0.5966;0.604;0.5966;0.5969;0.5667;0.5605;0.5667;0.5614;0.8164;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6226;0.625;0.6226;0.6222;0.6655;0.6645;0.6655;0.6643;0.5667;0.5605;0.5667;0.5614;0.8135;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6275;0.6295;0.6275;0.6276;0.6323;0.6336;0.6323;0.6327;0.5667;0.5605;0.5667;0.5614;0.8152;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6302;0.6341;0.6302;0.6303;0.6186;0.6281;0.6186;0.6187;0.5667;0.5605;0.5667;0.5614;0.8176;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6305;0.6348;0.6305;0.6302;0.6117;0.6196;0.6117;0.6141;0.5667;0.5605;0.5667;0.5614;0.8167;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6319;0.6353;0.6319;0.632;0.6;0.6036;0.6;0.5982;0.5667;0.5605;0.5667;0.5614;0.8171;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6303;0.6334;0.6303;0.6305;0.6276;0.6283;0.6276;0.6279;0.5667;0.5605;0.5667;0.5614;0.8178;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6284;0.6305;0.6284;0.6285;0.6345;0.6476;0.6345;0.6351;0.5667;0.5605;0.5667;0.5614;0.8139;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6303;0.634;0.6303;0.6305;0.6034;0.6046;0.6034;0.6037;0.5667;0.5605;0.5667;0.5614;0.8187;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6288;0.6322;0.6288;0.6288;0.6517;0.6599;0.6517;0.6507;0.5667;0.5605;0.5667;0.5614;0.8135;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6223;0.6254;0.6223;0.6222;0.6517;0.6513;0.6517;0.6512;0.5667;0.5605;0.5667;0.5614;0.8129;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6246;0.6275;0.6246;0.6246;0.6207;0.6211;0.6207;0.6209;0.5667;0.5605;0.5667;0.5614;0.8178;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6296;0.6325;0.6296;0.6294;0.631;0.631;0.631;0.6296;0.5667;0.5605;0.5667;0.5614;0.8156;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6233;0.6257;0.6233;0.6229;0.6289;0.6412;0.6289;0.63;0.5667;0.5605;0.5667;0.5614;0.8151;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.624;0.6276;0.624;0.6241;0.6392;0.6398;0.6392;0.6361;0.5667;0.5605;0.5667;0.5614;0.8139;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 291, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=291)"
LogisticRegression;0.6322;0.6351;0.6322;0.6317;0.6138;0.6168;0.6138;0.6148;0.5667;0.5605;0.5667;0.5614;0.8174;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6219;0.6246;0.6219;0.6222;0.6655;0.6694;0.6655;0.6643;0.5667;0.5605;0.5667;0.5614;0.8126;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6257;0.6282;0.6257;0.6258;0.6034;0.6062;0.6034;0.6033;0.55;0.542;0.55;0.5443;0.8142;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.621;0.6239;0.621;0.6213;0.6598;0.6632;0.6598;0.6602;0.55;0.542;0.55;0.5443;0.8127;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
LogisticRegression;0.6267;0.6288;0.6267;0.6268;0.622;0.6243;0.622;0.6216;0.55;0.542;0.55;0.5443;0.8132;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6215;0.6243;0.6215;0.6214;0.6414;0.6485;0.6414;0.6417;0.55;0.542;0.55;0.5443;0.8126;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6221;0.6245;0.6221;0.6224;0.677;0.6775;0.677;0.6766;0.55;0.5428;0.55;0.5433;0.8154;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 27, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=27)"
