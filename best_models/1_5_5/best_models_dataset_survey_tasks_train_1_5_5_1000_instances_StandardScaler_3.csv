Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.9097;0.9118;0.9097;0.9098;0.9034;0.9074;0.9034;0.9039;0.8833;0.9055;0.8833;0.8833;0.9722;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
KNeighborsClassifier;0.887;0.89;0.887;0.8869;0.8866;0.8909;0.8866;0.8875;0.8667;0.873;0.8667;0.8675;0.9567;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
MLPClassifier;0.9085;0.911;0.9085;0.9086;0.8931;0.8932;0.8931;0.8927;0.8667;0.8867;0.8667;0.8672;0.9721;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.9062;0.9076;0.9062;0.9061;0.9278;0.9294;0.9278;0.9282;0.8667;0.8816;0.8667;0.867;0.971;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.907;0.9092;0.907;0.9069;0.9172;0.9209;0.9172;0.9171;0.8667;0.896;0.8667;0.8659;0.9704;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9055;0.9081;0.9055;0.9052;0.9244;0.9248;0.9244;0.9245;0.8667;0.896;0.8667;0.8659;0.971;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.9123;0.9138;0.9123;0.9123;0.8832;0.8865;0.8832;0.8831;0.8667;0.896;0.8667;0.8659;0.9721;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
MLPClassifier;0.9093;0.9117;0.9093;0.9092;0.9172;0.9178;0.9172;0.9173;0.8667;0.896;0.8667;0.8659;0.9712;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9074;0.9095;0.9074;0.9074;0.9172;0.9181;0.9172;0.9172;0.8667;0.896;0.8667;0.8659;0.97;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.9166;0.9186;0.9166;0.9165;0.8724;0.8743;0.8724;0.8724;0.8667;0.896;0.8667;0.8659;0.973;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
KNeighborsClassifier;0.8932;0.8943;0.8932;0.8931;0.9069;0.9105;0.9069;0.9077;0.8667;0.8731;0.8667;0.8651;0.9591;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.889;0.8911;0.889;0.8889;0.9103;0.9124;0.9103;0.9104;0.8667;0.8766;0.8667;0.8635;0.9607;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8886;0.8921;0.8886;0.8884;0.9038;0.9074;0.9038;0.904;0.8667;0.8744;0.8667;0.8628;0.9558;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.9051;0.9068;0.9051;0.9052;0.9379;0.9388;0.9379;0.9379;0.85;0.8625;0.85;0.8505;0.9707;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
MLPClassifier;0.9097;0.9113;0.9097;0.9096;0.9034;0.9074;0.9034;0.9036;0.85;0.8625;0.85;0.8505;0.9718;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
RandomForestClassifier;0.9082;0.909;0.9082;0.908;0.9207;0.9209;0.9207;0.9206;0.85;0.8769;0.85;0.8499;0.9751;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 560};RandomForestClassifier(n_estimators=10, random_state=560)
MLPClassifier;0.902;0.9043;0.902;0.902;0.9276;0.9296;0.9276;0.9275;0.85;0.8769;0.85;0.8499;0.9689;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.9028;0.9051;0.9028;0.9027;0.9313;0.9329;0.9313;0.9315;0.85;0.8769;0.85;0.8499;0.9712;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.9093;0.9112;0.9093;0.9092;0.9207;0.9223;0.9207;0.9209;0.85;0.8769;0.85;0.8499;0.971;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.9097;0.9116;0.9097;0.9097;0.8931;0.8944;0.8931;0.8931;0.85;0.8769;0.85;0.8499;0.973;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 414, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=414)
MLPClassifier;0.9077;0.9097;0.9077;0.9077;0.9381;0.9394;0.9381;0.9383;0.85;0.8769;0.85;0.8499;0.9721;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
DecisionTreeClassifier;0.9054;0.906;0.9054;0.9053;0.89;0.8979;0.89;0.8896;0.85;0.8769;0.85;0.8499;0.9673;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
MLPClassifier;0.9066;0.9091;0.9066;0.9067;0.9345;0.9353;0.9345;0.9346;0.85;0.8769;0.85;0.8499;0.971;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
DecisionTreeClassifier;0.8974;0.8991;0.8974;0.8973;0.9347;0.9374;0.9347;0.9345;0.85;0.8769;0.85;0.8499;0.9647;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.9078;0.9088;0.9078;0.9076;0.9172;0.9183;0.9172;0.9172;0.85;0.8769;0.85;0.8499;0.968;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
MLPClassifier;0.9105;0.9125;0.9105;0.9104;0.9172;0.9183;0.9172;0.9172;0.85;0.8769;0.85;0.8499;0.9723;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9093;0.912;0.9093;0.9093;0.931;0.9322;0.931;0.9309;0.85;0.8769;0.85;0.8499;0.9712;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9108;0.9128;0.9108;0.9109;0.9138;0.9138;0.9138;0.9136;0.85;0.8769;0.85;0.8499;0.9711;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9066;0.908;0.9066;0.9065;0.9;0.903;0.9;0.9003;0.85;0.8769;0.85;0.8499;0.9708;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9116;0.9135;0.9116;0.9117;0.9038;0.9064;0.9038;0.9034;0.85;0.8769;0.85;0.8499;0.9739;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9162;0.9185;0.9162;0.9162;0.8866;0.8873;0.8866;0.8865;0.85;0.8769;0.85;0.8499;0.9721;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
MLPClassifier;0.9123;0.9143;0.9123;0.9123;0.8935;0.896;0.8935;0.8936;0.85;0.8769;0.85;0.8499;0.9726;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 575, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=575)
DecisionTreeClassifier;0.9108;0.912;0.9108;0.9106;0.8931;0.8959;0.8931;0.8931;0.85;0.8769;0.85;0.8499;0.9673;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
DecisionTreeClassifier;0.9066;0.9072;0.9066;0.9065;0.9172;0.9196;0.9172;0.9173;0.85;0.8769;0.85;0.8499;0.9681;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
DecisionTreeClassifier;0.8959;0.8983;0.8959;0.8959;0.931;0.9339;0.931;0.9312;0.85;0.8705;0.85;0.8497;0.9667;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=43)
DecisionTreeClassifier;0.9078;0.909;0.9078;0.9079;0.8828;0.889;0.8828;0.883;0.85;0.8705;0.85;0.8497;0.9701;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=43)
DecisionTreeClassifier;0.9047;0.9063;0.9047;0.9046;0.9034;0.9075;0.9034;0.9035;0.85;0.8705;0.85;0.8497;0.971;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=908)
RandomForestClassifier;0.91;0.9114;0.91;0.91;0.9107;0.9118;0.9107;0.9108;0.85;0.8705;0.85;0.8497;0.976;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 560};RandomForestClassifier(n_estimators=10, random_state=560)
DecisionTreeClassifier;0.9074;0.9081;0.9074;0.9074;0.9138;0.9157;0.9138;0.914;0.85;0.8705;0.85;0.8497;0.9703;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=643)
RandomForestClassifier;0.9142;0.9151;0.9142;0.9141;0.8763;0.8763;0.8763;0.8762;0.85;0.8644;0.85;0.8481;0.9749;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 806};RandomForestClassifier(n_estimators=20, random_state=806)
KNeighborsClassifier;0.9017;0.9047;0.9017;0.9017;0.8897;0.8916;0.8897;0.8896;0.85;0.8599;0.85;0.8473;0.9606;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8856;0.8883;0.8856;0.8852;0.9103;0.914;0.9103;0.9103;0.85;0.8599;0.85;0.8473;0.9555;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.9082;0.9094;0.9082;0.9081;0.9241;0.9248;0.9241;0.9243;0.85;0.8607;0.85;0.8472;0.9748;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
KNeighborsClassifier;0.8902;0.8916;0.8902;0.8903;0.9;0.902;0.9;0.8997;0.85;0.8644;0.85;0.8453;0.9597;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.897;0.8999;0.897;0.897;0.9069;0.9072;0.9069;0.9069;0.85;0.8644;0.85;0.8453;0.9607;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.9105;0.9115;0.9105;0.9104;0.9138;0.9155;0.9138;0.9139;0.85;0.8755;0.85;0.8452;0.9725;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 806};RandomForestClassifier(n_estimators=20, random_state=806)
SVC;0.8699;0.8775;0.8699;0.8698;0.8931;0.8955;0.8931;0.8932;0.8333;0.8446;0.8333;0.834;0.9462;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.8668;0.8707;0.8668;0.8662;0.9172;0.918;0.9172;0.9171;0.8333;0.8446;0.8333;0.834;0.9474;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.868;0.8725;0.868;0.8676;0.9345;0.936;0.9345;0.9346;0.8333;0.8446;0.8333;0.834;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.871;0.8753;0.871;0.8708;0.9103;0.9112;0.9103;0.9097;0.8333;0.8446;0.8333;0.834;0.9454;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.8722;0.8783;0.8722;0.8721;0.8828;0.8837;0.8828;0.8829;0.8333;0.8446;0.8333;0.834;0.947;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.8684;0.8732;0.8684;0.868;0.9138;0.9142;0.9138;0.9138;0.8333;0.8446;0.8333;0.834;0.9473;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.8641;0.8683;0.8641;0.8638;0.9483;0.9505;0.9483;0.9483;0.8333;0.8446;0.8333;0.834;0.9455;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.866;0.8723;0.866;0.8659;0.9244;0.9264;0.9244;0.9245;0.8333;0.8446;0.8333;0.834;0.9464;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.8652;0.8699;0.8652;0.8647;0.89;0.8918;0.89;0.89;0.8333;0.8446;0.8333;0.834;0.9461;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.8706;0.8764;0.8706;0.8706;0.89;0.8902;0.89;0.8901;0.8333;0.8446;0.8333;0.834;0.9492;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.8752;0.8803;0.8752;0.8751;0.8797;0.8821;0.8797;0.8796;0.8333;0.8446;0.8333;0.834;0.9486;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.8691;0.8748;0.8691;0.8689;0.9313;0.9328;0.9313;0.9314;0.8333;0.8446;0.8333;0.834;0.9453;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.871;0.8769;0.871;0.8708;0.9241;0.9252;0.9241;0.9242;0.8333;0.8446;0.8333;0.834;0.947;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.8703;0.876;0.8703;0.8699;0.9034;0.9042;0.9034;0.9034;0.8333;0.8446;0.8333;0.834;0.9471;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.8699;0.8733;0.8699;0.8696;0.9034;0.9078;0.9034;0.9034;0.8333;0.8446;0.8333;0.834;0.9486;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.8695;0.8759;0.8695;0.8691;0.8793;0.8807;0.8793;0.8794;0.8333;0.8446;0.8333;0.834;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.8691;0.8743;0.8691;0.8689;0.9;0.9035;0.9;0.8998;0.8333;0.8446;0.8333;0.834;0.9449;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.866;0.8731;0.866;0.8656;0.9034;0.9054;0.9034;0.9034;0.8333;0.8446;0.8333;0.834;0.9455;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 927};SVC(C=10, probability=True, random_state=927)
SVC;0.871;0.8774;0.871;0.8708;0.89;0.8908;0.89;0.8901;0.8333;0.8446;0.8333;0.834;0.9507;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8679;0.8738;0.8679;0.8676;0.921;0.9245;0.921;0.9212;0.8333;0.8446;0.8333;0.834;0.9454;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8691;0.8752;0.8691;0.869;0.8966;0.8971;0.8966;0.8967;0.8333;0.8446;0.8333;0.834;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8668;0.8725;0.8668;0.8666;0.9138;0.9164;0.9138;0.9139;0.8333;0.8446;0.8333;0.834;0.9456;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8687;0.8721;0.8687;0.8684;0.9103;0.9119;0.9103;0.9105;0.8333;0.8446;0.8333;0.834;0.9468;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8687;0.8747;0.8687;0.8685;0.9138;0.9179;0.9138;0.9139;0.8333;0.8446;0.8333;0.834;0.9462;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8687;0.8742;0.8687;0.8683;0.9103;0.9109;0.9103;0.91;0.8333;0.8446;0.8333;0.834;0.9465;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8703;0.875;0.8703;0.8699;0.9069;0.9079;0.9069;0.9069;0.8333;0.8446;0.8333;0.834;0.9481;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8695;0.8758;0.8695;0.8695;0.89;0.8937;0.89;0.8903;0.8333;0.8446;0.8333;0.834;0.948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
SVC;0.8703;0.8751;0.8703;0.8699;0.9;0.9027;0.9;0.9002;0.8333;0.859;0.8333;0.8339;0.9477;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
SVC;0.8695;0.8746;0.8695;0.8692;0.9069;0.9097;0.9069;0.9069;0.8333;0.859;0.8333;0.8339;0.9463;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 980};SVC(C=10, probability=True, random_state=980)
LogisticRegression;0.7891;0.8039;0.7891;0.7913;0.7862;0.8077;0.7862;0.79;0.8333;0.8432;0.8333;0.8333;0.9009;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7888;0.8044;0.7888;0.791;0.7966;0.8068;0.7966;0.7992;0.8333;0.8432;0.8333;0.8333;0.9021;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7914;0.8062;0.7914;0.7935;0.7732;0.7878;0.7732;0.7764;0.8333;0.8432;0.8333;0.8333;0.902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
MLPClassifier;0.9131;0.9151;0.9131;0.913;0.9069;0.9071;0.9069;0.9069;0.8333;0.8511;0.8333;0.8333;0.9706;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
LogisticRegression;0.7891;0.8038;0.7891;0.7913;0.8034;0.8158;0.8034;0.8064;0.8333;0.8432;0.8333;0.8333;0.9009;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.796;0.812;0.796;0.798;0.7621;0.7742;0.7621;0.7641;0.8333;0.8432;0.8333;0.8333;0.9017;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
MLPClassifier;0.9123;0.9144;0.9123;0.9122;0.9;0.9002;0.9;0.9;0.8333;0.8428;0.8333;0.8333;0.9713;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
LogisticRegression;0.7872;0.8024;0.7872;0.7893;0.7931;0.8079;0.7931;0.7963;0.8333;0.8432;0.8333;0.8333;0.8994;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
MLPClassifier;0.9016;0.9042;0.9016;0.9014;0.9276;0.9276;0.9276;0.9273;0.8333;0.8561;0.8333;0.833;0.9702;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
MLPClassifier;0.9066;0.9085;0.9066;0.9065;0.9172;0.9179;0.9172;0.9174;0.8333;0.8561;0.8333;0.833;0.9707;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
KNeighborsClassifier;0.8925;0.8946;0.8925;0.8925;0.8897;0.8935;0.8897;0.8893;0.8333;0.8529;0.8333;0.8326;0.9585;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
LogisticRegression;0.7803;0.7967;0.7803;0.7826;0.7828;0.7943;0.7828;0.7865;0.8333;0.8548;0.8333;0.8322;0.8996;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
DecisionTreeClassifier;0.9093;0.9103;0.9093;0.9092;0.9175;0.9201;0.9175;0.9177;0.8333;0.8679;0.8333;0.8321;0.9659;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
DecisionTreeClassifier;0.9039;0.9046;0.9039;0.9039;0.9172;0.9227;0.9172;0.9176;0.8333;0.8599;0.8333;0.8321;0.9701;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
MLPClassifier;0.9108;0.9127;0.9108;0.9109;0.9107;0.9142;0.9107;0.9102;0.8333;0.8679;0.8333;0.8321;0.9719;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
DecisionTreeClassifier;0.9051;0.9057;0.9051;0.9049;0.9448;0.9451;0.9448;0.9447;0.8333;0.8599;0.8333;0.8321;0.9681;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=43)
DecisionTreeClassifier;0.9085;0.9097;0.9085;0.9083;0.8832;0.8835;0.8832;0.8832;0.8333;0.8679;0.8333;0.8321;0.9721;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
DecisionTreeClassifier;0.9108;0.9119;0.9108;0.9108;0.8966;0.8985;0.8966;0.8964;0.8333;0.8679;0.8333;0.8321;0.9685;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
DecisionTreeClassifier;0.9054;0.9065;0.9054;0.9055;0.9141;0.9148;0.9141;0.9142;0.8333;0.8679;0.8333;0.8321;0.9696;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
KNeighborsClassifier;0.9009;0.9021;0.9009;0.9007;0.9172;0.9183;0.9172;0.9173;0.8333;0.8468;0.8333;0.8321;0.9614;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.9135;0.9145;0.9135;0.9135;0.8966;0.8967;0.8966;0.8961;0.8333;0.8626;0.8333;0.8307;0.9722;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
DecisionTreeClassifier;0.9009;0.9015;0.9009;0.9008;0.9517;0.9524;0.9517;0.9519;0.8333;0.8626;0.8333;0.8307;0.9669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
RandomForestClassifier;0.9028;0.9044;0.9028;0.9027;0.9276;0.9276;0.9276;0.9275;0.8333;0.8531;0.8333;0.8303;0.9742;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
RandomForestClassifier;0.9081;0.9092;0.9081;0.9082;0.9276;0.9278;0.9276;0.9277;0.8333;0.8531;0.8333;0.8303;0.975;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 806};RandomForestClassifier(n_estimators=20, random_state=806)
DecisionTreeClassifier;0.9089;0.9108;0.9089;0.9088;0.8897;0.8903;0.8897;0.8898;0.8333;0.8531;0.8333;0.8303;0.967;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
RandomForestClassifier;0.9104;0.9114;0.9104;0.9103;0.9034;0.9043;0.9034;0.9036;0.8333;0.8531;0.8333;0.8303;0.9753;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 560};RandomForestClassifier(n_estimators=10, random_state=560)
RandomForestClassifier;0.9143;0.915;0.9143;0.9141;0.8897;0.8915;0.8897;0.8892;0.8333;0.8531;0.8333;0.8303;0.975;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 560};RandomForestClassifier(n_estimators=20, random_state=560)
RandomForestClassifier;0.9116;0.9121;0.9116;0.9113;0.9034;0.9033;0.9034;0.9032;0.8333;0.8531;0.8333;0.8303;0.9759;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 806};RandomForestClassifier(n_estimators=20, random_state=806)
DecisionTreeClassifier;0.9035;0.9044;0.9035;0.9034;0.9244;0.9243;0.9244;0.9243;0.8333;0.8531;0.8333;0.8303;0.9678;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
RandomForestClassifier;0.9124;0.9129;0.9124;0.9121;0.9172;0.9172;0.9172;0.9171;0.8333;0.8531;0.8333;0.8303;0.9734;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
KNeighborsClassifier;0.9012;0.9027;0.9012;0.9011;0.9107;0.9108;0.9107;0.9107;0.8333;0.8474;0.8333;0.8292;0.9635;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8986;0.8998;0.8986;0.8985;0.9069;0.908;0.9069;0.9066;0.8333;0.8474;0.8333;0.8292;0.961;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8855;0.8887;0.8855;0.8854;0.9138;0.9161;0.9138;0.9144;0.8333;0.8474;0.8333;0.8292;0.9586;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9128;0.914;0.9128;0.9127;0.9069;0.9066;0.9069;0.9062;0.8333;0.8486;0.8333;0.8291;0.976;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
RandomForestClassifier;0.907;0.9083;0.907;0.9069;0.921;0.9211;0.921;0.921;0.8333;0.8486;0.8333;0.8291;0.9742;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 806};RandomForestClassifier(n_estimators=10, random_state=806)
RandomForestClassifier;0.9085;0.9098;0.9085;0.9084;0.9138;0.9139;0.9138;0.9137;0.8333;0.8486;0.8333;0.8291;0.976;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
RandomForestClassifier;0.9085;0.9101;0.9085;0.9084;0.9;0.9007;0.9;0.9002;0.8333;0.8486;0.8333;0.8291;0.9757;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
KNeighborsClassifier;0.897;0.8986;0.897;0.8971;0.89;0.8914;0.89;0.8903;0.8333;0.8458;0.8333;0.8285;0.9619;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8967;0.8988;0.8967;0.8962;0.8966;0.8997;0.8966;0.8972;0.8333;0.8458;0.8333;0.8285;0.9644;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8997;0.9012;0.8997;0.8995;0.89;0.892;0.89;0.8904;0.8333;0.8458;0.8333;0.8285;0.9635;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8982;0.9004;0.8982;0.8982;0.931;0.9327;0.931;0.9312;0.8333;0.8458;0.8333;0.8285;0.9608;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8951;0.898;0.8951;0.8952;0.8931;0.8947;0.8931;0.8918;0.8333;0.8458;0.8333;0.8285;0.9627;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8714;0.8753;0.8714;0.8709;0.9003;0.9007;0.9003;0.9002;0.8167;0.8224;0.8167;0.8173;0.9503;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 902};SVC(C=10, probability=True, random_state=902)
MLPClassifier;0.9108;0.9127;0.9108;0.9108;0.9034;0.906;0.9034;0.9037;0.8167;0.8302;0.8167;0.8159;0.9724;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 233, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=233)
LogisticRegression;0.7818;0.7974;0.7818;0.7842;0.8213;0.8318;0.8213;0.8229;0.8167;0.8296;0.8167;0.8156;0.8985;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7846;0.8002;0.7846;0.787;0.7862;0.7987;0.7862;0.7888;0.8167;0.8296;0.8167;0.8156;0.9014;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.7795;0.796;0.7795;0.782;0.7698;0.7872;0.7698;0.772;0.8167;0.8296;0.8167;0.8156;0.9031;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7765;0.7941;0.7765;0.7791;0.8241;0.831;0.8241;0.8262;0.8167;0.8296;0.8167;0.8156;0.8994;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.7887;0.8034;0.7887;0.7904;0.7621;0.7836;0.7621;0.7666;0.8167;0.8296;0.8167;0.8156;0.9035;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7892;0.805;0.7892;0.7915;0.7552;0.7654;0.7552;0.7586;0.8167;0.8296;0.8167;0.8156;0.9039;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.78;0.7963;0.78;0.7821;0.7759;0.7958;0.7759;0.7799;0.8167;0.8296;0.8167;0.8156;0.9006;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.7726;0.791;0.7726;0.7748;0.7938;0.8112;0.7938;0.7969;0.8167;0.8296;0.8167;0.8156;0.8993;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.7842;0.7998;0.7842;0.7863;0.7724;0.7935;0.7724;0.7768;0.8167;0.8296;0.8167;0.8156;0.8996;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7823;0.799;0.7823;0.7846;0.8172;0.8268;0.8172;0.8184;0.8167;0.8296;0.8167;0.8156;0.9001;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7757;0.793;0.7757;0.7784;0.8138;0.8225;0.8138;0.816;0.8167;0.8296;0.8167;0.8156;0.8999;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7829;0.7991;0.7829;0.7853;0.8076;0.8186;0.8076;0.8099;0.8167;0.8296;0.8167;0.8156;0.8974;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7864;0.8013;0.7864;0.7888;0.7379;0.7558;0.7379;0.7426;0.8167;0.8296;0.8167;0.8156;0.9047;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.776;0.7918;0.776;0.7783;0.7869;0.812;0.7869;0.7888;0.8167;0.8296;0.8167;0.8156;0.8992;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.7891;0.8048;0.7891;0.7913;0.7835;0.8093;0.7835;0.7855;0.8167;0.8296;0.8167;0.8156;0.9009;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 37, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=37)"
LogisticRegression;0.7857;0.8009;0.7857;0.7879;0.769;0.7912;0.769;0.7719;0.8167;0.8296;0.8167;0.8156;0.9012;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7773;0.793;0.7773;0.7797;0.8345;0.8461;0.8345;0.8362;0.8167;0.8296;0.8167;0.8156;0.8977;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7895;0.8056;0.7895;0.7915;0.8;0.8172;0.8;0.8035;0.8167;0.8296;0.8167;0.8156;0.9027;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7861;0.8018;0.7861;0.7881;0.7862;0.8107;0.7862;0.7879;0.8167;0.8296;0.8167;0.8156;0.901;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7861;0.8023;0.7861;0.7883;0.7483;0.7624;0.7483;0.7518;0.8167;0.8296;0.8167;0.8156;0.902;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7822;0.7985;0.7822;0.7842;0.7801;0.794;0.7801;0.7827;0.8167;0.8296;0.8167;0.8156;0.9008;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
LogisticRegression;0.7833;0.8007;0.7833;0.7856;0.7904;0.8028;0.7904;0.7938;0.8167;0.8296;0.8167;0.8156;0.9015;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 299, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=299)"
LogisticRegression;0.7853;0.8006;0.7853;0.7875;0.7483;0.7726;0.7483;0.752;0.8167;0.8296;0.8167;0.8156;0.9028;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 624, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=624)"
RandomForestClassifier;0.9147;0.9154;0.9147;0.9145;0.9069;0.9077;0.9069;0.9065;0.8167;0.8352;0.8167;0.8143;0.9762;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 806};RandomForestClassifier(n_estimators=10, random_state=806)
KNeighborsClassifier;0.8978;0.8992;0.8978;0.8977;0.8866;0.8865;0.8866;0.8865;0.8167;0.8352;0.8167;0.8143;0.9608;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9074;0.9085;0.9074;0.9074;0.9175;0.9181;0.9175;0.9176;0.8167;0.8352;0.8167;0.8143;0.9752;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
DecisionTreeClassifier;0.9139;0.9148;0.9139;0.9139;0.8897;0.8912;0.8897;0.8901;0.8167;0.8352;0.8167;0.8143;0.9658;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
RandomForestClassifier;0.9097;0.9116;0.9097;0.9096;0.9241;0.9253;0.9241;0.9239;0.8167;0.8352;0.8167;0.8143;0.9764;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 560};RandomForestClassifier(n_estimators=20, random_state=560)
DecisionTreeClassifier;0.9093;0.9098;0.9093;0.9093;0.9345;0.9364;0.9345;0.9348;0.8167;0.8358;0.8167;0.8135;0.9699;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=908)
KNeighborsClassifier;0.8966;0.9001;0.8966;0.8967;0.9072;0.9083;0.9072;0.9073;0.8167;0.8323;0.8167;0.8133;0.9605;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.9104;0.911;0.9104;0.9104;0.921;0.9213;0.921;0.921;0.8167;0.8323;0.8167;0.8133;0.9748;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 806};RandomForestClassifier(n_estimators=10, random_state=806)
KNeighborsClassifier;0.8986;0.9;0.8986;0.8986;0.8897;0.8936;0.8897;0.8898;0.8167;0.8323;0.8167;0.8133;0.962;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.9051;0.9069;0.9051;0.9049;0.9103;0.9112;0.9103;0.9103;0.8167;0.8225;0.8167;0.8124;0.9754;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 477};RandomForestClassifier(n_estimators=10, random_state=477)
DecisionTreeClassifier;0.907;0.9081;0.907;0.907;0.9038;0.9043;0.9038;0.9032;0.8167;0.8536;0.8167;0.8122;0.9672;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
DecisionTreeClassifier;0.9074;0.908;0.9074;0.9072;0.9207;0.9218;0.9207;0.92;0.8167;0.837;0.8167;0.8105;0.9684;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
RandomForestClassifier;0.9097;0.911;0.9097;0.9097;0.8897;0.8897;0.8897;0.8896;0.8167;0.837;0.8167;0.8105;0.9741;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 806};RandomForestClassifier(n_estimators=20, random_state=806)
DecisionTreeClassifier;0.91;0.9114;0.91;0.9099;0.8969;0.8969;0.8969;0.8956;0.8167;0.837;0.8167;0.8105;0.9693;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
DecisionTreeClassifier;0.9035;0.9053;0.9035;0.9034;0.9244;0.9255;0.9244;0.9246;0.8167;0.837;0.8167;0.8105;0.9682;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
KNeighborsClassifier;0.8978;0.8992;0.8978;0.8975;0.8862;0.8868;0.8862;0.8853;0.8167;0.8331;0.8167;0.8097;0.9587;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9062;0.9075;0.9062;0.9062;0.8729;0.8778;0.8729;0.8709;0.8167;0.8338;0.8167;0.8096;0.9616;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9101;0.9105;0.9101;0.9099;0.9069;0.9074;0.9069;0.9066;0.8167;0.8338;0.8167;0.8096;0.9765;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 806};RandomForestClassifier(n_estimators=5, random_state=806)
RandomForestClassifier;0.907;0.9078;0.907;0.9067;0.945;0.9462;0.945;0.9451;0.8167;0.8338;0.8167;0.8096;0.9731;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 560};RandomForestClassifier(n_estimators=10, random_state=560)
RandomForestClassifier;0.9104;0.9116;0.9104;0.9104;0.9072;0.9075;0.9072;0.9072;0.8167;0.8338;0.8167;0.8096;0.9745;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 477};RandomForestClassifier(n_estimators=10, random_state=477)
KNeighborsClassifier;0.894;0.8954;0.894;0.8939;0.9069;0.9079;0.9069;0.9068;0.8167;0.8325;0.8167;0.8094;0.9605;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8963;0.8976;0.8963;0.8962;0.9138;0.9155;0.9138;0.9134;0.8167;0.8325;0.8167;0.8094;0.9592;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.9009;0.9021;0.9009;0.9009;0.9069;0.9098;0.9069;0.9065;0.8167;0.853;0.8167;0.806;0.9692;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 908};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=908)
KNeighborsClassifier;0.8959;0.8982;0.8959;0.8956;0.8655;0.8708;0.8655;0.8649;0.8;0.8226;0.8;0.801;0.9621;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.9051;0.9061;0.9051;0.9052;0.8931;0.8976;0.8931;0.8924;0.8;0.8242;0.8;0.796;0.9684;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
RandomForestClassifier;0.9062;0.907;0.9062;0.9061;0.9241;0.9258;0.9241;0.9234;0.8;0.8242;0.8;0.796;0.9761;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 560};RandomForestClassifier(n_estimators=20, random_state=560)
DecisionTreeClassifier;0.8955;0.8979;0.8955;0.8956;0.931;0.9322;0.931;0.931;0.8;0.8439;0.8;0.7956;0.9692;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
KNeighborsClassifier;0.897;0.8997;0.897;0.8971;0.9103;0.9135;0.9103;0.9104;0.8;0.8204;0.8;0.7948;0.957;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9012;0.9028;0.9012;0.9012;0.9038;0.9044;0.9038;0.9035;0.8;0.8186;0.8;0.7942;0.9589;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.917;0.9177;0.917;0.917;0.8759;0.8759;0.8759;0.8758;0.8;0.8406;0.8;0.7918;0.9719;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 43};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=43)
RandomForestClassifier;0.9078;0.9085;0.9078;0.9077;0.9107;0.9117;0.9107;0.9104;0.8;0.8219;0.8;0.7902;0.9755;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 560};RandomForestClassifier(n_estimators=20, random_state=560)
RandomForestClassifier;0.9047;0.9059;0.9047;0.9047;0.9414;0.9429;0.9414;0.9415;0.8;0.8219;0.8;0.7902;0.9745;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 806};RandomForestClassifier(n_estimators=20, random_state=806)
RandomForestClassifier;0.9128;0.9134;0.9128;0.9126;0.9069;0.9071;0.9069;0.9065;0.8;0.8219;0.8;0.7902;0.9755;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 560};RandomForestClassifier(n_estimators=10, random_state=560)
RandomForestClassifier;0.9131;0.9137;0.9131;0.9129;0.8832;0.8853;0.8832;0.8826;0.8;0.8219;0.8;0.7902;0.9762;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 477};RandomForestClassifier(n_estimators=20, random_state=477)
RandomForestClassifier;0.9139;0.9146;0.9139;0.9138;0.8793;0.8792;0.8793;0.8792;0.7833;0.8151;0.7833;0.7764;0.976;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 560};RandomForestClassifier(n_estimators=10, random_state=560)
DecisionTreeClassifier;0.9047;0.9065;0.9047;0.9047;0.9034;0.9041;0.9034;0.9034;0.7833;0.8091;0.7833;0.7758;0.9669;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 643};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=643)
KNeighborsClassifier;0.897;0.8986;0.897;0.897;0.8724;0.8726;0.8724;0.8725;0.7667;0.7947;0.7667;0.755;0.9616;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9043;0.9057;0.9043;0.9043;0.8483;0.852;0.8483;0.8478;0.75;0.7808;0.75;0.7336;0.9604;smote;1000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
