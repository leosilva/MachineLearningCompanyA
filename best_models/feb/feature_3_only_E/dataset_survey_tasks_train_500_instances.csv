Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
DecisionTreeClassifier,0.8142,0.8333,0.8142,0.8184,0.8646,0.8897,0.8646,0.8673,0.7333,0.7438,0.7333,0.7366,0.9322,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 41}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=41)"
LogisticRegression,0.7795,0.8519,0.7795,0.7793,0.7396,0.837,0.7396,0.738,0.7333,0.7942,0.7333,0.7243,0.9203,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 541, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=541)"
RandomForestClassifier,0.8212,0.8393,0.8212,0.8249,0.8472,0.855,0.8472,0.8497,0.7167,0.7202,0.7167,0.7171,0.9326,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'n_estimators': 10, 'random_state': 437}","RandomForestClassifier(n_estimators=10, random_state=437)"
SVC,0.789,0.85,0.789,0.7865,0.8056,0.8519,0.8056,0.8049,0.7,0.7438,0.7,0.704,0.9169,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 648}","SVC(C=10, probability=True, random_state=648)"
MLPClassifier,0.7804,0.8446,0.7804,0.7808,0.7778,0.8101,0.7778,0.783,0.7,0.7096,0.7,0.7025,0.925,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=773)"
LogisticRegression,0.8046,0.8305,0.8046,0.8077,0.8194,0.8367,0.8194,0.8222,0.7,0.7057,0.7,0.7021,0.9179,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 214, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=214)"
MLPClassifier,0.7881,0.8431,0.7881,0.789,0.809,0.8259,0.809,0.8139,0.7,0.7209,0.7,0.6942,0.924,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_iter': 100000, 'random_state': 871, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=871)"
KNeighborsClassifier,0.8246,0.841,0.8246,0.8273,0.8056,0.8243,0.8056,0.8102,0.7,0.7075,0.7,0.6938,0.9229,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier,0.8247,0.8416,0.8247,0.8273,0.8194,0.8298,0.8194,0.8212,0.7,0.6972,0.7,0.6929,0.9373,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'n_estimators': 20, 'random_state': 523}","RandomForestClassifier(n_estimators=20, random_state=523)"
KNeighborsClassifier,0.8108,0.8258,0.8108,0.8145,0.8438,0.8509,0.8438,0.8463,0.6833,0.6865,0.6833,0.6837,0.9205,smote,500,no_scaled,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
LogisticRegression,0.7647,0.8246,0.7647,0.7664,0.809,0.831,0.809,0.8129,0.6667,0.6759,0.6667,0.6683,0.9148,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 978, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=978)"
DecisionTreeClassifier,0.8194,0.8381,0.8194,0.8235,0.8333,0.8475,0.8333,0.8355,0.6667,0.6852,0.6667,0.6664,0.9394,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 55}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=55)"
MLPClassifier,0.7752,0.8333,0.7752,0.7756,0.7847,0.8621,0.7847,0.7879,0.6667,0.679,0.6667,0.663,0.9185,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_iter': 100000, 'random_state': 812, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=812)"
DecisionTreeClassifier,0.8116,0.836,0.8116,0.8146,0.8438,0.8626,0.8438,0.8458,0.6667,0.683,0.6667,0.6598,0.9304,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 834}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=834)"
SVC,0.796,0.8605,0.796,0.7935,0.7674,0.8249,0.7674,0.767,0.6667,0.7476,0.6667,0.6451,0.9151,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 226}","SVC(C=10, probability=True, random_state=226)"
SVC,0.7977,0.8585,0.7977,0.7967,0.7639,0.8222,0.7639,0.7607,0.6667,0.7473,0.6667,0.6432,0.9116,smote,500,StandardScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'C': 10, 'kernel': 'rbf', 'random_state': 73}","SVC(C=10, probability=True, random_state=73)"
RandomForestClassifier,0.8333,0.8474,0.8333,0.8363,0.809,0.8236,0.809,0.8133,0.65,0.6488,0.65,0.6432,0.9372,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'n_estimators': 10, 'random_state': 334}","RandomForestClassifier(n_estimators=10, random_state=334)"
KNeighborsClassifier,0.8221,0.8402,0.8221,0.8244,0.7778,0.7916,0.7778,0.778,0.65,0.6773,0.65,0.6346,0.9275,smote,500,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'E']",10,"{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=9, weights='distance')"
