Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9115;0.9182;0.9115;0.9106;0.9275;0.9274;0.9275;0.9272;0.9;0.9021;0.9;0.8999;0.9811;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 761};RandomForestClassifier(n_estimators=20, random_state=761)
RandomForestClassifier;0.9178;0.9239;0.9178;0.9179;0.971;0.9716;0.971;0.971;0.8833;0.8848;0.8833;0.8837;0.9817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 761};RandomForestClassifier(n_estimators=20, random_state=761)
RandomForestClassifier;0.9307;0.9358;0.9307;0.9307;0.8986;0.9056;0.8986;0.9002;0.8833;0.8848;0.8833;0.8837;0.9834;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9227;0.9265;0.9227;0.923;0.9275;0.931;0.9275;0.9281;0.8833;0.884;0.8833;0.8833;0.9808;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
KNeighborsClassifier;0.8131;0.8247;0.8131;0.8135;0.8696;0.875;0.8696;0.8664;0.8833;0.884;0.8833;0.8833;0.9368;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.921;0.9278;0.921;0.9213;0.8551;0.8581;0.8551;0.8555;0.8833;0.886;0.8833;0.8832;0.9851;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 127};RandomForestClassifier(n_estimators=20, random_state=127)
RandomForestClassifier;0.9259;0.9299;0.9259;0.9259;0.913;0.9163;0.913;0.9135;0.8667;0.8775;0.8667;0.8687;0.982;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9243;0.9284;0.9243;0.9246;0.9275;0.9342;0.9275;0.9282;0.8667;0.8739;0.8667;0.8679;0.9807;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 127};RandomForestClassifier(n_estimators=10, random_state=127)
RandomForestClassifier;0.9292;0.9338;0.9292;0.9289;0.8986;0.9012;0.8986;0.8991;0.8667;0.8739;0.8667;0.8679;0.9838;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 761};RandomForestClassifier(n_estimators=20, random_state=761)
RandomForestClassifier;0.9194;0.9232;0.9194;0.9197;1.0;1.0;1.0;1.0;0.8667;0.869;0.8667;0.8674;0.9824;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 127};RandomForestClassifier(n_estimators=20, random_state=127)
RandomForestClassifier;0.9259;0.9317;0.9259;0.9263;0.9275;0.9328;0.9275;0.9283;0.8667;0.8704;0.8667;0.8674;0.9845;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 127};RandomForestClassifier(n_estimators=20, random_state=127)
RandomForestClassifier;0.9227;0.925;0.9227;0.9229;0.9275;0.9293;0.9275;0.9281;0.8667;0.8704;0.8667;0.8674;0.982;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 127};RandomForestClassifier(n_estimators=20, random_state=127)
RandomForestClassifier;0.9211;0.926;0.9211;0.9212;0.971;0.971;0.971;0.971;0.8667;0.8704;0.8667;0.8674;0.9846;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 761};RandomForestClassifier(n_estimators=20, random_state=761)
RandomForestClassifier;0.9259;0.929;0.9259;0.9259;0.942;0.942;0.942;0.942;0.8667;0.8704;0.8667;0.8674;0.9826;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9226;0.9263;0.9226;0.9227;0.8841;0.8906;0.8841;0.8835;0.8667;0.8704;0.8667;0.8674;0.9804;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9194;0.922;0.9194;0.9198;0.8841;0.8969;0.8841;0.8859;0.8667;0.8709;0.8667;0.8673;0.9845;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 127};RandomForestClassifier(n_estimators=20, random_state=127)
RandomForestClassifier;0.9324;0.9345;0.9324;0.9321;0.8841;0.8841;0.8841;0.8841;0.8667;0.8681;0.8667;0.867;0.9845;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 761};RandomForestClassifier(n_estimators=10, random_state=761)
DecisionTreeClassifier;0.8938;0.8988;0.8938;0.8936;0.8841;0.8906;0.8841;0.8835;0.8667;0.8692;0.8667;0.8669;0.9205;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
RandomForestClassifier;0.9308;0.9354;0.9308;0.9311;0.8986;0.9026;0.8986;0.8981;0.8667;0.8692;0.8667;0.8669;0.9838;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 127};RandomForestClassifier(n_estimators=20, random_state=127)
KNeighborsClassifier;0.8147;0.8248;0.8147;0.8161;0.8986;0.8993;0.8986;0.8978;0.8667;0.8692;0.8667;0.8669;0.9283;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9243;0.9292;0.9243;0.9246;0.8551;0.861;0.8551;0.8563;0.8667;0.8673;0.8667;0.8666;0.983;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9179;0.9218;0.9179;0.9176;0.913;0.9177;0.913;0.9135;0.8667;0.8664;0.8667;0.8662;0.9842;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 761};RandomForestClassifier(n_estimators=20, random_state=761)
RandomForestClassifier;0.9115;0.9162;0.9115;0.9114;0.9565;0.9565;0.9565;0.9565;0.8667;0.8668;0.8667;0.8657;0.9849;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9211;0.9228;0.9211;0.9211;0.942;0.943;0.942;0.9413;0.85;0.8541;0.85;0.851;0.9801;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9372;0.9411;0.9372;0.9373;0.942;0.9461;0.942;0.9419;0.85;0.8514;0.85;0.8504;0.9823;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 761};RandomForestClassifier(n_estimators=10, random_state=761)
KNeighborsClassifier;0.8276;0.8401;0.8276;0.8283;0.8406;0.8404;0.8406;0.8402;0.85;0.8514;0.85;0.8504;0.9376;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8261;0.8341;0.8261;0.8273;0.8696;0.8696;0.8696;0.8696;0.85;0.8514;0.85;0.8504;0.9296;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8246;0.8395;0.8246;0.8254;0.913;0.9142;0.913;0.9133;0.85;0.8514;0.85;0.8504;0.938;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9164;0.9215;0.9164;0.916;0.8986;0.9012;0.8986;0.8991;0.85;0.8506;0.85;0.8499;0.9815;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 761};RandomForestClassifier(n_estimators=20, random_state=761)
RandomForestClassifier;0.9164;0.9204;0.9164;0.9167;0.8841;0.9037;0.8841;0.8867;0.85;0.8506;0.85;0.8499;0.9836;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 761};RandomForestClassifier(n_estimators=20, random_state=761)
RandomForestClassifier;0.9146;0.9204;0.9146;0.9148;0.9565;0.9615;0.9565;0.9563;0.85;0.8506;0.85;0.8499;0.9794;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 529};RandomForestClassifier(n_estimators=20, random_state=529)
RandomForestClassifier;0.9243;0.9273;0.9243;0.9248;0.9275;0.931;0.9275;0.9281;0.85;0.8506;0.85;0.8499;0.982;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 761};RandomForestClassifier(n_estimators=10, random_state=761)
KNeighborsClassifier;0.823;0.8363;0.823;0.823;0.9275;0.9286;0.9275;0.9271;0.85;0.8497;0.85;0.8495;0.9294;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8278;0.8376;0.8278;0.8291;0.8841;0.8969;0.8841;0.8804;0.85;0.8497;0.85;0.8495;0.9398;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8085;0.8226;0.8085;0.8106;0.942;0.942;0.942;0.942;0.85;0.8497;0.85;0.8495;0.9294;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9243;0.9292;0.9243;0.9253;0.9565;0.9565;0.9565;0.9562;0.85;0.8497;0.85;0.8495;0.9813;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 529};RandomForestClassifier(n_estimators=10, random_state=529)
KNeighborsClassifier;0.818;0.8313;0.818;0.8198;0.8696;0.8726;0.8696;0.8708;0.85;0.8497;0.85;0.8495;0.9337;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8601;0.8661;0.8601;0.8593;0.8261;0.8317;0.8261;0.8278;0.85;0.8497;0.85;0.8495;0.8947;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
RandomForestClassifier;0.9356;0.9383;0.9356;0.9357;0.8696;0.8681;0.8696;0.8686;0.8333;0.8419;0.8333;0.8353;0.9819;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 127};RandomForestClassifier(n_estimators=20, random_state=127)
DecisionTreeClassifier;0.8857;0.89;0.8857;0.8851;0.8551;0.8673;0.8551;0.8551;0.8333;0.8355;0.8333;0.8341;0.9145;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
KNeighborsClassifier;0.8115;0.8273;0.8115;0.812;0.8551;0.8746;0.8551;0.858;0.8333;0.8372;0.8333;0.8339;0.9361;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8036;0.8163;0.8036;0.8044;0.8116;0.8167;0.8116;0.8122;0.8333;0.8372;0.8333;0.8339;0.9345;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8245;0.8326;0.8245;0.8255;0.8841;0.8928;0.8841;0.8849;0.8333;0.8372;0.8333;0.8339;0.9335;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8084;0.82;0.8084;0.8098;0.8551;0.862;0.8551;0.8574;0.8333;0.8365;0.8333;0.8339;0.9284;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.9162;0.9203;0.9162;0.9163;0.913;0.9123;0.913;0.9124;0.8333;0.8348;0.8333;0.8337;0.984;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 127};RandomForestClassifier(n_estimators=5, random_state=127)
KNeighborsClassifier;0.8325;0.8446;0.8325;0.8346;0.8986;0.9065;0.8986;0.8994;0.8333;0.8333;0.8333;0.8333;0.931;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8101;0.8238;0.8101;0.8113;0.913;0.9135;0.913;0.913;0.8333;0.8333;0.8333;0.8333;0.9301;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8148;0.8236;0.8148;0.8163;0.8406;0.8453;0.8406;0.8392;0.8333;0.8333;0.8333;0.8333;0.9316;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.818;0.8303;0.818;0.8194;0.8696;0.8769;0.8696;0.8714;0.8333;0.8333;0.8333;0.8333;0.935;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8164;0.8266;0.8164;0.8172;0.8696;0.8849;0.8696;0.8725;0.8333;0.8333;0.8333;0.8333;0.9381;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8116;0.8223;0.8116;0.8126;0.8696;0.8778;0.8696;0.8715;0.8333;0.8333;0.8333;0.8333;0.9266;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8067;0.8196;0.8067;0.8081;0.8406;0.8452;0.8406;0.842;0.8333;0.8333;0.8333;0.8333;0.9321;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7987;0.8124;0.7987;0.7998;0.942;0.9506;0.942;0.9427;0.8333;0.8333;0.8333;0.8333;0.9203;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8196;0.8293;0.8196;0.8205;0.8986;0.8988;0.8986;0.8978;0.8333;0.8333;0.8333;0.8333;0.9356;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8229;0.8333;0.8229;0.8236;0.8116;0.8108;0.8116;0.8109;0.8333;0.8333;0.8333;0.8333;0.9347;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8036;0.8153;0.8036;0.8045;0.9565;0.9594;0.9565;0.9558;0.8333;0.8333;0.8333;0.8333;0.93;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7971;0.8106;0.7971;0.7975;0.9565;0.9571;0.9565;0.9565;0.8333;0.8333;0.8333;0.8333;0.9323;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8116;0.8209;0.8116;0.8122;0.9275;0.9274;0.9275;0.9272;0.8333;0.8331;0.8333;0.8329;0.931;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8744;0.8777;0.8744;0.8733;0.8406;0.8604;0.8406;0.8435;0.8333;0.833;0.8333;0.8328;0.9059;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
SVC;0.7551;0.7777;0.7551;0.7564;0.7971;0.8022;0.7971;0.7987;0.8333;0.8341;0.8333;0.8327;0.9016;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.7601;0.7787;0.7601;0.7616;0.8116;0.811;0.8116;0.8081;0.8333;0.8341;0.8333;0.8327;0.9035;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
DecisionTreeClassifier;0.8855;0.8899;0.8855;0.8856;0.8406;0.843;0.8406;0.8388;0.8333;0.8385;0.8333;0.8282;0.914;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8985;0.9033;0.8985;0.899;0.8406;0.8435;0.8406;0.8418;0.8167;0.8305;0.8167;0.8194;0.924;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
SVC;0.7472;0.7691;0.7472;0.7465;0.8551;0.8639;0.8551;0.8557;0.8167;0.8239;0.8167;0.8189;0.8959;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
DecisionTreeClassifier;0.913;0.9176;0.913;0.9129;0.8986;0.9042;0.8986;0.8995;0.8167;0.8239;0.8167;0.8189;0.9347;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
KNeighborsClassifier;0.8196;0.83;0.8196;0.8204;0.8696;0.874;0.8696;0.8707;0.8167;0.8224;0.8167;0.8173;0.9393;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.736;0.7616;0.736;0.7366;0.8696;0.872;0.8696;0.867;0.8167;0.8181;0.8167;0.817;0.8945;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
SVC;0.752;0.7751;0.752;0.7535;0.8406;0.8554;0.8406;0.839;0.8167;0.8181;0.8167;0.817;0.8999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
KNeighborsClassifier;0.8051;0.8196;0.8051;0.807;0.8116;0.8386;0.8116;0.8122;0.8167;0.818;0.8167;0.817;0.932;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
SVC;0.7504;0.7726;0.7504;0.7499;0.8261;0.8271;0.8261;0.8263;0.8167;0.8181;0.8167;0.817;0.9018;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
DecisionTreeClassifier;0.8856;0.8872;0.8856;0.8853;0.8551;0.8681;0.8551;0.8582;0.8167;0.8181;0.8167;0.817;0.9143;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
KNeighborsClassifier;0.818;0.8312;0.818;0.8197;0.942;0.9506;0.942;0.943;0.8167;0.818;0.8167;0.817;0.9383;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8229;0.8339;0.8229;0.8241;0.7971;0.7997;0.7971;0.7974;0.8167;0.818;0.8167;0.817;0.9434;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8794;0.8862;0.8794;0.8797;0.8986;0.8988;0.8986;0.8978;0.8167;0.8167;0.8167;0.8167;0.9095;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
SVC;0.7376;0.7568;0.7376;0.7372;0.8986;0.9031;0.8986;0.8982;0.8167;0.8203;0.8167;0.8162;0.8943;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
DecisionTreeClassifier;0.9002;0.9056;0.9002;0.9006;0.8116;0.819;0.8116;0.8129;0.8167;0.8163;0.8167;0.8162;0.9252;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
SVC;0.7424;0.7638;0.7424;0.743;0.913;0.9197;0.913;0.9137;0.8167;0.8153;0.8167;0.8147;0.8982;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
DecisionTreeClassifier;0.8823;0.8866;0.8823;0.8823;0.8841;0.8883;0.8841;0.8844;0.8167;0.8171;0.8167;0.8144;0.9116;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
DecisionTreeClassifier;0.9002;0.9038;0.9002;0.8996;0.7826;0.7906;0.7826;0.7847;0.8167;0.8153;0.8167;0.8137;0.9253;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
SVC;0.7488;0.7702;0.7488;0.7503;0.8406;0.8398;0.8406;0.8399;0.8;0.803;0.8;0.8012;0.8999;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
DecisionTreeClassifier;0.8857;0.8898;0.8857;0.8853;0.8841;0.896;0.8841;0.8852;0.8;0.8042;0.8;0.801;0.9142;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
SVC;0.7423;0.7692;0.7423;0.7428;0.8551;0.8732;0.8551;0.857;0.8;0.8042;0.8;0.801;0.8937;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
RandomForestClassifier;0.9164;0.9198;0.9164;0.9166;0.8696;0.8864;0.8696;0.8724;0.8;0.8039;0.8;0.8005;0.9793;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 127};RandomForestClassifier(n_estimators=10, random_state=127)
SVC;0.7391;0.7677;0.7391;0.7395;0.913;0.9163;0.913;0.9135;0.8;0.8014;0.8;0.7998;0.8953;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
SVC;0.7392;0.7626;0.7392;0.7389;0.8551;0.8574;0.8551;0.8538;0.8;0.8014;0.8;0.7998;0.8948;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.7649;0.7826;0.7649;0.766;0.8261;0.8414;0.8261;0.8274;0.8;0.8014;0.8;0.7998;0.8995;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
SVC;0.7488;0.7729;0.7488;0.7505;0.8841;0.8959;0.8841;0.884;0.8;0.8014;0.8;0.7998;0.8973;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.7472;0.7731;0.7472;0.7493;0.7681;0.7813;0.7681;0.7707;0.8;0.8014;0.8;0.7998;0.905;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
SVC;0.7488;0.772;0.7488;0.7485;0.8116;0.8142;0.8116;0.8119;0.8;0.8014;0.8;0.7998;0.9046;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
MLPClassifier;0.7263;0.738;0.7263;0.7257;0.8986;0.9049;0.8986;0.8999;0.8;0.8028;0.8;0.7991;0.9116;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
SVC;0.7487;0.7672;0.7487;0.7498;0.8551;0.8532;0.8551;0.8533;0.8;0.8028;0.8;0.7991;0.9006;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
MLPClassifier;0.7264;0.7362;0.7264;0.7262;0.8696;0.8746;0.8696;0.8672;0.8;0.8028;0.8;0.7991;0.9099;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
MLPClassifier;0.7295;0.7432;0.7295;0.73;0.8261;0.8227;0.8261;0.8233;0.8;0.799;0.8;0.7985;0.909;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
DecisionTreeClassifier;0.9003;0.9045;0.9003;0.8997;0.7971;0.8025;0.7971;0.7987;0.8;0.7989;0.8;0.7985;0.9253;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
MLPClassifier;0.7439;0.754;0.7439;0.7438;0.7826;0.7804;0.7826;0.7813;0.8;0.7968;0.8;0.7971;0.9174;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
MLPClassifier;0.7279;0.7394;0.7279;0.7273;0.8841;0.8861;0.8841;0.8843;0.8;0.7968;0.8;0.7971;0.9114;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
MLPClassifier;0.7295;0.7405;0.7295;0.7291;0.8406;0.8397;0.8406;0.8391;0.8;0.7995;0.8;0.7956;0.9139;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
MLPClassifier;0.7344;0.7453;0.7344;0.734;0.8116;0.8133;0.8116;0.8122;0.8;0.7995;0.8;0.7956;0.9108;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
MLPClassifier;0.7441;0.7586;0.7441;0.7442;0.7681;0.7731;0.7681;0.7571;0.8;0.8033;0.8;0.7934;0.9148;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
SVC;0.7392;0.7624;0.7392;0.7402;0.8696;0.8707;0.8696;0.8698;0.7833;0.7902;0.7833;0.7855;0.8971;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
SVC;0.7505;0.7727;0.7505;0.7528;0.8696;0.8689;0.8696;0.8673;0.7833;0.7902;0.7833;0.7855;0.896;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
DecisionTreeClassifier;0.8647;0.8682;0.8647;0.864;0.8841;0.8942;0.8841;0.8861;0.7833;0.7887;0.7833;0.7851;0.8985;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
SVC;0.744;0.7704;0.744;0.7436;0.8551;0.8568;0.8551;0.8557;0.7833;0.7884;0.7833;0.7848;0.9032;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
DecisionTreeClassifier;0.8746;0.8812;0.8746;0.8742;0.8696;0.8691;0.8696;0.8685;0.7833;0.7855;0.7833;0.7841;0.9058;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
SVC;0.7488;0.7728;0.7488;0.7493;0.8696;0.8709;0.8696;0.8694;0.7833;0.7872;0.7833;0.7839;0.9039;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
MLPClassifier;0.7279;0.7424;0.7279;0.7291;0.8696;0.8713;0.8696;0.8702;0.7833;0.7872;0.7833;0.7839;0.9054;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
SVC;0.752;0.7715;0.752;0.753;0.7971;0.7987;0.7971;0.7977;0.7833;0.7872;0.7833;0.7839;0.9;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
SVC;0.7391;0.7627;0.7391;0.7375;0.8406;0.84;0.8406;0.836;0.7833;0.7872;0.7833;0.7839;0.8934;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
SVC;0.7441;0.7714;0.7441;0.7445;0.8406;0.8398;0.8406;0.8399;0.7833;0.7872;0.7833;0.7839;0.8996;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
SVC;0.7455;0.7722;0.7455;0.7454;0.913;0.9149;0.913;0.9129;0.7833;0.7872;0.7833;0.7839;0.8993;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
SVC;0.7488;0.7711;0.7488;0.7509;0.8406;0.8501;0.8406;0.8424;0.7833;0.7905;0.7833;0.7838;0.8994;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
DecisionTreeClassifier;0.9114;0.9148;0.9114;0.9113;0.913;0.9209;0.913;0.913;0.7833;0.7839;0.7833;0.7833;0.9337;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
MLPClassifier;0.7456;0.7548;0.7456;0.7459;0.8696;0.8713;0.8696;0.8701;0.7833;0.7839;0.7833;0.7833;0.9085;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
DecisionTreeClassifier;0.876;0.8836;0.876;0.8761;0.913;0.9142;0.913;0.9133;0.7833;0.7839;0.7833;0.7833;0.9072;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
DecisionTreeClassifier;0.8937;0.8967;0.8937;0.8935;0.913;0.9163;0.913;0.9135;0.7833;0.7833;0.7833;0.7833;0.9205;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8615;0.8634;0.8615;0.8609;0.8696;0.8762;0.8696;0.8711;0.7833;0.7833;0.7833;0.7833;0.8961;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
DecisionTreeClassifier;0.8921;0.8977;0.8921;0.8922;0.942;0.942;0.942;0.942;0.7833;0.7839;0.7833;0.7827;0.919;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
MLPClassifier;0.7422;0.7542;0.7422;0.7407;0.7391;0.7369;0.7391;0.7378;0.7833;0.7805;0.7833;0.7816;0.9185;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
MLPClassifier;0.7326;0.7464;0.7326;0.7323;0.8551;0.861;0.8551;0.8563;0.7833;0.7823;0.7833;0.7806;0.9074;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
MLPClassifier;0.7311;0.7413;0.7311;0.73;0.8261;0.8426;0.8261;0.828;0.7833;0.7823;0.7833;0.7806;0.9178;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
MLPClassifier;0.7391;0.7464;0.7391;0.7392;0.8261;0.8391;0.8261;0.8294;0.7833;0.7823;0.7833;0.7806;0.9165;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
MLPClassifier;0.7392;0.7535;0.7392;0.7389;0.8551;0.8627;0.8551;0.8542;0.7833;0.7823;0.7833;0.7806;0.9152;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
MLPClassifier;0.7359;0.7469;0.7359;0.7348;0.8116;0.8095;0.8116;0.8103;0.7833;0.7823;0.7833;0.7806;0.9125;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
MLPClassifier;0.7295;0.7368;0.7295;0.729;0.8986;0.9141;0.8986;0.8991;0.7833;0.7823;0.7833;0.7806;0.9145;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
MLPClassifier;0.7279;0.7413;0.7279;0.7266;0.8406;0.8593;0.8406;0.8445;0.7833;0.7823;0.7833;0.7806;0.9156;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
MLPClassifier;0.7248;0.7354;0.7248;0.7253;0.8551;0.8629;0.8551;0.8565;0.7833;0.7823;0.7833;0.7806;0.9093;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
MLPClassifier;0.7377;0.7455;0.7377;0.7357;0.8116;0.8163;0.8116;0.8122;0.7833;0.784;0.7833;0.7772;0.9145;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 964, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=964)
LogisticRegression;0.6876;0.698;0.6876;0.6866;0.6522;0.6751;0.6522;0.651;0.7667;0.79;0.7667;0.769;0.8572;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
SVC;0.7488;0.7713;0.7488;0.7485;0.7971;0.8024;0.7971;0.7953;0.7667;0.7739;0.7667;0.7678;0.903;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
DecisionTreeClassifier;0.8824;0.8863;0.8824;0.8817;0.8261;0.8263;0.8261;0.8238;0.7667;0.7696;0.7667;0.7678;0.9121;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
MLPClassifier;0.7424;0.7537;0.7424;0.7411;0.7826;0.7824;0.7826;0.7771;0.7667;0.7698;0.7667;0.7672;0.9164;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
DecisionTreeClassifier;0.8534;0.8608;0.8534;0.8538;0.8696;0.8714;0.8696;0.8694;0.7667;0.7679;0.7667;0.767;0.8901;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
DecisionTreeClassifier;0.8841;0.8866;0.8841;0.8831;0.8551;0.8542;0.8551;0.8536;0.7667;0.768;0.7667;0.767;0.9131;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
DecisionTreeClassifier;0.8663;0.8706;0.8663;0.8666;0.8841;0.8839;0.8841;0.8837;0.7667;0.7687;0.7667;0.7663;0.8998;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
DecisionTreeClassifier;0.8841;0.889;0.8841;0.884;0.8551;0.8594;0.8551;0.8565;0.7667;0.7687;0.7667;0.7663;0.913;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
SVC;0.7583;0.7786;0.7583;0.7593;0.7971;0.8071;0.7971;0.7967;0.7667;0.7663;0.7667;0.7656;0.8992;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 950};SVC(C=10, probability=True, random_state=950)
DecisionTreeClassifier;0.905;0.9092;0.905;0.9049;0.8986;0.9042;0.8986;0.8995;0.7667;0.7663;0.7667;0.7656;0.9289;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)
LogisticRegression;0.678;0.6922;0.678;0.6774;0.7101;0.7239;0.7101;0.7111;0.7667;0.7759;0.7667;0.7655;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6956;0.7074;0.6956;0.6954;0.7246;0.7326;0.7246;0.7242;0.7667;0.7759;0.7667;0.7655;0.8512;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
DecisionTreeClassifier;0.8808;0.8846;0.8808;0.8805;0.8551;0.8617;0.8551;0.8563;0.7667;0.7646;0.7667;0.7653;0.9105;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
MLPClassifier;0.7134;0.7235;0.7134;0.7116;0.8986;0.8997;0.8986;0.8988;0.7667;0.7667;0.7667;0.7644;0.9069;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
MLPClassifier;0.7311;0.743;0.7311;0.7307;0.8551;0.8744;0.8551;0.8568;0.7667;0.7667;0.7667;0.7644;0.9115;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
MLPClassifier;0.731;0.7416;0.731;0.7295;0.8696;0.871;0.8696;0.8694;0.7667;0.7638;0.7667;0.7631;0.9116;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
MLPClassifier;0.7249;0.7286;0.7249;0.7246;0.8261;0.8344;0.8261;0.8283;0.7667;0.7665;0.7667;0.7624;0.9089;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 393, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=393)
MLPClassifier;0.744;0.7517;0.744;0.7449;0.8406;0.8407;0.8406;0.8373;0.7667;0.7664;0.7667;0.7609;0.9101;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
MLPClassifier;0.7214;0.7291;0.7214;0.7207;0.7681;0.7672;0.7681;0.7674;0.7667;0.7664;0.7667;0.7609;0.9143;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
LogisticRegression;0.6859;0.6987;0.6859;0.6825;0.7246;0.7391;0.7246;0.7219;0.75;0.7797;0.75;0.7526;0.8496;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
DecisionTreeClassifier;0.8646;0.8696;0.8646;0.8645;0.8551;0.8642;0.8551;0.8534;0.75;0.7593;0.75;0.7512;0.8984;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 190};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=190)
MLPClassifier;0.7278;0.7404;0.7278;0.7278;0.8261;0.8317;0.8261;0.8269;0.75;0.7565;0.75;0.7509;0.9105;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
LogisticRegression;0.7068;0.7222;0.7068;0.7059;0.5942;0.5965;0.5942;0.5922;0.75;0.7675;0.75;0.7508;0.8585;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
LogisticRegression;0.6891;0.7013;0.6891;0.69;0.6667;0.6584;0.6667;0.6583;0.75;0.7675;0.75;0.7508;0.8488;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
SVC;0.7407;0.7659;0.7407;0.741;0.8406;0.8595;0.8406;0.8402;0.75;0.7611;0.75;0.7502;0.897;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 44};SVC(C=10, probability=True, random_state=44)
MLPClassifier;0.7294;0.7346;0.7294;0.7285;0.7971;0.8017;0.7971;0.7961;0.75;0.752;0.75;0.7497;0.9115;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
LogisticRegression;0.6876;0.7023;0.6876;0.6868;0.7246;0.7248;0.7246;0.7241;0.75;0.763;0.75;0.7496;0.8498;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6859;0.7022;0.6859;0.6851;0.7246;0.723;0.7246;0.7236;0.75;0.763;0.75;0.7496;0.8555;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
LogisticRegression;0.6715;0.6836;0.6715;0.6691;0.7681;0.7788;0.7681;0.7712;0.75;0.7546;0.75;0.7481;0.8476;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
LogisticRegression;0.678;0.6904;0.678;0.6771;0.7536;0.7568;0.7536;0.749;0.75;0.7546;0.75;0.7481;0.8469;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
MLPClassifier;0.7246;0.7365;0.7246;0.7247;0.7971;0.8097;0.7971;0.7956;0.75;0.75;0.75;0.7464;0.9151;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 866, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=866)
LogisticRegression;0.6828;0.6947;0.6828;0.6803;0.7246;0.7333;0.7246;0.7251;0.75;0.752;0.75;0.7456;0.8495;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
LogisticRegression;0.7021;0.7185;0.7021;0.7019;0.5942;0.6067;0.5942;0.594;0.7333;0.7486;0.7333;0.7354;0.8609;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
DecisionTreeClassifier;0.8743;0.8782;0.8743;0.8737;0.8261;0.8363;0.8261;0.8279;0.7333;0.7381;0.7333;0.7347;0.9057;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 210};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=210)
SVC;0.7423;0.7657;0.7423;0.7442;0.8116;0.8165;0.8116;0.8124;0.7333;0.7487;0.7333;0.7341;0.8958;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 355};SVC(C=10, probability=True, random_state=355)
LogisticRegression;0.6956;0.7037;0.6956;0.6945;0.6812;0.6905;0.6812;0.6812;0.7333;0.7511;0.7333;0.7333;0.8518;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
LogisticRegression;0.6812;0.6953;0.6812;0.6806;0.7536;0.7765;0.7536;0.7549;0.7333;0.7511;0.7333;0.7333;0.8461;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
LogisticRegression;0.7038;0.7129;0.7038;0.7033;0.6377;0.6484;0.6377;0.6246;0.7333;0.7511;0.7333;0.7333;0.8552;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
LogisticRegression;0.6893;0.7033;0.6893;0.6891;0.6957;0.6983;0.6957;0.6953;0.7333;0.7511;0.7333;0.7333;0.8488;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
LogisticRegression;0.6988;0.7094;0.6988;0.6965;0.6377;0.6616;0.6377;0.6402;0.7333;0.7511;0.7333;0.7333;0.8551;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6875;0.6972;0.6875;0.6869;0.7246;0.746;0.7246;0.7246;0.7333;0.7511;0.7333;0.7333;0.8482;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6778;0.6929;0.6778;0.677;0.7536;0.7572;0.7536;0.7468;0.7333;0.7511;0.7333;0.7333;0.8466;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
LogisticRegression;0.6811;0.6907;0.6811;0.6805;0.7971;0.8083;0.7971;0.799;0.7333;0.7511;0.7333;0.7333;0.8502;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6924;0.7063;0.6924;0.6916;0.6667;0.6836;0.6667;0.6556;0.7333;0.7511;0.7333;0.7333;0.8539;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6909;0.707;0.6909;0.6872;0.6667;0.6699;0.6667;0.6617;0.7333;0.7511;0.7333;0.7333;0.8594;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.7004;0.715;0.7004;0.6983;0.6087;0.6171;0.6087;0.6095;0.7333;0.7511;0.7333;0.7333;0.8561;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
LogisticRegression;0.6973;0.7095;0.6973;0.6952;0.6667;0.6678;0.6667;0.6656;0.7333;0.7511;0.7333;0.7333;0.8554;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6972;0.7134;0.6972;0.6967;0.7246;0.7328;0.7246;0.7258;0.7333;0.747;0.7333;0.7316;0.8551;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
LogisticRegression;0.681;0.6943;0.681;0.6784;0.6667;0.6771;0.6667;0.665;0.7333;0.7378;0.7333;0.7299;0.852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
LogisticRegression;0.7068;0.7179;0.7068;0.7053;0.5797;0.6;0.5797;0.577;0.7167;0.7349;0.7167;0.7156;0.858;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.7166;0.7295;0.7166;0.7166;0.5942;0.6031;0.5942;0.5928;0.7167;0.7349;0.7167;0.7156;0.8564;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 613, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=613)"
LogisticRegression;0.6876;0.7051;0.6876;0.6868;0.7971;0.8006;0.7971;0.7965;0.7167;0.7349;0.7167;0.7156;0.8527;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 666, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=666)"
LogisticRegression;0.6826;0.6932;0.6826;0.6816;0.6812;0.7352;0.6812;0.6872;0.7167;0.7349;0.7167;0.7156;0.8497;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 828, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=828)"
