Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
KNeighborsClassifier,0.8882,0.8904,0.8882,0.8882,0.8827,0.8863,0.8827,0.8835,0.85,0.8652,0.85,0.8483,0.9657,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
RandomForestClassifier,0.898,0.901,0.898,0.8986,0.8997,0.9011,0.8997,0.9,0.85,0.8528,0.85,0.8482,0.9664,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 594}","RandomForestClassifier(n_estimators=10, random_state=594)"
DecisionTreeClassifier,0.8537,0.8585,0.8537,0.8549,0.8639,0.8697,0.8639,0.8652,0.8167,0.8299,0.8167,0.8165,0.9553,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 652}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=652)"
RandomForestClassifier,0.8958,0.8974,0.8958,0.896,0.9048,0.9057,0.9048,0.9049,0.8,0.8288,0.8,0.8034,0.9707,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 851}","RandomForestClassifier(n_estimators=20, random_state=851)"
DecisionTreeClassifier,0.8652,0.8701,0.8652,0.8665,0.8639,0.8681,0.8639,0.8653,0.8,0.8011,0.8,0.7963,0.9595,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 588}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=588)"
KNeighborsClassifier,0.8822,0.8855,0.8822,0.8828,0.9048,0.9082,0.9048,0.9054,0.8,0.8002,0.8,0.7955,0.9693,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
SVC,0.7883,0.7878,0.7883,0.7875,0.7857,0.7851,0.7857,0.7853,0.7833,0.7948,0.7833,0.7816,0.8737,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 931}","SVC(C=10, kernel='linear', probability=True, random_state=931)"
LogisticRegression,0.7696,0.7697,0.7696,0.7677,0.7857,0.788,0.7857,0.7852,0.7833,0.7871,0.7833,0.7807,0.917,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 766, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=766)"
RandomForestClassifier,0.8933,0.8954,0.8933,0.8934,0.915,0.9151,0.915,0.9148,0.7667,0.7874,0.7667,0.7688,0.9709,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 917}","RandomForestClassifier(n_estimators=20, random_state=917)"
KNeighborsClassifier,0.8903,0.8925,0.8903,0.891,0.8844,0.887,0.8844,0.8852,0.7667,0.7688,0.7667,0.7656,0.9666,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')"
DecisionTreeClassifier,0.8614,0.8658,0.8614,0.8615,0.869,0.8717,0.869,0.8697,0.7333,0.776,0.7333,0.7382,0.9599,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 593}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=593)"
SVC,0.7836,0.7834,0.7836,0.7822,0.7636,0.7646,0.7636,0.7637,0.7333,0.736,0.7333,0.7338,0.8749,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 660}","SVC(C=1, kernel='linear', probability=True, random_state=660)"
LogisticRegression,0.7747,0.7755,0.7747,0.7739,0.7653,0.7664,0.7653,0.7657,0.7333,0.748,0.7333,0.7327,0.9166,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 517, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=517)"
MLPClassifier,0.8074,0.813,0.8074,0.8056,0.8095,0.8103,0.8095,0.8089,0.7333,0.74,0.7333,0.7287,0.9343,smote,1000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 380, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=380)"
SVC,0.793,0.7936,0.793,0.792,0.8367,0.8357,0.8367,0.8346,0.7167,0.7083,0.7167,0.706,0.8784,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 782}","SVC(C=1, kernel='linear', probability=True, random_state=782)"
MLPClassifier,0.8057,0.816,0.8057,0.8033,0.8095,0.8135,0.8095,0.809,0.7,0.6978,0.7,0.6949,0.9394,smote,1000,StandardScaler,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 55, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=55)"
LogisticRegression,0.7781,0.7814,0.7781,0.7786,0.7891,0.7904,0.7891,0.7896,0.7,0.6944,0.7,0.6908,0.92,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 654, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=654)"
MLPClassifier,0.767,0.7742,0.767,0.7645,0.7789,0.7802,0.7789,0.7794,0.6667,0.6583,0.6667,0.6574,0.9191,smote,1000,no_scaled,"['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 154, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=154)"
