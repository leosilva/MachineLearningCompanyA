Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8426;0.8496;0.8426;0.842;0.8333;0.8394;0.8333;0.8309;0.85;0.8591;0.85;0.8495;0.9494;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8464;0.8563;0.8464;0.8454;0.8333;0.8333;0.8333;0.8333;0.85;0.8597;0.85;0.849;0.9659;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
KNeighborsClassifier;0.8364;0.8391;0.8364;0.8359;0.8681;0.8734;0.8681;0.8686;0.85;0.8518;0.85;0.8483;0.9407;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8404;0.8442;0.8404;0.8398;0.8264;0.8271;0.8264;0.8249;0.8333;0.8379;0.8333;0.8333;0.948;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8457;0.8513;0.8457;0.8445;0.8333;0.834;0.8333;0.8335;0.8333;0.8374;0.8333;0.8328;0.9461;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8388;0.8456;0.8388;0.8376;0.8889;0.8915;0.8889;0.8889;0.8333;0.8374;0.8333;0.8328;0.9438;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8465;0.8499;0.8465;0.8466;0.8472;0.8538;0.8472;0.8464;0.8333;0.8383;0.8333;0.8327;0.9445;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8465;0.8487;0.8465;0.8462;0.875;0.8846;0.875;0.8729;0.8333;0.8468;0.8333;0.8321;0.9455;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8541;0.8573;0.8541;0.8537;0.8542;0.8623;0.8542;0.8537;0.8333;0.8417;0.8333;0.832;0.9516;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
MLPClassifier;0.8388;0.8479;0.8388;0.8374;0.8889;0.8976;0.8889;0.8894;0.8333;0.8387;0.8333;0.8317;0.9605;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8394;0.8467;0.8394;0.8388;0.9444;0.9449;0.9444;0.9442;0.8333;0.8387;0.8333;0.8317;0.9587;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.8364;0.8436;0.8364;0.8353;0.8819;0.8846;0.8819;0.8819;0.8333;0.8387;0.8333;0.8317;0.9601;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.8419;0.8497;0.8419;0.841;0.9097;0.9111;0.9097;0.909;0.8333;0.8387;0.8333;0.8317;0.9593;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.8394;0.8474;0.8394;0.8386;0.8472;0.8555;0.8472;0.8471;0.8333;0.8387;0.8333;0.8317;0.9626;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.8457;0.852;0.8457;0.8449;0.9167;0.9187;0.9167;0.9163;0.8333;0.8387;0.8333;0.8317;0.9612;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8387;0.846;0.8387;0.8374;0.8542;0.8668;0.8542;0.8551;0.8333;0.8387;0.8333;0.8317;0.9619;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.8403;0.8469;0.8403;0.8396;0.8611;0.8627;0.8611;0.8609;0.8333;0.8387;0.8333;0.8317;0.9616;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8465;0.8532;0.8465;0.8455;0.8681;0.8685;0.8681;0.8681;0.8333;0.8361;0.8333;0.8315;0.9633;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
KNeighborsClassifier;0.8588;0.8624;0.8588;0.8586;0.8333;0.8334;0.8333;0.8322;0.8333;0.844;0.8333;0.8311;0.9509;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8503;0.8529;0.8503;0.8494;0.8472;0.8498;0.8472;0.8478;0.8333;0.844;0.8333;0.8311;0.9433;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8526;0.8558;0.8526;0.8524;0.8125;0.8334;0.8125;0.8141;0.8333;0.8371;0.8333;0.8307;0.9492;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.8102;0.8326;0.8102;0.8092;0.8472;0.8549;0.8472;0.8455;0.8167;0.8167;0.8167;0.8167;0.9098;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8002;0.8272;0.8002;0.7993;0.8819;0.8853;0.8819;0.8803;0.8167;0.8172;0.8167;0.8166;0.9089;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
SVC;0.8041;0.8273;0.8041;0.8028;0.9028;0.9062;0.9028;0.9027;0.8167;0.8215;0.8167;0.8165;0.9076;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.804;0.8301;0.804;0.8022;0.8611;0.8617;0.8611;0.861;0.8167;0.8215;0.8167;0.8165;0.9155;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
KNeighborsClassifier;0.8426;0.8461;0.8426;0.842;0.8194;0.8189;0.8194;0.819;0.8167;0.8299;0.8167;0.8165;0.9487;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8403;0.8457;0.8403;0.8394;0.8056;0.815;0.8056;0.8062;0.8167;0.8299;0.8167;0.8165;0.9406;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8372;0.8429;0.8372;0.8364;0.8958;0.9067;0.8958;0.8956;0.8167;0.8299;0.8167;0.8165;0.942;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.8079;0.8321;0.8079;0.8055;0.8611;0.864;0.8611;0.8606;0.8167;0.8215;0.8167;0.8165;0.9119;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
KNeighborsClassifier;0.845;0.85;0.845;0.8443;0.875;0.8823;0.875;0.8742;0.8167;0.8299;0.8167;0.8165;0.9427;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8442;0.8481;0.8442;0.8426;0.9236;0.925;0.9236;0.9232;0.8167;0.8228;0.8167;0.8156;0.9375;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8433;0.8479;0.8433;0.843;0.8681;0.8677;0.8681;0.8673;0.8167;0.8238;0.8167;0.8155;0.9453;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8503;0.8534;0.8503;0.8496;0.8611;0.8624;0.8611;0.8613;0.8167;0.8238;0.8167;0.8155;0.9481;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8542;0.8596;0.8542;0.8533;0.8611;0.8668;0.8611;0.8611;0.8167;0.8238;0.8167;0.8155;0.9447;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8364;0.8441;0.8364;0.8346;0.8889;0.8897;0.8889;0.8885;0.8167;0.821;0.8167;0.814;0.9626;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.8448;0.8532;0.8448;0.8439;0.8472;0.8481;0.8472;0.8472;0.8167;0.821;0.8167;0.814;0.9646;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8572;0.8624;0.8572;0.8571;0.8264;0.8283;0.8264;0.8249;0.8167;0.821;0.8167;0.814;0.9666;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.845;0.8538;0.845;0.8436;0.8333;0.8348;0.8333;0.8332;0.8167;0.8222;0.8167;0.8138;0.9649;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.8495;0.8577;0.8495;0.849;0.8542;0.8563;0.8542;0.8545;0.8167;0.8222;0.8167;0.8138;0.9616;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
MLPClassifier;0.8503;0.8553;0.8503;0.8499;0.875;0.8756;0.875;0.8749;0.8167;0.8222;0.8167;0.8138;0.965;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.8542;0.8578;0.8542;0.8533;0.8403;0.8404;0.8403;0.8399;0.8167;0.8222;0.8167;0.8138;0.9626;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8349;0.844;0.8349;0.8335;0.9306;0.9311;0.9306;0.9308;0.8167;0.8222;0.8167;0.8138;0.9604;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.8434;0.8536;0.8434;0.8421;0.8681;0.8681;0.8681;0.8681;0.8167;0.8222;0.8167;0.8138;0.9645;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.841;0.8511;0.841;0.84;0.875;0.8764;0.875;0.8751;0.8167;0.8222;0.8167;0.8138;0.9618;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8426;0.8497;0.8426;0.8422;0.8958;0.8986;0.8958;0.8955;0.8167;0.8222;0.8167;0.8138;0.9618;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.8525;0.8578;0.8525;0.8524;0.8333;0.8351;0.8333;0.8338;0.8167;0.8222;0.8167;0.8138;0.9626;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8465;0.8567;0.8465;0.8458;0.8194;0.8271;0.8194;0.8197;0.8167;0.8222;0.8167;0.8138;0.9621;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.8411;0.8503;0.8411;0.8395;0.8958;0.8966;0.8958;0.896;0.8167;0.8222;0.8167;0.8138;0.9604;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
KNeighborsClassifier;0.8372;0.8427;0.8372;0.8353;0.8889;0.8921;0.8889;0.8892;0.8167;0.8313;0.8167;0.813;0.9422;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.8132;0.8353;0.8132;0.812;0.8403;0.8442;0.8403;0.8388;0.8;0.8102;0.8;0.8014;0.9102;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8117;0.8342;0.8117;0.8104;0.8264;0.841;0.8264;0.825;0.8;0.8013;0.8;0.8003;0.9119;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.8101;0.8324;0.8101;0.8088;0.8819;0.8902;0.8819;0.8823;0.8;0.8016;0.8;0.7997;0.91;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8101;0.8334;0.8101;0.8094;0.8194;0.8221;0.8194;0.8166;0.8;0.802;0.8;0.7997;0.9126;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.8079;0.8311;0.8079;0.8058;0.875;0.8769;0.875;0.8746;0.8;0.8016;0.8;0.7997;0.9121;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.8095;0.8316;0.8095;0.808;0.8819;0.8845;0.8819;0.8819;0.8;0.7997;0.8;0.7995;0.9099;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
SVC;0.8179;0.8388;0.8179;0.8167;0.8611;0.8694;0.8611;0.86;0.8;0.7997;0.8;0.7995;0.9118;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8087;0.8304;0.8087;0.8077;0.8542;0.8719;0.8542;0.8526;0.8;0.7997;0.8;0.7995;0.9076;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
SVC;0.8133;0.8374;0.8133;0.8116;0.8333;0.8333;0.8333;0.8316;0.8;0.7997;0.8;0.7995;0.9174;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8109;0.8349;0.8109;0.8093;0.8333;0.835;0.8333;0.8316;0.8;0.7997;0.8;0.7995;0.909;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8048;0.8297;0.8048;0.8039;0.8819;0.8851;0.8819;0.8815;0.8;0.7997;0.8;0.7995;0.9066;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
SVC;0.8009;0.826;0.8009;0.7991;0.8611;0.869;0.8611;0.8607;0.8;0.7997;0.8;0.7995;0.9113;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8102;0.8334;0.8102;0.8085;0.875;0.8776;0.875;0.8746;0.8;0.7997;0.8;0.7995;0.9112;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
SVC;0.8133;0.8358;0.8133;0.8115;0.8264;0.8324;0.8264;0.8258;0.8;0.7997;0.8;0.7995;0.912;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.8087;0.8319;0.8087;0.8072;0.875;0.8823;0.875;0.8742;0.8;0.7997;0.8;0.7995;0.9091;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.8087;0.8304;0.8087;0.8073;0.8611;0.8634;0.8611;0.861;0.8;0.7997;0.8;0.7995;0.9077;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.811;0.8336;0.811;0.8093;0.8333;0.8382;0.8333;0.8323;0.8;0.7997;0.8;0.7995;0.9102;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
KNeighborsClassifier;0.8502;0.853;0.8502;0.85;0.8264;0.8295;0.8264;0.8258;0.8;0.8179;0.8;0.7991;0.9434;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8441;0.8483;0.8441;0.8436;0.8681;0.8724;0.8681;0.8674;0.8;0.8068;0.8;0.7989;0.9449;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8441;0.853;0.8441;0.8432;0.8611;0.8611;0.8611;0.861;0.8;0.8065;0.8;0.7985;0.9613;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 597, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=597)
DecisionTreeClassifier;0.8573;0.8593;0.8573;0.8572;0.8681;0.873;0.8681;0.8682;0.8;0.8065;0.8;0.7985;0.9431;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
MLPClassifier;0.8434;0.8511;0.8434;0.8425;0.8889;0.8889;0.8889;0.8889;0.8;0.802;0.8;0.798;0.9609;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
MLPClassifier;0.8457;0.8532;0.8457;0.8445;0.8611;0.8627;0.8611;0.8608;0.8;0.802;0.8;0.798;0.9637;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
MLPClassifier;0.845;0.8533;0.845;0.8443;0.875;0.8821;0.875;0.875;0.8;0.802;0.8;0.798;0.9605;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
RandomForestClassifier;0.8658;0.8696;0.8658;0.8653;0.875;0.8753;0.875;0.875;0.8;0.8194;0.8;0.798;0.9653;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 655};RandomForestClassifier(n_estimators=10, random_state=655)
RandomForestClassifier;0.8711;0.8734;0.8711;0.8711;0.8403;0.8439;0.8403;0.8412;0.8;0.8168;0.8;0.7975;0.9634;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 890};RandomForestClassifier(n_estimators=20, random_state=890)
MLPClassifier;0.8465;0.8557;0.8465;0.8455;0.8333;0.8339;0.8333;0.8332;0.8;0.8082;0.8;0.7972;0.9663;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 362, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=362)
KNeighborsClassifier;0.8542;0.8595;0.8542;0.8536;0.8194;0.8204;0.8194;0.8197;0.8;0.8158;0.8;0.7967;0.9494;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8666;0.8692;0.8666;0.8664;0.8472;0.8549;0.8472;0.8483;0.8;0.8089;0.8;0.7958;0.9641;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8689;0.8718;0.8689;0.8684;0.8542;0.8551;0.8542;0.8542;0.8;0.8089;0.8;0.7958;0.9657;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8658;0.8678;0.8658;0.8657;0.8542;0.8569;0.8542;0.8546;0.8;0.8186;0.8;0.7937;0.9655;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
RandomForestClassifier;0.8603;0.8629;0.8603;0.8601;0.9028;0.9083;0.9028;0.9036;0.8;0.8186;0.8;0.7937;0.9633;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
SVC;0.8125;0.8351;0.8125;0.8103;0.8264;0.8304;0.8264;0.8268;0.7833;0.7986;0.7833;0.7853;0.9131;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
SVC;0.8079;0.8319;0.8079;0.8058;0.8681;0.8687;0.8681;0.8683;0.7833;0.7934;0.7833;0.7843;0.9069;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.8133;0.837;0.8133;0.8116;0.7917;0.8033;0.7917;0.79;0.7833;0.7917;0.7833;0.7839;0.9123;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
KNeighborsClassifier;0.858;0.8623;0.858;0.8574;0.7917;0.8033;0.7917;0.79;0.7833;0.7847;0.7833;0.7837;0.9467;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
SVC;0.8093;0.8338;0.8093;0.8082;0.8403;0.8437;0.8403;0.8385;0.7833;0.7833;0.7833;0.7833;0.9089;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
KNeighborsClassifier;0.8433;0.8485;0.8433;0.8432;0.8264;0.83;0.8264;0.826;0.7833;0.7913;0.7833;0.7833;0.9455;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8094;0.8322;0.8094;0.8084;0.8333;0.8336;0.8333;0.8323;0.7833;0.7838;0.7833;0.7832;0.9135;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
KNeighborsClassifier;0.858;0.8595;0.858;0.8576;0.8333;0.8346;0.8333;0.8334;0.7833;0.7838;0.7833;0.7832;0.9469;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
KNeighborsClassifier;0.8326;0.8398;0.8326;0.8315;0.875;0.8779;0.875;0.8737;0.7833;0.7863;0.7833;0.7827;0.9441;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8619;0.8654;0.8619;0.8615;0.8889;0.8898;0.8889;0.8889;0.7833;0.7876;0.7833;0.7825;0.948;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
DecisionTreeClassifier;0.8665;0.8688;0.8665;0.8661;0.8194;0.8195;0.8194;0.8194;0.7833;0.7861;0.7833;0.7823;0.9474;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8542;0.8569;0.8542;0.8536;0.8819;0.883;0.8819;0.8822;0.7833;0.7948;0.7833;0.7823;0.9444;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
MLPClassifier;0.8418;0.8515;0.8418;0.8403;0.875;0.8753;0.875;0.8747;0.7833;0.7877;0.7833;0.7814;0.9599;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 856, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=856)
RandomForestClassifier;0.8673;0.8715;0.8673;0.8673;0.875;0.8764;0.875;0.8752;0.7833;0.7922;0.7833;0.7807;0.9647;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
DecisionTreeClassifier;0.8611;0.8646;0.8611;0.8604;0.8681;0.8717;0.8681;0.8677;0.7833;0.7929;0.7833;0.7805;0.9443;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
RandomForestClassifier;0.8634;0.8665;0.8634;0.8629;0.8264;0.8321;0.8264;0.8273;0.7833;0.7929;0.7833;0.7805;0.9669;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
RandomForestClassifier;0.8604;0.8636;0.8604;0.8603;0.8611;0.8621;0.8611;0.8608;0.7833;0.7929;0.7833;0.7805;0.9656;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 890};RandomForestClassifier(n_estimators=20, random_state=890)
RandomForestClassifier;0.8603;0.8653;0.8603;0.8602;0.8889;0.8887;0.8889;0.8886;0.7833;0.7929;0.7833;0.7805;0.9648;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 890};RandomForestClassifier(n_estimators=20, random_state=890)
RandomForestClassifier;0.8581;0.8622;0.8581;0.8584;0.8542;0.8573;0.8542;0.8542;0.7833;0.7929;0.7833;0.7805;0.9655;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 890};RandomForestClassifier(n_estimators=20, random_state=890)
RandomForestClassifier;0.8758;0.8787;0.8758;0.8757;0.7847;0.7858;0.7847;0.7839;0.7833;0.7857;0.7833;0.78;0.9672;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 274};RandomForestClassifier(n_estimators=10, random_state=274)
RandomForestClassifier;0.8695;0.8726;0.8695;0.8693;0.8542;0.8616;0.8542;0.8544;0.7833;0.7956;0.7833;0.7794;0.9673;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 890};RandomForestClassifier(n_estimators=5, random_state=890)
RandomForestClassifier;0.8711;0.8755;0.8711;0.8709;0.8681;0.871;0.8681;0.8682;0.7833;0.7956;0.7833;0.7794;0.9675;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 274};RandomForestClassifier(n_estimators=10, random_state=274)
RandomForestClassifier;0.8634;0.8672;0.8634;0.8632;0.8333;0.8378;0.8333;0.8342;0.7833;0.8041;0.7833;0.7787;0.968;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8596;0.8617;0.8596;0.8596;0.9097;0.9133;0.9097;0.9101;0.7833;0.8041;0.7833;0.7787;0.9627;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 890};RandomForestClassifier(n_estimators=20, random_state=890)
RandomForestClassifier;0.8642;0.8678;0.8642;0.8645;0.875;0.875;0.875;0.8749;0.7833;0.8053;0.7833;0.7779;0.9657;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 655};RandomForestClassifier(n_estimators=5, random_state=655)
RandomForestClassifier;0.8673;0.8713;0.8673;0.8667;0.8542;0.8566;0.8542;0.8543;0.7833;0.793;0.7833;0.7779;0.9682;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 655};RandomForestClassifier(n_estimators=5, random_state=655)
RandomForestClassifier;0.8626;0.865;0.8626;0.8624;0.875;0.8827;0.875;0.8751;0.7833;0.793;0.7833;0.7769;0.9616;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 890};RandomForestClassifier(n_estimators=10, random_state=890)
RandomForestClassifier;0.8688;0.8723;0.8688;0.8688;0.8819;0.8887;0.8819;0.8824;0.7833;0.793;0.7833;0.7769;0.9644;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
RandomForestClassifier;0.8573;0.8592;0.8573;0.8574;0.875;0.8751;0.875;0.875;0.7833;0.793;0.7833;0.7769;0.9667;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
RandomForestClassifier;0.8634;0.8674;0.8634;0.8635;0.8958;0.8962;0.8958;0.8956;0.7833;0.793;0.7833;0.7769;0.9646;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 890};RandomForestClassifier(n_estimators=10, random_state=890)
SVC;0.8094;0.8332;0.8094;0.8075;0.8819;0.8843;0.8819;0.8824;0.7667;0.7815;0.7667;0.7675;0.9117;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 467};SVC(C=10, probability=True, random_state=467)
SVC;0.8132;0.8354;0.8132;0.8115;0.8681;0.8694;0.8681;0.8682;0.7667;0.7671;0.7667;0.7666;0.9075;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 227};SVC(C=10, probability=True, random_state=227)
KNeighborsClassifier;0.8487;0.8529;0.8487;0.8484;0.8264;0.832;0.8264;0.8264;0.7667;0.7731;0.7667;0.7663;0.9448;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8503;0.8529;0.8503;0.8499;0.8472;0.8482;0.8472;0.8475;0.7667;0.7717;0.7667;0.7653;0.9411;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8634;0.8655;0.8634;0.8631;0.8681;0.872;0.8681;0.868;0.7667;0.7712;0.7667;0.7645;0.9427;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
DecisionTreeClassifier;0.8704;0.8735;0.8704;0.8702;0.7986;0.8088;0.7986;0.7971;0.7667;0.7712;0.7667;0.7645;0.9529;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.8588;0.8621;0.8588;0.8588;0.8819;0.8831;0.8819;0.8821;0.7667;0.7712;0.7667;0.7645;0.9444;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.8572;0.8626;0.8572;0.8565;0.875;0.8778;0.875;0.875;0.7667;0.7712;0.7667;0.7645;0.9445;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8649;0.8681;0.8649;0.864;0.8611;0.8623;0.8611;0.8604;0.7667;0.7712;0.7667;0.7645;0.9458;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
RandomForestClassifier;0.8742;0.8758;0.8742;0.8739;0.8264;0.8274;0.8264;0.8258;0.7667;0.7712;0.7667;0.7645;0.9674;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 890};RandomForestClassifier(n_estimators=10, random_state=890)
DecisionTreeClassifier;0.858;0.8619;0.858;0.8576;0.8819;0.886;0.8819;0.8826;0.7667;0.7789;0.7667;0.7643;0.9393;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.8712;0.8733;0.8712;0.8708;0.7917;0.7963;0.7917;0.7921;0.7667;0.7789;0.7667;0.7643;0.9461;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.8557;0.8576;0.8557;0.8555;0.9097;0.9138;0.9097;0.9098;0.7667;0.7789;0.7667;0.7643;0.948;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8572;0.861;0.8572;0.8571;0.8819;0.8854;0.8819;0.8821;0.7667;0.7789;0.7667;0.7643;0.9459;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
DecisionTreeClassifier;0.8526;0.8555;0.8526;0.8525;0.8403;0.8403;0.8403;0.8403;0.7667;0.7789;0.7667;0.7643;0.9451;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
DecisionTreeClassifier;0.8587;0.8607;0.8587;0.8585;0.8611;0.8646;0.8611;0.8615;0.7667;0.7664;0.7667;0.7642;0.9466;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=381)
DecisionTreeClassifier;0.8542;0.8561;0.8542;0.8541;0.8681;0.8745;0.8681;0.8681;0.7667;0.7797;0.7667;0.7621;0.9364;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=381)
RandomForestClassifier;0.8634;0.8657;0.8634;0.863;0.8611;0.8679;0.8611;0.8608;0.7667;0.7797;0.7667;0.7621;0.9631;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
KNeighborsClassifier;0.8503;0.8526;0.8503;0.85;0.8264;0.8259;0.8264;0.8254;0.75;0.7564;0.75;0.7503;0.9433;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
SVC;0.8171;0.8383;0.8171;0.8161;0.8125;0.8318;0.8125;0.8118;0.75;0.7543;0.75;0.7501;0.9114;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 791};SVC(C=10, probability=True, random_state=791)
DecisionTreeClassifier;0.8587;0.8627;0.8587;0.8586;0.8333;0.8398;0.8333;0.8332;0.75;0.7496;0.75;0.7495;0.9424;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
DecisionTreeClassifier;0.8619;0.8635;0.8619;0.8617;0.875;0.881;0.875;0.8746;0.75;0.7513;0.75;0.7484;0.9457;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8526;0.8567;0.8526;0.8528;0.8958;0.8988;0.8958;0.8963;0.75;0.7569;0.75;0.7483;0.9449;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.8626;0.8651;0.8626;0.8626;0.8542;0.8553;0.8542;0.854;0.75;0.7569;0.75;0.7483;0.9441;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8657;0.8711;0.8657;0.8652;0.8681;0.869;0.8681;0.8673;0.75;0.7569;0.75;0.7483;0.9507;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8619;0.864;0.8619;0.8617;0.8681;0.8688;0.8681;0.8676;0.75;0.7569;0.75;0.7483;0.9419;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.858;0.8608;0.858;0.8575;0.8889;0.8903;0.8889;0.8891;0.75;0.7569;0.75;0.7483;0.9421;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.8642;0.8674;0.8642;0.8642;0.8611;0.862;0.8611;0.8611;0.75;0.7569;0.75;0.7483;0.9399;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
RandomForestClassifier;0.8642;0.867;0.8642;0.8642;0.8889;0.8966;0.8889;0.8892;0.75;0.7609;0.75;0.7472;0.9625;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 274};RandomForestClassifier(n_estimators=10, random_state=274)
DecisionTreeClassifier;0.8581;0.8637;0.8581;0.8577;0.8958;0.901;0.8958;0.8931;0.75;0.7665;0.75;0.7462;0.9496;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
DecisionTreeClassifier;0.858;0.862;0.858;0.858;0.875;0.8748;0.875;0.8748;0.75;0.7665;0.75;0.7462;0.9438;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 381};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=381)
RandomForestClassifier;0.8712;0.8753;0.8712;0.8712;0.8403;0.842;0.8403;0.8396;0.75;0.7555;0.75;0.7461;0.9669;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
RandomForestClassifier;0.8665;0.8695;0.8665;0.8666;0.9028;0.9034;0.9028;0.9029;0.75;0.7638;0.75;0.7459;0.9646;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8565;0.8594;0.8565;0.8566;0.8611;0.8616;0.8611;0.8612;0.75;0.7659;0.75;0.7441;0.9646;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 655};RandomForestClassifier(n_estimators=20, random_state=655)
RandomForestClassifier;0.858;0.8611;0.858;0.8576;0.875;0.8753;0.875;0.875;0.7333;0.753;0.7333;0.7325;0.963;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 274};RandomForestClassifier(n_estimators=20, random_state=274)
RandomForestClassifier;0.8711;0.8737;0.8711;0.871;0.8333;0.8343;0.8333;0.8334;0.7333;0.7537;0.7333;0.7317;0.9673;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 890};RandomForestClassifier(n_estimators=20, random_state=890)
DecisionTreeClassifier;0.8556;0.859;0.8556;0.8554;0.8611;0.8641;0.8611;0.8599;0.7333;0.7433;0.7333;0.7304;0.9391;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8572;0.8603;0.8572;0.8567;0.8472;0.8495;0.8472;0.8474;0.7333;0.7361;0.7333;0.7298;0.9446;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 688};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=688)
DecisionTreeClassifier;0.8588;0.8616;0.8588;0.8584;0.8542;0.869;0.8542;0.8534;0.7167;0.7215;0.7167;0.7112;0.9458;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 114};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=114)
LogisticRegression;0.6943;0.7063;0.6943;0.6923;0.7639;0.7684;0.7639;0.7623;0.65;0.6591;0.65;0.6482;0.8343;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7037;0.7157;0.7037;0.702;0.7222;0.7463;0.7222;0.7165;0.6333;0.6444;0.6333;0.6317;0.8359;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.703;0.7163;0.703;0.7;0.7014;0.7174;0.7014;0.6975;0.6333;0.6444;0.6333;0.6317;0.8358;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7099;0.7231;0.7099;0.7088;0.7292;0.7456;0.7292;0.727;0.6167;0.6297;0.6167;0.6149;0.834;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7137;0.7258;0.7137;0.7121;0.7153;0.7306;0.7153;0.7149;0.6167;0.6297;0.6167;0.6149;0.8358;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7021;0.7108;0.7021;0.7005;0.75;0.7626;0.75;0.7476;0.6167;0.6221;0.6167;0.614;0.8355;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7044;0.7196;0.7044;0.7029;0.7292;0.7458;0.7292;0.7258;0.6167;0.6221;0.6167;0.614;0.8394;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7021;0.7142;0.7021;0.7006;0.7639;0.7872;0.7639;0.7591;0.6167;0.6221;0.6167;0.614;0.8365;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.696;0.7076;0.696;0.6935;0.75;0.7634;0.75;0.7466;0.6167;0.6221;0.6167;0.614;0.8359;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.7068;0.7173;0.7068;0.7053;0.7014;0.7023;0.7014;0.696;0.6167;0.6221;0.6167;0.614;0.84;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.716;0.7242;0.716;0.7142;0.7222;0.7413;0.7222;0.7171;0.6167;0.6221;0.6167;0.614;0.8397;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.7037;0.7169;0.7037;0.7022;0.7639;0.7759;0.7639;0.7589;0.6;0.6069;0.6;0.5992;0.831;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6975;0.7063;0.6975;0.6946;0.7708;0.7781;0.7708;0.7713;0.6;0.6069;0.6;0.5992;0.8316;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.7014;0.7104;0.7014;0.6999;0.75;0.7619;0.75;0.7478;0.6;0.6069;0.6;0.5992;0.8349;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7052;0.7156;0.7052;0.7014;0.6528;0.6759;0.6528;0.6492;0.6;0.6069;0.6;0.5992;0.8403;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7051;0.7161;0.7051;0.7027;0.6944;0.708;0.6944;0.6959;0.6;0.6069;0.6;0.5992;0.8351;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.7161;0.728;0.7161;0.7153;0.6806;0.6845;0.6806;0.677;0.6;0.6069;0.6;0.5992;0.8394;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7091;0.7208;0.7091;0.7079;0.7292;0.7508;0.7292;0.7252;0.6;0.6069;0.6;0.5992;0.8389;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.6929;0.7039;0.6929;0.6895;0.7222;0.7312;0.7222;0.7237;0.6;0.6069;0.6;0.5992;0.8327;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7145;0.7254;0.7145;0.7127;0.7361;0.7366;0.7361;0.735;0.6;0.6069;0.6;0.5992;0.8393;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7075;0.719;0.7075;0.7064;0.7153;0.7205;0.7153;0.7155;0.6;0.6069;0.6;0.5992;0.8384;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.7176;0.73;0.7176;0.7159;0.6875;0.6939;0.6875;0.688;0.6;0.6067;0.6;0.5965;0.8397;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7138;0.7239;0.7138;0.7118;0.6597;0.6823;0.6597;0.6568;0.6;0.6067;0.6;0.5965;0.8424;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7022;0.7117;0.7022;0.7003;0.7222;0.7304;0.7222;0.72;0.6;0.6067;0.6;0.5965;0.8364;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7045;0.7175;0.7045;0.7024;0.7014;0.7173;0.7014;0.7023;0.6;0.6067;0.6;0.5965;0.8396;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 593, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=593)"
LogisticRegression;0.7014;0.7133;0.7014;0.7005;0.75;0.7512;0.75;0.7492;0.5833;0.5913;0.5833;0.5821;0.837;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.713;0.7234;0.713;0.7102;0.6667;0.6762;0.6667;0.6671;0.5833;0.5913;0.5833;0.5821;0.8379;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
LogisticRegression;0.7068;0.7188;0.7068;0.7049;0.7153;0.7289;0.7153;0.7184;0.5833;0.5913;0.5833;0.5821;0.8377;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7084;0.7225;0.7084;0.707;0.7153;0.7259;0.7153;0.7139;0.5833;0.5913;0.5833;0.5821;0.8372;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 440, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=440)"
LogisticRegression;0.7068;0.7177;0.7068;0.7059;0.6944;0.7025;0.6944;0.6866;0.5833;0.5913;0.5833;0.5821;0.8364;smote;500;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 557, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=557)"
