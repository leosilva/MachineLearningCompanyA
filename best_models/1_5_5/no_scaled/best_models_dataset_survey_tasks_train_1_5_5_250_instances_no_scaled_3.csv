Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9194;0.9238;0.9194;0.9194;0.8696;0.8731;0.8696;0.8696;0.85;0.8641;0.85;0.8499;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 36};RandomForestClassifier(n_estimators=5, random_state=36)
RandomForestClassifier;0.9066;0.9107;0.9066;0.9067;1.0;1.0;1.0;1.0;0.85;0.8704;0.85;0.8491;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 36};RandomForestClassifier(n_estimators=5, random_state=36)
RandomForestClassifier;0.9162;0.9181;0.9162;0.9163;0.9275;0.9294;0.9275;0.9264;0.85;0.8563;0.85;0.8487;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 301};RandomForestClassifier(n_estimators=10, random_state=301)
RandomForestClassifier;0.9292;0.9319;0.9292;0.9287;0.913;0.9127;0.913;0.912;0.85;0.8563;0.85;0.8487;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 159};RandomForestClassifier(n_estimators=10, random_state=159)
RandomForestClassifier;0.9227;0.9272;0.9227;0.9226;0.8841;0.8968;0.8841;0.8855;0.85;0.8563;0.85;0.8487;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 159};RandomForestClassifier(n_estimators=10, random_state=159)
SVC;0.6279;0.7144;0.6279;0.6201;0.6667;0.7304;0.6667;0.6678;0.8333;0.8365;0.8333;0.8339;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 877};SVC(C=10, kernel='linear', random_state=877)
RandomForestClassifier;0.9243;0.9281;0.9243;0.9242;0.8261;0.8302;0.8261;0.8221;0.8333;0.8424;0.8333;0.8336;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 301};RandomForestClassifier(n_estimators=10, random_state=301)
SVC;0.6297;0.7101;0.6297;0.6151;0.7536;0.7639;0.7536;0.753;0.8333;0.8339;0.8333;0.8333;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
SVC;0.6184;0.6945;0.6184;0.6017;0.8406;0.8409;0.8406;0.8405;0.8333;0.8339;0.8333;0.8333;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 877};SVC(C=10, kernel='linear', random_state=877)
RandomForestClassifier;0.9292;0.9341;0.9292;0.9283;0.942;0.9506;0.942;0.9427;0.8333;0.8465;0.8333;0.8328;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 301};RandomForestClassifier(n_estimators=20, random_state=301)
RandomForestClassifier;0.9243;0.9288;0.9243;0.9244;0.9275;0.9348;0.9275;0.9271;0.8333;0.8431;0.8333;0.8323;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 36};RandomForestClassifier(n_estimators=20, random_state=36)
RandomForestClassifier;0.9259;0.9304;0.9259;0.9256;0.9275;0.9328;0.9275;0.9283;0.8333;0.8564;0.8333;0.831;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 36};RandomForestClassifier(n_estimators=10, random_state=36)
MLPClassifier;0.8503;0.8666;0.8503;0.8503;0.942;0.9455;0.942;0.9426;0.8333;0.8446;0.8333;0.8304;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
RandomForestClassifier;0.9292;0.9314;0.9292;0.9284;0.9275;0.9322;0.9275;0.9277;0.8167;0.8366;0.8167;0.8188;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 301};RandomForestClassifier(n_estimators=20, random_state=301)
SVC;0.6167;0.6977;0.6167;0.6056;0.8406;0.8508;0.8406;0.8362;0.8167;0.8221;0.8167;0.818;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 877};SVC(C=10, kernel='linear', random_state=877)
RandomForestClassifier;0.9259;0.9311;0.9259;0.926;0.9275;0.9349;0.9275;0.9251;0.8167;0.8292;0.8167;0.8172;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 36};RandomForestClassifier(n_estimators=20, random_state=36)
SVC;0.6166;0.7023;0.6166;0.5996;0.8116;0.8183;0.8116;0.8121;0.8167;0.819;0.8167;0.8168;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 258};SVC(C=10, kernel='linear', random_state=258)
SVC;0.6168;0.6959;0.6168;0.6048;0.8406;0.858;0.8406;0.8429;0.8167;0.8167;0.8167;0.8167;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 258};SVC(C=10, kernel='linear', random_state=258)
RandomForestClassifier;0.9211;0.9249;0.9211;0.921;0.8841;0.8862;0.8841;0.8839;0.8167;0.8187;0.8167;0.8163;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 159};RandomForestClassifier(n_estimators=10, random_state=159)
RandomForestClassifier;0.9179;0.9201;0.9179;0.9181;0.9275;0.9296;0.9275;0.9274;0.8167;0.8217;0.8167;0.816;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 36};RandomForestClassifier(n_estimators=20, random_state=36)
MLPClassifier;0.8567;0.8833;0.8567;0.8556;0.8696;0.8861;0.8696;0.8708;0.8167;0.8296;0.8167;0.8156;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
RandomForestClassifier;0.9195;0.9234;0.9195;0.9195;0.942;0.9456;0.942;0.9416;0.8167;0.8172;0.8167;0.8155;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 159};RandomForestClassifier(n_estimators=10, random_state=159)
RandomForestClassifier;0.9131;0.9202;0.9131;0.9134;0.942;0.9456;0.942;0.9416;0.8167;0.8311;0.8167;0.8148;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 36};RandomForestClassifier(n_estimators=20, random_state=36)
RandomForestClassifier;0.9227;0.9284;0.9227;0.9225;0.9565;0.9615;0.9565;0.9563;0.8167;0.8257;0.8167;0.8142;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 159};RandomForestClassifier(n_estimators=10, random_state=159)
MLPClassifier;0.8549;0.8801;0.8549;0.8549;0.8986;0.9025;0.8986;0.8986;0.8;0.8101;0.8;0.8024;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
DecisionTreeClassifier;0.9211;0.9259;0.9211;0.9206;0.913;0.9135;0.913;0.913;0.8;0.8125;0.8;0.8016;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
DecisionTreeClassifier;0.9292;0.9365;0.9292;0.9289;0.8841;0.8884;0.8841;0.8823;0.8;0.8125;0.8;0.8016;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9227;0.9268;0.9227;0.9227;0.8696;0.8966;0.8696;0.8691;0.8;0.8125;0.8;0.8016;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9147;0.9202;0.9147;0.9148;0.9275;0.9296;0.9275;0.9274;0.8;0.8128;0.8;0.8015;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9259;0.9299;0.9259;0.9257;0.8551;0.8539;0.8551;0.8537;0.8;0.8128;0.8;0.8015;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
SVC;0.6247;0.7033;0.6247;0.6138;0.8261;0.8456;0.8261;0.8253;0.8;0.8054;0.8;0.8013;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
RandomForestClassifier;0.918;0.9233;0.918;0.918;0.9565;0.9583;0.9565;0.9565;0.8;0.8072;0.8;0.8005;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 301};RandomForestClassifier(n_estimators=10, random_state=301)
KNeighborsClassifier;0.8406;0.848;0.8406;0.8414;0.8696;0.8783;0.8696;0.8709;0.8;0.8072;0.8;0.8005;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.6312;0.7103;0.6312;0.6174;0.8406;0.8773;0.8406;0.8447;0.8;0.8013;0.8;0.8003;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
SVC;0.6152;0.6961;0.6152;0.5989;0.7536;0.7901;0.7536;0.7565;0.8;0.8013;0.8;0.8003;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
RandomForestClassifier;0.9324;0.9366;0.9324;0.9319;0.942;0.9461;0.942;0.9419;0.8;0.8057;0.8;0.8003;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 159};RandomForestClassifier(n_estimators=5, random_state=159)
RandomForestClassifier;0.9275;0.9327;0.9275;0.9273;0.9275;0.9342;0.9275;0.9282;0.8;0.8049;0.8;0.8002;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 301};RandomForestClassifier(n_estimators=10, random_state=301)
KNeighborsClassifier;0.8358;0.8495;0.8358;0.8368;0.913;0.9146;0.913;0.9119;0.8;0.8119;0.8;0.8001;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8229;0.836;0.8229;0.823;0.913;0.9129;0.913;0.9127;0.8;0.8178;0.8;0.8;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6345;0.7119;0.6345;0.6185;0.8696;0.8824;0.8696;0.8714;0.8;0.8014;0.8;0.7998;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 258};SVC(C=10, kernel='linear', random_state=258)
MLPClassifier;0.8598;0.8831;0.8598;0.8602;0.913;0.9216;0.913;0.9138;0.8;0.805;0.8;0.7993;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
RandomForestClassifier;0.9162;0.9211;0.9162;0.9161;0.942;0.943;0.942;0.9417;0.8;0.8056;0.8;0.799;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 36};RandomForestClassifier(n_estimators=20, random_state=36)
KNeighborsClassifier;0.8293;0.8395;0.8293;0.8304;0.9275;0.9342;0.9275;0.9282;0.8;0.8083;0.8;0.7987;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
MLPClassifier;0.8406;0.8693;0.8406;0.839;0.8696;0.8722;0.8696;0.8689;0.8;0.8083;0.8;0.7987;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
KNeighborsClassifier;0.8261;0.8393;0.8261;0.8257;0.913;0.913;0.913;0.913;0.8;0.8083;0.8;0.7987;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.9196;0.9248;0.9196;0.919;0.913;0.9136;0.913;0.913;0.8;0.8083;0.8;0.7987;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 301};RandomForestClassifier(n_estimators=20, random_state=301)
LogisticRegression;0.7892;0.8086;0.7892;0.7907;0.8696;0.8716;0.8696;0.8671;0.8;0.8018;0.8;0.7986;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
LogisticRegression;0.8018;0.8254;0.8018;0.8014;0.7971;0.8206;0.7971;0.7993;0.8;0.8018;0.8;0.7986;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
LogisticRegression;0.8116;0.8333;0.8116;0.8135;0.6957;0.7251;0.6957;0.7048;0.8;0.8065;0.8;0.7985;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
MLPClassifier;0.8406;0.8614;0.8406;0.8409;0.8986;0.9042;0.8986;0.8995;0.8;0.802;0.8;0.798;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
MLPClassifier;0.8325;0.8563;0.8325;0.8314;0.971;0.9733;0.971;0.9713;0.8;0.813;0.8;0.7978;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
RandomForestClassifier;0.9291;0.9317;0.9291;0.9287;0.8986;0.8972;0.8986;0.8976;0.8;0.813;0.8;0.7978;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 36};RandomForestClassifier(n_estimators=5, random_state=36)
RandomForestClassifier;0.9146;0.918;0.9146;0.9146;0.9275;0.9287;0.9275;0.9278;0.8;0.8082;0.8;0.7972;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
RandomForestClassifier;0.9163;0.9203;0.9163;0.9159;0.971;0.971;0.971;0.971;0.8;0.8198;0.8;0.7969;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
MLPClassifier;0.8454;0.8546;0.8454;0.8468;0.942;0.943;0.942;0.9417;0.8;0.8131;0.8;0.7952;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
DecisionTreeClassifier;0.9114;0.9171;0.9114;0.9113;0.8841;0.9029;0.8841;0.8867;0.7833;0.8023;0.7833;0.786;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=462)
DecisionTreeClassifier;0.9243;0.9306;0.9243;0.9244;0.8986;0.9152;0.8986;0.8995;0.7833;0.8023;0.7833;0.786;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=330)
MLPClassifier;0.8566;0.8845;0.8566;0.8565;0.8406;0.8773;0.8406;0.8447;0.7833;0.7986;0.7833;0.7853;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
MLPClassifier;0.8373;0.8595;0.8373;0.8384;0.913;0.9188;0.913;0.9124;0.7833;0.797;0.7833;0.7852;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
SVC;0.6216;0.7026;0.6216;0.6096;0.8406;0.8489;0.8406;0.8396;0.7833;0.7913;0.7833;0.7852;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 877};SVC(C=10, kernel='linear', random_state=877)
SVC;0.6505;0.7211;0.6505;0.6354;0.7536;0.7941;0.7536;0.755;0.7833;0.7855;0.7833;0.7841;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
DecisionTreeClassifier;0.9131;0.9179;0.9131;0.9135;0.913;0.9165;0.913;0.9136;0.7833;0.7898;0.7833;0.784;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
SVC;0.6329;0.7108;0.6329;0.6208;0.7681;0.7889;0.7681;0.7702;0.7833;0.7863;0.7833;0.7839;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
MLPClassifier;0.8472;0.8726;0.8472;0.8455;0.8986;0.9152;0.8986;0.8995;0.7833;0.7869;0.7833;0.7838;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
DecisionTreeClassifier;0.9275;0.9348;0.9275;0.9274;0.8551;0.8552;0.8551;0.8543;0.7833;0.7905;0.7833;0.7838;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
MLPClassifier;0.8486;0.867;0.8486;0.8488;0.8261;0.8736;0.8261;0.8288;0.7833;0.7869;0.7833;0.7838;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
DecisionTreeClassifier;0.9066;0.9124;0.9066;0.9064;0.913;0.9145;0.913;0.913;0.7833;0.7905;0.7833;0.7838;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9307;0.9361;0.9307;0.931;0.913;0.924;0.913;0.9094;0.7833;0.7905;0.7833;0.7838;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
MLPClassifier;0.8308;0.85;0.8308;0.8304;0.8986;0.9144;0.8986;0.8995;0.7833;0.7847;0.7833;0.7837;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
MLPClassifier;0.8293;0.8472;0.8293;0.8297;0.8551;0.899;0.8551;0.8551;0.7833;0.7994;0.7833;0.7834;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
SVC;0.6297;0.7081;0.6297;0.6158;0.7681;0.7905;0.7681;0.7713;0.7833;0.7913;0.7833;0.7833;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
SVC;0.6313;0.7111;0.6313;0.62;0.7536;0.7862;0.7536;0.758;0.7833;0.7913;0.7833;0.7833;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 258};SVC(C=10, kernel='linear', random_state=258)
MLPClassifier;0.8406;0.87;0.8406;0.8423;0.8841;0.8932;0.8841;0.8846;0.7833;0.7838;0.7833;0.7832;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
LogisticRegression;0.7971;0.8199;0.7971;0.7978;0.7826;0.7953;0.7826;0.7747;0.7833;0.7873;0.7833;0.7831;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
LogisticRegression;0.8083;0.8305;0.8083;0.8096;0.7971;0.8242;0.7971;0.7993;0.7833;0.7917;0.7833;0.7831;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
LogisticRegression;0.7905;0.8135;0.7905;0.7918;0.8116;0.8158;0.8116;0.813;0.7833;0.7917;0.7833;0.7831;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
MLPClassifier;0.8389;0.8618;0.8389;0.8397;0.9275;0.9306;0.9275;0.9281;0.7833;0.7854;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
KNeighborsClassifier;0.8262;0.8409;0.8262;0.8264;0.913;0.9147;0.913;0.913;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8438;0.8545;0.8438;0.8445;0.913;0.9228;0.913;0.9114;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8454;0.8581;0.8454;0.8462;0.8986;0.9065;0.8986;0.899;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8374;0.852;0.8374;0.8379;0.942;0.9425;0.942;0.9413;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8567;0.8701;0.8567;0.8572;0.8551;0.8693;0.8551;0.8532;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.826;0.8363;0.826;0.827;0.8986;0.9062;0.8986;0.8979;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8228;0.8353;0.8228;0.8223;0.8986;0.9049;0.8986;0.8983;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8406;0.8543;0.8406;0.841;0.8986;0.8992;0.8986;0.8963;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8392;0.8505;0.8392;0.8399;0.8841;0.896;0.8841;0.8852;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8197;0.8319;0.8197;0.818;0.942;0.9506;0.942;0.943;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8343;0.8438;0.8343;0.8347;0.8696;0.8871;0.8696;0.8692;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8358;0.8479;0.8358;0.8352;0.8841;0.8956;0.8841;0.8828;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8341;0.8463;0.8341;0.8354;0.942;0.9448;0.942;0.9426;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8647;0.877;0.8647;0.8646;0.8406;0.8392;0.8406;0.8396;0.7833;0.792;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
LogisticRegression;0.8004;0.8241;0.8004;0.8004;0.8696;0.8833;0.8696;0.8718;0.7833;0.7854;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.7954;0.8174;0.7954;0.7968;0.8696;0.8728;0.8696;0.8701;0.7833;0.7854;0.7833;0.783;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
DecisionTreeClassifier;0.921;0.9275;0.921;0.9212;0.8696;0.8709;0.8696;0.8665;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
SVC;0.6505;0.7269;0.6505;0.6333;0.7826;0.8185;0.7826;0.7811;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 258};SVC(C=10, kernel='linear', random_state=258)
DecisionTreeClassifier;0.9163;0.92;0.9163;0.9162;0.9275;0.9297;0.9275;0.9278;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9194;0.9248;0.9194;0.9193;0.8986;0.9022;0.8986;0.8983;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9307;0.9364;0.9307;0.9308;0.9275;0.9289;0.9275;0.9261;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9227;0.9269;0.9227;0.9226;0.8986;0.9032;0.8986;0.8997;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9114;0.9185;0.9114;0.9113;0.8551;0.8545;0.8551;0.8505;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9275;0.9312;0.9275;0.9274;0.8841;0.8881;0.8841;0.8836;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9082;0.9137;0.9082;0.9081;0.9275;0.9294;0.9275;0.9264;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
LogisticRegression;0.8132;0.8304;0.8132;0.8142;0.8696;0.877;0.8696;0.8666;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.8036;0.824;0.8036;0.8055;0.8116;0.8116;0.8116;0.8107;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
DecisionTreeClassifier;0.921;0.9248;0.921;0.9214;0.971;0.9716;0.971;0.971;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9372;0.9417;0.9372;0.9372;0.8986;0.8995;0.8986;0.8971;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=912)
DecisionTreeClassifier;0.9276;0.9319;0.9276;0.9278;0.8696;0.8759;0.8696;0.8695;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
DecisionTreeClassifier;0.9226;0.9277;0.9226;0.9228;0.913;0.917;0.913;0.9131;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
LogisticRegression;0.8019;0.8234;0.8019;0.8037;0.8551;0.866;0.8551;0.8576;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
LogisticRegression;0.8003;0.8216;0.8003;0.7997;0.7971;0.8258;0.7971;0.8;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
DecisionTreeClassifier;0.9275;0.9316;0.9275;0.9277;0.8406;0.8444;0.8406;0.8408;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
DecisionTreeClassifier;0.9114;0.9165;0.9114;0.9115;0.9565;0.9571;0.9565;0.9565;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 330};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=330)
LogisticRegression;0.7779;0.8024;0.7779;0.7801;0.8551;0.869;0.8551;0.8573;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
SVC;0.6233;0.7003;0.6233;0.6092;0.7391;0.7944;0.7391;0.7405;0.7833;0.7863;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 258};SVC(C=10, kernel='linear', random_state=258)
DecisionTreeClassifier;0.9131;0.9195;0.9131;0.9134;0.971;0.9716;0.971;0.971;0.7833;0.7839;0.7833;0.7827;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=462)
SVC;0.6395;0.7125;0.6395;0.6228;0.7971;0.806;0.7971;0.7988;0.7833;0.7868;0.7833;0.7826;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 258};SVC(C=1, kernel='linear', random_state=258)
KNeighborsClassifier;0.8423;0.8538;0.8423;0.8423;0.913;0.9189;0.913;0.9138;0.7833;0.7948;0.7833;0.7823;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
LogisticRegression;0.8051;0.8274;0.8051;0.8072;0.7681;0.802;0.7681;0.7742;0.7833;0.7861;0.7833;0.7823;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
KNeighborsClassifier;0.8455;0.856;0.8455;0.8461;0.8696;0.871;0.8696;0.8694;0.7833;0.7948;0.7833;0.7823;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.8019;0.8185;0.8019;0.8035;0.8116;0.841;0.8116;0.8136;0.7833;0.7861;0.7833;0.7823;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
LogisticRegression;0.7987;0.8173;0.7987;0.8002;0.6667;0.7217;0.6667;0.6774;0.7833;0.7861;0.7833;0.7823;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
LogisticRegression;0.789;0.8106;0.789;0.7902;0.8551;0.862;0.8551;0.8574;0.7833;0.7861;0.7833;0.7823;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
LogisticRegression;0.8052;0.8268;0.8052;0.8057;0.6957;0.7263;0.6957;0.6952;0.7833;0.7861;0.7833;0.7823;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
RandomForestClassifier;0.9227;0.9275;0.9227;0.9226;0.8696;0.8731;0.8696;0.868;0.7833;0.7877;0.7833;0.7814;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 301};RandomForestClassifier(n_estimators=5, random_state=301)
LogisticRegression;0.7778;0.7978;0.7778;0.7803;0.7971;0.806;0.7971;0.7988;0.7833;0.7854;0.7833;0.7813;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
LogisticRegression;0.8019;0.8229;0.8019;0.8039;0.7536;0.7837;0.7536;0.7487;0.7833;0.7833;0.7833;0.7811;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
MLPClassifier;0.8375;0.8536;0.8375;0.8377;0.8696;0.8944;0.8696;0.8729;0.7833;0.7833;0.7833;0.7811;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
MLPClassifier;0.8309;0.8501;0.8309;0.8273;0.8696;0.9062;0.8696;0.8705;0.7833;0.7946;0.7833;0.7786;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
RandomForestClassifier;0.9147;0.9188;0.9147;0.9145;0.9275;0.9281;0.9275;0.9275;0.7667;0.776;0.7667;0.7683;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 159};RandomForestClassifier(n_estimators=20, random_state=159)
SVC;0.6231;0.7069;0.6231;0.6118;0.7101;0.7833;0.7101;0.7083;0.7667;0.7721;0.7667;0.768;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 258};SVC(C=1, kernel='linear', random_state=258)
RandomForestClassifier;0.9307;0.9348;0.9307;0.9309;0.8696;0.8688;0.8696;0.8689;0.7667;0.7718;0.7667;0.7672;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 159};RandomForestClassifier(n_estimators=20, random_state=159)
KNeighborsClassifier;0.8277;0.8388;0.8277;0.8273;0.8986;0.9028;0.8986;0.8997;0.7667;0.7765;0.7667;0.7672;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.9179;0.9221;0.9179;0.918;0.9275;0.9281;0.9275;0.9275;0.7667;0.7687;0.7667;0.7668;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 462};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=462)
KNeighborsClassifier;0.8424;0.8498;0.8424;0.8422;0.942;0.9461;0.942;0.9419;0.7667;0.7778;0.7667;0.7668;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.6362;0.7073;0.6362;0.6201;0.7536;0.7738;0.7536;0.7596;0.7667;0.7687;0.7667;0.7668;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
KNeighborsClassifier;0.842;0.8526;0.842;0.8418;0.913;0.9163;0.913;0.9135;0.7667;0.7778;0.7667;0.7668;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9243;0.928;0.9243;0.924;0.8841;0.8939;0.8841;0.8846;0.7667;0.7687;0.7667;0.7668;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=912)
LogisticRegression;0.7971;0.8209;0.7971;0.7976;0.8261;0.8456;0.8261;0.8253;0.7667;0.7671;0.7667;0.7666;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
LogisticRegression;0.8084;0.8289;0.8084;0.8093;0.7826;0.8232;0.7826;0.7866;0.7667;0.7671;0.7667;0.7666;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
RandomForestClassifier;0.9227;0.9258;0.9227;0.9224;0.9565;0.9582;0.9565;0.9565;0.7667;0.7671;0.7667;0.7666;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 159};RandomForestClassifier(n_estimators=20, random_state=159)
LogisticRegression;0.7907;0.8168;0.7907;0.7906;0.8116;0.8246;0.8116;0.8124;0.7667;0.7709;0.7667;0.7664;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
MLPClassifier;0.8534;0.8735;0.8534;0.8539;0.8986;0.905;0.8986;0.8996;0.7667;0.7709;0.7667;0.7664;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
SVC;0.6409;0.7139;0.6409;0.6262;0.7826;0.8048;0.7826;0.7831;0.7667;0.7702;0.7667;0.766;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 877};SVC(C=1, kernel='linear', random_state=877)
KNeighborsClassifier;0.826;0.8356;0.826;0.8268;0.8986;0.8993;0.8986;0.8978;0.7667;0.7709;0.7667;0.7658;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8374;0.8467;0.8374;0.838;0.942;0.9432;0.942;0.9423;0.7667;0.7709;0.7667;0.7658;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.847;0.8584;0.847;0.848;0.8986;0.9033;0.8986;0.899;0.7667;0.7709;0.7667;0.7658;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.7955;0.8114;0.7955;0.7969;0.8116;0.8336;0.8116;0.8139;0.7667;0.7668;0.7667;0.7655;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.8019;0.8267;0.8019;0.8032;0.8116;0.8403;0.8116;0.8122;0.7667;0.7668;0.7667;0.7655;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.7876;0.8097;0.7876;0.7892;0.8116;0.8255;0.8116;0.8153;0.7667;0.7668;0.7667;0.7655;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
KNeighborsClassifier;0.8454;0.8557;0.8454;0.8467;0.9275;0.9268;0.9275;0.9269;0.7667;0.779;0.7667;0.7654;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.9243;0.9272;0.9243;0.9246;0.8696;0.8892;0.8696;0.871;0.7667;0.779;0.7667;0.7654;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 36};RandomForestClassifier(n_estimators=5, random_state=36)
KNeighborsClassifier;0.8615;0.871;0.8615;0.8619;0.8551;0.8767;0.8551;0.8562;0.7667;0.7777;0.7667;0.7652;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
LogisticRegression;0.7988;0.8181;0.7988;0.8014;0.8261;0.8487;0.8261;0.8211;0.7667;0.7708;0.7667;0.7646;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
LogisticRegression;0.7875;0.812;0.7875;0.7881;0.6812;0.7234;0.6812;0.6759;0.7667;0.7708;0.7667;0.7646;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 96, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=96)"
LogisticRegression;0.7858;0.8064;0.7858;0.7872;0.7391;0.7605;0.7391;0.7344;0.7667;0.7712;0.7667;0.7645;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 306, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=306)"
MLPClassifier;0.8503;0.8657;0.8503;0.8501;0.7681;0.7973;0.7681;0.7622;0.7667;0.7785;0.7667;0.7624;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
MLPClassifier;0.8567;0.8715;0.8567;0.8577;0.7681;0.8446;0.7681;0.7689;0.75;0.7593;0.75;0.7512;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
SVC;0.6313;0.7082;0.6313;0.6177;0.7826;0.8056;0.7826;0.7857;0.75;0.7599;0.75;0.7511;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 596};SVC(C=10, kernel='linear', random_state=596)
SVC;0.6313;0.7076;0.6313;0.6166;0.7826;0.8002;0.7826;0.7876;0.75;0.7558;0.75;0.7505;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 877};SVC(C=10, kernel='linear', random_state=877)
SVC;0.6281;0.7016;0.6281;0.6156;0.8116;0.8635;0.8116;0.8116;0.75;0.7558;0.75;0.7505;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 258};SVC(C=10, kernel='linear', random_state=258)
RandomForestClassifier;0.9275;0.9316;0.9275;0.9277;0.8841;0.8883;0.8841;0.8844;0.75;0.7532;0.75;0.7504;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 159};RandomForestClassifier(n_estimators=5, random_state=159)
SVC;0.6345;0.7076;0.6345;0.6228;0.6957;0.7652;0.6957;0.6964;0.75;0.7578;0.75;0.7502;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 877};SVC(C=10, kernel='linear', random_state=877)
MLPClassifier;0.8437;0.8625;0.8437;0.8419;0.7971;0.7968;0.7971;0.7967;0.75;0.7656;0.75;0.7495;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 225, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=225)
KNeighborsClassifier;0.8567;0.8716;0.8567;0.857;0.913;0.9184;0.913;0.9138;0.75;0.7656;0.75;0.7495;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8407;0.8604;0.8407;0.8396;0.7681;0.8499;0.7681;0.7685;0.75;0.7907;0.75;0.7492;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
MLPClassifier;0.8358;0.8558;0.8358;0.834;0.8406;0.8559;0.8406;0.8405;0.75;0.7535;0.75;0.749;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
SVC;0.6456;0.7186;0.6456;0.6303;0.7391;0.8082;0.7391;0.7422;0.75;0.7602;0.75;0.7474;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 877};SVC(C=1, kernel='linear', random_state=877)
MLPClassifier;0.8777;0.8885;0.8777;0.8789;0.7826;0.8355;0.7826;0.7891;0.75;0.76;0.75;0.7471;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
LogisticRegression;0.8004;0.8162;0.8004;0.8022;0.7536;0.7736;0.7536;0.7349;0.75;0.7542;0.75;0.7468;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 572, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=572)"
MLPClassifier;0.8582;0.8821;0.8582;0.8594;0.8551;0.899;0.8551;0.8587;0.7333;0.7647;0.7333;0.7368;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
DecisionTreeClassifier;0.9323;0.9361;0.9323;0.9324;0.8551;0.8572;0.8551;0.8541;0.7333;0.7355;0.7333;0.7341;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=912)
DecisionTreeClassifier;0.9227;0.9279;0.9227;0.9226;0.8841;0.8852;0.8841;0.8843;0.7333;0.7355;0.7333;0.7341;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 912};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=912)
SVC;0.6441;0.7163;0.6441;0.6238;0.7826;0.8095;0.7826;0.787;0.7333;0.7392;0.7333;0.7339;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 877};SVC(C=1, kernel='linear', random_state=877)
MLPClassifier;0.8325;0.8581;0.8325;0.8313;0.7536;0.8215;0.7536;0.742;0.7333;0.7586;0.7333;0.73;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
SVC;0.6216;0.6978;0.6216;0.6077;0.7826;0.8076;0.7826;0.7846;0.7167;0.7222;0.7167;0.7161;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 596};SVC(C=0.1, kernel='linear', random_state=596)
SVC;0.6263;0.708;0.6263;0.6145;0.7681;0.7917;0.7681;0.7657;0.7167;0.7222;0.7167;0.7161;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 258};SVC(C=0.1, kernel='linear', random_state=258)
MLPClassifier;0.8325;0.8581;0.8325;0.831;0.8116;0.8449;0.8116;0.8043;0.7167;0.7514;0.7167;0.709;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 243, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=243)
SVC;0.6345;0.7023;0.6345;0.6138;0.8406;0.8556;0.8406;0.8388;0.7;0.7047;0.7;0.7004;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 877};SVC(C=0.1, kernel='linear', random_state=877)
MLPClassifier;0.8373;0.8552;0.8373;0.8356;0.7826;0.8684;0.7826;0.7815;0.6667;0.694;0.6667;0.6624;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
MLPClassifier;0.855;0.8757;0.855;0.8553;0.7246;0.774;0.7246;0.7061;0.6667;0.7099;0.6667;0.6481;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 928, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=928)
