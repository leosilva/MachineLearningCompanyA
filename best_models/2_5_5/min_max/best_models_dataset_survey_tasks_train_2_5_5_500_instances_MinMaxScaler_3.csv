Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
SVC;0.8287;0.8349;0.8287;0.83;0.8194;0.8269;0.8194;0.8212;0.9333;0.9444;0.9333;0.9341;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
RandomForestClassifier;0.8626;0.8665;0.8626;0.8631;0.8681;0.8715;0.8681;0.8693;0.9167;0.9245;0.9167;0.9181;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 747};RandomForestClassifier(n_estimators=10, random_state=747)
RandomForestClassifier;0.8549;0.8611;0.8549;0.8554;0.8681;0.8703;0.8681;0.8679;0.9167;0.9245;0.9167;0.9181;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 315};RandomForestClassifier(n_estimators=20, random_state=315)
RandomForestClassifier;0.8665;0.8732;0.8665;0.8674;0.8889;0.8991;0.8889;0.8899;0.9167;0.9206;0.9167;0.9174;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 269};RandomForestClassifier(n_estimators=5, random_state=269)
DecisionTreeClassifier;0.8542;0.8604;0.8542;0.855;0.8403;0.847;0.8403;0.8402;0.9167;0.9195;0.9167;0.917;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
DecisionTreeClassifier;0.8666;0.8731;0.8666;0.8677;0.8889;0.8879;0.8889;0.8881;0.9167;0.9195;0.9167;0.917;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=275)
DecisionTreeClassifier;0.868;0.8777;0.868;0.8692;0.8681;0.8716;0.8681;0.868;0.9167;0.9195;0.9167;0.917;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=275)
DecisionTreeClassifier;0.8619;0.8686;0.8619;0.8631;0.8333;0.8487;0.8333;0.8347;0.9167;0.9195;0.9167;0.917;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=677)
DecisionTreeClassifier;0.8588;0.8657;0.8588;0.8598;0.9236;0.927;0.9236;0.9232;0.9167;0.9195;0.9167;0.917;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=677)
RandomForestClassifier;0.8604;0.8655;0.8604;0.8613;0.875;0.8791;0.875;0.8762;0.9167;0.9194;0.9167;0.9165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 315};RandomForestClassifier(n_estimators=20, random_state=315)
RandomForestClassifier;0.8704;0.8755;0.8704;0.8709;0.8472;0.859;0.8472;0.8497;0.9167;0.9194;0.9167;0.9165;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 315};RandomForestClassifier(n_estimators=10, random_state=315)
RandomForestClassifier;0.855;0.8607;0.855;0.8553;0.9306;0.9302;0.9306;0.9301;0.9;0.912;0.9;0.9019;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 315};RandomForestClassifier(n_estimators=20, random_state=315)
RandomForestClassifier;0.8626;0.8664;0.8626;0.863;0.8958;0.8952;0.8958;0.8955;0.9;0.912;0.9;0.9019;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 269};RandomForestClassifier(n_estimators=20, random_state=269)
SVC;0.8256;0.834;0.8256;0.8274;0.8403;0.854;0.8403;0.841;0.9;0.9043;0.9;0.9011;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
RandomForestClassifier;0.8749;0.88;0.8749;0.8756;0.7778;0.7839;0.7778;0.7799;0.9;0.9087;0.9;0.9009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 269};RandomForestClassifier(n_estimators=10, random_state=269)
RandomForestClassifier;0.8727;0.8791;0.8727;0.8731;0.7778;0.7828;0.7778;0.7791;0.9;0.9087;0.9;0.9009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 315};RandomForestClassifier(n_estimators=20, random_state=315)
RandomForestClassifier;0.8573;0.8642;0.8573;0.8575;0.8819;0.8905;0.8819;0.8833;0.9;0.9087;0.9;0.9009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 747};RandomForestClassifier(n_estimators=10, random_state=747)
RandomForestClassifier;0.8604;0.8667;0.8604;0.8611;0.9028;0.9032;0.9028;0.9029;0.9;0.9087;0.9;0.9009;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 747};RandomForestClassifier(n_estimators=20, random_state=747)
DecisionTreeClassifier;0.8518;0.8589;0.8518;0.853;0.8958;0.8987;0.8958;0.8963;0.9;0.9148;0.9;0.9008;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=677)
RandomForestClassifier;0.8719;0.8794;0.8719;0.8723;0.8125;0.8198;0.8125;0.8147;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 269};RandomForestClassifier(n_estimators=20, random_state=269)
DecisionTreeClassifier;0.8573;0.865;0.8573;0.8585;0.8819;0.8928;0.8819;0.8837;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=520)
DecisionTreeClassifier;0.8688;0.8753;0.8688;0.8697;0.8403;0.8563;0.8403;0.8432;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=677)
RandomForestClassifier;0.8581;0.8632;0.8581;0.8587;0.8542;0.8591;0.8542;0.8556;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 747};RandomForestClassifier(n_estimators=5, random_state=747)
DecisionTreeClassifier;0.8696;0.8797;0.8696;0.8707;0.8542;0.8591;0.8542;0.8554;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=275)
RandomForestClassifier;0.8588;0.8656;0.8588;0.8598;0.8819;0.893;0.8819;0.8839;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 747};RandomForestClassifier(n_estimators=20, random_state=747)
RandomForestClassifier;0.8595;0.8637;0.8595;0.8601;0.8681;0.879;0.8681;0.8699;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 269};RandomForestClassifier(n_estimators=20, random_state=269)
DecisionTreeClassifier;0.8727;0.8803;0.8727;0.8737;0.8403;0.8465;0.8403;0.8416;0.9;0.906;0.9;0.9005;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=520)
DecisionTreeClassifier;0.8549;0.8609;0.8549;0.8558;0.875;0.8757;0.875;0.8751;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=275)
DecisionTreeClassifier;0.865;0.8708;0.865;0.8656;0.875;0.878;0.875;0.876;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
DecisionTreeClassifier;0.8711;0.8793;0.8711;0.8722;0.8542;0.8584;0.8542;0.8545;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=275)
DecisionTreeClassifier;0.8604;0.8661;0.8604;0.8613;0.8542;0.8639;0.8542;0.8568;0.9;0.9137;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=275)
DecisionTreeClassifier;0.8527;0.8615;0.8527;0.8527;0.8819;0.8971;0.8819;0.8843;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=275)
DecisionTreeClassifier;0.8634;0.8727;0.8634;0.8645;0.8403;0.8474;0.8403;0.8422;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=275)
DecisionTreeClassifier;0.8688;0.8735;0.8688;0.8698;0.8333;0.8413;0.8333;0.8359;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=677)
DecisionTreeClassifier;0.8626;0.8689;0.8626;0.8635;0.8889;0.89;0.8889;0.8892;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
DecisionTreeClassifier;0.8673;0.8753;0.8673;0.8684;0.875;0.8744;0.875;0.8743;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
DecisionTreeClassifier;0.8558;0.8627;0.8558;0.8565;0.8681;0.8699;0.8681;0.8688;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=677)
DecisionTreeClassifier;0.8643;0.8746;0.8643;0.8653;0.8681;0.8775;0.8681;0.8683;0.9;0.9015;0.9;0.9004;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=520)
SVC;0.8232;0.8305;0.8232;0.8248;0.8264;0.8297;0.8264;0.8268;0.9;0.9103;0.9;0.8998;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
RandomForestClassifier;0.8541;0.8606;0.8541;0.8553;0.8889;0.8914;0.8889;0.8899;0.9;0.9027;0.9;0.8998;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 269};RandomForestClassifier(n_estimators=20, random_state=269)
MLPClassifier;0.821;0.8267;0.821;0.8221;0.8542;0.858;0.8542;0.8539;0.9;0.9032;0.9;0.8988;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
RandomForestClassifier;0.8565;0.862;0.8565;0.8573;0.8819;0.8821;0.8819;0.8818;0.9;0.9032;0.9;0.8988;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 315};RandomForestClassifier(n_estimators=20, random_state=315)
RandomForestClassifier;0.865;0.871;0.865;0.8661;0.8403;0.8423;0.8403;0.8409;0.8833;0.8924;0.8833;0.8855;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 269};RandomForestClassifier(n_estimators=10, random_state=269)
KNeighborsClassifier;0.8495;0.8577;0.8495;0.8505;0.8542;0.8592;0.8542;0.8545;0.8833;0.8955;0.8833;0.8848;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.821;0.8289;0.821;0.8224;0.8611;0.862;0.8611;0.8614;0.8833;0.8918;0.8833;0.8847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
RandomForestClassifier;0.8673;0.8717;0.8673;0.8676;0.8472;0.8547;0.8472;0.8487;0.8833;0.8918;0.8833;0.8847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 747};RandomForestClassifier(n_estimators=10, random_state=747)
MLPClassifier;0.8249;0.8325;0.8249;0.8263;0.8958;0.8966;0.8958;0.8952;0.8833;0.8918;0.8833;0.8847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
MLPClassifier;0.8163;0.8233;0.8163;0.8174;0.8542;0.8707;0.8542;0.8573;0.8833;0.8918;0.8833;0.8847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
SVC;0.8187;0.827;0.8187;0.8199;0.8889;0.8992;0.8889;0.8904;0.8833;0.8865;0.8833;0.8845;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
KNeighborsClassifier;0.8495;0.861;0.8495;0.8493;0.8056;0.8148;0.8056;0.8082;0.8833;0.8935;0.8833;0.8844;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8279;0.8345;0.8279;0.8294;0.8333;0.8327;0.8333;0.8329;0.8833;0.8972;0.8833;0.8842;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
RandomForestClassifier;0.8565;0.8611;0.8565;0.8574;0.8958;0.8979;0.8958;0.8961;0.8833;0.8868;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 269};RandomForestClassifier(n_estimators=5, random_state=269)
DecisionTreeClassifier;0.8565;0.8642;0.8565;0.8573;0.8611;0.8616;0.8611;0.8581;0.8833;0.8868;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=677)
DecisionTreeClassifier;0.8526;0.8583;0.8526;0.8538;0.875;0.8766;0.875;0.8756;0.8833;0.8868;0.8833;0.884;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=520)
RandomForestClassifier;0.8649;0.8689;0.8649;0.8656;0.8333;0.8348;0.8333;0.8333;0.8833;0.8934;0.8833;0.8839;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 747};RandomForestClassifier(n_estimators=20, random_state=747)
DecisionTreeClassifier;0.8619;0.8677;0.8619;0.8629;0.8333;0.8311;0.8333;0.8314;0.8833;0.8848;0.8833;0.8837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=677)
MLPClassifier;0.8287;0.8364;0.8287;0.8302;0.8403;0.8403;0.8403;0.8403;0.8833;0.8939;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
MLPClassifier;0.8272;0.8353;0.8272;0.8285;0.8333;0.8353;0.8333;0.8342;0.8833;0.8939;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
MLPClassifier;0.8248;0.833;0.8248;0.8258;0.8681;0.8763;0.8681;0.8669;0.8833;0.8939;0.8833;0.8836;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
RandomForestClassifier;0.8603;0.8633;0.8603;0.8608;0.8958;0.9033;0.8958;0.8972;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 315};RandomForestClassifier(n_estimators=20, random_state=315)
DecisionTreeClassifier;0.8635;0.8714;0.8635;0.8643;0.8333;0.8396;0.8333;0.8347;0.8833;0.9055;0.8833;0.8833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=677)
MLPClassifier;0.8256;0.835;0.8256;0.8271;0.8681;0.8681;0.8681;0.8679;0.8833;0.886;0.8833;0.8832;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
SVC;0.8233;0.8314;0.8233;0.8248;0.7986;0.8053;0.7986;0.801;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
SVC;0.8286;0.8365;0.8286;0.8301;0.8125;0.8223;0.8125;0.8141;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
RandomForestClassifier;0.8611;0.8684;0.8611;0.8622;0.875;0.875;0.875;0.875;0.8833;0.8891;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 315};RandomForestClassifier(n_estimators=10, random_state=315)
SVC;0.8302;0.8371;0.8302;0.8314;0.7778;0.7935;0.7778;0.7793;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
SVC;0.8248;0.8319;0.8248;0.8266;0.8611;0.8668;0.8611;0.8618;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
SVC;0.8233;0.8324;0.8233;0.825;0.8403;0.8383;0.8403;0.838;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
SVC;0.8272;0.8355;0.8272;0.8283;0.8403;0.8435;0.8403;0.8411;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
SVC;0.8264;0.8351;0.8264;0.8276;0.875;0.8821;0.875;0.8762;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
SVC;0.8179;0.8268;0.8179;0.8191;0.8611;0.8643;0.8611;0.862;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
SVC;0.8249;0.8316;0.8249;0.8263;0.8542;0.8657;0.8542;0.8563;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
SVC;0.8241;0.8325;0.8241;0.8248;0.8472;0.8553;0.8472;0.849;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
SVC;0.8287;0.8355;0.8287;0.8303;0.8194;0.8267;0.8194;0.8203;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
SVC;0.8194;0.8312;0.8194;0.8207;0.8333;0.8536;0.8333;0.8355;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
SVC;0.8295;0.8363;0.8295;0.8311;0.8125;0.8231;0.8125;0.8151;0.8833;0.888;0.8833;0.8829;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
MLPClassifier;0.821;0.8296;0.821;0.8225;0.8958;0.8947;0.8958;0.8948;0.8833;0.8873;0.8833;0.8826;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
SVC;0.821;0.8294;0.821;0.8226;0.8472;0.8506;0.8472;0.8482;0.8833;0.8873;0.8833;0.8826;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
SVC;0.8217;0.8304;0.8217;0.8225;0.8403;0.8481;0.8403;0.84;0.8833;0.8836;0.8833;0.8823;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
SVC;0.8203;0.8291;0.8203;0.8217;0.8681;0.8717;0.8681;0.8688;0.8833;0.8836;0.8833;0.8823;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
MLPClassifier;0.8256;0.8323;0.8256;0.8265;0.8403;0.8414;0.8403;0.8404;0.8667;0.8799;0.8667;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
MLPClassifier;0.8209;0.8299;0.8209;0.822;0.8611;0.872;0.8611;0.8631;0.8667;0.8799;0.8667;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
MLPClassifier;0.828;0.8347;0.828;0.8295;0.8125;0.8166;0.8125;0.8128;0.8667;0.8799;0.8667;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
MLPClassifier;0.8217;0.8288;0.8217;0.8233;0.875;0.8757;0.875;0.8751;0.8667;0.8799;0.8667;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
MLPClassifier;0.8225;0.8297;0.8225;0.8237;0.8403;0.8398;0.8403;0.8396;0.8667;0.8799;0.8667;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
MLPClassifier;0.8187;0.8262;0.8187;0.8197;0.8819;0.8847;0.8819;0.8828;0.8667;0.8799;0.8667;0.868;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
DecisionTreeClassifier;0.8564;0.861;0.8564;0.8573;0.8681;0.8727;0.8681;0.8693;0.8667;0.8739;0.8667;0.8679;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=275)
MLPClassifier;0.8187;0.828;0.8187;0.8194;0.8472;0.8521;0.8472;0.8486;0.8667;0.8788;0.8667;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
MLPClassifier;0.8156;0.8233;0.8156;0.8172;0.9028;0.913;0.9028;0.9037;0.8667;0.8788;0.8667;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
MLPClassifier;0.8155;0.8242;0.8155;0.8169;0.8681;0.875;0.8681;0.8671;0.8667;0.8788;0.8667;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
MLPClassifier;0.8248;0.8319;0.8248;0.8259;0.8542;0.8567;0.8542;0.855;0.8667;0.8788;0.8667;0.8677;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
KNeighborsClassifier;0.8248;0.8369;0.8248;0.8242;0.8889;0.8924;0.8889;0.8898;0.8667;0.8806;0.8667;0.8675;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8449;0.8546;0.8449;0.8456;0.8611;0.8769;0.8611;0.8634;0.8667;0.8806;0.8667;0.8675;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.831;0.8438;0.831;0.8317;0.8611;0.8776;0.8611;0.8621;0.8667;0.8806;0.8667;0.8675;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8618;0.8684;0.8618;0.8628;0.8542;0.8537;0.8542;0.8534;0.8667;0.8704;0.8667;0.8674;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=520)
SVC;0.821;0.8294;0.821;0.8229;0.8681;0.8704;0.8681;0.868;0.8667;0.8746;0.8667;0.8674;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
MLPClassifier;0.8233;0.8324;0.8233;0.8249;0.8403;0.8451;0.8403;0.8408;0.8667;0.8704;0.8667;0.8674;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
SVC;0.8163;0.8254;0.8163;0.8178;0.875;0.8784;0.875;0.8757;0.8667;0.8681;0.8667;0.867;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
DecisionTreeClassifier;0.8642;0.8712;0.8642;0.8655;0.8194;0.8203;0.8194;0.8197;0.8667;0.8692;0.8667;0.8669;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 677};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=677)
RandomForestClassifier;0.8635;0.8689;0.8635;0.8641;0.8194;0.823;0.8194;0.821;0.8667;0.875;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 747};RandomForestClassifier(n_estimators=10, random_state=747)
RandomForestClassifier;0.8627;0.8675;0.8627;0.8631;0.8681;0.8714;0.8681;0.8689;0.8667;0.875;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 747};RandomForestClassifier(n_estimators=20, random_state=747)
KNeighborsClassifier;0.8342;0.8422;0.8342;0.8351;0.7986;0.8091;0.7986;0.8019;0.8667;0.875;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8257;0.834;0.8257;0.8274;0.8472;0.8478;0.8472;0.8473;0.8667;0.8722;0.8667;0.8667;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
MLPClassifier;0.8257;0.8335;0.8257;0.827;0.8333;0.8482;0.8333;0.8357;0.8667;0.8673;0.8667;0.8666;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
KNeighborsClassifier;0.8334;0.8408;0.8334;0.8335;0.8819;0.8919;0.8819;0.8825;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8342;0.8482;0.8342;0.8342;0.8611;0.8654;0.8611;0.8628;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.821;0.8286;0.821;0.8222;0.8611;0.8652;0.8611;0.8626;0.8667;0.8664;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
KNeighborsClassifier;0.8403;0.8478;0.8403;0.8408;0.8681;0.8736;0.8681;0.869;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
SVC;0.8163;0.8235;0.8163;0.8173;0.8472;0.8659;0.8472;0.8506;0.8667;0.8677;0.8667;0.8661;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
SVC;0.8318;0.8381;0.8318;0.833;0.7708;0.7772;0.7708;0.7727;0.8667;0.8677;0.8667;0.8661;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 669};SVC(C=10, random_state=669)
SVC;0.8287;0.8352;0.8287;0.83;0.8264;0.8424;0.8264;0.8284;0.8667;0.8677;0.8667;0.8661;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
SVC;0.8271;0.8342;0.8271;0.8288;0.8194;0.8232;0.8194;0.8205;0.8667;0.8656;0.8667;0.8658;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
SVC;0.8287;0.8371;0.8287;0.8297;0.8194;0.8253;0.8194;0.8213;0.8667;0.8656;0.8667;0.8658;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
RandomForestClassifier;0.8572;0.8625;0.8572;0.8576;0.875;0.8787;0.875;0.8762;0.8667;0.8764;0.8667;0.8657;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 269};RandomForestClassifier(n_estimators=20, random_state=269)
SVC;0.8295;0.8372;0.8295;0.8309;0.8264;0.8333;0.8264;0.8272;0.8667;0.8731;0.8667;0.8651;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 566};SVC(C=10, random_state=566)
SVC;0.8233;0.8316;0.8233;0.8241;0.8333;0.8448;0.8333;0.8357;0.8667;0.8731;0.8667;0.8651;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 611};SVC(C=10, random_state=611)
MLPClassifier;0.8325;0.8379;0.8325;0.8333;0.8333;0.8641;0.8333;0.8361;0.8667;0.8736;0.8667;0.865;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
DecisionTreeClassifier;0.8604;0.868;0.8604;0.8617;0.8611;0.8624;0.8611;0.8613;0.85;0.8557;0.85;0.8514;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 275};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=275)
KNeighborsClassifier;0.8342;0.8448;0.8342;0.8344;0.8472;0.8465;0.8472;0.8457;0.85;0.8674;0.85;0.8513;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8604;0.8681;0.8604;0.8611;0.8958;0.8972;0.8958;0.8957;0.85;0.8541;0.85;0.851;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 747};RandomForestClassifier(n_estimators=10, random_state=747)
DecisionTreeClassifier;0.8588;0.8641;0.8588;0.8597;0.8264;0.8321;0.8264;0.8284;0.85;0.8523;0.85;0.8508;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 520};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=520)
MLPClassifier;0.8249;0.8322;0.8249;0.8263;0.7778;0.787;0.7778;0.7806;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
MLPClassifier;0.8155;0.8219;0.8155;0.8168;0.8889;0.8956;0.8889;0.8882;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
MLPClassifier;0.828;0.8354;0.828;0.8288;0.8403;0.853;0.8403;0.8417;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 196, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=196)
MLPClassifier;0.8287;0.8371;0.8287;0.83;0.8403;0.8697;0.8403;0.84;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
KNeighborsClassifier;0.841;0.8508;0.841;0.8414;0.8472;0.8651;0.8472;0.8468;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8372;0.8484;0.8372;0.8374;0.8611;0.8651;0.8611;0.8624;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8349;0.8451;0.8349;0.8356;0.8611;0.8739;0.8611;0.863;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8364;0.846;0.8364;0.8367;0.9167;0.9183;0.9167;0.9172;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8457;0.8616;0.8457;0.8461;0.8542;0.8533;0.8542;0.8536;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8225;0.8329;0.8225;0.8226;0.9097;0.9139;0.9097;0.9107;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8272;0.8327;0.8272;0.8275;0.8472;0.8609;0.8472;0.8482;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8364;0.8505;0.8364;0.837;0.7986;0.8054;0.7986;0.7988;0.85;0.8597;0.85;0.849;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8357;0.8453;0.8357;0.8366;0.8889;0.8932;0.8889;0.8897;0.85;0.8524;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8518;0.8643;0.8518;0.8526;0.7986;0.8003;0.7986;0.7986;0.85;0.8577;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8395;0.8489;0.8395;0.8399;0.8681;0.867;0.8681;0.8673;0.85;0.8577;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8433;0.8541;0.8433;0.8433;0.8819;0.8863;0.8819;0.8829;0.85;0.8577;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8735;0.8779;0.8735;0.874;0.8403;0.8493;0.8403;0.8419;0.85;0.8563;0.85;0.8487;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 269};RandomForestClassifier(n_estimators=5, random_state=269)
RandomForestClassifier;0.8573;0.8616;0.8573;0.8577;0.8472;0.8531;0.8472;0.8486;0.85;0.8563;0.85;0.8487;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 315};RandomForestClassifier(n_estimators=5, random_state=315)
KNeighborsClassifier;0.8472;0.8544;0.8472;0.8477;0.8194;0.8252;0.8194;0.8216;0.8333;0.8413;0.8333;0.834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8349;0.8458;0.8349;0.8343;0.8681;0.8819;0.8681;0.8709;0.8333;0.8413;0.8333;0.834;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8241;0.8334;0.8241;0.8258;0.8889;0.8883;0.8889;0.8885;0.8333;0.8428;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 334, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=334)
KNeighborsClassifier;0.8395;0.8508;0.8395;0.8392;0.7847;0.7985;0.7847;0.7885;0.8333;0.8448;0.8333;0.8329;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8233;0.8303;0.8233;0.8247;0.8333;0.841;0.8333;0.8359;0.8333;0.8565;0.8333;0.8324;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 694, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=694)
KNeighborsClassifier;0.8518;0.859;0.8518;0.8529;0.8194;0.8305;0.8194;0.8209;0.8333;0.8431;0.8333;0.8323;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8317;0.844;0.8317;0.8319;0.8819;0.8826;0.8819;0.8814;0.8333;0.838;0.8333;0.8317;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8311;0.837;0.8311;0.831;0.8889;0.8879;0.8889;0.888;0.8333;0.8338;0.8333;0.8312;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8643;0.8689;0.8643;0.8649;0.8542;0.8586;0.8542;0.8549;0.8167;0.8337;0.8167;0.82;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 315};RandomForestClassifier(n_estimators=5, random_state=315)
KNeighborsClassifier;0.8402;0.8514;0.8402;0.841;0.8403;0.8497;0.8403;0.8431;0.8167;0.8373;0.8167;0.8191;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8234;0.831;0.8234;0.8234;0.8403;0.8493;0.8403;0.8403;0.8167;0.8273;0.8167;0.817;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
LogisticRegression;0.8163;0.8246;0.8163;0.8178;0.7778;0.7838;0.7778;0.7799;0.7833;0.782;0.7833;0.7813;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8195;0.8277;0.8195;0.8204;0.7431;0.7569;0.7431;0.7474;0.7833;0.7847;0.7833;0.7786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8125;0.8209;0.8125;0.8139;0.7847;0.789;0.7847;0.7858;0.7833;0.7847;0.7833;0.7786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8132;0.8237;0.8132;0.814;0.7917;0.7931;0.7917;0.792;0.7833;0.7847;0.7833;0.7786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8203;0.8285;0.8203;0.8212;0.75;0.7667;0.75;0.7547;0.7833;0.7847;0.7833;0.7786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8132;0.8224;0.8132;0.8143;0.7847;0.7845;0.7847;0.7846;0.7833;0.7847;0.7833;0.7786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8117;0.8182;0.8117;0.8131;0.8333;0.8351;0.8333;0.834;0.7833;0.7847;0.7833;0.7786;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8186;0.8275;0.8186;0.82;0.7569;0.7757;0.7569;0.7622;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8055;0.815;0.8055;0.8069;0.8611;0.8628;0.8611;0.86;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8118;0.819;0.8118;0.813;0.8056;0.8129;0.8056;0.8065;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8079;0.8144;0.8079;0.8089;0.8472;0.8628;0.8472;0.8485;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8118;0.8196;0.8118;0.8131;0.7986;0.8055;0.7986;0.8;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8063;0.8142;0.8063;0.8067;0.8542;0.8622;0.8542;0.8559;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8094;0.8172;0.8094;0.8107;0.8333;0.8411;0.8333;0.8352;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.811;0.819;0.811;0.8129;0.8125;0.8208;0.8125;0.8139;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8086;0.8152;0.8086;0.8101;0.8333;0.8422;0.8333;0.8337;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8126;0.8197;0.8126;0.8138;0.7917;0.7973;0.7917;0.7937;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8078;0.815;0.8078;0.8094;0.8333;0.8495;0.8333;0.8353;0.7833;0.7845;0.7833;0.7771;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
LogisticRegression;0.8102;0.8196;0.8102;0.8115;0.8194;0.8233;0.8194;0.8207;0.7833;0.7845;0.7833;0.7766;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8132;0.8215;0.8132;0.8141;0.7917;0.8019;0.7917;0.7948;0.7833;0.7845;0.7833;0.7766;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8064;0.8142;0.8064;0.8081;0.8542;0.8557;0.8542;0.8548;0.7667;0.7658;0.7667;0.7633;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8102;0.819;0.8102;0.8114;0.8125;0.8115;0.8125;0.8115;0.7667;0.7658;0.7667;0.7633;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8125;0.8194;0.8125;0.8135;0.8125;0.821;0.8125;0.8134;0.7667;0.7635;0.7667;0.7607;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.804;0.812;0.804;0.8046;0.8542;0.8585;0.8542;0.8534;0.7667;0.7635;0.7667;0.7607;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8071;0.8157;0.8071;0.8089;0.8472;0.852;0.8472;0.8484;0.7667;0.7687;0.7667;0.7604;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8164;0.8227;0.8164;0.8173;0.7708;0.7899;0.7708;0.774;0.7667;0.7687;0.7667;0.7604;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8125;0.8205;0.8125;0.8136;0.8194;0.8277;0.8194;0.8207;0.7667;0.7687;0.7667;0.7604;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.811;0.8187;0.811;0.8124;0.8194;0.8389;0.8194;0.8215;0.7667;0.7687;0.7667;0.7604;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 338, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=338)"
LogisticRegression;0.8148;0.8244;0.8148;0.8161;0.7986;0.8063;0.7986;0.7997;0.7667;0.7687;0.7667;0.7604;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 628, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=628)"
LogisticRegression;0.8063;0.8156;0.8063;0.8083;0.8542;0.8562;0.8542;0.8539;0.75;0.749;0.75;0.7452;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 750, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=750)"
