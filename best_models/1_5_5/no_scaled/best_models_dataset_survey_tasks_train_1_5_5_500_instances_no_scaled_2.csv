Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.811;0.8212;0.811;0.8109;0.8403;0.8401;0.8403;0.8401;0.8833;0.8873;0.8833;0.8826;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.7985;0.8127;0.7985;0.7993;0.8681;0.8685;0.8681;0.8682;0.8833;0.8873;0.8833;0.8826;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
MLPClassifier;0.7955;0.8035;0.7955;0.7939;0.8264;0.8308;0.8264;0.827;0.8833;0.8873;0.8833;0.8826;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
MLPClassifier;0.811;0.8218;0.811;0.8104;0.8681;0.8699;0.8681;0.8684;0.8833;0.8966;0.8833;0.8819;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.8132;0.822;0.8132;0.813;0.8542;0.8654;0.8542;0.8545;0.8667;0.8675;0.8667;0.8656;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
MLPClassifier;0.7879;0.7998;0.7879;0.788;0.875;0.8758;0.875;0.8752;0.8667;0.8736;0.8667;0.865;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
RandomForestClassifier;0.8603;0.8631;0.8603;0.8604;0.9028;0.9094;0.9028;0.9019;0.8667;0.8851;0.8667;0.864;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 813};RandomForestClassifier(n_estimators=10, random_state=813)
MLPClassifier;0.8118;0.827;0.8118;0.8103;0.8194;0.8222;0.8194;0.8201;0.85;0.8497;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.8087;0.8188;0.8087;0.8076;0.875;0.8803;0.875;0.875;0.85;0.8497;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
MLPClassifier;0.8094;0.8209;0.8094;0.809;0.8472;0.8481;0.8472;0.847;0.85;0.8497;0.85;0.8495;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
MLPClassifier;0.8248;0.8345;0.8248;0.8248;0.8264;0.8272;0.8264;0.8264;0.85;0.8565;0.85;0.8493;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
DecisionTreeClassifier;0.8642;0.8669;0.8642;0.864;0.875;0.8779;0.875;0.8754;0.85;0.855;0.85;0.8493;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
MLPClassifier;0.7877;0.8091;0.7877;0.7878;0.9236;0.9248;0.9236;0.9233;0.85;0.858;0.85;0.8492;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.8011;0.8132;0.8011;0.8008;0.7847;0.7853;0.7847;0.7842;0.85;0.858;0.85;0.8492;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
MLPClassifier;0.7855;0.8015;0.7855;0.7846;0.8889;0.8907;0.8889;0.8891;0.85;0.858;0.85;0.8492;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
MLPClassifier;0.7979;0.8115;0.7979;0.7965;0.8611;0.863;0.8611;0.8612;0.85;0.8524;0.85;0.8488;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
DecisionTreeClassifier;0.8519;0.8548;0.8519;0.8516;0.8403;0.8421;0.8403;0.8395;0.85;0.8526;0.85;0.8487;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=986)
KNeighborsClassifier;0.801;0.8079;0.801;0.801;0.9236;0.9246;0.9236;0.9236;0.85;0.8699;0.85;0.8481;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8557;0.8572;0.8557;0.8554;0.8611;0.8633;0.8611;0.8617;0.85;0.8599;0.85;0.8473;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
MLPClassifier;0.784;0.8026;0.784;0.7819;0.8264;0.8296;0.8264;0.8253;0.85;0.8607;0.85;0.8472;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
RandomForestClassifier;0.8673;0.8705;0.8673;0.8672;0.875;0.878;0.875;0.8746;0.85;0.8592;0.85;0.847;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 618};RandomForestClassifier(n_estimators=10, random_state=618)
DecisionTreeClassifier;0.8619;0.8643;0.8619;0.8618;0.8403;0.847;0.8403;0.8404;0.85;0.8592;0.85;0.847;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=133)
RandomForestClassifier;0.8727;0.8762;0.8727;0.8724;0.8125;0.8188;0.8125;0.8123;0.85;0.8745;0.85;0.8457;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 618};RandomForestClassifier(n_estimators=10, random_state=618)
RandomForestClassifier;0.8626;0.8651;0.8626;0.8625;0.8542;0.8569;0.8542;0.8539;0.85;0.8745;0.85;0.8457;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 119};RandomForestClassifier(n_estimators=10, random_state=119)
RandomForestClassifier;0.8719;0.8758;0.8719;0.8717;0.8819;0.8823;0.8819;0.8821;0.85;0.8745;0.85;0.8457;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 618};RandomForestClassifier(n_estimators=10, random_state=618)
RandomForestClassifier;0.8572;0.8595;0.8572;0.8564;0.8958;0.8962;0.8958;0.896;0.85;0.8745;0.85;0.8457;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 618};RandomForestClassifier(n_estimators=10, random_state=618)
RandomForestClassifier;0.8696;0.8726;0.8696;0.8691;0.8333;0.8367;0.8333;0.8301;0.85;0.8745;0.85;0.8457;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 813};RandomForestClassifier(n_estimators=10, random_state=813)
RandomForestClassifier;0.8712;0.8731;0.8712;0.8708;0.8611;0.8625;0.8611;0.8612;0.85;0.8745;0.85;0.8457;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 813};RandomForestClassifier(n_estimators=20, random_state=813)
RandomForestClassifier;0.8689;0.874;0.8689;0.8684;0.8542;0.8545;0.8542;0.8536;0.85;0.8726;0.85;0.8451;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 618};RandomForestClassifier(n_estimators=20, random_state=618)
RandomForestClassifier;0.8665;0.8692;0.8665;0.8663;0.8958;0.8962;0.8958;0.8958;0.85;0.8726;0.85;0.8451;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 813};RandomForestClassifier(n_estimators=20, random_state=813)
RandomForestClassifier;0.8611;0.8644;0.8611;0.8609;0.8958;0.9001;0.8958;0.8945;0.85;0.8726;0.85;0.8451;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 119};RandomForestClassifier(n_estimators=20, random_state=119)
KNeighborsClassifier;0.811;0.8185;0.811;0.8103;0.8472;0.8476;0.8472;0.8474;0.85;0.8726;0.85;0.8451;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8055;0.8173;0.8055;0.8048;0.8403;0.8417;0.8403;0.8403;0.8333;0.8372;0.8333;0.8339;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.7979;0.8125;0.7979;0.7975;0.8403;0.8378;0.8403;0.8381;0.8333;0.8331;0.8333;0.8329;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
DecisionTreeClassifier;0.8635;0.8653;0.8635;0.863;0.8333;0.8338;0.8333;0.833;0.8333;0.8374;0.8333;0.8328;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
DecisionTreeClassifier;0.8658;0.8673;0.8658;0.8657;0.8194;0.8237;0.8194;0.8198;0.8333;0.8374;0.8333;0.8328;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8549;0.8586;0.8549;0.8545;0.8194;0.8194;0.8194;0.8193;0.8333;0.8383;0.8333;0.8327;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=84)
DecisionTreeClassifier;0.8642;0.8677;0.8642;0.8637;0.8611;0.8644;0.8611;0.8612;0.8333;0.8565;0.8333;0.8324;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
RandomForestClassifier;0.8664;0.8699;0.8664;0.8662;0.8333;0.8361;0.8333;0.833;0.8333;0.8417;0.8333;0.832;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 119};RandomForestClassifier(n_estimators=10, random_state=119)
KNeighborsClassifier;0.8125;0.82;0.8125;0.8105;0.8403;0.854;0.8403;0.8376;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.821;0.8262;0.821;0.8206;0.8264;0.8357;0.8264;0.8256;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8233;0.8293;0.8233;0.823;0.8542;0.8633;0.8542;0.8519;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8179;0.8258;0.8179;0.8167;0.8056;0.8279;0.8056;0.8005;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8016;0.8121;0.8016;0.7998;0.9097;0.9116;0.9097;0.9099;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8202;0.8245;0.8202;0.8194;0.8333;0.8495;0.8333;0.8323;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8094;0.8141;0.8094;0.8079;0.8333;0.8437;0.8333;0.835;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8086;0.8163;0.8086;0.8077;0.8681;0.8853;0.8681;0.8681;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8132;0.8179;0.8132;0.8121;0.8403;0.851;0.8403;0.8399;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8187;0.8257;0.8187;0.8178;0.8681;0.8747;0.8681;0.8678;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8156;0.8218;0.8156;0.8147;0.8542;0.8591;0.8542;0.8537;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8271;0.8312;0.8271;0.8262;0.7847;0.784;0.7847;0.7829;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8178;0.8243;0.8178;0.8169;0.8542;0.8559;0.8542;0.8537;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8256;0.8322;0.8256;0.8249;0.7917;0.8023;0.7917;0.7859;0.8333;0.8535;0.8333;0.8317;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8627;0.8643;0.8627;0.8624;0.8819;0.886;0.8819;0.8816;0.8333;0.844;0.8333;0.8311;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8565;0.8602;0.8565;0.8566;0.8681;0.8688;0.8681;0.8676;0.8333;0.844;0.8333;0.8311;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
RandomForestClassifier;0.8627;0.865;0.8627;0.8625;0.8819;0.883;0.8819;0.8819;0.8333;0.844;0.8333;0.8311;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 119};RandomForestClassifier(n_estimators=20, random_state=119)
RandomForestClassifier;0.8526;0.8551;0.8526;0.8523;0.9028;0.9045;0.9028;0.9028;0.8333;0.8587;0.8333;0.8299;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 813};RandomForestClassifier(n_estimators=10, random_state=813)
DecisionTreeClassifier;0.8518;0.8551;0.8518;0.8511;0.9167;0.9166;0.9167;0.9164;0.8333;0.8587;0.8333;0.8299;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
RandomForestClassifier;0.8781;0.8814;0.8781;0.8782;0.8125;0.8207;0.8125;0.8105;0.8333;0.8587;0.8333;0.8299;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 813};RandomForestClassifier(n_estimators=20, random_state=813)
RandomForestClassifier;0.8527;0.8551;0.8527;0.8524;0.9375;0.9388;0.9375;0.9377;0.8333;0.8587;0.8333;0.8299;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 618};RandomForestClassifier(n_estimators=20, random_state=618)
MLPClassifier;0.7854;0.809;0.7854;0.785;0.8264;0.8315;0.8264;0.824;0.8333;0.8594;0.8333;0.8298;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
RandomForestClassifier;0.8527;0.8563;0.8527;0.8525;0.9167;0.9196;0.9167;0.9163;0.8333;0.8594;0.8333;0.8298;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 119};RandomForestClassifier(n_estimators=10, random_state=119)
RandomForestClassifier;0.8642;0.8693;0.8642;0.864;0.8611;0.8616;0.8611;0.8612;0.8333;0.8581;0.8333;0.8296;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 618};RandomForestClassifier(n_estimators=20, random_state=618)
RandomForestClassifier;0.8711;0.8766;0.8711;0.8709;0.8264;0.8413;0.8264;0.8274;0.8333;0.8581;0.8333;0.8296;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 119};RandomForestClassifier(n_estimators=20, random_state=119)
RandomForestClassifier;0.8673;0.8703;0.8673;0.8671;0.8611;0.863;0.8611;0.8609;0.8333;0.8581;0.8333;0.8296;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 119};RandomForestClassifier(n_estimators=20, random_state=119)
RandomForestClassifier;0.8526;0.8556;0.8526;0.8524;0.8264;0.8376;0.8264;0.8263;0.8333;0.8486;0.8333;0.8291;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 618};RandomForestClassifier(n_estimators=10, random_state=618)
DecisionTreeClassifier;0.8542;0.8581;0.8542;0.8541;0.875;0.8765;0.875;0.875;0.8333;0.8458;0.8333;0.8285;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
RandomForestClassifier;0.8704;0.8729;0.8704;0.8706;0.8542;0.8549;0.8542;0.8544;0.8333;0.8648;0.8333;0.8269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 618};RandomForestClassifier(n_estimators=20, random_state=618)
RandomForestClassifier;0.8712;0.8739;0.8712;0.8711;0.8611;0.8638;0.8611;0.8613;0.8333;0.8648;0.8333;0.8269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 813};RandomForestClassifier(n_estimators=10, random_state=813)
RandomForestClassifier;0.8665;0.8689;0.8665;0.8663;0.8333;0.8369;0.8333;0.8333;0.8333;0.8648;0.8333;0.8269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 119};RandomForestClassifier(n_estimators=10, random_state=119)
DecisionTreeClassifier;0.8535;0.858;0.8535;0.8527;0.8958;0.897;0.8958;0.8962;0.8167;0.8172;0.8167;0.8166;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=84)
KNeighborsClassifier;0.821;0.8281;0.821;0.8203;0.8125;0.8267;0.8125;0.8101;0.8167;0.8339;0.8167;0.8163;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8071;0.8167;0.8071;0.8067;0.8542;0.8589;0.8542;0.8545;0.8167;0.8339;0.8167;0.8163;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8241;0.8301;0.8241;0.8236;0.8472;0.8501;0.8472;0.8473;0.8167;0.8339;0.8167;0.8163;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8018;0.8138;0.8018;0.7996;0.8542;0.8604;0.8542;0.8545;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
MLPClassifier;0.757;0.7885;0.757;0.7573;0.8889;0.8978;0.8889;0.8895;0.8167;0.8175;0.8167;0.816;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.8256;0.8344;0.8256;0.8251;0.8264;0.8267;0.8264;0.8242;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
DecisionTreeClassifier;0.8565;0.8582;0.8565;0.8562;0.8681;0.8704;0.8681;0.8684;0.8167;0.8238;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8557;0.8575;0.8557;0.8555;0.8611;0.8626;0.8611;0.8611;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8581;0.8609;0.8581;0.8578;0.8681;0.8688;0.8681;0.8676;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
MLPClassifier;0.7879;0.802;0.7879;0.7865;0.8403;0.8457;0.8403;0.8414;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
MLPClassifier;0.797;0.8138;0.797;0.7965;0.8958;0.8977;0.8958;0.8962;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
MLPClassifier;0.8132;0.826;0.8132;0.8137;0.8681;0.8686;0.8681;0.8678;0.8167;0.8172;0.8167;0.8155;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
KNeighborsClassifier;0.8102;0.8207;0.8102;0.8092;0.8681;0.8708;0.8681;0.8674;0.8167;0.8433;0.8167;0.8147;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8179;0.8238;0.8179;0.8172;0.8194;0.8241;0.8194;0.8169;0.8167;0.8433;0.8167;0.8147;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8294;0.8357;0.8294;0.8286;0.8194;0.82;0.8194;0.8196;0.8167;0.8433;0.8167;0.8147;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8086;0.8143;0.8086;0.8079;0.8819;0.8867;0.8819;0.8814;0.8167;0.8521;0.8167;0.8139;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.814;0.82;0.814;0.8128;0.8819;0.8872;0.8819;0.8819;0.8167;0.8521;0.8167;0.8139;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8287;0.8321;0.8287;0.8281;0.7917;0.7958;0.7917;0.7913;0.8167;0.8521;0.8167;0.8139;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8248;0.8312;0.8248;0.824;0.8472;0.8475;0.8472;0.8469;0.8167;0.8521;0.8167;0.8139;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8519;0.8562;0.8519;0.852;0.8889;0.8893;0.8889;0.8889;0.8167;0.8323;0.8167;0.8133;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 813};RandomForestClassifier(n_estimators=5, random_state=813)
RandomForestClassifier;0.8642;0.8688;0.8642;0.864;0.8542;0.8605;0.8542;0.8537;0.8167;0.8487;0.8167;0.8112;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 618};RandomForestClassifier(n_estimators=10, random_state=618)
RandomForestClassifier;0.8688;0.8707;0.8688;0.8686;0.8264;0.8265;0.8264;0.8264;0.8167;0.8487;0.8167;0.8112;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 813};RandomForestClassifier(n_estimators=20, random_state=813)
RandomForestClassifier;0.8641;0.8676;0.8641;0.8639;0.875;0.8812;0.875;0.8739;0.8167;0.8487;0.8167;0.8112;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 119};RandomForestClassifier(n_estimators=20, random_state=119)
RandomForestClassifier;0.8688;0.8728;0.8688;0.8687;0.8958;0.8974;0.8958;0.8958;0.8167;0.8487;0.8167;0.8112;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 119};RandomForestClassifier(n_estimators=20, random_state=119)
RandomForestClassifier;0.858;0.86;0.858;0.8579;0.875;0.875;0.875;0.8749;0.8167;0.8487;0.8167;0.8112;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 813};RandomForestClassifier(n_estimators=20, random_state=813)
KNeighborsClassifier;0.8086;0.813;0.8086;0.807;0.8333;0.8356;0.8333;0.8334;0.8;0.8178;0.8;0.8;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8102;0.8178;0.8102;0.8097;0.8611;0.8756;0.8611;0.8607;0.8;0.8442;0.8;0.7993;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.8141;0.8247;0.8141;0.8131;0.7778;0.784;0.7778;0.7781;0.8;0.8012;0.8;0.7981;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 933, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=933)
MLPClassifier;0.7762;0.7936;0.7762;0.774;0.8333;0.8391;0.8333;0.8312;0.8;0.802;0.8;0.798;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 586, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=586)
MLPClassifier;0.7762;0.7858;0.7762;0.7756;0.8264;0.8453;0.8264;0.8241;0.8;0.8327;0.8;0.798;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
DecisionTreeClassifier;0.8642;0.8694;0.8642;0.8636;0.7361;0.7352;0.7361;0.7355;0.8;0.8073;0.8;0.7965;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=986)
DecisionTreeClassifier;0.8542;0.8582;0.8542;0.8537;0.8472;0.8516;0.8472;0.846;0.8;0.8089;0.8;0.7958;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
KNeighborsClassifier;0.8372;0.8449;0.8372;0.8364;0.8611;0.8675;0.8611;0.8622;0.8;0.8439;0.8;0.7956;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8156;0.82;0.8156;0.8135;0.8264;0.8322;0.8264;0.8259;0.7833;0.8135;0.7833;0.7819;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8565;0.8612;0.8565;0.8563;0.7569;0.7583;0.7569;0.7573;0.7833;0.783;0.7833;0.7809;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8535;0.8567;0.8535;0.8532;0.9167;0.9175;0.9167;0.9169;0.7833;0.792;0.7833;0.7771;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8495;0.854;0.8495;0.8494;0.9097;0.9103;0.9097;0.9091;0.7833;0.792;0.7833;0.7771;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
KNeighborsClassifier;0.8248;0.8318;0.8248;0.8237;0.7986;0.8147;0.7986;0.8008;0.7667;0.7966;0.7667;0.7644;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8627;0.8641;0.8627;0.8623;0.7986;0.7991;0.7986;0.7976;0.7667;0.7657;0.7667;0.7639;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8642;0.8668;0.8642;0.8638;0.8264;0.8307;0.8264;0.8243;0.7667;0.7658;0.7667;0.7633;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8527;0.8577;0.8527;0.8524;0.8403;0.8422;0.8403;0.8405;0.7667;0.7713;0.7667;0.7623;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
DecisionTreeClassifier;0.8604;0.8629;0.8604;0.8598;0.8472;0.8479;0.8472;0.8471;0.7667;0.7778;0.7667;0.7582;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
DecisionTreeClassifier;0.8541;0.8566;0.8541;0.8536;0.8611;0.8618;0.8611;0.8603;0.75;0.7468;0.75;0.7471;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
DecisionTreeClassifier;0.8611;0.8643;0.8611;0.8611;0.8056;0.8072;0.8056;0.8052;0.75;0.7468;0.75;0.7471;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 84};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=84)
DecisionTreeClassifier;0.8511;0.8544;0.8511;0.8504;0.8472;0.8492;0.8472;0.845;0.75;0.7489;0.75;0.743;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
DecisionTreeClassifier;0.8603;0.8651;0.8603;0.8598;0.8472;0.8476;0.8472;0.8459;0.7333;0.7306;0.7333;0.725;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 986};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=986)
DecisionTreeClassifier;0.8611;0.8638;0.8611;0.8608;0.7986;0.8018;0.7986;0.7965;0.7333;0.7311;0.7333;0.7243;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 133};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=133)
SVC;0.6326;0.7137;0.6326;0.6222;0.7361;0.7625;0.7361;0.7374;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 664};SVC(C=10, random_state=664)
SVC;0.6258;0.7044;0.6258;0.6125;0.8194;0.8352;0.8194;0.8209;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 819};SVC(C=10, random_state=819)
SVC;0.6304;0.7078;0.6304;0.6207;0.7361;0.7874;0.7361;0.7308;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 819};SVC(C=10, random_state=819)
SVC;0.6304;0.7087;0.6304;0.6197;0.75;0.7763;0.75;0.7481;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 664};SVC(C=10, random_state=664)
SVC;0.6319;0.7106;0.6319;0.6205;0.7847;0.8072;0.7847;0.787;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 664};SVC(C=10, random_state=664)
SVC;0.6312;0.7074;0.6312;0.6216;0.75;0.789;0.75;0.742;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 819};SVC(C=10, random_state=819)
SVC;0.635;0.7122;0.635;0.6248;0.7014;0.7556;0.7014;0.6928;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 664};SVC(C=10, random_state=664)
SVC;0.6381;0.7134;0.6381;0.6263;0.7292;0.7737;0.7292;0.7335;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 523};SVC(C=10, random_state=523)
SVC;0.6451;0.7244;0.6451;0.6351;0.6528;0.6894;0.6528;0.6485;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 819};SVC(C=10, random_state=819)
SVC;0.6296;0.707;0.6296;0.6182;0.75;0.7914;0.75;0.7524;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 819};SVC(C=10, random_state=819)
SVC;0.6311;0.7058;0.6311;0.6194;0.7708;0.803;0.7708;0.7667;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 523};SVC(C=10, random_state=523)
SVC;0.6312;0.7097;0.6312;0.62;0.75;0.7928;0.75;0.7438;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 523};SVC(C=10, random_state=523)
SVC;0.6319;0.7114;0.6319;0.6203;0.75;0.7877;0.75;0.7456;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 523};SVC(C=10, random_state=523)
SVC;0.6342;0.7141;0.6342;0.623;0.7292;0.7541;0.7292;0.7301;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 523};SVC(C=10, random_state=523)
SVC;0.6296;0.7093;0.6296;0.6194;0.7569;0.7946;0.7569;0.748;0.7167;0.7451;0.7167;0.7196;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 664};SVC(C=10, random_state=664)
MLPClassifier;0.818;0.8297;0.818;0.8182;0.7708;0.7866;0.7708;0.7676;0.7167;0.7307;0.7167;0.7179;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
SVC;0.6296;0.7092;0.6296;0.6204;0.7292;0.75;0.7292;0.7269;0.7167;0.7212;0.7167;0.7137;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 819};SVC(C=0.1, kernel='linear', random_state=819)
MLPClassifier;0.7979;0.8088;0.7979;0.7984;0.8403;0.8422;0.8403;0.8399;0.7167;0.7174;0.7167;0.7108;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 517, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=517)
SVC;0.6319;0.7086;0.6319;0.6227;0.7292;0.7664;0.7292;0.7186;0.7;0.7014;0.7;0.6949;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 523};SVC(C=0.1, kernel='linear', random_state=523)
SVC;0.6342;0.7136;0.6342;0.6247;0.7014;0.714;0.7014;0.6954;0.7;0.7014;0.7;0.6949;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 819};SVC(C=0.1, kernel='linear', random_state=819)
SVC;0.6266;0.705;0.6266;0.6153;0.7361;0.7616;0.7361;0.7358;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 664};SVC(C=0.1, kernel='linear', random_state=664)
SVC;0.6319;0.7083;0.6319;0.6212;0.6944;0.7069;0.6944;0.6919;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 523};SVC(C=0.1, kernel='linear', random_state=523)
SVC;0.6289;0.7057;0.6289;0.619;0.7569;0.7786;0.7569;0.7532;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 523};SVC(C=0.1, kernel='linear', random_state=523)
SVC;0.6289;0.7104;0.6289;0.618;0.7292;0.7449;0.7292;0.7276;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 664};SVC(C=0.1, kernel='linear', random_state=664)
SVC;0.6389;0.7141;0.6389;0.6303;0.6736;0.715;0.6736;0.6689;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 664};SVC(C=0.1, kernel='linear', random_state=664)
SVC;0.6358;0.7123;0.6358;0.6257;0.7708;0.7897;0.7708;0.7688;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 664};SVC(C=0.1, kernel='linear', random_state=664)
SVC;0.6343;0.711;0.6343;0.6235;0.75;0.7726;0.75;0.7509;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 664};SVC(C=0.1, kernel='linear', random_state=664)
SVC;0.6335;0.7079;0.6335;0.6224;0.7292;0.7426;0.7292;0.7322;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 819};SVC(C=0.1, kernel='linear', random_state=819)
SVC;0.6366;0.7119;0.6366;0.6283;0.6875;0.7361;0.6875;0.689;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 819};SVC(C=0.1, kernel='linear', random_state=819)
SVC;0.6312;0.7063;0.6312;0.621;0.7639;0.7936;0.7639;0.7646;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 819};SVC(C=0.1, kernel='linear', random_state=819)
SVC;0.6389;0.7133;0.6389;0.6279;0.6875;0.7113;0.6875;0.6885;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 523};SVC(C=0.1, kernel='linear', random_state=523)
SVC;0.6336;0.7108;0.6336;0.6226;0.7014;0.7372;0.7014;0.7043;0.6833;0.6822;0.6833;0.6757;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 523};SVC(C=0.1, kernel='linear', random_state=523)
LogisticRegression;0.6844;0.6979;0.6844;0.6824;0.75;0.7592;0.75;0.7467;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.7021;0.717;0.7021;0.7011;0.6319;0.6349;0.6319;0.6241;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6937;0.7051;0.6937;0.6918;0.6944;0.7181;0.6944;0.6924;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.696;0.7084;0.696;0.6935;0.6597;0.6726;0.6597;0.6551;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6844;0.698;0.6844;0.6825;0.7778;0.7939;0.7778;0.7756;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.6951;0.706;0.6951;0.6934;0.7014;0.7044;0.7014;0.6995;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6922;0.7032;0.6922;0.6899;0.7292;0.73;0.7292;0.7279;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6929;0.7077;0.6929;0.6913;0.6597;0.6641;0.6597;0.6582;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.6867;0.6999;0.6867;0.6847;0.7292;0.736;0.7292;0.7286;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.696;0.7085;0.696;0.6943;0.6875;0.6963;0.6875;0.6848;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.7029;0.7205;0.7029;0.7018;0.6389;0.638;0.6389;0.6324;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.6936;0.705;0.6936;0.6915;0.6667;0.6865;0.6667;0.6649;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.7014;0.7134;0.7014;0.7002;0.6458;0.6807;0.6458;0.6409;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.6913;0.704;0.6913;0.69;0.7014;0.7102;0.7014;0.7006;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.6952;0.7083;0.6952;0.6944;0.7014;0.7089;0.7014;0.6981;0.65;0.6456;0.65;0.6459;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.6952;0.7075;0.6952;0.6932;0.6736;0.6965;0.6736;0.6728;0.65;0.65;0.65;0.6458;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.6898;0.7066;0.6898;0.6881;0.7014;0.7395;0.7014;0.7015;0.65;0.65;0.65;0.6458;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.6921;0.707;0.6921;0.6906;0.6736;0.6991;0.6736;0.6737;0.6333;0.6271;0.6333;0.6269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.6882;0.6996;0.6882;0.6862;0.7222;0.7395;0.7222;0.7184;0.6333;0.6271;0.6333;0.6269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6951;0.7052;0.6951;0.6934;0.6806;0.6958;0.6806;0.6802;0.6333;0.6271;0.6333;0.6269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.689;0.7032;0.689;0.687;0.7431;0.7611;0.7431;0.7418;0.6333;0.6271;0.6333;0.6269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6868;0.7004;0.6868;0.6849;0.6944;0.6978;0.6944;0.6926;0.6333;0.6271;0.6333;0.6269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.6912;0.707;0.6912;0.6887;0.7292;0.7305;0.7292;0.7281;0.6333;0.6271;0.6333;0.6269;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.686;0.6971;0.686;0.6847;0.7083;0.7164;0.7083;0.708;0.6333;0.6306;0.6333;0.6263;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6891;0.7039;0.6891;0.6871;0.7153;0.7177;0.7153;0.7096;0.6333;0.6306;0.6333;0.6263;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 950, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=950)"
LogisticRegression;0.6915;0.7024;0.6915;0.6902;0.6944;0.7123;0.6944;0.6915;0.6333;0.6306;0.6333;0.6263;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.703;0.7182;0.703;0.7015;0.6736;0.6858;0.6736;0.6738;0.6333;0.6306;0.6333;0.6263;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.6921;0.7047;0.6921;0.6912;0.7153;0.7374;0.7153;0.7146;0.6333;0.6306;0.6333;0.6263;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 461, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=461)"
LogisticRegression;0.696;0.7076;0.696;0.6947;0.7014;0.7;0.7014;0.6926;0.6333;0.6306;0.6333;0.6263;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
LogisticRegression;0.6991;0.7089;0.6991;0.6972;0.7083;0.7134;0.7083;0.7088;0.6333;0.6306;0.6333;0.6263;smote;500;no_scaled;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 156, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=156)"
