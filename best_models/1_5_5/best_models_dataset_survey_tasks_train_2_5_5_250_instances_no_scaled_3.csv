Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8405;0.8482;0.8405;0.8416;0.9275;0.9268;0.9275;0.9269;0.8833;0.8874;0.8833;0.883;0.947;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 816};RandomForestClassifier(n_estimators=10, random_state=816)
RandomForestClassifier;0.8551;0.8592;0.8551;0.8539;0.8696;0.8769;0.8696;0.8714;0.8833;0.8903;0.8833;0.8808;0.9478;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 226};RandomForestClassifier(n_estimators=20, random_state=226)
DecisionTreeClassifier;0.8422;0.8499;0.8422;0.8422;0.7971;0.7958;0.7971;0.7955;0.8667;0.873;0.8667;0.8675;0.9283;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8357;0.8472;0.8357;0.8373;0.8406;0.8523;0.8406;0.8439;0.8667;0.8806;0.8667;0.8675;0.9275;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
DecisionTreeClassifier;0.8344;0.8444;0.8344;0.8354;0.7971;0.7971;0.7971;0.7971;0.8667;0.8816;0.8667;0.867;0.9365;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=726)
DecisionTreeClassifier;0.8277;0.837;0.8277;0.8291;0.8261;0.8307;0.8261;0.8255;0.8667;0.8816;0.8667;0.867;0.9311;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=825)
DecisionTreeClassifier;0.839;0.8473;0.839;0.8393;0.8551;0.8651;0.8551;0.8552;0.8667;0.8692;0.8667;0.8669;0.9253;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
RandomForestClassifier;0.8582;0.8637;0.8582;0.8584;0.8406;0.8556;0.8406;0.8435;0.8667;0.875;0.8667;0.8668;0.9583;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 816};RandomForestClassifier(n_estimators=10, random_state=816)
RandomForestClassifier;0.8599;0.8663;0.8599;0.8597;0.8551;0.8574;0.8551;0.856;0.8667;0.875;0.8667;0.8668;0.9531;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 816};RandomForestClassifier(n_estimators=20, random_state=816)
RandomForestClassifier;0.8679;0.8739;0.8679;0.8688;0.7971;0.8064;0.7971;0.8007;0.8667;0.8699;0.8667;0.8659;0.9573;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 968};RandomForestClassifier(n_estimators=20, random_state=968)
RandomForestClassifier;0.8648;0.8689;0.8648;0.8647;0.7101;0.744;0.7101;0.7131;0.8667;0.8699;0.8667;0.8659;0.9604;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 226};RandomForestClassifier(n_estimators=20, random_state=226)
RandomForestClassifier;0.855;0.8623;0.855;0.8556;0.9275;0.9274;0.9275;0.9272;0.8667;0.8695;0.8667;0.8648;0.9522;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 968};RandomForestClassifier(n_estimators=20, random_state=968)
RandomForestClassifier;0.8696;0.8767;0.8696;0.8701;0.7681;0.7772;0.7681;0.7716;0.8667;0.8695;0.8667;0.8648;0.9586;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 226};RandomForestClassifier(n_estimators=20, random_state=226)
RandomForestClassifier;0.8408;0.8464;0.8408;0.8409;0.942;0.9455;0.942;0.9426;0.8667;0.8695;0.8667;0.8648;0.951;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 226};RandomForestClassifier(n_estimators=10, random_state=226)
RandomForestClassifier;0.8567;0.8638;0.8567;0.8573;0.8551;0.8644;0.8551;0.8577;0.8667;0.8774;0.8667;0.8647;0.9488;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 816};RandomForestClassifier(n_estimators=20, random_state=816)
RandomForestClassifier;0.8374;0.8433;0.8374;0.8375;0.913;0.9149;0.913;0.9137;0.8667;0.8774;0.8667;0.8647;0.9489;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 226};RandomForestClassifier(n_estimators=20, random_state=226)
RandomForestClassifier;0.8422;0.8558;0.8422;0.8427;0.8551;0.853;0.8551;0.853;0.8667;0.8774;0.8667;0.8647;0.9542;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 816};RandomForestClassifier(n_estimators=10, random_state=816)
RandomForestClassifier;0.8551;0.8611;0.8551;0.8562;0.7681;0.8061;0.7681;0.7604;0.8667;0.8833;0.8667;0.8642;0.9563;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 226};RandomForestClassifier(n_estimators=10, random_state=226)
RandomForestClassifier;0.8679;0.8736;0.8679;0.8685;0.8406;0.8442;0.8406;0.8417;0.8667;0.8746;0.8667;0.8624;0.9535;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 816};RandomForestClassifier(n_estimators=20, random_state=816)
RandomForestClassifier;0.8486;0.8571;0.8486;0.849;0.8551;0.8617;0.8551;0.8563;0.85;0.8564;0.85;0.8508;0.9537;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 968};RandomForestClassifier(n_estimators=10, random_state=968)
DecisionTreeClassifier;0.8407;0.8528;0.8407;0.8428;0.7536;0.7506;0.7536;0.7396;0.85;0.8523;0.85;0.8508;0.9301;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 5, 'random_state': 726};DecisionTreeClassifier(max_depth=5, min_samples_leaf=5, random_state=726)
DecisionTreeClassifier;0.8374;0.8462;0.8374;0.8385;0.8696;0.8864;0.8696;0.8724;0.85;0.8564;0.85;0.8508;0.9304;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=726)
DecisionTreeClassifier;0.8277;0.8404;0.8277;0.8293;0.8696;0.8762;0.8696;0.8711;0.85;0.8523;0.85;0.8508;0.9241;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=726)
RandomForestClassifier;0.855;0.8625;0.855;0.8561;0.8551;0.8701;0.8551;0.8581;0.85;0.8564;0.85;0.8508;0.9583;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 816};RandomForestClassifier(n_estimators=5, random_state=816)
DecisionTreeClassifier;0.852;0.8631;0.852;0.8531;0.8406;0.8429;0.8406;0.8415;0.85;0.8523;0.85;0.8508;0.9267;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
DecisionTreeClassifier;0.8229;0.8337;0.8229;0.8241;0.8841;0.8879;0.8841;0.8852;0.85;0.8599;0.85;0.8507;0.9164;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=326)
DecisionTreeClassifier;0.8568;0.8671;0.8568;0.8574;0.7826;0.7923;0.7826;0.7858;0.85;0.8542;0.85;0.8506;0.9332;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=726)
DecisionTreeClassifier;0.8535;0.8618;0.8535;0.8541;0.7826;0.7805;0.7826;0.7813;0.85;0.8542;0.85;0.8506;0.9461;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
RandomForestClassifier;0.8663;0.8709;0.8663;0.8664;0.8116;0.8299;0.8116;0.8156;0.85;0.8623;0.85;0.85;0.955;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 968};RandomForestClassifier(n_estimators=5, random_state=968)
DecisionTreeClassifier;0.8309;0.8394;0.8309;0.8316;0.8406;0.8409;0.8406;0.8405;0.85;0.8565;0.85;0.8493;0.9285;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.8518;0.8576;0.8518;0.8518;0.8261;0.8305;0.8261;0.8272;0.85;0.8565;0.85;0.8493;0.929;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=726)
RandomForestClassifier;0.8583;0.8645;0.8583;0.859;0.8696;0.875;0.8696;0.8702;0.85;0.8505;0.85;0.8489;0.9546;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 226};RandomForestClassifier(n_estimators=20, random_state=226)
RandomForestClassifier;0.8583;0.8645;0.8583;0.8589;0.8841;0.8841;0.8841;0.8841;0.85;0.8563;0.85;0.8487;0.9501;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 968};RandomForestClassifier(n_estimators=20, random_state=968)
RandomForestClassifier;0.8583;0.8622;0.8583;0.8584;0.8841;0.8841;0.8841;0.8841;0.85;0.8563;0.85;0.8487;0.9568;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 968};RandomForestClassifier(n_estimators=20, random_state=968)
RandomForestClassifier;0.8665;0.8752;0.8665;0.867;0.8551;0.8634;0.8551;0.8567;0.85;0.8563;0.85;0.8487;0.9525;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 816};RandomForestClassifier(n_estimators=20, random_state=816)
RandomForestClassifier;0.8566;0.8653;0.8566;0.8575;0.8696;0.8713;0.8696;0.8701;0.85;0.8563;0.85;0.8487;0.9547;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 816};RandomForestClassifier(n_estimators=20, random_state=816)
RandomForestClassifier;0.847;0.8559;0.847;0.8481;0.8986;0.9062;0.8986;0.8979;0.85;0.8563;0.85;0.8487;0.9491;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 226};RandomForestClassifier(n_estimators=20, random_state=226)
RandomForestClassifier;0.8324;0.8441;0.8324;0.8338;0.971;0.9716;0.971;0.971;0.85;0.8563;0.85;0.8487;0.95;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 968};RandomForestClassifier(n_estimators=20, random_state=968)
RandomForestClassifier;0.868;0.874;0.868;0.8677;0.8116;0.8078;0.8116;0.8079;0.85;0.8563;0.85;0.8487;0.9516;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 968};RandomForestClassifier(n_estimators=20, random_state=968)
RandomForestClassifier;0.8551;0.8601;0.8551;0.8556;0.8696;0.8727;0.8696;0.8704;0.85;0.8563;0.85;0.8487;0.9552;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 226};RandomForestClassifier(n_estimators=20, random_state=226)
RandomForestClassifier;0.8519;0.8594;0.8519;0.8526;0.8116;0.8238;0.8116;0.8132;0.85;0.8563;0.85;0.8487;0.9543;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 968};RandomForestClassifier(n_estimators=10, random_state=968)
RandomForestClassifier;0.8535;0.8581;0.8535;0.8539;0.913;0.9188;0.913;0.9124;0.85;0.8556;0.85;0.8471;0.9539;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 816};RandomForestClassifier(n_estimators=10, random_state=816)
LogisticRegression;0.8132;0.8244;0.8132;0.8146;0.8696;0.8763;0.8696;0.8687;0.8333;0.85;0.8333;0.8357;0.9231;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.8245;0.8305;0.8245;0.8258;0.7971;0.8135;0.7971;0.8009;0.8333;0.85;0.8333;0.8357;0.9258;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
SVC;0.6054;0.6268;0.6054;0.6055;0.8696;0.8794;0.8696;0.8697;0.8333;0.8434;0.8333;0.8352;0.7871;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
SVC;0.5926;0.6168;0.5926;0.5918;0.8551;0.8579;0.8551;0.8555;0.8333;0.8434;0.8333;0.8352;0.7828;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
SVC;0.5975;0.6423;0.5975;0.599;0.8261;0.8303;0.8261;0.8271;0.8333;0.8434;0.8333;0.8352;0.7739;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
SVC;0.6361;0.6568;0.6361;0.6357;0.7536;0.7891;0.7536;0.7582;0.8333;0.8434;0.8333;0.8352;0.7885;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
LogisticRegression;0.8084;0.8182;0.8084;0.8088;0.8406;0.8554;0.8406;0.839;0.8333;0.8434;0.8333;0.8352;0.924;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
SVC;0.6071;0.6543;0.6071;0.6037;0.7826;0.8131;0.7826;0.7868;0.8333;0.8434;0.8333;0.8352;0.7881;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
SVC;0.6297;0.639;0.6297;0.6302;0.8696;0.8691;0.8696;0.8685;0.8333;0.8434;0.8333;0.8352;0.7948;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
SVC;0.5844;0.6347;0.5844;0.5786;0.8841;0.914;0.8841;0.8855;0.8333;0.8434;0.8333;0.8352;0.7786;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
SVC;0.5975;0.6493;0.5975;0.5927;0.8841;0.8897;0.8841;0.885;0.8333;0.8434;0.8333;0.8352;0.7806;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
SVC;0.6119;0.6723;0.6119;0.6063;0.7826;0.7933;0.7826;0.786;0.8333;0.8434;0.8333;0.8352;0.7942;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
SVC;0.6135;0.6498;0.6135;0.6117;0.8261;0.8252;0.8261;0.8254;0.8333;0.8434;0.8333;0.8352;0.7867;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
SVC;0.6152;0.6418;0.6152;0.6138;0.8406;0.841;0.8406;0.8405;0.8333;0.8434;0.8333;0.8352;0.7859;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
SVC;0.6135;0.664;0.6135;0.61;0.8116;0.8116;0.8116;0.8116;0.8333;0.8434;0.8333;0.8352;0.7874;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.5926;0.6203;0.5926;0.5806;0.8116;0.8169;0.8116;0.8132;0.8333;0.8434;0.8333;0.8352;0.7895;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.6069;0.6214;0.6069;0.6066;0.913;0.9164;0.913;0.9139;0.8333;0.8434;0.8333;0.8352;0.7809;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.6038;0.6108;0.6038;0.5996;0.913;0.9149;0.913;0.9129;0.8333;0.8434;0.8333;0.8352;0.781;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.6007;0.6112;0.6007;0.5986;0.8116;0.8138;0.8116;0.8095;0.8333;0.8434;0.8333;0.8352;0.7807;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
MLPClassifier;0.8276;0.8436;0.8276;0.8283;0.7681;0.7774;0.7681;0.7691;0.8333;0.8391;0.8333;0.8348;0.942;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
MLPClassifier;0.8086;0.825;0.8086;0.8103;0.8406;0.8489;0.8406;0.843;0.8333;0.8386;0.8333;0.8348;0.9327;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
MLPClassifier;0.8164;0.8307;0.8164;0.817;0.7536;0.76;0.7536;0.7537;0.8333;0.8391;0.8333;0.8348;0.9344;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
DecisionTreeClassifier;0.839;0.8502;0.839;0.8399;0.7971;0.8407;0.7971;0.7986;0.8333;0.8364;0.8333;0.8345;0.938;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=326)
DecisionTreeClassifier;0.8375;0.8487;0.8375;0.8388;0.8696;0.8709;0.8696;0.8694;0.8333;0.8399;0.8333;0.8344;0.9297;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=726)
DecisionTreeClassifier;0.8326;0.8424;0.8326;0.8346;0.7971;0.8027;0.7971;0.7988;0.8333;0.8399;0.8333;0.8344;0.9311;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=326)
DecisionTreeClassifier;0.8261;0.8377;0.8261;0.8279;0.8551;0.8609;0.8551;0.8568;0.8333;0.8388;0.8333;0.8337;0.9315;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
DecisionTreeClassifier;0.8406;0.8489;0.8406;0.8418;0.8551;0.8579;0.8551;0.8555;0.8333;0.8475;0.8333;0.8336;0.9233;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=825)
DecisionTreeClassifier;0.8421;0.8533;0.8421;0.8437;0.8551;0.8581;0.8551;0.8563;0.8333;0.8475;0.8333;0.8336;0.9365;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=326)
MLPClassifier;0.8068;0.824;0.8068;0.808;0.7971;0.8019;0.7971;0.7944;0.8333;0.8354;0.8333;0.833;0.9342;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
RandomForestClassifier;0.8679;0.8753;0.8679;0.8686;0.7681;0.7841;0.7681;0.7731;0.8333;0.8501;0.8333;0.8329;0.9598;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 968};RandomForestClassifier(n_estimators=10, random_state=968)
KNeighborsClassifier;0.7825;0.7874;0.7825;0.7812;0.7971;0.8099;0.7971;0.7986;0.8333;0.8333;0.8333;0.8323;0.9121;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.786;0.7917;0.786;0.783;0.7681;0.7892;0.7681;0.7726;0.8333;0.8333;0.8333;0.8323;0.9146;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7665;0.7755;0.7665;0.7643;0.8696;0.8739;0.8696;0.8696;0.8333;0.8333;0.8333;0.8323;0.91;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.773;0.7797;0.773;0.7724;0.7826;0.7877;0.7826;0.7843;0.8333;0.8333;0.8333;0.8323;0.9177;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7746;0.7893;0.7746;0.7763;0.7681;0.7826;0.7681;0.7724;0.8333;0.8333;0.8333;0.8323;0.9114;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7907;0.7955;0.7907;0.789;0.7971;0.8018;0.7971;0.7973;0.8333;0.8447;0.8333;0.8315;0.9101;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8503;0.8569;0.8503;0.8508;0.8261;0.8313;0.8261;0.8264;0.8333;0.8432;0.8333;0.8313;0.9588;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 226};RandomForestClassifier(n_estimators=10, random_state=226)
MLPClassifier;0.8197;0.8352;0.8197;0.8211;0.7971;0.7986;0.7971;0.7902;0.8333;0.8371;0.8333;0.8307;0.9302;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
DecisionTreeClassifier;0.8454;0.8525;0.8454;0.8457;0.8261;0.8261;0.8261;0.8261;0.8333;0.8366;0.8333;0.8307;0.9412;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=326)
DecisionTreeClassifier;0.831;0.844;0.831;0.8315;0.8261;0.827;0.8261;0.8213;0.8333;0.8486;0.8333;0.8291;0.9225;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=326)
MLPClassifier;0.8133;0.8275;0.8133;0.8146;0.8261;0.8541;0.8261;0.8192;0.8167;0.8448;0.8167;0.8201;0.9312;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
MLPClassifier;0.818;0.8324;0.818;0.8182;0.8261;0.8272;0.8261;0.8264;0.8167;0.8448;0.8167;0.8201;0.9419;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
MLPClassifier;0.8165;0.8258;0.8165;0.8171;0.8696;0.8973;0.8696;0.8712;0.8167;0.8393;0.8167;0.8197;0.9384;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
MLPClassifier;0.8132;0.8244;0.8132;0.8141;0.8261;0.8394;0.8261;0.8276;0.8167;0.8393;0.8167;0.8197;0.9346;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
MLPClassifier;0.8198;0.8277;0.8198;0.8203;0.8261;0.8456;0.8261;0.8293;0.8167;0.8393;0.8167;0.8197;0.9417;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
MLPClassifier;0.8118;0.8252;0.8118;0.8125;0.8261;0.8441;0.8261;0.8289;0.8167;0.8393;0.8167;0.8197;0.9334;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
SVC;0.588;0.6631;0.588;0.5769;0.7536;0.7585;0.7536;0.7552;0.8167;0.8305;0.8167;0.8194;0.7935;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.628;0.6388;0.628;0.6274;0.8261;0.8468;0.8261;0.8295;0.8167;0.8305;0.8167;0.8194;0.7918;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
LogisticRegression;0.8309;0.842;0.8309;0.8306;0.7246;0.7688;0.7246;0.731;0.8167;0.8305;0.8167;0.8194;0.9271;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
SVC;0.5861;0.6266;0.5861;0.5815;0.7826;0.8113;0.7826;0.7838;0.8167;0.8305;0.8167;0.8194;0.7914;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.5827;0.6442;0.5827;0.5713;0.7826;0.7966;0.7826;0.7835;0.8167;0.8305;0.8167;0.8194;0.7855;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 389};SVC(C=1, kernel='linear', probability=True, random_state=389)
SVC;0.5845;0.6433;0.5845;0.5744;0.8406;0.8592;0.8406;0.8419;0.8167;0.8305;0.8167;0.8194;0.7828;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.5991;0.6372;0.5991;0.5981;0.8261;0.8234;0.8261;0.824;0.8167;0.8305;0.8167;0.8194;0.7861;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 389};SVC(C=0.1, kernel='linear', probability=True, random_state=389)
SVC;0.5975;0.6513;0.5975;0.5885;0.7971;0.8211;0.7971;0.8015;0.8167;0.8305;0.8167;0.8194;0.7888;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
MLPClassifier;0.8198;0.8323;0.8198;0.8196;0.7971;0.7995;0.7971;0.7974;0.8167;0.8386;0.8167;0.8194;0.9347;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
SVC;0.6264;0.6566;0.6264;0.6255;0.7971;0.7994;0.7971;0.798;0.8167;0.8305;0.8167;0.8194;0.7969;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
SVC;0.6216;0.6292;0.6216;0.6215;0.8261;0.8411;0.8261;0.8291;0.8167;0.8305;0.8167;0.8194;0.7922;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
SVC;0.6166;0.6596;0.6166;0.6151;0.7971;0.8149;0.7971;0.796;0.8167;0.8305;0.8167;0.8194;0.7988;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
LogisticRegression;0.8196;0.8311;0.8196;0.821;0.7971;0.8205;0.7971;0.8005;0.8167;0.8305;0.8167;0.8194;0.921;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.8198;0.8284;0.8198;0.8205;0.7971;0.8073;0.7971;0.7991;0.8167;0.8305;0.8167;0.8194;0.9284;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8181;0.829;0.8181;0.8194;0.8406;0.8435;0.8406;0.8418;0.8167;0.8305;0.8167;0.8194;0.9206;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8133;0.8226;0.8133;0.8149;0.7971;0.8127;0.7971;0.8005;0.8167;0.8305;0.8167;0.8194;0.9245;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8261;0.8394;0.8261;0.8279;0.7391;0.7399;0.7391;0.7387;0.8167;0.8305;0.8167;0.8194;0.9257;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8196;0.8278;0.8196;0.8204;0.7681;0.7771;0.7681;0.771;0.8167;0.8305;0.8167;0.8194;0.923;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.8181;0.8243;0.8181;0.8181;0.7681;0.7844;0.7681;0.7721;0.8167;0.8305;0.8167;0.8194;0.925;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.815;0.8255;0.815;0.8145;0.8261;0.8456;0.8261;0.8293;0.8167;0.8305;0.8167;0.8194;0.9212;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
SVC;0.5684;0.6186;0.5684;0.5615;0.8551;0.8683;0.8551;0.857;0.8167;0.8305;0.8167;0.8194;0.7805;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
LogisticRegression;0.8148;0.8242;0.8148;0.8149;0.7971;0.8238;0.7971;0.7997;0.8167;0.8305;0.8167;0.8194;0.9234;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.8147;0.8281;0.8147;0.8161;0.8261;0.8216;0.8261;0.822;0.8167;0.8305;0.8167;0.8194;0.9179;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
SVC;0.583;0.6469;0.583;0.5732;0.8406;0.8406;0.8406;0.8406;0.8167;0.8305;0.8167;0.8194;0.7898;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 281};SVC(C=1, kernel='linear', probability=True, random_state=281)
SVC;0.5765;0.6316;0.5765;0.5705;0.8116;0.8115;0.8116;0.8108;0.8167;0.8305;0.8167;0.8194;0.786;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 281};SVC(C=0.1, kernel='linear', probability=True, random_state=281)
LogisticRegression;0.8067;0.8174;0.8067;0.8068;0.8841;0.8857;0.8841;0.8838;0.8167;0.8305;0.8167;0.8194;0.9191;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
SVC;0.6247;0.6519;0.6247;0.6241;0.8261;0.8444;0.8261;0.8277;0.8167;0.8305;0.8167;0.8194;0.7979;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 671};SVC(C=0.1, kernel='linear', probability=True, random_state=671)
LogisticRegression;0.8084;0.8174;0.8084;0.8099;0.8261;0.8246;0.8261;0.8251;0.8167;0.8305;0.8167;0.8194;0.9223;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
MLPClassifier;0.8164;0.8278;0.8164;0.8168;0.7971;0.8228;0.7971;0.8007;0.8167;0.8373;0.8167;0.8191;0.943;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
MLPClassifier;0.8147;0.8329;0.8147;0.8158;0.7536;0.7979;0.7536;0.7581;0.8167;0.8373;0.8167;0.8191;0.9351;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
DecisionTreeClassifier;0.8277;0.842;0.8277;0.8296;0.8406;0.8388;0.8406;0.8389;0.8167;0.8239;0.8167;0.8189;0.9221;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
DecisionTreeClassifier;0.8439;0.8566;0.8439;0.8444;0.7826;0.8004;0.7826;0.7866;0.8167;0.8268;0.8167;0.8185;0.9288;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 5, 'min_samples_leaf': 20, 'random_state': 326};DecisionTreeClassifier(max_depth=5, min_samples_leaf=20, random_state=326)
DecisionTreeClassifier;0.8487;0.8585;0.8487;0.85;0.8551;0.8568;0.8551;0.8557;0.8167;0.8198;0.8167;0.8179;0.9432;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 326};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=326)
DecisionTreeClassifier;0.8293;0.839;0.8293;0.8308;0.7971;0.8071;0.7971;0.7992;0.8167;0.8198;0.8167;0.8179;0.9285;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=825)
MLPClassifier;0.8212;0.8349;0.8212;0.8215;0.8261;0.8416;0.8261;0.8266;0.8167;0.8304;0.8167;0.8176;0.9366;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
DecisionTreeClassifier;0.8375;0.8489;0.8375;0.8384;0.8986;0.8976;0.8986;0.8972;0.8167;0.8264;0.8167;0.8175;0.9382;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=726)
DecisionTreeClassifier;0.839;0.8504;0.839;0.8408;0.7826;0.7841;0.7826;0.7832;0.8167;0.8264;0.8167;0.8175;0.9249;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=726)
KNeighborsClassifier;0.7792;0.7892;0.7792;0.7795;0.7826;0.8224;0.7826;0.7891;0.8167;0.818;0.8167;0.817;0.9139;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.815;0.8251;0.815;0.8153;0.7681;0.7987;0.7681;0.773;0.8167;0.819;0.8167;0.8168;0.9359;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
MLPClassifier;0.8212;0.8344;0.8212;0.822;0.7971;0.8382;0.7971;0.7999;0.8167;0.8164;0.8167;0.8162;0.9362;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
KNeighborsClassifier;0.7811;0.7885;0.7811;0.7815;0.7971;0.7956;0.7971;0.7961;0.8167;0.8155;0.8167;0.8158;0.9096;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7761;0.7808;0.7761;0.775;0.7101;0.7485;0.7101;0.714;0.8167;0.8155;0.8167;0.8158;0.9119;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8309;0.839;0.8309;0.831;0.7536;0.7583;0.7536;0.7524;0.8167;0.8168;0.8167;0.8155;0.9209;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 825};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=825)
KNeighborsClassifier;0.7715;0.7791;0.7715;0.7718;0.7681;0.7627;0.7681;0.7617;0.8167;0.8172;0.8167;0.8155;0.9043;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7666;0.7763;0.7666;0.766;0.8261;0.8274;0.8261;0.8259;0.8167;0.8178;0.8167;0.8148;0.9033;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
MLPClassifier;0.8085;0.8258;0.8085;0.8081;0.8406;0.8499;0.8406;0.842;0.8167;0.8178;0.8167;0.8148;0.9363;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
KNeighborsClassifier;0.7922;0.803;0.7922;0.7916;0.7101;0.7079;0.7101;0.7083;0.8167;0.8187;0.8167;0.8147;0.9181;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7617;0.774;0.7617;0.7612;0.8261;0.8376;0.8261;0.8287;0.8167;0.8171;0.8167;0.8144;0.9137;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.752;0.7634;0.752;0.7527;0.8261;0.8261;0.8261;0.8261;0.8167;0.8171;0.8167;0.8144;0.8981;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
LogisticRegression;0.818;0.8271;0.818;0.8194;0.8116;0.8148;0.8116;0.8103;0.8;0.8182;0.8;0.8033;0.92;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.8132;0.8256;0.8132;0.8136;0.8551;0.8638;0.8551;0.8561;0.8;0.8182;0.8;0.8033;0.9222;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8261;0.8368;0.8261;0.827;0.7826;0.7861;0.7826;0.7841;0.8;0.8182;0.8;0.8033;0.922;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.8084;0.8187;0.8084;0.8097;0.8986;0.908;0.8986;0.8997;0.8;0.8182;0.8;0.8033;0.9244;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.8212;0.8325;0.8212;0.8221;0.8406;0.8474;0.8406;0.8404;0.8;0.8182;0.8;0.8033;0.9224;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.8147;0.8251;0.8147;0.8154;0.8116;0.84;0.8116;0.8112;0.8;0.8182;0.8;0.8033;0.9267;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 373, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=373)"
LogisticRegression;0.8149;0.8266;0.8149;0.8152;0.8116;0.8255;0.8116;0.8153;0.8;0.8182;0.8;0.8033;0.9236;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.8166;0.8283;0.8166;0.8167;0.7971;0.8266;0.7971;0.7999;0.8;0.8182;0.8;0.8033;0.9213;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8165;0.8267;0.8165;0.8187;0.8261;0.8278;0.8261;0.8267;0.8;0.8182;0.8;0.8033;0.9248;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8182;0.8262;0.8182;0.8194;0.8261;0.8247;0.8261;0.8251;0.8;0.8182;0.8;0.8033;0.9216;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8116;0.8214;0.8116;0.8125;0.8551;0.8763;0.8551;0.8587;0.8;0.8182;0.8;0.8033;0.9199;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 277, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=277)"
LogisticRegression;0.8164;0.826;0.8164;0.8181;0.8261;0.8261;0.8261;0.8261;0.8;0.8182;0.8;0.8033;0.923;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.8148;0.8247;0.8148;0.8159;0.8406;0.8391;0.8406;0.8396;0.8;0.8182;0.8;0.8033;0.9202;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
LogisticRegression;0.8197;0.8291;0.8197;0.8201;0.7971;0.8061;0.7971;0.7996;0.8;0.8182;0.8;0.8033;0.9228;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 887, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=887)"
MLPClassifier;0.8147;0.8286;0.8147;0.8162;0.8116;0.82;0.8116;0.8138;0.8;0.8153;0.8;0.802;0.9328;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
MLPClassifier;0.8102;0.8248;0.8102;0.8116;0.7971;0.806;0.7971;0.7988;0.8;0.8119;0.8;0.8001;0.9336;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
KNeighborsClassifier;0.76;0.7727;0.76;0.7611;0.7391;0.7477;0.7391;0.7419;0.8;0.8005;0.8;0.7999;0.9099;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
DecisionTreeClassifier;0.8439;0.853;0.8439;0.8444;0.8261;0.8342;0.8261;0.8273;0.8;0.8017;0.8;0.7996;0.938;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 726};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=726)
KNeighborsClassifier;0.7956;0.8032;0.7956;0.7958;0.7826;0.7878;0.7826;0.7834;0.8;0.8002;0.8;0.7988;0.9094;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
MLPClassifier;0.8292;0.8436;0.8292;0.8305;0.8116;0.8268;0.8116;0.8129;0.8;0.8002;0.8;0.7988;0.9395;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
KNeighborsClassifier;0.7746;0.784;0.7746;0.7756;0.8406;0.8475;0.8406;0.8423;0.8;0.8002;0.8;0.7988;0.9142;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7682;0.7822;0.7682;0.7691;0.7826;0.8127;0.7826;0.7871;0.8;0.7987;0.8;0.798;0.9065;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7681;0.7783;0.7681;0.7665;0.7681;0.7909;0.7681;0.7733;0.8;0.8015;0.8;0.7962;0.9114;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.8181;0.8238;0.8181;0.8179;0.7971;0.7971;0.7971;0.7971;0.8;0.8075;0.8;0.7934;0.9424;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
MLPClassifier;0.8245;0.8359;0.8245;0.825;0.8116;0.82;0.8116;0.8138;0.7833;0.7986;0.7833;0.7854;0.9386;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
MLPClassifier;0.8197;0.8316;0.8197;0.8212;0.8841;0.8942;0.8841;0.8861;0.7833;0.7898;0.7833;0.784;0.9344;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
MLPClassifier;0.8118;0.8254;0.8118;0.8126;0.8406;0.8421;0.8406;0.8396;0.7833;0.8074;0.7833;0.7836;0.9319;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
KNeighborsClassifier;0.7779;0.7835;0.7779;0.7781;0.7826;0.7848;0.7826;0.7835;0.7833;0.7839;0.7833;0.7827;0.9146;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7908;0.8004;0.7908;0.7908;0.8406;0.8475;0.8406;0.8423;0.7833;0.7821;0.7833;0.7824;0.9098;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7906;0.7968;0.7906;0.7911;0.7681;0.7841;0.7681;0.7731;0.7833;0.7871;0.7833;0.7807;0.9081;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.7762;0.7845;0.7762;0.7772;0.8406;0.8448;0.8406;0.8416;0.7833;0.786;0.7833;0.7804;0.9105;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7761;0.7799;0.7761;0.7759;0.8551;0.8552;0.8551;0.8543;0.7833;0.7824;0.7833;0.78;0.907;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.765;0.7769;0.765;0.7593;0.7971;0.8071;0.7971;0.7992;0.7833;0.7824;0.7833;0.78;0.9097;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7729;0.7765;0.7729;0.7712;0.8261;0.8259;0.8261;0.8257;0.7833;0.7857;0.7833;0.78;0.9068;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.7537;0.7642;0.7537;0.7547;0.8261;0.8274;0.8261;0.8259;0.7833;0.7865;0.7833;0.7777;0.9013;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
MLPClassifier;0.8132;0.8251;0.8132;0.8141;0.8116;0.8161;0.8116;0.8119;0.7833;0.7851;0.7833;0.7775;0.938;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
MLPClassifier;0.8294;0.8386;0.8294;0.8308;0.8261;0.8233;0.8261;0.8228;0.7833;0.7929;0.7833;0.774;0.9378;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 520, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=520)
KNeighborsClassifier;0.7714;0.7755;0.7714;0.7692;0.7101;0.7073;0.7101;0.7071;0.7667;0.7646;0.7667;0.7647;0.9095;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.7796;0.7857;0.7796;0.7785;0.8261;0.841;0.8261;0.8276;0.7667;0.7664;0.7667;0.7642;0.9157;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8245;0.8338;0.8245;0.8251;0.8551;0.8544;0.8551;0.8512;0.7667;0.7886;0.7667;0.7641;0.9395;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
MLPClassifier;0.81;0.8312;0.81;0.8115;0.7391;0.7562;0.7391;0.7421;0.75;0.7653;0.75;0.7485;0.9334;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 943, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=943)
KNeighborsClassifier;0.7809;0.7814;0.7809;0.7774;0.8261;0.8479;0.8261;0.8283;0.75;0.7503;0.75;0.746;0.9105;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
MLPClassifier;0.8246;0.8353;0.8246;0.8247;0.6957;0.7018;0.6957;0.6981;0.75;0.7606;0.75;0.7459;0.9441;smote;250;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 596, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=596)
