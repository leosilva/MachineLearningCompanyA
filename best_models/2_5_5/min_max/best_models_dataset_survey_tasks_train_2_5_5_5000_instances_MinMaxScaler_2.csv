Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
DecisionTreeClassifier;0.8636;0.8649;0.8636;0.8638;0.8477;0.8501;0.8477;0.8483;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8633;0.8638;0.8633;0.8632;0.8564;0.8593;0.8564;0.8572;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8612;0.8624;0.8612;0.8614;0.8644;0.8632;0.8644;0.8635;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.8625;0.8634;0.8625;0.8627;0.8618;0.8639;0.8618;0.8625;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.8602;0.8609;0.8602;0.8603;0.8773;0.8789;0.8773;0.8778;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.8635;0.8642;0.8635;0.8636;0.8517;0.8514;0.8517;0.8513;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8641;0.8646;0.8641;0.8642;0.8631;0.8631;0.8631;0.8629;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8643;0.8647;0.8643;0.8643;0.8463;0.8489;0.8463;0.8468;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8609;0.8616;0.8609;0.861;0.8785;0.8793;0.8785;0.8788;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8604;0.8611;0.8604;0.8606;0.8772;0.8768;0.8772;0.877;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8624;0.8629;0.8624;0.8624;0.8691;0.8702;0.8691;0.8694;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8636;0.8641;0.8636;0.8637;0.8604;0.8599;0.8604;0.8599;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8618;0.8629;0.8618;0.8621;0.8605;0.8617;0.8605;0.8606;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8636;0.8641;0.8636;0.8636;0.8625;0.8631;0.8625;0.8627;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8622;0.863;0.8622;0.8623;0.8712;0.8719;0.8712;0.8713;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 958};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=958)
DecisionTreeClassifier;0.8616;0.8628;0.8616;0.8618;0.8745;0.874;0.8745;0.8741;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8618;0.863;0.8618;0.862;0.8685;0.8685;0.8685;0.8684;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8634;0.864;0.8634;0.8634;0.8651;0.8653;0.8651;0.865;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8621;0.8633;0.8621;0.8624;0.8631;0.8635;0.8631;0.863;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.8633;0.8641;0.8633;0.8634;0.8658;0.8659;0.8658;0.8657;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.8622;0.8626;0.8622;0.8622;0.857;0.856;0.857;0.8562;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.8637;0.8641;0.8637;0.8638;0.8618;0.861;0.8618;0.8612;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.864;0.8645;0.864;0.864;0.855;0.8586;0.855;0.8558;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.863;0.8638;0.863;0.8631;0.8518;0.8533;0.8518;0.8523;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8622;0.863;0.8622;0.8623;0.8665;0.8667;0.8665;0.8663;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8629;0.8634;0.8629;0.8629;0.8604;0.8604;0.8604;0.8603;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8615;0.8624;0.8615;0.8617;0.8624;0.8642;0.8624;0.8631;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 412};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=412)
DecisionTreeClassifier;0.8616;0.8622;0.8616;0.8616;0.8711;0.8717;0.8711;0.8712;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
DecisionTreeClassifier;0.8628;0.8634;0.8628;0.8629;0.8705;0.8727;0.8705;0.871;0.8833;0.8823;0.8833;0.8824;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
RandomForestClassifier;0.8619;0.8625;0.8619;0.862;0.8652;0.8682;0.8652;0.866;0.8667;0.8705;0.8667;0.8672;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 998};RandomForestClassifier(n_estimators=10, random_state=998)
DecisionTreeClassifier;0.8641;0.8647;0.8641;0.8641;0.837;0.8372;0.837;0.8369;0.8667;0.8667;0.8667;0.8667;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 89};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=89)
RandomForestClassifier;0.862;0.8624;0.862;0.862;0.8698;0.8698;0.8698;0.8697;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 998};RandomForestClassifier(n_estimators=20, random_state=998)
RandomForestClassifier;0.8617;0.8624;0.8617;0.8618;0.8706;0.8695;0.8706;0.8699;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 998};RandomForestClassifier(n_estimators=5, random_state=998)
RandomForestClassifier;0.8651;0.8658;0.8651;0.8651;0.849;0.8484;0.849;0.8483;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.8605;0.8608;0.8605;0.8605;0.8779;0.878;0.8779;0.8779;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.8623;0.8629;0.8623;0.8624;0.8651;0.8654;0.8651;0.8652;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 616};RandomForestClassifier(n_estimators=20, random_state=616)
RandomForestClassifier;0.864;0.8644;0.864;0.864;0.8565;0.8577;0.8565;0.8568;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 875};RandomForestClassifier(n_estimators=10, random_state=875)
RandomForestClassifier;0.8629;0.8637;0.8629;0.863;0.8592;0.8586;0.8592;0.8585;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.8629;0.863;0.8629;0.8627;0.8617;0.8638;0.8617;0.8624;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 998};RandomForestClassifier(n_estimators=5, random_state=998)
RandomForestClassifier;0.8604;0.8612;0.8604;0.8605;0.8792;0.8798;0.8792;0.8792;0.8667;0.866;0.8667;0.8648;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.8653;0.8657;0.8653;0.8654;0.8538;0.855;0.8538;0.8541;0.8667;0.8704;0.8667;0.8644;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 998};RandomForestClassifier(n_estimators=20, random_state=998)
RandomForestClassifier;0.8614;0.8625;0.8614;0.8616;0.8617;0.8626;0.8617;0.8617;0.8667;0.8704;0.8667;0.8644;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 616};RandomForestClassifier(n_estimators=10, random_state=616)
RandomForestClassifier;0.8652;0.8659;0.8652;0.8653;0.8545;0.8552;0.8545;0.8546;0.85;0.8556;0.85;0.85;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.86;0.8612;0.86;0.8602;0.8592;0.8591;0.8592;0.8589;0.85;0.8519;0.85;0.8498;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 616};RandomForestClassifier(n_estimators=10, random_state=616)
RandomForestClassifier;0.863;0.8632;0.863;0.8629;0.8551;0.8551;0.8551;0.855;0.85;0.8547;0.85;0.8477;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 616};RandomForestClassifier(n_estimators=20, random_state=616)
RandomForestClassifier;0.8615;0.8623;0.8615;0.8616;0.8732;0.8731;0.8732;0.8729;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 616};RandomForestClassifier(n_estimators=5, random_state=616)
RandomForestClassifier;0.8615;0.8621;0.8615;0.8615;0.8644;0.8652;0.8644;0.8647;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 616};RandomForestClassifier(n_estimators=5, random_state=616)
RandomForestClassifier;0.859;0.8593;0.859;0.859;0.8826;0.8823;0.8826;0.8824;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 616};RandomForestClassifier(n_estimators=10, random_state=616)
RandomForestClassifier;0.8637;0.8638;0.8637;0.8636;0.853;0.854;0.853;0.8533;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 616};RandomForestClassifier(n_estimators=20, random_state=616)
RandomForestClassifier;0.8629;0.8634;0.8629;0.8629;0.8545;0.8538;0.8545;0.8541;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 616};RandomForestClassifier(n_estimators=20, random_state=616)
RandomForestClassifier;0.8619;0.8622;0.8619;0.8618;0.8604;0.8604;0.8604;0.8604;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.8611;0.8615;0.8611;0.861;0.8711;0.8715;0.8711;0.8712;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.8618;0.8625;0.8618;0.8618;0.8617;0.8634;0.8617;0.8623;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 875};RandomForestClassifier(n_estimators=20, random_state=875)
RandomForestClassifier;0.8613;0.8624;0.8613;0.8615;0.8617;0.8633;0.8617;0.8621;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 998};RandomForestClassifier(n_estimators=10, random_state=998)
RandomForestClassifier;0.8642;0.8649;0.8642;0.8643;0.8483;0.8475;0.8483;0.8478;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 998};RandomForestClassifier(n_estimators=10, random_state=998)
RandomForestClassifier;0.8619;0.8624;0.8619;0.8619;0.8819;0.8813;0.8819;0.8815;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 998};RandomForestClassifier(n_estimators=20, random_state=998)
RandomForestClassifier;0.8638;0.8643;0.8638;0.8638;0.8651;0.8653;0.8651;0.8647;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 998};RandomForestClassifier(n_estimators=20, random_state=998)
RandomForestClassifier;0.8627;0.8629;0.8627;0.8626;0.8517;0.852;0.8517;0.8518;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 998};RandomForestClassifier(n_estimators=20, random_state=998)
RandomForestClassifier;0.8624;0.863;0.8624;0.8624;0.8644;0.8658;0.8644;0.8649;0.85;0.8493;0.85;0.8472;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 875};RandomForestClassifier(n_estimators=10, random_state=875)
MLPClassifier;0.8491;0.8497;0.8491;0.849;0.843;0.8432;0.843;0.843;0.8333;0.846;0.8333;0.8355;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
RandomForestClassifier;0.8627;0.8641;0.8627;0.863;0.8577;0.8594;0.8577;0.8581;0.8333;0.8342;0.8333;0.8323;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 616};RandomForestClassifier(n_estimators=20, random_state=616)
MLPClassifier;0.8481;0.8492;0.8481;0.8483;0.8678;0.8679;0.8678;0.8678;0.8167;0.826;0.8167;0.8183;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8466;0.8479;0.8466;0.8467;0.8597;0.859;0.8597;0.8592;0.8167;0.826;0.8167;0.8183;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8499;0.8512;0.8499;0.8498;0.8444;0.8436;0.8444;0.8417;0.8167;0.826;0.8167;0.8183;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8476;0.849;0.8476;0.8477;0.8537;0.8527;0.8537;0.8528;0.8167;0.826;0.8167;0.8183;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8481;0.8484;0.8481;0.8478;0.8624;0.8621;0.8624;0.8622;0.8167;0.826;0.8167;0.8183;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8499;0.8506;0.8499;0.8498;0.8578;0.858;0.8578;0.8579;0.8167;0.826;0.8167;0.8183;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8467;0.8484;0.8467;0.847;0.8605;0.8594;0.8605;0.8593;0.8167;0.8223;0.8167;0.8169;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8486;0.85;0.8486;0.8486;0.8478;0.8492;0.8478;0.8484;0.8167;0.8223;0.8167;0.8169;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8469;0.8476;0.8469;0.8467;0.8531;0.8524;0.8531;0.8526;0.8167;0.8208;0.8167;0.8161;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8501;0.8514;0.8501;0.8503;0.8503;0.8496;0.8503;0.8499;0.8167;0.8208;0.8167;0.8161;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8471;0.8489;0.8471;0.8471;0.8416;0.8417;0.8416;0.8416;0.8167;0.8208;0.8167;0.8161;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8493;0.8511;0.8493;0.8496;0.8369;0.8361;0.8369;0.8364;0.8167;0.8217;0.8167;0.816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8488;0.8498;0.8488;0.8488;0.857;0.8657;0.857;0.8585;0.8;0.8258;0.8;0.8049;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8504;0.8507;0.8504;0.8502;0.8544;0.8611;0.8544;0.8554;0.8;0.8109;0.8;0.8014;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
SVC;0.8363;0.842;0.8363;0.8371;0.8659;0.8742;0.8659;0.8668;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8394;0.844;0.8394;0.84;0.8537;0.8622;0.8537;0.8545;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8374;0.8414;0.8374;0.8379;0.8651;0.8731;0.8651;0.8657;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8412;0.8458;0.8412;0.8418;0.8396;0.8503;0.8396;0.8414;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8403;0.8451;0.8403;0.8408;0.8436;0.8545;0.8436;0.8454;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8384;0.8436;0.8384;0.8392;0.855;0.8607;0.855;0.8555;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8393;0.8438;0.8393;0.8398;0.8517;0.8582;0.8517;0.853;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8397;0.8444;0.8397;0.8403;0.8638;0.8752;0.8638;0.8652;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8369;0.8414;0.8369;0.8375;0.8612;0.8696;0.8612;0.8622;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8423;0.8472;0.8423;0.8429;0.8377;0.851;0.8377;0.8398;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8399;0.845;0.8399;0.8406;0.8389;0.8501;0.8389;0.8404;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8408;0.8459;0.8408;0.8414;0.8537;0.8642;0.8537;0.8553;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.838;0.8429;0.838;0.8388;0.8584;0.8633;0.8584;0.8592;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8419;0.8465;0.8419;0.8426;0.8409;0.854;0.8409;0.843;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8387;0.843;0.8387;0.8393;0.8651;0.8766;0.8651;0.8666;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8353;0.8399;0.8353;0.8359;0.8685;0.8756;0.8685;0.8697;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8384;0.8432;0.8384;0.839;0.8658;0.8716;0.8658;0.8668;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8398;0.8446;0.8398;0.8404;0.8397;0.8478;0.8397;0.8409;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8375;0.8415;0.8375;0.8381;0.8511;0.8604;0.8511;0.8527;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.8373;0.8416;0.8373;0.838;0.8598;0.8676;0.8598;0.8611;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 613};SVC(C=10, random_state=613)
SVC;0.839;0.8436;0.839;0.8396;0.849;0.8571;0.849;0.8504;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8382;0.843;0.8382;0.839;0.8423;0.8528;0.8423;0.8429;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8377;0.8422;0.8377;0.8383;0.8483;0.8567;0.8483;0.8496;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8373;0.842;0.8373;0.8379;0.853;0.8641;0.853;0.8548;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8377;0.843;0.8377;0.8385;0.857;0.8603;0.857;0.8577;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8408;0.8447;0.8408;0.8412;0.847;0.8545;0.847;0.8483;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8406;0.8453;0.8406;0.8413;0.8477;0.8595;0.8477;0.8491;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8392;0.8437;0.8392;0.8399;0.8538;0.8632;0.8538;0.8552;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
SVC;0.8395;0.844;0.8395;0.8401;0.8389;0.8487;0.8389;0.8405;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 901};SVC(C=10, random_state=901)
SVC;0.8392;0.8442;0.8392;0.8398;0.8625;0.8701;0.8625;0.8637;0.8;0.8054;0.8;0.8013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 620};SVC(C=10, random_state=620)
MLPClassifier;0.8484;0.8493;0.8484;0.8485;0.845;0.8479;0.845;0.8458;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8507;0.8519;0.8507;0.8508;0.8625;0.8661;0.8625;0.8632;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8479;0.849;0.8479;0.8482;0.8436;0.8436;0.8436;0.8435;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8506;0.8521;0.8506;0.8509;0.8577;0.8615;0.8577;0.8588;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 480, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=480)
MLPClassifier;0.8472;0.8477;0.8472;0.8468;0.8765;0.8794;0.8765;0.8772;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8496;0.8504;0.8496;0.8494;0.8564;0.8616;0.8564;0.8574;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8466;0.8467;0.8466;0.8461;0.8409;0.8397;0.8409;0.8401;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8493;0.8505;0.8493;0.8493;0.8597;0.8632;0.8597;0.8604;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8517;0.8528;0.8517;0.8518;0.8517;0.8564;0.8517;0.8522;0.7833;0.8037;0.7833;0.788;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8498;0.8509;0.8498;0.8495;0.8491;0.854;0.8491;0.8488;0.7833;0.7927;0.7833;0.785;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8489;0.8495;0.8489;0.8486;0.8617;0.8671;0.8617;0.8632;0.7833;0.7927;0.7833;0.785;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
MLPClassifier;0.8495;0.8502;0.8495;0.8495;0.8524;0.8555;0.8524;0.8527;0.7667;0.7824;0.7667;0.7711;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8484;0.8496;0.8484;0.8486;0.8585;0.8621;0.8585;0.8589;0.7667;0.7824;0.7667;0.7711;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.8495;0.8505;0.8495;0.8497;0.8544;0.8568;0.8544;0.8551;0.7667;0.7832;0.7667;0.771;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 417, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=417)
MLPClassifier;0.848;0.8495;0.848;0.8481;0.853;0.8564;0.853;0.8535;0.7667;0.7832;0.7667;0.771;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 758, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=758)
LogisticRegression;0.6947;0.7141;0.6947;0.6947;0.6868;0.7078;0.6868;0.6868;0.7167;0.7263;0.7167;0.7172;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6932;0.7123;0.6932;0.6932;0.6919;0.7151;0.6919;0.6928;0.7167;0.7263;0.7167;0.7172;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.6964;0.7155;0.6964;0.6965;0.6799;0.7014;0.6799;0.6803;0.7167;0.7263;0.7167;0.7172;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.695;0.7146;0.695;0.6949;0.6828;0.7001;0.6828;0.6831;0.7167;0.7263;0.7167;0.7172;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6948;0.7149;0.6948;0.695;0.6758;0.6947;0.6758;0.676;0.7167;0.7254;0.7167;0.7169;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6953;0.7145;0.6953;0.6954;0.6975;0.7195;0.6975;0.6973;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.6939;0.7138;0.6939;0.6941;0.6975;0.7128;0.6975;0.697;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6936;0.7133;0.6936;0.6938;0.694;0.7098;0.694;0.6937;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6916;0.7112;0.6916;0.6917;0.7302;0.7469;0.7302;0.7302;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6927;0.7124;0.6927;0.6929;0.7107;0.7265;0.7107;0.7102;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.695;0.7146;0.695;0.6951;0.6933;0.7081;0.6933;0.6935;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6936;0.7127;0.6936;0.6937;0.7034;0.7272;0.7034;0.7026;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6937;0.7137;0.6937;0.6938;0.694;0.7096;0.694;0.6924;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.6932;0.7124;0.6932;0.6929;0.6993;0.7209;0.6993;0.7016;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6931;0.7125;0.6931;0.6932;0.7049;0.7223;0.7049;0.7052;0.7167;0.7169;0.7167;0.7159;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6943;0.7133;0.6943;0.6942;0.6785;0.7051;0.6785;0.6784;0.7;0.7125;0.7;0.7013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6916;0.7112;0.6916;0.6917;0.694;0.7141;0.694;0.6943;0.7;0.7125;0.7;0.7013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6944;0.7148;0.6944;0.6945;0.6893;0.7047;0.6893;0.6885;0.7;0.7125;0.7;0.7013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6921;0.7118;0.6921;0.692;0.7049;0.7226;0.7049;0.7056;0.7;0.7125;0.7;0.7013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.6902;0.71;0.6902;0.6903;0.7101;0.7273;0.7101;0.7093;0.7;0.7125;0.7;0.7013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.6926;0.7125;0.6926;0.6927;0.6993;0.7164;0.6993;0.6997;0.7;0.7125;0.7;0.7013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.6921;0.7114;0.6921;0.6921;0.7062;0.726;0.7062;0.7064;0.7;0.7125;0.7;0.7013;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.6934;0.7132;0.6934;0.6937;0.6899;0.7058;0.6899;0.6895;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6932;0.7125;0.6932;0.6932;0.7036;0.7229;0.7036;0.7048;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6918;0.7118;0.6918;0.6921;0.7107;0.7255;0.7107;0.7095;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.6925;0.7123;0.6925;0.6926;0.7013;0.7212;0.7013;0.7008;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6942;0.7134;0.6942;0.6943;0.6854;0.7102;0.6854;0.6858;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 453, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=453)"
LogisticRegression;0.691;0.7106;0.691;0.6912;0.7141;0.7335;0.7141;0.7139;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 32, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=32)"
LogisticRegression;0.6948;0.7146;0.6948;0.6948;0.6839;0.6989;0.6839;0.6837;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.692;0.712;0.692;0.6921;0.6987;0.7157;0.6987;0.6991;0.7;0.7013;0.7;0.6995;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
