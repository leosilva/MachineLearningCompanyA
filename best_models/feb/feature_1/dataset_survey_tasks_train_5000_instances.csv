Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
KNeighborsClassifier,0.9841,0.9844,0.9841,0.984,0.9836,0.9838,0.9836,0.9836,0.8833,0.9004,0.8833,0.8856,0.9948,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
RandomForestClassifier,0.9874,0.9876,0.9874,0.9874,0.9883,0.9884,0.9883,0.9883,0.8833,0.9004,0.8833,0.8856,0.9981,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 781}","RandomForestClassifier(n_estimators=20, random_state=781)"
MLPClassifier,0.9184,0.9224,0.9184,0.9185,0.9167,0.9213,0.9167,0.9168,0.8833,0.8903,0.8833,0.8808,0.9833,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 391, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=391)"
KNeighborsClassifier,0.9849,0.9852,0.9849,0.9849,0.9823,0.9824,0.9823,0.9822,0.85,0.8852,0.85,0.8518,0.9952,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
DecisionTreeClassifier,0.9617,0.9621,0.9617,0.9616,0.9605,0.9606,0.9605,0.9604,0.85,0.8634,0.85,0.8505,0.9911,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 600}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=600)"
DecisionTreeClassifier,0.9584,0.959,0.9584,0.9584,0.9572,0.9578,0.9572,0.9571,0.8333,0.872,0.8333,0.838,0.9902,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 506}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=506)"
RandomForestClassifier,0.9858,0.9859,0.9858,0.9857,0.9853,0.9853,0.9853,0.9853,0.8333,0.8732,0.8333,0.8379,0.9978,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 73}","RandomForestClassifier(n_estimators=20, random_state=73)"
LogisticRegression,0.87,0.8701,0.87,0.8698,0.8691,0.8689,0.8691,0.8688,0.8333,0.8594,0.8333,0.8298,0.9616,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 458, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=458)"
MLPClassifier,0.9194,0.9238,0.9194,0.9196,0.9257,0.9292,0.9257,0.9255,0.8167,0.8163,0.8167,0.8162,0.9837,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 734, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=734)"
SVC,0.8753,0.8764,0.8753,0.8756,0.8718,0.8724,0.8718,0.872,0.8167,0.8175,0.8167,0.816,0.9501,smote,5000,MinMaxScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 611}","SVC(C=10, kernel='linear', probability=True, random_state=611)"
RandomForestClassifier,0.9871,0.9872,0.9871,0.9871,0.9846,0.9847,0.9846,0.9846,0.7833,0.8082,0.7833,0.7873,0.9981,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 222}","RandomForestClassifier(n_estimators=20, random_state=222)"
DecisionTreeClassifier,0.9606,0.9613,0.9606,0.9606,0.9612,0.9617,0.9612,0.9612,0.7833,0.8082,0.7833,0.7873,0.9916,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 615}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=615)"
LogisticRegression,0.8874,0.8871,0.8874,0.887,0.8842,0.8839,0.8842,0.8839,0.7833,0.7927,0.7833,0.785,0.9655,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 776, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=776)"
KNeighborsClassifier,0.9829,0.9832,0.9829,0.9829,0.9843,0.9844,0.9843,0.9842,0.75,0.7639,0.75,0.7536,0.9953,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', p=1, weights='distance')"
SVC,0.8882,0.8881,0.8882,0.8878,0.8869,0.8865,0.8869,0.8866,0.7333,0.7541,0.7333,0.7364,0.9529,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 516}","SVC(C=10, kernel='linear', probability=True, random_state=516)"
LogisticRegression,0.8728,0.8728,0.8728,0.8726,0.8601,0.8597,0.8601,0.8598,0.7167,0.7178,0.7167,0.7169,0.9634,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'penalty': 'l2', 'random_state': 531, 'solver': 'lbfgs'}","LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=531)"
MLPClassifier,0.9078,0.9092,0.9078,0.9077,0.909,0.9101,0.909,0.9086,0.7167,0.7188,0.7167,0.7116,0.9822,smote,5000,no_scaled,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 103, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=103)"
SVC,0.8732,0.8745,0.8732,0.8734,0.8701,0.8713,0.8701,0.8704,0.6833,0.6889,0.6833,0.6754,0.9495,smote,5000,StandardScaler,"['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 10, 'kernel': 'linear', 'random_state': 354}","SVC(C=10, kernel='linear', probability=True, random_state=354)"
