Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.9277;0.9281;0.9277;0.9278;0.9448;0.9451;0.9448;0.9446;0.9;0.906;0.9;0.9005;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 675};RandomForestClassifier(n_estimators=20, random_state=675)
MLPClassifier;0.8993;0.9004;0.8993;0.8995;0.9416;0.9423;0.9416;0.9417;0.9;0.9029;0.9;0.8989;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
KNeighborsClassifier;0.91;0.9106;0.91;0.9102;0.9107;0.9109;0.9107;0.9103;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9074;0.9085;0.9074;0.9075;0.9207;0.921;0.9207;0.9207;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.91;0.911;0.91;0.9101;0.921;0.9219;0.921;0.9208;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9093;0.9107;0.9093;0.9093;0.921;0.9224;0.921;0.9212;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9032;0.9039;0.9032;0.9034;0.9207;0.9213;0.9207;0.9208;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.9124;0.9131;0.9124;0.9125;0.8931;0.8974;0.8931;0.8937;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9066;0.9072;0.9066;0.9068;0.9069;0.9113;0.9069;0.9068;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9119;0.9126;0.9119;0.912;0.9416;0.9415;0.9416;0.9415;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9054;0.9065;0.9054;0.9056;0.9278;0.9288;0.9278;0.928;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9135;0.9142;0.9135;0.9135;0.9;0.9012;0.9;0.8996;0.8833;0.8868;0.8833;0.884;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9062;0.9075;0.9062;0.9064;0.9;0.901;0.9;0.8998;0.8833;0.884;0.8833;0.8833;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.9089;0.9102;0.9089;0.9092;0.9;0.9004;0.9;0.9;0.8833;0.886;0.8833;0.8832;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.9016;0.9027;0.9016;0.9018;0.9347;0.9345;0.9347;0.9342;0.8833;0.886;0.8833;0.8832;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.9028;0.9041;0.9028;0.903;0.9241;0.9245;0.9241;0.9242;0.8833;0.886;0.8833;0.8832;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
SVC;0.8569;0.8582;0.8569;0.8576;0.9172;0.9212;0.9172;0.9165;0.8833;0.8874;0.8833;0.883;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
MLPClassifier;0.9043;0.9052;0.9043;0.9044;0.9175;0.9178;0.9175;0.917;0.8833;0.8844;0.8833;0.8814;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
MLPClassifier;0.904;0.9051;0.904;0.904;0.9241;0.9241;0.9241;0.9239;0.8833;0.8844;0.8833;0.8814;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
MLPClassifier;0.9097;0.911;0.9097;0.9098;0.9172;0.9172;0.9172;0.9171;0.8833;0.8844;0.8833;0.8814;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
MLPClassifier;0.9062;0.9074;0.9062;0.9064;0.9141;0.914;0.9141;0.9137;0.8833;0.8844;0.8833;0.8814;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
KNeighborsClassifier;0.9085;0.909;0.9085;0.9086;0.9069;0.9069;0.9069;0.9069;0.8667;0.8739;0.8667;0.8679;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9085;0.9091;0.9085;0.9086;0.9069;0.907;0.9069;0.9065;0.8667;0.8739;0.8667;0.8679;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9112;0.9118;0.9112;0.9114;0.9448;0.9452;0.9448;0.9447;0.8667;0.873;0.8667;0.8675;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9116;0.9128;0.9116;0.9117;0.9138;0.9143;0.9138;0.9137;0.8667;0.869;0.8667;0.8674;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9296;0.9303;0.9296;0.9297;0.9276;0.9278;0.9276;0.9276;0.8667;0.8704;0.8667;0.8674;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
MLPClassifier;0.9005;0.9021;0.9005;0.9006;0.9517;0.9524;0.9517;0.9518;0.8667;0.8704;0.8667;0.8674;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
RandomForestClassifier;0.9265;0.9271;0.9265;0.9266;0.9517;0.953;0.9517;0.9519;0.8667;0.8704;0.8667;0.8674;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
KNeighborsClassifier;0.9093;0.9099;0.9093;0.9094;0.9138;0.9142;0.9138;0.9136;0.8667;0.869;0.8667;0.8674;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.928;0.9288;0.928;0.9281;0.9345;0.9349;0.9345;0.9346;0.8667;0.8709;0.8667;0.8673;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
MLPClassifier;0.9055;0.9066;0.9055;0.9057;0.9276;0.9278;0.9276;0.9277;0.8667;0.8681;0.8667;0.867;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
SVC;0.8572;0.8575;0.8572;0.8576;0.9069;0.91;0.9069;0.9071;0.8667;0.875;0.8667;0.8668;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
SVC;0.8546;0.8552;0.8546;0.8546;0.8931;0.8937;0.8931;0.893;0.8667;0.875;0.8667;0.8668;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8507;0.8511;0.8507;0.8508;0.9;0.902;0.9;0.8999;0.8667;0.875;0.8667;0.8668;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
SVC;0.8634;0.8641;0.8634;0.8638;0.9;0.9041;0.9;0.9003;0.8667;0.875;0.8667;0.8668;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
SVC;0.8515;0.8519;0.8515;0.8514;0.9172;0.9187;0.9172;0.9175;0.8667;0.875;0.8667;0.8668;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
DecisionTreeClassifier;0.8974;0.8986;0.8974;0.8974;0.8862;0.886;0.8862;0.8861;0.8667;0.8699;0.8667;0.8659;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
SVC;0.8534;0.8554;0.8534;0.8533;0.8866;0.8956;0.8866;0.887;0.8667;0.8738;0.8667;0.8658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
DecisionTreeClassifier;0.889;0.8896;0.889;0.889;0.9;0.9015;0.9;0.9004;0.8667;0.8656;0.8667;0.8658;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
MLPClassifier;0.8993;0.9008;0.8993;0.8996;0.9175;0.921;0.9175;0.9172;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
DecisionTreeClassifier;0.8894;0.8902;0.8894;0.8895;0.8862;0.887;0.8862;0.8858;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
MLPClassifier;0.9036;0.9047;0.9036;0.9037;0.931;0.9316;0.931;0.9308;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
DecisionTreeClassifier;0.8863;0.8874;0.8863;0.8864;0.9485;0.9487;0.9485;0.9485;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
MLPClassifier;0.9035;0.9048;0.9035;0.9037;0.945;0.9456;0.945;0.945;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.8971;0.8984;0.8971;0.8973;0.9379;0.938;0.9379;0.9377;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
MLPClassifier;0.9054;0.9068;0.9054;0.9056;0.9313;0.9317;0.9313;0.9314;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.9032;0.9041;0.9032;0.9034;0.9552;0.9551;0.9552;0.9551;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.9009;0.9021;0.9009;0.9012;0.931;0.9325;0.931;0.9312;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.9005;0.9022;0.9005;0.9008;0.931;0.9319;0.931;0.9313;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.9017;0.9028;0.9017;0.9019;0.9172;0.9172;0.9172;0.917;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.9085;0.9094;0.9085;0.9087;0.9038;0.905;0.9038;0.9039;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.9032;0.9041;0.9032;0.9034;0.9276;0.9281;0.9276;0.9273;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
MLPClassifier;0.9078;0.9091;0.9078;0.9081;0.9414;0.9427;0.9414;0.9413;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.907;0.9086;0.907;0.9072;0.9003;0.9004;0.9003;0.9002;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
MLPClassifier;0.9005;0.9012;0.9005;0.9006;0.9483;0.9491;0.9483;0.9482;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.9108;0.9116;0.9108;0.9111;0.8759;0.877;0.8759;0.8751;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.9066;0.9075;0.9066;0.9067;0.9138;0.9145;0.9138;0.9135;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.9066;0.9083;0.9066;0.9069;0.9207;0.9238;0.9207;0.9207;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 102, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=102)
MLPClassifier;0.9085;0.9102;0.9085;0.9087;0.9103;0.9111;0.9103;0.9104;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
MLPClassifier;0.9051;0.9067;0.9051;0.9053;0.9069;0.9073;0.9069;0.9066;0.8667;0.8668;0.8667;0.8657;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 140, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=140)
RandomForestClassifier;0.9258;0.9267;0.9258;0.9257;0.9414;0.9419;0.9414;0.9414;0.85;0.8557;0.85;0.8514;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
RandomForestClassifier;0.933;0.9336;0.933;0.933;0.9172;0.918;0.9172;0.9172;0.85;0.8557;0.85;0.8514;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9292;0.9297;0.9292;0.9293;0.9379;0.9378;0.9379;0.9377;0.85;0.8557;0.85;0.8514;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.925;0.9259;0.925;0.925;0.9313;0.9315;0.9313;0.9313;0.85;0.8557;0.85;0.8514;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9334;0.9344;0.9334;0.9334;0.9207;0.9217;0.9207;0.9208;0.85;0.8557;0.85;0.8514;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 675};RandomForestClassifier(n_estimators=20, random_state=675)
RandomForestClassifier;0.928;0.9286;0.928;0.9281;0.9175;0.9177;0.9175;0.9173;0.85;0.8545;0.85;0.8511;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 675};RandomForestClassifier(n_estimators=20, random_state=675)
RandomForestClassifier;0.9334;0.9339;0.9334;0.9335;0.9278;0.9279;0.9278;0.9278;0.85;0.8545;0.85;0.8511;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 675};RandomForestClassifier(n_estimators=20, random_state=675)
KNeighborsClassifier;0.9078;0.9087;0.9078;0.9078;0.9207;0.9237;0.9207;0.9212;0.85;0.8541;0.85;0.851;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
RandomForestClassifier;0.93;0.9305;0.93;0.93;0.9414;0.9421;0.9414;0.9416;0.85;0.8564;0.85;0.8508;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
RandomForestClassifier;0.9265;0.927;0.9265;0.9265;0.9276;0.9279;0.9276;0.9275;0.85;0.8564;0.85;0.8508;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
SVC;0.8531;0.855;0.8531;0.8531;0.9069;0.9067;0.9069;0.906;0.85;0.8564;0.85;0.8508;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
DecisionTreeClassifier;0.8902;0.8909;0.8902;0.8903;0.9103;0.9112;0.9103;0.9105;0.85;0.8542;0.85;0.8506;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
SVC;0.8588;0.8597;0.8588;0.8593;0.9241;0.9264;0.9241;0.924;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
SVC;0.858;0.8604;0.858;0.8587;0.9138;0.9177;0.9138;0.9142;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
SVC;0.8526;0.8539;0.8526;0.8529;0.9003;0.9019;0.9003;0.8996;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
SVC;0.8576;0.8587;0.8576;0.8579;0.89;0.8959;0.89;0.8899;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
KNeighborsClassifier;0.9058;0.9065;0.9058;0.9059;0.9313;0.9331;0.9313;0.9313;0.85;0.85;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.8584;0.8597;0.8584;0.8585;0.9069;0.91;0.9069;0.907;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
SVC;0.8618;0.8632;0.8618;0.8622;0.8724;0.8742;0.8724;0.8729;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
SVC;0.8607;0.8619;0.8607;0.8607;0.8966;0.9011;0.8966;0.8966;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
SVC;0.8427;0.8432;0.8427;0.8425;0.8966;0.8989;0.8966;0.8968;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
KNeighborsClassifier;0.9108;0.912;0.9108;0.9109;0.8862;0.8884;0.8862;0.8864;0.85;0.85;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.85;0.8504;0.85;0.8499;0.9241;0.9265;0.9241;0.9241;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
SVC;0.8572;0.8596;0.8572;0.8575;0.8897;0.8952;0.8897;0.8902;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8572;0.8581;0.8572;0.8573;0.89;0.891;0.89;0.8895;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8499;0.8512;0.8499;0.85;0.9141;0.9171;0.9141;0.9142;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
SVC;0.8576;0.8589;0.8576;0.8579;0.9038;0.91;0.9038;0.9036;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8587;0.8593;0.8587;0.8592;0.9107;0.9131;0.9107;0.9101;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
SVC;0.8504;0.8514;0.8504;0.8507;0.9241;0.9282;0.9241;0.9239;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8588;0.8591;0.8588;0.8591;0.9069;0.9077;0.9069;0.9068;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8546;0.857;0.8546;0.8551;0.9241;0.9299;0.9241;0.9247;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8614;0.8622;0.8614;0.8619;0.8935;0.9003;0.8935;0.8925;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
SVC;0.85;0.8507;0.85;0.8499;0.9138;0.9151;0.9138;0.9136;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 422};SVC(C=10, random_state=422)
SVC;0.8531;0.8535;0.8531;0.8528;0.9138;0.9146;0.9138;0.9138;0.85;0.8623;0.85;0.85;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
RandomForestClassifier;0.9315;0.9322;0.9315;0.9316;0.9;0.9;0.9;0.9;0.85;0.8506;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
DecisionTreeClassifier;0.8883;0.8892;0.8883;0.8884;0.931;0.9323;0.931;0.9312;0.85;0.8506;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
RandomForestClassifier;0.9277;0.9282;0.9277;0.9277;0.9276;0.9293;0.9276;0.9273;0.85;0.8506;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 675};RandomForestClassifier(n_estimators=20, random_state=675)
RandomForestClassifier;0.9365;0.937;0.9365;0.9365;0.9138;0.9146;0.9138;0.9137;0.85;0.8506;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 675};RandomForestClassifier(n_estimators=20, random_state=675)
DecisionTreeClassifier;0.8906;0.8914;0.8906;0.8905;0.8966;0.8984;0.8966;0.897;0.85;0.8506;0.85;0.8499;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
KNeighborsClassifier;0.9062;0.9074;0.9062;0.9065;0.931;0.9313;0.931;0.931;0.85;0.8517;0.85;0.8498;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9101;0.9108;0.9101;0.9101;0.9345;0.9353;0.9345;0.9346;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.907;0.9084;0.907;0.9072;0.931;0.9314;0.931;0.9309;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.907;0.9083;0.907;0.9072;0.921;0.9213;0.921;0.921;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9035;0.9028;0.903;0.9379;0.9381;0.9379;0.9376;0.85;0.8497;0.85;0.8495;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.8569;0.8573;0.8569;0.8568;0.9138;0.9143;0.9138;0.9137;0.85;0.855;0.85;0.8493;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 875};SVC(C=10, random_state=875)
DecisionTreeClassifier;0.8929;0.894;0.8929;0.893;0.9276;0.9278;0.9276;0.9276;0.85;0.8514;0.85;0.8483;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
DecisionTreeClassifier;0.894;0.8953;0.894;0.894;0.9034;0.9035;0.9034;0.9033;0.85;0.849;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
DecisionTreeClassifier;0.8959;0.897;0.8959;0.8959;0.8897;0.8915;0.8897;0.8897;0.85;0.849;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8902;0.891;0.8902;0.8902;0.8931;0.8937;0.8931;0.8925;0.85;0.849;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
DecisionTreeClassifier;0.8932;0.8941;0.8932;0.8932;0.8931;0.8931;0.8931;0.8925;0.85;0.849;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
MLPClassifier;0.9039;0.9047;0.9039;0.9043;0.9034;0.9043;0.9034;0.9035;0.85;0.849;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 615, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=615)
DecisionTreeClassifier;0.8897;0.8913;0.8897;0.8899;0.9244;0.9255;0.9244;0.9245;0.85;0.849;0.85;0.8481;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
RandomForestClassifier;0.9254;0.9261;0.9254;0.9255;0.9552;0.9556;0.9552;0.9552;0.8333;0.8391;0.8333;0.8348;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 675};RandomForestClassifier(n_estimators=10, random_state=675)
RandomForestClassifier;0.9338;0.935;0.9338;0.9338;0.921;0.9204;0.921;0.9204;0.8333;0.8355;0.8333;0.8341;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
RandomForestClassifier;0.9365;0.937;0.9365;0.9366;0.9172;0.9178;0.9172;0.9172;0.8333;0.8355;0.8333;0.8341;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9319;0.9325;0.9319;0.932;0.9103;0.9114;0.9103;0.9097;0.8333;0.8355;0.8333;0.8341;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 641};RandomForestClassifier(n_estimators=10, random_state=641)
DecisionTreeClassifier;0.8886;0.8897;0.8886;0.8887;0.8931;0.8946;0.8931;0.8935;0.8333;0.8348;0.8333;0.8337;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
SVC;0.8522;0.8529;0.8522;0.8523;0.9175;0.9209;0.9175;0.9174;0.8333;0.8424;0.8333;0.8336;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 605};SVC(C=10, random_state=605)
DecisionTreeClassifier;0.8875;0.8886;0.8875;0.8875;0.9;0.9006;0.9;0.9;0.8333;0.836;0.8333;0.8335;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
DecisionTreeClassifier;0.8928;0.8941;0.8928;0.893;0.8797;0.8824;0.8797;0.88;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8882;0.8899;0.8882;0.8883;0.9175;0.9183;0.9175;0.9177;0.8333;0.8333;0.8333;0.8333;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
DecisionTreeClassifier;0.8913;0.8925;0.8913;0.8915;0.9241;0.9289;0.9241;0.9248;0.8333;0.8341;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8863;0.8872;0.8863;0.8863;0.9038;0.9094;0.9038;0.9043;0.8333;0.8341;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
KNeighborsClassifier;0.9081;0.9089;0.9081;0.9083;0.9038;0.904;0.9038;0.9036;0.8333;0.8341;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.933;0.9337;0.933;0.9331;0.9141;0.9143;0.9141;0.9136;0.8333;0.8341;0.8333;0.8327;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
KNeighborsClassifier;0.9081;0.9093;0.9081;0.9082;0.9276;0.9287;0.9276;0.9276;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9089;0.9097;0.9089;0.9091;0.9517;0.9526;0.9517;0.9518;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.9059;0.9065;0.9059;0.9059;0.8759;0.8783;0.8759;0.8753;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
DecisionTreeClassifier;0.8974;0.8984;0.8974;0.8975;0.9241;0.9242;0.9241;0.9235;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
RandomForestClassifier;0.9318;0.9321;0.9318;0.9319;0.9381;0.9381;0.9381;0.9381;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 675};RandomForestClassifier(n_estimators=20, random_state=675)
DecisionTreeClassifier;0.8894;0.8902;0.8894;0.8893;0.8793;0.8801;0.8793;0.8787;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
KNeighborsClassifier;0.9047;0.9064;0.9047;0.9048;0.9276;0.928;0.9276;0.9276;0.8333;0.8322;0.8333;0.8324;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8944;0.8954;0.8944;0.8944;0.9003;0.9012;0.9003;0.9003;0.8333;0.8332;0.8333;0.8302;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
RandomForestClassifier;0.9284;0.9301;0.9284;0.9286;0.89;0.8932;0.89;0.8899;0.8167;0.818;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9322;0.9333;0.9322;0.9323;0.9313;0.9324;0.9313;0.9314;0.8167;0.8181;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 641};RandomForestClassifier(n_estimators=20, random_state=641)
RandomForestClassifier;0.9303;0.9314;0.9303;0.9305;0.9347;0.935;0.9347;0.9346;0.8167;0.8181;0.8167;0.817;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9319;0.9328;0.9319;0.9319;0.9345;0.9349;0.9345;0.9344;0.8167;0.819;0.8167;0.8168;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 122};RandomForestClassifier(n_estimators=20, random_state=122)
RandomForestClassifier;0.9296;0.9301;0.9296;0.9296;0.9138;0.9214;0.9138;0.9143;0.8167;0.8167;0.8167;0.8167;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 641};RandomForestClassifier(n_estimators=10, random_state=641)
DecisionTreeClassifier;0.8924;0.8938;0.8924;0.8924;0.9175;0.9203;0.9175;0.918;0.8167;0.8167;0.8167;0.8167;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
KNeighborsClassifier;0.9089;0.91;0.9089;0.909;0.9381;0.9381;0.9381;0.9381;0.8167;0.8163;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8875;0.8889;0.8875;0.8874;0.8966;0.8981;0.8966;0.8958;0.8167;0.8164;0.8167;0.8162;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.8947;0.8959;0.8947;0.8946;0.8931;0.8929;0.8931;0.8928;0.8167;0.8178;0.8167;0.8148;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
DecisionTreeClassifier;0.897;0.8977;0.897;0.897;0.9072;0.9078;0.9072;0.9072;0.8167;0.8153;0.8167;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 582};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=582)
DecisionTreeClassifier;0.8939;0.8947;0.8939;0.8941;0.9072;0.9072;0.9072;0.9072;0.8167;0.8153;0.8167;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 944};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=944)
KNeighborsClassifier;0.9128;0.9134;0.9128;0.9129;0.9172;0.9181;0.9172;0.917;0.8167;0.8153;0.8167;0.8147;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.9265;0.927;0.9265;0.9265;0.931;0.9311;0.931;0.9309;0.8;0.8038;0.8;0.801;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 675};RandomForestClassifier(n_estimators=5, random_state=675)
RandomForestClassifier;0.9296;0.9303;0.9296;0.9296;0.9379;0.938;0.9379;0.9377;0.8;0.8035;0.8;0.8005;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 122};RandomForestClassifier(n_estimators=10, random_state=122)
RandomForestClassifier;0.9311;0.9318;0.9311;0.9312;0.9379;0.9379;0.9379;0.9379;0.8;0.8005;0.8;0.7999;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 675};RandomForestClassifier(n_estimators=10, random_state=675)
DecisionTreeClassifier;0.8948;0.8957;0.8948;0.8949;0.9;0.9025;0.9;0.9003;0.8;0.7988;0.8;0.7991;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
DecisionTreeClassifier;0.8967;0.8977;0.8967;0.8967;0.8862;0.887;0.8862;0.8862;0.8;0.7991;0.8;0.7966;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 264};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=264)
LogisticRegression;0.6795;0.6828;0.6795;0.6788;0.6701;0.6921;0.6701;0.6677;0.6333;0.6319;0.6333;0.6308;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.677;0.6807;0.677;0.6766;0.6793;0.6866;0.6793;0.6775;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6773;0.6824;0.6773;0.6766;0.701;0.7036;0.701;0.7012;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6738;0.6793;0.6738;0.6733;0.6804;0.6844;0.6804;0.6793;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6732;0.6787;0.6732;0.6722;0.7034;0.706;0.7034;0.7039;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6777;0.6824;0.6777;0.677;0.6655;0.675;0.6655;0.664;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6762;0.6807;0.6762;0.6757;0.6586;0.6612;0.6586;0.6574;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6731;0.6797;0.6731;0.6725;0.7034;0.7074;0.7034;0.7035;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6736;0.679;0.6736;0.673;0.6793;0.6796;0.6793;0.6787;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6843;0.688;0.6843;0.6832;0.6414;0.6443;0.6414;0.641;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.673;0.6768;0.673;0.6721;0.7148;0.7182;0.7148;0.715;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6762;0.6816;0.6762;0.6755;0.6517;0.6541;0.6517;0.651;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6846;0.6895;0.6846;0.6841;0.6552;0.6613;0.6552;0.6559;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.673;0.6777;0.673;0.6723;0.7079;0.7131;0.7079;0.7069;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.673;0.676;0.673;0.6724;0.701;0.7125;0.701;0.7012;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6801;0.6846;0.6801;0.6794;0.6448;0.6609;0.6448;0.6479;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6739;0.6794;0.6739;0.6735;0.7034;0.7064;0.7034;0.7033;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6777;0.6826;0.6777;0.6775;0.669;0.6694;0.669;0.6647;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6694;0.6729;0.6694;0.6682;0.7345;0.7378;0.7345;0.7345;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6812;0.6867;0.6812;0.6809;0.6448;0.6459;0.6448;0.6435;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6734;0.677;0.6734;0.673;0.6838;0.6953;0.6838;0.6826;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6732;0.678;0.6732;0.6725;0.6966;0.7018;0.6966;0.6937;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6759;0.68;0.6759;0.6757;0.6897;0.6987;0.6897;0.6883;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6766;0.6808;0.6766;0.6757;0.6586;0.6642;0.6586;0.6593;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6724;0.6767;0.6724;0.6716;0.7069;0.7127;0.7069;0.708;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6766;0.682;0.6766;0.676;0.6828;0.6826;0.6828;0.6818;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6807;0.6852;0.6807;0.6796;0.6838;0.6867;0.6838;0.6822;0.6333;0.629;0.6333;0.6293;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 56, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=56)"
LogisticRegression;0.6743;0.6799;0.6743;0.6735;0.6724;0.6731;0.6724;0.6723;0.6167;0.616;0.6167;0.6146;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 256, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=256)"
LogisticRegression;0.6772;0.6812;0.6772;0.6763;0.6598;0.6643;0.6598;0.6569;0.6167;0.6099;0.6167;0.6099;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
LogisticRegression;0.6785;0.6824;0.6785;0.6779;0.6483;0.6525;0.6483;0.6488;0.6167;0.6099;0.6167;0.6099;smote;1000;StandardScaler;['storyPoints', 'polarity_mean', 'stress_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 742, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=742)"
