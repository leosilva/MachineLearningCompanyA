Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.7972;0.8022;0.7972;0.7968;0.831;0.8312;0.831;0.8311;0.8;0.8109;0.8;0.8014;0.9138;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.791;0.7954;0.791;0.791;0.8076;0.8141;0.8076;0.8094;0.7833;0.8062;0.7833;0.7869;0.9112;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8105;0.8169;0.8105;0.81;0.831;0.8366;0.831;0.8325;0.7833;0.7986;0.7833;0.7853;0.9164;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7999;0.8053;0.7999;0.8006;0.8517;0.8537;0.8517;0.8519;0.7833;0.7986;0.7833;0.7853;0.9191;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8045;0.8074;0.8045;0.8048;0.8172;0.8181;0.8172;0.8176;0.7833;0.7986;0.7833;0.7853;0.918;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8025;0.8075;0.8025;0.8024;0.8172;0.8216;0.8172;0.8182;0.7833;0.7986;0.7833;0.7853;0.9229;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8102;0.8138;0.8102;0.8101;0.8172;0.8256;0.8172;0.819;0.7833;0.8111;0.7833;0.7851;0.9202;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.7933;0.8023;0.7933;0.7932;0.8351;0.8407;0.8351;0.8364;0.7833;0.8111;0.7833;0.7851;0.9059;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7979;0.8067;0.7979;0.7969;0.8144;0.813;0.8144;0.8133;0.7833;0.7934;0.7833;0.7843;0.9152;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8052;0.8082;0.8052;0.805;0.7966;0.7981;0.7966;0.797;0.7667;0.8076;0.7667;0.773;0.9184;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.8082;0.8117;0.8082;0.8089;0.8282;0.8306;0.8282;0.8282;0.7667;0.7922;0.7667;0.7695;0.9158;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8063;0.8105;0.8063;0.8064;0.7621;0.7624;0.7621;0.7597;0.7667;0.7866;0.7667;0.7689;0.9133;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
RandomForestClassifier;0.8339;0.8387;0.8339;0.835;0.8207;0.8256;0.8207;0.822;0.7667;0.7853;0.7667;0.7681;0.9421;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 264};RandomForestClassifier(n_estimators=5, random_state=264)
KNeighborsClassifier;0.7987;0.8029;0.7987;0.7989;0.7828;0.7912;0.7828;0.7832;0.7667;0.7973;0.7667;0.7679;0.9138;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.8159;0.8207;0.8159;0.8159;0.8483;0.8501;0.8483;0.8487;0.75;0.799;0.75;0.7565;0.9211;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8014;0.8027;0.8014;0.801;0.831;0.8308;0.831;0.8306;0.75;0.7794;0.75;0.755;0.9156;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=11)
KNeighborsClassifier;0.7964;0.8045;0.7964;0.7975;0.8069;0.8258;0.8069;0.8086;0.75;0.8;0.75;0.7543;0.9135;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8132;0.8197;0.8132;0.8138;0.8103;0.8141;0.8103;0.8113;0.75;0.7656;0.75;0.754;0.9117;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8143;0.8192;0.8143;0.8145;0.8179;0.8248;0.8179;0.8195;0.75;0.7854;0.75;0.754;0.916;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8102;0.8202;0.8102;0.81;0.8034;0.8179;0.8034;0.805;0.75;0.7888;0.75;0.7523;0.9227;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8113;0.8153;0.8113;0.8111;0.7931;0.8008;0.7931;0.7921;0.75;0.7649;0.75;0.7513;0.917;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8338;0.8378;0.8338;0.8346;0.8247;0.8263;0.8247;0.8251;0.75;0.7583;0.75;0.7501;0.9447;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 540};RandomForestClassifier(n_estimators=20, random_state=540)
MLPClassifier;0.8362;0.8402;0.8362;0.837;0.831;0.84;0.831;0.8319;0.75;0.7796;0.75;0.749;0.9374;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
MLPClassifier;0.8328;0.8375;0.8328;0.8333;0.8655;0.8711;0.8655;0.8664;0.75;0.7796;0.75;0.749;0.9366;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
MLPClassifier;0.8308;0.8339;0.8308;0.8312;0.8621;0.8693;0.8621;0.8633;0.75;0.7796;0.75;0.749;0.9361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
MLPClassifier;0.827;0.8302;0.827;0.8275;0.8694;0.8728;0.8694;0.87;0.75;0.7757;0.75;0.7481;0.9385;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8331;0.8387;0.8331;0.8336;0.8379;0.8419;0.8379;0.8389;0.75;0.7757;0.75;0.7481;0.9383;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
KNeighborsClassifier;0.8045;0.8088;0.8045;0.805;0.8034;0.8113;0.8034;0.8051;0.7333;0.7773;0.7333;0.7387;0.9161;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7959;0.8024;0.7959;0.7959;0.8591;0.8591;0.8591;0.8591;0.7333;0.7625;0.7333;0.738;0.9142;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.7941;0.7989;0.7941;0.7935;0.8552;0.857;0.8552;0.855;0.7333;0.7625;0.7333;0.738;0.9135;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8423;0.8469;0.8423;0.8429;0.8076;0.8193;0.8076;0.8094;0.7333;0.7556;0.7333;0.7365;0.9459;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 356};RandomForestClassifier(n_estimators=20, random_state=356)
KNeighborsClassifier;0.8105;0.8166;0.8105;0.8115;0.8385;0.839;0.8385;0.8384;0.7333;0.7541;0.7333;0.7364;0.9191;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8369;0.8411;0.8369;0.8375;0.8144;0.8255;0.8144;0.816;0.7333;0.7676;0.7333;0.7336;0.9379;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8308;0.835;0.8308;0.8311;0.8207;0.8263;0.8207;0.8206;0.7333;0.7676;0.7333;0.7336;0.938;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8293;0.8341;0.8293;0.8298;0.8586;0.8578;0.8586;0.8579;0.7333;0.7676;0.7333;0.7336;0.9376;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8297;0.8343;0.8297;0.8304;0.8517;0.8524;0.8517;0.8514;0.7333;0.7676;0.7333;0.7336;0.9369;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
MLPClassifier;0.8301;0.8336;0.8301;0.8306;0.8241;0.8282;0.8241;0.8253;0.7333;0.7676;0.7333;0.7336;0.9382;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8281;0.8323;0.8281;0.8289;0.8247;0.8266;0.8247;0.8249;0.7333;0.7634;0.7333;0.7334;0.9384;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
MLPClassifier;0.8308;0.8347;0.8308;0.8314;0.8179;0.8194;0.8179;0.8184;0.7333;0.7634;0.7333;0.7334;0.9379;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
MLPClassifier;0.8346;0.8389;0.8346;0.8351;0.8213;0.8245;0.8213;0.8222;0.7333;0.7634;0.7333;0.7334;0.936;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
RandomForestClassifier;0.8389;0.8426;0.8389;0.8397;0.8276;0.8387;0.8276;0.8282;0.7333;0.7474;0.7333;0.7334;0.944;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 264};RandomForestClassifier(n_estimators=20, random_state=264)
RandomForestClassifier;0.8308;0.8361;0.8308;0.8321;0.8414;0.8441;0.8414;0.8415;0.7333;0.7616;0.7333;0.7324;0.9428;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 356};RandomForestClassifier(n_estimators=10, random_state=356)
MLPClassifier;0.8339;0.8379;0.8339;0.8344;0.8488;0.8505;0.8488;0.8494;0.7333;0.7616;0.7333;0.7324;0.9389;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
KNeighborsClassifier;0.8005;0.8069;0.8005;0.801;0.8076;0.8095;0.8076;0.8084;0.7167;0.7413;0.7167;0.7219;0.913;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8247;0.83;0.8247;0.826;0.8517;0.8543;0.8517;0.8526;0.7167;0.7413;0.7167;0.7218;0.9352;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
KNeighborsClassifier;0.7991;0.8034;0.7991;0.7991;0.8034;0.8092;0.8034;0.8041;0.7167;0.7513;0.7167;0.7211;0.9143;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8067;0.8102;0.8067;0.8072;0.8241;0.8364;0.8241;0.8261;0.7167;0.7513;0.7167;0.7211;0.9146;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8343;0.8383;0.8343;0.8347;0.8172;0.8296;0.8172;0.8192;0.7167;0.7509;0.7167;0.7182;0.9383;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8293;0.8334;0.8293;0.8296;0.8345;0.8358;0.8345;0.8349;0.7167;0.7509;0.7167;0.7182;0.9357;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8361;0.8396;0.8361;0.8366;0.8144;0.8279;0.8144;0.8165;0.7167;0.7557;0.7167;0.7179;0.9383;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
RandomForestClassifier;0.8389;0.8461;0.8389;0.8404;0.7966;0.7984;0.7966;0.7971;0.7167;0.7479;0.7167;0.7178;0.9445;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 264};RandomForestClassifier(n_estimators=20, random_state=264)
MLPClassifier;0.8343;0.8378;0.8343;0.8349;0.8276;0.8316;0.8276;0.8286;0.7167;0.7479;0.7167;0.7178;0.9387;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
RandomForestClassifier;0.8285;0.8327;0.8285;0.8291;0.8625;0.8703;0.8625;0.8641;0.7167;0.7333;0.7167;0.7177;0.943;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 264};RandomForestClassifier(n_estimators=20, random_state=264)
RandomForestClassifier;0.8393;0.8436;0.8393;0.8399;0.8207;0.823;0.8207;0.8212;0.7167;0.7333;0.7167;0.7177;0.9441;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 356};RandomForestClassifier(n_estimators=20, random_state=356)
MLPClassifier;0.832;0.8368;0.832;0.8326;0.8345;0.8356;0.8345;0.834;0.7167;0.7483;0.7167;0.7176;0.9367;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
MLPClassifier;0.829;0.8325;0.829;0.8296;0.8207;0.8202;0.8207;0.8204;0.7167;0.7483;0.7167;0.7176;0.9362;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
MLPClassifier;0.8347;0.8391;0.8347;0.8352;0.831;0.8373;0.831;0.8326;0.7167;0.7473;0.7167;0.7174;0.9378;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
MLPClassifier;0.837;0.8415;0.837;0.8376;0.8034;0.8072;0.8034;0.8045;0.7167;0.7473;0.7167;0.7174;0.939;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
RandomForestClassifier;0.8408;0.8456;0.8408;0.8416;0.8207;0.8222;0.8207;0.8212;0.7167;0.7313;0.7167;0.7166;0.9424;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 540};RandomForestClassifier(n_estimators=20, random_state=540)
MLPClassifier;0.8301;0.8339;0.8301;0.8306;0.8586;0.8606;0.8586;0.8583;0.7167;0.7352;0.7167;0.7158;0.9354;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 796, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=796)
DecisionTreeClassifier;0.8246;0.83;0.8246;0.8259;0.7973;0.8073;0.7973;0.7994;0.7;0.7255;0.7;0.7056;0.9372;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
RandomForestClassifier;0.8357;0.8406;0.8357;0.8364;0.8041;0.8151;0.8041;0.8055;0.7;0.7115;0.7;0.7028;0.946;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 540};RandomForestClassifier(n_estimators=20, random_state=540)
DecisionTreeClassifier;0.8259;0.833;0.8259;0.8272;0.8448;0.851;0.8448;0.8459;0.7;0.735;0.7;0.7027;0.9361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
RandomForestClassifier;0.8358;0.841;0.8358;0.8365;0.8103;0.8153;0.8103;0.8114;0.7;0.7177;0.7;0.702;0.9431;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 264};RandomForestClassifier(n_estimators=20, random_state=264)
RandomForestClassifier;0.83;0.836;0.83;0.8312;0.8454;0.8546;0.8454;0.8467;0.7;0.7177;0.7;0.702;0.9398;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 264};RandomForestClassifier(n_estimators=20, random_state=264)
MLPClassifier;0.8362;0.8403;0.8362;0.8365;0.8414;0.8437;0.8414;0.8422;0.7;0.735;0.7;0.702;0.9369;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
RandomForestClassifier;0.8323;0.8364;0.8323;0.8329;0.8488;0.8497;0.8488;0.8491;0.7;0.7177;0.7;0.702;0.9419;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 540};RandomForestClassifier(n_estimators=5, random_state=540)
RandomForestClassifier;0.8301;0.8332;0.8301;0.8308;0.8276;0.8357;0.8276;0.829;0.7;0.7177;0.7;0.702;0.9444;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 356};RandomForestClassifier(n_estimators=10, random_state=356)
MLPClassifier;0.8263;0.8304;0.8263;0.8265;0.8414;0.8411;0.8414;0.8411;0.7;0.7328;0.7;0.7019;0.9374;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
RandomForestClassifier;0.8369;0.8419;0.8369;0.8378;0.8385;0.8411;0.8385;0.8393;0.7;0.7328;0.7;0.7019;0.9442;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 356};RandomForestClassifier(n_estimators=20, random_state=356)
RandomForestClassifier;0.8278;0.8321;0.8278;0.8286;0.8345;0.8395;0.8345;0.8356;0.7;0.7331;0.7;0.7017;0.9432;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 264};RandomForestClassifier(n_estimators=10, random_state=264)
RandomForestClassifier;0.8277;0.8338;0.8277;0.8286;0.8729;0.8749;0.8729;0.8735;0.7;0.7189;0.7;0.7013;0.939;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 264};RandomForestClassifier(n_estimators=10, random_state=264)
KNeighborsClassifier;0.7956;0.8007;0.7956;0.796;0.8276;0.8334;0.8276;0.8287;0.7;0.7302;0.7;0.7011;0.9168;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8289;0.8348;0.8289;0.8298;0.8522;0.8578;0.8522;0.8535;0.7;0.7028;0.7;0.7011;0.935;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8228;0.8281;0.8228;0.8239;0.8621;0.8651;0.8621;0.8622;0.7;0.7104;0.7;0.7009;0.9341;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
KNeighborsClassifier;0.8079;0.811;0.8079;0.8079;0.8069;0.8248;0.8069;0.809;0.7;0.7547;0.7;0.7008;0.9168;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8323;0.8373;0.8323;0.8333;0.8144;0.8148;0.8144;0.8145;0.7;0.7213;0.7;0.7007;0.9367;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=703)
RandomForestClassifier;0.8362;0.8412;0.8362;0.8373;0.8379;0.8389;0.8379;0.8374;0.7;0.7174;0.7;0.6991;0.9416;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 540};RandomForestClassifier(n_estimators=20, random_state=540)
KNeighborsClassifier;0.7967;0.8042;0.7967;0.7971;0.8179;0.8193;0.8179;0.8185;0.6833;0.725;0.6833;0.6912;0.915;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8293;0.8338;0.8293;0.8301;0.8517;0.8597;0.8517;0.8528;0.6833;0.7262;0.6833;0.6885;0.9417;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 540};RandomForestClassifier(n_estimators=10, random_state=540)
RandomForestClassifier;0.8335;0.8379;0.8335;0.8344;0.8655;0.868;0.8655;0.8662;0.6833;0.7262;0.6833;0.6885;0.9415;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 356};RandomForestClassifier(n_estimators=20, random_state=356)
RandomForestClassifier;0.8381;0.8427;0.8381;0.8389;0.8241;0.8269;0.8241;0.825;0.6833;0.7198;0.6833;0.6869;0.9436;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 264};RandomForestClassifier(n_estimators=20, random_state=264)
MLPClassifier;0.8251;0.8282;0.8251;0.8255;0.8552;0.8584;0.8552;0.856;0.6833;0.7198;0.6833;0.6869;0.937;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
MLPClassifier;0.8278;0.8311;0.8278;0.8282;0.8621;0.8638;0.8621;0.8627;0.6833;0.7198;0.6833;0.6869;0.9361;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
MLPClassifier;0.8331;0.8373;0.8331;0.8335;0.8213;0.8299;0.8213;0.8225;0.6833;0.7189;0.6833;0.6868;0.938;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
DecisionTreeClassifier;0.8285;0.8351;0.8285;0.8301;0.8172;0.8263;0.8172;0.8183;0.6833;0.7189;0.6833;0.6868;0.9363;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
MLPClassifier;0.8285;0.8326;0.8285;0.8292;0.866;0.8767;0.866;0.8666;0.6833;0.7189;0.6833;0.6868;0.9359;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 776, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=776)
RandomForestClassifier;0.8332;0.8381;0.8332;0.8342;0.8414;0.8455;0.8414;0.8419;0.6833;0.7032;0.6833;0.6865;0.9426;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 540};RandomForestClassifier(n_estimators=20, random_state=540)
DecisionTreeClassifier;0.8286;0.8356;0.8286;0.8299;0.8552;0.8589;0.8552;0.8557;0.6833;0.7036;0.6833;0.6863;0.9336;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=703)
RandomForestClassifier;0.8297;0.8343;0.8297;0.8304;0.8655;0.8694;0.8655;0.866;0.6833;0.7219;0.6833;0.686;0.9409;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 356};RandomForestClassifier(n_estimators=20, random_state=356)
MLPClassifier;0.8285;0.8324;0.8285;0.8289;0.8276;0.8309;0.8276;0.8284;0.6833;0.718;0.6833;0.6858;0.9364;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 99, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=99)
RandomForestClassifier;0.835;0.8388;0.835;0.8355;0.8276;0.8305;0.8276;0.8284;0.6833;0.7016;0.6833;0.6852;0.9453;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 356};RandomForestClassifier(n_estimators=20, random_state=356)
RandomForestClassifier;0.832;0.8354;0.832;0.8325;0.8483;0.8475;0.8483;0.8475;0.6833;0.7045;0.6833;0.6846;0.9432;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 264};RandomForestClassifier(n_estimators=20, random_state=264)
DecisionTreeClassifier;0.8274;0.8346;0.8274;0.8286;0.8379;0.838;0.8379;0.8375;0.6833;0.7045;0.6833;0.6846;0.9376;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
DecisionTreeClassifier;0.8296;0.835;0.8296;0.8306;0.8144;0.8208;0.8144;0.8155;0.6833;0.6892;0.6833;0.6841;0.9358;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
RandomForestClassifier;0.8293;0.8335;0.8293;0.8299;0.8552;0.857;0.8552;0.8558;0.6833;0.6931;0.6833;0.6832;0.9402;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 540};RandomForestClassifier(n_estimators=10, random_state=540)
RandomForestClassifier;0.8351;0.8405;0.8351;0.836;0.8241;0.828;0.8241;0.8249;0.6667;0.6917;0.6667;0.6722;0.9446;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 540};RandomForestClassifier(n_estimators=20, random_state=540)
RandomForestClassifier;0.8278;0.8326;0.8278;0.8286;0.8276;0.8376;0.8276;0.8292;0.6667;0.705;0.6667;0.6716;0.9416;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 540};RandomForestClassifier(n_estimators=20, random_state=540)
DecisionTreeClassifier;0.8263;0.8321;0.8263;0.8276;0.8069;0.8154;0.8069;0.8089;0.6667;0.6889;0.6667;0.6698;0.9339;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=375)
DecisionTreeClassifier;0.83;0.8362;0.83;0.831;0.8041;0.8053;0.8041;0.8041;0.6667;0.6889;0.6667;0.6698;0.9358;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
DecisionTreeClassifier;0.8278;0.833;0.8278;0.8289;0.8724;0.8753;0.8724;0.8731;0.6667;0.6889;0.6667;0.6698;0.9337;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
DecisionTreeClassifier;0.832;0.8367;0.832;0.833;0.8207;0.824;0.8207;0.8213;0.6667;0.6889;0.6667;0.6698;0.9347;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8312;0.8366;0.8312;0.8324;0.831;0.8394;0.831;0.8318;0.6667;0.6734;0.6667;0.6678;0.9354;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
DecisionTreeClassifier;0.8328;0.8388;0.8328;0.834;0.8276;0.8304;0.8276;0.8286;0.6667;0.6901;0.6667;0.6676;0.9335;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
SVC;0.7926;0.8012;0.7926;0.7937;0.8172;0.834;0.8172;0.8192;0.6667;0.6938;0.6667;0.6674;0.8973;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.7914;0.8025;0.7914;0.7922;0.8069;0.8106;0.8069;0.8079;0.6667;0.6938;0.6667;0.6674;0.8973;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.796;0.8054;0.796;0.7968;0.8069;0.8088;0.8069;0.8069;0.6667;0.6938;0.6667;0.6674;0.8974;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7884;0.7974;0.7884;0.7894;0.8552;0.8584;0.8552;0.8551;0.6667;0.6938;0.6667;0.6674;0.8944;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
DecisionTreeClassifier;0.8205;0.8273;0.8205;0.8217;0.8586;0.8634;0.8586;0.8599;0.65;0.6913;0.65;0.6562;0.9342;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
DecisionTreeClassifier;0.8209;0.8276;0.8209;0.8223;0.8828;0.8881;0.8828;0.8832;0.65;0.6743;0.65;0.6555;0.9309;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8255;0.8315;0.8255;0.8267;0.8483;0.8504;0.8483;0.8485;0.65;0.6743;0.65;0.6555;0.9324;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
RandomForestClassifier;0.83;0.8336;0.83;0.8303;0.8179;0.8275;0.8179;0.819;0.65;0.6756;0.65;0.655;0.9413;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 356};RandomForestClassifier(n_estimators=5, random_state=356)
DecisionTreeClassifier;0.8259;0.8328;0.8259;0.8271;0.8103;0.817;0.8103;0.8116;0.65;0.6738;0.65;0.6549;0.9331;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=70)
DecisionTreeClassifier;0.8338;0.8409;0.8338;0.835;0.8041;0.8053;0.8041;0.8045;0.65;0.6738;0.65;0.6549;0.9395;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=70)
RandomForestClassifier;0.8351;0.8394;0.8351;0.8358;0.8103;0.8129;0.8103;0.8104;0.65;0.6656;0.65;0.6537;0.9439;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 356};RandomForestClassifier(n_estimators=10, random_state=356)
DecisionTreeClassifier;0.8308;0.8374;0.8308;0.8319;0.8586;0.8618;0.8586;0.8593;0.65;0.6742;0.65;0.653;0.9359;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8236;0.8317;0.8236;0.825;0.8621;0.8636;0.8621;0.8616;0.65;0.6742;0.65;0.653;0.9343;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=703)
DecisionTreeClassifier;0.8236;0.829;0.8236;0.8243;0.8345;0.8348;0.8345;0.834;0.65;0.6653;0.65;0.6529;0.9346;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=375)
SVC;0.786;0.7956;0.786;0.7871;0.8591;0.8684;0.8591;0.8603;0.65;0.6679;0.65;0.6485;0.8914;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7864;0.8;0.7864;0.787;0.8552;0.863;0.8552;0.8569;0.65;0.6679;0.65;0.6485;0.8962;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7806;0.7952;0.7806;0.7816;0.8454;0.8523;0.8454;0.8454;0.65;0.6679;0.65;0.6485;0.8957;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7861;0.8002;0.7861;0.7868;0.8276;0.8404;0.8276;0.8283;0.65;0.6679;0.65;0.6485;0.8984;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7895;0.8009;0.7895;0.7907;0.8172;0.8246;0.8172;0.8184;0.65;0.6679;0.65;0.6485;0.9006;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7913;0.803;0.7913;0.7921;0.8454;0.8512;0.8454;0.8461;0.65;0.6679;0.65;0.6485;0.8955;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.791;0.8018;0.791;0.7922;0.8517;0.8597;0.8517;0.8523;0.65;0.6679;0.65;0.6485;0.8957;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7899;0.8008;0.7899;0.7907;0.8138;0.8202;0.8138;0.8143;0.65;0.6679;0.65;0.6485;0.8972;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7902;0.7988;0.7902;0.7912;0.811;0.8231;0.811;0.8116;0.65;0.6679;0.65;0.6485;0.8966;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7884;0.7992;0.7884;0.7898;0.831;0.8452;0.831;0.8315;0.65;0.6679;0.65;0.6485;0.8967;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.796;0.8062;0.796;0.797;0.8247;0.8324;0.8247;0.8256;0.65;0.6679;0.65;0.6485;0.9009;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7925;0.8042;0.7925;0.7935;0.8179;0.8283;0.8179;0.8197;0.65;0.6679;0.65;0.6485;0.8951;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7899;0.7983;0.7899;0.791;0.8;0.8138;0.8;0.8007;0.65;0.6679;0.65;0.6485;0.8979;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7856;0.7945;0.7856;0.7866;0.8454;0.8491;0.8454;0.8448;0.65;0.6679;0.65;0.6485;0.8944;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.7887;0.8001;0.7887;0.7899;0.866;0.8701;0.866;0.866;0.65;0.6679;0.65;0.6485;0.897;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.7884;0.799;0.7884;0.7895;0.8517;0.8606;0.8517;0.8535;0.65;0.6679;0.65;0.6485;0.8937;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.7868;0.7972;0.7868;0.7881;0.8621;0.867;0.8621;0.8626;0.65;0.6679;0.65;0.6485;0.894;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.7914;0.8011;0.7914;0.7927;0.8241;0.8371;0.8241;0.822;0.65;0.6679;0.65;0.6485;0.8963;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.7822;0.7946;0.7822;0.7837;0.8552;0.8598;0.8552;0.8554;0.65;0.6679;0.65;0.6485;0.8928;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7941;0.8052;0.7941;0.7952;0.8207;0.8233;0.8207;0.8209;0.65;0.6679;0.65;0.6485;0.898;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7876;0.799;0.7876;0.7888;0.831;0.8338;0.831;0.831;0.65;0.6679;0.65;0.6485;0.8955;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7929;0.8049;0.7929;0.7941;0.8517;0.8534;0.8517;0.8521;0.65;0.6679;0.65;0.6485;0.8974;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 564};SVC(C=10, probability=True, random_state=564)
SVC;0.7795;0.7955;0.7795;0.7803;0.8069;0.8092;0.8069;0.8074;0.65;0.6679;0.65;0.6485;0.8948;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
DecisionTreeClassifier;0.8316;0.8377;0.8316;0.8327;0.8069;0.8151;0.8069;0.8079;0.6333;0.6777;0.6333;0.6404;0.9351;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8301;0.8358;0.8301;0.8311;0.8138;0.823;0.8138;0.8147;0.6333;0.6591;0.6333;0.6396;0.9347;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
DecisionTreeClassifier;0.8327;0.838;0.8327;0.8337;0.8213;0.8233;0.8213;0.8217;0.6333;0.6591;0.6333;0.6396;0.9331;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8358;0.842;0.8358;0.837;0.7973;0.7995;0.7973;0.7979;0.6333;0.6591;0.6333;0.6396;0.9381;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 375};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=375)
DecisionTreeClassifier;0.8297;0.8365;0.8297;0.8308;0.8448;0.849;0.8448;0.8458;0.6333;0.6591;0.6333;0.6396;0.9363;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 70};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=70)
DecisionTreeClassifier;0.8258;0.8319;0.8258;0.827;0.8247;0.8259;0.8247;0.8252;0.6333;0.6496;0.6333;0.6376;0.9362;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 703};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=703)
SVC;0.7972;0.8071;0.7972;0.7984;0.8276;0.8344;0.8276;0.8286;0.6333;0.6532;0.6333;0.631;0.8983;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
SVC;0.7693;0.7867;0.7693;0.7695;0.831;0.8325;0.831;0.831;0.6167;0.6367;0.6167;0.6193;0.8944;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 338};SVC(C=10, probability=True, random_state=338)
SVC;0.7902;0.799;0.7902;0.7912;0.8144;0.823;0.8144;0.8158;0.6167;0.6367;0.6167;0.6193;0.8986;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 701};SVC(C=10, probability=True, random_state=701)
LogisticRegression;0.6927;0.7123;0.6927;0.6922;0.7276;0.741;0.7276;0.7283;0.5833;0.6046;0.5833;0.5831;0.8293;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.7027;0.7212;0.7027;0.7023;0.6724;0.6911;0.6724;0.6684;0.5833;0.6046;0.5833;0.5831;0.8329;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.7114;0.7298;0.7114;0.7104;0.631;0.6447;0.631;0.6319;0.5833;0.5988;0.5833;0.582;0.8339;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.7025;0.7209;0.7025;0.702;0.677;0.7039;0.677;0.6719;0.5833;0.5988;0.5833;0.582;0.8306;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.6987;0.7171;0.6987;0.6983;0.732;0.7544;0.732;0.7264;0.5833;0.5988;0.5833;0.582;0.8291;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.7042;0.721;0.7042;0.7033;0.6759;0.7019;0.6759;0.674;0.5833;0.5988;0.5833;0.582;0.8331;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.6961;0.7161;0.6961;0.6947;0.7207;0.7389;0.7207;0.7228;0.5833;0.5988;0.5833;0.582;0.8268;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.7034;0.7245;0.7034;0.7025;0.6862;0.6988;0.6862;0.6828;0.5833;0.5988;0.5833;0.582;0.8345;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.7;0.7179;0.7;0.6991;0.7207;0.744;0.7207;0.7195;0.5833;0.5988;0.5833;0.582;0.8294;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.6992;0.7184;0.6992;0.699;0.7069;0.7189;0.7069;0.7036;0.5833;0.5988;0.5833;0.582;0.8325;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.7038;0.7209;0.7038;0.7027;0.669;0.695;0.669;0.6697;0.5833;0.5988;0.5833;0.582;0.8302;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.7041;0.722;0.7041;0.7027;0.6907;0.7096;0.6907;0.6937;0.5833;0.5988;0.5833;0.582;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.6994;0.7197;0.6994;0.6989;0.6907;0.706;0.6907;0.692;0.5667;0.5864;0.5667;0.5679;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.6996;0.7186;0.6996;0.6985;0.669;0.687;0.669;0.6709;0.5667;0.5864;0.5667;0.5679;0.8316;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.6984;0.7178;0.6984;0.6981;0.7;0.717;0.7;0.6984;0.5667;0.5864;0.5667;0.5679;0.8294;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.7034;0.7205;0.7034;0.7027;0.6931;0.7184;0.6931;0.6938;0.5667;0.5864;0.5667;0.5679;0.8285;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.7025;0.7216;0.7025;0.702;0.6873;0.7004;0.6873;0.6862;0.5667;0.5864;0.5667;0.5679;0.8347;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.6961;0.715;0.6961;0.6955;0.7448;0.7688;0.7448;0.741;0.5667;0.5819;0.5667;0.5669;0.8246;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.6946;0.714;0.6946;0.6939;0.731;0.7474;0.731;0.7312;0.5667;0.5819;0.5667;0.5669;0.8328;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.6992;0.7183;0.6992;0.6984;0.6966;0.7186;0.6966;0.6986;0.5667;0.5819;0.5667;0.5669;0.8261;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.6939;0.7129;0.6939;0.6926;0.7069;0.7337;0.7069;0.7093;0.5667;0.5819;0.5667;0.5669;0.8264;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.6964;0.7158;0.6964;0.6957;0.7251;0.7436;0.7251;0.7248;0.5667;0.5819;0.5667;0.5669;0.8286;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.695;0.7163;0.695;0.6945;0.7069;0.7233;0.7069;0.7082;0.5667;0.5819;0.5667;0.5669;0.8306;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.6938;0.7131;0.6938;0.6923;0.7483;0.76;0.7483;0.7492;0.5667;0.5819;0.5667;0.5669;0.8265;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.6957;0.715;0.6957;0.6954;0.731;0.7507;0.731;0.7313;0.5667;0.5819;0.5667;0.5669;0.8282;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.6984;0.7179;0.6984;0.6981;0.6966;0.7104;0.6966;0.6959;0.5667;0.5819;0.5667;0.5669;0.8294;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 760, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=760)"
LogisticRegression;0.7006;0.719;0.7006;0.6998;0.6976;0.7211;0.6976;0.6966;0.5667;0.5819;0.5667;0.5669;0.8314;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.6991;0.7175;0.6991;0.6986;0.6976;0.7207;0.6976;0.6944;0.5667;0.5819;0.5667;0.5669;0.8282;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
LogisticRegression;0.6996;0.7181;0.6996;0.6984;0.7;0.7185;0.7;0.7;0.5667;0.5819;0.5667;0.5669;0.8311;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 280, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=280)"
LogisticRegression;0.7014;0.7203;0.7014;0.7008;0.6598;0.6744;0.6598;0.6595;0.5667;0.5819;0.5667;0.5669;0.8322;smote;1000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 534, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=534)"
