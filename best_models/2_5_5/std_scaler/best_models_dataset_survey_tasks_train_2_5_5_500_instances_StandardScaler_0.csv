Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8742;0.8775;0.8742;0.8747;0.8889;0.8912;0.8889;0.8896;0.85;0.8579;0.85;0.8507;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
RandomForestClassifier;0.8835;0.8857;0.8835;0.884;0.9236;0.9275;0.9236;0.9242;0.85;0.8563;0.85;0.8504;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 265};RandomForestClassifier(n_estimators=10, random_state=265)
MLPClassifier;0.8001;0.8074;0.8001;0.8009;0.8194;0.8306;0.8194;0.8225;0.85;0.8524;0.85;0.8497;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
MLPClassifier;0.8038;0.812;0.8038;0.8053;0.8889;0.8906;0.8889;0.8885;0.85;0.8524;0.85;0.8497;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
MLPClassifier;0.8125;0.8196;0.8125;0.8128;0.8958;0.8953;0.8958;0.8954;0.85;0.8524;0.85;0.8497;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
MLPClassifier;0.8172;0.824;0.8172;0.8182;0.8264;0.8333;0.8264;0.8284;0.85;0.8565;0.85;0.8493;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
MLPClassifier;0.8032;0.8107;0.8032;0.8038;0.8681;0.8746;0.8681;0.8687;0.85;0.8565;0.85;0.8493;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
MLPClassifier;0.8025;0.8083;0.8025;0.8027;0.8611;0.8607;0.8611;0.8604;0.85;0.8565;0.85;0.8493;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.8148;0.8212;0.8148;0.8159;0.8542;0.8623;0.8542;0.8556;0.85;0.8565;0.85;0.8493;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
RandomForestClassifier;0.8796;0.8816;0.8796;0.8794;0.8472;0.8531;0.8472;0.8467;0.8333;0.8411;0.8333;0.8346;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 265};RandomForestClassifier(n_estimators=10, random_state=265)
RandomForestClassifier;0.8819;0.8848;0.8819;0.8822;0.8542;0.8545;0.8542;0.8541;0.8333;0.8498;0.8333;0.8342;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 265};RandomForestClassifier(n_estimators=20, random_state=265)
RandomForestClassifier;0.882;0.8845;0.882;0.8818;0.8819;0.8866;0.8819;0.8823;0.8333;0.8424;0.8333;0.8336;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
MLPClassifier;0.811;0.818;0.811;0.8121;0.8542;0.8582;0.8542;0.8554;0.8333;0.8379;0.8333;0.8333;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.8125;0.8191;0.8125;0.8135;0.875;0.8774;0.875;0.8758;0.8333;0.8379;0.8333;0.8333;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
RandomForestClassifier;0.8796;0.8829;0.8796;0.8801;0.875;0.8822;0.875;0.8764;0.8333;0.8333;0.8333;0.8333;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 265};RandomForestClassifier(n_estimators=20, random_state=265)
MLPClassifier;0.8172;0.8237;0.8172;0.818;0.875;0.8744;0.875;0.8742;0.8333;0.8437;0.8333;0.8325;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.8194;0.8257;0.8194;0.8201;0.8958;0.8965;0.8958;0.8961;0.8333;0.8437;0.8333;0.8325;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
MLPClassifier;0.8125;0.8187;0.8125;0.8137;0.875;0.8811;0.875;0.8759;0.8333;0.8437;0.8333;0.8325;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
DecisionTreeClassifier;0.8565;0.8586;0.8565;0.856;0.8125;0.8521;0.8125;0.8167;0.8333;0.8333;0.8333;0.8323;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
RandomForestClassifier;0.878;0.8807;0.878;0.8785;0.875;0.8772;0.875;0.8756;0.8333;0.8431;0.8333;0.8323;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 591};RandomForestClassifier(n_estimators=5, random_state=591)
MLPClassifier;0.7994;0.8047;0.7994;0.7996;0.8958;0.9001;0.8958;0.8964;0.8333;0.8387;0.8333;0.8317;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.8094;0.8195;0.8094;0.8112;0.8819;0.8865;0.8819;0.8829;0.8333;0.8387;0.8333;0.8317;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
MLPClassifier;0.8117;0.8149;0.8117;0.812;0.8889;0.8882;0.8889;0.8883;0.8333;0.8387;0.8333;0.8317;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
MLPClassifier;0.8217;0.8268;0.8217;0.8227;0.875;0.8798;0.875;0.8742;0.8333;0.8387;0.8333;0.8317;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
RandomForestClassifier;0.8765;0.8791;0.8765;0.8769;0.8889;0.8897;0.8889;0.8885;0.8167;0.8268;0.8167;0.8185;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 305};RandomForestClassifier(n_estimators=10, random_state=305)
SVC;0.747;0.7613;0.747;0.7488;0.875;0.8839;0.875;0.8759;0.8167;0.8287;0.8167;0.8178;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
KNeighborsClassifier;0.8272;0.8346;0.8272;0.8281;0.8333;0.836;0.8333;0.8335;0.8167;0.8205;0.8167;0.8172;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8765;0.8789;0.8765;0.8767;0.8958;0.8992;0.8958;0.8956;0.8167;0.818;0.8167;0.817;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 591};RandomForestClassifier(n_estimators=10, random_state=591)
MLPClassifier;0.7963;0.8043;0.7963;0.7973;0.875;0.8792;0.875;0.8763;0.8167;0.8241;0.8167;0.8166;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
KNeighborsClassifier;0.8256;0.8289;0.8256;0.826;0.8889;0.8895;0.8889;0.889;0.8167;0.8241;0.8167;0.8166;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8094;0.816;0.8094;0.8103;0.8472;0.8503;0.8472;0.8482;0.8167;0.8241;0.8167;0.8166;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
RandomForestClassifier;0.8781;0.8815;0.8781;0.8784;0.9097;0.9113;0.9097;0.91;0.8167;0.8203;0.8167;0.8162;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 265};RandomForestClassifier(n_estimators=20, random_state=265)
RandomForestClassifier;0.8889;0.8918;0.8889;0.8893;0.8542;0.8553;0.8542;0.8547;0.8167;0.8203;0.8167;0.8162;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 305};RandomForestClassifier(n_estimators=20, random_state=305)
MLPClassifier;0.811;0.8167;0.811;0.8108;0.8333;0.8384;0.8333;0.8346;0.8167;0.8318;0.8167;0.8159;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
MLPClassifier;0.8133;0.8186;0.8133;0.8142;0.8264;0.824;0.8264;0.8236;0.8167;0.8318;0.8167;0.8159;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
MLPClassifier;0.8064;0.811;0.8064;0.8073;0.9028;0.9055;0.9028;0.9033;0.8167;0.8318;0.8167;0.8159;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
MLPClassifier;0.8126;0.818;0.8126;0.8131;0.8958;0.9012;0.8958;0.8972;0.8167;0.8193;0.8167;0.8157;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.8156;0.8231;0.8156;0.8161;0.8264;0.8276;0.8264;0.8268;0.8167;0.8193;0.8167;0.8157;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.8101;0.8154;0.8101;0.8105;0.8264;0.8282;0.8264;0.8258;0.8167;0.8252;0.8167;0.8149;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
RandomForestClassifier;0.8812;0.8832;0.8812;0.8812;0.8472;0.8472;0.8472;0.8472;0.8167;0.8212;0.8167;0.8146;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 265};RandomForestClassifier(n_estimators=10, random_state=265)
RandomForestClassifier;0.8742;0.8789;0.8742;0.8747;0.8819;0.8807;0.8819;0.8808;0.8;0.8178;0.8;0.8038;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 265};RandomForestClassifier(n_estimators=20, random_state=265)
RandomForestClassifier;0.8749;0.8773;0.8749;0.8754;0.8958;0.9017;0.8958;0.897;0.8;0.8101;0.8;0.8019;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 305};RandomForestClassifier(n_estimators=20, random_state=305)
RandomForestClassifier;0.882;0.8849;0.882;0.8823;0.8958;0.8963;0.8958;0.8958;0.8;0.8125;0.8;0.8016;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 305};RandomForestClassifier(n_estimators=20, random_state=305)
RandomForestClassifier;0.8812;0.8847;0.8812;0.8814;0.8889;0.8903;0.8889;0.8877;0.8;0.8068;0.8;0.8011;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 305};RandomForestClassifier(n_estimators=10, random_state=305)
RandomForestClassifier;0.8904;0.8934;0.8904;0.8907;0.8542;0.8605;0.8542;0.8547;0.8;0.8038;0.8;0.801;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 305};RandomForestClassifier(n_estimators=20, random_state=305)
KNeighborsClassifier;0.8279;0.8357;0.8279;0.829;0.8264;0.8314;0.8264;0.8253;0.8;0.8042;0.8;0.801;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8881;0.8929;0.8881;0.8885;0.875;0.8802;0.875;0.8766;0.8;0.813;0.8;0.8006;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
DecisionTreeClassifier;0.8573;0.8598;0.8573;0.8574;0.8125;0.8246;0.8125;0.8143;0.8;0.8072;0.8;0.8005;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
RandomForestClassifier;0.885;0.8884;0.885;0.8852;0.875;0.8795;0.875;0.8765;0.8;0.8039;0.8;0.8005;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
RandomForestClassifier;0.8843;0.8862;0.8843;0.8844;0.875;0.8794;0.875;0.8761;0.8;0.8039;0.8;0.8005;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 305};RandomForestClassifier(n_estimators=20, random_state=305)
RandomForestClassifier;0.8688;0.8729;0.8688;0.8693;0.9236;0.9235;0.9236;0.9233;0.8;0.8057;0.8;0.8003;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 265};RandomForestClassifier(n_estimators=20, random_state=265)
KNeighborsClassifier;0.8217;0.8295;0.8217;0.8231;0.8472;0.8504;0.8472;0.8476;0.8;0.8049;0.8;0.8002;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.8094;0.8148;0.8094;0.8102;0.8958;0.9034;0.8958;0.8974;0.8;0.8108;0.8;0.7996;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
MLPClassifier;0.8078;0.8132;0.8078;0.8082;0.8611;0.8674;0.8611;0.8627;0.8;0.8073;0.8;0.7994;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 368, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=368)
RandomForestClassifier;0.8827;0.8853;0.8827;0.883;0.8819;0.882;0.8819;0.8807;0.8;0.8056;0.8;0.799;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 265};RandomForestClassifier(n_estimators=20, random_state=265)
MLPClassifier;0.8125;0.8188;0.8125;0.8136;0.8611;0.8621;0.8611;0.8612;0.8;0.8056;0.8;0.799;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
KNeighborsClassifier;0.8218;0.833;0.8218;0.8235;0.8472;0.8467;0.8472;0.8466;0.8;0.8068;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8719;0.8749;0.8719;0.872;0.8194;0.8209;0.8194;0.8198;0.8;0.8083;0.8;0.7987;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
MLPClassifier;0.8078;0.8139;0.8078;0.8089;0.8958;0.8964;0.8958;0.896;0.8;0.8052;0.8;0.7985;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
KNeighborsClassifier;0.8225;0.8299;0.8225;0.8237;0.9097;0.9121;0.9097;0.9103;0.8;0.8019;0.8;0.7985;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.7979;0.8048;0.7979;0.7992;0.8889;0.8952;0.8889;0.8899;0.8;0.8052;0.8;0.7985;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.8194;0.8273;0.8194;0.8202;0.8611;0.8651;0.8611;0.8624;0.8;0.8056;0.8;0.7969;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 920, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=920)
DecisionTreeClassifier;0.8603;0.8631;0.8603;0.8608;0.8403;0.8532;0.8403;0.8407;0.8;0.8073;0.8;0.7965;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
RandomForestClassifier;0.8819;0.8854;0.8819;0.8819;0.9097;0.9125;0.9097;0.9104;0.8;0.8045;0.8;0.7964;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
RandomForestClassifier;0.8966;0.8999;0.8966;0.8969;0.8056;0.8055;0.8056;0.8055;0.7833;0.7986;0.7833;0.7854;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
SVC;0.7447;0.7575;0.7447;0.7448;0.8403;0.864;0.8403;0.8419;0.7833;0.8012;0.7833;0.7844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
SVC;0.7299;0.7457;0.7299;0.7292;0.8333;0.8418;0.8333;0.8355;0.7833;0.8012;0.7833;0.7844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
SVC;0.7377;0.753;0.7377;0.7381;0.8681;0.8818;0.8681;0.8703;0.7833;0.8012;0.7833;0.7844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
SVC;0.7539;0.7634;0.7539;0.7558;0.8194;0.8402;0.8194;0.8229;0.7833;0.8012;0.7833;0.7844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7539;0.7597;0.7539;0.7539;0.8333;0.8767;0.8333;0.8363;0.7833;0.8012;0.7833;0.7844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7392;0.7517;0.7392;0.7392;0.8403;0.8563;0.8403;0.8422;0.7833;0.8012;0.7833;0.7844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7454;0.7569;0.7454;0.7456;0.8681;0.8782;0.8681;0.8691;0.7833;0.8012;0.7833;0.7844;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
DecisionTreeClassifier;0.8672;0.8689;0.8672;0.8673;0.8056;0.8056;0.8056;0.805;0.7833;0.7869;0.7833;0.7838;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
RandomForestClassifier;0.8772;0.8792;0.8772;0.8774;0.9097;0.9128;0.9097;0.9094;0.7833;0.7905;0.7833;0.7838;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
KNeighborsClassifier;0.8079;0.8147;0.8079;0.8087;0.8819;0.8818;0.8819;0.8818;0.7833;0.7869;0.7833;0.7838;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8842;0.8883;0.8842;0.8844;0.8958;0.8957;0.8958;0.8955;0.7833;0.7883;0.7833;0.7836;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 591};RandomForestClassifier(n_estimators=20, random_state=591)
KNeighborsClassifier;0.8241;0.8329;0.8241;0.8252;0.875;0.8847;0.875;0.8771;0.7833;0.7857;0.7833;0.7835;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8256;0.8363;0.8256;0.8269;0.8264;0.8299;0.8264;0.8242;0.7833;0.7833;0.7833;0.7833;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.831;0.8391;0.831;0.8316;0.8056;0.8034;0.8056;0.8037;0.7833;0.7913;0.7833;0.7833;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8141;0.8218;0.8141;0.8144;0.8819;0.8921;0.8819;0.8834;0.7833;0.7833;0.7833;0.7833;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8225;0.8291;0.8225;0.8234;0.8681;0.8686;0.8681;0.8683;0.7833;0.7917;0.7833;0.7831;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8218;0.8298;0.8218;0.8227;0.8194;0.8296;0.8194;0.8202;0.7833;0.792;0.7833;0.783;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8102;0.8193;0.8102;0.8116;0.8472;0.8477;0.8472;0.847;0.7833;0.7839;0.7833;0.7827;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8078;0.8167;0.8078;0.8084;0.8819;0.8888;0.8819;0.883;0.7833;0.7861;0.7833;0.7823;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8773;0.8817;0.8773;0.8774;0.8403;0.8574;0.8403;0.8437;0.7667;0.7789;0.7667;0.7697;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 305};RandomForestClassifier(n_estimators=20, random_state=305)
SVC;0.7415;0.7606;0.7415;0.7409;0.8264;0.8542;0.8264;0.8301;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
SVC;0.7492;0.7654;0.7492;0.7498;0.7361;0.7686;0.7361;0.7393;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
SVC;0.7415;0.7562;0.7415;0.7424;0.8264;0.8392;0.8264;0.8274;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7392;0.752;0.7392;0.7398;0.8125;0.8248;0.8125;0.8153;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.747;0.7608;0.747;0.7486;0.8264;0.8476;0.8264;0.8293;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7454;0.7593;0.7454;0.7468;0.8472;0.8546;0.8472;0.847;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
SVC;0.7516;0.7652;0.7516;0.7524;0.8333;0.8445;0.8333;0.8341;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
SVC;0.7584;0.7715;0.7584;0.7597;0.7847;0.8096;0.7847;0.7886;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
SVC;0.7431;0.7533;0.7431;0.7439;0.8958;0.9156;0.8958;0.8983;0.7667;0.7854;0.7667;0.7687;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
DecisionTreeClassifier;0.8712;0.873;0.8712;0.8712;0.7986;0.8121;0.7986;0.7994;0.7667;0.776;0.7667;0.7683;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
DecisionTreeClassifier;0.8688;0.8722;0.8688;0.8688;0.8681;0.8668;0.8681;0.8666;0.7667;0.7746;0.7667;0.7681;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
SVC;0.7593;0.7715;0.7593;0.7602;0.8333;0.8514;0.8333;0.8339;0.7667;0.7775;0.7667;0.7675;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
DecisionTreeClassifier;0.8549;0.8571;0.8549;0.8551;0.8333;0.8427;0.8333;0.8353;0.7667;0.7679;0.7667;0.767;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
KNeighborsClassifier;0.821;0.8296;0.821;0.8218;0.8542;0.8558;0.8542;0.8538;0.7667;0.7679;0.7667;0.767;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
SVC;0.7508;0.7622;0.7508;0.7513;0.8264;0.8488;0.8264;0.829;0.7667;0.7902;0.7667;0.7669;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
KNeighborsClassifier;0.814;0.822;0.814;0.8147;0.9028;0.9037;0.9028;0.9019;0.7667;0.7671;0.7667;0.7666;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8279;0.8353;0.8279;0.8286;0.8819;0.8846;0.8819;0.882;0.7667;0.7671;0.7667;0.7666;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.821;0.8302;0.821;0.8224;0.8819;0.883;0.8819;0.8822;0.7667;0.7671;0.7667;0.7666;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8179;0.8275;0.8179;0.8194;0.9097;0.9095;0.9097;0.9094;0.7667;0.7671;0.7667;0.7666;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8109;0.8199;0.8109;0.8122;0.9097;0.9119;0.9097;0.9104;0.7667;0.7709;0.7667;0.7664;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8657;0.8691;0.8657;0.8656;0.8403;0.8428;0.8403;0.8411;0.7667;0.7698;0.7667;0.766;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
KNeighborsClassifier;0.8187;0.829;0.8187;0.819;0.875;0.8766;0.875;0.8754;0.7667;0.7672;0.7667;0.7659;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8596;0.8625;0.8596;0.8597;0.8889;0.8887;0.8889;0.8887;0.7667;0.7672;0.7667;0.7659;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
RandomForestClassifier;0.8781;0.8812;0.8781;0.8786;0.8958;0.9093;0.8958;0.8973;0.7667;0.775;0.7667;0.7653;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 305};RandomForestClassifier(n_estimators=10, random_state=305)
DecisionTreeClassifier;0.8688;0.871;0.8688;0.8687;0.8681;0.8673;0.8681;0.8653;0.7667;0.7658;0.7667;0.7633;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
SVC;0.7577;0.7762;0.7577;0.7597;0.8333;0.8395;0.8333;0.8339;0.75;0.7714;0.75;0.753;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
SVC;0.7446;0.7598;0.7446;0.7444;0.8194;0.842;0.8194;0.8228;0.75;0.7714;0.75;0.753;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
SVC;0.75;0.7647;0.75;0.7521;0.8125;0.8465;0.8125;0.8165;0.75;0.7703;0.75;0.7528;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
RandomForestClassifier;0.8781;0.8821;0.8781;0.8788;0.9097;0.9154;0.9097;0.9106;0.75;0.7588;0.75;0.7519;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 305};RandomForestClassifier(n_estimators=20, random_state=305)
SVC;0.7507;0.765;0.7507;0.7524;0.8056;0.8106;0.8056;0.8069;0.75;0.7614;0.75;0.7513;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
SVC;0.7454;0.7579;0.7454;0.7475;0.8333;0.846;0.8333;0.8352;0.75;0.7614;0.75;0.7513;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.7353;0.7485;0.7353;0.736;0.8333;0.844;0.8333;0.8348;0.75;0.7616;0.75;0.7512;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
SVC;0.75;0.7615;0.75;0.7513;0.8889;0.8946;0.8889;0.8894;0.75;0.7616;0.75;0.7512;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
RandomForestClassifier;0.8866;0.8888;0.8866;0.8868;0.8542;0.8667;0.8542;0.8564;0.75;0.7743;0.75;0.7507;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 265};RandomForestClassifier(n_estimators=10, random_state=265)
KNeighborsClassifier;0.821;0.8294;0.821;0.8216;0.8681;0.8751;0.8681;0.869;0.75;0.7513;0.75;0.7503;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8642;0.8697;0.8642;0.8646;0.8403;0.8407;0.8403;0.8402;0.75;0.7578;0.75;0.7502;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
KNeighborsClassifier;0.8148;0.8243;0.8148;0.816;0.8958;0.8966;0.8958;0.8958;0.75;0.7512;0.75;0.7497;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.824;0.8338;0.824;0.8253;0.8403;0.8621;0.8403;0.8386;0.75;0.7496;0.75;0.7495;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8811;0.8822;0.8811;0.8809;0.7986;0.8129;0.7986;0.8024;0.75;0.7668;0.75;0.7433;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
SVC;0.7393;0.7528;0.7393;0.7398;0.8403;0.8605;0.8403;0.8426;0.7333;0.7588;0.7333;0.7355;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 703};SVC(C=10, random_state=703)
SVC;0.7608;0.7713;0.7608;0.7629;0.7847;0.8026;0.7847;0.7847;0.7333;0.7458;0.7333;0.735;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
SVC;0.7392;0.7485;0.7392;0.7387;0.8542;0.866;0.8542;0.8555;0.7333;0.7399;0.7333;0.7342;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 962};SVC(C=10, random_state=962)
DecisionTreeClassifier;0.8626;0.864;0.8626;0.862;0.8889;0.8933;0.8889;0.8899;0.7333;0.7354;0.7333;0.7341;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
KNeighborsClassifier;0.8241;0.8325;0.8241;0.8254;0.8542;0.8563;0.8542;0.8548;0.7333;0.7365;0.7333;0.7337;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.875;0.8775;0.875;0.875;0.8819;0.8847;0.8819;0.8827;0.7333;0.7377;0.7333;0.7334;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
KNeighborsClassifier;0.8256;0.8352;0.8256;0.8265;0.8889;0.9043;0.8889;0.8907;0.7333;0.7431;0.7333;0.7332;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8503;0.8522;0.8503;0.8502;0.8958;0.8988;0.8958;0.8965;0.7333;0.7328;0.7333;0.7328;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
DecisionTreeClassifier;0.868;0.8695;0.868;0.8678;0.9028;0.9029;0.9028;0.9023;0.7333;0.7358;0.7333;0.7325;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
DecisionTreeClassifier;0.8766;0.8799;0.8766;0.877;0.8611;0.8607;0.8611;0.8607;0.7333;0.7345;0.7333;0.7297;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
SVC;0.7423;0.7564;0.7423;0.743;0.8611;0.8794;0.8611;0.8627;0.7167;0.7451;0.7167;0.7203;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 990};SVC(C=10, random_state=990)
DecisionTreeClassifier;0.8618;0.8655;0.8618;0.862;0.8681;0.873;0.8681;0.8687;0.7167;0.7333;0.7167;0.7177;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
DecisionTreeClassifier;0.8642;0.8658;0.8642;0.8642;0.8958;0.9026;0.8958;0.8968;0.7167;0.7248;0.7167;0.7169;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
KNeighborsClassifier;0.8195;0.8258;0.8195;0.8204;0.8889;0.8956;0.8889;0.8877;0.7167;0.7185;0.7167;0.7167;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8249;0.8312;0.8249;0.8259;0.8611;0.8643;0.8611;0.8612;0.7167;0.7185;0.7167;0.7167;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8248;0.8318;0.8248;0.8256;0.8819;0.886;0.8819;0.883;0.7167;0.7169;0.7167;0.7159;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8588;0.8605;0.8588;0.8588;0.8819;0.8861;0.8819;0.8829;0.7167;0.7165;0.7167;0.7145;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
DecisionTreeClassifier;0.8542;0.8575;0.8542;0.8544;0.8611;0.8616;0.8611;0.8612;0.7167;0.7188;0.7167;0.7116;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
DecisionTreeClassifier;0.8649;0.867;0.8649;0.8648;0.8194;0.829;0.8194;0.8216;0.7;0.702;0.7;0.7007;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
DecisionTreeClassifier;0.875;0.8772;0.875;0.8746;0.8681;0.8706;0.8681;0.8685;0.7;0.7032;0.7;0.7004;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
DecisionTreeClassifier;0.8773;0.8789;0.8773;0.8774;0.8819;0.8897;0.8819;0.8837;0.7;0.7032;0.7;0.7004;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
DecisionTreeClassifier;0.8712;0.874;0.8712;0.8706;0.8542;0.8587;0.8542;0.854;0.7;0.6984;0.7;0.6983;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
DecisionTreeClassifier;0.8611;0.865;0.8611;0.8612;0.875;0.8821;0.875;0.8766;0.7;0.7014;0.7;0.6961;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 579};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=579)
DecisionTreeClassifier;0.8672;0.869;0.8672;0.8672;0.8889;0.89;0.8889;0.889;0.6833;0.6832;0.6833;0.6813;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 442};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=442)
DecisionTreeClassifier;0.8719;0.8739;0.8719;0.8716;0.8264;0.8266;0.8264;0.8265;0.6833;0.6835;0.6833;0.6799;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
DecisionTreeClassifier;0.8557;0.8574;0.8557;0.8554;0.8819;0.8867;0.8819;0.8828;0.6667;0.664;0.6667;0.6645;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 243};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=243)
LogisticRegression;0.6196;0.622;0.6196;0.6193;0.625;0.633;0.625;0.6272;0.5167;0.5243;0.5167;0.5176;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6289;0.6342;0.6289;0.6286;0.6528;0.6611;0.6528;0.6532;0.5167;0.5243;0.5167;0.5176;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.629;0.6332;0.629;0.6282;0.6667;0.6865;0.6667;0.6655;0.5167;0.5243;0.5167;0.5176;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6265;0.6315;0.6265;0.6264;0.6528;0.6505;0.6528;0.6484;0.5167;0.5243;0.5167;0.5176;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6258;0.6311;0.6258;0.6258;0.6111;0.6209;0.6111;0.6141;0.5167;0.5243;0.5167;0.5176;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6259;0.6316;0.6259;0.6265;0.6736;0.6723;0.6736;0.6716;0.5167;0.5243;0.5167;0.5176;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6343;0.6409;0.6343;0.6348;0.5625;0.5772;0.5625;0.5649;0.5;0.5091;0.5;0.5001;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6358;0.6414;0.6358;0.6356;0.5903;0.6005;0.5903;0.5907;0.5;0.5091;0.5;0.5001;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6327;0.6389;0.6327;0.6327;0.5972;0.6056;0.5972;0.5988;0.5;0.5091;0.5;0.5001;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6204;0.6264;0.6204;0.6204;0.6389;0.6447;0.6389;0.6404;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6234;0.6281;0.6234;0.624;0.6528;0.6524;0.6528;0.6522;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6158;0.6222;0.6158;0.6166;0.6319;0.6419;0.6319;0.633;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.622;0.6257;0.622;0.6219;0.6597;0.6667;0.6597;0.6596;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6126;0.6172;0.6126;0.6127;0.6667;0.6687;0.6667;0.6673;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6188;0.6222;0.6188;0.6184;0.6875;0.69;0.6875;0.6868;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6305;0.6356;0.6305;0.6299;0.6181;0.6162;0.6181;0.6158;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6242;0.6295;0.6242;0.6246;0.6181;0.6243;0.6181;0.6164;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.618;0.6241;0.618;0.618;0.6528;0.6628;0.6528;0.6523;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6257;0.6285;0.6257;0.6251;0.6597;0.659;0.6597;0.6587;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6234;0.6274;0.6234;0.624;0.625;0.624;0.625;0.6232;0.5;0.5057;0.5;0.5;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6219;0.6267;0.6219;0.6221;0.6181;0.6253;0.6181;0.6193;0.4833;0.4907;0.4833;0.4828;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6173;0.6209;0.6173;0.6171;0.6736;0.6836;0.6736;0.6751;0.4833;0.4907;0.4833;0.4828;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6242;0.6271;0.6242;0.6237;0.6736;0.6772;0.6736;0.675;0.4833;0.4907;0.4833;0.4828;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6289;0.633;0.6289;0.6282;0.5833;0.5929;0.5833;0.5843;0.4833;0.4907;0.4833;0.4828;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6358;0.6404;0.6358;0.6355;0.6319;0.6458;0.6319;0.6364;0.4833;0.4907;0.4833;0.4828;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6204;0.6244;0.6204;0.6206;0.6042;0.6141;0.6042;0.6053;0.4833;0.4907;0.4833;0.4828;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 149, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=149)"
LogisticRegression;0.6203;0.6233;0.6203;0.6195;0.6111;0.6107;0.6111;0.6097;0.4833;0.487;0.4833;0.482;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.6289;0.6334;0.6289;0.6287;0.5972;0.5984;0.5972;0.597;0.4833;0.487;0.4833;0.482;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
LogisticRegression;0.6273;0.6323;0.6273;0.6264;0.6528;0.6541;0.6528;0.6521;0.4833;0.487;0.4833;0.482;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 190, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=190)"
LogisticRegression;0.625;0.6291;0.625;0.6243;0.625;0.6269;0.625;0.6254;0.4667;0.4722;0.4667;0.465;smote;500;StandardScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 107, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=107)"
