Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8209;0.8239;0.8209;0.819;0.8403;0.8441;0.8403;0.8414;0.8333;0.8361;0.8333;0.8315;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.868;0.8718;0.868;0.8689;0.8819;0.8837;0.8819;0.8824;0.8167;0.8234;0.8167;0.8178;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 313};RandomForestClassifier(n_estimators=5, random_state=313)
KNeighborsClassifier;0.824;0.8265;0.824;0.8226;0.8333;0.8341;0.8333;0.8326;0.8167;0.8208;0.8167;0.8161;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8195;0.8233;0.8195;0.8183;0.8611;0.8645;0.8611;0.8615;0.8167;0.8208;0.8167;0.8161;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8249;0.8298;0.8249;0.8227;0.8125;0.8088;0.8125;0.807;0.8167;0.8212;0.8167;0.8146;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.838;0.848;0.838;0.8383;0.8681;0.8821;0.8681;0.8691;0.8;0.8182;0.8;0.8033;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
RandomForestClassifier;0.8781;0.8817;0.8781;0.8787;0.8472;0.8541;0.8472;0.8485;0.8;0.8123;0.8;0.803;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 491};RandomForestClassifier(n_estimators=10, random_state=491)
MLPClassifier;0.8225;0.8342;0.8225;0.8222;0.8611;0.8894;0.8611;0.8632;0.8;0.8276;0.8;0.8029;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
KNeighborsClassifier;0.8241;0.8259;0.8241;0.8215;0.8472;0.8514;0.8472;0.8487;0.8;0.8093;0.8;0.8017;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8719;0.8761;0.8719;0.872;0.8542;0.8703;0.8542;0.8572;0.8;0.8109;0.8;0.8014;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 491};RandomForestClassifier(n_estimators=10, random_state=491)
RandomForestClassifier;0.8666;0.8705;0.8666;0.8671;0.8681;0.87;0.8681;0.8686;0.8;0.8102;0.8;0.8014;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 491};RandomForestClassifier(n_estimators=5, random_state=491)
RandomForestClassifier;0.8758;0.882;0.8758;0.8763;0.8611;0.8653;0.8611;0.8607;0.8;0.8109;0.8;0.8014;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
RandomForestClassifier;0.8827;0.8875;0.8827;0.8831;0.8542;0.8644;0.8542;0.8555;0.8;0.8054;0.8;0.8013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 507};RandomForestClassifier(n_estimators=20, random_state=507)
RandomForestClassifier;0.8711;0.8763;0.8711;0.8719;0.875;0.8836;0.875;0.8763;0.8;0.8054;0.8;0.8013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 491};RandomForestClassifier(n_estimators=20, random_state=491)
RandomForestClassifier;0.8727;0.8794;0.8727;0.8735;0.8819;0.8832;0.8819;0.8817;0.8;0.8054;0.8;0.8013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
RandomForestClassifier;0.8704;0.8731;0.8704;0.8708;0.875;0.876;0.875;0.8754;0.8;0.8054;0.8;0.8013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
RandomForestClassifier;0.8765;0.882;0.8765;0.8766;0.8403;0.8445;0.8403;0.8416;0.8;0.8054;0.8;0.8013;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 313};RandomForestClassifier(n_estimators=5, random_state=313)
KNeighborsClassifier;0.8148;0.8186;0.8148;0.8124;0.8333;0.8341;0.8333;0.8297;0.8;0.8067;0.8;0.7974;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
RandomForestClassifier;0.8758;0.8806;0.8758;0.8764;0.8403;0.8509;0.8403;0.84;0.7833;0.8014;0.7833;0.7869;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 491};RandomForestClassifier(n_estimators=10, random_state=491)
KNeighborsClassifier;0.8225;0.822;0.8225;0.8208;0.8194;0.8379;0.8194;0.8196;0.7833;0.8062;0.7833;0.7869;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8249;0.8361;0.8249;0.8261;0.8819;0.889;0.8819;0.8824;0.7833;0.8062;0.7833;0.7869;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
MLPClassifier;0.8341;0.8459;0.8341;0.8347;0.8056;0.8055;0.8056;0.8052;0.7833;0.795;0.7833;0.7865;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
RandomForestClassifier;0.8627;0.8677;0.8627;0.8632;0.8889;0.8956;0.8889;0.8901;0.7833;0.7913;0.7833;0.7852;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 313};RandomForestClassifier(n_estimators=10, random_state=313)
RandomForestClassifier;0.8719;0.8768;0.8719;0.8726;0.8333;0.8401;0.8333;0.8355;0.7833;0.7913;0.7833;0.7852;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 507};RandomForestClassifier(n_estimators=5, random_state=507)
DecisionTreeClassifier;0.8666;0.874;0.8666;0.8675;0.9028;0.9039;0.9028;0.9025;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=11)
DecisionTreeClassifier;0.8735;0.8808;0.8735;0.8744;0.8611;0.8672;0.8611;0.862;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=858)
RandomForestClassifier;0.8704;0.8743;0.8704;0.8709;0.875;0.8757;0.875;0.8751;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 491};RandomForestClassifier(n_estimators=10, random_state=491)
DecisionTreeClassifier;0.8727;0.8761;0.8727;0.8733;0.8125;0.8252;0.8125;0.8159;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=11)
RandomForestClassifier;0.8711;0.8771;0.8711;0.872;0.8681;0.8681;0.8681;0.8681;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 507};RandomForestClassifier(n_estimators=20, random_state=507)
KNeighborsClassifier;0.8186;0.8218;0.8186;0.8179;0.7847;0.7906;0.7847;0.7839;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8072;0.8104;0.8072;0.8047;0.8403;0.8526;0.8403;0.8411;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8643;0.8693;0.8643;0.865;0.8681;0.8711;0.8681;0.8685;0.7833;0.7927;0.7833;0.785;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 491};RandomForestClassifier(n_estimators=10, random_state=491)
RandomForestClassifier;0.8734;0.8796;0.8734;0.8742;0.8542;0.8614;0.8542;0.8526;0.7833;0.7904;0.7833;0.7847;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 507};RandomForestClassifier(n_estimators=10, random_state=507)
RandomForestClassifier;0.8603;0.8652;0.8603;0.8607;0.8958;0.899;0.8958;0.8969;0.7833;0.7855;0.7833;0.7841;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 507};RandomForestClassifier(n_estimators=20, random_state=507)
RandomForestClassifier;0.8673;0.8722;0.8673;0.8678;0.9028;0.9021;0.9028;0.9017;0.7833;0.7855;0.7833;0.7841;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 491};RandomForestClassifier(n_estimators=20, random_state=491)
KNeighborsClassifier;0.8155;0.8187;0.8155;0.8137;0.8611;0.8604;0.8611;0.8605;0.7833;0.7898;0.7833;0.784;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8071;0.8073;0.8071;0.8031;0.8403;0.8411;0.8403;0.8382;0.7833;0.7898;0.7833;0.784;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8225;0.8271;0.8225;0.8209;0.8194;0.821;0.8194;0.82;0.7833;0.7898;0.7833;0.784;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8627;0.8665;0.8627;0.8632;0.8542;0.8548;0.8542;0.8544;0.7833;0.7863;0.7833;0.7839;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 507};RandomForestClassifier(n_estimators=20, random_state=507)
DecisionTreeClassifier;0.8619;0.8677;0.8619;0.8627;0.8472;0.8526;0.8472;0.8461;0.7833;0.7905;0.7833;0.7838;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=858)
KNeighborsClassifier;0.8225;0.828;0.8225;0.8205;0.8194;0.822;0.8194;0.8195;0.7833;0.7897;0.7833;0.7823;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8133;0.8119;0.8133;0.8113;0.8611;0.8668;0.8611;0.8627;0.7833;0.7897;0.7833;0.7823;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8032;0.8036;0.8032;0.7993;0.875;0.8796;0.875;0.8762;0.7833;0.7897;0.7833;0.7823;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8156;0.8156;0.8156;0.8141;0.8611;0.8621;0.8611;0.8615;0.7833;0.7843;0.7833;0.7815;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8388;0.8493;0.8388;0.8396;0.8125;0.8461;0.8125;0.8105;0.7667;0.7863;0.7667;0.7709;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
MLPClassifier;0.8241;0.8394;0.8241;0.8247;0.8681;0.8712;0.8681;0.8692;0.7667;0.7811;0.7667;0.7708;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
MLPClassifier;0.8195;0.8385;0.8195;0.8202;0.8472;0.8488;0.8472;0.8462;0.7667;0.7791;0.7667;0.7703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8426;0.85;0.8426;0.8424;0.8333;0.8317;0.8333;0.8317;0.7667;0.7784;0.7667;0.7699;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
RandomForestClassifier;0.8658;0.8697;0.8658;0.8664;0.8889;0.8888;0.8889;0.8888;0.7667;0.7795;0.7667;0.7691;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 491};RandomForestClassifier(n_estimators=5, random_state=491)
DecisionTreeClassifier;0.8688;0.8753;0.8688;0.8698;0.8889;0.9011;0.8889;0.8894;0.7667;0.7795;0.7667;0.7691;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=235)
DecisionTreeClassifier;0.865;0.8726;0.865;0.866;0.8958;0.9031;0.8958;0.8957;0.7667;0.7795;0.7667;0.7691;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=858)
DecisionTreeClassifier;0.8587;0.8671;0.8587;0.8599;0.8889;0.8928;0.8889;0.8897;0.7667;0.7795;0.7667;0.7691;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=858)
DecisionTreeClassifier;0.8588;0.8673;0.8588;0.8599;0.8542;0.8576;0.8542;0.8534;0.7667;0.7866;0.7667;0.7689;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=235)
RandomForestClassifier;0.8689;0.8721;0.8689;0.8694;0.8403;0.8506;0.8403;0.8432;0.7667;0.7736;0.7667;0.7688;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 313};RandomForestClassifier(n_estimators=10, random_state=313)
RandomForestClassifier;0.8727;0.8781;0.8727;0.873;0.8611;0.8684;0.8611;0.8631;0.7667;0.7736;0.7667;0.7688;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 491};RandomForestClassifier(n_estimators=20, random_state=491)
DecisionTreeClassifier;0.8596;0.8651;0.8596;0.8605;0.875;0.8824;0.875;0.877;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=235)
DecisionTreeClassifier;0.865;0.8718;0.865;0.8659;0.8889;0.8907;0.8889;0.8889;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=235)
KNeighborsClassifier;0.8032;0.8054;0.8032;0.8006;0.8542;0.8573;0.8542;0.8553;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
DecisionTreeClassifier;0.8743;0.8817;0.8743;0.8754;0.8819;0.8817;0.8819;0.8816;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=235)
DecisionTreeClassifier;0.8681;0.8762;0.8681;0.8687;0.8819;0.8873;0.8819;0.8833;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=11)
DecisionTreeClassifier;0.865;0.8736;0.865;0.8658;0.8819;0.8817;0.8819;0.8814;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=11)
KNeighborsClassifier;0.8248;0.8307;0.8248;0.8249;0.8264;0.8357;0.8264;0.829;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
DecisionTreeClassifier;0.8634;0.8707;0.8634;0.8643;0.8125;0.8185;0.8125;0.8145;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=858)
DecisionTreeClassifier;0.8704;0.8775;0.8704;0.8715;0.8611;0.8611;0.8611;0.8611;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=858)
KNeighborsClassifier;0.8102;0.8124;0.8102;0.8085;0.875;0.877;0.875;0.8747;0.7667;0.7754;0.7667;0.7685;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8032;0.8046;0.8032;0.8018;0.8889;0.9;0.8889;0.8903;0.7667;0.7806;0.7667;0.7684;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8163;0.8196;0.8163;0.815;0.8611;0.8676;0.8611;0.8618;0.7667;0.7806;0.7667;0.7684;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
RandomForestClassifier;0.8734;0.879;0.8734;0.8741;0.8333;0.8355;0.8333;0.8342;0.7667;0.7711;0.7667;0.768;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 313};RandomForestClassifier(n_estimators=20, random_state=313)
RandomForestClassifier;0.8712;0.8748;0.8712;0.8716;0.8611;0.869;0.8611;0.8634;0.7667;0.7711;0.7667;0.768;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 507};RandomForestClassifier(n_estimators=5, random_state=507)
KNeighborsClassifier;0.8232;0.8246;0.8232;0.8222;0.8194;0.8182;0.8194;0.818;0.7667;0.7717;0.7667;0.7679;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8626;0.8672;0.8626;0.8632;0.8889;0.8899;0.8889;0.8891;0.7667;0.7679;0.7667;0.767;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 507};RandomForestClassifier(n_estimators=20, random_state=507)
RandomForestClassifier;0.8696;0.873;0.8696;0.8694;0.8889;0.8897;0.8889;0.8892;0.7667;0.768;0.7667;0.767;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 313};RandomForestClassifier(n_estimators=10, random_state=313)
KNeighborsClassifier;0.8062;0.8067;0.8062;0.8037;0.8611;0.8606;0.8611;0.8586;0.7667;0.7687;0.7667;0.7663;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8286;0.8402;0.8286;0.829;0.8333;0.8427;0.8333;0.8323;0.75;0.7677;0.75;0.7549;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
MLPClassifier;0.8226;0.8397;0.8226;0.8223;0.8542;0.8574;0.8542;0.8554;0.75;0.7677;0.75;0.7549;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
MLPClassifier;0.8333;0.8432;0.8333;0.8336;0.8542;0.8528;0.8542;0.8533;0.75;0.7677;0.75;0.7549;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8264;0.84;0.8264;0.8272;0.8611;0.8629;0.8611;0.8585;0.75;0.7639;0.75;0.7544;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
MLPClassifier;0.8171;0.8379;0.8171;0.8189;0.8194;0.8281;0.8194;0.8222;0.75;0.7623;0.75;0.753;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
MLPClassifier;0.8325;0.8474;0.8325;0.8318;0.8194;0.8241;0.8194;0.8211;0.75;0.7623;0.75;0.753;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
MLPClassifier;0.8232;0.8316;0.8232;0.8242;0.8125;0.8091;0.8125;0.8086;0.75;0.764;0.75;0.7529;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
DecisionTreeClassifier;0.8681;0.8735;0.8681;0.8691;0.8611;0.8613;0.8611;0.8612;0.75;0.7667;0.75;0.7529;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=11)
DecisionTreeClassifier;0.8642;0.8729;0.8642;0.8648;0.8472;0.8544;0.8472;0.8464;0.75;0.7615;0.75;0.7528;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=11)
DecisionTreeClassifier;0.8619;0.8693;0.8619;0.8629;0.9028;0.9035;0.9028;0.9027;0.75;0.7615;0.75;0.7528;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=858)
RandomForestClassifier;0.8688;0.8715;0.8688;0.8695;0.8958;0.8959;0.8958;0.8953;0.75;0.7583;0.75;0.7521;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 507};RandomForestClassifier(n_estimators=10, random_state=507)
KNeighborsClassifier;0.8125;0.8145;0.8125;0.8116;0.8333;0.8371;0.8333;0.8334;0.75;0.763;0.75;0.752;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8264;0.8289;0.8264;0.8246;0.8403;0.8429;0.8403;0.8403;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8681;0.8751;0.8681;0.869;0.9236;0.9228;0.9236;0.923;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=235)
DecisionTreeClassifier;0.8688;0.8741;0.8688;0.8695;0.9028;0.9079;0.9028;0.9034;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=858)
DecisionTreeClassifier;0.872;0.8791;0.872;0.8731;0.8681;0.872;0.8681;0.8661;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=235)
DecisionTreeClassifier;0.8634;0.8711;0.8634;0.8645;0.8681;0.8689;0.8681;0.8677;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=858)
DecisionTreeClassifier;0.8619;0.87;0.8619;0.8628;0.9236;0.9252;0.9236;0.9242;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=11)
KNeighborsClassifier;0.8163;0.817;0.8163;0.8146;0.8542;0.8558;0.8542;0.8545;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
DecisionTreeClassifier;0.8711;0.8788;0.8711;0.8724;0.875;0.8777;0.875;0.8745;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=11)
DecisionTreeClassifier;0.8665;0.8756;0.8665;0.8673;0.8889;0.8905;0.8889;0.8894;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=11)
DecisionTreeClassifier;0.8711;0.879;0.8711;0.8717;0.8542;0.8615;0.8542;0.8549;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=235)
DecisionTreeClassifier;0.8712;0.8789;0.8712;0.8719;0.8958;0.8949;0.8958;0.8952;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=235)
DecisionTreeClassifier;0.8704;0.8788;0.8704;0.8714;0.8542;0.8561;0.8542;0.8549;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 11};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=11)
KNeighborsClassifier;0.8187;0.8209;0.8187;0.8175;0.7986;0.8041;0.7986;0.8;0.75;0.7588;0.75;0.7519;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8171;0.8186;0.8171;0.8148;0.875;0.8813;0.875;0.8759;0.75;0.754;0.75;0.751;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
MLPClassifier;0.8225;0.8368;0.8225;0.8235;0.8403;0.8483;0.8403;0.8391;0.75;0.767;0.75;0.7509;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
RandomForestClassifier;0.8619;0.8659;0.8619;0.8624;0.8889;0.8911;0.8889;0.8897;0.75;0.7521;0.75;0.7507;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 313};RandomForestClassifier(n_estimators=5, random_state=313)
RandomForestClassifier;0.8673;0.8738;0.8673;0.868;0.9028;0.9035;0.9028;0.9029;0.75;0.75;0.75;0.75;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 507};RandomForestClassifier(n_estimators=10, random_state=507)
MLPClassifier;0.8418;0.8529;0.8418;0.8424;0.8194;0.8395;0.8194;0.8178;0.75;0.7725;0.75;0.7478;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
MLPClassifier;0.821;0.8403;0.821;0.8216;0.8333;0.8488;0.8333;0.8275;0.75;0.7725;0.75;0.7478;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
KNeighborsClassifier;0.8226;0.8232;0.8226;0.8204;0.8125;0.8102;0.8125;0.8102;0.75;0.7512;0.75;0.7413;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
MLPClassifier;0.8241;0.8371;0.8241;0.8253;0.875;0.875;0.875;0.875;0.7333;0.75;0.7333;0.7387;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
MLPClassifier;0.838;0.8517;0.838;0.8391;0.8611;0.8653;0.8611;0.8624;0.7333;0.7481;0.7333;0.7382;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8249;0.8445;0.8249;0.8261;0.8056;0.8105;0.8056;0.8074;0.7333;0.7473;0.7333;0.7378;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
MLPClassifier;0.8233;0.8449;0.8233;0.8233;0.8681;0.8753;0.8681;0.8691;0.7333;0.7473;0.7333;0.7378;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 879, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=879)
DecisionTreeClassifier;0.872;0.8756;0.872;0.8723;0.8056;0.8108;0.8056;0.8072;0.7333;0.7436;0.7333;0.736;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 235};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=235)
DecisionTreeClassifier;0.8704;0.8774;0.8704;0.8709;0.8472;0.8462;0.8472;0.8466;0.7333;0.7436;0.7333;0.736;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 858};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=858)
MLPClassifier;0.828;0.8405;0.828;0.8291;0.8403;0.846;0.8403;0.8384;0.7333;0.7465;0.7333;0.7358;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
SVC;0.6489;0.6529;0.6489;0.6486;0.8264;0.8447;0.8264;0.8288;0.7333;0.7482;0.7333;0.7354;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
MLPClassifier;0.8326;0.8449;0.8326;0.8329;0.7778;0.7792;0.7778;0.7784;0.7333;0.7387;0.7333;0.7339;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
KNeighborsClassifier;0.8164;0.8179;0.8164;0.814;0.8194;0.8207;0.8194;0.82;0.7333;0.7377;0.7333;0.7277;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8256;0.8425;0.8256;0.8266;0.8681;0.8684;0.8681;0.8682;0.7167;0.7326;0.7167;0.7207;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
LogisticRegression;0.8225;0.8321;0.8225;0.824;0.7917;0.8069;0.7917;0.7959;0.7167;0.7285;0.7167;0.7201;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
SVC;0.638;0.6391;0.638;0.6358;0.7986;0.8041;0.7986;0.8004;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
SVC;0.6412;0.6459;0.6412;0.64;0.8056;0.809;0.8056;0.8046;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
SVC;0.6397;0.642;0.6397;0.6369;0.8333;0.8422;0.8333;0.8355;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
SVC;0.6405;0.6412;0.6405;0.6389;0.875;0.8884;0.875;0.8764;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
SVC;0.6319;0.6336;0.6319;0.631;0.8264;0.8319;0.8264;0.8284;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
LogisticRegression;0.8094;0.8187;0.8094;0.8114;0.8611;0.8644;0.8611;0.8618;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
SVC;0.6357;0.6377;0.6357;0.6347;0.8333;0.8336;0.8333;0.8333;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
SVC;0.645;0.6463;0.645;0.6424;0.7708;0.7689;0.7708;0.7697;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
LogisticRegression;0.8171;0.8264;0.8171;0.8185;0.7708;0.7768;0.7708;0.7719;0.7167;0.7305;0.7167;0.7198;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
MLPClassifier;0.8372;0.846;0.8372;0.8376;0.7847;0.7806;0.7847;0.7811;0.7167;0.7345;0.7167;0.7184;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8325;0.8427;0.8325;0.8333;0.8056;0.8135;0.8056;0.8085;0.7167;0.7345;0.7167;0.7184;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
MLPClassifier;0.8264;0.8437;0.8264;0.8266;0.8194;0.8229;0.8194;0.8208;0.7167;0.7345;0.7167;0.7184;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
MLPClassifier;0.8202;0.8361;0.8202;0.8215;0.8333;0.8345;0.8333;0.8337;0.7167;0.7345;0.7167;0.7184;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 973, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=973)
MLPClassifier;0.8264;0.8381;0.8264;0.827;0.8403;0.8434;0.8403;0.84;0.7;0.7166;0.7;0.7053;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 962, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=962)
LogisticRegression;0.8233;0.833;0.8233;0.8252;0.7639;0.7706;0.7639;0.7653;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
LogisticRegression;0.8171;0.8249;0.8171;0.8189;0.7847;0.8001;0.7847;0.7878;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.8187;0.8272;0.8187;0.8206;0.8264;0.8352;0.8264;0.8286;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
SVC;0.6397;0.6418;0.6397;0.6383;0.8681;0.8699;0.8681;0.8688;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 339};SVC(C=10, kernel='linear', random_state=339)
LogisticRegression;0.8178;0.8267;0.8178;0.8198;0.8194;0.8267;0.8194;0.8215;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.8171;0.8267;0.8171;0.8189;0.8403;0.8445;0.8403;0.8413;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
LogisticRegression;0.8148;0.8209;0.8148;0.8162;0.8056;0.8185;0.8056;0.809;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
SVC;0.6403;0.6412;0.6403;0.639;0.8264;0.8364;0.8264;0.8283;0.7;0.7137;0.7;0.704;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 212};SVC(C=1, kernel='linear', random_state=212)
LogisticRegression;0.8225;0.8317;0.8225;0.8241;0.7639;0.7759;0.7639;0.7675;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
LogisticRegression;0.8164;0.8243;0.8164;0.8183;0.8056;0.8141;0.8056;0.8053;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
SVC;0.6373;0.6393;0.6373;0.6352;0.7778;0.7969;0.7778;0.7825;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
LogisticRegression;0.8218;0.8321;0.8218;0.8228;0.7847;0.7968;0.7847;0.7876;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
LogisticRegression;0.8195;0.8295;0.8195;0.8212;0.7986;0.8007;0.7986;0.7995;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.8125;0.8205;0.8125;0.814;0.8333;0.8395;0.8333;0.8349;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
SVC;0.6381;0.6429;0.6381;0.6374;0.8125;0.8173;0.8125;0.8143;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
SVC;0.6396;0.6401;0.6396;0.6372;0.7986;0.8054;0.7986;0.801;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
SVC;0.6436;0.6451;0.6436;0.6421;0.8333;0.8347;0.8333;0.834;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
LogisticRegression;0.8148;0.824;0.8148;0.8161;0.8125;0.8177;0.8125;0.8143;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
SVC;0.6265;0.6286;0.6265;0.6248;0.7917;0.8085;0.7917;0.7953;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
SVC;0.6365;0.6369;0.6365;0.6354;0.8264;0.8356;0.8264;0.8288;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
LogisticRegression;0.8162;0.8243;0.8162;0.8173;0.7778;0.7865;0.7778;0.7807;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
LogisticRegression;0.8164;0.8254;0.8164;0.8182;0.8333;0.8345;0.8333;0.8334;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
SVC;0.6374;0.6379;0.6374;0.6342;0.8542;0.8537;0.8542;0.8539;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
SVC;0.6413;0.6445;0.6413;0.6386;0.7917;0.8003;0.7917;0.7947;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
SVC;0.6335;0.6367;0.6335;0.6303;0.7847;0.7923;0.7847;0.787;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
LogisticRegression;0.8171;0.8251;0.8171;0.8185;0.7986;0.8165;0.7986;0.802;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
LogisticRegression;0.8171;0.8244;0.8171;0.8189;0.8056;0.8127;0.8056;0.8071;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
SVC;0.6436;0.6436;0.6436;0.6414;0.7708;0.7762;0.7708;0.772;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
SVC;0.6388;0.6399;0.6388;0.6344;0.7917;0.7987;0.7917;0.7942;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
SVC;0.6288;0.6331;0.6288;0.6278;0.8472;0.8473;0.8472;0.8472;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
SVC;0.645;0.6486;0.645;0.6441;0.8056;0.8176;0.8056;0.807;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
SVC;0.6242;0.6242;0.6242;0.6207;0.8403;0.8425;0.8403;0.8411;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
SVC;0.6382;0.6407;0.6382;0.6372;0.8056;0.8123;0.8056;0.8075;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 212};SVC(C=0.1, kernel='linear', random_state=212)
SVC;0.6457;0.6457;0.6457;0.6425;0.7847;0.807;0.7847;0.7895;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
LogisticRegression;0.8133;0.8214;0.8133;0.8149;0.8264;0.8303;0.8264;0.828;0.7;0.7163;0.7;0.703;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
SVC;0.6436;0.6451;0.6436;0.6427;0.8125;0.8182;0.8125;0.814;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'linear', 'random_state': 339};SVC(C=10, kernel='linear', random_state=339)
LogisticRegression;0.8155;0.8245;0.8155;0.8172;0.8125;0.8151;0.8125;0.8124;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.8101;0.8177;0.8101;0.8112;0.8611;0.8643;0.8611;0.862;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
SVC;0.6343;0.6325;0.6343;0.6299;0.8542;0.8568;0.8542;0.8551;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 339};SVC(C=0.1, kernel='linear', random_state=339)
SVC;0.6427;0.6412;0.6427;0.6405;0.8056;0.8111;0.8056;0.8064;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'kernel': 'linear', 'random_state': 25};SVC(C=1, kernel='linear', random_state=25)
LogisticRegression;0.811;0.8203;0.811;0.8126;0.875;0.8807;0.875;0.8765;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.8164;0.8276;0.8164;0.8177;0.8542;0.8596;0.8542;0.8556;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
LogisticRegression;0.8079;0.8172;0.8079;0.8097;0.875;0.875;0.875;0.8745;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
LogisticRegression;0.8202;0.828;0.8202;0.8219;0.8125;0.8231;0.8125;0.8156;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 273, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=273)"
SVC;0.6358;0.638;0.6358;0.6337;0.8472;0.8513;0.8472;0.8487;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'kernel': 'linear', 'random_state': 25};SVC(C=0.1, kernel='linear', random_state=25)
LogisticRegression;0.8179;0.827;0.8179;0.8196;0.7917;0.8009;0.7917;0.7937;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
LogisticRegression;0.8125;0.8222;0.8125;0.8136;0.8542;0.8613;0.8542;0.8564;0.6833;0.6991;0.6833;0.6875;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
LogisticRegression;0.814;0.822;0.814;0.8157;0.8611;0.8733;0.8611;0.8631;0.6833;0.6914;0.6833;0.6862;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 784, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=784)"
LogisticRegression;0.8194;0.8284;0.8194;0.8212;0.7847;0.7914;0.7847;0.7866;0.6667;0.6767;0.6667;0.6698;smote;500;no_scaled;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 421, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=421)"
