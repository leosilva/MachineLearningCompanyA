Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8565;0.8573;0.8565;0.8556;0.8753;0.878;0.8753;0.8762;0.8333;0.8333;0.8333;0.8333;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8638;0.8675;0.8638;0.8639;0.8855;0.8869;0.8855;0.8858;0.8333;0.8322;0.8333;0.8324;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8645;0.8654;0.8645;0.864;0.8809;0.882;0.8809;0.8814;0.8167;0.8221;0.8167;0.818;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8646;0.865;0.8646;0.8638;0.9124;0.9129;0.9124;0.9125;0.8167;0.8221;0.8167;0.818;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8601;0.8618;0.8601;0.8594;0.8933;0.8955;0.8933;0.8934;0.8167;0.818;0.8167;0.817;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8656;0.8661;0.8656;0.8648;0.8698;0.8708;0.8698;0.8696;0.8167;0.8164;0.8167;0.8162;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.849;0.8512;0.849;0.8486;0.8979;0.9002;0.8979;0.8982;0.8;0.8021;0.8;0.8007;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8572;0.8594;0.8572;0.856;0.8754;0.8754;0.8754;0.8754;0.8;0.8021;0.8;0.8007;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8621;0.8633;0.8621;0.8617;0.8753;0.8801;0.8753;0.8757;0.8;0.8021;0.8;0.8007;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8598;0.8605;0.8598;0.8591;0.8449;0.8435;0.8449;0.8425;0.8;0.8064;0.8;0.8007;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8527;0.8554;0.8527;0.851;0.8865;0.8878;0.8865;0.8865;0.8;0.8021;0.8;0.8007;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8595;0.8625;0.8595;0.8588;0.882;0.8827;0.882;0.8821;0.8;0.8035;0.8;0.8005;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8576;0.8595;0.8576;0.8567;0.8809;0.8824;0.8809;0.8813;0.8;0.8;0.8;0.8;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8511;0.8525;0.8511;0.8491;0.8775;0.8781;0.8775;0.8777;0.8;0.8;0.8;0.8;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8612;0.8628;0.8612;0.8611;0.8921;0.8929;0.8921;0.8924;0.8;0.8;0.8;0.8;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8536;0.8569;0.8536;0.8507;0.8777;0.8841;0.8777;0.8784;0.8;0.798;0.8;0.7987;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8533;0.8549;0.8533;0.8522;0.8822;0.8897;0.8822;0.8824;0.7833;0.7833;0.7833;0.7833;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8746;0.8758;0.8746;0.8745;0.8629;0.8624;0.8629;0.8616;0.7833;0.783;0.7833;0.7828;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8652;0.8689;0.8652;0.8648;0.8787;0.8836;0.8787;0.8797;0.7833;0.7863;0.7833;0.7827;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=9)
KNeighborsClassifier;0.8391;0.8394;0.8391;0.837;0.8258;0.8274;0.8258;0.8241;0.7833;0.7816;0.7833;0.7801;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8541;0.8572;0.8541;0.8533;0.8676;0.8705;0.8676;0.8685;0.7667;0.7774;0.7667;0.7682;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8577;0.8584;0.8577;0.8559;0.8899;0.8909;0.8899;0.8902;0.7667;0.7856;0.7667;0.768;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8662;0.8681;0.8662;0.8653;0.8764;0.8778;0.8764;0.8761;0.7667;0.7699;0.7667;0.767;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8663;0.867;0.8663;0.8658;0.8831;0.8851;0.8831;0.8838;0.7667;0.7667;0.7667;0.7667;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8742;0.8763;0.8742;0.8746;0.8292;0.832;0.8292;0.8293;0.7667;0.7667;0.7667;0.7667;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8551;0.8558;0.8551;0.8541;0.8382;0.8375;0.8382;0.8364;0.7667;0.7663;0.7667;0.7662;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.863;0.8662;0.863;0.8619;0.8652;0.87;0.8652;0.8644;0.7667;0.7782;0.7667;0.7661;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8471;0.8482;0.8471;0.8442;0.8799;0.8802;0.8799;0.8792;0.7667;0.7635;0.7667;0.7638;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8653;0.8663;0.8653;0.8644;0.8584;0.8649;0.8584;0.8589;0.7667;0.7694;0.7667;0.7631;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8489;0.8507;0.8489;0.8482;0.8406;0.851;0.8406;0.8402;0.75;0.7535;0.75;0.749;smote;3000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
