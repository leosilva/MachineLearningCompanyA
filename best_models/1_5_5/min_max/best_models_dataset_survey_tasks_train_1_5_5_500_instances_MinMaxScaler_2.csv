Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8464;0.8523;0.8464;0.8459;0.8542;0.8553;0.8542;0.8537;0.8667;0.8677;0.8667;0.8645;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8179;0.8379;0.8179;0.8162;0.875;0.8817;0.875;0.8747;0.85;0.8542;0.85;0.8506;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8156;0.8317;0.8156;0.8138;0.9097;0.9099;0.9097;0.9096;0.85;0.8542;0.85;0.8506;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
RandomForestClassifier;0.8681;0.8702;0.8681;0.8678;0.8611;0.866;0.8611;0.8623;0.85;0.8663;0.85;0.8501;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 478};RandomForestClassifier(n_estimators=10, random_state=478)
RandomForestClassifier;0.8611;0.8643;0.8611;0.8609;0.8819;0.8823;0.8819;0.8817;0.85;0.8671;0.85;0.85;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
MLPClassifier;0.8248;0.8436;0.8248;0.8232;0.8681;0.8708;0.8681;0.8686;0.85;0.8506;0.85;0.8499;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8163;0.8315;0.8163;0.8142;0.8819;0.8825;0.8819;0.8806;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.821;0.8389;0.821;0.8183;0.8542;0.854;0.8542;0.8536;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8195;0.8377;0.8195;0.8175;0.8611;0.867;0.8611;0.8614;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8164;0.8353;0.8164;0.8143;0.875;0.8754;0.875;0.875;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8209;0.838;0.8209;0.8185;0.8472;0.8486;0.8472;0.8475;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8195;0.8368;0.8195;0.8164;0.875;0.8839;0.875;0.874;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8163;0.8353;0.8163;0.8142;0.8819;0.8821;0.8819;0.8819;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8179;0.8358;0.8179;0.8159;0.9028;0.9045;0.9028;0.9032;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8171;0.8338;0.8171;0.8144;0.8542;0.854;0.8542;0.8539;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8217;0.8363;0.8217;0.8188;0.8333;0.8351;0.8333;0.8323;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.821;0.8398;0.821;0.8196;0.8125;0.8144;0.8125;0.8124;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8156;0.8322;0.8156;0.8136;0.9236;0.9269;0.9236;0.9233;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 503, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=503)
MLPClassifier;0.8195;0.837;0.8195;0.818;0.8542;0.8546;0.8542;0.8541;0.85;0.8505;0.85;0.8489;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
KNeighborsClassifier;0.8596;0.8645;0.8596;0.8594;0.8611;0.8611;0.8611;0.8609;0.85;0.8577;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
MLPClassifier;0.8139;0.832;0.8139;0.8109;0.9167;0.9171;0.9167;0.9166;0.85;0.8492;0.85;0.8485;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8156;0.8317;0.8156;0.8129;0.9306;0.9317;0.9306;0.9304;0.85;0.8492;0.85;0.8485;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
KNeighborsClassifier;0.8365;0.8422;0.8365;0.836;0.8125;0.8121;0.8125;0.8119;0.85;0.8492;0.85;0.8485;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8473;0.854;0.8473;0.8466;0.8819;0.8846;0.8819;0.8819;0.85;0.8696;0.85;0.8482;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.848;0.8527;0.848;0.8476;0.8681;0.8716;0.8681;0.869;0.85;0.8592;0.85;0.847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8557;0.863;0.8557;0.8556;0.8403;0.8419;0.8403;0.84;0.85;0.8592;0.85;0.847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8427;0.8471;0.8427;0.8417;0.8611;0.8611;0.8611;0.8611;0.85;0.8592;0.85;0.847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8434;0.8493;0.8434;0.8434;0.8819;0.882;0.8819;0.8818;0.85;0.8592;0.85;0.847;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8442;0.847;0.8442;0.8434;0.9167;0.9186;0.9167;0.917;0.85;0.8523;0.85;0.8466;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
MLPClassifier;0.8249;0.8432;0.8249;0.8232;0.8403;0.8474;0.8403;0.8397;0.8333;0.8348;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
MLPClassifier;0.8233;0.8423;0.8233;0.8215;0.875;0.8751;0.875;0.875;0.8333;0.8348;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
MLPClassifier;0.8156;0.8345;0.8156;0.8122;0.8958;0.8978;0.8958;0.8949;0.8333;0.8348;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
MLPClassifier;0.8233;0.8385;0.8233;0.8214;0.8056;0.8174;0.8056;0.8053;0.8333;0.8348;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8117;0.8313;0.8117;0.8094;0.875;0.8785;0.875;0.8749;0.8333;0.8348;0.8333;0.8337;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
KNeighborsClassifier;0.8495;0.8536;0.8495;0.8492;0.8472;0.855;0.8472;0.8467;0.8333;0.8561;0.8333;0.833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8487;0.8527;0.8487;0.8481;0.875;0.8752;0.875;0.8751;0.8333;0.8561;0.8333;0.833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8542;0.8595;0.8542;0.8542;0.8889;0.8944;0.8889;0.8894;0.8333;0.8383;0.8333;0.8327;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.8726;0.876;0.8726;0.8725;0.8472;0.8478;0.8472;0.8473;0.8333;0.8551;0.8333;0.8326;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 336};RandomForestClassifier(n_estimators=20, random_state=336)
MLPClassifier;0.8194;0.8373;0.8194;0.817;0.8403;0.8399;0.8403;0.8399;0.8333;0.8333;0.8333;0.8323;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
MLPClassifier;0.8179;0.8355;0.8179;0.8158;0.8403;0.853;0.8403;0.8404;0.8333;0.8333;0.8333;0.8323;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
MLPClassifier;0.821;0.8377;0.821;0.8188;0.8542;0.8584;0.8542;0.8526;0.8333;0.8333;0.8333;0.8323;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
MLPClassifier;0.8164;0.8348;0.8164;0.8138;0.875;0.8765;0.875;0.8744;0.8333;0.8338;0.8333;0.8322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
MLPClassifier;0.8187;0.8366;0.8187;0.8166;0.9028;0.9071;0.9028;0.9021;0.8333;0.8338;0.8333;0.8322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 645, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=645)
RandomForestClassifier;0.8565;0.8594;0.8565;0.8561;0.9097;0.9113;0.9097;0.9096;0.8333;0.8548;0.8333;0.8322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 366};RandomForestClassifier(n_estimators=10, random_state=366)
RandomForestClassifier;0.8712;0.8755;0.8712;0.8708;0.8889;0.8889;0.8889;0.8887;0.8333;0.8548;0.8333;0.8322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.8627;0.8672;0.8627;0.8627;0.8889;0.894;0.8889;0.8881;0.8333;0.8548;0.8333;0.8322;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 478};RandomForestClassifier(n_estimators=10, random_state=478)
RandomForestClassifier;0.8472;0.8513;0.8472;0.8469;0.8958;0.8962;0.8958;0.8952;0.8333;0.8679;0.8333;0.8321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
KNeighborsClassifier;0.8365;0.8429;0.8365;0.8352;0.9236;0.9248;0.9236;0.9234;0.8333;0.8447;0.8333;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8519;0.8566;0.8519;0.8516;0.8333;0.8362;0.8333;0.8332;0.8333;0.832;0.8333;0.8313;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
RandomForestClassifier;0.8627;0.8662;0.8627;0.8625;0.8681;0.8789;0.8681;0.8681;0.8333;0.8448;0.8333;0.831;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
KNeighborsClassifier;0.8573;0.8617;0.8573;0.8569;0.8681;0.8721;0.8681;0.8684;0.8333;0.8383;0.8333;0.831;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8719;0.874;0.8719;0.8717;0.8403;0.8496;0.8403;0.8404;0.8333;0.8626;0.8333;0.8307;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 336};RandomForestClassifier(n_estimators=10, random_state=336)
KNeighborsClassifier;0.8387;0.845;0.8387;0.8377;0.8472;0.8481;0.8472;0.8465;0.8333;0.8369;0.8333;0.8303;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8356;0.8402;0.8356;0.8352;0.8611;0.866;0.8611;0.8622;0.8167;0.8432;0.8167;0.8176;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
RandomForestClassifier;0.8742;0.8771;0.8742;0.8742;0.8611;0.8629;0.8611;0.8615;0.8167;0.8292;0.8167;0.8172;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 478};RandomForestClassifier(n_estimators=10, random_state=478)
RandomForestClassifier;0.8588;0.8624;0.8588;0.8585;0.9028;0.9038;0.9028;0.9028;0.8167;0.8406;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 336};RandomForestClassifier(n_estimators=10, random_state=336)
RandomForestClassifier;0.8518;0.8575;0.8518;0.852;0.8403;0.8403;0.8403;0.8397;0.8167;0.8406;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 336};RandomForestClassifier(n_estimators=5, random_state=336)
RandomForestClassifier;0.8681;0.8699;0.8681;0.8677;0.8542;0.8546;0.8542;0.8536;0.8167;0.8406;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 478};RandomForestClassifier(n_estimators=10, random_state=478)
RandomForestClassifier;0.8619;0.8652;0.8619;0.8618;0.8889;0.8906;0.8889;0.8889;0.8167;0.8406;0.8167;0.8171;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8581;0.8615;0.8581;0.8581;0.8681;0.8698;0.8681;0.8682;0.8167;0.8223;0.8167;0.8169;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 336};RandomForestClassifier(n_estimators=5, random_state=336)
RandomForestClassifier;0.855;0.8576;0.855;0.8546;0.9514;0.9524;0.9514;0.9517;0.8167;0.8406;0.8167;0.8162;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 478};RandomForestClassifier(n_estimators=20, random_state=478)
RandomForestClassifier;0.8781;0.8801;0.8781;0.8779;0.7847;0.7879;0.7847;0.7845;0.8167;0.831;0.8167;0.8158;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
RandomForestClassifier;0.8719;0.8744;0.8719;0.8716;0.8403;0.8408;0.8403;0.8401;0.8167;0.8296;0.8167;0.8156;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 478};RandomForestClassifier(n_estimators=10, random_state=478)
MLPClassifier;0.8133;0.8313;0.8133;0.8109;0.8819;0.8828;0.8819;0.8822;0.8167;0.8172;0.8167;0.8155;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
MLPClassifier;0.821;0.8357;0.821;0.818;0.8403;0.8416;0.8403;0.8404;0.8167;0.8172;0.8167;0.8155;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 755, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=755)
KNeighborsClassifier;0.8518;0.8551;0.8518;0.8514;0.8472;0.8517;0.8472;0.8476;0.8167;0.8178;0.8167;0.8148;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.8588;0.8645;0.8588;0.859;0.8681;0.8719;0.8681;0.8678;0.8167;0.822;0.8167;0.8148;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 336};RandomForestClassifier(n_estimators=10, random_state=336)
RandomForestClassifier;0.8488;0.8528;0.8488;0.849;0.9236;0.9236;0.9236;0.9235;0.8167;0.8442;0.8167;0.8144;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 336};RandomForestClassifier(n_estimators=10, random_state=336)
RandomForestClassifier;0.875;0.8777;0.875;0.8748;0.8333;0.8342;0.8333;0.8312;0.8167;0.8442;0.8167;0.8139;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 336};RandomForestClassifier(n_estimators=20, random_state=336)
KNeighborsClassifier;0.8464;0.8512;0.8464;0.8458;0.8542;0.8545;0.8542;0.8541;0.8167;0.8222;0.8167;0.8138;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8472;0.8525;0.8472;0.8467;0.8681;0.87;0.8681;0.8686;0.8167;0.8218;0.8167;0.812;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8518;0.8566;0.8518;0.8515;0.8403;0.8436;0.8403;0.841;0.8;0.827;0.8;0.8019;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
SVC;0.8094;0.833;0.8094;0.8077;0.8264;0.8316;0.8264;0.827;0.8;0.8128;0.8;0.8015;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
SVC;0.8133;0.8354;0.8133;0.8121;0.7986;0.808;0.7986;0.8001;0.8;0.8128;0.8;0.8015;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
KNeighborsClassifier;0.8527;0.8588;0.8527;0.8529;0.8611;0.8692;0.8611;0.8611;0.8;0.8258;0.8;0.8012;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier()
DecisionTreeClassifier;0.8618;0.8646;0.8618;0.8618;0.8611;0.8673;0.8611;0.859;0.8;0.8258;0.8;0.8012;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
SVC;0.8071;0.8316;0.8071;0.806;0.8542;0.8554;0.8542;0.8535;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
SVC;0.8078;0.8332;0.8078;0.8077;0.7986;0.8034;0.7986;0.7969;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
SVC;0.8118;0.8345;0.8118;0.811;0.8681;0.8698;0.8681;0.8681;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
SVC;0.804;0.8287;0.804;0.8031;0.8681;0.8717;0.8681;0.8671;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
SVC;0.8117;0.8349;0.8117;0.8098;0.8264;0.8326;0.8264;0.8252;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
DecisionTreeClassifier;0.8642;0.8683;0.8642;0.8641;0.8333;0.8344;0.8333;0.8329;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
SVC;0.8118;0.8367;0.8118;0.8113;0.8403;0.8447;0.8403;0.84;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.8047;0.8298;0.8047;0.8035;0.8542;0.8621;0.8542;0.8509;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.8079;0.83;0.8079;0.8066;0.9028;0.9048;0.9028;0.903;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.811;0.834;0.811;0.8099;0.7917;0.8007;0.7917;0.7922;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.8133;0.836;0.8133;0.8122;0.8611;0.8702;0.8611;0.8622;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.8086;0.8339;0.8086;0.808;0.8264;0.832;0.8264;0.8264;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
SVC;0.8063;0.8309;0.8063;0.8058;0.8681;0.8691;0.8681;0.867;0.8;0.8057;0.8;0.8003;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
RandomForestClassifier;0.8619;0.8652;0.8619;0.8614;0.8681;0.8703;0.8681;0.8684;0.8;0.8327;0.8;0.8002;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 478};RandomForestClassifier(n_estimators=5, random_state=478)
SVC;0.8202;0.8426;0.8202;0.8191;0.8403;0.8555;0.8403;0.8368;0.8;0.802;0.8;0.7997;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
SVC;0.8141;0.8359;0.8141;0.8135;0.8403;0.8472;0.8403;0.8382;0.8;0.802;0.8;0.7997;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
DecisionTreeClassifier;0.8603;0.8631;0.8603;0.8603;0.8611;0.8632;0.8611;0.8585;0.8;0.8235;0.8;0.7993;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
RandomForestClassifier;0.8643;0.868;0.8643;0.8642;0.875;0.8789;0.875;0.8751;0.8;0.8303;0.8;0.7993;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 336};RandomForestClassifier(n_estimators=10, random_state=336)
KNeighborsClassifier;0.8418;0.8464;0.8418;0.8409;0.8681;0.8688;0.8681;0.8682;0.8;0.8303;0.8;0.7993;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8503;0.8564;0.8503;0.8496;0.8264;0.8337;0.8264;0.8261;0.8;0.805;0.8;0.7993;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.8425;0.8465;0.8425;0.8415;0.8125;0.814;0.8125;0.8123;0.8;0.7988;0.8;0.7991;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.834;0.8402;0.834;0.8333;0.8194;0.8318;0.8194;0.8151;0.8;0.8056;0.8;0.799;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8689;0.8713;0.8689;0.869;0.8056;0.8114;0.8056;0.8067;0.8;0.8297;0.8;0.7989;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 336};RandomForestClassifier(n_estimators=10, random_state=336)
RandomForestClassifier;0.868;0.8707;0.868;0.8681;0.8472;0.8485;0.8472;0.8476;0.8;0.8297;0.8;0.7989;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 366};RandomForestClassifier(n_estimators=20, random_state=366)
DecisionTreeClassifier;0.8488;0.8519;0.8488;0.8487;0.8333;0.8336;0.8333;0.8323;0.8;0.8179;0.8;0.7984;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
DecisionTreeClassifier;0.8612;0.8644;0.8612;0.8605;0.8542;0.8594;0.8542;0.8537;0.8;0.8179;0.8;0.7984;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8665;0.8701;0.8665;0.8665;0.8194;0.8265;0.8194;0.8196;0.8;0.8309;0.8;0.7982;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
KNeighborsClassifier;0.8442;0.8503;0.8442;0.8437;0.8472;0.8476;0.8472;0.8472;0.8;0.8008;0.8;0.7982;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
RandomForestClassifier;0.8726;0.8756;0.8726;0.8724;0.8403;0.8433;0.8403;0.8405;0.8;0.8144;0.8;0.7981;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 366};RandomForestClassifier(n_estimators=10, random_state=366)
RandomForestClassifier;0.8681;0.8705;0.8681;0.8678;0.8819;0.8867;0.8819;0.8821;0.8;0.8291;0.8;0.7981;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 366};RandomForestClassifier(n_estimators=10, random_state=366)
RandomForestClassifier;0.8619;0.8661;0.8619;0.8618;0.8611;0.8642;0.8611;0.8608;0.8;0.8087;0.8;0.7968;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 366};RandomForestClassifier(n_estimators=5, random_state=366)
DecisionTreeClassifier;0.8456;0.8492;0.8456;0.8457;0.9167;0.9183;0.9167;0.9161;0.8;0.8186;0.8;0.7942;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=876)
SVC;0.8063;0.8313;0.8063;0.8046;0.8403;0.8436;0.8403;0.8398;0.7833;0.7986;0.7833;0.7854;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
DecisionTreeClassifier;0.8542;0.8564;0.8542;0.8536;0.9028;0.9044;0.9028;0.9028;0.7833;0.7999;0.7833;0.7842;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
SVC;0.8102;0.8356;0.8102;0.8091;0.8194;0.8322;0.8194;0.822;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
SVC;0.8094;0.8325;0.8094;0.8087;0.8472;0.8513;0.8472;0.8461;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.8064;0.8313;0.8064;0.8045;0.8681;0.8692;0.8681;0.8675;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.8032;0.8265;0.8032;0.8018;0.8819;0.8824;0.8819;0.8819;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
SVC;0.8047;0.829;0.8047;0.8039;0.9097;0.9151;0.9097;0.9088;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
SVC;0.8048;0.828;0.8048;0.8036;0.8681;0.8742;0.8681;0.8685;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
SVC;0.8071;0.8314;0.8071;0.8064;0.8472;0.8513;0.8472;0.8464;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
SVC;0.811;0.8339;0.811;0.8098;0.8472;0.8504;0.8472;0.8468;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
KNeighborsClassifier;0.824;0.829;0.824;0.8228;0.8125;0.8293;0.8125;0.8122;0.7833;0.7847;0.7833;0.7837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
SVC;0.8125;0.8368;0.8125;0.8113;0.8611;0.8617;0.8611;0.8604;0.7833;0.7857;0.7833;0.7835;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 370};SVC(C=10, random_state=370)
SVC;0.8016;0.8257;0.8016;0.8008;0.875;0.8797;0.875;0.8751;0.7833;0.7857;0.7833;0.7835;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
KNeighborsClassifier;0.8334;0.8379;0.8334;0.833;0.8264;0.8293;0.8264;0.826;0.7833;0.7913;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.8542;0.8573;0.8542;0.8539;0.875;0.8767;0.875;0.8749;0.7833;0.8011;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.8488;0.8508;0.8488;0.8483;0.8819;0.8815;0.8819;0.8815;0.7833;0.7913;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
DecisionTreeClassifier;0.8658;0.8687;0.8658;0.8652;0.8403;0.8462;0.8403;0.8396;0.7833;0.7992;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
KNeighborsClassifier;0.8387;0.8459;0.8387;0.8384;0.8264;0.8353;0.8264;0.8258;0.7833;0.7913;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8665;0.8673;0.8665;0.8659;0.8194;0.8227;0.8194;0.819;0.7833;0.8011;0.7833;0.7833;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
RandomForestClassifier;0.8589;0.8628;0.8589;0.8587;0.875;0.8759;0.875;0.875;0.7833;0.7957;0.7833;0.7832;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 478};RandomForestClassifier(n_estimators=5, random_state=478)
DecisionTreeClassifier;0.8673;0.872;0.8673;0.867;0.8333;0.8373;0.8333;0.8331;0.7833;0.7917;0.7833;0.7831;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
DecisionTreeClassifier;0.8596;0.8628;0.8596;0.8594;0.8819;0.8836;0.8819;0.8818;0.7833;0.7923;0.7833;0.7821;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
DecisionTreeClassifier;0.8611;0.8645;0.8611;0.8612;0.8333;0.8366;0.8333;0.8318;0.7833;0.8072;0.7833;0.7808;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8542;0.8579;0.8542;0.8544;0.8542;0.8565;0.8542;0.8545;0.7833;0.7871;0.7833;0.7807;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=876)
DecisionTreeClassifier;0.8496;0.8531;0.8496;0.8493;0.875;0.8782;0.875;0.8747;0.7833;0.7865;0.7833;0.7777;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=399)
KNeighborsClassifier;0.841;0.8463;0.841;0.8403;0.8333;0.8407;0.8333;0.8317;0.7667;0.7718;0.7667;0.7672;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
SVC;0.8094;0.8326;0.8094;0.808;0.8194;0.8324;0.8194;0.8196;0.7667;0.7702;0.7667;0.7671;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
SVC;0.8086;0.8332;0.8086;0.8076;0.8472;0.8482;0.8472;0.8451;0.7667;0.7702;0.7667;0.7671;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 423};SVC(C=10, random_state=423)
SVC;0.8063;0.8305;0.8063;0.8049;0.8611;0.8622;0.8611;0.8607;0.7667;0.7702;0.7667;0.7671;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 157};SVC(C=10, random_state=157)
DecisionTreeClassifier;0.8572;0.8602;0.8572;0.857;0.8819;0.8951;0.8819;0.8805;0.7667;0.7761;0.7667;0.7667;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
DecisionTreeClassifier;0.8627;0.8656;0.8627;0.8623;0.8889;0.8913;0.8889;0.8882;0.7667;0.7878;0.7667;0.7665;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
DecisionTreeClassifier;0.8619;0.8658;0.8619;0.8617;0.8403;0.8415;0.8403;0.8405;0.7667;0.7881;0.7667;0.7664;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8635;0.8668;0.8635;0.8631;0.8542;0.8545;0.8542;0.8539;0.7667;0.7782;0.7667;0.7661;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=876)
DecisionTreeClassifier;0.8503;0.8548;0.8503;0.8502;0.8681;0.8681;0.8681;0.8675;0.7667;0.7782;0.7667;0.7661;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 20, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=20, random_state=549)
DecisionTreeClassifier;0.8557;0.8597;0.8557;0.8556;0.8056;0.8079;0.8056;0.8043;0.7667;0.7876;0.7667;0.7655;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.8603;0.8633;0.8603;0.8599;0.8264;0.8293;0.8264;0.8267;0.7667;0.7789;0.7667;0.7643;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.8626;0.8653;0.8626;0.8624;0.8056;0.8069;0.8056;0.8058;0.7667;0.7794;0.7667;0.7627;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 10, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=10, random_state=549)
DecisionTreeClassifier;0.858;0.863;0.858;0.8578;0.8125;0.8153;0.8125;0.8126;0.75;0.7625;0.75;0.7493;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
DecisionTreeClassifier;0.848;0.8521;0.848;0.8479;0.8472;0.8501;0.8472;0.8456;0.75;0.7542;0.75;0.7492;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8611;0.8643;0.8611;0.8608;0.8819;0.8828;0.8819;0.8819;0.75;0.7631;0.75;0.7491;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 399};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=399)
DecisionTreeClassifier;0.8719;0.8776;0.8719;0.8717;0.7986;0.8025;0.7986;0.7985;0.75;0.7763;0.75;0.7484;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 876};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=876)
DecisionTreeClassifier;0.8534;0.8552;0.8534;0.8533;0.8333;0.8368;0.8333;0.834;0.7333;0.7354;0.7333;0.7321;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 549};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=549)
LogisticRegression;0.72;0.7309;0.72;0.7178;0.7639;0.7659;0.7639;0.7603;0.6833;0.6865;0.6833;0.6837;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.72;0.7355;0.72;0.7173;0.75;0.7594;0.75;0.7499;0.6667;0.6723;0.6667;0.6668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7152;0.7291;0.7152;0.7134;0.7083;0.7253;0.7083;0.7049;0.6667;0.6723;0.6667;0.6668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7252;0.7348;0.7252;0.723;0.6806;0.7043;0.6806;0.6774;0.6667;0.6723;0.6667;0.6668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7075;0.7249;0.7075;0.7056;0.7708;0.7805;0.7708;0.7668;0.6667;0.6723;0.6667;0.6668;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7215;0.7355;0.7215;0.7197;0.6528;0.6611;0.6528;0.6508;0.6667;0.6713;0.6667;0.6659;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7022;0.719;0.7022;0.6998;0.8056;0.8193;0.8056;0.8045;0.6667;0.6667;0.6667;0.6649;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7075;0.7183;0.7075;0.7049;0.7431;0.7498;0.7431;0.7419;0.6667;0.6719;0.6667;0.6643;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7137;0.7305;0.7137;0.7114;0.7708;0.7814;0.7708;0.7685;0.6667;0.6719;0.6667;0.6643;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7099;0.7245;0.7099;0.7078;0.6806;0.7047;0.6806;0.682;0.6667;0.673;0.6667;0.6617;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7322;0.7447;0.7322;0.7307;0.6319;0.6368;0.6319;0.6241;0.6667;0.6673;0.6667;0.6615;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7229;0.7353;0.7229;0.7204;0.7431;0.7477;0.7431;0.7431;0.65;0.6556;0.65;0.6501;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7238;0.7366;0.7238;0.7215;0.7569;0.7637;0.7569;0.7584;0.65;0.6556;0.65;0.6501;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7222;0.7345;0.7222;0.7206;0.7083;0.7185;0.7083;0.7039;0.65;0.6562;0.65;0.6495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7161;0.7295;0.7161;0.7134;0.7083;0.7188;0.7083;0.7056;0.65;0.6562;0.65;0.6495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.726;0.7441;0.726;0.7246;0.6875;0.7249;0.6875;0.6829;0.65;0.6562;0.65;0.6495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7098;0.7255;0.7098;0.7083;0.7708;0.7794;0.7708;0.7702;0.65;0.6562;0.65;0.6495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.716;0.7256;0.716;0.7124;0.6736;0.6859;0.6736;0.6742;0.65;0.6562;0.65;0.6495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7099;0.7206;0.7099;0.707;0.7361;0.752;0.7361;0.7334;0.65;0.6583;0.65;0.6495;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7067;0.7219;0.7067;0.7044;0.6806;0.699;0.6806;0.674;0.65;0.653;0.65;0.6494;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7137;0.7311;0.7137;0.7118;0.6667;0.6754;0.6667;0.6669;0.65;0.6588;0.65;0.6471;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7076;0.7238;0.7076;0.7053;0.7431;0.7503;0.7431;0.7415;0.65;0.6505;0.65;0.6467;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7214;0.7334;0.7214;0.7191;0.6667;0.7011;0.6667;0.6678;0.6333;0.642;0.6333;0.6336;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7199;0.728;0.7199;0.7169;0.7153;0.7238;0.7153;0.7151;0.6333;0.6417;0.6333;0.6328;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7122;0.7256;0.7122;0.7106;0.7222;0.7357;0.7222;0.717;0.6333;0.6417;0.6333;0.6328;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.733;0.7439;0.733;0.7311;0.6458;0.6717;0.6458;0.6454;0.6333;0.643;0.6333;0.6325;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7083;0.7192;0.7083;0.7061;0.7361;0.7403;0.7361;0.7315;0.6333;0.643;0.6333;0.6325;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
LogisticRegression;0.7145;0.7295;0.7145;0.7116;0.6736;0.709;0.6736;0.6749;0.6333;0.6343;0.6333;0.6308;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 966, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=966)"
LogisticRegression;0.7269;0.7388;0.7269;0.7245;0.6736;0.6749;0.6736;0.6678;0.6167;0.6191;0.6167;0.6144;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 640, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=640)"
LogisticRegression;0.7283;0.7411;0.7283;0.726;0.7014;0.7034;0.7014;0.701;0.6167;0.6205;0.6167;0.6139;smote;500;MinMaxScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 7, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=7)"
