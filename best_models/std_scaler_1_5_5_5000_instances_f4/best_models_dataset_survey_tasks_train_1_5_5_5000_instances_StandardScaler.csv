Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9308;0.9326;0.9308;0.9309;0.9356;0.9352;0.9356;0.9353;0.8333;0.8371;0.8333;0.8307;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9313;0.9329;0.9313;0.9313;0.9295;0.9322;0.9295;0.9299;0.8167;0.8187;0.8167;0.8147;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9284;0.9294;0.9284;0.9283;0.9356;0.9357;0.9356;0.9354;0.8167;0.8171;0.8167;0.8144;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9322;0.9339;0.9322;0.9323;0.9248;0.925;0.9248;0.9249;0.8167;0.8225;0.8167;0.8124;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9295;0.9301;0.9295;0.9296;0.9315;0.9315;0.9315;0.931;0.8167;0.8225;0.8167;0.8124;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.926;0.9276;0.926;0.9262;0.9315;0.9341;0.9315;0.9318;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9289;0.9304;0.9289;0.929;0.947;0.9492;0.947;0.947;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9255;0.9268;0.9255;0.9255;0.9483;0.9503;0.9483;0.9484;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9242;0.925;0.9242;0.924;0.9302;0.9319;0.9302;0.9304;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9311;0.9318;0.9311;0.9312;0.9154;0.9161;0.9154;0.9156;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9313;0.9322;0.9313;0.9313;0.9228;0.9252;0.9228;0.923;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9296;0.9308;0.9296;0.9297;0.9396;0.9404;0.9396;0.9396;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9296;0.9317;0.9296;0.9297;0.9262;0.9351;0.9262;0.9268;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9257;0.927;0.9257;0.9258;0.9423;0.943;0.9423;0.9425;0.8;0.8002;0.8;0.7988;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9307;0.9318;0.9307;0.9308;0.9182;0.9228;0.9182;0.9186;0.8;0.7989;0.8;0.7985;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9288;0.93;0.9288;0.9289;0.9484;0.9493;0.9484;0.9483;0.8;0.7989;0.8;0.7985;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9295;0.9311;0.9295;0.9297;0.9323;0.933;0.9323;0.9318;0.8;0.8029;0.8;0.797;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9329;0.9345;0.9329;0.933;0.9336;0.9337;0.9336;0.9333;0.8;0.8011;0.8;0.7963;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9278;0.9292;0.9278;0.928;0.9396;0.9413;0.9396;0.9396;0.8;0.8011;0.8;0.7963;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9312;0.9325;0.9312;0.9312;0.9376;0.9383;0.9376;0.9377;0.8;0.8015;0.8;0.7962;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9263;0.9282;0.9263;0.9264;0.9289;0.929;0.9289;0.9287;0.8;0.8002;0.8;0.7955;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9283;0.9291;0.9283;0.9283;0.9262;0.9274;0.9262;0.9265;0.8;0.8002;0.8;0.7955;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9304;0.9309;0.9304;0.9304;0.939;0.9419;0.939;0.9393;0.7833;0.7829;0.7833;0.7828;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9319;0.933;0.9319;0.9319;0.9349;0.9361;0.9349;0.9351;0.7833;0.7829;0.7833;0.7828;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9319;0.933;0.9319;0.9319;0.9342;0.9359;0.9342;0.9344;0.7833;0.7823;0.7833;0.7805;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.9275;0.9294;0.9275;0.9276;0.9403;0.9417;0.9403;0.9404;0.7833;0.7816;0.7833;0.7801;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9289;0.9298;0.9289;0.929;0.943;0.9443;0.943;0.9429;0.7667;0.7646;0.7667;0.7647;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9331;0.9344;0.9331;0.9331;0.9329;0.9352;0.9329;0.9333;0.7667;0.7646;0.7667;0.7647;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9265;0.9275;0.9265;0.9265;0.9356;0.9367;0.9356;0.9357;0.7667;0.7646;0.7667;0.7647;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.9304;0.9311;0.9304;0.9305;0.9209;0.923;0.9209;0.9211;0.7667;0.7672;0.7667;0.7646;smote;5000;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
