Algorithm,Train Accuracy,Train Precision,Train Recall,Train F1 Score,Test Accuracy,Test Precision,Test Recall,Test F1 Score,Val. Accuracy,Val. Precision,Val. Recall,Val. F1 Score,AUC,Bal. Strategy,SMOTE Instances,Scale,Features,Folds,Hyper Params.,Model
DecisionTreeClassifier,0.8435,0.8526,0.8435,0.8458,0.8233,0.8335,0.8233,0.8266,0.7667,0.7664,0.7667,0.7642,0.9561,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 973}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=973)"
MLPClassifier,0.8041,0.8352,0.8041,0.804,0.8177,0.8742,0.8177,0.8166,0.75,0.793,0.75,0.7506,0.9412,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 147, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=147)"
DecisionTreeClassifier,0.8391,0.8482,0.8391,0.8419,0.8434,0.8528,0.8434,0.8463,0.75,0.7778,0.75,0.7443,0.9527,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 843}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=843)"
RandomForestClassifier,0.8375,0.8473,0.8375,0.8403,0.83,0.839,0.83,0.8328,0.75,0.7778,0.75,0.7443,0.9505,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 446}","RandomForestClassifier(n_estimators=20, random_state=446)"
SVC,0.807,0.852,0.807,0.8062,0.8104,0.8681,0.8104,0.8087,0.7333,0.7778,0.7333,0.7348,0.9153,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 154}","SVC(C=1, kernel='linear', probability=True, random_state=154)"
KNeighborsClassifier,0.835,0.8462,0.835,0.8373,0.821,0.8315,0.821,0.8239,0.7333,0.7421,0.7333,0.7245,0.9465,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=13, weights='distance')"
SVC,0.8075,0.8196,0.8075,0.8107,0.7964,0.8079,0.7964,0.7998,0.7167,0.7247,0.7167,0.7195,0.9012,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 98}","SVC(C=1, kernel='linear', probability=True, random_state=98)"
LogisticRegression,0.8132,0.8264,0.8132,0.8154,0.8154,0.8308,0.8154,0.818,0.7167,0.7313,0.7167,0.7166,0.94,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 663, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=663)"
MLPClassifier,0.8112,0.8389,0.8112,0.8114,0.8233,0.8325,0.8233,0.8262,0.7167,0.7165,0.7167,0.7145,0.9435,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 311, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=311)"
KNeighborsClassifier,0.8262,0.8358,0.8262,0.8296,0.8389,0.8537,0.8389,0.8426,0.7167,0.7152,0.7167,0.7139,0.943,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'}","KNeighborsClassifier(n_neighbors=15, weights='distance')"
RandomForestClassifier,0.8319,0.842,0.8319,0.8349,0.8423,0.8501,0.8423,0.8448,0.7167,0.7152,0.7167,0.7139,0.9503,smote,3000,no_scaled,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 20, 'random_state': 644}","RandomForestClassifier(n_estimators=20, random_state=644)"
LogisticRegression,0.7875,0.7978,0.7875,0.7903,0.7936,0.8038,0.7936,0.7965,0.7,0.7081,0.7,0.7017,0.9368,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 0.1, 'penalty': 'l2', 'random_state': 709, 'solver': 'lbfgs'}","LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=709)"
RandomForestClassifier,0.8374,0.8469,0.8374,0.8406,0.83,0.8402,0.83,0.8331,0.7,0.7128,0.7,0.6902,0.9515,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'n_estimators': 10, 'random_state': 9}","RandomForestClassifier(n_estimators=10, random_state=9)"
DecisionTreeClassifier,0.8445,0.8526,0.8445,0.847,0.8249,0.8375,0.8249,0.8285,0.7,0.7128,0.7,0.6902,0.9552,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 335}","DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=335)"
SVC,0.794,0.837,0.794,0.7935,0.8009,0.8569,0.8009,0.8003,0.7,0.7438,0.7,0.6836,0.9102,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'kernel': 'linear', 'random_state': 128}","SVC(C=1, kernel='linear', probability=True, random_state=128)"
KNeighborsClassifier,0.8314,0.8438,0.8314,0.835,0.8345,0.8468,0.8345,0.8377,0.6833,0.6865,0.6833,0.6705,0.9411,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'}","KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')"
MLPClassifier,0.8126,0.8279,0.8126,0.8133,0.8194,0.8276,0.8194,0.822,0.6667,0.674,0.6667,0.6643,0.9432,smote,3000,StandardScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'max_iter': 100000, 'random_state': 810, 'solver': 'adam'}","MLPClassifier(max_iter=100000, random_state=810)"
LogisticRegression,0.7878,0.7965,0.7878,0.7897,0.7707,0.7751,0.7707,0.7721,0.65,0.647,0.65,0.6482,0.939,smote,3000,MinMaxScaler,"['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N']",10,"{'C': 1, 'penalty': 'l2', 'random_state': 487, 'solver': 'lbfgs'}","LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=487)"
