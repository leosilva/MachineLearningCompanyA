Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.86;0.8642;0.86;0.8607;0.7826;0.7944;0.7826;0.7848;0.8333;0.8404;0.8333;0.8342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8518;0.8593;0.8518;0.8523;0.7536;0.7743;0.7536;0.7559;0.8333;0.8341;0.8333;0.8327;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 255};RandomForestClassifier(n_estimators=10, random_state=255)
DecisionTreeClassifier;0.8213;0.8274;0.8213;0.8195;0.7971;0.8164;0.7971;0.8002;0.8167;0.8319;0.8167;0.8187;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
RandomForestClassifier;0.8487;0.8543;0.8487;0.849;0.8696;0.8713;0.8696;0.8701;0.8167;0.826;0.8167;0.8187;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
RandomForestClassifier;0.8551;0.8671;0.8551;0.8556;0.8261;0.8258;0.8261;0.8257;0.8167;0.826;0.8167;0.8187;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8598;0.8689;0.8598;0.8606;0.8116;0.828;0.8116;0.8134;0.8167;0.8287;0.8167;0.8178;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 255};RandomForestClassifier(n_estimators=20, random_state=255)
RandomForestClassifier;0.8583;0.8649;0.8583;0.8591;0.7536;0.7759;0.7536;0.7576;0.8167;0.8277;0.8167;0.8175;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
KNeighborsClassifier;0.7473;0.7698;0.7473;0.7496;0.7826;0.7848;0.7826;0.7835;0.8167;0.8238;0.8167;0.8172;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8535;0.8595;0.8535;0.8547;0.8696;0.884;0.8696;0.8713;0.8167;0.8205;0.8167;0.8172;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8487;0.8607;0.8487;0.8496;0.8551;0.8617;0.8551;0.8563;0.8167;0.8205;0.8167;0.8172;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
KNeighborsClassifier;0.7504;0.7774;0.7504;0.754;0.6667;0.6661;0.6667;0.6634;0.8167;0.8238;0.8167;0.8172;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
DecisionTreeClassifier;0.8438;0.8502;0.8438;0.8433;0.7826;0.7817;0.7826;0.7819;0.8167;0.8181;0.8167;0.817;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
KNeighborsClassifier;0.7265;0.746;0.7265;0.729;0.8551;0.8539;0.8551;0.8537;0.8167;0.8217;0.8167;0.816;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
RandomForestClassifier;0.8487;0.8581;0.8487;0.8498;0.8261;0.8435;0.8261;0.826;0.8;0.8298;0.8;0.8028;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 285};RandomForestClassifier(n_estimators=10, random_state=285)
RandomForestClassifier;0.8406;0.8513;0.8406;0.8419;0.8696;0.8778;0.8696;0.8699;0.8;0.8142;0.8;0.8023;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 255};RandomForestClassifier(n_estimators=20, random_state=255)
DecisionTreeClassifier;0.831;0.841;0.831;0.8317;0.8406;0.8507;0.8406;0.8399;0.8;0.8094;0.8;0.802;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
RandomForestClassifier;0.831;0.8409;0.831;0.8308;0.9275;0.9287;0.9275;0.9278;0.8;0.8094;0.8;0.802;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8469;0.8547;0.8469;0.8477;0.913;0.914;0.913;0.9123;0.8;0.8101;0.8;0.8019;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
DecisionTreeClassifier;0.826;0.8317;0.826;0.8265;0.7826;0.7878;0.7826;0.7834;0.8;0.8038;0.8;0.801;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
RandomForestClassifier;0.8486;0.856;0.8486;0.8493;0.8696;0.8769;0.8696;0.8714;0.8;0.8058;0.8;0.8007;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
RandomForestClassifier;0.8422;0.8498;0.8422;0.8428;0.9275;0.9336;0.9275;0.9286;0.8;0.8064;0.8;0.8007;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
RandomForestClassifier;0.8405;0.8483;0.8405;0.8411;0.8841;0.8834;0.8841;0.8826;0.8;0.8057;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
KNeighborsClassifier;0.7245;0.7459;0.7245;0.7276;0.7971;0.8363;0.7971;0.8019;0.8;0.8057;0.8;0.8003;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7325;0.7537;0.7325;0.735;0.7971;0.8013;0.7971;0.7981;0.8;0.8016;0.8;0.7997;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7343;0.7508;0.7343;0.7357;0.8116;0.8202;0.8116;0.8143;0.8;0.8079;0.8;0.7992;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7407;0.7688;0.7407;0.7438;0.7826;0.8132;0.7826;0.7869;0.8;0.8079;0.8;0.7992;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7424;0.769;0.7424;0.744;0.8406;0.8398;0.8406;0.8384;0.8;0.8068;0.8;0.7989;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7503;0.7768;0.7503;0.7535;0.7826;0.7937;0.7826;0.7828;0.8;0.8068;0.8;0.7989;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7375;0.7526;0.7375;0.7397;0.8406;0.8406;0.8406;0.8406;0.8;0.8083;0.8;0.7987;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7488;0.7735;0.7488;0.7522;0.8261;0.8591;0.8261;0.831;0.8;0.8012;0.8;0.7981;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.8438;0.8505;0.8438;0.8452;0.8406;0.8463;0.8406;0.841;0.7833;0.7973;0.7833;0.7857;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 286};RandomForestClassifier(n_estimators=10, random_state=286)
RandomForestClassifier;0.8486;0.8556;0.8486;0.8498;0.8261;0.8274;0.8261;0.8259;0.7833;0.7973;0.7833;0.7857;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 255};RandomForestClassifier(n_estimators=20, random_state=255)
RandomForestClassifier;0.839;0.8511;0.839;0.8398;0.7971;0.8211;0.7971;0.8015;0.7833;0.8032;0.7833;0.7855;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 255};RandomForestClassifier(n_estimators=20, random_state=255)
RandomForestClassifier;0.8537;0.8654;0.8537;0.8546;0.8696;0.8719;0.8696;0.8705;0.7833;0.797;0.7833;0.7852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
DecisionTreeClassifier;0.826;0.8303;0.826;0.8264;0.8841;0.8902;0.8841;0.8846;0.7833;0.797;0.7833;0.7852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
DecisionTreeClassifier;0.8277;0.8294;0.8277;0.8277;0.8261;0.8284;0.8261;0.827;0.7833;0.797;0.7833;0.7852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
DecisionTreeClassifier;0.8132;0.8175;0.8132;0.813;0.8696;0.8718;0.8696;0.8672;0.7833;0.7955;0.7833;0.7852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
DecisionTreeClassifier;0.8262;0.8349;0.8262;0.8258;0.8116;0.8128;0.8116;0.8103;0.7833;0.7934;0.7833;0.7852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
DecisionTreeClassifier;0.8245;0.8311;0.8245;0.8246;0.7681;0.7718;0.7681;0.7692;0.7833;0.797;0.7833;0.7852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
RandomForestClassifier;0.8583;0.8667;0.8583;0.8578;0.8551;0.8603;0.8551;0.8559;0.7833;0.7955;0.7833;0.7852;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 255};RandomForestClassifier(n_estimators=20, random_state=255)
DecisionTreeClassifier;0.8084;0.8135;0.8084;0.8079;0.8696;0.8877;0.8696;0.8715;0.7833;0.7912;0.7833;0.7848;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
RandomForestClassifier;0.8341;0.8418;0.8341;0.8346;0.8116;0.8169;0.8116;0.8132;0.7833;0.7912;0.7833;0.7848;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 255};RandomForestClassifier(n_estimators=10, random_state=255)
DecisionTreeClassifier;0.8485;0.8547;0.8485;0.8481;0.8116;0.8228;0.8116;0.8148;0.7833;0.7884;0.7833;0.7846;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
DecisionTreeClassifier;0.815;0.822;0.815;0.8144;0.8551;0.8594;0.8551;0.8565;0.7833;0.7898;0.7833;0.784;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
RandomForestClassifier;0.8535;0.8645;0.8535;0.8549;0.8551;0.8543;0.8551;0.8544;0.7833;0.7993;0.7833;0.7838;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 255};RandomForestClassifier(n_estimators=10, random_state=255)
KNeighborsClassifier;0.7375;0.7648;0.7375;0.7406;0.7391;0.7584;0.7391;0.7406;0.7833;0.7934;0.7833;0.7837;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.7471;0.7688;0.7471;0.7501;0.7971;0.7976;0.7971;0.7963;0.7833;0.7917;0.7833;0.7831;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
RandomForestClassifier;0.8712;0.8789;0.8712;0.8725;0.8261;0.8531;0.8261;0.8296;0.7833;0.7917;0.7833;0.7831;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
KNeighborsClassifier;0.7406;0.7627;0.7406;0.7432;0.8406;0.8592;0.8406;0.8419;0.7833;0.7917;0.7833;0.7831;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7616;0.7798;0.7616;0.7637;0.7681;0.8037;0.7681;0.774;0.7833;0.7917;0.7833;0.7831;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7488;0.7751;0.7488;0.7513;0.7826;0.7855;0.7826;0.7833;0.7833;0.7854;0.7833;0.783;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7376;0.7556;0.7376;0.7397;0.8261;0.828;0.8261;0.8259;0.7833;0.792;0.7833;0.783;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7377;0.7624;0.7377;0.7403;0.8261;0.8266;0.8261;0.8253;0.7833;0.7868;0.7833;0.7826;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7311;0.7516;0.7311;0.7338;0.9275;0.9405;0.9275;0.9289;0.7833;0.7861;0.7833;0.7823;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8308;0.8371;0.8308;0.83;0.7826;0.7878;0.7826;0.7834;0.7833;0.7854;0.7833;0.7822;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
RandomForestClassifier;0.8552;0.8633;0.8552;0.8561;0.8551;0.8608;0.8551;0.8547;0.7833;0.7906;0.7833;0.7822;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 286};RandomForestClassifier(n_estimators=20, random_state=286)
KNeighborsClassifier;0.7504;0.7703;0.7504;0.7535;0.7536;0.7821;0.7536;0.7575;0.7833;0.7948;0.7833;0.7816;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.6552;0.6925;0.6552;0.6552;0.7826;0.7955;0.7826;0.7867;0.7667;0.789;0.7667;0.7712;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
SVC;0.6749;0.7148;0.6749;0.6712;0.7536;0.763;0.7536;0.7547;0.7667;0.7863;0.7667;0.7709;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.6763;0.7096;0.6763;0.676;0.7101;0.7108;0.7101;0.7065;0.7667;0.7863;0.7667;0.7709;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
DecisionTreeClassifier;0.8261;0.8324;0.8261;0.8256;0.8261;0.8289;0.8261;0.8256;0.7667;0.7782;0.7667;0.7695;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
DecisionTreeClassifier;0.8213;0.8269;0.8213;0.822;0.8261;0.8302;0.8261;0.8235;0.7667;0.7725;0.7667;0.7685;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
DecisionTreeClassifier;0.8294;0.8351;0.8294;0.8282;0.7971;0.8071;0.7971;0.7967;0.7667;0.7789;0.7667;0.7682;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
DecisionTreeClassifier;0.805;0.8131;0.805;0.8054;0.8116;0.8116;0.8116;0.8116;0.7667;0.7789;0.7667;0.7682;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
RandomForestClassifier;0.8405;0.8461;0.8405;0.8404;0.8841;0.9044;0.8841;0.8858;0.7667;0.7739;0.7667;0.7678;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
DecisionTreeClassifier;0.8244;0.8318;0.8244;0.824;0.7246;0.7247;0.7246;0.7237;0.7667;0.7765;0.7667;0.7672;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
RandomForestClassifier;0.8437;0.8541;0.8437;0.8447;0.8986;0.8986;0.8986;0.8986;0.7667;0.7738;0.7667;0.7672;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 255};RandomForestClassifier(n_estimators=10, random_state=255)
RandomForestClassifier;0.8502;0.8584;0.8502;0.8514;0.7826;0.7891;0.7826;0.7783;0.7667;0.7758;0.7667;0.7672;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 285};RandomForestClassifier(n_estimators=10, random_state=285)
KNeighborsClassifier;0.7358;0.7571;0.7358;0.739;0.9565;0.9565;0.9565;0.9562;0.7667;0.7778;0.7667;0.7668;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.744;0.7592;0.744;0.7461;0.942;0.942;0.942;0.942;0.7667;0.7778;0.7667;0.7668;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8293;0.8336;0.8293;0.8292;0.8841;0.892;0.8841;0.8818;0.7667;0.7667;0.7667;0.7667;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
DecisionTreeClassifier;0.8276;0.8342;0.8276;0.8272;0.8261;0.827;0.8261;0.8213;0.7667;0.7707;0.7667;0.7665;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
RandomForestClassifier;0.8439;0.8522;0.8439;0.8441;0.7971;0.8044;0.7971;0.7989;0.7667;0.779;0.7667;0.7659;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 285};RandomForestClassifier(n_estimators=20, random_state=285)
RandomForestClassifier;0.8534;0.8628;0.8534;0.8548;0.8551;0.8549;0.8551;0.8532;0.7667;0.7726;0.7667;0.7652;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 255};RandomForestClassifier(n_estimators=10, random_state=255)
KNeighborsClassifier;0.7472;0.7651;0.7472;0.7493;0.8261;0.8525;0.8261;0.8264;0.7667;0.7726;0.7667;0.7652;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.7551;0.7764;0.7551;0.7583;0.8116;0.8661;0.8116;0.8144;0.7667;0.7708;0.7667;0.7646;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.752;0.7689;0.752;0.7543;0.7971;0.8201;0.7971;0.7996;0.7667;0.7822;0.7667;0.7636;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.7375;0.7565;0.7375;0.738;0.8116;0.8283;0.8116;0.8132;0.7667;0.7794;0.7667;0.7627;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
SVC;0.6698;0.7065;0.6698;0.6692;0.7391;0.8045;0.7391;0.747;0.75;0.7769;0.75;0.7553;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.6859;0.7197;0.6859;0.6867;0.7246;0.7452;0.7246;0.7309;0.75;0.7769;0.75;0.7553;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
SVC;0.6747;0.7167;0.6747;0.6715;0.7681;0.8119;0.7681;0.7738;0.75;0.7769;0.75;0.7553;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
DecisionTreeClassifier;0.8229;0.8273;0.8229;0.8236;0.7681;0.773;0.7681;0.7697;0.75;0.7602;0.75;0.7527;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
DecisionTreeClassifier;0.8324;0.835;0.8324;0.8318;0.8551;0.8569;0.8551;0.8536;0.75;0.754;0.75;0.751;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
DecisionTreeClassifier;0.8244;0.8331;0.8244;0.823;0.8406;0.8495;0.8406;0.8409;0.75;0.7572;0.75;0.7505;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
KNeighborsClassifier;0.7407;0.7594;0.7407;0.7419;0.7971;0.8101;0.7971;0.8006;0.75;0.7631;0.75;0.7491;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.7279;0.7476;0.7279;0.7311;0.8841;0.8917;0.8841;0.8834;0.75;0.7631;0.75;0.7491;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.6426;0.6549;0.6426;0.6431;0.7246;0.7488;0.7246;0.7262;0.75;0.7583;0.75;0.7487;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
DecisionTreeClassifier;0.8422;0.8462;0.8422;0.8417;0.8406;0.8506;0.8406;0.839;0.75;0.7493;0.75;0.7476;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
KNeighborsClassifier;0.739;0.7634;0.739;0.7415;0.8261;0.8456;0.8261;0.8293;0.75;0.764;0.75;0.7469;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
MLPClassifier;0.6682;0.6815;0.6682;0.6674;0.7391;0.7355;0.7391;0.7363;0.75;0.7505;0.75;0.7422;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
SVC;0.6762;0.7198;0.6762;0.6769;0.7971;0.7988;0.7971;0.7969;0.7333;0.7581;0.7333;0.7393;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
SVC;0.6779;0.7199;0.6779;0.6764;0.7391;0.7725;0.7391;0.746;0.7333;0.7679;0.7333;0.7392;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
SVC;0.6715;0.7088;0.6715;0.6707;0.8261;0.8313;0.8261;0.8279;0.7333;0.7649;0.7333;0.739;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
SVC;0.6845;0.7233;0.6845;0.6851;0.7681;0.7848;0.7681;0.7703;0.7333;0.7611;0.7333;0.7389;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.6732;0.7074;0.6732;0.6731;0.8116;0.8115;0.8116;0.8108;0.7333;0.7534;0.7333;0.7381;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.6845;0.7191;0.6845;0.6833;0.8261;0.8402;0.8261;0.8289;0.7333;0.7548;0.7333;0.7379;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
DecisionTreeClassifier;0.8213;0.8274;0.8213;0.821;0.7826;0.79;0.7826;0.7839;0.7333;0.7427;0.7333;0.735;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
DecisionTreeClassifier;0.8309;0.8403;0.8309;0.8303;0.7826;0.7933;0.7826;0.7857;0.7333;0.7494;0.7333;0.7345;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
DecisionTreeClassifier;0.8503;0.8534;0.8503;0.8496;0.7681;0.7947;0.7681;0.7706;0.7333;0.7494;0.7333;0.7345;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
DecisionTreeClassifier;0.8261;0.8298;0.8261;0.826;0.7536;0.7772;0.7536;0.7567;0.7333;0.738;0.7333;0.7345;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 24};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=24)
DecisionTreeClassifier;0.8246;0.8342;0.8246;0.8248;0.8551;0.8701;0.8551;0.8581;0.7333;0.7444;0.7333;0.7342;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 372};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=372)
MLPClassifier;0.6635;0.678;0.6635;0.6621;0.6522;0.6818;0.6522;0.6466;0.7333;0.7347;0.7333;0.7337;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
RandomForestClassifier;0.8389;0.8445;0.8389;0.8392;0.8116;0.8185;0.8116;0.8128;0.7333;0.7472;0.7333;0.7328;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 286};RandomForestClassifier(n_estimators=10, random_state=286)
KNeighborsClassifier;0.7358;0.756;0.7358;0.7389;0.7536;0.7564;0.7536;0.7511;0.7333;0.7347;0.7333;0.7317;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
MLPClassifier;0.6393;0.6523;0.6393;0.6402;0.7681;0.7911;0.7681;0.7685;0.7333;0.7422;0.7333;0.7311;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
MLPClassifier;0.6394;0.6496;0.6394;0.6399;0.7826;0.8143;0.7826;0.7866;0.7333;0.7456;0.7333;0.731;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
MLPClassifier;0.6329;0.6447;0.6329;0.6325;0.8696;0.8693;0.8696;0.8692;0.7333;0.735;0.7333;0.7301;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
MLPClassifier;0.657;0.6697;0.657;0.6573;0.7391;0.7406;0.7391;0.7389;0.7333;0.735;0.7333;0.7301;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
MLPClassifier;0.6475;0.6614;0.6475;0.6463;0.7536;0.752;0.7536;0.7526;0.7333;0.743;0.7333;0.7281;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
MLPClassifier;0.6409;0.647;0.6409;0.64;0.8261;0.8334;0.8261;0.8217;0.7333;0.7545;0.7333;0.7273;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
MLPClassifier;0.6556;0.6721;0.6556;0.6552;0.6812;0.7235;0.6812;0.6879;0.7333;0.7338;0.7333;0.7258;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
MLPClassifier;0.6506;0.6651;0.6506;0.6515;0.7391;0.7577;0.7391;0.7425;0.7333;0.7382;0.7333;0.7255;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
LogisticRegression;0.6231;0.6454;0.6231;0.6236;0.6377;0.6443;0.6377;0.6373;0.7167;0.739;0.7167;0.7232;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
SVC;0.6924;0.7355;0.6924;0.691;0.7391;0.7694;0.7391;0.7425;0.7167;0.7565;0.7167;0.7231;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
SVC;0.6811;0.7117;0.6811;0.6822;0.7971;0.8123;0.7971;0.7997;0.7167;0.7593;0.7167;0.7227;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
MLPClassifier;0.6441;0.6518;0.6441;0.6431;0.7391;0.7555;0.7391;0.7415;0.7167;0.7293;0.7167;0.7211;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
MLPClassifier;0.6427;0.6501;0.6427;0.6412;0.6957;0.7015;0.6957;0.6971;0.7167;0.7293;0.7167;0.7211;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
SVC;0.6683;0.7004;0.6683;0.6665;0.7826;0.7942;0.7826;0.7831;0.7167;0.7315;0.7167;0.7209;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.6731;0.7046;0.6731;0.6727;0.7101;0.7562;0.7101;0.7074;0.7167;0.748;0.7167;0.7201;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
SVC;0.6811;0.7193;0.6811;0.6801;0.7681;0.7709;0.7681;0.7685;0.7167;0.7509;0.7167;0.7182;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
LogisticRegression;0.6024;0.627;0.6024;0.6036;0.7391;0.7672;0.7391;0.7383;0.7167;0.7212;0.7167;0.7168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
LogisticRegression;0.6182;0.6353;0.6182;0.6191;0.6232;0.6242;0.6232;0.6228;0.7167;0.7212;0.7167;0.7168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.6249;0.643;0.6249;0.6256;0.5507;0.5534;0.5507;0.5497;0.7167;0.7212;0.7167;0.7168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
LogisticRegression;0.6118;0.6302;0.6118;0.6134;0.6957;0.7282;0.6957;0.687;0.7167;0.7212;0.7167;0.7168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6312;0.654;0.6312;0.631;0.5797;0.5938;0.5797;0.5757;0.7167;0.7212;0.7167;0.7168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
LogisticRegression;0.6087;0.6276;0.6087;0.6067;0.6957;0.7081;0.6957;0.6986;0.7167;0.7212;0.7167;0.7168;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
MLPClassifier;0.6298;0.6421;0.6298;0.6301;0.8116;0.8121;0.8116;0.8111;0.7167;0.7171;0.7167;0.7148;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
DecisionTreeClassifier;0.8196;0.8259;0.8196;0.82;0.8696;0.87;0.8696;0.8695;0.7167;0.7234;0.7167;0.7146;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 316};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=316)
MLPClassifier;0.6652;0.6707;0.6652;0.6645;0.7246;0.7654;0.7246;0.7298;0.7167;0.7289;0.7167;0.7143;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
MLPClassifier;0.6584;0.6731;0.6584;0.6584;0.6957;0.6947;0.6957;0.6949;0.7167;0.7296;0.7167;0.7128;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
MLPClassifier;0.6393;0.651;0.6393;0.639;0.7971;0.7996;0.7971;0.7975;0.7167;0.7149;0.7167;0.7105;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
MLPClassifier;0.6506;0.6642;0.6506;0.651;0.7101;0.7216;0.7101;0.7123;0.7167;0.7092;0.7167;0.7093;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
MLPClassifier;0.6376;0.6495;0.6376;0.6377;0.8261;0.823;0.8261;0.8211;0.7167;0.7092;0.7167;0.7093;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
SVC;0.6908;0.7234;0.6908;0.6902;0.7101;0.7648;0.7101;0.702;0.7;0.7311;0.7;0.7074;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
SVC;0.6763;0.7167;0.6763;0.6768;0.6812;0.6928;0.6812;0.6844;0.7;0.7278;0.7;0.7064;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
LogisticRegression;0.6281;0.6485;0.6281;0.6288;0.6232;0.6402;0.6232;0.6228;0.7;0.7216;0.7;0.7063;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6426;0.666;0.6426;0.6437;0.5362;0.5504;0.5362;0.5272;0.7;0.7216;0.7;0.7063;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
LogisticRegression;0.6376;0.6675;0.6376;0.6363;0.5942;0.6111;0.5942;0.5979;0.7;0.7216;0.7;0.7063;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6232;0.6453;0.6232;0.6246;0.5942;0.6077;0.5942;0.5959;0.7;0.714;0.7;0.7046;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
MLPClassifier;0.6634;0.677;0.6634;0.6623;0.7101;0.7084;0.7101;0.7084;0.7;0.7096;0.7;0.7036;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
SVC;0.6699;0.7048;0.6699;0.6719;0.8696;0.8862;0.8696;0.8712;0.7;0.7386;0.7;0.7027;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
LogisticRegression;0.6346;0.6515;0.6346;0.6348;0.5652;0.5701;0.5652;0.5632;0.7;0.7069;0.7;0.7021;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6166;0.6352;0.6166;0.6175;0.6957;0.6994;0.6957;0.6966;0.7;0.7093;0.7;0.7017;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6152;0.6348;0.6152;0.6129;0.7536;0.7617;0.7536;0.7503;0.7;0.701;0.7;0.6996;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6409;0.6639;0.6409;0.6413;0.5217;0.5304;0.5217;0.5232;0.7;0.7037;0.7;0.6986;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6393;0.6566;0.6393;0.6391;0.5507;0.5464;0.5507;0.5484;0.7;0.7037;0.7;0.6986;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
LogisticRegression;0.6182;0.6372;0.6182;0.6182;0.6957;0.7232;0.6957;0.6902;0.7;0.7037;0.7;0.6986;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.628;0.6496;0.628;0.6306;0.6232;0.6515;0.6232;0.6184;0.7;0.7037;0.7;0.6986;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
MLPClassifier;0.6539;0.6666;0.6539;0.6539;0.7391;0.7389;0.7391;0.7373;0.7;0.6986;0.7;0.6984;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
MLPClassifier;0.6394;0.6549;0.6394;0.6382;0.6957;0.7296;0.6957;0.7017;0.7;0.7036;0.7;0.6979;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
MLPClassifier;0.636;0.6446;0.636;0.6351;0.7971;0.8022;0.7971;0.7987;0.7;0.6953;0.7;0.6925;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
LogisticRegression;0.6297;0.6532;0.6297;0.6309;0.5652;0.5846;0.5652;0.571;0.6833;0.7086;0.6833;0.6915;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
LogisticRegression;0.6296;0.6537;0.6296;0.6305;0.6812;0.7012;0.6812;0.6841;0.6833;0.7014;0.6833;0.6897;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
SVC;0.67;0.7024;0.67;0.669;0.6377;0.6964;0.6377;0.6457;0.6833;0.7096;0.6833;0.6893;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
LogisticRegression;0.6313;0.6523;0.6313;0.6309;0.5942;0.6169;0.5942;0.6005;0.6833;0.6984;0.6833;0.6883;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
LogisticRegression;0.6297;0.6572;0.6297;0.6333;0.5942;0.6266;0.5942;0.5946;0.6833;0.696;0.6833;0.6872;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.6279;0.6487;0.6279;0.6281;0.6377;0.6534;0.6377;0.6402;0.6833;0.696;0.6833;0.6872;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
SVC;0.6714;0.6945;0.6714;0.6701;0.7681;0.7859;0.7681;0.7643;0.6833;0.6929;0.6833;0.687;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
SVC;0.6619;0.7035;0.6619;0.6605;0.7826;0.8017;0.7826;0.7862;0.6833;0.6933;0.6833;0.6865;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
SVC;0.6633;0.6942;0.6633;0.6612;0.7971;0.8205;0.7971;0.8005;0.6833;0.6906;0.6833;0.6862;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
SVC;0.6874;0.7237;0.6874;0.6883;0.7246;0.7429;0.7246;0.7299;0.6833;0.6906;0.6833;0.6862;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
SVC;0.675;0.7077;0.675;0.6751;0.7681;0.7811;0.7681;0.7717;0.6833;0.6986;0.6833;0.6862;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
MLPClassifier;0.6442;0.6557;0.6442;0.6436;0.7246;0.7327;0.7246;0.7163;0.6833;0.6905;0.6833;0.6859;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 131, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=131)
LogisticRegression;0.6103;0.6332;0.6103;0.6097;0.7101;0.71;0.7101;0.7082;0.6833;0.6878;0.6833;0.6853;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
MLPClassifier;0.6473;0.656;0.6473;0.6459;0.7101;0.7453;0.7101;0.7151;0.6833;0.7066;0.6833;0.6813;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
LogisticRegression;0.6135;0.6353;0.6135;0.6151;0.6812;0.7103;0.6812;0.6878;0.6833;0.6861;0.6833;0.6799;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.6392;0.6623;0.6392;0.6401;0.5507;0.5788;0.5507;0.5419;0.6833;0.6861;0.6833;0.6799;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
LogisticRegression;0.6376;0.6626;0.6376;0.6373;0.5362;0.5724;0.5362;0.5331;0.6667;0.6958;0.6667;0.6763;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
LogisticRegression;0.6264;0.6526;0.6264;0.6268;0.7101;0.7225;0.7101;0.7125;0.6667;0.6958;0.6667;0.6763;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 814, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=814)"
MLPClassifier;0.6602;0.6725;0.6602;0.6573;0.6667;0.6765;0.6667;0.6687;0.6667;0.6898;0.6667;0.6726;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
SVC;0.6893;0.7268;0.6893;0.6881;0.6812;0.6867;0.6812;0.6833;0.6667;0.7065;0.6667;0.6721;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.6795;0.7127;0.6795;0.6796;0.6957;0.7037;0.6957;0.6957;0.6667;0.6856;0.6667;0.6704;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
LogisticRegression;0.6311;0.6535;0.6311;0.6312;0.6232;0.6307;0.6232;0.6159;0.65;0.6702;0.65;0.6575;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 962, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=962)"
SVC;0.6763;0.7118;0.6763;0.6764;0.6812;0.7078;0.6812;0.6881;0.65;0.6708;0.65;0.6559;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 197};SVC(C=10, random_state=197)
MLPClassifier;0.6425;0.6507;0.6425;0.6394;0.7246;0.7408;0.7246;0.7251;0.65;0.6648;0.65;0.6534;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 773, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=773)
SVC;0.6763;0.7106;0.6763;0.6751;0.7681;0.8119;0.7681;0.7738;0.65;0.6887;0.65;0.6528;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 356};SVC(C=10, random_state=356)
LogisticRegression;0.6313;0.653;0.6313;0.632;0.5362;0.5377;0.5362;0.5364;0.65;0.6528;0.65;0.6483;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 836, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=836)"
MLPClassifier;0.6537;0.6607;0.6537;0.6536;0.7391;0.7639;0.7391;0.7401;0.65;0.6667;0.65;0.6432;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
MLPClassifier;0.6537;0.666;0.6537;0.6534;0.7681;0.7901;0.7681;0.7713;0.65;0.6556;0.65;0.6418;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
MLPClassifier;0.6522;0.6592;0.6522;0.6496;0.7101;0.7111;0.7101;0.7089;0.65;0.6487;0.65;0.6397;smote;250;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 287, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=287)
