Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.8565;0.8559;0.8565;0.8545;0.8893;0.8892;0.8893;0.8891;0.8833;0.8832;0.8833;0.8829;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8558;0.8572;0.8558;0.8542;0.8934;0.8946;0.8934;0.8936;0.8833;0.882;0.8833;0.8816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8663;0.8696;0.8663;0.865;0.8706;0.8702;0.8706;0.8703;0.8833;0.882;0.8833;0.8816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8563;0.8599;0.8563;0.8551;0.8913;0.8911;0.8913;0.8912;0.8833;0.882;0.8833;0.8816;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8656;0.8661;0.8656;0.8644;0.8919;0.8927;0.8919;0.8922;0.8833;0.8844;0.8833;0.8814;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8351;0.8356;0.8351;0.8328;0.8906;0.8959;0.8906;0.8911;0.8667;0.8716;0.8667;0.8681;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8587;0.8588;0.8587;0.8568;0.8732;0.8829;0.8732;0.8733;0.8667;0.8665;0.8667;0.8662;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8633;0.8644;0.8633;0.8627;0.8947;0.8983;0.8947;0.8952;0.8667;0.8665;0.8667;0.8662;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8554;0.8592;0.8554;0.8544;0.896;0.896;0.896;0.896;0.8667;0.8668;0.8667;0.8657;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8456;0.8469;0.8456;0.8436;0.8993;0.9001;0.8993;0.8994;0.8667;0.8668;0.8667;0.8657;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8594;0.8624;0.8594;0.8576;0.8779;0.8826;0.8779;0.8781;0.8667;0.8668;0.8667;0.8657;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8551;0.8555;0.8551;0.8538;0.8879;0.8901;0.8879;0.888;0.8667;0.8668;0.8667;0.8657;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8534;0.8541;0.8534;0.8511;0.8859;0.8882;0.8859;0.886;0.8667;0.8668;0.8667;0.8657;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8581;0.8607;0.8581;0.857;0.8867;0.8857;0.8867;0.886;0.8667;0.8659;0.8667;0.8638;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8618;0.8626;0.8618;0.8593;0.8618;0.8723;0.8618;0.8616;0.85;0.8522;0.85;0.8508;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8663;0.8663;0.8663;0.8651;0.8779;0.8786;0.8779;0.8781;0.85;0.8542;0.85;0.8506;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8358;0.837;0.8358;0.8325;0.8893;0.8932;0.8893;0.8897;0.85;0.8506;0.85;0.8499;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8721;0.8734;0.8721;0.8713;0.8812;0.8811;0.8812;0.8811;0.85;0.8508;0.85;0.849;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.8634;0.8636;0.8634;0.862;0.8812;0.882;0.8812;0.8816;0.85;0.8493;0.85;0.8486;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8635;0.865;0.8635;0.8614;0.8759;0.8818;0.8759;0.8765;0.85;0.8493;0.85;0.8486;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8501;0.8507;0.8501;0.8473;0.8759;0.8789;0.8759;0.8766;0.85;0.8514;0.85;0.8483;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8673;0.8676;0.8673;0.8655;0.8866;0.8884;0.8866;0.8871;0.85;0.8519;0.85;0.8469;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.854;0.854;0.854;0.8519;0.8309;0.8303;0.8309;0.8257;0.85;0.8474;0.85;0.8461;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8704;0.8717;0.8704;0.8701;0.8557;0.8546;0.8557;0.8525;0.8333;0.8307;0.8333;0.831;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.8709;0.8721;0.8709;0.8699;0.8557;0.8536;0.8557;0.8535;0.8333;0.8307;0.8333;0.831;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8713;0.8723;0.8713;0.8701;0.8577;0.8566;0.8577;0.8553;0.8333;0.8305;0.8333;0.8305;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.8521;0.8521;0.8521;0.85;0.9027;0.9091;0.9027;0.9032;0.8167;0.8221;0.8167;0.818;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 13, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=13, weights='distance')
KNeighborsClassifier;0.8571;0.8614;0.8571;0.8557;0.849;0.8639;0.849;0.8483;0.8167;0.8197;0.8167;0.8178;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8495;0.8513;0.8495;0.8468;0.8899;0.8902;0.8899;0.89;0.8167;0.8184;0.8167;0.8153;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
KNeighborsClassifier;0.8665;0.8678;0.8665;0.8649;0.8423;0.8432;0.8423;0.8376;0.8167;0.8222;0.8167;0.808;smote;5000;MinMaxScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
