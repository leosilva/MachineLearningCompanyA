Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;AUC;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
MLPClassifier;0.8778;0.8785;0.8778;0.8778;0.8714;0.8728;0.8714;0.8714;0.8;0.8185;0.8;0.7954;0.9726;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 169, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=169)
MLPClassifier;0.875;0.8759;0.875;0.875;0.8793;0.8795;0.8793;0.8793;0.8;0.8185;0.8;0.7954;0.9712;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 762, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=762)
KNeighborsClassifier;0.8579;0.8592;0.8579;0.8579;0.8737;0.8744;0.8737;0.8735;0.8;0.8123;0.8;0.7929;0.9509;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1)
DecisionTreeClassifier;0.8791;0.8799;0.8791;0.879;0.8703;0.8704;0.8703;0.8703;0.7833;0.8062;0.7833;0.7812;0.9709;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 975};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=975)
DecisionTreeClassifier;0.8753;0.8762;0.8753;0.8752;0.886;0.8868;0.886;0.886;0.7833;0.8153;0.7833;0.779;0.97;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 175};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=175)
DecisionTreeClassifier;0.8748;0.8757;0.8748;0.8747;0.8518;0.8516;0.8518;0.8516;0.7833;0.8091;0.7833;0.7785;0.9721;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 73};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=73)
MLPClassifier;0.8736;0.8746;0.8736;0.8736;0.8871;0.8872;0.8871;0.8871;0.7833;0.8065;0.7833;0.7767;0.9708;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 64, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=64)
SVC;0.8543;0.8598;0.8543;0.8538;0.8759;0.876;0.8759;0.8758;0.7667;0.813;0.7667;0.7632;0.9415;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 149};SVC(C=10, probability=True, random_state=149)
KNeighborsClassifier;0.8596;0.8606;0.8596;0.8596;0.8894;0.8896;0.8894;0.8892;0.7667;0.794;0.7667;0.7625;0.9516;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
LogisticRegression;0.6992;0.7061;0.6992;0.6967;0.7108;0.7214;0.7108;0.7094;0.75;0.7488;0.75;0.7485;0.8364;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 988, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=988)"
RandomForestClassifier;0.8704;0.8714;0.8704;0.8704;0.8911;0.8916;0.8911;0.8909;0.75;0.7778;0.75;0.7485;0.9718;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 183};RandomForestClassifier(n_estimators=5, random_state=183)
KNeighborsClassifier;0.8587;0.8602;0.8587;0.8588;0.8787;0.8794;0.8787;0.8785;0.75;0.7725;0.75;0.7478;0.9512;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
RandomForestClassifier;0.8769;0.8776;0.8769;0.8768;0.8782;0.8786;0.8782;0.8781;0.75;0.804;0.75;0.7478;0.9724;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 522};RandomForestClassifier(n_estimators=10, random_state=522)
SVC;0.8488;0.8544;0.8488;0.8483;0.8916;0.8918;0.8916;0.8915;0.75;0.7932;0.75;0.7476;0.9386;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 424};SVC(C=10, probability=True, random_state=424)
SVC;0.8531;0.8579;0.8531;0.8527;0.8843;0.8847;0.8843;0.8843;0.75;0.777;0.75;0.7457;0.9407;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 260};SVC(C=10, probability=True, random_state=260)
RandomForestClassifier;0.8766;0.8773;0.8766;0.8765;0.8737;0.8737;0.8737;0.8736;0.7333;0.7762;0.7333;0.7325;0.9719;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 884};RandomForestClassifier(n_estimators=20, random_state=884)
LogisticRegression;0.6997;0.706;0.6997;0.6975;0.7176;0.7234;0.7176;0.7151;0.7333;0.732;0.7333;0.7324;0.8341;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 225, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=225)"
LogisticRegression;0.7008;0.7077;0.7008;0.6987;0.7007;0.71;0.7007;0.6983;0.7333;0.732;0.7333;0.7324;0.838;smote;3000;StandardScaler;['storyPoints', 'polarity', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 169, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=169)"
