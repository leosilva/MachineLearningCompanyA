Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
KNeighborsClassifier;0.9082;0.911;0.9082;0.9077;0.9028;0.9084;0.9028;0.9026;0.85;0.8544;0.85;0.8499;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.909;0.913;0.909;0.9088;0.9375;0.939;0.9375;0.9377;0.85;0.8492;0.85;0.8485;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9151;0.9178;0.9151;0.9145;0.9167;0.9228;0.9167;0.9158;0.8333;0.8356;0.8333;0.8341;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=7, weights='distance')
KNeighborsClassifier;0.9082;0.9108;0.9082;0.9077;0.9167;0.9181;0.9167;0.9169;0.8333;0.8356;0.8333;0.8341;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 7, 'weights': 'uniform'};KNeighborsClassifier(n_neighbors=7)
KNeighborsClassifier;0.9051;0.9091;0.9051;0.905;0.9028;0.906;0.9028;0.9023;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9159;0.9204;0.9159;0.9158;0.9236;0.9261;0.9236;0.9238;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9051;0.9091;0.9051;0.9051;0.8889;0.8915;0.8889;0.8877;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
KNeighborsClassifier;0.9089;0.9123;0.9089;0.9087;0.9167;0.9208;0.9167;0.9168;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8997;0.9029;0.8997;0.8996;0.9306;0.932;0.9306;0.9308;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9051;0.9089;0.9051;0.9049;0.9097;0.9134;0.9097;0.9089;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9113;0.916;0.9113;0.9113;0.8889;0.8894;0.8889;0.8883;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9043;0.9066;0.9043;0.9043;0.9444;0.9444;0.9444;0.9444;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9063;0.9028;0.9025;0.9028;0.9116;0.9028;0.9042;0.8333;0.8365;0.8333;0.8339;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.9028;0.909;0.9028;0.9023;0.9028;0.9028;0.9028;0.9028;0.8333;0.833;0.8333;0.8328;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.899;0.9048;0.899;0.8985;0.9583;0.9595;0.9583;0.9585;0.8333;0.833;0.8333;0.8328;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.909;0.9123;0.909;0.9088;0.9097;0.9117;0.9097;0.9104;0.8333;0.8314;0.8333;0.832;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 11, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=11, weights='distance')
KNeighborsClassifier;0.9051;0.9082;0.9051;0.905;0.9236;0.9236;0.9236;0.9235;0.8333;0.8323;0.8333;0.8314;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9112;0.9142;0.9112;0.9106;0.9028;0.9124;0.9028;0.9038;0.8333;0.8323;0.8333;0.8314;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9051;0.911;0.9051;0.9051;0.9167;0.9231;0.9167;0.9176;0.8333;0.8323;0.8333;0.8314;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9051;0.9083;0.9051;0.9049;0.8889;0.893;0.8889;0.8898;0.8167;0.8351;0.8167;0.8208;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.9028;0.9101;0.9028;0.9029;0.9097;0.9246;0.9097;0.9115;0.8167;0.8305;0.8167;0.8194;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
KNeighborsClassifier;0.9036;0.9093;0.9036;0.9032;0.9306;0.9339;0.9306;0.9308;0.8167;0.8305;0.8167;0.8194;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
SVC;0.8827;0.8917;0.8827;0.883;0.9167;0.9215;0.9167;0.9166;0.8167;0.8181;0.8167;0.817;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.885;0.8936;0.885;0.8853;0.9028;0.9134;0.9028;0.9013;0.8167;0.8181;0.8167;0.817;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
KNeighborsClassifier;0.9074;0.913;0.9074;0.9073;0.8889;0.9005;0.8889;0.8877;0.8167;0.818;0.8167;0.817;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
SVC;0.8781;0.8886;0.8781;0.8788;0.9167;0.9228;0.9167;0.9158;0.8167;0.819;0.8167;0.8168;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
KNeighborsClassifier;0.9097;0.9135;0.9097;0.9094;0.8958;0.9;0.8958;0.8963;0.8167;0.8167;0.8167;0.8167;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.902;0.9054;0.902;0.9019;0.9236;0.927;0.9236;0.9238;0.8167;0.8171;0.8167;0.8166;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=9, weights='distance')
SVC;0.8797;0.8875;0.8797;0.8802;0.9097;0.9133;0.9097;0.9099;0.8167;0.8163;0.8167;0.8162;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.8843;0.8929;0.8843;0.8849;0.9375;0.938;0.9375;0.9375;0.8167;0.8163;0.8167;0.8162;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
MLPClassifier;0.909;0.9122;0.909;0.9091;0.9028;0.9047;0.9028;0.902;0.8167;0.8208;0.8167;0.8161;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
MLPClassifier;0.8997;0.9047;0.8997;0.8997;0.9514;0.9528;0.9514;0.9516;0.8167;0.8208;0.8167;0.8161;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.9012;0.9062;0.9012;0.9013;0.9722;0.9724;0.9722;0.9722;0.8167;0.8208;0.8167;0.8161;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
DecisionTreeClassifier;0.9205;0.9222;0.9205;0.9203;0.9444;0.9441;0.9444;0.944;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
DecisionTreeClassifier;0.9267;0.9276;0.9267;0.9267;0.9236;0.9236;0.9236;0.9231;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
DecisionTreeClassifier;0.919;0.921;0.919;0.919;0.9375;0.9375;0.9375;0.9375;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
DecisionTreeClassifier;0.9198;0.9222;0.9198;0.9198;0.9306;0.9373;0.9306;0.9302;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
DecisionTreeClassifier;0.9267;0.9286;0.9267;0.9267;0.9097;0.9101;0.9097;0.9094;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
MLPClassifier;0.9097;0.9134;0.9097;0.9098;0.9375;0.9374;0.9375;0.9373;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
DecisionTreeClassifier;0.929;0.9301;0.929;0.9289;0.9236;0.9264;0.9236;0.923;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
DecisionTreeClassifier;0.9259;0.9278;0.9259;0.9258;0.9514;0.9514;0.9514;0.9514;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.9236;0.9245;0.9236;0.9235;0.9444;0.9454;0.9444;0.9444;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.9305;0.9324;0.9305;0.9304;0.9167;0.917;0.9167;0.9163;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
MLPClassifier;0.9074;0.9128;0.9074;0.9076;0.9236;0.9239;0.9236;0.923;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
DecisionTreeClassifier;0.9236;0.9258;0.9236;0.9234;0.9375;0.9403;0.9375;0.9374;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
MLPClassifier;0.9043;0.9077;0.9043;0.9043;0.9375;0.9374;0.9375;0.9373;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
DecisionTreeClassifier;0.9321;0.9336;0.9321;0.932;0.8889;0.8916;0.8889;0.8895;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.922;0.9246;0.922;0.9218;0.9236;0.9281;0.9236;0.9238;0.8167;0.8175;0.8167;0.816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
MLPClassifier;0.9051;0.9104;0.9051;0.9053;0.9236;0.9234;0.9236;0.9235;0.8167;0.8172;0.8167;0.8155;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
RandomForestClassifier;0.9305;0.9316;0.9305;0.9305;0.9306;0.9324;0.9306;0.9301;0.8167;0.8178;0.8167;0.8148;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
RandomForestClassifier;0.9259;0.9272;0.9259;0.9258;0.9236;0.928;0.9236;0.9238;0.8167;0.8241;0.8167;0.8144;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 308};RandomForestClassifier(n_estimators=10, random_state=308)
KNeighborsClassifier;0.912;0.9155;0.912;0.912;0.9028;0.9071;0.9028;0.9033;0.8167;0.8163;0.8167;0.8141;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
RandomForestClassifier;0.9282;0.93;0.9282;0.9278;0.9028;0.9024;0.9028;0.9023;0.8167;0.8165;0.8167;0.8135;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
KNeighborsClassifier;0.9043;0.9077;0.9043;0.9036;0.9167;0.9185;0.9167;0.9156;0.8167;0.8222;0.8167;0.8106;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(weights='distance')
KNeighborsClassifier;0.9098;0.9132;0.9098;0.9097;0.8681;0.8836;0.8681;0.8691;0.8;0.8232;0.8;0.8046;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.9005;0.9057;0.9005;0.9006;0.9167;0.9222;0.9167;0.9178;0.8;0.8094;0.8;0.802;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'minkowski', 'n_neighbors': 15, 'weights': 'distance'};KNeighborsClassifier(n_neighbors=15, weights='distance')
SVC;0.8805;0.8897;0.8805;0.8808;0.9236;0.9312;0.9236;0.9231;0.8;0.8022;0.8;0.8008;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
DecisionTreeClassifier;0.9251;0.9271;0.9251;0.9252;0.9444;0.9498;0.9444;0.9446;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
SVC;0.8773;0.8892;0.8773;0.8783;0.9583;0.9597;0.9583;0.9585;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
DecisionTreeClassifier;0.9282;0.9297;0.9282;0.9283;0.9236;0.9247;0.9236;0.9236;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
SVC;0.8889;0.8967;0.8889;0.8887;0.9097;0.913;0.9097;0.9102;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8781;0.8864;0.8781;0.8786;0.9653;0.9669;0.9653;0.9655;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8812;0.8911;0.8812;0.8814;0.9236;0.927;0.9236;0.9229;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.8828;0.8922;0.8828;0.8831;0.9306;0.9357;0.9306;0.9307;0.8;0.8005;0.8;0.7999;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.8835;0.8911;0.8835;0.8839;0.8958;0.9056;0.8958;0.8955;0.8;0.8014;0.8;0.7998;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.885;0.8935;0.885;0.8854;0.9375;0.9382;0.9375;0.9372;0.8;0.8014;0.8;0.7998;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
RandomForestClassifier;0.9321;0.9334;0.9321;0.9323;0.9028;0.9044;0.9028;0.9031;0.8;0.8016;0.8;0.7997;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 53};RandomForestClassifier(n_estimators=10, random_state=53)
RandomForestClassifier;0.9221;0.9242;0.9221;0.9221;0.9444;0.9452;0.9444;0.9446;0.8;0.8016;0.8;0.7997;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 726};RandomForestClassifier(n_estimators=5, random_state=726)
SVC;0.8835;0.8913;0.8835;0.8838;0.9097;0.9108;0.9097;0.9097;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8851;0.8932;0.8851;0.8853;0.9375;0.9447;0.9375;0.9371;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8866;0.8939;0.8866;0.8872;0.9236;0.9294;0.9236;0.9237;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.8858;0.8937;0.8858;0.8859;0.8819;0.8866;0.8819;0.8824;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.8835;0.8919;0.8835;0.8836;0.9097;0.9155;0.9097;0.9091;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.875;0.8859;0.875;0.8757;0.9306;0.9307;0.9306;0.9302;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.8835;0.8919;0.8835;0.884;0.9236;0.9331;0.9236;0.9224;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.8835;0.8917;0.8835;0.8841;0.9097;0.9138;0.9097;0.9093;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 831};SVC(C=10, random_state=831)
SVC;0.8843;0.8916;0.8843;0.8846;0.9028;0.9168;0.9028;0.901;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.8796;0.8883;0.8796;0.8799;0.9514;0.9522;0.9514;0.9513;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.8812;0.8893;0.8812;0.881;0.9306;0.9344;0.9306;0.9304;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.8905;0.899;0.8905;0.8909;0.8889;0.8942;0.8889;0.8884;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
SVC;0.8812;0.8898;0.8812;0.8816;0.9167;0.9218;0.9167;0.915;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8881;0.8958;0.8881;0.8887;0.9028;0.906;0.9028;0.903;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
SVC;0.8788;0.8881;0.8788;0.8793;0.9444;0.9475;0.9444;0.9438;0.8;0.7997;0.8;0.7995;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
RandomForestClassifier;0.9267;0.9299;0.9267;0.9266;0.875;0.883;0.875;0.8764;0.8;0.8042;0.8;0.7992;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
RandomForestClassifier;0.929;0.93;0.929;0.9288;0.9306;0.9321;0.9306;0.93;0.8;0.8042;0.8;0.7992;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 53};RandomForestClassifier(n_estimators=10, random_state=53)
RandomForestClassifier;0.9298;0.9307;0.9298;0.9297;0.9236;0.9256;0.9236;0.9232;0.8;0.8042;0.8;0.7992;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
MLPClassifier;0.9082;0.9121;0.9082;0.9082;0.9444;0.9457;0.9444;0.9446;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
MLPClassifier;0.9044;0.909;0.9044;0.9044;0.9444;0.9477;0.9444;0.9441;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9027;0.9075;0.9027;0.9029;0.9653;0.9657;0.9653;0.9654;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
MLPClassifier;0.9028;0.9074;0.9028;0.9026;0.9306;0.9372;0.9306;0.9305;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.912;0.9163;0.912;0.9119;0.9236;0.9289;0.9236;0.9245;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.9128;0.9153;0.9128;0.9127;0.9167;0.919;0.9167;0.9168;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9097;0.915;0.9097;0.9101;0.9236;0.9276;0.9236;0.9227;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9136;0.9169;0.9136;0.9138;0.8681;0.8681;0.8681;0.8675;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9066;0.9116;0.9066;0.9067;0.9444;0.9447;0.9444;0.9445;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
MLPClassifier;0.912;0.9156;0.912;0.9121;0.9375;0.942;0.9375;0.938;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9121;0.9171;0.9121;0.912;0.9375;0.9378;0.9375;0.9376;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9028;0.9059;0.9028;0.9026;0.9861;0.9863;0.9861;0.9861;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9012;0.9043;0.9012;0.9015;0.9514;0.9549;0.9514;0.9519;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
MLPClassifier;0.9151;0.9194;0.9151;0.9151;0.9167;0.9166;0.9167;0.9164;0.8;0.8026;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
MLPClassifier;0.9128;0.9162;0.9128;0.9128;0.9306;0.9308;0.9306;0.9306;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.9066;0.912;0.9066;0.9069;0.9028;0.9072;0.9028;0.902;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
MLPClassifier;0.9136;0.9179;0.9136;0.9136;0.9167;0.9187;0.9167;0.9168;0.8;0.8005;0.8;0.7989;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 163, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=163)
MLPClassifier;0.9167;0.9207;0.9167;0.9165;0.9097;0.9115;0.9097;0.9102;0.8;0.8018;0.8;0.7986;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
RandomForestClassifier;0.9267;0.9277;0.9267;0.9265;0.9306;0.9303;0.9306;0.93;0.8;0.8019;0.8;0.7985;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 53};RandomForestClassifier(n_estimators=5, random_state=53)
RandomForestClassifier;0.929;0.9302;0.929;0.9289;0.9514;0.9515;0.9514;0.9512;0.8;0.7989;0.8;0.7985;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 308};RandomForestClassifier(n_estimators=10, random_state=308)
RandomForestClassifier;0.9213;0.9236;0.9213;0.9211;0.9514;0.9521;0.9514;0.9511;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.936;0.9367;0.936;0.9359;0.9028;0.9027;0.9028;0.9027;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.919;0.9214;0.919;0.9189;0.9653;0.9668;0.9653;0.9655;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.9174;0.9183;0.9174;0.9169;0.9792;0.9796;0.9792;0.9792;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9313;0.9323;0.9313;0.9311;0.8819;0.8834;0.8819;0.8814;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.9298;0.9309;0.9298;0.9296;0.9236;0.9247;0.9236;0.9236;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
RandomForestClassifier;0.9221;0.9244;0.9221;0.9219;0.9514;0.9539;0.9514;0.9512;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
RandomForestClassifier;0.9352;0.9367;0.9352;0.9352;0.9375;0.9382;0.9375;0.9365;0.8;0.8012;0.8;0.7981;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
KNeighborsClassifier;0.909;0.9142;0.909;0.909;0.8889;0.8977;0.8889;0.8881;0.7833;0.8098;0.7833;0.7865;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'uniform'};KNeighborsClassifier(metric='manhattan', p=1)
MLPClassifier;0.9058;0.9102;0.9058;0.9058;0.9375;0.9384;0.9375;0.9368;0.7833;0.7857;0.7833;0.7835;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
RandomForestClassifier;0.9205;0.9221;0.9205;0.9202;0.9028;0.9042;0.9028;0.903;0.7833;0.7917;0.7833;0.7831;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
SVC;0.8781;0.8868;0.8781;0.8789;0.9306;0.9346;0.9306;0.9308;0.7833;0.785;0.7833;0.7829;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 58};SVC(C=10, random_state=58)
RandomForestClassifier;0.9298;0.9318;0.9298;0.9295;0.9097;0.9113;0.9097;0.91;0.7833;0.7868;0.7833;0.7826;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9275;0.9286;0.9275;0.9274;0.9583;0.9607;0.9583;0.9587;0.7833;0.7861;0.7833;0.7823;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 726};RandomForestClassifier(n_estimators=20, random_state=726)
MLPClassifier;0.8997;0.9041;0.8997;0.8995;0.9306;0.9324;0.9306;0.9306;0.7833;0.7906;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
DecisionTreeClassifier;0.9259;0.9275;0.9259;0.9261;0.9306;0.9313;0.9306;0.9307;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
DecisionTreeClassifier;0.9228;0.9263;0.9228;0.9229;0.9236;0.9312;0.9236;0.9241;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
DecisionTreeClassifier;0.9274;0.9295;0.9274;0.9276;0.9097;0.9111;0.9097;0.9091;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.9143;0.9183;0.9143;0.9143;0.9514;0.9519;0.9514;0.9512;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
SVC;0.8796;0.889;0.8796;0.8798;0.9514;0.9534;0.9514;0.9516;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 64};SVC(C=10, random_state=64)
DecisionTreeClassifier;0.9259;0.9286;0.9259;0.9258;0.9375;0.9372;0.9375;0.9369;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.9212;0.9239;0.9212;0.9213;0.9306;0.9312;0.9306;0.9304;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
DecisionTreeClassifier;0.9305;0.9314;0.9305;0.9304;0.9167;0.9164;0.9167;0.9157;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
DecisionTreeClassifier;0.9352;0.9373;0.9352;0.9351;0.9236;0.9232;0.9236;0.9229;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
MLPClassifier;0.9089;0.9125;0.9089;0.9089;0.9236;0.9282;0.9236;0.9232;0.7833;0.7831;0.7833;0.7822;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 567, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=567)
MLPClassifier;0.9066;0.9101;0.9066;0.9067;0.8819;0.8946;0.8819;0.8831;0.7833;0.7813;0.7833;0.782;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
RandomForestClassifier;0.919;0.9202;0.919;0.9188;0.9444;0.9481;0.9444;0.9445;0.7833;0.7854;0.7833;0.7813;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9275;0.9291;0.9275;0.9272;0.9375;0.9396;0.9375;0.9376;0.7833;0.782;0.7833;0.7813;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
RandomForestClassifier;0.9252;0.9262;0.9252;0.925;0.9514;0.9519;0.9514;0.9515;0.7833;0.7854;0.7833;0.7813;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
RandomForestClassifier;0.9406;0.9421;0.9406;0.9405;0.8958;0.8966;0.8958;0.896;0.7833;0.7854;0.7833;0.7813;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
DecisionTreeClassifier;0.9136;0.9176;0.9136;0.9136;0.9444;0.9475;0.9444;0.9438;0.7667;0.7774;0.7667;0.7682;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
MLPClassifier;0.9105;0.9152;0.9105;0.9106;0.8889;0.8955;0.8889;0.8884;0.7667;0.7671;0.7667;0.7666;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 242, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=242)
RandomForestClassifier;0.9313;0.9321;0.9313;0.9311;0.9444;0.9452;0.9444;0.9446;0.7667;0.7702;0.7667;0.766;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
DecisionTreeClassifier;0.9213;0.9247;0.9213;0.9215;0.9444;0.9461;0.9444;0.9444;0.7667;0.7655;0.7667;0.7657;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
DecisionTreeClassifier;0.9252;0.9296;0.9252;0.9255;0.9028;0.9093;0.9028;0.9033;0.7667;0.7655;0.7667;0.7657;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
DecisionTreeClassifier;0.9305;0.9323;0.9305;0.9305;0.9167;0.9166;0.9167;0.9164;0.7667;0.7655;0.7667;0.7657;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
RandomForestClassifier;0.929;0.9313;0.929;0.9289;0.9236;0.9236;0.9236;0.9231;0.7667;0.7701;0.7667;0.7656;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 726};RandomForestClassifier(n_estimators=5, random_state=726)
RandomForestClassifier;0.9251;0.9292;0.9251;0.925;0.9167;0.9221;0.9167;0.9164;0.7667;0.7668;0.7667;0.7655;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 726};RandomForestClassifier(n_estimators=10, random_state=726)
RandomForestClassifier;0.936;0.9376;0.936;0.936;0.9028;0.9025;0.9028;0.9018;0.7667;0.7672;0.7667;0.7646;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 308};RandomForestClassifier(n_estimators=20, random_state=308)
DecisionTreeClassifier;0.9259;0.9269;0.9259;0.926;0.9514;0.9513;0.9514;0.9511;0.7667;0.7672;0.7667;0.7646;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
DecisionTreeClassifier;0.929;0.9302;0.929;0.9289;0.9306;0.9305;0.9306;0.9302;0.7667;0.7672;0.7667;0.7646;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 682};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=682)
DecisionTreeClassifier;0.9198;0.9232;0.9198;0.9199;0.9444;0.9467;0.9444;0.9447;0.75;0.7649;0.75;0.7513;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 425};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=425)
RandomForestClassifier;0.9259;0.9268;0.9259;0.9256;0.9097;0.9178;0.9097;0.9101;0.75;0.7593;0.75;0.7512;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 53};RandomForestClassifier(n_estimators=20, random_state=53)
DecisionTreeClassifier;0.9336;0.9354;0.9336;0.9338;0.8889;0.8897;0.8889;0.8879;0.75;0.7487;0.75;0.7484;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 351};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=351)
LogisticRegression;0.801;0.8238;0.801;0.8032;0.7778;0.7911;0.7778;0.782;0.7167;0.7162;0.7167;0.7161;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7886;0.8109;0.7886;0.7911;0.7708;0.7906;0.7708;0.7721;0.7;0.7033;0.7;0.7009;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7916;0.8166;0.7916;0.7938;0.7986;0.8202;0.7986;0.8031;0.7;0.7033;0.7;0.7009;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7879;0.8098;0.7879;0.7902;0.7708;0.7955;0.7708;0.7722;0.7;0.7047;0.7;0.7004;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7786;0.7958;0.7786;0.7789;0.8264;0.8386;0.8264;0.8298;0.6833;0.688;0.6833;0.6845;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.784;0.8049;0.784;0.7867;0.8264;0.8363;0.8264;0.828;0.6833;0.6883;0.6833;0.684;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7901;0.8113;0.7901;0.7926;0.7986;0.8203;0.7986;0.8021;0.6833;0.6898;0.6833;0.6834;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7816;0.8061;0.7816;0.7837;0.7778;0.7823;0.7778;0.7759;0.6833;0.6828;0.6833;0.6828;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7824;0.806;0.7824;0.7844;0.8194;0.8291;0.8194;0.8189;0.6833;0.6841;0.6833;0.6816;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7947;0.8137;0.7947;0.796;0.7222;0.7573;0.7222;0.721;0.6667;0.6759;0.6667;0.6683;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7863;0.8108;0.7863;0.7879;0.75;0.7947;0.75;0.7488;0.6667;0.6759;0.6667;0.6683;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7769;0.7947;0.7769;0.7785;0.7708;0.7997;0.7708;0.7731;0.6667;0.6759;0.6667;0.6683;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7824;0.8038;0.7824;0.7849;0.7917;0.8262;0.7917;0.7967;0.6667;0.6759;0.6667;0.6683;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7747;0.7977;0.7747;0.7765;0.8333;0.849;0.8333;0.8353;0.6667;0.6759;0.6667;0.6683;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7801;0.8026;0.7801;0.7829;0.7847;0.8155;0.7847;0.7879;0.6667;0.6759;0.6667;0.6683;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7754;0.7984;0.7754;0.7778;0.8333;0.8578;0.8333;0.8365;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7886;0.8107;0.7886;0.7908;0.7778;0.7984;0.7778;0.7808;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7901;0.8084;0.7901;0.7913;0.7778;0.7882;0.7778;0.774;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7785;0.8023;0.7785;0.7807;0.7847;0.8135;0.7847;0.7895;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7816;0.8004;0.7816;0.7832;0.7917;0.8132;0.7917;0.7961;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7778;0.7968;0.7778;0.7798;0.7847;0.8012;0.7847;0.789;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7878;0.8128;0.7878;0.7899;0.7917;0.8238;0.7917;0.7927;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7893;0.8112;0.7893;0.7917;0.7778;0.8294;0.7778;0.7834;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7839;0.8082;0.7839;0.7861;0.8403;0.862;0.8403;0.8419;0.6667;0.6727;0.6667;0.6678;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7941;0.816;0.7941;0.7964;0.8056;0.8295;0.8056;0.8081;0.6667;0.6686;0.6667;0.6674;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7877;0.8096;0.7877;0.7897;0.7917;0.8209;0.7917;0.7952;0.6667;0.6707;0.6667;0.6669;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7848;0.8017;0.7848;0.786;0.7986;0.8075;0.7986;0.7997;0.6667;0.6683;0.6667;0.6667;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
LogisticRegression;0.7855;0.8087;0.7855;0.787;0.7639;0.762;0.7639;0.7626;0.6667;0.6667;0.6667;0.6658;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 372, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=372)"
LogisticRegression;0.7909;0.8139;0.7909;0.7929;0.75;0.7608;0.75;0.7509;0.6667;0.6667;0.6667;0.6658;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 315, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=315)"
LogisticRegression;0.7785;0.7988;0.7785;0.7812;0.7361;0.7576;0.7361;0.7409;0.6333;0.632;0.6333;0.6324;smote;500;StandardScaler;['storyPoints', 'polarity', 'stress', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'penalty': 'l2', 'random_state': 539, 'solver': 'lbfgs'};"LogisticRegression(C=10, max_iter=100000, multi_class='multinomial',
                   random_state=539)"
