Algorithm;Train Accuracy;Train Precision;Train Recall;Train F1 Score;Test Accuracy;Test Precision;Test Recall;Test F1 Score;Val. Accuracy;Val. Precision;Val. Recall;Val. F1 Score;Bal. Strategy;SMOTE Instances;Scale;Features;Folds;Hyper Params.;Model
RandomForestClassifier;0.8804;0.8851;0.8804;0.8805;0.8681;0.8685;0.8681;0.8682;0.9167;0.9212;0.9167;0.9174;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.882;0.8851;0.882;0.8822;0.875;0.8749;0.875;0.8748;0.9167;0.9212;0.9167;0.9174;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.8781;0.8807;0.8781;0.8785;0.9167;0.919;0.9167;0.917;0.9167;0.9228;0.9167;0.9168;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 530};RandomForestClassifier(n_estimators=20, random_state=530)
RandomForestClassifier;0.8688;0.8727;0.8688;0.869;0.9444;0.9444;0.9444;0.9444;0.9167;0.9174;0.9167;0.9166;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 919};RandomForestClassifier(n_estimators=20, random_state=919)
RandomForestClassifier;0.8797;0.8834;0.8797;0.88;0.8889;0.8898;0.8889;0.8888;0.9;0.9087;0.9;0.9009;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 919};RandomForestClassifier(n_estimators=10, random_state=919)
RandomForestClassifier;0.8889;0.8911;0.8889;0.8888;0.8819;0.8838;0.8819;0.8818;0.9;0.9027;0.9;0.8998;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 919};RandomForestClassifier(n_estimators=20, random_state=919)
RandomForestClassifier;0.8819;0.8851;0.8819;0.8822;0.8542;0.8626;0.8542;0.8563;0.9;0.9027;0.9;0.8998;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 919};RandomForestClassifier(n_estimators=20, random_state=919)
RandomForestClassifier;0.8811;0.8844;0.8811;0.8815;0.8889;0.8882;0.8889;0.8883;0.9;0.9027;0.9;0.8998;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 919};RandomForestClassifier(n_estimators=20, random_state=919)
RandomForestClassifier;0.8804;0.8844;0.8804;0.8809;0.8333;0.8453;0.8333;0.8354;0.8833;0.892;0.8833;0.8842;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.8881;0.8913;0.8881;0.8884;0.8819;0.8826;0.8819;0.8822;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 919};RandomForestClassifier(n_estimators=20, random_state=919)
RandomForestClassifier;0.885;0.8889;0.885;0.8853;0.8611;0.8607;0.8611;0.8604;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 919};RandomForestClassifier(n_estimators=10, random_state=919)
RandomForestClassifier;0.875;0.8786;0.875;0.8751;0.8611;0.8715;0.8611;0.8635;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 919};RandomForestClassifier(n_estimators=20, random_state=919)
RandomForestClassifier;0.8858;0.8882;0.8858;0.8861;0.8958;0.8953;0.8958;0.8954;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 530};RandomForestClassifier(n_estimators=20, random_state=530)
RandomForestClassifier;0.8881;0.8907;0.8881;0.8882;0.8889;0.8912;0.8889;0.8896;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 133};RandomForestClassifier(n_estimators=10, random_state=133)
RandomForestClassifier;0.8804;0.8819;0.8804;0.8804;0.9028;0.9036;0.9028;0.9024;0.8833;0.8884;0.8833;0.8834;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.8804;0.8846;0.8804;0.8804;0.9097;0.9096;0.9097;0.9084;0.8833;0.8873;0.8833;0.8826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.8843;0.8874;0.8843;0.8845;0.9028;0.9047;0.9028;0.9033;0.8833;0.8842;0.8833;0.8823;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 919};RandomForestClassifier(n_estimators=20, random_state=919)
RandomForestClassifier;0.8842;0.8874;0.8842;0.8846;0.8958;0.8961;0.8958;0.8948;0.8667;0.8806;0.8667;0.8675;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 530};RandomForestClassifier(n_estimators=10, random_state=530)
RandomForestClassifier;0.8804;0.8833;0.8804;0.8808;0.875;0.8822;0.875;0.876;0.8667;0.8806;0.8667;0.8675;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 530};RandomForestClassifier(n_estimators=10, random_state=530)
RandomForestClassifier;0.8804;0.8834;0.8804;0.8806;0.9167;0.9166;0.9167;0.9162;0.8667;0.875;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 530};RandomForestClassifier(n_estimators=20, random_state=530)
RandomForestClassifier;0.8927;0.8963;0.8927;0.893;0.8056;0.8068;0.8056;0.8061;0.8667;0.875;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 530};RandomForestClassifier(n_estimators=20, random_state=530)
RandomForestClassifier;0.8742;0.8773;0.8742;0.8746;0.8889;0.8889;0.8889;0.8889;0.8667;0.875;0.8667;0.8668;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.8796;0.8817;0.8796;0.8795;0.8681;0.8721;0.8681;0.8688;0.8667;0.8829;0.8667;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 530};RandomForestClassifier(n_estimators=20, random_state=530)
KNeighborsClassifier;0.8117;0.8183;0.8117;0.8124;0.8958;0.8988;0.8958;0.8966;0.8667;0.8829;0.8667;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8087;0.8181;0.8087;0.8099;0.8958;0.899;0.8958;0.8951;0.8667;0.8829;0.8667;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8048;0.8164;0.8048;0.8058;0.8819;0.8847;0.8819;0.8825;0.8667;0.8829;0.8667;0.8663;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.868;0.8697;0.868;0.8678;0.8681;0.88;0.8681;0.8704;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
KNeighborsClassifier;0.8117;0.8183;0.8117;0.8122;0.8194;0.8184;0.8194;0.8185;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8681;0.872;0.8681;0.8684;0.8333;0.8396;0.8333;0.8352;0.8667;0.8724;0.8667;0.8662;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
RandomForestClassifier;0.8866;0.8889;0.8866;0.8866;0.8333;0.8314;0.8333;0.8301;0.8667;0.8675;0.8667;0.8656;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 919};RandomForestClassifier(n_estimators=10, random_state=919)
KNeighborsClassifier;0.811;0.8217;0.811;0.8124;0.8264;0.8286;0.8264;0.827;0.85;0.8669;0.85;0.8505;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
RandomForestClassifier;0.8673;0.8711;0.8673;0.8671;0.8958;0.8952;0.8958;0.8955;0.85;0.8563;0.85;0.8504;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 5, 'random_state': 133};RandomForestClassifier(n_estimators=5, random_state=133)
RandomForestClassifier;0.8842;0.8866;0.8842;0.8845;0.8819;0.885;0.8819;0.8827;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 10, 'random_state': 530};RandomForestClassifier(n_estimators=10, random_state=530)
RandomForestClassifier;0.8773;0.8804;0.8773;0.8775;0.8889;0.8907;0.8889;0.8892;0.85;0.8583;0.85;0.8497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
KNeighborsClassifier;0.8055;0.8152;0.8055;0.8071;0.8889;0.8891;0.8889;0.8888;0.85;0.8591;0.85;0.8495;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
RandomForestClassifier;0.8773;0.8807;0.8773;0.878;0.8819;0.8869;0.8819;0.8833;0.85;0.8508;0.85;0.849;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 133};RandomForestClassifier(n_estimators=20, random_state=133)
RandomForestClassifier;0.8727;0.8769;0.8727;0.8732;0.9375;0.939;0.9375;0.9374;0.85;0.8524;0.85;0.8488;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 530};RandomForestClassifier(n_estimators=20, random_state=530)
KNeighborsClassifier;0.8094;0.8153;0.8094;0.8101;0.8819;0.883;0.8819;0.8812;0.85;0.8724;0.85;0.8487;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.794;0.8066;0.794;0.7956;0.8611;0.8721;0.8611;0.862;0.85;0.8724;0.85;0.8487;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8117;0.8175;0.8117;0.8128;0.8403;0.8432;0.8403;0.841;0.85;0.8696;0.85;0.8482;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8086;0.8157;0.8086;0.8097;0.8472;0.8581;0.8472;0.8491;0.85;0.8699;0.85;0.8481;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.797;0.8047;0.797;0.7977;0.9097;0.9097;0.9097;0.9096;0.85;0.8699;0.85;0.8481;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7138;0.7187;0.7138;0.7142;0.8542;0.862;0.8542;0.8555;0.8333;0.8379;0.8333;0.8333;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
KNeighborsClassifier;0.7962;0.8057;0.7962;0.7968;0.8472;0.86;0.8472;0.8493;0.8333;0.8603;0.8333;0.8332;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 15, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=15, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8149;0.824;0.8149;0.816;0.8542;0.8603;0.8542;0.8547;0.8333;0.8465;0.8333;0.8328;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.8155;0.8189;0.8155;0.8157;0.8889;0.9002;0.8889;0.8899;0.8333;0.8551;0.8333;0.8326;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8187;0.8238;0.8187;0.8195;0.8125;0.8244;0.8125;0.8147;0.8333;0.8565;0.8333;0.8324;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
KNeighborsClassifier;0.8024;0.8086;0.8024;0.8037;0.8542;0.854;0.8542;0.8539;0.8333;0.8565;0.8333;0.8324;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.8627;0.8655;0.8627;0.8623;0.8542;0.8605;0.8542;0.8558;0.8333;0.8431;0.8333;0.8323;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
DecisionTreeClassifier;0.8627;0.8657;0.8627;0.8624;0.8611;0.8763;0.8611;0.8636;0.8333;0.8431;0.8333;0.8323;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
DecisionTreeClassifier;0.8642;0.8696;0.8642;0.864;0.8819;0.8833;0.8819;0.8807;0.8333;0.8348;0.8333;0.8317;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
RandomForestClassifier;0.8874;0.8902;0.8874;0.8875;0.875;0.8758;0.875;0.8751;0.8333;0.8361;0.8333;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'n_estimators': 20, 'random_state': 530};RandomForestClassifier(n_estimators=20, random_state=530)
DecisionTreeClassifier;0.8704;0.8723;0.8704;0.8703;0.8194;0.82;0.8194;0.818;0.8333;0.8361;0.8333;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
KNeighborsClassifier;0.8225;0.8312;0.8225;0.8234;0.8125;0.8236;0.8125;0.8132;0.8333;0.8447;0.8333;0.8315;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 5, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', p=1, weights='distance')
DecisionTreeClassifier;0.8549;0.8564;0.8549;0.8547;0.8819;0.8878;0.8819;0.8826;0.8333;0.8448;0.8333;0.831;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
KNeighborsClassifier;0.8048;0.8136;0.8048;0.8057;0.8681;0.8697;0.8681;0.8675;0.8333;0.8448;0.8333;0.831;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8117;0.8195;0.8117;0.8132;0.8889;0.8898;0.8889;0.8892;0.8333;0.8594;0.8333;0.8298;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
KNeighborsClassifier;0.7963;0.8032;0.7963;0.7972;0.8611;0.861;0.8611;0.8599;0.8333;0.8581;0.8333;0.8296;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8172;0.8234;0.8172;0.818;0.875;0.8777;0.875;0.8745;0.8333;0.8581;0.8333;0.8296;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
KNeighborsClassifier;0.8041;0.81;0.8041;0.8049;0.8681;0.8687;0.8681;0.8678;0.8333;0.8581;0.8333;0.8296;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
MLPClassifier;0.7099;0.7161;0.7099;0.7102;0.8264;0.8531;0.8264;0.8308;0.8167;0.8277;0.8167;0.8175;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
MLPClassifier;0.7022;0.7083;0.7022;0.7018;0.8958;0.8957;0.8958;0.8949;0.8167;0.8201;0.8167;0.8173;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
KNeighborsClassifier;0.8017;0.8075;0.8017;0.8023;0.8681;0.877;0.8681;0.8699;0.8167;0.8468;0.8167;0.8144;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.821;0.8272;0.821;0.8217;0.8889;0.8882;0.8889;0.8884;0.8167;0.8468;0.8167;0.8144;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8032;0.8095;0.8032;0.8037;0.9097;0.9108;0.9097;0.9097;0.8167;0.8468;0.8167;0.8144;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8086;0.817;0.8086;0.8096;0.8681;0.8681;0.8681;0.8681;0.8167;0.8468;0.8167;0.8144;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
KNeighborsClassifier;0.8024;0.8076;0.8024;0.8032;0.8889;0.8951;0.8889;0.8904;0.8167;0.8468;0.8167;0.8144;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 13, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=13, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8518;0.8541;0.8518;0.852;0.8125;0.8168;0.8125;0.8135;0.8167;0.8222;0.8167;0.8138;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
DecisionTreeClassifier;0.8649;0.8683;0.8649;0.8649;0.8403;0.8424;0.8403;0.8403;0.8167;0.8191;0.8167;0.8136;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
KNeighborsClassifier;0.8009;0.8096;0.8009;0.8024;0.875;0.8747;0.875;0.8748;0.8167;0.8327;0.8167;0.8128;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 9, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=9, p=1, weights='distance')
DecisionTreeClassifier;0.868;0.87;0.868;0.8681;0.8819;0.8867;0.8819;0.8833;0.8;0.8042;0.8;0.801;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
DecisionTreeClassifier;0.8557;0.8589;0.8557;0.8559;0.8889;0.8918;0.8889;0.8899;0.8;0.8144;0.8;0.7997;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
MLPClassifier;0.716;0.7236;0.716;0.7167;0.8403;0.8478;0.8403;0.842;0.8;0.802;0.8;0.7997;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
MLPClassifier;0.6999;0.7058;0.6999;0.7004;0.8194;0.8186;0.8194;0.8183;0.8;0.8108;0.8;0.7996;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
MLPClassifier;0.7106;0.7163;0.7106;0.7104;0.9236;0.9236;0.9236;0.9236;0.8;0.8108;0.8;0.7996;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
KNeighborsClassifier;0.814;0.819;0.814;0.8147;0.8264;0.8369;0.8264;0.8282;0.8;0.8309;0.8;0.7991;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 7, 'weights': 'distance'};KNeighborsClassifier(metric='manhattan', n_neighbors=7, p=1, weights='distance')
DecisionTreeClassifier;0.875;0.8768;0.875;0.8745;0.8194;0.8269;0.8194;0.8199;0.8;0.8082;0.8;0.7972;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
DecisionTreeClassifier;0.8603;0.8638;0.8603;0.8603;0.8542;0.8549;0.8542;0.8544;0.8;0.8009;0.8;0.7967;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
DecisionTreeClassifier;0.865;0.8669;0.865;0.865;0.7986;0.8077;0.7986;0.8003;0.8;0.8168;0.8;0.7965;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
MLPClassifier;0.7121;0.7188;0.7121;0.7127;0.8472;0.8483;0.8472;0.847;0.7833;0.7905;0.7833;0.7838;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
MLPClassifier;0.6983;0.7027;0.6983;0.6985;0.8472;0.8499;0.8472;0.8481;0.7833;0.7917;0.7833;0.7831;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
MLPClassifier;0.6998;0.7056;0.6998;0.6999;0.8125;0.8137;0.8125;0.8126;0.7833;0.7917;0.7833;0.7831;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
MLPClassifier;0.6998;0.7094;0.6998;0.7007;0.7847;0.7892;0.7847;0.7857;0.7833;0.7934;0.7833;0.7826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
MLPClassifier;0.7021;0.7099;0.7021;0.7013;0.8542;0.8611;0.8542;0.8561;0.7833;0.7934;0.7833;0.7826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
MLPClassifier;0.693;0.7011;0.693;0.6938;0.8403;0.8453;0.8403;0.8418;0.7833;0.7861;0.7833;0.7823;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
DecisionTreeClassifier;0.8596;0.8611;0.8596;0.8594;0.8403;0.8515;0.8403;0.8428;0.7833;0.7897;0.7833;0.7823;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
MLPClassifier;0.706;0.712;0.706;0.7064;0.8472;0.8524;0.8472;0.8487;0.7833;0.7917;0.7833;0.782;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
KNeighborsClassifier;0.8248;0.8299;0.8248;0.8248;0.8611;0.8694;0.8611;0.8624;0.7833;0.8072;0.7833;0.7808;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'metric': 'manhattan', 'n_neighbors': 11, 'weights': 'distance'};"KNeighborsClassifier(metric='manhattan', n_neighbors=11, p=1,
                     weights='distance')"
DecisionTreeClassifier;0.8595;0.8637;0.8595;0.8598;0.8333;0.8574;0.8333;0.8374;0.7833;0.7945;0.7833;0.7802;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8635;0.8665;0.8635;0.8631;0.8125;0.8115;0.8125;0.8107;0.7833;0.7871;0.7833;0.7793;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
DecisionTreeClassifier;0.8626;0.8658;0.8626;0.8625;0.8403;0.8531;0.8403;0.8423;0.7667;0.7717;0.7667;0.7679;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
MLPClassifier;0.706;0.7125;0.706;0.7063;0.8819;0.8814;0.8819;0.8812;0.7667;0.7718;0.7667;0.7672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
MLPClassifier;0.7044;0.7101;0.7044;0.7049;0.8542;0.857;0.8542;0.8543;0.7667;0.7758;0.7667;0.7672;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
DecisionTreeClassifier;0.8587;0.8598;0.8587;0.8583;0.8611;0.8711;0.8611;0.8631;0.7667;0.7761;0.7667;0.7667;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
MLPClassifier;0.7083;0.7165;0.7083;0.7093;0.7708;0.7717;0.7708;0.7707;0.7667;0.7702;0.7667;0.766;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
MLPClassifier;0.7138;0.7207;0.7138;0.7138;0.7986;0.7973;0.7986;0.7946;0.7667;0.7709;0.7667;0.7658;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
DecisionTreeClassifier;0.858;0.8605;0.858;0.8581;0.8611;0.8678;0.8611;0.8621;0.7667;0.762;0.7667;0.7621;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
DecisionTreeClassifier;0.8588;0.8641;0.8588;0.8592;0.9028;0.9033;0.9028;0.9028;0.7667;0.773;0.7667;0.7618;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
DecisionTreeClassifier;0.8549;0.8581;0.8549;0.8546;0.8958;0.8986;0.8958;0.8959;0.7667;0.773;0.7667;0.7618;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
DecisionTreeClassifier;0.858;0.8606;0.858;0.8578;0.8542;0.8549;0.8542;0.8544;0.7667;0.7698;0.7667;0.7615;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
MLPClassifier;0.7114;0.7185;0.7114;0.7122;0.8333;0.8417;0.8333;0.8342;0.75;0.7614;0.75;0.7513;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
DecisionTreeClassifier;0.872;0.875;0.872;0.8721;0.8403;0.8458;0.8403;0.8417;0.75;0.7543;0.75;0.7497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
MLPClassifier;0.7022;0.7075;0.7022;0.7032;0.8958;0.9007;0.8958;0.8969;0.75;0.7543;0.75;0.7497;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
MLPClassifier;0.6967;0.7032;0.6967;0.6974;0.8194;0.8274;0.8194;0.82;0.75;0.7625;0.75;0.7493;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
DecisionTreeClassifier;0.8588;0.8612;0.8588;0.8582;0.8958;0.8966;0.8958;0.8959;0.75;0.7625;0.75;0.7493;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
MLPClassifier;0.7153;0.7249;0.7153;0.7159;0.8333;0.8341;0.8333;0.8337;0.75;0.7763;0.75;0.7484;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
MLPClassifier;0.6913;0.696;0.6913;0.6917;0.8819;0.8844;0.8819;0.8808;0.75;0.7553;0.75;0.747;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
SVC;0.7206;0.7358;0.7206;0.7202;0.8264;0.8401;0.8264;0.8289;0.75;0.7977;0.75;0.7465;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
SVC;0.7153;0.7342;0.7153;0.7154;0.7917;0.7978;0.7917;0.7937;0.75;0.7977;0.75;0.7465;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7145;0.7336;0.7145;0.7153;0.8056;0.8155;0.8056;0.8072;0.75;0.7977;0.75;0.7465;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
SVC;0.7238;0.7455;0.7238;0.7231;0.8194;0.8428;0.8194;0.8219;0.75;0.7977;0.75;0.7465;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
SVC;0.713;0.7348;0.713;0.7129;0.8056;0.827;0.8056;0.8074;0.75;0.7977;0.75;0.7465;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
SVC;0.7284;0.7514;0.7284;0.7285;0.8125;0.8374;0.8125;0.8158;0.75;0.7811;0.75;0.7454;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
DecisionTreeClassifier;0.8603;0.8628;0.8603;0.86;0.875;0.8766;0.875;0.8755;0.75;0.7552;0.75;0.7442;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
DecisionTreeClassifier;0.8565;0.8593;0.8565;0.8566;0.8194;0.8243;0.8194;0.8211;0.75;0.7552;0.75;0.7442;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
SVC;0.7152;0.7339;0.7152;0.7144;0.8125;0.8227;0.8125;0.815;0.75;0.8052;0.75;0.7421;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
MLPClassifier;0.7145;0.7207;0.7145;0.7152;0.7986;0.811;0.7986;0.8019;0.7333;0.7487;0.7333;0.7341;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 752, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=752)
MLPClassifier;0.7036;0.7109;0.7036;0.7046;0.8056;0.8032;0.8056;0.801;0.7333;0.7361;0.7333;0.7313;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
SVC;0.7423;0.7578;0.7423;0.7427;0.8125;0.8273;0.8125;0.8136;0.7333;0.7828;0.7333;0.7312;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
DecisionTreeClassifier;0.8688;0.8708;0.8688;0.8687;0.8542;0.8587;0.8542;0.8533;0.7333;0.7381;0.7333;0.7312;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 759};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=759)
SVC;0.7175;0.7382;0.7175;0.7188;0.7778;0.8006;0.7778;0.7785;0.7333;0.7815;0.7333;0.73;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
SVC;0.7145;0.7422;0.7145;0.7152;0.9028;0.9068;0.9028;0.9036;0.7333;0.7653;0.7333;0.7298;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
SVC;0.716;0.7411;0.716;0.7165;0.8056;0.8354;0.8056;0.8106;0.7333;0.7653;0.7333;0.7298;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
SVC;0.7168;0.7357;0.7168;0.7166;0.8403;0.8632;0.8403;0.8437;0.7333;0.7653;0.7333;0.7298;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7175;0.7364;0.7175;0.7178;0.8056;0.8274;0.8056;0.8088;0.7333;0.7653;0.7333;0.7298;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.74;0.756;0.74;0.7409;0.75;0.7825;0.75;0.7559;0.7333;0.7653;0.7333;0.7298;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
SVC;0.7214;0.744;0.7214;0.7218;0.8056;0.8184;0.8056;0.807;0.7333;0.7653;0.7333;0.7298;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
DecisionTreeClassifier;0.865;0.867;0.865;0.865;0.8194;0.8274;0.8194;0.8196;0.7333;0.7389;0.7333;0.7296;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 365};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=365)
SVC;0.7199;0.7439;0.7199;0.7204;0.8403;0.8568;0.8403;0.8427;0.7333;0.7629;0.7333;0.7284;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
SVC;0.7137;0.738;0.7137;0.7147;0.8542;0.8647;0.8542;0.8558;0.7333;0.7896;0.7333;0.7269;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
SVC;0.7076;0.7277;0.7076;0.7071;0.8125;0.851;0.8125;0.8163;0.7333;0.7896;0.7333;0.7269;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
SVC;0.7168;0.7369;0.7168;0.7167;0.8056;0.8221;0.8056;0.8091;0.7333;0.7896;0.7333;0.7269;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7067;0.7264;0.7067;0.707;0.8472;0.8592;0.8472;0.8495;0.7333;0.7896;0.7333;0.7269;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
SVC;0.7191;0.7467;0.7191;0.7198;0.7986;0.8248;0.7986;0.8024;0.7333;0.7867;0.7333;0.7259;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7076;0.7301;0.7076;0.7078;0.8264;0.8298;0.8264;0.8276;0.7167;0.7683;0.7167;0.7157;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
DecisionTreeClassifier;0.865;0.8656;0.865;0.8647;0.8889;0.8982;0.8889;0.8895;0.7167;0.7236;0.7167;0.715;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_depth': 10, 'min_samples_leaf': 5, 'random_state': 524};DecisionTreeClassifier(max_depth=10, min_samples_leaf=5, random_state=524)
MLPClassifier;0.7131;0.7197;0.7131;0.7134;0.7986;0.8003;0.7986;0.799;0.7167;0.7214;0.7167;0.7149;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
SVC;0.7214;0.7467;0.7214;0.7225;0.7917;0.8174;0.7917;0.797;0.7167;0.75;0.7167;0.714;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
SVC;0.7107;0.7329;0.7107;0.712;0.7917;0.8034;0.7917;0.7939;0.7167;0.7378;0.7167;0.7132;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7145;0.7298;0.7145;0.7134;0.8333;0.8333;0.8333;0.8333;0.7167;0.7378;0.7167;0.7132;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 826};SVC(C=10, random_state=826)
MLPClassifier;0.6952;0.7016;0.6952;0.6954;0.8819;0.891;0.8819;0.8838;0.7167;0.7368;0.7167;0.7131;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
SVC;0.7238;0.7446;0.7238;0.723;0.7708;0.8117;0.7708;0.775;0.7167;0.7724;0.7167;0.7104;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
MLPClassifier;0.7044;0.7097;0.7044;0.7048;0.7986;0.8095;0.7986;0.8017;0.7;0.6998;0.7;0.6987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
SVC;0.7292;0.7493;0.7292;0.7301;0.8403;0.8423;0.8403;0.8404;0.7;0.7351;0.7;0.6981;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7214;0.7368;0.7214;0.7204;0.7778;0.7945;0.7778;0.7823;0.7;0.76;0.7;0.6963;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7138;0.7386;0.7138;0.7128;0.8194;0.8264;0.8194;0.8211;0.7;0.76;0.7;0.6963;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 723};SVC(C=10, random_state=723)
SVC;0.7153;0.7389;0.7153;0.7146;0.8125;0.8186;0.8125;0.8144;0.7;0.76;0.7;0.6963;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 10, 'kernel': 'rbf', 'random_state': 23};SVC(C=10, random_state=23)
MLPClassifier;0.7091;0.715;0.7091;0.7097;0.8056;0.8185;0.8056;0.8088;0.6833;0.6882;0.6833;0.6817;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 625, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=625)
MLPClassifier;0.7037;0.7081;0.7037;0.7036;0.8056;0.8082;0.8056;0.8067;0.6833;0.6921;0.6833;0.6785;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
MLPClassifier;0.7037;0.7102;0.7037;0.7035;0.7986;0.801;0.7986;0.7996;0.65;0.6528;0.65;0.6473;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'max_iter': 100000, 'random_state': 73, 'solver': 'adam'};MLPClassifier(max_iter=100000, random_state=73)
LogisticRegression;0.6358;0.6451;0.6358;0.6365;0.625;0.6267;0.625;0.6255;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6273;0.6366;0.6273;0.6284;0.6944;0.6941;0.6944;0.6942;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6389;0.6498;0.6389;0.6393;0.6458;0.6571;0.6458;0.6485;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6396;0.6467;0.6396;0.6403;0.6111;0.6306;0.6111;0.6125;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6359;0.6456;0.6359;0.6372;0.6736;0.6811;0.6736;0.6719;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6397;0.6517;0.6397;0.641;0.6181;0.6347;0.6181;0.6212;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6442;0.6596;0.6442;0.6456;0.6042;0.6224;0.6042;0.6081;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6405;0.6485;0.6405;0.6401;0.6597;0.6801;0.6597;0.6623;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6403;0.6518;0.6403;0.6417;0.5694;0.5765;0.5694;0.5701;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6381;0.6473;0.6381;0.6394;0.6389;0.6443;0.6389;0.6374;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6427;0.6584;0.6427;0.6433;0.6111;0.6253;0.6111;0.614;0.6167;0.6308;0.6167;0.6153;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6497;0.66;0.6497;0.6509;0.5486;0.5554;0.5486;0.5497;0.6167;0.6227;0.6167;0.6142;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6336;0.6431;0.6336;0.6335;0.6528;0.6536;0.6528;0.6526;0.6;0.6111;0.6;0.5999;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6466;0.6549;0.6466;0.6466;0.6042;0.6021;0.6042;0.6026;0.6;0.6091;0.6;0.5988;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6419;0.6495;0.6419;0.6427;0.6111;0.6186;0.6111;0.6117;0.6;0.6091;0.6;0.5988;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6311;0.6409;0.6311;0.6313;0.6597;0.6665;0.6597;0.661;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.632;0.6389;0.632;0.6329;0.6597;0.6928;0.6597;0.6626;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6357;0.6469;0.6357;0.6373;0.6389;0.6553;0.6389;0.6409;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6374;0.6501;0.6374;0.6389;0.6389;0.6395;0.6389;0.638;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6327;0.6419;0.6327;0.6332;0.6389;0.643;0.6389;0.6397;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.639;0.6487;0.639;0.6402;0.5972;0.6095;0.5972;0.6002;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6374;0.6446;0.6374;0.637;0.6042;0.6059;0.6042;0.6037;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6373;0.649;0.6373;0.6391;0.6806;0.6929;0.6806;0.6789;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6258;0.6337;0.6258;0.6249;0.7083;0.7263;0.7083;0.7123;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 679, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=679)"
LogisticRegression;0.6312;0.6388;0.6312;0.6296;0.6389;0.6504;0.6389;0.642;0.6;0.6083;0.6;0.5987;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6281;0.6352;0.6281;0.6273;0.6806;0.684;0.6806;0.6799;0.5833;0.5886;0.5833;0.5826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6328;0.6399;0.6328;0.6331;0.6528;0.6533;0.6528;0.6526;0.5833;0.5886;0.5833;0.5826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6335;0.6414;0.6335;0.6335;0.6319;0.6357;0.6319;0.633;0.5833;0.5886;0.5833;0.5826;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 1, 'penalty': 'l2', 'random_state': 595, 'solver': 'lbfgs'};"LogisticRegression(C=1, max_iter=100000, multi_class='multinomial',
                   random_state=595)"
LogisticRegression;0.6327;0.6452;0.6327;0.6341;0.6042;0.6067;0.6042;0.6052;0.5667;0.566;0.5667;0.5632;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
LogisticRegression;0.6334;0.6461;0.6334;0.6347;0.6597;0.6633;0.6597;0.6575;0.55;0.5494;0.55;0.5455;smote;500;MinMaxScaler;['storyPoints', 'polarity_mean', 'O', 'C', 'E', 'A', 'N'];10;{'C': 0.1, 'penalty': 'l2', 'random_state': 973, 'solver': 'lbfgs'};"LogisticRegression(C=0.1, max_iter=100000, multi_class='multinomial',
                   random_state=973)"
